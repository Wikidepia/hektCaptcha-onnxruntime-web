{"version":3,"file":"ort-web.es5.min.js","mappings":"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","sources":["webpack://onnxruntime-web/webpack/universalModuleDefinition","webpack://onnxruntime-web/./lib/backend-onnxjs.ts","webpack://onnxruntime-web/./lib/backend-wasm.ts","webpack://onnxruntime-web/./lib/index.ts","webpack://onnxruntime-web/./lib/onnxjs/attribute-with-cache-key.ts","webpack://onnxruntime-web/./lib/onnxjs/attribute.ts","webpack://onnxruntime-web/./lib/onnxjs/backend.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/backend-webgl.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-coordinate-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-definitions.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-encoding-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-fragcolor-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-function-inliner.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-preprocessor.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-registered-libs.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-shape-utils-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-source.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-vec-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/inference-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/op-resolve-rules.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/batch-normalization.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/binary-op.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/cast.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/concat-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/concat.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-grouped.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-transpose.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/depth-to-space.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/dot-product.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/flatten.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/fuse-utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/gather.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/gemm.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/im2col-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/im2col.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/image-scaler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/instance-normalization.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/lrn.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/matmul-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/matmul.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/packing-utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pad.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pool.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reduce.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reshape-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reshape.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/resize-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/shape.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/slice.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/softmax.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/split.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/squeeze.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/sum.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/tile.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/transpose.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/uint8-encode.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unary-op.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unpack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unsqueeze.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/upsample.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/program-manager.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/session-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-data-encoder.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-layout-strategy.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-layout.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-manager.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/types.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/webgl-context-factory.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/webgl-context.ts","webpack://onnxruntime-web/./lib/onnxjs/execution-plan.ts","webpack://onnxruntime-web/./lib/onnxjs/graph.ts","webpack://onnxruntime-web/./lib/onnxjs/instrument.ts","webpack://onnxruntime-web/./lib/onnxjs/model.ts","webpack://onnxruntime-web/./lib/onnxjs/operators.ts","webpack://onnxruntime-web/./lib/onnxjs/opset.ts","webpack://onnxruntime-web/./lib/onnxjs/ort-schema/ort-generated.ts","webpack://onnxruntime-web/./lib/onnxjs/session-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/session.ts","webpack://onnxruntime-web/./lib/onnxjs/tensor.ts","webpack://onnxruntime-web/./lib/onnxjs/util.ts","webpack://onnxruntime-web/./lib/wasm/jsep/backend-webgpu.ts","webpack://onnxruntime-web/./lib/wasm/jsep/init.ts","webpack://onnxruntime-web/./lib/wasm/jsep/log.ts","webpack://onnxruntime-web/./lib/wasm/jsep/util.ts","webpack://onnxruntime-web/./lib/wasm/jsep/webgpu/attribute-with-cache-key.ts","webpack://onnxruntime-web/./lib/wasm/jsep/webgpu/gpu-data-manager.ts","webpack://onnxruntime-web/./lib/wasm/jsep/webgpu/op-resolve-rules.ts","webpack://onnxruntime-web/./lib/wasm/jsep/webgpu/ops/3rd-party/activation_util.ts","webpack://onnxruntime-web/./lib/wasm/jsep/webgpu/ops/3rd-party/conv2d_mm_webgpu.ts","webpack://onnxruntime-web/./lib/wasm/jsep/webgpu/ops/3rd-party/conv_util.ts","webpack://onnxruntime-web/./lib/wasm/jsep/webgpu/ops/3rd-party/matmul_packed_webgpu.ts","webpack://onnxruntime-web/./lib/wasm/jsep/webgpu/ops/binary-op.ts","webpack://onnxruntime-web/./lib/wasm/jsep/webgpu/ops/common.ts","webpack://onnxruntime-web/./lib/wasm/jsep/webgpu/ops/conv-grouped.ts","webpack://onnxruntime-web/./lib/wasm/jsep/webgpu/ops/conv.ts","webpack://onnxruntime-web/./lib/wasm/jsep/webgpu/ops/conv2d-mm.ts","webpack://onnxruntime-web/./lib/wasm/jsep/webgpu/ops/fuse-utils.ts","webpack://onnxruntime-web/./lib/wasm/jsep/webgpu/ops/gemm.ts","webpack://onnxruntime-web/./lib/wasm/jsep/webgpu/ops/matmul.ts","webpack://onnxruntime-web/./lib/wasm/jsep/webgpu/ops/pool.ts","webpack://onnxruntime-web/./lib/wasm/jsep/webgpu/ops/transpose.ts","webpack://onnxruntime-web/./lib/wasm/jsep/webgpu/ops/unary-op.ts","webpack://onnxruntime-web/./lib/wasm/jsep/webgpu/program-manager.ts","webpack://onnxruntime-web/./lib/wasm/jsep/webgpu/types.ts","webpack://onnxruntime-web/./lib/wasm/options-utils.ts","webpack://onnxruntime-web/./lib/wasm/proxy-wrapper.ts","webpack://onnxruntime-web/./lib/wasm/run-options.ts","webpack://onnxruntime-web/./lib/wasm/session-handler.ts","webpack://onnxruntime-web/./lib/wasm/session-options.ts","webpack://onnxruntime-web/./lib/wasm/string-utils.ts","webpack://onnxruntime-web/./lib/wasm/wasm-common.ts","webpack://onnxruntime-web/./lib/wasm/wasm-core-impl.ts","webpack://onnxruntime-web/./lib/wasm/wasm-factory.ts","webpack://onnxruntime-web/./lib/wasm/proxy-worker/main.ts","webpack://onnxruntime-web/../node_modules/worker-loader/dist/runtime/inline.js","webpack://onnxruntime-web/./lib/wasm/binding/ort-wasm-threaded.min.js","webpack://onnxruntime-web/./lib/wasm/binding/ort-wasm.js","webpack://onnxruntime-web/./node_modules/@protobufjs/aspromise/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/base64/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/eventemitter/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/float/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/inquire/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/pool/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/utf8/index.js","webpack://onnxruntime-web/./node_modules/guid-typescript/dist/guid.js","webpack://onnxruntime-web/./node_modules/long/src/long.js","webpack://onnxruntime-web/./node_modules/onnx-proto/dist/onnx.js","webpack://onnxruntime-web/./node_modules/protobufjs/minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/index-minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/reader.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/reader_buffer.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/roots.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/rpc.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/rpc/service.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/util/longbits.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/util/minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/writer.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/writer_buffer.js","webpack://onnxruntime-web/external umd {\"commonjs\":\"onnxruntime-common\",\"commonjs2\":\"onnxruntime-common\",\"root\":\"ort\"}","webpack://onnxruntime-web/./node_modules/flatbuffers/js/flatbuffers.mjs","webpack://onnxruntime-web/webpack/bootstrap","webpack://onnxruntime-web/webpack/runtime/compat get default export","webpack://onnxruntime-web/webpack/runtime/define property getters","webpack://onnxruntime-web/webpack/runtime/global","webpack://onnxruntime-web/webpack/runtime/hasOwnProperty shorthand","webpack://onnxruntime-web/webpack/runtime/make namespace object","webpack://onnxruntime-web/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"onnxruntime-common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"onnxruntime-common\")) : factory(root[\"ort\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function(__WEBPACK_EXTERNAL_MODULE__1670__) {\nreturn ","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable import/no-internal-modules */\nimport {Backend, InferenceSession, SessionHandler} from 'onnxruntime-common';\n\nimport {Session} from './onnxjs/session';\nimport {OnnxjsSessionHandler} from './onnxjs/session-handler';\n\nclass OnnxjsBackend implements Backend {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  async init(): Promise<void> {}\n\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    // NOTE: Session.Config(from onnx.js) is not compatible with InferenceSession.SessionOptions(from\n    // onnxruntime-common).\n    //       In future we should remove Session.Config and use InferenceSession.SessionOptions.\n    //       Currently we allow this to happen to make test runner work.\n    const session = new Session(options as unknown as Session.Config);\n\n    // typescript cannot merge method override correctly (so far in 4.2.3). need if-else to call the method.\n    if (typeof pathOrBuffer === 'string') {\n      await session.loadModel(pathOrBuffer);\n    } else {\n      await session.loadModel(pathOrBuffer);\n    }\n\n    return new OnnxjsSessionHandler(session);\n  }\n}\n\nexport const onnxjsBackend = new OnnxjsBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {cpus} from 'os';\n\nimport {initWasm} from './wasm/proxy-wrapper';\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initWasm();\n  }\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(pathOrBuffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow terser to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow terser remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend} from 'onnxruntime-common';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\n\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = require('./backend-wasm').wasmBackend;\n  if (!BUILD_DEFS.DISABLE_WEBGPU) {\n    registerBackend('webgpu', wasmBackend, 5);\n  }\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n  registerBackend('xnnpack', wasmBackend, 9);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nclass AttributeWithCacheKeyImpl {\n  constructor(attribute: Record<string, unknown>) {\n    Object.assign(this, attribute);\n  }\n\n  private _cacheKey: string;\n  public get cacheKey(): string {\n    if (!this._cacheKey) {\n      this._cacheKey =\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\n    }\n    return this._cacheKey;\n  }\n}\n\nexport interface AttributeWithCacheKey {\n  readonly cacheKey: string;\n}\n\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\nimport {decodeUtf8String, LongUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport declare namespace Attribute {\n  export interface DataTypeMap {\n    float: number;\n    int: number;\n    string: string;\n    tensor: Tensor;\n    floats: number[];\n    ints: number[];\n    strings: string[];\n    tensors: Tensor[];\n  }\n\n  export type DataType = keyof DataTypeMap;\n}\n\ntype ValueTypes = Attribute.DataTypeMap[Attribute.DataType];\n\ntype Value = [ValueTypes, Attribute.DataType];\n\nexport class Attribute {\n  constructor(attributes: onnx.IAttributeProto[]|ortFbs.Attribute[]|null|undefined) {\n    this._attributes = new Map();\n    if (attributes !== null && attributes !== undefined) {\n      for (const attr of attributes) {\n        if (attr instanceof onnx.AttributeProto) {\n          this._attributes.set(attr.name, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        } else if (attr instanceof ortFbs.Attribute) {\n          this._attributes.set(attr.name()!, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        }\n      }\n      if (this._attributes.size < attributes.length) {\n        throw new Error('duplicated attribute names');\n      }\n    }\n  }\n\n  set(key: string, type: Attribute.DataType, value: ValueTypes): void {\n    this._attributes.set(key, [value, type]);\n  }\n  delete(key: string): void {\n    this._attributes.delete(key);\n  }\n  getFloat(key: string, defaultValue?: Attribute.DataTypeMap['float']) {\n    return this.get(key, 'float', defaultValue);\n  }\n\n  getInt(key: string, defaultValue?: Attribute.DataTypeMap['int']) {\n    return this.get(key, 'int', defaultValue);\n  }\n\n  getString(key: string, defaultValue?: Attribute.DataTypeMap['string']) {\n    return this.get(key, 'string', defaultValue);\n  }\n\n  getTensor(key: string, defaultValue?: Attribute.DataTypeMap['tensor']) {\n    return this.get(key, 'tensor', defaultValue);\n  }\n\n  getFloats(key: string, defaultValue?: Attribute.DataTypeMap['floats']) {\n    return this.get(key, 'floats', defaultValue);\n  }\n\n  getInts(key: string, defaultValue?: Attribute.DataTypeMap['ints']) {\n    return this.get(key, 'ints', defaultValue);\n  }\n\n  getStrings(key: string, defaultValue?: Attribute.DataTypeMap['strings']) {\n    return this.get(key, 'strings', defaultValue);\n  }\n\n  getTensors(key: string, defaultValue?: Attribute.DataTypeMap['tensors']) {\n    return this.get(key, 'tensors', defaultValue);\n  }\n\n  private get<V extends Attribute.DataTypeMap[Attribute.DataType]>(\n      key: string, type: Attribute.DataType, defaultValue?: V): V {\n    const valueAndType = this._attributes.get(key);\n    if (valueAndType === undefined) {\n      if (defaultValue !== undefined) {\n        return defaultValue;\n      }\n      throw new Error(`required attribute not found: ${key}`);\n    }\n    if (valueAndType[1] !== type) {\n      throw new Error(`type mismatch: expected ${type} but got ${valueAndType[1]}`);\n    }\n    return valueAndType[0] as V;\n  }\n\n  private static getType(attr: onnx.IAttributeProto|ortFbs.Attribute): Attribute.DataType {\n    const type = attr instanceof onnx.AttributeProto ? (attr).type : (attr as ortFbs.Attribute).type();\n    switch (type) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return 'float';\n      case onnx.AttributeProto.AttributeType.INT:\n        return 'int';\n      case onnx.AttributeProto.AttributeType.STRING:\n        return 'string';\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return 'tensor';\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return 'floats';\n      case onnx.AttributeProto.AttributeType.INTS:\n        return 'ints';\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return 'strings';\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return 'tensors';\n      default:\n        throw new Error(`attribute type is not supported yet: ${onnx.AttributeProto.AttributeType[type]}`);\n    }\n  }\n\n  private static getValue(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    const attrType = attr instanceof onnx.AttributeProto ? attr.type : (attr as ortFbs.Attribute).type();\n    if (attrType === onnx.AttributeProto.AttributeType.GRAPH || attrType === onnx.AttributeProto.AttributeType.GRAPHS) {\n      throw new Error('graph attribute is not supported yet');\n    }\n\n    const value = this.getValueNoCheck(attr);\n\n    // cast LONG to number\n    if (attrType === onnx.AttributeProto.AttributeType.INT && LongUtil.isLong(value)) {\n      return LongUtil.longToNumber(value as Long | flatbuffers.Long);\n    }\n\n    // cast LONG[] to number[]\n    if (attrType === onnx.AttributeProto.AttributeType.INTS) {\n      const arr = (value as Array<number|Long|flatbuffers.Long>);\n      const numberValue: number[] = new Array<number>(arr.length);\n\n      for (let i = 0; i < arr.length; i++) {\n        const maybeLong = arr[i];\n        numberValue[i] = LongUtil.longToNumber(maybeLong);\n      }\n\n      return numberValue;\n    }\n\n    // cast onnx.TensorProto to onnxjs.Tensor\n    if (attrType === onnx.AttributeProto.AttributeType.TENSOR) {\n      return attr instanceof onnx.AttributeProto ? Tensor.fromProto(value as onnx.ITensorProto) :\n                                                   Tensor.fromOrtTensor(value as ortFbs.Tensor);\n    }\n\n    // cast onnx.TensorProto[] to onnxjs.Tensor[]\n    if (attrType === onnx.AttributeProto.AttributeType.TENSORS) {\n      if (attr instanceof onnx.AttributeProto) {\n        const tensorProtos = value as onnx.ITensorProto[];\n        return tensorProtos.map(value => Tensor.fromProto(value));\n      } else if (attr instanceof ortFbs.Attribute) {\n        const tensorProtos = value as ortFbs.Tensor[];\n        return tensorProtos.map(value => Tensor.fromOrtTensor(value));\n      }\n    }\n\n    // cast Uint8Array to string\n    if (attrType === onnx.AttributeProto.AttributeType.STRING) {\n      // string in onnx attribute is of uint8array type, so we need to convert it to string below. While in ort format,\n      // string attributes are returned as string, so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8String = value as Uint8Array;\n        return decodeUtf8String(utf8String);\n      }\n    }\n\n    // cast Uint8Array[] to string[]\n    if (attrType === onnx.AttributeProto.AttributeType.STRINGS) {\n      // strings in onnx attribute is returned as uint8array[], so we need to convert it to string[] below. While in ort\n      // format strings attributes are returned as string[], so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8Strings = value as Uint8Array[];\n        return utf8Strings.map(decodeUtf8String);\n      }\n    }\n\n    return value as ValueTypes;\n  }\n\n  private static getValueNoCheck(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    return attr instanceof (onnx.AttributeProto) ? this.getValueNoCheckFromOnnxFormat(attr) :\n                                                   this.getValueNoCheckFromOrtFormat(attr as ortFbs.Attribute);\n  }\n\n  private static getValueNoCheckFromOnnxFormat(attr: onnx.IAttributeProto) {\n    switch (attr.type!) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return attr.f;\n      case onnx.AttributeProto.AttributeType.INT:\n        return attr.i;\n      case onnx.AttributeProto.AttributeType.STRING:\n        return attr.s;\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return attr.t;\n      case onnx.AttributeProto.AttributeType.GRAPH:\n        return attr.g;\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return attr.floats;\n      case onnx.AttributeProto.AttributeType.INTS:\n        return attr.ints;\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return attr.strings;\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return attr.tensors;\n      case onnx.AttributeProto.AttributeType.GRAPHS:\n        return attr.graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${onnx.AttributeProto.AttributeType[attr.type!]}`);\n    }\n  }\n\n  private static getValueNoCheckFromOrtFormat(attr: ortFbs.Attribute) {\n    switch (attr.type()) {\n      case ortFbs.AttributeType.FLOAT:\n        return attr.f();\n      case ortFbs.AttributeType.INT:\n        return attr.i();\n      case ortFbs.AttributeType.STRING:\n        return attr.s();\n      case ortFbs.AttributeType.TENSOR:\n        return attr.t();\n      case ortFbs.AttributeType.GRAPH:\n        return attr.g();\n      case ortFbs.AttributeType.FLOATS:\n        return attr.floatsArray();\n      case ortFbs.AttributeType.INTS: {\n        const ints = [];\n        for (let i = 0; i < attr.intsLength(); i++) {\n          ints.push(attr.ints(i)!);\n        }\n        return ints;\n      }\n      case ortFbs.AttributeType.STRINGS: {\n        const strings = [];\n        for (let i = 0; i < attr.stringsLength(); i++) {\n          strings.push(attr.strings(i));\n        }\n        return strings;\n      }\n      case ortFbs.AttributeType.TENSORS: {\n        const tensors = [];\n        for (let i = 0; i < attr.tensorsLength(); i++) {\n          tensors.push(attr.tensors(i)!);\n        }\n        return tensors;\n      }\n      // case ortFbs.AttributeType.GRAPHS:\n      // TODO: Subgraph not supported yet.\n      // const graphs = [];\n      // for (let i = 0; i < attr.graphsLength(); i++) {\n      //   graphs.push(attr.graphs(i)!);\n      // }\n      // return graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${ortFbs.AttributeType[attr.type()]}`);\n    }\n  }\n\n  protected _attributes: Map<string, Value>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGLBackend} from './backends/backend-webgl';\nimport {Graph} from './graph';\nimport {Operator} from './operators';\nimport {OpSet} from './opset';\nimport {Session} from './session';\n\nexport interface InferenceHandler {\n  /**\n   * dispose the inference handler. it will be called as the last step in Session.run()\n   */\n  dispose(): void;\n}\n\nexport interface SessionHandler {\n  /**\n   * transform the graph at initialization time\n   * @param graphTransformer the graph transformer to manipulate the model graph\n   */\n  transformGraph?(graphTransformer: Graph.Transformer): void;\n\n  /**\n   * create an instance of InferenceHandler to use in a Session.run() call\n   */\n  createInferenceHandler(): InferenceHandler;\n\n  /**\n   * dispose the session handler. it will be called when a session is being disposed explicitly\n   */\n  dispose(): void;\n\n  /**\n   * Resolves the operator from the name and opset version; backend specific\n   * @param node the node to resolve\n   * @param opsets a list of opsets that exported from the model\n   * @param graph the completely initialized graph\n   */\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator;\n\n  /**\n   * This method let's the sessionHandler know that the graph initialization is complete\n   * @param graph the completely initialized graph\n   */\n  onGraphInitialized?(graph: Graph): void;\n\n  /**\n   * a reference to the corresponding backend\n   */\n  readonly backend: Backend;\n\n  /**\n   * a reference to the session context\n   */\n  readonly context: Session.Context;\n}\n\nexport interface Backend {\n  /**\n   * initialize the backend. will be called only once, when the first time the\n   * backend it to be used\n   */\n  initialize(): boolean|Promise<boolean>;\n\n  /**\n   * create an instance of SessionHandler to use in a Session object's lifecycle\n   */\n  createSessionHandler(context: Session.Context): SessionHandler;\n\n  /**\n   * dispose the backend. currently this will not be called\n   */\n  dispose(): void;\n}\n\n// caches all initialized backend instances\nconst backendsCache: Map<string, Backend> = new Map();\n\nexport const backend: {[name: string]: Backend} = {\n  webgl: new WebGLBackend()\n};\n\n/**\n * Resolve a reference to the backend. If a hint is specified, the corresponding\n * backend will be used.\n */\nexport async function resolveBackend(hint?: string|readonly string[]): Promise<Backend> {\n  if (!hint) {\n    return resolveBackend(['webgl']);\n  } else {\n    const hints = typeof hint === 'string' ? [hint] : hint;\n\n    for (const backendHint of hints) {\n      const cache = backendsCache.get(backendHint);\n      if (cache) {\n        return cache;\n      }\n\n      const backend = await tryLoadBackend(backendHint);\n      if (backend) {\n        return backend;\n      }\n    }\n  }\n\n  throw new Error('no available backend to use');\n}\n\nasync function tryLoadBackend(backendHint: string): Promise<Backend|undefined> {\n  const backendObj = backend;\n\n  if (typeof backendObj[backendHint] !== 'undefined' && isBackend(backendObj[backendHint])) {\n    const backend = backendObj[backendHint];\n    let init = backend.initialize();\n    if (typeof init === 'object' && 'then' in init) {\n      init = await init;\n    }\n    if (init) {\n      backendsCache.set(backendHint, backend);\n      return backend;\n    }\n  }\n\n  return undefined;\n}\n\nfunction isBackend(obj: unknown) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const o = obj as any;\n\n  // check if an object is a Backend instance\n  if (\n      'initialize' in o && typeof o.initialize === 'function' &&                      // initialize()\n      'createSessionHandler' in o && typeof o.createSessionHandler === 'function' &&  // createSessionHandler()\n      'dispose' in o && typeof o.dispose === 'function'                               // dispose()\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport type BackendType = Backend;\nexport type SessionHandlerType = ReturnType<BackendType['createSessionHandler']>;\nexport type InferenceHandlerType = ReturnType<SessionHandlerType['createInferenceHandler']>;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport {Backend, SessionHandler} from '../backend';\nimport {Logger} from '../instrument';\nimport {Session} from '../session';\n\nimport {WebGLSessionHandler} from './webgl/session-handler';\nimport {WebGLContext} from './webgl/webgl-context';\nimport {createWebGLContext} from './webgl/webgl-context-factory';\n\n/**\n * WebGLBackend is the entry point for all WebGL opeartions\n * When it starts it created the WebGLRenderingContext\n * and other main framework components such as Program and Texture Managers\n */\nexport class WebGLBackend implements Backend {\n  glContext: WebGLContext;\n\n  get contextId(): 'webgl'|'webgl2'|undefined {\n    return env.webgl.contextId;\n  }\n  set contextId(value: 'webgl'|'webgl2'|undefined) {\n    env.webgl.contextId = value;\n  }\n\n  get matmulMaxBatchSize(): number|undefined {\n    return env.webgl.matmulMaxBatchSize;\n  }\n  set matmulMaxBatchSize(value: number|undefined) {\n    env.webgl.matmulMaxBatchSize = value;\n  }\n\n  get textureCacheMode(): 'initializerOnly'|'full'|undefined {\n    return env.webgl.textureCacheMode;\n  }\n  set textureCacheMode(value: 'initializerOnly'|'full'|undefined) {\n    env.webgl.textureCacheMode = value;\n  }\n\n  get pack(): boolean|undefined {\n    return env.webgl.pack;\n  }\n  set pack(value: boolean|undefined) {\n    env.webgl.pack = value;\n  }\n\n  get async(): boolean|undefined {\n    return env.webgl.async;\n  }\n  set async(value: boolean|undefined) {\n    env.webgl.async = value;\n  }\n\n  initialize(): boolean {\n    try {\n      this.glContext = createWebGLContext(this.contextId);\n      if (typeof this.matmulMaxBatchSize !== 'number') {\n        this.matmulMaxBatchSize = 16;\n      }\n      if (typeof this.textureCacheMode !== 'string') {\n        this.textureCacheMode = 'full';\n      }\n      if (typeof this.pack !== 'boolean') {\n        this.pack = false;\n      }\n      if (typeof this.async !== 'boolean') {\n        this.async = false;\n      }\n\n      Logger.setWithEnv(env);\n\n      Logger.verbose(\n          'WebGLBackend',\n          `Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${\n              this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${\n              this.async}.`);\n      return true;\n    } catch (e) {\n      Logger.warning('WebGLBackend', `Unable to initialize WebGLBackend. ${e}`);\n      return false;\n    }\n  }\n  createSessionHandler(context: Session.Context): SessionHandler {\n    return new WebGLSessionHandler(this, context);\n  }\n  dispose(): void {\n    this.glContext.dispose();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ArrayUtil, BroadcastUtil, ShapeUtil} from '../../util';\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\nimport {squeezeShape} from './texture-layout-strategy';\nimport {TextureLayout} from './types';\nimport {generateShaderFuncNameFromInputSamplerName, generateShaderFuncNameFromInputSamplerNameAtOutCoords, getCoordsDataType, getGlChannels, getSqueezedParams, squeezeInputShape} from './utils';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class CoordsGlslLib extends GlslLib {\n  returnType: string;\n\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.offsetToCoords(),\n      ...this.coordsToOffset(),\n      ...this.toVec(),\n      ...this.valueFrom(),\n      // TODO return these only when packing is enabled.\n      ...this.getCommonUtilFuncs(),\n      ...this.getInputsSamplingSnippets(),\n      ...this.getOutputSamplingSnippet()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected offsetToCoords(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'offsetToCoords';\n    return {\n      offsetToCoords: new GlslLibRoutine(`\n      vec2 ${funcName}(int offset, int width, int height) {\n        int t = offset / width;\n        int s = offset - t*width;\n        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);\n        return coords;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected coordsToOffset(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'coordsToOffset';\n    return {\n      coordsToOffset: new GlslLibRoutine(`\n      int ${funcName}(vec2 coords, int width, int height) {\n        float s = coords.s * float(width);\n        float t = coords.t * float(height);\n        int offset = int(t) * width + int(s);\n        return offset;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Generates code for output sampler.\n   */\n\n  protected getOutputSamplingSnippet(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    if (outputLayout.isPacked) {\n      return this.getPackedOutputSamplingSnippet(outputLayout);\n    } else {\n      return this.getUnpackedOutputSamplingSnippet(outputLayout);\n    }\n  }\n\n  /**\n   * Generates code for packed output sampler.\n   */\n  protected getPackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputPacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] = this.getOutputPacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputPacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        result[funcName] = this.getOutputPackedNDCoords(outShape, outTexShape as [number, number]);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRGBASource = `\n      void setOutput(vec4 val) {\n        ${glsl.output} = val;\n      }\n    `;\n    const floatTextureSetRGBAFuncName = 'floatTextureSetRGBA';\n    result[floatTextureSetRGBAFuncName] = new GlslLibRoutine(floatTextureSetRGBASource);\n    return result;\n  }\n\n  /**\n   * Generates code for unpacked output sampler.\n   */\n  protected getUnpackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputUnpacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] =\n            this.getOutputUnpacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputUnpacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      case 4:\n        result[funcName] = this.getOutputUnpacked4DCoords(\n            outShape as [number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 5:\n        result[funcName] = this.getOutputUnpacked5DCoords(\n            outShape as [number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 6:\n        result[funcName] = this.getOutputUnpacked6DCoords(\n            outShape as [number, number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        throw new Error(`Unsupported output dimensionality: ${outShape.length}`);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRSource = `\n        void setOutput(float val) {\n          ${glsl.output} = vec4(val, 0, 0, 0);\n        }\n    `;\n    const floatTextureSetRFuncName = 'floatTextureSetR';\n    result[floatTextureSetRFuncName] = new GlslLibRoutine(floatTextureSetRSource);\n    return result;\n  }\n\n  /**\n   * Scalar output coordinates.\n   */\n  protected getOutputScalarCoords(): GlslLibRoutine {\n    return new GlslLibRoutine(`\n      int getOutputCoords() {\n        return 0;\n      }\n    `);\n  }\n\n  /**\n   * 1D packed output coordinates.\n   */\n  protected getOutputPacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = texShape;\n    let source = '';\n    if (packedTexShape[0] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.y * ${packedTexShape[1]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    if (packedTexShape[1] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.x * ${packedTexShape[0]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                 vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          return 2 * (resTexRC.y * ${packedTexShape[0]} + resTexRC.x);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 2D packed output coordinates.\n   */\n  protected getOutputPacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    if (ArrayUtil.arraysEqual(shape, texShape)) {\n      source = `\n        ivec2 getOutputCoords() {\n          return 2 * ivec2(TexCoords.xy * vec2(${texShape[0]}, ${texShape[1]}));\n        }\n      `;\n      return new GlslLibRoutine(source);\n    }\n\n    const packedTexShape = texShape;\n    // texels needed to accommodate a logical row\n    const texelsInLogicalRow = Math.ceil(shape[1] / 2);\n\n    /**\n     * getOutputCoords\n     *\n     * resTexRC: The rows and columns of the texels. If you move over one\n     * texel to the right in the packed texture, you are moving over one column\n     * (not two).\n     *\n     * index: The texel index\n     */\n    source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 3D packed output coordinates.\n   */\n  protected getOutputPacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texelsInLogicalRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[1] / 2);\n    const source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          int b = index / ${texelsInBatch};\n          index -= b * ${texelsInBatch};\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec3(b, r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * ND packed output coordinates.\n   */\n  protected getOutputPackedNDCoords(shape: readonly number[], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n\n    const texelsInLogicalRow = Math.ceil(shape[shape.length - 1] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[shape.length - 2] / 2);\n    let texelsInBatchN = texelsInBatch;\n    let batches = '';\n    let coords = 'b, r, c';\n\n    for (let b = 2; b < shape.length - 1; b++) {\n      texelsInBatchN *= shape[shape.length - b - 1];\n      batches = `\n      int b${b} = index / ${texelsInBatchN};\n      index -= b${b} * ${texelsInBatchN};\n    ` + batches;\n      coords = `b${b}, ` + coords;\n    }\n    const source = `\n      ivec${shape.length} getOutputCoords() {\n        ivec2 resTexRC = ivec2(TexCoords.xy *\n                              vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n        int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n        ${batches}\n\n        int b = index / ${texelsInBatch};\n        index -= b * ${texelsInBatch};\n\n        // reverse r and c order for packed texture\n        int r = imod(index, ${texelsInLogicalRow}) * 2;\n        int c = 2 * (index / ${texelsInLogicalRow});\n\n        return ivec${shape.length}(${coords});\n      }\n    `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 1D output coordinates.\n   */\n  protected getOutputUnpacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          return resTexRC.y * ${texShape[0]} + resTexRC.x;\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 2D output coordinates.\n   */\n  protected getOutputUnpacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          int r = index / ${shape[1]};\n          int c = index - r * ${shape[1]};\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 3D output coordinates.\n   */\n  protected getOutputUnpacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec3(r, c, d);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 4D output coordinates.\n   */\n  protected getOutputUnpacked4DCoords(shape: [number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec4 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec4(r, c, d, d2);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 5D output coordinates.\n   */\n  protected getOutputUnpacked5DCoords(shape: [number, number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec5 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec5(r, c, d, d2, d3);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 6D output coordinates.\n   */\n  protected getOutputUnpacked6DCoords(shape: [number, number, number, number, number, number], texShape: [\n    number, number\n  ]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3', 'd4'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n     ivec6 getOutputCoords() {\n         ivec2 resTexRC = ivec2(TexCoords.xy *\n                               vec2(${texShape[0]}, ${texShape[1]}));\n         int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n         ${coordsFromIndexSnippet}\n         return ivec6(r, c, d, d2, d3, d4);\n       }\n     `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Generates code for common UV coords computation utility functions.\n   */\n  protected getCommonUtilFuncs(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    let funcName = 'uvFromFlat';\n    result[funcName] = new GlslLibRoutine(`\n    vec2 uvFromFlat(int texNumR, int texNumC, int index) {\n      int texC = index / texNumR;\n      int texR = index - texC * texNumR;\n      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to\n      //       v.\n      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);\n    }\n    `);\n    funcName = 'packedUVfrom1D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n        int texelIndex = index / 2;\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom2D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {\n        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom3D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom3D(int texNumR, int texNumC,\n          int texelsInBatch, int texelsInLogicalRow, int b,\n          int row, int col) {\n        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = index / texNumC;\n        int texC = index - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'sampleTexture';\n    const glsl = getGlsl(this.context.glContext.version);\n    result[funcName] = new GlslLibRoutine(`\n        float sampleTexture(sampler2D textureSampler, vec2 uv) {\n            return ${glsl.texture2D}(textureSampler, uv).r;\n        }`);\n    return result;\n  }\n\n  /**\n   * Constructing snippets for inputs\n   */\n  protected getInputsSamplingSnippets(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const outputLayout = this.context.outputTextureLayout;\n    this.context.programInfo.inputNames.forEach((samplerName, i) => {\n      const inputLayout = this.context.inputTextureLayouts[i];\n      const funcName = generateShaderFuncNameFromInputSamplerName(samplerName);\n      if (inputLayout.isPacked) {\n        result[funcName] = this.getPackedSamplerFromInput(funcName, samplerName, inputLayout);\n      } else {\n        result[funcName] = this.getUnpackedSamplerFromInput(funcName, samplerName, inputLayout);\n      }\n\n      const outCoordFuncName = generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName);\n      if (inputLayout.unpackedShape.length <= outputLayout.unpackedShape.length) {\n        if (inputLayout.isPacked) {\n          result[outCoordFuncName] =\n              this.getPackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        } else {\n          result[outCoordFuncName] =\n              this.getUnpackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        }\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Constructing snippets for output coordinates of samplers\n   */\n  protected getPackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texName = name;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(texName);\n\n    const inRank = inShape.length;\n    const outRank = outShape.length;\n\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n\n    const type = getCoordsDataType(outRank);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n\n    let output = 'return outputValue;';\n    const inSize = ShapeUtil.size(inShape);\n    const isInputScalar = inSize === 1;\n    const outSize = ShapeUtil.size(outShape);\n    const isOutputScalar = outSize === 1;\n\n    if (inRank === 1 && !isInputScalar && !isOutputScalar) {\n      output = `\n        return vec4(outputValue.xy, outputValue.xy);\n      `;\n    } else if (isInputScalar && !isOutputScalar) {\n      if (outRank === 1) {\n        output = `\n          return vec4(outputValue.x, outputValue.x, 0., 0.);\n        `;\n      } else {\n        output = `\n          return vec4(outputValue.x);\n        `;\n      }\n    } else if (broadcastDims.length) {\n      const rows = inRank - 2;\n      const cols = inRank - 1;\n\n      if (broadcastDims.indexOf(rows) > -1 && broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.x);';\n      } else if (broadcastDims.indexOf(rows) > -1) {\n        output = 'return vec4(outputValue.x, outputValue.y, ' +\n            'outputValue.x, outputValue.y);';\n      } else if (broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.xx, outputValue.zz);';\n      }\n    }\n\n    const swapLastDimsSnippet = `\n        int lastDim = coords.${fields[outRank - 1]};\n        coords.${fields[outRank - 1]} = coords.${fields[outRank - 2]};\n        coords.${fields[outRank - 2]} = lastDim;\n      `;\n    const source = `\n      vec4 ${funcName}() {\n        ${type} coords = getOutputCoords();\n        ${swapLastDimsSnippet}\n        ${coordsSnippet}\n        vec4 outputValue = ${texFuncSnippet}(${unpackedCoordsSnippet});\n        ${output}\n      }\n    `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for unpacked output coordinates of samplers\n   */\n  protected getUnpackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const inTexShape = [inputLayout.width, inputLayout.height];\n    const inRank = inputLayout.unpackedShape.length;\n    const outRank = outputLayout.unpackedShape.length;\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(name);\n\n    if (inRank === outRank && ArrayUtil.arraysEqual(inTexShape, outTexShape)) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, TexCoords);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const type = getCoordsDataType(outRank);\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inputLayout.unpackedShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n    const source = `\n        float ${funcName}() {\n          ${type} coords = getOutputCoords();\n          ${coordsSnippet}\n          return ${texFuncSnippet}(${unpackedCoordsSnippet});\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for packed operations.\n   */\n  protected getPackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    switch (inputLayout.unpackedShape.length) {\n      case 0:\n        return this.getPackedSamplerScalar(funcName, name);\n      case 1:\n        return this.getPackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getPackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getPackedSampler3D(funcName, name, inputLayout);\n      default:\n        return this.getPackedSamplerND(funcName, name, inputLayout);\n    }\n  }\n\n  /**\n   * Constructing snippets for unpacked operations.\n   */\n  protected getUnpackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    switch (shape.length) {\n      case 0:\n        return this.getUnpackedSamplerScalar(funcName, name, inputLayout);\n      case 1:\n        return this.getUnpackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getUnpackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getUnpackedSampler3D(funcName, name, inputLayout);\n      case 4:\n        return this.getUnpackedSampler4D(funcName, name, inputLayout);\n      case 5:\n        return this.getUnpackedSampler5D(funcName, name, inputLayout);\n      case 6:\n        return this.getUnpackedSampler6D(funcName, name, inputLayout);\n      default:\n        // TODO support more dimensionalities\n        throw new Error(`Unsupported dimension ${shape.length}-D`);\n    }\n  }\n\n  /**\n   * Packed scalar snippet.\n   */\n  protected getPackedSamplerScalar(funcName: string, name: string): GlslLibRoutine {\n    const glsl = getGlsl(this.context.glContext.version);\n    const source = `\n          vec4 ${funcName}() {\n            return ${glsl.texture2D}(${name}, halfCR);\n          }\n        `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Packed 1D snippet.\n   */\n  protected getPackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[1], texShape[0]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedSampler = `vec4 ${funcName}(int index) {\n      vec2 uv = packedUVfrom1D(\n      ${packedTexShape[0]}, ${packedTexShape[1]}, index);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom1D']);\n  }\n\n  /**\n   * Packed 2D snippet.\n   */\n  protected getPackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const packedSampler = `vec4 ${funcName}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n        return ${glsl.texture2D}(${name}, uv);\n      }`;\n\n      return new GlslLibRoutine(packedSampler);\n    }\n    const packedTexShape = texShape;\n    const valuesPerRow = Math.ceil(shape[1] / 2);\n    const packedSampler = `vec4 ${funcName}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${packedTexShape[1]}, ${packedTexShape[0]}, ${valuesPerRow}, row, col);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom2D']);\n  }\n\n  /**\n   * Packed 3D snippet.\n   */\n  protected getPackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[0], texShape[1]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    if (shape[0] === 1) {\n      const squeezedShape = shape.slice(1);\n      const keptDims = [1, 2];\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['b', 'row', 'col'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const samplerRoutine = this.getPackedSamplerFromInput(funcName, name, newInputLayout);\n      const packedSampler = `${samplerRoutine.routineBody}\n      vec4 ${funcName}(int b, int row, int col) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      } `;\n      const source = packedSampler;\n      return new GlslLibRoutine(source, samplerRoutine.dependencies);\n    }\n    const texNumR = packedTexShape[0];\n    const texNumC = packedTexShape[1];\n\n    const valuesPerRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = valuesPerRow * Math.ceil(shape[1] / 2);\n\n    const packedSampler = `vec4 ${funcName}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${texNumC}, ${texNumR}, ${texelsInBatch}, ${valuesPerRow}, b, row, col);\n      return ${glsl.texture2D}(${name}, uv);}`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom3D']);\n  }\n  /*\n   * Packed ND snippet.\n   */\n  protected getPackedSamplerND(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const rank = shape.length;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texNumR = packedTexShape[1];\n    const texNumC = packedTexShape[0];\n    const valuesPerRow = Math.ceil(shape[rank - 1] / 2);\n    let texelsInBatch = valuesPerRow * Math.ceil(shape[rank - 2] / 2);\n    let params = 'int b, int row, int col';\n    let index = `b * ${texelsInBatch} + (row / 2) * ${valuesPerRow} + (col / 2)`;\n    for (let b = 2; b < rank - 1; b++) {\n      params = `int b${b}, ` + params;\n      texelsInBatch *= shape[rank - b - 1];\n      index = `b${b} * ${texelsInBatch} + ` + index;\n    }\n    const packedSampler = `vec4 ${funcName}(${params}) {\n      int index = ${index};\n      int texR = index / ${texNumC};\n      int texC = index - texR * ${texNumC};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}, ${texNumR});\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked scalar snippet.\n   */\n  protected getUnpackedSamplerScalar(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const [texNumR, texNumC] = [inputLayout.width, inputLayout.height];\n    if (texNumR === 1 && texNumC === 1) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, halfCR);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const source = `\n        float ${funcName}() {\n          int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, offset_${name});\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 1D snippet.\n   */\n  protected getUnpackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const tNumR = inputLayout.width;\n    const tNumC = inputLayout.height;\n\n    if (tNumC === 1 && tNumR === 1) {\n      const source = `\n        float ${funcName}(int index) {\n          return sampleTexture(${name}, halfCR);\n        }\n      `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    if (tNumC === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2((float(index) + 0.5) / ${tNumR}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    if (tNumR === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${tNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    const source = `\n        float ${funcName}(int index) {\n          vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 2D snippet.\n   */\n\n  protected getUnpackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n\n    // TODO: modify row/col order for other dimensions.\n    const texShape = [inputLayout.height, inputLayout.width];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const texNumR = texShape[1];\n      const texNumC = texShape[0];\n      const source = `\n          float ${funcName}(int row, int col) {\n            vec2 uv = (vec2(row, col) + halfCR) / vec2(${texNumR}.0, ${texNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const params = ['col', 'row'];\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const texNumR = texShape[1];\n    const texNumC = texShape[0];\n    if (texNumC === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2(0.5, (index + 0.5) / ${texNumR}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    if (texNumR === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2((index + 0.5) / ${texNumC}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    const source = `\n        float ${funcName}(int row, int col) {\n          int index = col * ${shape[1]} + row;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 3D snippet.\n   */\n\n  protected getUnpackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride0 = shape[1] * shape[2];\n    const stride1 = shape[2];\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['batch', 'col', 'row'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const routine = this.getUnpackedSamplerFromInput(funcName, name, newInputLayout);\n      // TODO: revisit the logic here to make it simpler\n      const revDims = keptDims.reverse();\n      const source = `\n          ${routine.routineBody}\n          float ${funcName}(int batch, int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, revDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, routine.dependencies);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int depth, int row, int col) {\n            // Explicitly use integer operations as dot() only works on floats.\n            int index = depth * ${stride0} + col * ${stride1} + row;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 4D snippet.\n   */\n\n  protected getUnpackedSampler4D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride2 = shape[3];\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    //\n    // TODO: re-enable this shortcut once the index calculation bug is fixed.\n    //\n    // const {newShape, keptDims} = squeezeShape(shape as number[]);\n    // if (newShape.length < shape.length) {\n    //   const newInputShape = squeezeInputShape(shape, newShape);\n    //   const params = ['row', 'col', 'depth', 'depth2'];\n    //   // Deep copy of input texture layout.\n    //   const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n    //   newInputLayout.unpackedShape = newInputShape;\n    //   const source = `\n    //       ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n    //       float ${funcName}(int row, int col, int depth, int depth2) {\n    //         return ${funcName}(${getSqueezedParams(params, keptDims)});\n    //       }\n    //     `;\n    //   return new GlslLibRoutine(\n    //       source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    // }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2) {\n          int index = row * ${stride0} + col * ${stride1} +\n              depth2 * ${stride2} + depth;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 5D snippet.\n   */\n  protected getUnpackedSampler5D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride3 = shape[4];\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n          int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n          depth3 * ${stride3} + depth2;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n  }\n\n  /**\n   * Unpacked 6D snippet.\n   */\n  protected getUnpackedSampler6D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride4 = shape[5];\n    const stride3 = shape[4] * stride4;\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n            ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n            float ${funcName}(int row, int col, int depth,\n              int depth2, int depth3, int depth4) {\n              return ${funcName}(${getSqueezedParams(params, keptDims)});\n            }\n          `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int row, int col, int depth,\n            int depth2, int depth3, int depth4) {\n            int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n            depth2 * ${stride3} + depth3 * ${stride4} + depth4;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * This is the main function to map from the given texture coordiantes (s,t)\n   * to logical indices for the output\n   * There will only be one single variation of this\n   * Also see coordsToOffset and offsetToIndices for input-specific versions\n   */\n  protected toVec(): {[name: string]: GlslLibRoutine} {\n    const output = this.context.outputTextureLayout;\n    const rank = output.shape.length;\n    const strides = output.strides;\n    const xScale = output.width;\n    const yScale = output.height;\n\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n        c[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= c[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n        c[${rank - 1}] = offset;`);\n    const body = `\n      void toVec(vec2 texCoords, out int c[${rank}]) {\n        int offset = coordsToOffset(texCoords, ${xScale}, ${yScale});\n        ${stridesBlock.join('')}\n      }\n      void toVec(int offset, out int c[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n    `;\n    return {toVec: new GlslLibRoutine(body, ['coordinates.coordsToOffset'])};\n  }\n  /**\n   * These are value getter functions generated for each input\n   * Each function is hardwired to the name and dimensions of the input\n   * An '_T' variation is also produced which accesses values as if the\n   * input was transposed\n   */\n  protected valueFrom(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const layout = this.context.inputTextureLayouts[i];\n      const shape = layout.unpackedShape.length > 0 ? layout.unpackedShape : layout.shape;\n      const rank = shape.length;\n      let funcName = `_${name}`;\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, false),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n      funcName = funcName + '_T';\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, true),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n    });\n    return result;\n  }\n  /**\n   * Produces one value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getValueFromSingle(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        float ${name}(int m[${rank}]) {\n          int offset = indicesToOffset${name}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          float value = getColorAsFloat(${glsl.texture2D}(${varName}, coords));\n          return value;\n        }\n        `;\n  }\n\n  /**\n   * Produces a packed value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getPackedValueFrom(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}_Pack`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        vec4 ${name}(int m[${rank}]) {\n          int offset = indicesToOffset_${varName}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          return ${glsl.texture2D}(${varName}, coords);\n        }\n        `;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ProgramInfo, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport enum FunctionType {\n  ValueBased,\n  Positional\n}\nexport interface GlslFunction<T extends FunctionType> {\n  body: string;\n  name: string;\n  type: T;\n}\nexport type GlslValueFunction = GlslFunction<FunctionType.ValueBased>;\nexport interface GlslPositionalFunction extends GlslFunction<FunctionType.Positional> {\n  inputShape: readonly number[];\n  outputShape: readonly number[];\n}\n\nexport class GlslContext {\n  constructor(\n      public glContext: WebGLContext, public programInfo: ProgramInfo, public inputTextureLayouts: TextureLayout[],\n      public outputTextureLayout: TextureLayout) {}\n}\nexport abstract class GlslLib {\n  constructor(public context: GlslContext) {}\n  abstract getFunctions(): {[name: string]: GlslLibRoutine};\n  abstract getCustomTypes(): {[name: string]: string};\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies\nexport class GlslLibRoutine {\n  constructor(public routineBody: string, public dependencies?: string[]) {}\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies AS GRAPH Nodes\n// this level of abstraction is used to topologically sort routines before fragment shade inclusion\nexport class GlslLibRoutineNode {\n  dependencies: GlslLibRoutineNode[];\n  routineBody: string;\n  constructor(public name: string, routineBody?: string, dependencies?: GlslLibRoutineNode[]) {\n    if (dependencies) {\n      this.dependencies = dependencies;\n    } else {\n      this.dependencies = [];\n    }\n\n    if (routineBody) {\n      this.routineBody = routineBody;\n    }\n  }\n  addDependency(node: GlslLibRoutineNode) {\n    if (node) {\n      this.dependencies.push(node);\n    }\n  }\n}\n\n// topologically sort GLSL library routines (graph nodes abstraction) before shader script inclusion\nexport class TopologicalSortGlslRoutines {\n  static returnOrderedNodes(nodes: GlslLibRoutineNode[]): GlslLibRoutineNode[] {\n    if (!nodes || nodes.length === 0) {\n      return [];\n    }\n\n    if (nodes.length === 1) {\n      return nodes;\n    }\n\n    const cycleCheck = new Set<string>();\n    const alreadyTraversed = new Set<string>();\n    const result = new Array<GlslLibRoutineNode>();\n\n    this.createOrderedNodes(nodes, cycleCheck, alreadyTraversed, result);\n    return result;\n  }\n\n  private static createOrderedNodes(\n      graphNodes: GlslLibRoutineNode[], cycleCheck: Set<string>, alreadyTraversed: Set<string>,\n      result: GlslLibRoutineNode[]) {\n    for (let i = 0; i < graphNodes.length; ++i) {\n      this.dfsTraverse(graphNodes[i], cycleCheck, alreadyTraversed, result);\n    }\n  }\n\n  private static dfsTraverse(\n      root: GlslLibRoutineNode, cycleCheck: Set<string>, alreadyTraversed: Set<string>, result: GlslLibRoutineNode[]) {\n    // if this root has already been traversed return\n    if (!root || alreadyTraversed.has(root.name)) {\n      return;\n    }\n\n    // cyclic dependency has been detected\n    if (cycleCheck.has(root.name)) {\n      throw new Error('Cyclic dependency detected. Can\\'t topologically sort routines needed for shader.');\n    }\n\n    // hold this node to detect cycles if any\n    cycleCheck.add(root.name);\n\n    // traverse children in a dfs fashion\n    const dependencies = root.dependencies;\n    if (dependencies && dependencies.length > 0) {\n      for (let i = 0; i < dependencies.length; ++i) {\n        this.dfsTraverse(dependencies[i], cycleCheck, alreadyTraversed, result);\n      }\n    }\n\n    // add to result holder\n    result.push(root);\n\n    // mark this node as traversed so that we don't traverse from this again\n    alreadyTraversed.add(root.name);\n\n    // release the hold\n    cycleCheck.delete(root.name);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * This GLSL library handles routines converting\n * float32 to/from Unsigned byte or float 16\n */\nexport class EncodingGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.encodeFloat32(), ...this.decodeFloat32()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected encodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      encode: new GlslLibRoutine(`highp vec4 encode(highp float f) {\n        return vec4(f, 0.0, 0.0, 0.0);\n      }\n        `)\n    };\n  }\n  protected decodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      decode: new GlslLibRoutine(`highp float decode(highp vec4 rgba) {\n        return rgba.r;\n      }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode encode a 32bit float to a vec4 (of unsigned bytes)\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected encodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      encode: new GlslLibRoutine(`\n      highp vec4 encode(highp float f) {\n        highp float F = abs(f);\n        highp float Sign = step(0.0,-f);\n        highp float Exponent = floor(log2(F));\n        highp float Mantissa = (exp2(- Exponent) * F);\n        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));\n        highp vec4 rgba;\n        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));\n        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);\n        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));\n        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));\n        ${endianness}\n        rgba = rgba / 255.0; // values need to be normalized to [0,1]\n        return rgba;\n    }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode a vec4 of unsigned bytes to float32\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected decodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      decode: new GlslLibRoutine(`\n        highp float decode(highp vec4 rgba) {\n          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]\n          ${endianness}\n          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;\n          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;\n          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);\n          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));\n          return Result;\n      }\n        `)\n    };\n  }\n  /**\n   * Determines if the machine is little endian or not\n   * @credit: https://gist.github.com/TooTallNate/4750953\n   */\n  static isLittleEndian(): boolean {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) {\n      return true;\n    }\n    if (c[0] === 0xde) {\n      return false;\n    }\n    throw new Error('unknown endianness');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\n\n/**\n * This GLSL library handles routines around reading a texlet and writing to it\n * Reading and writing could be more than just dealing with one channel\n * It may require encoding/decoding to/from 4 channels into one\n */\nexport class FragColorGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.setFragColor(), ...this.getColorAsFloat()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected setFragColor(): {[name: string]: GlslLibRoutine} {\n    const glsl = getGlsl(this.context.glContext.version);\n    return {\n      setFragColor: new GlslLibRoutine(\n          `\n        void setFragColor(float value) {\n            ${glsl.output} = encode(value);\n        }\n        `,\n          ['encoding.encode'])\n    };\n  }\n  protected getColorAsFloat(): {[name: string]: GlslLibRoutine} {\n    return {\n      getColorAsFloat: new GlslLibRoutine(\n          `\n        float getColorAsFloat(vec4 color) {\n            return decode(color);\n        }\n        `,\n          ['encoding.decode'])\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nconst INLINE_FUNC_DEF_REGEX = /@inline[\\s\\n\\r]+(\\w+)[\\s\\n\\r]+([0-9a-zA-Z_]+)\\s*\\(([^)]*)\\)\\s*{(([^}]|[\\n\\r])*)}/gm;\nconst FUNC_CALL_REGEX = '(\\\\w+)?\\\\s+([_0-9a-zA-Z]+)\\\\s+=\\\\s+__FUNC__\\\\((.*)\\\\)\\\\s*;';\n/**\n * GLSL preprocessor responsible for resolving @inline directives\n */\nexport function replaceInlines(script: string): string {\n  const inlineDefs: {[name: string]: {params: Array<{type: string; name: string}|null>; body: string}} = {};\n  let match;\n  while ((match = INLINE_FUNC_DEF_REGEX.exec(script)) !== null) {\n    const params = match[3]\n                       .split(',')\n                       .map(s => {\n                         const tokens = s.trim().split(' ');\n                         if (tokens && tokens.length === 2) {\n                           return {type: tokens[0], name: tokens[1]};\n                         }\n                         return null;\n                       })\n                       .filter(v => v !== null);\n    inlineDefs[match[2]] = {params, body: match[4]};\n  }\n  for (const name in inlineDefs) {\n    const regexString = FUNC_CALL_REGEX.replace('__FUNC__', name);\n    const regex = new RegExp(regexString, 'gm');\n    while ((match = regex.exec(script)) !== null) {\n      const type = match[1];\n      const variable = match[2];\n      const params = match[3].split(',');\n      const declLine = (type) ? `${type} ${variable};` : '';\n      let newBody: string = inlineDefs[name].body;\n      let paramRedecLine = '';\n      inlineDefs[name].params.forEach((v, i) => {\n        if (v) {\n          paramRedecLine += `${v.type} ${v.name} = ${params[i]};\\n`;\n        }\n      });\n      newBody = `${paramRedecLine}\\n ${newBody}`;\n      newBody = newBody.replace('return', `${variable} = `);\n      const replacement = `\n      ${declLine}\n      {\n        ${newBody}\n      }\n      `;\n      script = script.replace(match[0], replacement);\n    }\n  }\n  script = script.replace(INLINE_FUNC_DEF_REGEX, '');\n  return script;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutineNode, TopologicalSortGlslRoutines} from './glsl-definitions';\nimport {replaceInlines} from './glsl-function-inliner';\nimport {glslRegistry} from './glsl-registered-libs';\nimport {getDefaultFragShaderMain, getFragShaderPreamble} from './glsl-source';\nimport {ProgramInfo, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * Preprocessor for the additions to the GLSL language\n * It deals with:\n *  @include directives\n *  @inline\n *  Loop unrolling (not implemented)\n *  Macro resolution (not implemented)\n */\nexport class GlslPreprocessor {\n  readonly context: GlslContext;\n  readonly libs: {[name: string]: GlslLib} = {};\n  readonly glslLibRoutineDependencyGraph: {[routineName: string]: GlslLibRoutineNode} = {};\n\n  constructor(\n      glContext: WebGLContext, programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[],\n      outputTextureLayout: TextureLayout) {\n    this.context = new GlslContext(glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n\n    // construct GlslLibs\n    Object.keys(glslRegistry).forEach((name: string) => {\n      const lib = new glslRegistry[name](this.context);\n      this.libs[name] = lib;\n    });\n\n    // construct GlslRoutineDependencyGraph\n    const map = this.glslLibRoutineDependencyGraph;\n    for (const libName in this.libs) {\n      const lib = this.libs[libName];\n      const routinesInLib = lib.getFunctions();\n      for (const routine in routinesInLib) {\n        const key = libName + '.' + routine;\n        let currentNode: GlslLibRoutineNode;\n        if (map[key]) {\n          currentNode = map[key];\n          currentNode.routineBody = routinesInLib[routine].routineBody;\n        } else {\n          currentNode = new GlslLibRoutineNode(key, routinesInLib[routine].routineBody);\n          map[key] = currentNode;\n        }\n        const dependencies = routinesInLib[routine].dependencies;\n        if (dependencies) {\n          for (let i = 0; i < dependencies.length; ++i) {\n            if (!map[dependencies[i]]) {\n              const node = new GlslLibRoutineNode(dependencies[i]);\n              map[dependencies[i]] = node;\n              currentNode.addDependency(node);\n            } else {\n              currentNode.addDependency(map[dependencies[i]]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  preprocess(): string {\n    const programInfo = this.context.programInfo;\n    let source = programInfo.shaderSource;\n\n    // append main() function\n    if (!this.context.programInfo.hasMain) {\n      source = `${source}\n      ${getDefaultFragShaderMain(this.context.glContext.version, this.context.outputTextureLayout.shape.length)}`;\n    }\n    // replace inlines\n    source = replaceInlines(source);\n\n    // concat final source string\n    return `${getFragShaderPreamble(this.context.glContext.version)}\n    ${this.getUniforms(programInfo.inputNames, programInfo.variables)}\n    ${this.getImports(source)}\n    ${source}`;\n  }\n\n  protected getImports(script: string): string {\n    const routinesIncluded = this.selectGlslLibRoutinesToBeIncluded(script);\n\n    if (routinesIncluded.length === 0) {\n      return '';\n    }\n\n    let routines = '';\n    for (let i = 0; i < routinesIncluded.length; ++i) {\n      if (routinesIncluded[i].routineBody) {\n        routines += routinesIncluded[i].routineBody + '\\n';\n      } else {\n        throw new Error(`Missing body for the Glsl Library routine: ${routinesIncluded[i].name}`);\n      }\n    }\n\n    return routines;\n  }\n  private selectGlslLibRoutinesToBeIncluded(script: string): GlslLibRoutineNode[] {\n    const nodes: GlslLibRoutineNode[] = [];\n\n    Object.keys(this.glslLibRoutineDependencyGraph).forEach(classAndRoutine => {\n      const routine = classAndRoutine.split('.')[1];\n      if (script.indexOf(routine) !== -1) {\n        nodes.push(this.glslLibRoutineDependencyGraph[classAndRoutine]);\n      }\n    });\n\n    return TopologicalSortGlslRoutines.returnOrderedNodes(nodes);\n  }\n\n  protected getUniforms(samplers?: string[], variables?: VariableInfo[]): string {\n    const uniformLines: string[] = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLines.push(`uniform sampler2D ${sampler};`);\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLines.push(\n            `uniform ${variable.type} ${variable.name}${variable.arrayLength ? `[${variable.arrayLength}]` : ''};`);\n      }\n    }\n    return uniformLines.join('\\n');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {CoordsGlslLib} from './glsl-coordinate-lib';\nimport {GlslContext, GlslLib} from './glsl-definitions';\nimport {EncodingGlslLib} from './glsl-encoding-lib';\nimport {FragColorGlslLib} from './glsl-fragcolor-lib';\nimport {ShapeUtilsGlslLib} from './glsl-shape-utils-lib';\nimport {VecGlslLib} from './glsl-vec-lib';\n\nexport const glslRegistry: {[name: string]: new (context: GlslContext) => GlslLib} = {\n  'encoding': EncodingGlslLib,\n  'fragcolor': FragColorGlslLib,\n  'vec': VecGlslLib,\n  'shapeUtils': ShapeUtilsGlslLib,\n  'coordinates': CoordsGlslLib,\n  //  'arrays': ArrayGlslSLib\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class ShapeUtilsGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.bcastIndex(),\n      ...this.bcastMatmulIndex(),\n      ...this.offsetToIndices(),\n      ...this.indicesToOffset(),\n      ...this.incrementIndices()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  protected bcastIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].unpackedShape;\n      if (shape.length <= outputRank) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName} (int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected bcastMatmulIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      if (!(shape.length < 2 || shape.length > outputRank)) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastMatmulIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank - 2; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName}(int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n          realIndices[${rank - 1}] = bcastedIndices[${outputRank - 1}];\n          realIndices[${rank - 2}] = bcastedIndices[${outputRank - 2}];\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected indicesToOffset(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `indicesToOffset_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides));\n      funcName = `indicesToOffset_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static indexToOffsetSingle(name: string, rank: number, strides: readonly number[]): string {\n    let block = '';\n    for (let i = rank - 1; i >= 0; --i) {\n      block += `\n        offset += indices[${i}] * ${strides[i]};\n        `;\n    }\n    return `\n      int ${name}(int indices[${rank}]) {\n        int offset = 0;\n        ${block}\n        return offset;\n      }\n      `;\n  }\n  protected offsetToIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `offsetToIndices_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides));\n      funcName = `offsetToIndices_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static offsetToIndicesSingle(name: string, rank: number, strides: readonly number[]): string {\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n      indices[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= indices[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n      indices[${rank - 1}] = offset;`);\n    return `\n      void ${name}(int offset, out int indices[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n      `;\n  }\n  protected incrementIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const rank = shape.length;\n      const funcName = `incrementIndices_${name}`;\n      let shapeInit = '';\n      for (let i = 0; i < rank; ++i) {\n        shapeInit += `\n        shape[${i}] = ${shape[i]};`;\n      }\n      const body = `\n        void ${funcName}(int axis, out int indices[${rank}]) {\n          int shape[${rank}];\n          ${shapeInit};\n          for(int i = ${rank} -1 ; i >= 0; --i) {\n            if(i > axis) continue;\n            indices[i] += 1;\n            if(indices[i] < shape[i]) {\n              break;\n            }\n            indices[i] = 0;\n          }\n        }\n        `;\n      result[funcName] = new GlslLibRoutine(body);\n    });\n    return result;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * represent a version irrelevant abstraction of for GLSL source code\n */\nexport interface Glsl {\n  readonly version: string;\n  readonly attribute: string;\n  readonly varyingVertex: string;\n  readonly varyingFrag: string;\n  readonly texture2D: string;\n  readonly output: string;\n  readonly outputDeclaration: string;\n}\n\nconst GLSL_ES_2_0: Glsl = {\n  version: '',\n  attribute: 'attribute',\n  varyingVertex: 'varying',\n  varyingFrag: 'varying',\n  texture2D: 'texture2D',\n  output: 'gl_FragColor',\n  outputDeclaration: '',\n};\nconst GLSL_ES_3_0: Glsl = {\n  version: '#version 300 es',\n  attribute: 'in',\n  varyingVertex: 'out',\n  varyingFrag: 'in',\n  texture2D: 'texture',\n  output: 'outputColor',\n  outputDeclaration: 'out vec4 outputColor;',\n};\n\nexport function getGlsl(version: 1|2) {\n  return version === 1 ? GLSL_ES_2_0 : GLSL_ES_3_0;\n}\n\nexport function getVertexShaderSource(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n      precision highp float;\n      ${glsl.attribute} vec3 position;\n      ${glsl.attribute} vec2 textureCoord;\n\n      ${glsl.varyingVertex} vec2 TexCoords;\n\n      void main()\n      {\n          gl_Position = vec4(position, 1.0);\n          TexCoords = textureCoord;\n      }`;\n}\n\nexport function getFragShaderPreamble(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${glsl.varyingFrag} vec2 TexCoords;\n    ${glsl.outputDeclaration}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    // Custom vector types to handle higher dimenalities.\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    `;\n}\n\nexport function getDefaultFragShaderMain(version: 1|2, outputShapeLength: number): string {\n  const glsl = getGlsl(version);\n  return `\n  void main() {\n    int indices[${outputShapeLength}];\n    toVec(TexCoords, indices);\n    vec4 result = vec4(process(indices));\n    ${glsl.output} = result;\n  }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for vec routines\n * Vec is an varible length int array. The length is fixed at the time of\n * generating the library functions from the dimensions of the output.\n */\nexport class VecGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.binaryVecFunctions(), ...this.copyVec(), ...this.setVecItem(), ...this.getVecItem()};\n  }\n  protected binaryVecFunctions(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    const nameOp: {[name: string]: string} = {add: '+=', sub: '-=', mul: '*=', div: '/='};\n    const result: {[name: string]: GlslLibRoutine} = {};\n    for (const name in nameOp) {\n      const fname = `${name}Vec`;\n      let assignmentBlock = '';\n      for (let i = 0; i < rank; ++i) {\n        assignmentBlock += `\n          dest[${i}] ${nameOp[name]} src[${i}];\n          `;\n      }\n      const body = `\n        void ${fname}(int src[${rank}], out int dest[${rank}]) {\n          ${assignmentBlock}\n        }\n        `;\n      result[fname] = new GlslLibRoutine(body);\n    }\n\n    return result;\n  }\n  protected copyVec(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let assignmentBlock = '';\n    for (let i = 0; i < rank; ++i) {\n      assignmentBlock += `\n        dest[${i}] = src[${i}];\n        `;\n    }\n    const body = `\n      void copyVec(int src[${rank}], out int dest[${rank}]) {\n        ${assignmentBlock}\n      }\n      `;\n    return {copyVec: new GlslLibRoutine(body)};\n  }\n\n  protected setVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index =${rank} + index;\n        if (index == 0)\n            m[0] = value;\n        `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            m[${i}] = value;\n            `;\n    }\n    block += `\n        else\n            m[${rank - 1}] = value;\n        `;\n    const body = `\n      void setVecItem(out int m[${rank}], int index, int value) {\n        ${block}\n      }\n        `;\n    return {setVecItem: new GlslLibRoutine(body)};\n  }\n  protected getVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index = ${rank} + index;\n        if (index == 0)\n            return m[0];\n      `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            return m[${i}];\n      `;\n    }\n    block += `\n        else\n            return m[${rank - 1}];\n        `;\n    const body = `\n      int getVecItem(int m[${rank}], int index) {\n        ${block}\n      }\n    `;\n    return {getVecItem: new GlslLibRoutine(body)};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from '../../backend';\nimport {Logger} from '../../instrument';\nimport {Tensor} from '../../tensor';\nimport {ShapeUtil} from '../../util';\n\nimport {createPackProgramInfoLoader} from './ops/pack';\nimport {createPackedReshape3DProgramInfoLoader, isReshapeCheap, processDims3D} from './ops/reshape-packed';\nimport {encodeAsUint8} from './ops/uint8-encode';\nimport {createUnpackProgramInfoLoader} from './ops/unpack';\nimport {WebGLSessionHandler} from './session-handler';\nimport {Encoder} from './texture-data-encoder';\nimport {calculateTextureWidthAndHeight, createTextureLayoutFromShape, createTextureLayoutFromTextureType} from './texture-layout';\nimport {Artifact, ProgramInfo, ProgramInfoLoader, TextureData, TextureLayout, TextureType} from './types';\n\nconst getProgramInfoUniqueKey =\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTextureDatas: TextureData[]): string => {\n      const inputs =\n          inputTextureDatas.map(texture => `${texture.unpackedShape.join(',')};${texture.width}x${texture.height}`)\n              .join('_');\n      let key = programInfo.name;\n      if (programInfo.cacheHint) {\n        key += '[' + programInfo.cacheHint + ']';\n      }\n      key += ':' + inputs;\n      return key;\n    };\n\nexport class WebGLInferenceHandler implements InferenceHandler {\n  private packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  private unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  constructor(public session: WebGLSessionHandler) {\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  /**\n   * @returns [width, height]\n   */\n  calculateTextureWidthAndHeight(shape: readonly number[], textureType: TextureType): [number, number] {\n    return calculateTextureWidthAndHeight(this.session.layoutStrategy, shape, textureType);\n  }\n\n  executeProgram(program: ProgramInfo|ProgramInfoLoader, inputs: readonly Tensor[]): TextureData {\n    if (inputs.length < program.inputNames.length) {\n      throw new Error(`Input size mustn't be less than ${program.inputNames.length}.`);\n    }\n    if (program.inputNames.length !== program.inputTypes.length) {\n      throw new Error('input names size does not match input types');\n    }\n\n    // create texture info for input\n    const inputTextureDatas: TextureData[] = [];\n    for (let i = 0; i < program.inputNames.length; ++i) {\n      inputTextureDatas[i] = this.getOrCreateTextureData(inputs[i], program.inputTypes[i]);\n    }\n\n    const key = getProgramInfoUniqueKey(program, inputTextureDatas);\n    let artifact = this.session.programManager.getArtifact(key);\n    const programInfo = artifact ?\n        artifact.programInfo :\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\n                                                                    (program as ProgramInfo));\n\n    // create texture info for output\n    const outputTextureLayout = createTextureLayoutFromTextureType(\n        this.session.layoutStrategy, programInfo.output.dims, programInfo.output.textureType);\n    const outputTextureData = this.createTextureData(outputTextureLayout, programInfo.output.type);\n\n    if (!artifact) {\n      artifact = this.session.programManager.build(programInfo, inputTextureDatas, outputTextureData);\n      this.session.programManager.setArtifact(key, artifact);\n    }\n\n    this.runProgram(artifact, inputTextureDatas, outputTextureData);\n    return outputTextureData;\n  }\n\n  run(program: ProgramInfoLoader, inputs: readonly Tensor[]): Tensor {\n    const outputTextureData = this.executeProgram(program, inputs);\n    return outputTextureData.tensor;\n  }\n\n  private runProgram(artifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    // input should match\n    for (let i = 0; i < inputs.length; ++i) {\n      if (!!inputs[i].isPacked !== (artifact.programInfo.inputTypes[i] === TextureType.packed)) {\n        throw new Error(`input[${i}] property packed inconsistent`);\n      }\n    }\n\n    // output should match\n    if (!!output.isPacked !== (artifact.programInfo.output.textureType === TextureType.packed)) {\n      throw new Error('output property packed inconsistent');\n    }\n\n    this.session.programManager.run(artifact, inputs, output);\n  }\n\n  /**\n   * Create a TextureData object from a tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * If a related texture data is found in cache, returns it;\n   * Otherwise:\n   *   Creates a new texture layout if not provided;\n   *   Creates WebGLTexture with the layout;\n   *   Upload tensor data to the texture;\n   *   Creates a texture data object associated with the given tensor.\n   * @param tensor the tensor with data to upload\n   */\n  private getOrCreateTextureData(tensor: Tensor, textureType: TextureType) {\n    let td = this.getTextureData(tensor.dataId, textureType === TextureType.packed);\n\n    if (!td) {\n      // check if we have texture data in different type\n      td = this.getTextureData(tensor.dataId, textureType !== TextureType.packed);\n      if (td) {\n        if (textureType === TextureType.packed) {\n          return this.pack(td);\n        } else {\n          return this.unpack(td);\n        }\n      }\n    }\n\n    if (!td) {\n      const layout = createTextureLayoutFromTextureType(this.session.layoutStrategy, tensor.dims, textureType);\n\n      if (textureType === TextureType.packedLastDimension) {\n        const group = 1;\n        const channels = 4;\n        const shape = tensor.dims;\n        if (shape.length === 4) {\n          // pre-processing for kernel data of Conv.\n          //\n          // TODO: currently this is a hacking to overwrite Conv's weight. The correct way to do this should be:\n          // 1. implement texture based const-folding\n          // 2. create a WebGL program \"preprocessConvWeight\" to do the same work as below\n          // 3. run the program before dotProduct.\n          //\n          const adjustedKernelShape = [shape[0], Math.ceil((shape[1] * shape[2] * shape[3]) / channels)];\n          const adjustedLayout =\n              createTextureLayoutFromTextureType(this.session.layoutStrategy, adjustedKernelShape, textureType);\n          let buffer = tensor.numberData;\n          if (shape[1] * shape[2] * shape[3] % channels !== 0) {\n            const numFeatureMaps = shape[0];\n            const oldRowSize = shape[1] * shape[2] * shape[3];\n            const newRowSize = Math.ceil(oldRowSize * group / channels) * channels;\n            const newSize = numFeatureMaps * newRowSize;\n            buffer = new Float32Array(newSize);\n            for (let f = 0; f < numFeatureMaps; ++f) {\n              const oldOffset = f * oldRowSize;\n              const newOffset = f * newRowSize + f % group * oldRowSize;\n              buffer.set(tensor.numberData.subarray(oldOffset, oldOffset + oldRowSize), newOffset);\n            }\n          }\n          return this.createTextureData(adjustedLayout, tensor.type, buffer, tensor, Encoder.Usage.UploadOnly);\n        }\n      }\n\n      if (textureType === TextureType.packed) {\n        const unpackedTextureLayout =\n            createTextureLayoutFromShape(this.session.layoutStrategy, tensor.dims, 1, [], {reverseWH: true});\n        const unpackedTextureData = this.createTextureData(\n            unpackedTextureLayout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n        td = this.pack(unpackedTextureData);\n      } else {\n        td = this.createTextureData(layout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n      }\n    }\n    return td;\n  }\n\n  /**\n   * Create a TextureData object using the given data and bind to the given tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * NOTE: this function is a hack for Conv implementation. should remove this function, after rewriting Conv\n   * implementation by Graph.Transformer\n   * @param dataType the tensor data type\n   * @param data the actual data to upload\n   * @param tensor the tensor to bind. tensor's data is ignored.\n   */\n  createTextureDataFromLayoutBindTensor(\n      layout: TextureLayout, dataType: Tensor.DataType, data: Tensor.NumberType, tensor: Tensor): TextureData {\n    return this.createTextureData(layout, dataType, data, tensor, Encoder.Usage.UploadOnly);\n  }\n\n  private createTextureData(\n      layout: TextureLayout, dataType: Tensor.DataType, data?: Tensor.NumberType, tensor?: Tensor,\n      usage?: Encoder.Usage): TextureData {\n    Logger.verbose('InferenceHandler', `Creating TextureData: layout:[${JSON.stringify(layout)}]`);\n    const texture = this.session.textureManager.createTextureFromLayout(dataType, layout, data, usage);\n    return this.createTextureDataFromTexture(layout, dataType, texture, tensor);\n  }\n\n  reshapeUnpacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\n    const newTextureLayout: TextureLayout = {\n      channels: inputTD.channels,\n      height: inputTD.height,\n      width: inputTD.width,\n      // handle reshaping into scalar Tensors\n      shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n      strides: ShapeUtil.computeStrides(reshapedDims),\n      unpackedShape: reshapedDims,\n    };\n    const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n    return newTextureData.tensor;\n  }\n\n  reshapePacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.packed);\n\n    // check if the reshape is 'cheap'\n    if (isReshapeCheap(input.dims, reshapedDims)) {\n      const newTextureLayout: TextureLayout = {\n        channels: inputTD.channels,\n        height: inputTD.height,\n        width: inputTD.width,\n        // handle reshaping into scalar Tensors\n        shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n        strides: ShapeUtil.computeStrides(reshapedDims),\n        unpackedShape: reshapedDims,\n        isPacked: true\n      };\n      const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n      return newTextureData.tensor;\n    }\n\n    const squeezedInputShape = processDims3D(input.dims);\n    const squeezedOutputShape = processDims3D(reshapedDims);\n\n    const squeezedInputTensor = this.reshapePacked(input, squeezedInputShape);\n    const squeezedOutputTensor = this.run(\n        createPackedReshape3DProgramInfoLoader(this, squeezedInputTensor, squeezedOutputShape), [squeezedInputTensor]);\n    const outputTensor = this.reshapePacked(squeezedOutputTensor, reshapedDims);\n    return outputTensor;\n  }\n\n  cast(input: Tensor, type: Tensor.DataType): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\n    const newTextureData = this.createTextureDataFromTexture(inputTD as TextureLayout, type, inputTD.texture);\n    return newTextureData.tensor;\n  }\n\n  private createTextureDataFromTexture(\n      layout: TextureLayout, dataType: Tensor.DataType, texture: WebGLTexture, tensor?: Tensor, tensorId?: Tensor.Id) {\n    const textureData: TextureData = {\n      ...layout,\n      tensor: tensor ||\n          new Tensor(\n                  layout.unpackedShape, dataType, (_id: Tensor.Id) => this.readTexture(textureData),\n                  async (_id: Tensor.Id) => this.readTextureAsync(textureData), undefined, tensorId),\n      texture\n    };\n    this.setTextureData(textureData.tensor.dataId, textureData, layout.isPacked);\n    return textureData;\n  }\n\n  private getTextureData(tensorId: Tensor.Id, isPacked = false): TextureData|undefined {\n    return this.session.isInitializer(tensorId) ? this.session.getTextureData(tensorId, isPacked) :\n        isPacked                                ? this.packedTextureDataCache.get(tensorId) :\n                                                  this.unpackedTextureDataCache.get(tensorId);\n  }\n  setTextureData(tensorId: Tensor.Id, td: TextureData, isPacked = false): void {\n    if (this.session.isInitializer(tensorId)) {\n      this.session.setTextureData(tensorId, td, isPacked);\n    } else {\n      (isPacked ? this.packedTextureDataCache : this.unpackedTextureDataCache).set(tensorId, td);\n    }\n  }\n  isTextureLayoutCached(tensor: Tensor, isPacked = false): boolean {\n    return !!this.getTextureData(tensor.dataId, isPacked);\n  }\n\n  dispose(): void {\n    this.session.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  readTexture(textureData: TextureData): Tensor.NumberType {\n    if (textureData.isPacked) {\n      return this.readTexture(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTexture(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  async readTextureAsync(textureData: TextureData): Promise<Tensor.NumberType> {\n    if (textureData.isPacked) {\n      return this.readTextureAsync(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTextureAsync(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  pack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createPackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n\n  unpack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createUnpackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OpSet} from '../../opset';\n\nimport {batchNormalization, parseBatchNormalizationAttributes} from './ops/batch-normalization';\nimport * as binaryOps from './ops/binary-op';\nimport {cast, parseCastAttributes} from './ops/cast';\nimport {concat, parseConcatAttributes} from './ops/concat';\nimport {conv, parseConvAttributes} from './ops/conv';\nimport {convTranspose, parseConvTransposeAttributes} from './ops/conv-transpose';\nimport {depthToSpace, parseDepthToSpaceAttributes} from './ops/depth-to-space';\nimport {flatten, parseFlattenAttributes} from './ops/flatten';\nimport {gather, parseGatherAttributes} from './ops/gather';\nimport {gemm, parseGemmAttributesV11, parseGemmAttributesV7} from './ops/gemm';\nimport {imageScaler, parseImageScalerAttributes} from './ops/image-scaler';\nimport {instanceNormalization, parseInstanceNormalizationAttributes} from './ops/instance-normalization';\nimport {lrn, parseLrnAttributes} from './ops/lrn';\nimport {matMul, parseMatMulAttributes} from './ops/matmul';\nimport {padV11, padV2, parsePadAttributesV11, parsePadAttributesV2} from './ops/pad';\nimport {averagePool, globalAveragePool, globalMaxPool, maxPool, parseAveragePoolAttributes, parseGlobalAveragePoolAttributes, parseMaxPoolAttributes} from './ops/pool';\nimport {parseReduceAttributes, reduceLogSum, reduceLogSumSquare, reduceMax, reduceMean, reduceMin, reduceProd, reduceSum} from './ops/reduce';\nimport {reshape} from './ops/reshape';\nimport {parseResizeAttributesV10, parseResizeAttributesV11, resize} from './ops/resize-packed';\nimport {shape} from './ops/shape';\nimport {parseSliceAttributes, slice, sliceV10} from './ops/slice';\nimport {parseSoftmaxAttributes, parseSoftmaxAttributesV13, softmax, softmaxV13} from './ops/softmax';\nimport {parseSplitAttributes, split} from './ops/split';\nimport {parseSqueezeAttributes, squeeze, squeezeV13} from './ops/squeeze';\nimport {sum} from './ops/sum';\nimport {tile} from './ops/tile';\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\nimport * as unaryOps from './ops/unary-op';\nimport {parseUnsqueezeAttributes, unsqueeze, unsqueezeV13} from './ops/unsqueeze';\nimport {parseUpsampleAttributesV7, parseUpsampleAttributesV9, upsample} from './ops/upsample';\n\nexport const WEBGL_OP_RESOLVE_RULES: readonly OpSet.ResolveRule[] = [\n  ['Abs', '', '6+', unaryOps.abs],\n  ['Acos', '', '7+', unaryOps.acos],\n  ['Add', '', '7+', binaryOps.add],\n  ['And', '', '7+', binaryOps.and],\n  ['Asin', '', '7+', unaryOps.asin],\n  ['Atan', '', '7+', unaryOps.atan],\n  // TODO: support new attributes for AveragePool-10\n  ['AveragePool', '', '7+', averagePool, parseAveragePoolAttributes],\n  ['BatchNormalization', '', '7+', batchNormalization, parseBatchNormalizationAttributes],\n  ['Cast', '', '6+', cast, parseCastAttributes],\n  ['Ceil', '', '6+', unaryOps.ceil],\n  ['Clip', '', '6-10', unaryOps.clip, unaryOps.parseClipAttributes],\n  ['Clip', '', '11+', unaryOps.clipV11],\n  ['Concat', '', '4+', concat, parseConcatAttributes],\n  ['Conv', '', '1+', conv, parseConvAttributes],\n  ['ConvTranspose', '', '1+', convTranspose, parseConvTransposeAttributes],\n  ['Cos', '', '7+', unaryOps.cos],\n  ['Div', '', '7+', binaryOps.div],\n  ['Dropout', '', '7+', unaryOps.identity],\n  ['DepthToSpace', '', '1+', depthToSpace, parseDepthToSpaceAttributes],\n  ['Equal', '', '7+', binaryOps.equal],\n  ['Elu', '', '6+', unaryOps.elu, unaryOps.parseEluAttributes],\n  ['Exp', '', '6+', unaryOps.exp],\n  ['Flatten', '', '1+', flatten, parseFlattenAttributes],\n  ['Floor', '', '6+', unaryOps.floor],\n  ['FusedConv', 'com.microsoft', '1+', conv, parseConvAttributes],\n  ['Gather', '', '1+', gather, parseGatherAttributes],\n  ['Gemm', '', '7-10', gemm, parseGemmAttributesV7],\n  ['Gemm', '', '11+', gemm, parseGemmAttributesV11],\n  ['GlobalAveragePool', '', '1+', globalAveragePool, parseGlobalAveragePoolAttributes],\n  ['GlobalMaxPool', '', '1+', globalMaxPool],\n  ['Greater', '', '7+', binaryOps.greater],\n  ['Identity', '', '1+', unaryOps.identity],\n  ['ImageScaler', '', '1+', imageScaler, parseImageScalerAttributes],\n  ['InstanceNormalization', '', '6+', instanceNormalization, parseInstanceNormalizationAttributes],\n  ['LeakyRelu', '', '6+', unaryOps.leakyRelu, unaryOps.parseLeakyReluAttributes],\n  ['Less', '', '7+', binaryOps.less],\n  ['LRN', '', '1+', lrn, parseLrnAttributes],\n  ['Log', '', '6+', unaryOps.log],\n  ['MatMul', '', '1+', matMul, parseMatMulAttributes],\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\n  ['MaxPool', '', '1+', maxPool, parseMaxPoolAttributes],\n  ['Mul', '', '7+', binaryOps.mul],\n  ['Neg', '', '6+', unaryOps.neg],\n  ['Not', '', '1+', unaryOps.not],\n  ['Or', '', '7+', binaryOps.or],\n  ['Pad', '', '2-10', padV2, parsePadAttributesV2],\n  ['Pad', '', '11+', padV11, parsePadAttributesV11],\n  ['Pow', '', '7+', binaryOps.pow],\n  ['PRelu', '', '7+', binaryOps.pRelu],\n  ['ReduceLogSum', '', '1+', reduceLogSum, parseReduceAttributes],\n  ['ReduceMax', '', '1+', reduceMax, parseReduceAttributes],\n  ['ReduceMean', '', '1+', reduceMean, parseReduceAttributes],\n  ['ReduceMin', '', '1+', reduceMin, parseReduceAttributes],\n  ['ReduceProd', '', '1+', reduceProd, parseReduceAttributes],\n  ['ReduceSum', '', '1-12', reduceSum, parseReduceAttributes],\n  ['ReduceSumSquare', '', '1+', reduceLogSumSquare, parseReduceAttributes],\n  ['Relu', '', '6+', unaryOps.relu],\n  ['Reshape', '', '5+', reshape],\n  ['Resize', '', '10', resize, parseResizeAttributesV10],\n  ['Resize', '', '11+', resize, parseResizeAttributesV11],\n  ['Shape', '', '1+', shape],\n  ['Sigmoid', '', '6+', unaryOps.sigmoid],\n  ['Sin', '', '7+', unaryOps.sin],\n  ['Slice', '', '10+', sliceV10],  // TODO: support 'steps' for Slice-10\n  ['Slice', '', '1-9', slice, parseSliceAttributes],\n  // The \"semantic\" meaning of axis has changed in opset-13.\n  ['Softmax', '', '1-12', softmax, parseSoftmaxAttributes],\n  ['Softmax', '', '13+', softmaxV13, parseSoftmaxAttributesV13],\n  // 'Split' operator has an optional attribute 'split'\n  // this attribute determines how the specified axis of input data is split.\n  // When the attribute is missing, we need the count of number of outputs\n  // so that we can determine the 'split' attribute from the runtime input to the Operator\n  ['Split', '', '2-12', split, parseSplitAttributes],\n  ['Sqrt', '', '6+', unaryOps.sqrt],\n  ['Squeeze', '', '1-12', squeeze, parseSqueezeAttributes],\n  ['Squeeze', '', '13+', squeezeV13],\n  ['Sub', '', '7+', binaryOps.sub],\n  ['Sum', '', '6+', sum],\n  ['Tan', '', '7+', unaryOps.tan],\n  ['Tanh', '', '6+', unaryOps.tanh],\n  ['Tile', '', '6+', tile],\n  ['Transpose', '', '1+', transpose, parseTransposeAttributes],\n  ['Upsample', '', '7-8', upsample, parseUpsampleAttributesV7],\n  ['Upsample', '', '9', upsample, parseUpsampleAttributesV9],\n  ['Unsqueeze', '', '1-12', unsqueeze, parseUnsqueezeAttributes],\n  ['Unsqueeze', '', '13+', unsqueezeV13],\n  ['Xor', '', '7+', binaryOps.xor],\n];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface BatchNormalizationAttributes extends AttributeWithCacheKey {\n  epsilon: number;\n  momentum: number;\n  spatial: number;\n}\n\nconst batchNormalizationProgramMetadata = {\n  name: 'BatchNormalization',\n  inputNames: ['A', 'Scale', 'B', 'Mean', 'Variance'],\n  inputTypes:\n      [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked]\n};\n\nexport const batchNormalization: OperatorImplementation<BatchNormalizationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...batchNormalizationProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createBatchNormalizationProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseBatchNormalizationAttributes: OperatorInitialization<BatchNormalizationAttributes> =\n    (node: Graph.Node): BatchNormalizationAttributes => {\n      const epsilon = node.attributes.getFloat('epsilon', 1e-5);\n      const momentum = node.attributes.getFloat('momentum', 0.9);\n      const spatial = node.attributes.getInt('spatial', 1);\n      return createAttributeWithCacheKey({epsilon, momentum, spatial});\n    };\n\nconst createBatchNormalizationProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes):\n        ProgramInfo => {\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n          const rank = inputs[0].dims.length;\n          const [scaleWidth, scaleHeight] =\n              inferenceHandler.calculateTextureWidthAndHeight(inputs[1].dims, TextureType.unpacked);\n          const shaderSource = `\n  float process(int[${rank}] indices) {\n    vec2 position = offsetToCoords(indices[1], ${scaleWidth}, ${scaleHeight});\n    float scale = getColorAsFloat(${glsl.texture2D}(Scale, position));\n    float mean = getColorAsFloat(${glsl.texture2D}(Mean, position));\n    float variance = getColorAsFloat(${glsl.texture2D}(Variance, position));\n    float b = getColorAsFloat(${glsl.texture2D}(B, position));\n\n    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${attributes.epsilon})) ) + b;\n  }`;\n          return {\n            ...batchNormalizationProgramMetadata,\n            output: {dims: inputs[0].dims, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 5) {\n    throw new Error('BatchNormalization requires 5 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n  const mean = inputs[3];\n  const var_ = inputs[4];\n\n  // input should atleast have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1 || mean.dims.length !== 1 ||\n      var_.dims.length !== 1) {\n    throw new Error('invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1] || mean.dims[0] !== X.dims[1] ||\n      var_.dims[0] !== X.dims[1]) {\n    throw new Error('invalid input shape.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64') || (mean.type !== 'float32' && mean.type !== 'float64') ||\n      (var_.type !== 'float32' && var_.type !== 'float64')) {\n    throw new Error('invalid input tensor types.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\n\nexport function glslAdd(): GlslValueFunction {\n  const name = 'add_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a + b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 + v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslDiv(): GlslValueFunction {\n  const name = 'div_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a / b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 / v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslMul(): GlslValueFunction {\n  const name = 'mul_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a * b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 * v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSub(): GlslValueFunction {\n  const name = 'sub_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a - b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 - v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslEqual(): GlslValueFunction {\n  const name = 'equal_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a == b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(equal(v1, v2));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslGreater(): GlslValueFunction {\n  const name = 'greater_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a > b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r > v2.r ,\n      v1.g > v2.g,\n      v1.b > v2.b,\n      v1.a > v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLess(): GlslValueFunction {\n  const name = 'less_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a < b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r < v2.r ,\n                v1.g < v2.g,\n                v1.b < v2.b,\n                v1.a < v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslAnd(): GlslValueFunction {\n  const name = 'and_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) && bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r && b2.r ,\n                b1.g && b2.g,\n                b1.b && b2.b,\n                b1.a && b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslOr(): GlslValueFunction {\n  const name = 'or_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) || bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r || b2.r ,\n                b1.g || b2.g,\n                b1.b || b2.b,\n                b1.a || b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslXor(): GlslValueFunction {\n  const name = 'xor_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) ^^ bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r ^^ b2.r ,\n                b1.g ^^ b2.g,\n                b1.b ^^ b2.b,\n                b1.a ^^ b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslPow(): GlslValueFunction {\n  return glslBuiltinBinary('pow');\n}\nexport function glslPRelu(): GlslValueFunction {\n  const name = 'prelu_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a < 0.0 ? a * b: a;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(\n      v1.r < 0.0 ? v1.r * v2.r: v1.r,\n      v1.g < 0.0 ? v1.g * v2.g: v1.g,\n      v1.b < 0.0 ? v1.b * v2.b: v1.b,\n      v1.a < 0.0 ? v1.a * v2.a: v1.a\n      );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nfunction glslBuiltinBinary(fname: string): GlslValueFunction {\n  const name = `${fname}_`;\n  const body = `\n  float ${name}(float a, float b) {\n    return ${fname}(a, b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return ${fname}(v1, v2);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nconst createBinaryProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type, cacheKey?: string): ProgramInfoLoader => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        cacheHint: cacheKey,\n        get: () => createBinaryProgramInfo(handler, inputs, glslFunc, outputTensorType)\n      };\n    };\n\nconst createBinaryProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type): ProgramInfo => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n      let outputShape = inputs[0].dims;\n\n      const usePackedTexture = handler.session.pack;\n\n      if (isBroadcast) {\n        const calculatedShape = BroadcastUtil.calcShape(inputs[0].dims, inputs[1].dims, false);\n        if (!calculatedShape) {\n          throw new Error('Can\\'t perform binary op on the given tensors');\n        }\n        outputShape = calculatedShape;\n        const outputRank = outputShape.length;\n        const aRank = inputs[0].dims.length !== 0 ? inputs[0].dims.length : 1;\n        const bRank = inputs[1].dims.length !== 0 ? inputs[1].dims.length : 1;\n        const aBcast = inputs[0].dims.length !== 0 ? 'bcastIndices_A(indices, aindices);' : 'aindices[0] = 0;';\n        const bBcast = inputs[1].dims.length !== 0 ? 'bcastIndices_B(indices, bindices);' : 'bindices[0] = 0;';\n\n        const glsl = getGlsl(handler.session.backend.glContext.version);\n        const shaderSource = usePackedTexture ? `\n      ${glslFunc.body}\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n        vec4 result = ${glslFunc.name}(a, b);\n        ${glsl.output} = result;\n      }` :\n                                                `\n      ${glslFunc.body}\n      float process(int indices[${outputRank}]) {\n        int aindices[${aRank}];\n        int bindices[${bRank}];\n        ${aBcast}\n        ${bBcast}\n        return ${glslFunc.name}(_A(aindices), _B(bindices));\n      }`;\n\n        return {\n          name: glslFunc.name,\n          inputNames: ['A', 'B'],\n          inputTypes: [textureType, textureType],\n          output: {dims: outputShape, type: outputTensorType, textureType},\n          shaderSource,\n          hasMain: usePackedTexture\n        };\n      }\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n      const shaderSource = `\n    ${glslFunc.body}\n    void main() {\n      vec4 v1 = ${glsl.texture2D}(A, TexCoords);\n      vec4 v2 = ${glsl.texture2D}(B, TexCoords);\n      vec4 result = ${glslFunc.name}(v1, v2);\n      ${glsl.output} = result;\n    }\n    `;\n\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        output: {dims: inputs[0].dims, type: outputTensorType, textureType},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const add = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAdd()), inputs)];\n\nexport const and = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAnd(), 'bool'), inputs)];\n\nexport const div = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslDiv()), inputs)];\n\nexport const equal = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslEqual(), 'bool'), inputs)];\n\nexport const greater = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslGreater(), 'bool'), inputs)];\n\nexport const less = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslLess(), 'bool'), inputs)];\n\nexport const mul = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslMul()), inputs)];\n\nexport const or = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslOr(), 'bool'), inputs)];\n\nexport const pow = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPow()), inputs)];\n\nexport const pRelu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPRelu()), inputs)];\n\nexport const sub = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslSub()), inputs)];\n\nexport const xor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslXor(), 'bool'), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ProtoUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const cast: OperatorImplementation<Tensor.DataType> =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], to: Tensor.DataType): Tensor[] => {\n      validateInputs(inputs);\n      return [handler.cast(inputs[0], to)];\n    };\n\nexport const parseCastAttributes: OperatorInitialization<Tensor.DataType> = (node: Graph.Node): Tensor.DataType =>\n    ProtoUtil.tensorDataTypeFromProto(node.attributes.getInt('to'));\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Cast requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('Invalid input type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {ConcatAttributes} from './concat';\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst createPackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat (packed)',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.packed),\n  cacheHint\n});\n\nconst createPackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n      const coords = getChannels('coords', rank);\n      const dtype = getCoordsDataType(rank);\n      const unpackChannel = unpackFromChannel();\n\n      const shapes = inputs.map(i => i.dims);\n      const channels = getGlChannels(rank);\n      const offsets: number[] = new Array(shapes.length - 1);\n\n      offsets[0] = shapes[0][axis];\n      for (let i = 1; i < offsets.length; i++) {\n        offsets[i] = offsets[i - 1] + shapes[i][axis];\n      }\n\n      const channel = channels[axis];\n      const lastChannels = channels.slice(-2);\n      const allChannels = channels.join();\n\n      let getValueSnippet = `if (${channel} < ${offsets[0]}) {\n        return getChannel(\n            getX0(${allChannels}), vec2(${lastChannels.join()}));\n        }`;\n      for (let i = 1; i < offsets.length; i++) {\n        const shift = offsets[i - 1];\n        getValueSnippet += `\n            if (${channel} < ${offsets[i]}  && ${channel} >= ${offsets[i - 1]}) {\n              return getChannel(\n                getX${i}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n                vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));\n            }`;\n      }\n      const lastIndex = offsets.length;\n      const shift = offsets[offsets.length - 1];\n      getValueSnippet += `\n            return getChannel(\n              getX${lastIndex}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n              vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));`;\n\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n\n      const shaderSource = `\n          ${unpackChannel}\n          float getValue(${channels.map(x => 'int ' + x)}) {\n            ${getValueSnippet}\n          }\n\n          void main() {\n            ${dtype} coords = getOutputCoords();\n            int lastDim = coords.${channels[rank - 1]};\n            coords.${channels[rank - 1]} = coords.${channels[rank - 2]};\n            coords.${channels[rank - 2]} = lastDim;\n\n            vec4 result = vec4(getValue(${coords}), 0., 0., 0.);\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} + 1;\n            if (${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.g = getValue(${coords});\n            }\n\n            ${coords[rank - 2]} = ${coords[rank - 2]} + 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]}) {\n              result.a = getValue(${coords});\n            }\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} - 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]} &&\n                ${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.b = getValue(${coords});\n            }\n            ${glsl.output} = result;\n          }\n        `;\n\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createPackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createPackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createPackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getShiftedChannelsSnippet = (channels: string[], channel: string, shift: number): string => {\n  const channelIdx = channels.indexOf(channel);\n  const res = channels.map((c, idx) => {\n    if (idx === channelIdx) {\n      return `${c} - ${shift}`;\n    } else {\n      return c;\n    }\n  });\n  return res.join();\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {createPackedConcatProgramInfoLoader} from './concat-packed';\n\nexport interface ConcatAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const concat: OperatorImplementation<ConcatAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): Tensor[] => {\n      validateInputs(inputs);\n      if (inferenceHandler.session.pack && inputs[0].dims.length > 1) {\n        const output =\n            inferenceHandler.run(createPackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      } else {\n        const output =\n            inferenceHandler.run(createUnpackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      }\n    };\n\nconst createUnpackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.unpacked),\n  cacheHint\n});\n\nconst createUnpackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n\n      const sizeInConcatAxis = new Array<number>(inputs.length);\n      let previousSum = 0;\n      for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n        previousSum += inputs[i].dims[axis];\n        sizeInConcatAxis[i] = previousSum;\n      }\n\n      let getTextureIndexWhereDataResidesMethod = '';\n      // in most cases linear search is sufficient, as in most scenarios, only 2 tensors are concatenated\n      if (inputs.length < 5) {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n      } else {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesBinarySearch(sizeInConcatAxis);\n      }\n\n      const fetchDataFromCorrectTextureMethod = getFetchDataFromCorrectTextureMethod(inputs.length, rank);\n      const getSizeInConcatAxisValueFromIndexMethod = getGetSizeInConcatAxisValueFromIndexMethod(sizeInConcatAxis);\n      const shaderSource = `\n        ${fetchDataFromCorrectTextureMethod}\n        ${getSizeInConcatAxisValueFromIndexMethod}\n        ${getTextureIndexWhereDataResidesMethod}\n        float process(int indices[${rank}]) {\n          int textureIndex = getTextureWhereDataResides (indices[${axis}]);\n\n          if(textureIndex != 0) {\n            indices[${axis}] = indices[${axis}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));\n          }\n\n          return fetchDataFromCorrectTexture(textureIndex, indices);\n        }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n      };\n    };\n\nconst createUnpackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createUnpackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createUnpackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getTextureIndexWhereDataResidesLinearSearch = (sizeInConcatAxis: number[]): string => {\n  const searchAxis = sizeInConcatAxis.map((size, i) => `if(index<${size}) {return ${i};}\n`);\n  return `int getTextureWhereDataResides(int index) {\n      ${searchAxis.join('')}\n    }`;\n};\n\n// TODO: Implement BinarySearch in GLSL\nconst getTextureIndexWhereDataResidesBinarySearch = (sizeInConcatAxis: number[]): string =>\n    getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n\nconst getFetchDataFromCorrectTextureMethod = (numberOfTensors: number, tensorRank: number) => {\n  const codeLines: string[] = [`float fetchDataFromCorrectTexture(int textureIndex, int indices[${tensorRank}]) {`];\n  for (let i = 0; i < numberOfTensors; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    } else if (i === numberOfTensors - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return _X${i}(indices); }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst getGetSizeInConcatAxisValueFromIndexMethod = (sizeInConcatAxis: number[]): string => {\n  const codeLines: string[] = ['int getSizeInConcatAxisValueFromIndex(int index) {'];\n  for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    } else if (i === sizeInConcatAxis.length - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return ${sizeInConcatAxis[i]}; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n\n  return codeLines.join('\\n');\n};\n\nexport const parseConcatAttributes: OperatorInitialization<ConcatAttributes> = (node: Graph.Node): ConcatAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis')});\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 1) {\n    throw new Error('too few inputs');\n  }\n\n  const inputType = inputs[0].type;\n  const inputDimensionality = inputs[0].dims.length;\n\n  // TODO: Support string concat\n  if (inputType === 'string') {\n    throw new Error('string tensor is not supported yet');\n  }\n\n  for (const input of inputs) {\n    // make sure types of all inputs match\n    if (input.type !== inputType) {\n      throw new Error('input tensors should be one type');\n    }\n\n    // make sure the dimensionality of all inputs are the same\n    if (input.dims.length !== inputDimensionality) {\n      throw new Error('input tensors should have the same shape');\n    }\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../../instrument';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {getActivationSnippet} from './fuse-utils';\n\nconst createUnpackedGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'GroupedConv',\n  inputNames: hasBias ? ['X', 'W', 'Bias'] : ['X', 'W'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nconst createUnpackedGroupedConvProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\n     attributes: ConvAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBias(output_channel);' : '';\n      const xShape = inputs[0].dims.slice();\n      const wShape = inputs[1].dims.slice();\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\n      Logger.verbose(\n          'GroupedConv',\n          `autpPad:${attributes.autoPad}, dilations:${attributes.dilations}, group:${attributes.group}, kernelShape:${\n              attributes.kernelShape}, pads:${attributes.pads}, strides:${attributes.strides}`);\n      const outputShape =\n          calculateOutputShape(xShape, wShape, attributes.dilations, attributes.pads, attributes.strides);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const {activationFunction, applyActivation} = getActivationSnippet(attributes);\n\n      const shaderSource = `\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\n  ${activationFunction}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n    ivec2 xRCCorner = coords.zw * strides - pads;\n    int group_id = output_channel / ${outputChannelsPerGroup};\n\n    float value = 0.0;\n    for (int wInChannel = 0; wInChannel < ${wShape[1]}; wInChannel++) {\n      int input_channel = group_id * ${wShape[1]} + wInChannel;\n      for (int wHeight = 0; wHeight < ${wShape[2]}; wHeight++) {\n        int xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]};\n\n        if (xHeight < 0 || xHeight >= ${xShape[2]}) {\n          continue;\n        }\n\n        for (int wWidth = 0; wWidth < ${wShape[3]}; wWidth++) {\n          int xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]};\n          if (xWidth < 0 || xWidth >= ${xShape[3]}) {\n            continue;\n          }\n\n          float xVal = getX(batch, input_channel, xWidth, xHeight);\n          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${processBias}\n    ${applyActivation}\n    ${glsl.output} = vec4(value, .0, .0, .0);\n  }\n`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createUnpackedGroupedConvProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes):\n        ProgramInfoLoader => {\n          const metadata = createUnpackedGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\n          return {\n            ...metadata,\n            get: () => createUnpackedGroupedConvProgramInfo(inferenceHandler, inputs, metadata, attributes)\n          };\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {createPackedIm2ColProgramInfoLoader} from './im2col-pack';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const conv2DPackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapePacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapePacked(matmulOutput, outputShape);\n    };\n\nexport const conv2DPacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n\n      // run im2col\n      const im2colOutput = inferenceHandler.run(\n          createPackedIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes),\n          [inputs[0]]);\n\n      // reshape kernel\n      const kernelReshaped = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1] * kshape[2] * kshape[3]]);\n\n      // run matmul\n      const matmulInputs =\n          (inputs.length === 3) ? [kernelReshaped, im2colOutput, inputs[2]] : [kernelReshaped, im2colOutput];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n\n      // reshape output\n      const outputReshaped = inferenceHandler.reshapePacked(matmulOutput, outputShape);\n      return outputReshaped;\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {InferenceHandler} from '../../../backend';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {ConvAttributes} from './conv';\nimport {getActivationSnippet, parseInternalActivationAttributes} from './fuse-utils';\n\nconst computeTotalPad =\n    (inDim: number, stride: number, adj: number, kernel: number, dilation: number, outSize: number) =>\n        (inDim - 1) * stride + adj + (kernel - 1) * dilation + 1 - outSize;\n\nconst distributePadding = (totalPad: number, autoPad: string, pads: number[], head: number, tail: number) => {\n  const smallPad = Math.floor(totalPad / 2);\n  if (autoPad === 'SAME_UPPER') {\n    pads[head] = smallPad;\n    pads[tail] = totalPad - smallPad;\n  } else if (autoPad === 'SAME_LOWER') {\n    pads[head] = totalPad - smallPad;\n    pads[tail] = smallPad;\n  }\n};\n\nconst calculateOutputShapeAndPads =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[], autoPad: string,\n     pads: number[], strides: readonly number[], outputPadding: readonly number[], outputShape: number[]) => {\n      const spatialRank = inputShape.length - 2;\n      const updateShape = outputShape.length === 0;\n      for (let i = 0; i < spatialRank; ++i) {\n        const outSize = updateShape ? inputShape[i + 2] * strides[i] : outputShape[i];\n        const totalPad = computeTotalPad(inputShape[i + 2], strides[i], pads[i], kernelShape[i], dilations[i], outSize);\n        distributePadding(totalPad, autoPad, pads, i, i + spatialRank);\n        if (updateShape) {\n          outputShape.push(\n              strides[i] * (inputShape[i + 2] - 1) + outputPadding[i] + (kernelShape[i] - 1) * dilations[i] + 1 -\n              pads[i] - pads[i + spatialRank]);\n        }\n      }\n    };\n\nexport interface ConvTransposeAttributes extends ConvAttributes {\n  readonly outputPadding: readonly number[];\n  readonly outputShape: readonly number[];\n}\n\nexport const convTranspose: OperatorImplementation<ConvTransposeAttributes> =\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvTransposeAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);  // currently will fail if not convTranspose2D\n      return convTranspose2d(inferenceHandler, inputs, attributes);\n    };\n\nconst convTranspose2d: OperatorImplementation<ConvTransposeAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvTransposeAttributes): Tensor[] => {\n      const adjustedAttributes = getAdjustedConvTransposeAttributes(attributes, inputs);\n      return [convTranspose2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\n    };\n\nconst createConvTransposeProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'ConvTranspose',\n  inputNames: hasBias ? ['X', 'W', 'B'] : ['X', 'W'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nconst createUnpackedConvTransposeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\n     attributes: ConvTransposeAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const valueInit = hasBias ? 'getB(output_channel)' : '0.0';\n      const xShape = inputs[0].dims;\n      const wShape = inputs[1].dims;\n      const outputChannelsPerGroup = wShape[1];\n      const inputChannelsPerGroup = wShape[0] / attributes.group;\n      const outputShape = [inputs[0].dims[0], inputs[1].dims[1] * attributes.group, ...attributes.outputShape];\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const {activationFunction, applyActivation} = getActivationSnippet(attributes);\n\n      const shaderSource = `\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\n  ${activationFunction}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n\n    ivec2 loc = coords.zw + pads;\n\n    int group_id = output_channel / ${outputChannelsPerGroup};\n    int wOutChannel = output_channel - group_id * ${outputChannelsPerGroup};\n\n    float value = ${valueInit};\n    for (int inChannelOffset = 0; inChannelOffset < ${inputChannelsPerGroup}; inChannelOffset++) {\n      int input_channel = group_id * ${inputChannelsPerGroup} + inChannelOffset;\n      for (int wWOff = 0; wWOff < ${wShape[2]}; wWOff++) {\n        for (int wHOff = 0; wHOff < ${wShape[3]}; wHOff++) {\n          ivec2 wOff = ivec2(wWOff * ${attributes.dilations[0]}, wHOff * ${attributes.dilations[1]});\n          ivec2 wLoc = loc - wOff;\n          ivec2 wLocIn = wLoc / strides;\n          if (\n            wLocIn * strides == wLoc &&\n            wLocIn.x >= 0 && wLocIn.x < ${xShape[2]} &&\n            wLocIn.y >= 0 && wLocIn.y < ${xShape[3]}\n          ) {\n            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);\n            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);\n            value += xVal * wVal;\n          }\n        }\n      }\n    }\n    ${applyActivation}\n    ${glsl.output} = vec4(value, .0, .0, .0);\n  }\n`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nconst createUnpackedConvTransposeProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvTransposeAttributes):\n        ProgramInfoLoader => {\n          const metadata = createConvTransposeProgramMetadata(inputs.length > 2, attributes.cacheKey);\n          return {\n            ...metadata,\n            get: () => createUnpackedConvTransposeProgramInfo(inferenceHandler, inputs, metadata, attributes)\n          };\n        };\n\n\nconst convTranspose2DUnpacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvTransposeAttributes):\n        Tensor => {\n          const result = inferenceHandler.run(\n              createUnpackedConvTransposeProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n          return result;\n        };\n\nconst getAdjustedConvTransposeAttributes = <T extends ConvTransposeAttributes>(attributes: T, inputs: Tensor[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  if (attributes.kernelShape.length === 0) {\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\n      kernelShape.push(inputs[1].dims[i]);\n    }\n  }\n\n  const pads = attributes.pads.slice();\n  const outputShape = attributes.outputShape.slice();\n  const inputShape = inputs[0].dims;\n  // If outputShape is not specified in the attributes of this op, infer it from the parameters\n  // Similarly, automatically infer pads if not specified\n  calculateOutputShapeAndPads(\n      inputShape, kernelShape, attributes.dilations, attributes.autoPad, pads, attributes.strides,\n      attributes.outputPadding, outputShape);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, outputShape, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvTransposeAttributes: OperatorInitialization<ConvTransposeAttributes> =\n    (node: Graph.Node): ConvTransposeAttributes => {\n      const attributes = node.attributes;\n      const activationAttributes = parseInternalActivationAttributes(attributes);\n      // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n      const autoPad = attributes.getString('auto_pad', 'NOTSET');\n      const dilations = attributes.getInts('dilations', [1, 1]);\n      const group = attributes.getInt('group', 1);\n      const kernelShape = attributes.getInts('kernel_shape', []);\n      const outputPadding = attributes.getInts('output_padding', [0, 0]);\n      const outputShape = attributes.getInts('output_shape', []);\n      const pads = attributes.getInts('pads', [0, 0, 0, 0]);\n      const strides = attributes.getInts('strides', [1, 1]);\n\n      return createAttributeWithCacheKey(\n          {autoPad, dilations, group, kernelShape, outputPadding, outputShape, pads, strides, ...activationAttributes});\n    };\n\nconst validateInputs = (inputs: Tensor[], attributes: ConvTransposeAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/main/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[1];\n  const filterInChannel = inputs[1].dims[0];\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  const featureMaps = inputs[1].dims[1] * attributes.group;\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[2].dims[0] !== featureMaps)) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // Wrong output padding dimension\n  if (attributes.outputPadding.length !== spatialRank) {\n    throw new Error(`output_padding should be ${spatialRank}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // as with kernelShape, must have same number of spatial dims as input\n  if (attributes.outputShape.length !== 0 && attributes.outputShape.length !== inputs[0].dims.length - 2) {\n    throw new Error('invalid output shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\n    throw new Error('ConvTranspose input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\n    throw new Error('ConvTranspose input(bias) should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {InferenceHandler} from '../../../backend';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {createUnpackedGroupedConvProgramInfoLoader} from './conv-grouped';\nimport {conv2DPacked} from './conv-pack';\nimport {createDotProductProgramInfoLoader} from './dot-product';\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createIm2ColProgramInfoLoader} from './im2col';\nimport {createMatmulProgramInfoLoader} from './matmul';\n\n\nexport const calculateOutputShape =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\n     adjustPads: readonly number[], strides: readonly number[]): number[] => {\n      const batchSize = inputShape[0];\n      const inputSpatialShape = inputShape.slice(2);\n      const spatialRank = inputSpatialShape.length;\n      const outChannels = kernelShape[0];\n      const kernelSpatialShape = kernelShape.slice(2);\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\n      const outputSpatialShape =\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\n      const outputShape = [batchSize, outChannels].concat(...outputSpatialShape);\n      return outputShape;\n    };\n\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly dilations: readonly number[];\n  readonly group: number;\n  readonly kernelShape: readonly number[];\n  readonly pads: readonly number[];\n  readonly strides: readonly number[];\n}\n\nexport const conv: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);  // currently will fail if not conv2D\n      return conv2d(inferenceHandler, inputs, attributes);\n    };\n\nconst conv2d: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\n      const packMode = inferenceHandler.session.pack;\n      const isPointwise = adjustedAttributes.kernelShape[0] === 1 && adjustedAttributes.kernelShape[1] === 1;\n      if (adjustedAttributes.group > 1) {\n        const result = inferenceHandler.run(\n            createUnpackedGroupedConvProgramInfoLoader(inferenceHandler, inputs, adjustedAttributes), inputs);\n        return [result];\n      } else if (isPointwise && packMode) {\n        return [conv2DUnpackedPointwise(inferenceHandler, inputs, adjustedAttributes)];\n      } else if (packMode && inputs[0].dims.length === 4 && inputs[0].dims[0] === 1 && !isPointwise) {\n        return [conv2DPacked(inferenceHandler, inputs, adjustedAttributes)];\n      } else {\n        return [conv2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\n      }\n    };\n\nconst conv2DUnpackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapeUnpacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapeUnpacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(createMatmulProgramInfoLoader(matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapeUnpacked(matmulOutput, outputShape);\n    };\n\nconst conv2DUnpacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const xIm2Col = inferenceHandler.run(\n          createIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes), [inputs[0]]);\n\n      const dotProductInputs = inputs.length === 3 ? [xIm2Col, inputs[1], inputs[2]] : [xIm2Col, inputs[1]];\n      const output = inferenceHandler.run(\n          createDotProductProgramInfoLoader(inferenceHandler, inputs, outputShape, attributes), dotProductInputs);\n      return output;\n    };\n\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: Tensor[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  if (attributes.kernelShape.length === 0) {\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\n      kernelShape.push(inputs[1].dims[i]);\n    }\n  }\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.autoPad);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvAttributes: OperatorInitialization<ConvAttributes> = (node: Graph.Node): ConvAttributes => {\n  const attributes = node.attributes;\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const autoPad = attributes.getString('auto_pad', 'NOTSET');\n  const dilations = attributes.getInts('dilations', [1, 1]);\n  const group = attributes.getInt('group', 1);\n  const kernelShape = attributes.getInts('kernel_shape', []);\n  const pads = attributes.getInts('pads', [0, 0, 0, 0]);\n  const strides = attributes.getInts('strides', [1, 1]);\n\n  return createAttributeWithCacheKey({autoPad, dilations, group, kernelShape, pads, strides, ...activationAttributes});\n};\n\nconst validateInputs = (inputs: Tensor[], attributes: ConvAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/main/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[1];\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\n    throw new Error('Conv input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\n    throw new Error('Conv input(bias) should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {transpose, TransposeAttributes} from './transpose';\n\nexport interface DepthToSpaceAttributes {\n  mode: 'DCR'|'CRD';\n  blocksize: number;\n}\n\nexport const depthToSpace: OperatorImplementation<DepthToSpaceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: DepthToSpaceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const blocksize = attributes.blocksize;\n      const blocksizeSqr = blocksize * blocksize;\n      const transposePerm = attributes.mode === 'DCR' ? [0, 3, 4, 1, 5, 2] : [0, 1, 4, 2, 5, 3];\n      const firstReshapeShape = attributes.mode === 'DCR' ?\n          [\n            inputs[0].dims[0], blocksize, blocksize, inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ] :\n          [\n            inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, blocksize, blocksize, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ];\n\n      // const transpose = new WebGLTranspose();\n      // const attributes = new Attribute(undefined);\n      // attributes.set('perm', 'ints', transposePerm);\n      // transpose.initialize(attributes);\n\n      // First reshape\n      const firstReshapedTensor = inferenceHandler.reshapeUnpacked(inputs[0], firstReshapeShape);\n\n      // transpose\n      const transposeAttributes: TransposeAttributes = {perm: transposePerm, cacheKey: `${transposePerm}`};\n      const [transposeOutput] = transpose(inferenceHandler, [firstReshapedTensor], transposeAttributes);\n\n      // Second reshape\n      const secondReshapeShape = [\n        inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2] * blocksize,\n        inputs[0].dims[3] * blocksize\n      ];\n      const result = inferenceHandler.reshapeUnpacked(transposeOutput, secondReshapeShape);\n      return [result];\n    };\n\nexport const parseDepthToSpaceAttributes: OperatorInitialization<DepthToSpaceAttributes> =\n    (node: Graph.Node): DepthToSpaceAttributes => {\n      // processing node attributes\n      const blocksize = node.attributes.getInt('blocksize');\n      if (blocksize < 1) {\n        throw new Error(`blocksize must be >= 1, but got : ${blocksize} for DepthToSpace`);\n      }\n      const mode = node.attributes.getString('mode', 'DCR');\n      if (mode !== 'DCR' && mode !== 'CRD') {\n        throw new Error(`unrecognized mode: ${mode} for DepthToSpace`);\n      }\n      return {mode, blocksize};\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (inputs.length !== 1) {\n    throw new Error(`DepthToSpace expect 1 inputs, but got ${inputs.length}`);\n  }\n\n  // Input has to be a 4-D tensor\n  // TODO: Support string depth-to-space.\n  if (inputs[0].type === 'string' || inputs[0].dims.length !== 4) {\n    throw new TypeError('DepthToSpace input should be a 4-D numeric tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {getActivationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {calculateIm2ColDims} from './im2col';\n\nconst createDotProductProgramMetadata = (hasBias: boolean, attributes: InternalActivationAttributes) => ({\n  name: 'ConvDotProduct',\n  inputNames: hasBias ? ['Im2Col', 'K', 'B'] : ['Im2Col', 'K'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.packedLastDimension],\n  cacheKey: attributes.activationCacheKey\n});\n\nconst createDotProductProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: readonly Tensor[],\n     outputShape: number[], attributes: InternalActivationAttributes): ProgramInfo => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const adjustedKernelShape = [kshape[0], Math.ceil((xshape[1] * kshape[2] * kshape[3]) / 4)];\n      const im2colShape = calculateIm2ColDims(xshape, kshape, outputShape);\n      const [kWidth, kHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(adjustedKernelShape, TextureType.packedLastDimension);\n\n      const im2colStrides = ShapeUtil.computeStrides(im2colShape);\n      const [im2colWidth, im2colHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(im2colShape, TextureType.packedLastDimension);\n      const rank = outputShape.length;\n\n      const initValue = (inputs.length < 3) ? '0.0' : '_B(b)';\n      const sharedDim = Math.ceil(xshape[1] * kshape[2] * kshape[3] / 4);\n      const {activationFunction, applyActivation} = getActivationSnippet(attributes);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n${activationFunction}\nfloat process(int indices[${rank}]) {\n  int b[1];\n  b[0] = indices[1];\n  int im2col[4];\n  im2col[0] = indices[0];\n  im2col[1] = indices[2];\n  im2col[2] = indices[3];\n  int im2colOffset = im2col[0] * ${im2colStrides[0]} + im2col[1] * ${im2colStrides[1]} + im2col[2] * ${\n          im2colStrides[2]};\n  int kernelOffset = indices[1] * ${adjustedKernelShape[1]};\n  float value = ${initValue};\n  for (int i = 0; i < ${sharedDim}; ++i) {\n    vec2 im2colCoords = offsetToCoords(im2colOffset, ${im2colWidth}, ${im2colHeight});\n    vec2 kernelCoords = offsetToCoords(kernelOffset, ${kWidth}, ${kHeight});\n    value += dot(${glsl.texture2D}(Im2Col, im2colCoords), ${glsl.texture2D}(K, kernelCoords));\n    ++im2colOffset;\n    ++kernelOffset;\n  }\n  ${applyActivation}\n  return value;\n}`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nexport const createDotProductProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], outputShape: number[],\n     attributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createDotProductProgramMetadata(inputs.length > 2, attributes);\n      return {\n        ...metadata,\n        get: () => createDotProductProgramInfo(inferenceHandler, metadata, inputs, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const flatten: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number): Tensor[] => {\n      validateInputs(inputs, axis);\n\n      const outputDims = ShapeUtil.flattenShape(inputs[0].dims, axis);\n      return [inferenceHandler.reshapeUnpacked(inputs[0], outputDims)];\n    };\n\nexport const parseFlattenAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getInt('axis', 1);  // default axis is 1\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Flatten requires 1 input.');\n  }\n\n  const r = inputs[0].dims.length;\n  if (r === 0) {\n    throw new Error('scalar tensor is not supported.');\n  }\n\n  if (axis < -r || axis > r) {\n    throw new Error('Invalid axis');\n  }\n\n  // TODO: Support string type\n  if (inputs[0].type === 'string') {\n    throw new Error('string tensor is not supported.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Attribute} from '../../../attribute';\nimport {MAX_CLIP, MIN_CLIP} from '../../../util';\nimport {GlslValueFunction} from '../glsl-definitions';\n\nimport {glslClip, glslRelu, glslSigmoid} from './unary-op';\n\nexport interface InternalActivationAttributes {\n  readonly activation: string;\n  readonly clipMin?: number;\n  readonly clipMax?: number;\n  readonly activationCacheKey: string;\n}\n\nexport function getActivationSnippet(attributes: InternalActivationAttributes) {\n  let func: GlslValueFunction;\n  switch (attributes.activation) {\n    case 'Relu':\n      func = glslRelu();\n      break;\n    case 'Sigmoid':\n      func = glslSigmoid();\n      break;\n    case 'Clip':\n      func = glslClip(attributes.clipMin!, attributes.clipMax!);\n      break;\n    // TODO: adding other activations that can be fused.\n    default:\n      return {activationFunction: '', applyActivation: ''};\n  }\n\n  const activationName = func.name;\n  const activationFunction = func.body;\n  const applyActivation = `value = ${activationName}_(value);`;\n  return {activationFunction, applyActivation};\n}\n\nexport const parseInternalActivationAttributes = (attributes: Attribute): InternalActivationAttributes => {\n  const activation = attributes.getString('activation', '');\n\n  if (activation === 'Clip') {\n    const [clipMin, clipMax] = attributes.getFloats('activation_params', [MIN_CLIP, MAX_CLIP]);\n    return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\n  }\n  return {activation, activationCacheKey: activation};\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\ninterface GatherAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const gather: OperatorImplementation<GatherAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): Tensor[] => {\n      validateInputs(inputs, attributes.axis);\n      const output = inferenceHandler.run(createGatherProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseGatherAttributes: OperatorInitialization<GatherAttributes> = (node: Graph.Node): GatherAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 0)});\n\nconst gatherProgramMetadata = {\n  name: 'Gather',\n  inputNames: ['A', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createGatherProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const indexDataShape = inputs[1].dims.slice();\n      const outputShape = new Array(inputShape.length + indexDataShape.length - 1);\n\n      axis = ShapeUtil.normalizeAxis(axis, inputShape.length);\n      const indexCopyOps: string[] = [];\n      for (let i = 0; i < outputShape.length; i++) {\n        // outputShape is divided into three parts: A, B, C\n        // |0        axis|  axis + indexDataShape.length |          end|\n        // |     A       |             B                 |      C      |\n        //\n        // inputIdx: [A, inputs[1][B], C]\n        if (i < axis) {  // A\n          outputShape[i] = inputShape[i];\n          indexCopyOps.push(`inputIdx[${i}] = outputIdx[${i}];`);\n        } else {\n          if (i < axis + indexDataShape.length) {  // B\n            outputShape[i] = indexDataShape[i - axis];\n            indexCopyOps.push(`indexDataIdx[${i - axis}] = outputIdx[${i}];`);\n          } else {                                                       // C\n            outputShape[i] = inputShape[i - indexDataShape.length + 1];  // skip 1 for axis\n            indexCopyOps.push(`inputIdx[${i - indexDataShape.length + 1}] = outputIdx[${i}];`);\n          }\n        }\n      }\n\n      const orank = outputShape.length || 1;\n      const irank = inputShape.length;\n      const iDrank = indexDataShape.length || 1;\n      const shaderSource = `\n      float process(int outputIdx[${orank}]) {\n        int inputIdx[${irank}];\n        int indexDataIdx[${iDrank}];\n        indexDataIdx[0] = 0;\n        ${indexCopyOps.join('\\n        ')}\n        int idx = int(_B(indexDataIdx));\n        inputIdx[${axis}] = idx < 0 ? idx + ${inputShape[axis]} : idx;\n        return _A(inputIdx);\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createGatherProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): ProgramInfoLoader => {\n      const metadata = {...gatherProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createGatherProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Gather requires 2 inputs.');\n  }\n  const tensorRank = inputs[0].dims.length;\n  if (tensorRank < 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (axis < -tensorRank || axis > tensorRank - 1) {\n    throw new Error('Invalid axis.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invaid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invaid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {GemmUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface GemmAttributes extends AttributeWithCacheKey {\n  transA: boolean;\n  transB: boolean;\n  alpha: number;\n  beta: number;\n  isOptionalC: boolean;  // in opset 11, C becomes optional\n}\n\nexport const gemm: OperatorImplementation<GemmAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GemmAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(createGemmProgramInfoLoader(inputs, attributes), inputs);\n      return [output];\n    };\n\nconst parseGemmAttributes = (node: Graph.Node, isOptionalC: boolean): GemmAttributes => {\n  const transA = node.attributes.getInt('transA', 0) !== 0;\n  const transB = node.attributes.getInt('transB', 0) !== 0;\n  const alpha = node.attributes.getFloat('alpha', 1.0);\n  const beta = node.attributes.getFloat('beta', 1.0);\n  return createAttributeWithCacheKey({transA, transB, alpha, beta, isOptionalC});\n};\n\nexport const parseGemmAttributesV7: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, false);\n\nexport const parseGemmAttributesV11: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, true);\n\nconst createGemmProgramInfoLoader = (inputs: Tensor[], attributes: GemmAttributes): ProgramInfoLoader => {\n  const metadata = {\n    name: 'Gemm',\n    inputNames: inputs.length === 3 ? ['A', 'B', 'C'] : ['A', 'B'],\n    inputTypes: inputs.length === 3 ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                                      [TextureType.unpacked, TextureType.unpacked],\n    key: attributes.cacheKey\n  };\n\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\n};\n\nconst createGemmProgramInfo =\n    (metadata: ProgramMetadata, inputs: Tensor[], attributes: GemmAttributes): ProgramInfo => {\n      const aShape = inputs[0].dims.slice();\n      const bShape = inputs[1].dims.slice();\n      const [M, N] = GemmUtil.getShapeOfGemmResult(\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\n      const outputShape = [M, N];\n      if (!outputShape) {\n        throw new Error('Can\\'t use gemm on the given tensors');\n      }\n      let sharedDim = aShape[aShape.length - 1];\n      let line = '';\n      if (attributes.transA) {\n        sharedDim = aShape[0];\n      }\n      if (attributes.transA && attributes.transB) {\n        line = 'value += _A_T(a) * _B_T(b);';\n      } else if (attributes.transA && !attributes.transB) {\n        line = 'value += _A_T(a) * _B(b);';\n      } else if (!attributes.transA && attributes.transB) {\n        line = 'value += _A(a) * _B_T(b);';\n      } else if (!attributes.transA && !attributes.transB) {\n        line = 'value += _A(a) * _B(b);';\n      }\n      const rank = outputShape.length;\n      const declareC = inputs.length === 3 ? `int c[${inputs[2].dims.length}];` : '';\n      const broadcastC = inputs.length === 3 ? 'bcastIndices_C(indices, c);' : '';\n      const calculateC = inputs.length === 3 ? 'value += beta * _C(c);' : '';\n      const shaderSource = `\n      float process(int indices[${rank}]) {\n          int a[${rank}];\n          int b[${rank}];\n          ${declareC}\n\n          copyVec(indices, a);\n          copyVec(indices, b);\n          ${broadcastC}\n\n          float value = 0.0;\n          for (int k=0; k<${sharedDim}; ++k) {\n              a[${rank - 1}] = k;\n              b[${rank - 2}] = k;\n              ${line}\n          }\n\n          value = value * alpha;\n          ${calculateC}\n          return value;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        variables: [\n          {name: 'alpha', type: 'float', data: attributes.alpha}, {name: 'beta', type: 'float', data: attributes.beta}\n        ],\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[], attributes: GemmAttributes): void => {\n  if (!inputs) {\n    throw new Error('Input is missing');\n  }\n  if (attributes.isOptionalC && (inputs.length < 2 || inputs.length > 3)) {\n    throw new Error('Invaid input shape.');\n  }\n  if (!attributes.isOptionalC && inputs.length !== 3) {\n    throw new Error('Gemm requires 3 inputs');\n  }\n\n  // 'C' can be of dimensionality 1 or 2 only\n  if (inputs.length === 3 && inputs[2].dims.length !== 1 && inputs[2].dims.length !== 2) {\n    throw new Error('Invalid input shape of C');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64') ||\n      (inputs.length === 3 && inputs[2].type !== 'float32' && inputs[2].type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n\n  if ((inputs[0].type !== inputs[1].type) || (inputs.length === 3 && inputs[0].type !== inputs[2].type)) {\n    throw new Error('Input types are mismatched');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {ConvAttributes} from './conv';\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col (packed)',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed],\n  cacheHint,\n});\n\nconst createPackedIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n      const rowDim = 2;\n      const colDim = 3;\n      const rank = outputShape.length;\n      const im2colShape = [wshape[1] * wshape[2] * wshape[3], outputShape[2] * outputShape[3]];\n      const kernelSize = wshape[2] * wshape[3];\n      const unpackChannel = unpackFromChannel();\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      let unrolled = '';\n\n      for (let row = 0; row <= 1; row++) {\n        for (let col = 0; col <= 1; col++) {\n          unrolled += `\n            blockIndex = rc.x + ${col};\n            pos = rc.y + ${row};\n\n            if(blockIndex < ${im2colShape[1]} && pos < ${im2colShape[0]}) {\n              offsetY = int(blockIndex / (${outputShape[rank - 1]})) * ${attributes.strides[0]} -\n                ${attributes.pads[0]};\n              d0 = offsetY + ${attributes.dilations[0]} * (imod(pos, ${kernelSize}) / ${wshape[2]});\n\n              if(d0 < ${xshape[rowDim]} && d0 >= 0) {\n                offsetX = imod(blockIndex, ${outputShape[rank - 1]}) * ${attributes.strides[1]} -\n                  ${attributes.pads[1]};\n                d1 = offsetX + ${attributes.dilations[1]} * imod(imod(pos, ${kernelSize}), ${wshape[2]});\n\n                if(d1 < ${xshape[colDim]} && d1 >= 0) {\n\n                  ch = int(float(pos)/ ${kernelSize}.);\n                    innerDims = vec2(d0, d1);\n                    result[${row * 2 + col}] = getChannel(\n                      getA(0, ch, int(innerDims.x),\n                      int(innerDims.y)), innerDims);\n                }\n              }\n            }\n\n          `;\n        }\n      }\n\n      const shaderSource = `\n      ${unpackChannel}\n\n      void main() {\n        ivec2 rc = getOutputCoords();\n          vec4 result = vec4(0.0);\n          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n          vec2 innerDims;\n          ${unrolled}\n          ${glsl.output} = result;\n      }\n            `;\n      return {\n        ...metadata,\n        output: {dims: im2colShape, type: x.type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createPackedIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {ConvAttributes} from './conv';\n\nconst createIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n  cacheHint,\n});\n\nconst createIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n\n      const rank = outputShape.length;\n      const im2colDims = calculateIm2ColDims(xshape, wshape, outputShape, 4);\n\n      const shaderSource = `\n        const int XC = ${xshape[1]};\n        const int XH = ${xshape[2]};\n        const int XW = ${xshape[3]};\n        const int KH = ${attributes.kernelShape[0]};\n        const int KW = ${attributes.kernelShape[1]};\n        const int dilationH = ${attributes.dilations[0]};\n        const int dilationW = ${attributes.dilations[1]};\n        const int strideH = ${attributes.strides[0]};\n        const int strideW = ${attributes.strides[1]};\n        const int padH = ${attributes.pads[0]};\n        const int padW = ${attributes.pads[1]};\n        const int KHKW = KH*KW;\n        const int XCKHKW = XC * KHKW;\n        const int outputChannels = 4;\n        vec4 process(int indices[${rank}]) {\n          int b  = indices[0]; // batch size\n          int oh = indices[1] * strideH - padH; //output height\n          int ow = indices[2] * strideW - padW; //output width\n          int p = indices[3] * outputChannels; //patch\n          vec4 value = vec4(0.0);\n          for(int i=0; i < outputChannels; ++i) {\n            if(p < XCKHKW) {\n              int patchC = p / KHKW;\n              int patchH = (p - patchC*KHKW) / KW;\n              int patchW = (p - patchC*KHKW) - patchH * KW;\n              int xh2 = oh + patchH * dilationH;\n              int xw2 = ow + patchW * dilationW;\n              int x[${xshape.length}];\n              x[0] = b;\n              x[1] = patchC;\n              x[2] = xh2;\n              x[3] = xw2;\n              if(xh2 >= 0 &&\n                  xh2 < XH &&\n                  xw2 >= 0 &&\n                  xw2 < XW) {\n                value[i] = _X(x);\n              }\n            }\n            ++p;\n          }\n          return value;\n        }\n        `;\n      return {\n        ...metadata,\n        output: {dims: im2colDims, type: x.type, textureType: TextureType.packedLastDimension},\n        shaderSource\n      };\n    };\n\nexport const createIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n\n\nexport const calculateIm2ColDims =\n    (inputShape: readonly number[], kernelShape: readonly number[], outputShape: readonly number[], channels = 4):\n        number[] =>\n            [outputShape[0], outputShape[2], outputShape[3],\n             Math.ceil(inputShape[1] * kernelShape[2] * kernelShape[3] / channels)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface ImageScalerAttributes extends AttributeWithCacheKey {\n  scale: number;\n  bias: number[];\n}\n\nexport const imageScaler: OperatorImplementation<ImageScalerAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output =\n          inferenceHandler.run(createImageScalerProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseImageScalerAttributes: OperatorInitialization<ImageScalerAttributes> =\n    (node: Graph.Node): ImageScalerAttributes => {\n      const scale = node.attributes.getFloat('scale');\n      const bias = node.attributes.getFloats('bias');\n      return createAttributeWithCacheKey({scale, bias});\n    };\n\nconst imageScalerProgramMetadata = {\n  name: 'ImageScaler',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createImageScalerProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], attributes: ImageScalerAttributes):\n        ProgramInfo => {\n          const outputShape = inputs[0].dims.slice();\n          const rank = outputShape.length;\n          const getBiasMethod = createGetBiasMethod(attributes.bias.length);\n          const shaderSource = `\n      ${getBiasMethod}\n      float process(int indices[${rank}]) {\n        return _X(indices) * scale + getBias(bias, indices[1]);\n      }`;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            variables: [\n              {name: 'bias', type: 'float', arrayLength: attributes.bias.length, data: attributes.bias},\n              {name: 'scale', type: 'float', data: attributes.scale}\n            ],\n            shaderSource\n          };\n        };\n\nconst createImageScalerProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): ProgramInfoLoader => {\n      const metadata = {...imageScalerProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createImageScalerProgramInfo(handler, metadata, inputs, attributes)};\n    };\n\nconst createGetBiasMethod = (numChannels: number): string => {\n  const codeLines: string[] = [`float getBias(float bias[${numChannels}], int channel) {`];\n  for (let i = 0; i < numChannels; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (channel == ${i}) { return bias[${i}]; }`);\n    } else if (i === numChannels - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return bias[${i}]; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (channel == ${i}) { return bias[${i}]; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('ImageScaler requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Invalid input shape.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport const instanceNormalization: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], epsilon: number): Tensor[] => {\n      validateInputs(inputs);\n\n      const meanAndVariance = inferenceHandler.run(createMeanAndVarianceProgramInfoLoader(inputs[0]), inputs);\n      const output = inferenceHandler.run(\n          createComputeOutputProgramInfoLoader(inferenceHandler, inputs[0], epsilon, meanAndVariance.dims),\n          [inputs[0], meanAndVariance, inputs[1], inputs[2]]);\n      return [output];\n    };\n\nexport const parseInstanceNormalizationAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getFloat('epsilon', 1e-5);\n\nconst meanAndVarianceProgramMetadata = {\n  name: 'InstanceNormalization_MeanAndVariance',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createMeanAndVarianceProgramInfo = (metadata: ProgramMetadata, input: Tensor): ProgramInfo => {\n  const xDims = input.dims.slice();\n  const channel = xDims[1];\n  const channelSize = xDims[2] * xDims[3];\n  const outputShape = [xDims[0], channel];\n\n  const shaderSource = `\n      vec4 process(int[2] indices) {\n        vec4 v = vec4(0.0);\n        int a[4];\n        a[0] = indices[0];\n        a[1] = indices[1];\n        float temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += x;\n          }\n        }\n        float mean = temp / float(${channelSize});\n        temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += (x - mean) * (x - mean);\n          }\n        }\n        v.r = mean;\n        v.g = temp / float(${channelSize});\n\n        return v;\n      }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: input.type, textureType: TextureType.packedLastDimension},\n    shaderSource\n  };\n};\n\nconst createMeanAndVarianceProgramInfoLoader = (input: Tensor): ProgramInfoLoader => ({\n  ...meanAndVarianceProgramMetadata,\n  get: () => createMeanAndVarianceProgramInfo(meanAndVarianceProgramMetadata, input)\n});\n\nconst computeOutputProgramMetadata = {\n  name: 'InstanceNormalization_ComputeOutput',\n  inputNames: ['X', 'MeanAndVariance', 'Scale', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createComputeOutputProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, epsilon: number,\n     meanAndVarianceShape: readonly number[]): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(meanAndVarianceShape, TextureType.packedLastDimension);\n      const [meanAndVarianceWidth, meanAndVarianceHeight] = [textureWidth / 4, textureHeight];\n      const shaderSource = `\n      vec4 get_MeanAndVariance(int[2] mv) {\n        int offset = indicesToOffset_MeanAndVariance(mv);\n        vec2 coords = offsetToCoords(offset, ${meanAndVarianceWidth}, ${meanAndVarianceHeight});\n        return ${glsl.texture2D}(MeanAndVariance, coords);\n      }\n\n      float process(int[4] indices) {\n        int mv[2];\n        mv[0] = indices[0];\n        mv[1] = indices[1];\n        vec4 mean_and_variance = get_MeanAndVariance(mv);\n        float mean = mean_and_variance.r;\n        float variance = mean_and_variance.g;\n\n        int sb[1];\n        sb[0] = indices[1];\n        float scale = _Scale(sb);\n        float b = _B(sb);\n\n        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        variables: [{name: 'epsilon', type: 'float', data: epsilon}],\n        shaderSource\n      };\n    };\n\nconst createComputeOutputProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, epsilon: number, meanAndVarianceShape: readonly number[]):\n        ProgramInfoLoader => {\n          const metadata = {...computeOutputProgramMetadata, cacheHint: `${epsilon}`};\n          return {\n            ...metadata,\n            get: () => createComputeOutputProgramInfo(inferenceHandler, metadata, input, epsilon, meanAndVarianceShape)\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 3) {\n    throw new Error('InstanceNormalization requires 3 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n\n  // input should at least have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1]) {\n    throw new Error('Input shapes are mismatched.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Only support 4-D input shape.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\n\nexport interface LrnAttributes extends AttributeWithCacheKey {\n  alpha: number;\n  beta: number;\n  bias: number;\n  size: number;\n}\n\nexport const lrn: OperatorImplementation<LrnAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: LrnAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      // if (inferenceHandler.session.pack) {\n      //   return [inferenceHandler.run(createPackedLrnProgramInfoLoader(inferenceHandler, inputs, attributes),\n      //   inputs)];\n      // } else {\n      return [inferenceHandler.run(createLrnProgramInfoLoader(inputs, attributes), inputs)];\n      //}\n    };\n\nexport const parseLrnAttributes: OperatorInitialization<LrnAttributes> = (node: Graph.Node): LrnAttributes => {\n  const alpha = node.attributes.getFloat('alpha', 0.0001);\n  const beta = node.attributes.getFloat('beta', 0.75);\n  const bias = node.attributes.getFloat('bias', 1.0);\n  const size = node.attributes.getInt('size');\n\n  return createAttributeWithCacheKey({alpha, beta, bias, size});\n};\n\nconst lrnProgramMetadata = {\n  name: 'LRN',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked]\n};\n\nfunction createLrnProgramInfo(inputs: Tensor[], attributes: LrnAttributes): ProgramInfo {\n  const C = inputs[0].dims[1];\n  const rank = inputs[0].dims.length;\n  const from = -Math.floor((attributes.size - 1) / 2);\n  const to = Math.ceil((attributes.size - 1) / 2);\n  const alpha = `float(${attributes.alpha}) / float(${attributes.size})`;\n  const bias = `float(${attributes.bias})`;\n  const beta = `float(${attributes.beta})`;\n\n  const shaderSource = `\n    float process(int indices[${rank}]) {\n        int c = indices[1];\n        float x = _X(indices);\n        float square_sum = 0.0;\n\n        for (int i = ${from}; i <= ${to}; i++) {\n          int idx = c + i;\n          if (c >= 0 && c < ${C}) {\n            indices[1] = idx;\n            float j = _X(indices);\n            square_sum += j * j;\n          }\n        }\n        return x / pow(${bias} + ${alpha} * square_sum, ${beta});\n    }`;\n  return {\n    ...lrnProgramMetadata,\n    cacheHint: attributes.cacheKey,\n    output: {dims: inputs[0].dims, type: inputs[0].type, textureType: TextureType.unpacked},\n    shaderSource,\n  };\n}\n\nexport function createLrnProgramInfoLoader(inputs: Tensor[], attributes: LrnAttributes): ProgramInfoLoader {\n  return {...lrnProgramMetadata, cacheHint: attributes.cacheKey, get: () => createLrnProgramInfo(inputs, attributes)};\n}\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('LRN requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('currently only support LRN for input with \"NCHW\" format');\n  }\n  if (inputs[0].type !== 'float32') {\n    throw new Error('input should be float type');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {getActivationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {getBiasForMatmul} from './matmul';\n\nconst createPackedMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul (packed)',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.packed, TextureType.packed, TextureType.packed] :\n                        [TextureType.packed, TextureType.packed],\n  cacheHint\n});\n\nconst createPackedMatmulProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n      const aShape = inputs[0].dims;\n      const bShape = inputs[1].dims;\n      const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n\n      if (!outputShape) {\n        throw new Error('Can\\'t use matmul on the given tensors');\n      }\n      const sharedDim = aShape[aShape.length - 1];\n      const sharedDimIndex = Math.ceil(sharedDim / 2);\n      const aRank = aShape.length;\n      const bRank = bShape.length;\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const coordsDataType = getCoordsDataType(outputShape.length);\n      const outRank = outputShape.length;\n      const allGlChannels = getGlChannels();\n      const {activationFunction, applyActivation} = getActivationSnippet(activationAttributes);\n\n      const getBiasForMatmulSnippet =\n          hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, true)}` : '';\n\n      const getBcastedSamplerForMatmulSnippet =\n          isBroadcast ? `${getBcastSamplerForMatmul(coordsDataType, allGlChannels, inputs, outputShape)}` : '';\n\n      const getSamplerAInLoopSnippet = isBroadcast ? 'getAAtOutCoordsMatmul(i)' : `getA(${getA(allGlChannels, aRank)})`;\n      const getSamplerBInLoopSnippet = isBroadcast ? 'getBAtOutCoordsMatmul(i)' : `getB(${getB(allGlChannels, bRank)})`;\n      const getOutputCoordsSnippet = isBroadcast ? '' : `${coordsDataType} rc =\n          getOutputCoords(); int lastDim = rc.${allGlChannels[outRank - 1]}; rc.${allGlChannels[outRank - 1]} =\n          rc.${allGlChannels[outRank - 2]}; rc.${allGlChannels[outRank - 2]} = lastDim;\n      `;\n      const shaderSource = `\n            ${getBcastedSamplerForMatmulSnippet}\n            ${getBiasForMatmulSnippet}\n            ${activationFunction}\n            void main() {\n              ${getOutputCoordsSnippet}\n\n              vec4 value = vec4(0);\n              for (int i = 0; i < ${sharedDimIndex}; i++) {\n                vec4 a = ${getSamplerAInLoopSnippet};\n                vec4 b = ${getSamplerBInLoopSnippet};\n\n                value += (a.rrbb * b.rgrg);\n                value += (a.ggaa * b.baba);\n              }\n              ${processBias}\n              ${applyActivation}\n              ${glsl.output} = value;\n            }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedMatmulProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createPackedMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedMatmulProgramInfo(inferenceHandler, metadata, inputs, activationAttributes)\n      };\n    };\n\nfunction getBcastSamplerForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inputs: Tensor[], outShape: readonly number[]): string {\n  let unpackedACoordsSnippet = [];\n  let unpackedBCoordsSnippet = [];\n\n  const inAShape = inputs[0].dims;\n  const inBShape = inputs[1].dims;\n\n  const inARank = inAShape.length;\n  const inBRank = inBShape.length;\n\n  const outRank = outShape.length;\n  const rankADiff = outRank - inARank;\n  const rankBDiff = outRank - inBRank;\n\n  unpackedACoordsSnippet = inAShape.map((s, i) => `coords.${allGlChannels[i + rankADiff]}`);\n  unpackedACoordsSnippet[inARank - 1] = 'i*2';\n  unpackedACoordsSnippet.join(', ');\n  unpackedBCoordsSnippet = inBShape.map((s, i) => `coords.${allGlChannels[i + rankBDiff]}`);\n  unpackedBCoordsSnippet[inBRank - 2] = 'i*2';\n  unpackedBCoordsSnippet.join(', ');\n\n  const broadcastADims = BroadcastUtil.getBroadcastDims(inAShape, outShape);\n  const broadcastBDims = BroadcastUtil.getBroadcastDims(inBShape, outShape);\n\n  const coordsASnippet = broadcastADims.map(d => `coords.${allGlChannels[d + rankADiff]} = 0;`).join('\\n');\n  const coordsBSnippet = broadcastBDims.map(d => `coords.${allGlChannels[d + rankBDiff]} = 0;`).join('\\n');\n  const swapDimSnippet = `int lastDim = coords.${allGlChannels[outRank - 1]};\n  coords.${allGlChannels[outRank - 1]} = coords.${allGlChannels[outRank - 2]};\n  coords.${allGlChannels[outRank - 2]} = lastDim;`;\n\n  const getBcastSamplerMatmulSource = `\nvec4 getAAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsASnippet}\n  vec4 outputValue = getA(${unpackedACoordsSnippet});\n  return outputValue;\n}\n\nvec4 getBAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsBSnippet}\n  vec4 outputValue = getB(${unpackedBCoordsSnippet});\n  return outputValue;\n}`;\n\n  return getBcastSamplerMatmulSource;\n}\n\nfunction getA(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += `rc.${allGlChannels[rank - 2]}, ` +\n      'i*2';\n  return res;\n}\n\nfunction getB(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += 'i*2, ' +\n      `rc.${allGlChannels[rank - 1]}`;\n  return res;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {getActivationSnippet, InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const matMul: OperatorImplementation<InternalActivationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: InternalActivationAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      if (inferenceHandler.session.pack) {\n        return [inferenceHandler.run(\n            createPackedMatmulProgramInfoLoader(inferenceHandler, inputs, attributes), inputs)];\n      } else {\n        return [inferenceHandler.run(createMatmulProgramInfoLoader(inputs, attributes), inputs)];\n      }\n    };\n\nexport const parseMatMulAttributes: OperatorInitialization<InternalActivationAttributes> =\n    (node: Graph.Node): InternalActivationAttributes => parseInternalActivationAttributes(node.attributes);\n\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nfunction createMatmulProgramInfo(\n    metadata: ProgramMetadata, inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfo {\n  const aShape = inputs[0].dims;\n  const bShape = inputs[1].dims;\n  const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n  if (!outputShape) {\n    throw new Error('Can\\'t use matmul on the given tensors');\n  }\n  const coordsDataType = getCoordsDataType(outputShape.length);\n  const allGlChannels = getGlChannels();\n  const {activationFunction, applyActivation} = getActivationSnippet(activationAttributes);\n\n  const hasBias = inputs.length > 2;\n  const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n  const getBiasForMatmulSnippet =\n      hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, false)}` : '';\n\n  const rank = outputShape.length;\n  const arank = aShape.length;\n  const brank = bShape.length;\n  const sharedDim = aShape[aShape.length - 1];\n  const shaderSource = `\n    ${activationFunction}\n    ${getBiasForMatmulSnippet}\n    float process(int indices[${rank}]) {\n        int a[${arank}];\n        int b[${brank}];\n        bcastMatmulIndices_A(indices, a);\n        bcastMatmulIndices_B(indices, b);\n\n        float value;\n        for (int k=0; k<${sharedDim}; ++k) {\n            a[${arank - 1}] = k;\n            b[${brank - 2}] = k;\n            value += _A(a) * _B(b);\n        }\n        ${processBias}\n        ${applyActivation}\n        return value;\n    }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n    shaderSource,\n  };\n}\n\nexport function createMatmulProgramInfoLoader(\n    inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader {\n  const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n  return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\n}\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('MatMul requires 2 inputs.');\n  }\n\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\n    throw new Error('shared dimension does not match.');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64')) {\n    throw new Error('inputs should be float type');\n  }\n\n  if (inputs[0].type !== inputs[1].type) {\n    throw new Error('inputs types should match');\n  }\n};\n\nexport function getBiasForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inShape: readonly number[], outShape: readonly number[],\n    isPacked: boolean): string {\n  let unpackedCoordsSnippet = '';\n  const inRank = inShape.length;\n  const outRank = outShape.length;\n  const rankDiff = outRank - inRank;\n  if (outRank < 2 && inRank > 0) {\n    unpackedCoordsSnippet = 'coords';\n  } else {\n    unpackedCoordsSnippet = inShape.map((s, i) => `coords.${allGlChannels[i + rankDiff]}`).join(', ');\n  }\n  const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n  const coordsSnippet = broadcastDims.map(d => `coords.${allGlChannels[d + rankDiff]} = 0;`).join('\\n');\n  const inSize = ShapeUtil.size(inShape);\n  const isInputScalar = inSize === 1;\n  let output = 'vec4(outputValue.xx, outputValue.yy)';\n  if (isInputScalar) {\n    output = 'vec4(outputValue.x)';\n  }\n  const getBiasForMatmulSource = isPacked ? `\nvec4 getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  vec4 outputValue = getBias(${unpackedCoordsSnippet});\n  return ${output};\n}` :\n                                            `\nfloat getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  return getBias(coords.x);\n}`;\n\n  return getBiasForMatmulSource;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {getChannels} from './packing-utils';\n\nconst packProgramMetadata = {\n  name: 'pack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpackedReversed]\n};\n\nconst createPackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const inputShape = input.dims;\n\n  const inputRank = inputShape.length;\n  // createTextureLayoutFromShape won't change output rank. Need to verify by running tests\n  const outputRank = input.dims.length;\n\n  const coordsDataType = getCoordsDataType(outputRank);\n  const channels = getChannels('rc', outputRank);\n  const setup = getSetup(outputRank, channels, inputShape[inputShape.length - 2], inputShape[inputShape.length - 1]);\n\n  let reversedInputWH;\n  if (inputRank === 0) {\n    reversedInputWH = [1, 1];\n  } else if (inputRank === 1) {\n    reversedInputWH = [inputShape[0], 1];\n  } else {\n    reversedInputWH = [inputShape[outputRank - 1], inputShape[outputRank - 2]];\n  }\n  const outOfBoundsCondition = getOutOfBoundsCondition(outputRank, reversedInputWH, channels);\n  const output = getOutput(inputShape, channels);\n\n  const shaderSource = `\n        void main() {\n          ${coordsDataType} rc = getOutputCoords();\n\n          if(${outOfBoundsCondition}) {\n            ${glsl.output} = vec4(0);\n          } else {\n            ${setup}\n\n            ${glsl.output} = vec4(${output});\n          }\n        }\n      `;\n  return {\n    ...packProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.packed},\n    shaderSource\n  };\n};\n\nexport const createPackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...packProgramMetadata, get: () => createPackProgramInfo(handler, input)});\n\n/**\n * check output coordinate location and return false if it is outside input's width/height boundary\n */\nfunction getOutOfBoundsCondition(rank: number, shape: readonly number[], dims: string[]): string {\n  if (rank === 0) {\n    return 'false';\n  }\n  if (rank === 1) {\n    return `rc > ${shape[0]}`;\n  }\n\n  let cond = '';\n  for (let i = rank - 2; i < rank; i++) {\n    cond += `${dims[i]} >= ${shape[i - rank + 2]}`;\n    if (i < rank - 1) {\n      cond += '||';\n    }\n  }\n\n  return cond;\n}\n\n/**\n * code snippet to sample input texture with output coordiantes\n */\nfunction getOutput(shape: readonly number[], dims: string[]): string {\n  const rank = shape.length;\n\n  if (rank === 0) {\n    return 'getA(), 0, 0, 0';\n  }\n\n  if (rank === 1) {\n    return `getA(rc),\n            rc + 1 >= ${shape[0]} ? 0. : getA(rc + 1),\n            0, 0`;\n  }\n\n  const coord00 = 'r, c';\n  const coord01 = 'r, cp1';\n  const coord10 = 'rp1, c';\n  const coord11 = 'rp1, cp1';\n  let D = '';\n  if (rank > 2) {\n    for (let i = 0; i < rank - 2; ++i) {\n      D = D + `${dims[i]},`;\n    }\n  }\n  return `getA(${D}${coord00}),\n          rEdge ? 0. : getA(${D}${coord10}),\n          cEdge ? 0. : getA(${D}${coord01}),\n          rEdge || cEdge ? 0. : getA(${D}${coord11})`;\n}\n\n/**\n * code snippet to setup 4 coordinates and edge conditions\n */\nfunction getSetup(rank: number, dims: string[], rows: number, cols: number): string {\n  if (rank === 0 || rank === 1) {\n    return '';\n  }\n  // rank >= 2 for width+height pack.\n  else {\n    const setup = `\n    int r = ${dims[rank - 2]};\n    int c = ${dims[rank - 1]};\n    int rp1 = ${dims[rank - 2]} + 1;\n    int cp1 = ${dims[rank - 1]} + 1;\n    bool rEdge = rp1 >= ${cols};\n    bool cEdge = cp1 >= ${rows};\n    `;\n    return setup;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlChannels} from '../utils';\n\nexport function getVecChannels(name: string, rank: number): string[] {\n  return getGlChannels(rank).map(d => `${name}.${d}`);\n}\n\nexport function getChannels(name: string, rank: number): string[] {\n  if (rank === 1) {\n    return [name];\n  }\n  return getVecChannels(name, rank);\n}\n\nexport function unpackFromChannel(): string {\n  return `\n    float getChannel(vec4 frag, int dim) {\n      int modCoord = imod(dim, 2);\n      return modCoord == 0 ? frag.r : frag.g;\n    }\n\n    float getChannel(vec4 frag, vec2 innerDims) {\n      vec2 modCoord = mod(innerDims, 2.);\n      return modCoord.x == 0. ?\n        (modCoord.y == 0. ? frag.r : frag.g) :\n        (modCoord.y == 0. ? frag.b : frag.a);\n    }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl, Glsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface PadAttributes extends AttributeWithCacheKey {\n  readonly mode: string;\n  readonly pads: number[];\n  readonly value: number;\n}\n\nconst padProgramMetadata = {\n  name: 'Pad',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const padV2: OperatorImplementation<PadAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): Tensor[] => {\n      validateInputsV2(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...padProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPadProgramInfo(inferenceHandler, inputs[0], attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parsePadAttributesV2: OperatorInitialization<PadAttributes> = (node: Graph.Node): PadAttributes => {\n  const mode = node.attributes.getString('mode', 'constant');\n  const value = node.attributes.getFloat('value', 0.0);\n  const pads = node.attributes.getInts('pads');\n  return createAttributeWithCacheKey({mode, value, pads});\n};\n\nexport const padV11: OperatorImplementation<string> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], mode: string): Tensor[] => {\n      validateInputsV11(inputs);\n      const attrubutes = generatePadAttributesFromInputs(inferenceHandler, inputs, mode);\n      return padV2(inferenceHandler, [inputs[0]], attrubutes);\n    };\n\nexport const parsePadAttributesV11: OperatorInitialization<string> = (node: Graph.Node): string =>\n    node.attributes.getString('mode', 'constant');\n\nconst generatePadAttributesFromInputs =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], mode: string): PadAttributes => {\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\n          (inputs.length >= 3 && !inferenceHandler.session.isInitializer(inputs[2].dataId))) {\n        throw new Error('dynamic pad attributes are not allowed');\n      }\n\n      const pads = Array.from(inputs[1].integerData);\n      const value = (inputs.length >= 3) ? inputs[2].floatData[0] : 0.0;\n\n      return createAttributeWithCacheKey({mode, pads, value});\n    };\n\nconst createPadProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): ProgramInfo => {\n      const outputShape = ShapeUtil.padShape(input.dims.slice(), attributes.pads);\n      const rank = outputShape.length;\n      const padFunction = getPadFunction(inferenceHandler, input, attributes);\n      const shaderSource = `\n      ${padFunction}\n      float process(int[${rank}] indices) {\n          return padA(indices);\n      }`;\n      return {\n        name: 'Pad',\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputsV2 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pad requires 1 input');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst validateInputsV11 = (inputs: Tensor[]): void => {\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Pad requires 2 or 3 inputs');\n  }\n  if (inputs[1].type !== 'int32') {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 3 && inputs[2].type === 'string') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst getPadFunction = (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): string => {\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  const [width, height] = inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n  const strides = ShapeUtil.computeStrides(input.dims);\n\n  switch (attributes.mode) {\n    case 'constant':\n      return getPadConstant(glsl, input.dims, strides, width, height, attributes.pads, attributes.value);\n    case 'reflect':\n      return getPadReflect(glsl, input.dims, strides, width, height, attributes.pads);\n    case 'edge':\n      return getPadEdge(glsl, input.dims, strides, width, height, attributes.pads);\n    default:\n      throw new Error('Invalid mode');\n  }\n};\n\nconst getPadConstant =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[],\n     value: number): string => {\n      const rank = shape.length;\n      let block = '';\n      for (let i = rank - 1; i >= 0; --i) {\n        block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  return constant;\n        if (k >= ${shape[i]}) return constant;\n        offset += k * ${strides[i]};\n        `;\n      }\n      return `\n      float padA(int m[${rank}]) {\n        const float constant = float(${value});\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n    };\n\nconst getPadReflect =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0) { k = -k; }\n        {\n          const int _2n_1 = ${2 * (shape[i] - 1)};\n          k = int( mod( float(k), float(_2n_1) ) ) ;\n          if(k >= ${shape[i]}) { k = _2n_1 - k; }\n        }\n        offset += k * ${strides[i]};\n        `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n\nconst getPadEdge =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  k = 0;\n        if (k >= ${shape[i]}) k = ${shape[i] - 1};\n        offset += k * ${strides[i]};\n      `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface AveragePoolAttributes extends AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly ceilMode: number;\n  readonly countIncludePad: boolean;\n  readonly kernelShape: readonly number[];\n  readonly strides: readonly number[];\n  readonly pads: readonly number[];\n}\n\nexport const averagePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'AveragePool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n\n      // TODO: support attribute 'ceil_mode'\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\n      }\n\n      return createAttributeWithCacheKey({autoPad, ceilMode, countIncludePad, kernelShape, strides, pads});\n    };\n\nconst createAveragePoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: AveragePoolAttributes):\n        ProgramInfo => {\n          const [adjustedAttributes, outputShape] =\n              getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n          const kernelSize = ShapeUtil.size(adjustedAttributes.kernelShape);\n          const op1 = 'value += _X(x);';\n          let op2 = '';\n          if (adjustedAttributes.countIncludePad) {\n            op2 += `value /= float(${kernelSize});`;\n          } else {\n            op2 += `value /= float(${kernelSize} - pad);`;\n          }\n          const poolingCode = generatePoolingCode(inputs[0].dims, adjustedAttributes, op1, op2, '0.0');\n          const shaderSource = `\n        ${poolingCode}\n      `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nexport const globalAveragePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata = {\n        name: 'GlobalAveragePool',\n        inputNames: ['X'],\n        inputTypes: [TextureType.unpacked],\n        cacheHint: `${attributes.countIncludePad}`\n      };\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, true, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseGlobalAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      return createAttributeWithCacheKey(\n          {autoPad: '', ceilMode: 0, countIncludePad, kernelShape: [], strides: [], pads: []});\n    };\n\nexport interface MaxPoolAttributes extends AveragePoolAttributes {\n  readonly storageOrder: number;\n  readonly dilations: number[];\n}\n\nexport const maxPool: OperatorImplementation<MaxPoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: MaxPoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'MaxPool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createMaxPoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseMaxPoolAttributes: OperatorInitialization<MaxPoolAttributes> =\n    (node: Graph.Node): MaxPoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n      const storageOrder = node.attributes.getInt('storage_order', 0);\n      const dilations = node.attributes.getInts('dilations', []);\n\n      // TODO: support attribute 'ceil_mode' and 'storage_order'\n      if (storageOrder !== 0) {\n        throw new Error('column major storage order is not yet supported for MaxPool');\n      }\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\n      }\n\n      return createAttributeWithCacheKey(\n          {autoPad, ceilMode, countIncludePad: false, kernelShape, strides, pads, storageOrder, dilations});\n    };\n\nconst createMaxPoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: MaxPoolAttributes):\n        ProgramInfo => {\n          const [adjustedAttributes, outputShape] =\n              getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n          const op1 = `\n      value = max(_X(x), value);\n    `;\n          const op2 = '';\n          const poolingCode = generatePoolingCode(inputs[0].dims, adjustedAttributes, op1, op2, '-1e5');\n          const shaderSource = `\n      ${poolingCode}\n    `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst getAdjustedPoolAttributesAndOutputShape =\n    (inputs: Tensor[], attributes: AveragePoolAttributes|MaxPoolAttributes, isGlobalOperator: boolean):\n        [AveragePoolAttributes|MaxPoolAttributes, number[]] => {\n          const inputShape = inputs[0].dims.slice();\n          const hasDilations = Object.hasOwnProperty.call(attributes, 'dilations');\n          const kernelShape = attributes.kernelShape.slice();\n          const strides = attributes.strides.slice();\n          const dilations: number[] = hasDilations ? (attributes as MaxPoolAttributes).dilations.slice() : [];\n          const pads = attributes.pads.slice();\n          PoolConvUtil.adjustPoolAttributes(isGlobalOperator, inputShape, kernelShape, strides, dilations, pads);\n\n          const outputShape = PoolConvUtil.computePoolOutputShape(\n              isGlobalOperator, inputShape, strides, dilations, kernelShape, pads, attributes.autoPad);\n\n          const newAttributes = Object.assign({}, attributes);\n          if (hasDilations) {\n            Object.assign(newAttributes, {kernelShape, strides, pads, dilations, cacheKey: attributes.cacheKey});\n          } else {\n            Object.assign(newAttributes, {kernelShape, strides, pads, cacheKey: attributes.cacheKey});\n          }\n          return [newAttributes, outputShape];\n        };\n\nconst globalMaxPoolAttributes = {\n  autoPad: '',\n  ceilMode: 0,\n  countIncludePad: false,\n  kernelShape: [],\n  strides: [],\n  pads: [],\n  storageOrder: 0,\n  dilations: [],\n  cacheKey: ''\n};\n\nconst globalMaxPoolMetadata = {\n  name: 'GlobalMaxPool',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const globalMaxPool = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  const output = inferenceHandler.run(\n      {\n        ...globalMaxPoolMetadata,\n        get: () => createMaxPoolProgramInfo(inputs, globalMaxPoolMetadata, true, globalMaxPoolAttributes)\n      },\n      inputs);\n  return [output];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pool ops requires 1 input.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst generatePoolingCode =\n    (inputDims: readonly number[], attributes: AveragePoolAttributes, op1: string, op2: string, start: string):\n        string => {\n          const rank = inputDims.length;\n          if (attributes.kernelShape.length <= 2) {\n            const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\n            const sw = attributes.strides[attributes.strides.length - 1];\n            const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\n            const pwEnd = attributes.pads[attributes.pads.length - 1];\n            const dimW = inputDims[rank - 1];\n            let codeW = '';\n            let codeH = '';\n            let codeHEnd = '';\n            if (pwStart + pwEnd !== 0) {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            if (x[${rank} - 1] < 0 || x[${rank} - 1] >= ${dimW}) {\n              pad++;\n              continue;\n            }\n            ${op1}\n          }`;\n            } else {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            ${op1}\n          }`;\n            }\n\n            if (attributes.kernelShape.length === 2) {\n              const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\n              const sh = attributes.strides[attributes.strides.length - 2];\n              const phStart = attributes.pads[attributes.pads.length / 2 - 2];\n              const phEnd = attributes.pads[attributes.pads.length - 2];\n              const dimH = inputDims[rank - 2];\n              if (phStart + phEnd !== 0) {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n              if (x[${rank} - 2] < 0 || x[${rank} - 2] >= ${dimH}) {\n                pad+= ${kw};\n                continue;\n              }\n          `;\n              } else {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n            `;\n              }\n              codeHEnd = `\n          }\n        `;\n            }\n\n            const poolingCode = `\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n\n          float value = ${start};\n          int pad = 0;\n          ${codeH}\n          ${codeW}\n          ${codeHEnd}\n          ${op2}\n          return value;\n        }\n      `;\n            return poolingCode;\n          } else {\n            const kernelSize = ShapeUtil.size(attributes.kernelShape);\n            const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\n            const stridesRank = kernelStrides.length;\n            const padsRank = attributes.pads.length;\n            const offsetToIndicesFunction = offsetToIndices(stridesRank);\n            const copyInputDims = copyArray(inputDims, 'inputDims');\n            const copyPads = copyArray(attributes.pads, 'pads');\n            const copyKernelStrides = copyArray(kernelStrides, 'kernelStrides');\n            const copyStrides = copyArray(attributes.strides, 'strides');\n            const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\n            let padCode = '';\n            if (hasPads) {\n              padCode = `\n            if (x[j] >= inputDims[j] || x[j] < 0) {\n              pad++;\n              isPad = true;\n              break;\n            }\n          }\n          if (!isPad) {\n            ${op1}\n          }`;\n            } else {\n              padCode = `\n          }\n          ${op1}\n        `;\n            }\n            const poolingCode = `\n        ${offsetToIndicesFunction}\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n          int offset[${stridesRank}];\n          int pads[${padsRank}];\n          int inputDims[${rank}];\n          int kernelStrides[${stridesRank}];\n          int strides[${stridesRank}];\n          ${copyPads}\n          ${copyInputDims}\n          ${copyStrides}\n          ${copyKernelStrides}\n\n          float value = ${start};\n          int pad = 0;\n          bool isPad = false;\n          for (int i = 0; i < ${kernelSize}; i++) {\n            offsetToIndices(i, kernelStrides, offset);\n            isPad = false;\n            for (int j = ${rank} - ${stridesRank}; j < ${rank}; j++) {\n              x[j] = indices[j] * strides[j - ${rank} + ${stridesRank}]\n                + offset[j - ${rank} + ${stridesRank}] - pads[j - 2];\n              ${padCode}\n          }\n          ${op2}\n\n          return value;\n        }\n      `;\n            return poolingCode;\n          }\n        };\n\nconst copyArray = (array: readonly number[], arrayName: string): string => {\n  let block = '';\n  for (let i = 0; i < array.length; i++) {\n    block += `\n      ${arrayName}[${i}] = ${array[i]};\n    `;\n  }\n  return block;\n};\n\nconst offsetToIndices = (rank: number): string => `\n  void offsetToIndices(int offset, int[${rank}] strides, out int[${rank}] indices) {\n    if (${rank} == 0) {\n      return;\n    }\n    for (int i = 0; i < ${rank} - 1; ++i) {\n      indices[i] = offset / strides[i];\n      offset -= indices[i] * strides[i];\n    }\n    indices[${rank} - 1] = offset;\n  }`;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface ReduceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly keepDims: boolean;\n}\n\n// return [init ops, reduce ops, final ops]\ntype ReduceOp = (inputs: Tensor[], axes: number[]) => string[];\n\nconst reduce =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string,\n     reduceOp: ReduceOp): Tensor[] => {\n      validateInputs(inputs);\n\n      const reduceProgramMetadata = {\n        name,\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n      };\n\n      const output = inferenceHandler.run(\n          {\n            ...reduceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () =>\n                createReduceProgramInfo(inferenceHandler, inputs, attributes, name, reduceOp, reduceProgramMetadata)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseReduceAttributes: OperatorInitialization<ReduceAttributes> = (node: Graph.Node): ReduceAttributes => {\n  const axes = node.attributes.getInts('axes', []);\n  const keepDims = node.attributes.getInt('keepdims', 1) === 1;\n  return createAttributeWithCacheKey({axes, keepDims});\n};\n\nconst createReduceProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string, reduceOp: ReduceOp,\n     reduceProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const outputShape: number[] = [];\n      const iRank = inputs[0].dims.length || 1;\n\n      const idxCopy = [];  // copy output indexes to input indexes\n\n      const axes = ShapeUtil.normalizeAxes(attributes.axes, inputs[0].dims.length);\n      const ops = reduceOp(inputs, axes);\n      let reduceOps = ops[1];\n\n      for (let k = 0; k < inputs[0].dims.length; k++) {\n        // if this axis is reduced\n        if (axes.indexOf(k) >= 0 || axes.length === 0) {\n          if (attributes.keepDims) {\n            outputShape.push(1);\n          }  // else { remove the axis from outputShape; }\n\n          // loop over the d-th axis\n          reduceOps = `\n          for(int j${k} = 0; j${k} < ${inputs[0].dims[k]}; j${k}++) {\n            inputIdx[${k}] = j${k};\n            ${reduceOps}\n          }`;\n        } else {\n          idxCopy.push(`inputIdx[${k}] = outputIdx[${outputShape.length}];`);\n\n          outputShape.push(inputs[0].dims[k]);\n        }\n      }\n\n      const oRank = outputShape.length || 1;\n\n      const shaderSource = `\n      float process(int outputIdx[${oRank}]) {\n        float value;                 // final result\n        int inputIdx[${iRank}];      // addressing input data\n        ${idxCopy.join('\\n')}\n        ${ops[0]}       // init ops for reduce max/min\n        ${reduceOps}\n        ${ops[2]}       // final computation for reduce mean\n        return value;\n      }`;\n\n      return {\n        ...reduceProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  // TODO: support Reduce* operators with 2 inputs.\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Reduce op requires 1 input.');\n  }\n\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const reduceSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceSum', reduceOp);\n    };\n\nexport const reduceMean: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        let size = 1.0;\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            size *= inputs[0].dims[k];\n          }\n        }\n\n        return ['value = 0.0;', 'value += _A(inputIdx);', `value /= ${size}.;`];  // ensure real number with `.`\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMean', reduceOp);\n    };\n\nexport const reduceMax: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = max(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMax', reduceOp);\n    };\n\nexport const reduceMin: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = min(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMin', reduceOp);\n    };\n\nexport const reduceProd: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 1.0;', 'value *= _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceProd', reduceOp);\n    };\n\nexport const reduceLogSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', 'value = log(value);'];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSum', reduceOp);\n    };\n\nexport const reduceLogSumSquare: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['float t; value = 0.0;', 't = _A(inputIdx); value += t * t;', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSumSquare', reduceOp);\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedReshape3DProgramMetadata = (outputShape3D: readonly number[]) =>\n    ({name: 'Reshape (packed)', inputTypes: [TextureType.packed], inputNames: ['A'], cacheHint: `${outputShape3D}`});\n\nconst createPackedReshape3DProgramInfo =\n    (handler: WebGLInferenceHandler, input3D: Tensor, metadata: ProgramMetadata, outputShape3D: readonly number[]):\n        ProgramInfo => {\n          const inputShape3D = input3D.dims as [number, number, number];\n          const squeezedOutputShape = outputShape3D as [number, number, number];\n\n          let mainLoop = '';\n          for (let i = 0; i < 4; i++) {\n            let outputCoords = '';\n            switch (i) {\n              case 0:\n                outputCoords = 'outputCoords = rc;';\n                break;\n              case 1:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z);';\n                break;\n              case 2:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y, rc.z+1);';\n                break;\n              case 3:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);';\n                break;\n              default:\n                throw new Error();\n            }\n\n            mainLoop += `\n        ${outputCoords}\n        ${i > 0 ? 'if(outputCoords.y < rows && outputCoords.z < cols){' : ''}\n          int flattenedIndex = getFlattenedIndex(outputCoords);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);\n          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);\n\n        ${i > 0 ? '}' : ''}\n      `;\n          }\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n\n          const shaderSource = `\n      ${getReshapedInputCoords(inputShape3D)}\n      ${getFlattenedIndexFrom3D(squeezedOutputShape)}\n      ${unpackFromChannel()}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.0);\n\n        ivec3 outputCoords;\n        int rows = ${squeezedOutputShape[2]};\n        int cols = ${squeezedOutputShape[1]};\n\n        ${mainLoop}\n        ${glsl.output} = result;\n      }\n    `;\n\n          return {\n            ...metadata,\n            output: {dims: squeezedOutputShape, type: input3D.type, textureType: TextureType.packed},\n            shaderSource,\n            hasMain: true\n          };\n        };\n\nexport const createPackedReshape3DProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input3D: Tensor, outputShape3D: readonly number[]): ProgramInfoLoader => {\n      const metadata = createPackedReshape3DProgramMetadata(outputShape3D);\n      return {...metadata, get: () => createPackedReshape3DProgramInfo(handler, input3D, metadata, outputShape3D)};\n    };\n\nexport function processDims3D(shape: ArrayLike<number>): [number, number, number] {\n  if (shape.length === 0) {\n    return [1, 1, 1];\n  }\n  // TODO: squeeze other shapes to 2D case\n  let batch = 1;\n  for (let i = 0; i < shape.length - 2; ++i) {\n    batch *= shape[i];\n  }\n  return [batch, shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\n\n// For packed reshape, we need to re-arrange texel data for output shape.\n// Our pack is designed to pack a 2x2 tile in last h and w dimension, so\n// for the reshaped new tensor, we just need to re-arrange the last h and\n// w dimension. For any shape that is not in 3D, i.e. [batch, W, H], we\n// first convert it to 3D by collapsing other dimension to batch dim, then\n// process with the last two dimensions.\n// Note: we only need the shape tensor to calculate output shape, so the\n// content in shape tensor is never uploaded to GPU. It is always kept in CPU.\n// TODO: optimize the algorithm -- in some cases, if the last two dims are\n// the same between input shape and output shape, the packed reshape can be\n// treated as no-op.\nexport function isReshapeCheap(dims: readonly number[], reshapedDims: readonly number[]) {\n  let isCheapReshape = false;\n  if (dims.length === 0 || reshapedDims.length === 0) {  // scalar\n    isCheapReshape = true;\n  } else if (dims.length < 2 || reshapedDims.length < 2) {  // 1D\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1];\n  } else {  // 2D +\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1] &&\n        dims[dims.length - 2] === reshapedDims[reshapedDims.length - 2];\n  }\n\n  return isCheapReshape;\n}\n\nfunction getReshapedInputCoords(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n  const coords = ['b', 'r', 'c'];\n  const index = 'index';\n  const coordsFromIndexSnippet = strides\n                                     .map((stride, i) => {\n                                       const line1 = `int ${coords[i]} = ${index} / ${stride}`;\n                                       const line2 = i === strides.length - 1 ?\n                                           `int ${coords[i + 1]} = ${index} - ${coords[i]} * ${stride}` :\n                                           `index -= ${coords[i]} * ${stride}`;\n                                       return `${line1}; ${line2};`;\n                                     })\n                                     .join('');\n\n  return `\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${coordsFromIndexSnippet}\n      return ivec3(b, r, c);\n    }\n  `;\n}\n\nfunction getFlattenedIndexFrom3D(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n\n  return `\n  int getFlattenedIndex(ivec3 coords) {\n    // reverse y, z order\n    return coords.x * ${strides[0]} + coords.z * ${strides[1]} + coords.y;\n  }\n`;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const reshape = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  const reshapedDims = ShapeUtil.calculateReshapedDims(inputs[0].dims, inputs[1].integerData);\n  if (handler.session.pack) {\n    return [handler.reshapePacked(inputs[0], reshapedDims)];\n  } else {\n    return [handler.reshapeUnpacked(inputs[0], reshapedDims)];\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {unpackFromChannel} from './packing-utils';\nimport {parseUpsampleAttributes, scalesValidation, UpsampleAttributes, validateInputs} from './upsample';\n\nconst resizeProgramMetadata = {\n  name: 'Resize',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const resize: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...resizeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPackedResizeProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseResizeAttributesV10: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 10);\n\nexport const parseResizeAttributesV11: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 11);\n\nconst createPackedResizeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [scales, outputShape] = prepareInputs(inputs, attributes);\n\n      const isSame =\n          scales.every((s: number) => s === 1) && attributes.coordinateTransformMode !== 'tf_crop_and_resize';\n      if (isSame) {\n        return {\n          ...resizeProgramMetadata,\n          output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n          hasMain: true,\n          shaderSource: `void main() {\n                    vec4 v = ${glsl.texture2D}(X, TexCoords);\n                    ${glsl.output} = v;\n                }`\n        };\n      }\n\n      const dim = outputShape.length;\n      if (dim < 2) {\n        throw new Error(`output dimension should be at least 2, but got ${dim}`);\n      }\n\n      const outputHeight = outputShape[dim - 2];\n      const outputWidth = outputShape[dim - 1];\n\n      const inputShape = inputs[0].dims;\n      if (dim !== inputShape.length) {\n        throw new Error(`output dimension should match input ${inputShape.length}, but got ${dim}`);\n      }\n      const inputHeight = inputShape[dim - 2];\n      const inputWidth = inputShape[dim - 1];\n\n      const scalesHeight = scales[dim - 2];\n      const scalesWidth = scales[dim - 1];\n\n      let getSourceFracIndex = '';\n\n      if (attributes.mode !== 'linear') {\n        // TODO: support other modes\n        throw new Error(`resize (packed) does not support mode: '${attributes.mode}'`);\n      }\n      switch (attributes.coordinateTransformMode) {\n        case 'asymmetric':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return vec4(coords) / scaleWHWH;\n                    }\n                `;\n          break;\n        case 'half_pixel':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;\n                    }\n                `;\n          break;\n        case 'pytorch_half_pixel':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 fcoords = vec4(coords);\n                        return vec4(\n                            ${outputWidth}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,\n                            ${outputHeight}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,\n                            ${outputWidth}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,\n                            ${outputHeight}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0\n                          );\n                    }\n                `;\n          break;\n        case 'align_corners':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 resized = vec4(${outputWidth}.0 - 1.0, ${outputHeight}.0 - 1.0, ${outputWidth}.0 - 1.0,\n                            ${outputHeight}.0 - 1.0);\n                        vec4 original = vec4(${inputWidth}.0 - 1.0, ${inputHeight}.0 - 1.0, ${inputWidth}.0 - 1.0,\n                            ${inputHeight}.0 - 1.0);\n                        vec4 new_scale = original / resized;\n                        return vec4(coords) * new_scale;\n                    }\n                `;\n          break;\n        default:\n          // TODO:supporting other coordinateTransformModes\n          throw new Error(`resize (packed) does not support coordinateTransformMode: \\\n                                '${attributes.coordinateTransformMode}'`);\n      }\n\n      const coordsDataType = getCoordsDataType(dim);\n      const unpackChannel = unpackFromChannel();\n      const shaderSource = `\n            const vec2 inputWH = vec2(${inputHeight}.0, ${inputWidth}.0);\n            const vec4 scaleWHWH = vec4(float(${scalesHeight}), float(${scalesWidth}), float(${scalesHeight}), float(${\n          scalesWidth}));\n            ${unpackChannel}\n            ${getSourceFracIndex}\n            float getAValue(int x10, int r, int c, int d) {\n                return getChannel(getA(x10, r, c, d), vec2(c, d));\n            }\n            void main() {\n                ${coordsDataType} rc = getOutputCoords();\n\n                int batch = rc[0];\n                int depth = rc[1];\n\n                // retrieve the 4 coordinates that is used in the 4 packed output values.\n                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);\n\n                // calculate the source index in fraction\n                vec4 sourceFrac = getSourceFracIndex(coords);\n\n                // get the lower and upper bound of the 4 values that will be packed into one texel.\n                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));\n                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));\n                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));\n                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));\n\n                bool hasNextRow = rc.w < ${outputHeight - 1};\n                bool hasNextCol = rc.z < ${outputWidth - 1};\n\n                // pack x00, x01, x10, x11's top-left corner into one vec4 structure\n                vec4 topLeft = vec4(\n                    getAValue(batch, depth, x00.x, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's top-right corner into one vec4 structure\n                vec4 topRight = vec4(\n                    getAValue(batch, depth, x00.x, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure\n                vec4 bottomLeft = vec4(\n                    getAValue(batch, depth, x00.z, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure\n                vec4 bottomRight = vec4(\n                    getAValue(batch, depth, x00.z, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);\n\n                // calculate the interpolation fraction on u and v direction\n                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);\n                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));\n\n                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);\n                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);\n                vec4 newValue = mix(top, bottom, clampFrac.xxzz);\n\n                ${glsl.output} = vec4(newValue);\n            }\n        `;\n      return {\n        ...resizeProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\n\nconst prepareInputs = (inputs: Tensor[], attributes: UpsampleAttributes): [readonly number[], readonly number[]] => {\n  const x = inputs[0];\n  const xDims = x.dims;\n\n  let scales = attributes.scales;\n  let outputSizes: number[]|undefined;\n  if (scales.length === 0) {\n    const scalesTensor = inputs[attributes.scalesInputIdx];\n    if (scalesTensor && scalesTensor.size !== 0) {\n      if (inputs[attributes.sizesInputIdx]) {\n        throw new Error('Only one of scales or sizes must be provided as input.');\n      }\n      scales = parseScalesData(scalesTensor, attributes.mode, attributes.isResize);\n    } else {\n      const sizesTensor = inputs[attributes.sizesInputIdx];\n      if (!sizesTensor || sizesTensor.size === 0) {\n        throw new Error('Either scales or sizes MUST be provided as input.');\n      }\n\n      outputSizes = Array.from(sizesTensor.integerData);\n      scales = parseScalesDataFromOutputSize(outputSizes, xDims, attributes.mode, attributes.isResize);\n    }\n  } else {\n    if (inputs[attributes.sizesInputIdx]) {\n      throw new Error('Only one of scales or sizes must be provided as input.');\n    }\n  }\n\n  const yDims = outputSizes || (xDims.map((dim, i) => Math.floor(dim * scales[i])));\n\n  return [scales, yDims];\n};\n\nconst parseScalesData = (scale: Tensor, mode: string, isResize: boolean): number[] => {\n  const scales = Array.from(scale.floatData);\n  scalesValidation(scales, mode, isResize);\n  return scales;\n};\n\nconst parseScalesDataFromOutputSize =\n    (yDims: readonly number[], xDims: readonly number[], mode: string, isResize: boolean): number[] => {\n      const length = xDims.length;\n      const scales = new Array<number>(length);\n\n      for (let i = 0, end = length; i < end; i++) {\n        if (xDims[i] === 0) {\n          if (yDims[i] !== 0) {\n            throw new Error('Input dim is zero but required output dim is non-zero.');\n          }\n          scales[i] = 1;\n        } else {\n          scales[i] = yDims[i] / xDims[i];\n        }\n      }\n      scalesValidation(scales, mode, isResize);\n      return scales;\n    };\n\n// roi data is not used yet. but leave here for future usage.\n// const getRoi = (inputs: Tensor[], attributes: UpsampleAttributes) : number[] => {\n//     let roi: number[] = [];\n//     if (attributes.needRoiInput) {\n//         if (attributes.roiInputIdx <= 0) {\n//             throw new Error('Invalid roi input index.');\n//         }\n//         const roiTensor = inputs[attributes.roiInputIdx];\n//         roi = roiTensor.size > 0 ? Array.from(roiTensor.floatData) : [];\n//     } else {\n//         roi = new Array(inputs[0].dims.length * 2).fill(0);\n//     }\n//     return roi;\n// };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const shape = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  return [new Tensor([inputs[0].dims.length], 'int32', undefined, undefined, new Int32Array(inputs[0].dims))];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Shape requires 1 input.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SliceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly ends: number[];\n  readonly starts: number[];\n}\n\nconst sliceProgramMetadata = {\n  name: 'Slice',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const slice: OperatorImplementation<SliceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SliceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...sliceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseSliceAttributes: OperatorInitialization<SliceAttributes> = (node: Graph.Node): SliceAttributes => {\n  const starts = node.attributes.getInts('starts');\n  const ends = node.attributes.getInts('ends');\n  const axes = node.attributes.getInts('axes', []);\n  return createAttributeWithCacheKey({starts, ends, axes});\n};\n\nconst createSliceProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SliceAttributes): ProgramInfo => {\n      const axes = (attributes.axes.length === 0) ? input.dims.slice(0).map((val, i) => i) : attributes.axes;\n      const normalizedAxes = ShapeUtil.normalizeAxes(axes, input.dims.length);\n      const starts = attributes.starts.map((start, i) => {\n        if (start > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(start, input.dims[normalizedAxes[i]]);\n      });\n      const ends = attributes.ends.map((end, i) => {\n        if (end > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(end, input.dims[normalizedAxes[i]]);\n      });\n\n      const outputShape = input.dims.slice();\n\n      const sliceOps: string[] = [];\n      for (let i = 0; i < normalizedAxes.length; i++) {\n        outputShape[normalizedAxes[i]] = ends[i] - starts[i];\n        if (starts[i] > 0) {\n          sliceOps.push(`outputIdx[${normalizedAxes[i]}] += ${starts[i]};`);\n        }  // else { sliceOps.push(`outputIdx[${normalizedAxes[i]}] += 0;`); }\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        ${sliceOps.join('\\n      ')}\n        return _A(outputIdx);\n      }`;\n      return {\n        ...sliceProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Slice requires 1 input.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const sliceV10 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV10(inputs);\n  const attributes = generateSliceAttributesFromInputs(inferenceHandler, inputs);\n  const output = inferenceHandler.run(\n      {\n        ...sliceProgramMetadata,\n        cacheHint: attributes.cacheKey,\n        get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n      },\n      [inputs[0]]);\n  return [output];\n};\n\nconst generateSliceAttributesFromInputs =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): SliceAttributes => {\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\n          !inferenceHandler.session.isInitializer(inputs[2].dataId) ||\n          (inputs.length >= 4 && !inferenceHandler.session.isInitializer(inputs[3].dataId)) ||\n          (inputs.length >= 5 && !inferenceHandler.session.isInitializer(inputs[4].dataId))) {\n        throw new Error('dynamic slice attributes are not allowed');\n      }\n\n      if (inputs.length >= 5 && inputs[4].integerData.some((i: number) => i !== 1)) {\n        throw new Error('currently non-1 steps is not supported for Slice');\n      }\n\n      const starts = Array.from(inputs[1].integerData);\n      const ends = Array.from(inputs[2].integerData);\n      const axes = inputs.length >= 4 ? Array.from(inputs[3].integerData) : [];\n      const cacheKey = `${axes};${starts};${ends}`;\n      return {starts, ends, axes, cacheKey};\n    };\n\nconst validateInputsV10 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 3 || inputs.length > 5) {\n    throw new Error('Invalid input number.');\n  }\n  if (inputs[1].type !== 'int32' || inputs[1].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[2].type !== 'int32' || inputs[2].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 4 && (inputs[3].type !== 'int32' || inputs[3].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 5 && (inputs[4].type !== 'int32' || inputs[4].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nimport {transpose, TransposeAttributes} from './transpose';\n\nexport interface SoftmaxAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nconst softmaxComputeMaxProgramMetadata = {\n  name: 'SoftmaxComputeMax',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst softmaxComputeScaleProgramMetadata = {\n  name: 'SoftmaxComputeScale',\n  inputNames: ['A', 'Max'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst softmaxProgramMetadata = {\n  name: 'SoftMax',\n  inputNames: ['A', 'Max', 'Norm'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked],\n};\n\nexport const softmax: OperatorImplementation<SoftmaxAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const inputShape = inputs[0].dims.slice();\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\n      const logicalRowCount = ShapeUtil.sizeToDimension(inputShape, axis);\n      const featureCount = ShapeUtil.sizeFromDimension(inputShape, axis);\n\n      const output = computeSoftmax(inferenceHandler, inputs, attributes, logicalRowCount, featureCount);\n      return output;\n    };\n\nexport const parseSoftmaxAttributes: OperatorInitialization<SoftmaxAttributes> =\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 1)});\n\nexport const parseSoftmaxAttributesV13: OperatorInitialization<SoftmaxAttributes> =\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', -1)});\n\n// The \"semantic\" meaning of axis has changed in opset-13.\n// Please compare: https://github.com/onnx/onnx/blob/main/docs/Operators.md#Softmax\n// with https://github.com/onnx/onnx/blob/main/docs/Changelog.md#Softmax-11 for detailed explanations\n// To account for the opset-13 behavior, our plan will be to transpose the \"axis\" dim to the innermost dim\n// and perform softmax and then reverse the transpose. We can skip the transposing aspect if the axis is already\n// the innermost dim\nexport const softmaxV13: OperatorImplementation<SoftmaxAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const inputShape = inputs[0].dims.slice();\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\n      const rank = inputShape.length;\n\n      const isTransposeRequired = (axis !== rank - 1) ? true : false;\n      const transposedInputShape: number[] = [];\n      let perm: number[] = [];\n      let transposedInputs: Tensor[] = [];\n      let transposeAttribute: TransposeAttributes;\n\n      if (isTransposeRequired) {\n        perm = Array.from({length: rank}).map((_, i) => i);\n\n        // swap the innermost dim with the dim corresponding to axis\n        perm[axis] = rank - 1;\n        perm[rank - 1] = axis;\n\n        perm.map(p => transposedInputShape.push(inputShape[p]));\n\n        transposeAttribute = createAttributeWithCacheKey({perm});\n        transposedInputs = transpose(inferenceHandler, inputs, transposeAttribute);\n      }\n\n      const logicalRowCount = isTransposeRequired ? ShapeUtil.sizeToDimension(transposedInputShape, rank - 1) :\n                                                    ShapeUtil.sizeToDimension(inputShape, rank - 1);\n      const featureCount = isTransposeRequired ? ShapeUtil.sizeFromDimension(transposedInputShape, rank - 1) :\n                                                 ShapeUtil.sizeFromDimension(inputShape, rank - 1);\n\n      const output = computeSoftmax(\n          inferenceHandler, isTransposeRequired ? transposedInputs : inputs, attributes, logicalRowCount, featureCount);\n\n      if (isTransposeRequired) {\n        const reversedOutput = transpose(inferenceHandler, output, transposeAttribute!);\n        return reversedOutput;\n      } else {\n        return output;\n      }\n    };\n\nconst computeSoftmax =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes, logicalRowCount: number,\n     featureCount: number): Tensor[] => {\n      const computeMaxProgramInfo =\n          createComputeMaxProgramInfo(inferenceHandler, inputs[0], logicalRowCount, featureCount, [logicalRowCount]);\n      const max = inferenceHandler.run(\n          {...softmaxComputeMaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeMaxProgramInfo},\n          inputs);\n\n      const computeScaleProgramInfo = createComputScaleProgramInfo(\n          inferenceHandler, inputs[0], logicalRowCount, featureCount, computeMaxProgramInfo.output.dims,\n          [logicalRowCount]);\n      const scale = inferenceHandler.run(\n          {...softmaxComputeScaleProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeScaleProgramInfo},\n          [inputs[0], max]);\n\n      const softMaxProgramInfo = createSoftMaxProgramInfo(\n          inferenceHandler, inputs[0], logicalRowCount, featureCount, computeMaxProgramInfo.output.dims,\n          computeScaleProgramInfo.output.dims);\n      const output = inferenceHandler.run(\n          {...softmaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => softMaxProgramInfo},\n          [inputs[0], max, scale]);\n      return [output];\n    };\n\n/**\n * Create a texture that contains the maximum value of each of the 'N' rows\n */\nconst createComputeMaxProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, logicalRowCount: number, featureCount: number,\n     outputShape: number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = outputShape.length;\n\n      if (logicalRowCount < 1 || featureCount < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (outputShape.length !== 1) {\n        throw new Error('Dimensionality of the output should be 1');\n      }\n\n      if (outputShape[0] !== logicalRowCount) {\n        throw new Error('Shape of the output should be equal to logical row count');\n      }\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${featureCount};\n\n        float max = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset, ${textureWidth},\n        ${textureHeight} )));\n        for(int i=1; i<${featureCount}; ++i)\n        {\n          float current = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight})));\n          if(current > max)\n          max = current;\n        }\n\n        return max;\n      }`;\n      return {\n        ...softmaxComputeMaxProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\n/**\n * Create a texture that contains the normalization factor for each of the 'N' rows\n */\nconst createComputScaleProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, logicalRowCount: number, featureCount: number,\n     maxElementPerLogicalRow: readonly number[], outputShape: number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = outputShape.length;\n\n      if (logicalRowCount < 1 || featureCount < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (outputShape.length !== 1) {\n        throw new Error('Dimensionality of the output should be 1');\n      }\n\n      if (outputShape[0] !== logicalRowCount) {\n        throw new Error('Shape of the output should be equal to logical row count');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== logicalRowCount) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${featureCount};\n\n        float norm_factor = 0.0;\n        float max = _Max(indices);\n        for(int i=0; i<${featureCount}; ++i)\n        {\n          norm_factor += exp(getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight}))) - max);\n        }\n\n        return norm_factor;\n      }`;\n      return {\n        ...softmaxComputeScaleProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createSoftMaxProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, logicalRowCount: number, featureCount: number,\n     maxElementPerLogicalRow: readonly number[], normalizationPerLogicalRow: readonly number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = input.dims.length;\n\n      if (logicalRowCount < 1 || featureCount < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1 || normalizationPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== logicalRowCount || normalizationPerLogicalRow[0] !== logicalRowCount) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n\n      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)\n      int offset = coordsToOffset(TexCoords, ${textureWidth}, ${textureHeight});\n\n      //determine the logical row for this index\n      int logical_row_index[1];\n      logical_row_index[0] = offset / ${featureCount};\n\n      float norm_factor = _Norm(logical_row_index);\n\n      // avoid possible division by 0\n      // if norm_facor is 0, all elements are zero\n      // if so, return 0\n      if(norm_factor == 0.0)\n        return 0.0;\n\n      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;\n    }`;\n      return {\n        ...softmaxProgramMetadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Softmax requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil, SplitUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SplitAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n  readonly split: number[];\n  readonly numOutputs: number;\n}\n\nconst splitProgramMetadata = {\n  name: 'Split',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const split: OperatorImplementation<SplitAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SplitAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputs[0].dims.length);\n      const count = getProgramCount(inferenceHandler, inputs, axis, attributes);\n      const output: Tensor[] = [];\n      for (let i = 0; i < count; ++i) {\n        output.push(inferenceHandler.run(\n            {\n              ...splitProgramMetadata,\n              cacheHint: `${attributes.cacheKey};${i}`,\n              get: () => createSplitProgramInfo(inferenceHandler, inputs[0], attributes, axis, i)\n            },\n            inputs));\n      }\n\n      return output;\n    };\n\nexport const parseSplitAttributes: OperatorInitialization<SplitAttributes> = (node: Graph.Node): SplitAttributes => {\n  const axis = node.attributes.getInt('axis', 0);\n  const split = node.attributes.getInts('split', []);\n  const numOutputs = node.outputs.length;\n  return createAttributeWithCacheKey({axis, split, numOutputs});\n};\n\nconst getProgramCount =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number, attributes: SplitAttributes): number => {\n      const [, offsets] = SplitUtil.splitShape(inputs[0].dims, axis, attributes.split, attributes.numOutputs);\n      return offsets.length;\n    };\n\nconst createSplitProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SplitAttributes, axis: number, index: number):\n        ProgramInfo => {\n          const [shapes, offsets] = SplitUtil.splitShape(input.dims, axis, attributes.split, attributes.numOutputs);\n          const offset = offsets[index];\n          const outputShape = shapes[index];\n          const rank = outputShape.length;\n          const shaderSource = `\n      float process(int indices[${rank}]) {\n        indices[${axis}] += ${offset};\n        return _A(indices);\n      }\n    `;\n          return {\n            ...splitProgramMetadata,\n            cacheHint: `${attributes.cacheKey}:${index}`,\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Split requires one input.');\n  }\n\n  if (inputs[0].type !== 'int8' && inputs[0].type !== 'uint8' && inputs[0].type !== 'int16' &&\n      inputs[0].type !== 'uint16' && inputs[0].type !== 'int32' && inputs[0].type !== 'uint32' &&\n      inputs[0].type !== 'float32' && inputs[0].type !== 'float64' && inputs[0].type !== 'bool') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const squeeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.squeezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const squeezeV13 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV13(inputs);\n  return squeeze(inferenceHandler, [inputs[0]], Array.from(inputs[1].integerData));\n};\n\nexport const parseSqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Squeeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};\n\nconst validateInputsV13 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Squeeze requires 2 inputs.');\n  }\n\n  if (inputs[1].type !== 'int32') {\n    throw new Error('Invalid input type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const sum = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const sumProgramMetadata = {\n    name: 'Sum',\n    inputNames: inputs.map((v, i) => `X${i}`),\n    inputTypes: new Array(inputs.length).fill(TextureType.unpacked)\n  };\n\n  const output = inferenceHandler.run(\n      {...sumProgramMetadata, get: () => createSumProgramInfo(inferenceHandler, inputs, sumProgramMetadata)}, inputs);\n  return [output];\n};\n\nconst createSumProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], sumProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const outputShape = inputs[0].dims.slice();\n      const sumLine = inputs.map((v, i) => `${glsl.texture2D}(X${i},TexCoords)`).join(' + ');\n      const shaderSource = `\n      void main() {\n        vec4 result = ${sumLine};\n        ${glsl.output} = result;\n      }\n    `;\n      return {\n        ...sumProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length === 0) {\n    throw new Error('Sum requires inputs.');\n  }\n\n  const length = inputs[0].dims.length;\n  for (let i = 1; i < inputs.length; i++) {\n    if (length !== inputs[i].dims.length) {\n      throw new Error('Input shapes are mismatched.');\n    }\n\n    for (let j = 0; j < length; j++) {\n      if (inputs[0].dims[j] !== inputs[i].dims[j]) {\n        throw new Error('Input shapes are not matched.');\n      }\n    }\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n  for (let i = 1; i < inputs.length; i++) {\n    if (inputs[0].type !== inputs[i].type) {\n      throw new Error('Input types are not matched.');\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {NUMBER_TYPES} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const tile = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const tileProgramMetadata = {\n    name: 'Tile',\n    inputNames: ['A'],\n    inputTypes: [TextureType.unpacked],\n  };\n\n  const output = inferenceHandler.run(\n      {...tileProgramMetadata, get: () => createTileProgramInfo(inferenceHandler, inputs, tileProgramMetadata)},\n      inputs);\n  return [output];\n};\n\nconst createTileProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], tileProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const outputShape = new Array(inputShape.length);\n\n      const tileOps: string[] = [];\n      for (let i = 0; i < inputShape.length; i++) {\n        outputShape[i] = inputShape[i] * inputs[1].numberData[i];\n        tileOps.push(`inputIdx[${i}] = int(mod(float(outputIdx[${i}]), ${inputShape[i]}.));`);\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        int inputIdx[${rank}];\n        ${tileOps.join('\\n')}\n        return _A(inputIdx);\n      }\n    `;\n      return {\n        ...tileProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Tile requires 2 input.');\n  }\n  if (inputs[1].dims.length !== 1) {\n    throw new Error('The second input shape must 1 dimension.');\n  }\n  if (inputs[1].dims[0] !== inputs[0].dims.length) {\n    throw new Error('Invalid input shape.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invalid repeat type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface TransposeAttributes extends AttributeWithCacheKey {\n  readonly perm: number[];\n}\n\nconst transposeProgramMetadata = {\n  name: 'Transpose',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const transpose: OperatorImplementation<TransposeAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: TransposeAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...transposeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createTransposeProgramInfo(inferenceHandler, inputs[0], attributes.perm)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseTransposeAttributes: OperatorInitialization<TransposeAttributes> =\n    (node: Graph.Node): TransposeAttributes => createAttributeWithCacheKey({perm: node.attributes.getInts('perm', [])});\n\nconst createTransposeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, perm: number[]): ProgramInfo => {\n      const inputShape = input.dims;\n      perm = getAdjustedPerm(inputShape, perm);\n      const unpackedOutputShape = getOutputShape(inputShape, perm);\n      const rank = inputShape.length;\n      // A dims=[${inputs[0].dims.toString()}]\n      // out Dims=[${unpackedOutputShape.toString()}]\n      // based on perm=[${perm.toString()}]\n      const shaderSource = `\n      ${getPermFunctionBody('perm', perm, rank)}\n      float process(int indices[${rank}]) {\n        int a[${rank}];\n        perm(a, indices);\n        return _A(a);\n      }`;\n      return {\n        ...transposeProgramMetadata,\n        output: {dims: unpackedOutputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] => {\n  if (perm && perm.length !== inputShape.length) {\n    perm = [...(inputShape.keys())].reverse();\n  }\n  return perm;\n};\n\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] => {\n  perm = getAdjustedPerm(inputShape, perm);\n  return ShapeUtil.sortBasedOnPerm(inputShape, perm);\n};\n\nconst getPermFunctionBody = (name: string, perm: number[], rank: number): string => {\n  const reverseFunc = [];\n  reverseFunc.push(`void ${name}(out int a[${rank}], int src[${rank}]) {`);\n  for (let i = 0; i < rank; ++i) {\n    reverseFunc.push(`\\ta[${perm[i]}]=src[${i}];`);\n  }\n  reverseFunc.push('\\t}');\n  return reverseFunc.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Transpose requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('input should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {TextureData, TextureType} from '../types';\n\nexport const encodeAsUint8 = (inferenceHandler: WebGLInferenceHandler, input: TextureData): TextureData => {\n  const outputShape = input.shape;\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  /**\n   * https://github.com/tensorflow/tfjs-core/blob/master/src/kernels/webgl/encode_float_gpu.ts\n   */\n  const shaderSource = `\n    const float FLOAT_MAX = 1.70141184e38;\n    const float FLOAT_MIN = 1.17549435e-38;\n\n    bool isNaN(float val) {\n      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\n    }\n\n    highp vec4 encodeAsUint8(highp float v) {\n      if (isNaN(v)) {\n        return vec4(255, 255, 255, 255);\n      }\n\n      highp float av = abs(v);\n\n      if(av < FLOAT_MIN) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n      } else if(v > FLOAT_MAX) {\n        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n      } else if(v < -FLOAT_MAX) {\n        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n      }\n\n      highp vec4 c = vec4(0,0,0,0);\n\n      highp float e = floor(log2(av));\n      highp float m = exp2(fract(log2(av))) - 1.0;\n\n      c[2] = floor(128.0 * m);\n      m -= c[2] / 128.0;\n      c[1] = floor(32768.0 * m);\n      m -= c[1] / 32768.0;\n      c[0] = floor(8388608.0 * m);\n\n      highp float ebias = e + 127.0;\n      c[3] = floor(ebias / 2.0);\n      ebias -= c[3] * 2.0;\n      c[2] += floor(ebias) * 128.0;\n\n      c[3] += 128.0 * step(0.0, -v);\n\n      return c / 255.0;\n    }\n\n    void main() {\n      float value = ${glsl.texture2D}(X,TexCoords).r;\n      ${glsl.output} = encodeAsUint8(value);\n    }`;\n  const programInfo = {\n    name: 'Uint8Encode',\n    inputTypes: [TextureType.unpacked],\n    inputNames: ['X'],\n    output: {dims: outputShape, type: input.tensor.type, textureType: TextureType.downloadUint8AsFloat},\n    shaderSource,\n    hasMain: true\n  };\n  return inferenceHandler.executeProgram(programInfo, [input.tensor]);\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {Tensor} from '../../../tensor';\nimport {MAX_CLIP, MIN_CLIP} from '../../../util';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport function glslAbs(): GlslValueFunction {\n  return glslBuiltinUnary('abs');\n}\nexport function glslAcos(): GlslValueFunction {\n  return glslBuiltinUnary('acos');\n}\nexport function glslAsin(): GlslValueFunction {\n  return glslBuiltinUnary('asin');\n}\nexport function glslAtan(): GlslValueFunction {\n  return glslBuiltinUnary('atan');\n}\nexport function glslCeil(): GlslValueFunction {\n  return glslBuiltinUnary('ceil');\n}\nexport function glslCos(): GlslValueFunction {\n  return glslBuiltinUnary('cos');\n}\nexport function glslElu(alpha: number): GlslValueFunction {\n  const name = 'elu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslExp(): GlslValueFunction {\n  return glslBuiltinUnary('exp');\n}\nexport function glslFloor(): GlslValueFunction {\n  return glslBuiltinUnary('floor');\n}\nexport function glslClip(min: number, max: number): GlslValueFunction {\n  const name = 'clip';\n  const body = `\n  const float min = float(${min});\n  const float max = float(${max});\n\n  float ${name}_(float a) {\n    return clamp(a, min, max);\n  }\n  vec4 ${name}_(vec4 v) {\n    return clamp(v, min, max);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslIdentity(): GlslValueFunction {\n  const name = 'indentity';\n  const body = `\n  float ${name}_(float a) {\n    return a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLeakyRelu(alpha: number): GlslValueFunction {\n  const name = 'leakyRelu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a < 0.0 ? a * alpha : a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLog(): GlslValueFunction {\n  return glslBuiltinUnary('log');\n}\nexport function glslNeg(): GlslValueFunction {\n  const name = 'neg';\n  const body = `\n  float ${name}_(float a) {\n    return -a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return -v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslNot(): GlslValueFunction {\n  const name = 'not';\n  const body = `\n  float ${name}_(float a) {\n    return float( ! bool(a) );\n  }\n  bool ${name}_(bool a) {\n    return !a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));\n  }\n  bvec4 ${name}_(bvec4 v) {\n    return bvec4(!v.x, !v.y, !v.z, !v.w);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSin(): GlslValueFunction {\n  return glslBuiltinUnary('sin');\n}\nexport function glslRelu(): GlslValueFunction {\n  const name = 'relu';\n  const body = `\n  float ${name}_(float a) {\n    return max( a, 0.0 );\n  }\n  vec4 ${name}_(vec4 v) {\n    return max( v, 0.0 );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSigmoid(): GlslValueFunction {\n  const name = 'sigmoid';\n  const body = `\n  float ${name}_(float a) {\n    return 1.0 / (1.0 + exp(-a));\n  }\n  vec4 ${name}_(vec4 v) {\n    return 1.0 / (1.0 + exp(-v));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSqrt(): GlslValueFunction {\n  return glslBuiltinUnary('sqrt');\n}\nexport function glslTan(): GlslValueFunction {\n  return glslBuiltinUnary('tan');\n}\nexport function glslTanh(): GlslValueFunction {\n  const name = 'tanh';\n  const body = `\n  float ${name}_(float a) {\n    a = clamp(a, -10., 10.);\n    a = exp(2.*a);\n    return (a - 1.) / (a + 1.);\n  }\n  vec4 ${name}_(vec4 v) {\n    v = clamp(v, -10., 10.);\n    v = exp(2.*v);\n    return (v - 1.) / (v + 1.);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nfunction glslBuiltinUnary(name: string): GlslValueFunction {\n  const body = `\n  float ${name}_(float a) {\n    return ${name}(a);\n  }\n  vec4 ${name}_(vec4 v) {\n    return ${name}(v);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\n/////\n/////\n/////\n\nconst createElementwiseProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, glslFunc: GlslValueFunction):\n        ProgramInfo => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n          return {\n            ...metadata,\n            output: {dims: input.dims, type: input.type, textureType},\n            shaderSource: `\n     ${glslFunc.body}\n     void main() {\n       vec4 v = ${glsl.texture2D}(A, TexCoords);\n       v = ${glslFunc.name}_(v);\n       ${glsl.output} = v;\n     }\n     `,\n            hasMain: true\n          };\n        };\n\nconst createElementwiseProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input: Tensor, glslFunc: GlslValueFunction, cacheKey?: string):\n        ProgramInfoLoader => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const metadata = {name: glslFunc.name, inputTypes: [textureType], inputNames: ['A'], cacheHint: cacheKey};\n          return {...metadata, get: () => createElementwiseProgramInfo(handler, metadata, input, glslFunc)};\n        };\n\nexport const abs = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAbs()), inputs)];\n\nexport const acos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAcos()), inputs)];\n\nexport const asin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAsin()), inputs)];\n\nexport const atan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAtan()), inputs)];\n\nexport interface ClipAttributes extends AttributeWithCacheKey {\n  readonly min: number;\n  readonly max: number;\n}\n\nexport const clip =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ClipAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(\n            handler, inputs[0], glslClip(attributes.min, attributes.max), attributes.cacheKey),\n        inputs)];\n\nexport const parseClipAttributes = (node: Graph.Node): ClipAttributes => createAttributeWithCacheKey(\n    {min: node.attributes.getFloat('min', MIN_CLIP), max: node.attributes.getFloat('max', MAX_CLIP)});\n\nexport const clipV11 = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  const attributes = generateClipAttributesFromInputs(handler, inputs);\n  return clip(handler, [inputs[0]], attributes);\n};\n\nconst generateClipAttributesFromInputs = (handler: WebGLInferenceHandler, inputs: Tensor[]): ClipAttributes => {\n  if (inputs.length >= 3 &&\n      (!handler.session.isInitializer(inputs[1].dataId) || !handler.session.isInitializer(inputs[2].dataId))) {\n    throw new Error('dynamic clip attributes are not allowed');\n  }\n\n  const min = (inputs.length >= 3) ? inputs[1].numberData[0] : MIN_CLIP;\n  const max = (inputs.length >= 3) ? inputs[2].numberData[0] : MAX_CLIP;\n  return createAttributeWithCacheKey({min, max});\n};\n\nexport const ceil = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCeil()), inputs)];\n\nexport const cos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCos()), inputs)];\n\nexport interface EluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const elu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: EluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslElu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseEluAttributes = (node: Graph.Node): EluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 1.0)});\n\nexport const exp = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslExp()), inputs)];\n\nexport const floor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslFloor()), inputs)];\n\nexport const identity = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslIdentity()), inputs)];\n\nexport interface LeakyReluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const leakyRelu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: LeakyReluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslLeakyRelu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseLeakyReluAttributes = (node: Graph.Node): LeakyReluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 0.01)});\n\nexport const log = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslLog()), inputs)];\n\nexport const neg = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNeg()), inputs)];\n\nexport const not = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNot()), inputs)];\n\nexport const relu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslRelu()), inputs)];\n\nexport const sigmoid = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSigmoid()), inputs)];\n\nexport const sin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSin()), inputs)];\n\nexport const sqrt = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSqrt()), inputs)];\n\nexport const tan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTan()), inputs)];\n\nexport const tanh = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTanh()), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst unpackProgramMetadata = {\n  name: 'unpack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const createUnpackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const rank = input.dims.length;\n\n  const channels = getChannels('rc', rank);\n  const innerDims = channels.slice(-2);\n  const coordsDataType = getCoordsDataType(rank);\n  const unpackChannel = unpackFromChannel();\n  const isScalar = (input.dims.length === 0);\n  const sourceCoords = isScalar ? '' : getSourceCoords(rank, channels);\n  const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const shaderSource = `\n    ${unpackChannel}\n    void main() {\n      ${coordsDataType} rc = getOutputCoords();\n\n       // Sample the texture with the coords to get the rgba channel value.\n       vec4 packedInput = getA(${sourceCoords});\n\n       ${glsl.output} = vec4(getChannel(packedInput, ${coords}), 0, 0, 0);\n     }\n   `;\n\n  return {\n    ...unpackProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n    shaderSource\n  };\n};\n\nexport const createUnpackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...unpackProgramMetadata, get: () => createUnpackProgramInfo(handler, input)});\n\nfunction getSourceCoords(rank: number, dims: string[]): string {\n  if (rank === 1) {\n    return 'rc';\n  }\n\n  let coords = '';\n  for (let i = 0; i < rank; i++) {\n    coords += dims[i];\n    if (i < rank - 1) {\n      coords += ',';\n    }\n  }\n  return coords;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const unsqueeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.unsqueezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const unsqueezeV13 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV13(inputs);\n  return unsqueeze(inferenceHandler, [inputs[0]], Array.from(inputs[1].integerData));\n};\n\nexport const parseUnsqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Unsqueeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};\n\nconst validateInputsV13 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Unsqueeze requires 2 inputs.');\n  }\n\n  if (inputs[1].type !== 'int32') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface UpsampleAttributes extends AttributeWithCacheKey {\n  readonly opset: number;\n  readonly isResize: boolean;\n  readonly mode: string;\n  readonly scales: number[];\n  readonly extrapolationValue: number;\n  readonly coordinateTransformMode: string;\n  readonly useExtrapolation: boolean;\n  readonly needRoiInput: boolean;\n  readonly nearestMode: string;\n  readonly cubicCoefficientA: number;\n  readonly excludeOutside: boolean;\n  readonly useNearest2xOptimization: boolean;\n  readonly roiInputIdx: number;\n  readonly scalesInputIdx: number;\n  readonly sizesInputIdx: number;\n}\n\nconst upsampleProgramMetadata = {\n  name: 'Upsample',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const upsample: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...upsampleProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createUpsampleProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseUpsampleAttributesV7: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 7);\n\nexport const parseUpsampleAttributesV9: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 9);\n\nexport const parseUpsampleAttributes = (node: Graph.Node, opset: number): UpsampleAttributes => {\n  const isResize = (opset >= 10);\n\n  // processing node attributes\n  const mode = node.attributes.getString('mode', 'nearest');\n  if (mode !== 'nearest' && mode !== 'linear' && (opset < 11 || mode !== 'cubic')) {\n    throw new Error(`unrecognized mode: ${mode}`);\n  }\n\n  let scales: number[] = [];\n  if (opset < 9) {\n    scales = node.attributes.getFloats('scales');\n    scalesValidation(scales, mode, isResize);\n  }\n\n  const extrapolationValue = node.attributes.getFloat('extrapolation_value', 0.0);\n\n  const coordinateTransformMode =\n      opset > 10 ? node.attributes.getString('coordinate_transformation_mode', 'half_pixel') : 'asymmetric';\n  if ([\n        'asymmetric', 'pytorch_half_pixel', 'tf_half_pixel_for_nn', 'align_corners', 'tf_crop_and_resize', 'half_pixel'\n      ].indexOf(coordinateTransformMode) === -1) {\n    throw new Error(`coordinate_transform_mode '${coordinateTransformMode}' is not supported`);\n  }\n  const needRoiInput = (coordinateTransformMode === 'tf_crop_and_resize');\n  const useExtrapolation = needRoiInput;\n\n  const nearestMode =\n      (mode === 'nearest' && opset >= 11) ? node.attributes.getString('nearest_mode', 'round_prefer_floor') : '';\n  if (['round_prefer_floor', 'round_prefer_ceil', 'floor', 'ceil', ''].indexOf(nearestMode) === -1) {\n    throw new Error(`nearest_mode '${nearestMode}' is not supported`);\n  }\n\n  const cubicCoefficientA = node.attributes.getFloat('cubic_coeff_a', -0.75);\n  const excludeOutside = node.attributes.getInt('exclude_outside', 0) !== 0;\n  if (excludeOutside && mode !== 'cubic') {\n    throw new Error('exclude_outside can be set to 1 only when mode is CUBIC.');\n  }\n\n  const useNearest2xOptimization =\n      (opset < 11) ? true : (mode === 'nearest' && coordinateTransformMode === 'asymmetric' && nearestMode === 'floor');\n\n  let roiInputIdx = 0;\n  let scalesInputIdx = 0;\n  let sizesInputIdx = 0;\n\n  if (opset > 10) {\n    // handle when roiInput is not given\n    if (node.inputs.length > 2) {\n      roiInputIdx = 1;\n      scalesInputIdx = 2;\n      sizesInputIdx = 3;\n    } else {\n      scalesInputIdx = 1;\n      sizesInputIdx = 2;\n    }\n  } else if (opset === 9) {\n    scalesInputIdx = 1;\n  }\n\n  return createAttributeWithCacheKey({\n    opset,\n    isResize,\n    mode,\n    scales,\n    extrapolationValue,\n    coordinateTransformMode,\n    useExtrapolation,\n    needRoiInput,\n    nearestMode,\n    cubicCoefficientA,\n    excludeOutside,\n    useNearest2xOptimization,\n    roiInputIdx,\n    scalesInputIdx,\n    sizesInputIdx\n  });\n};\n\nconst createUpsampleProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [inputWidth, inputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(inputs[0].dims, TextureType.unpacked);\n\n      const outputShape = inputs[0].dims.map((dim, i) => Math.floor(dim * attributes.scales[i]));\n      const [outputWidth, outputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(outputShape, TextureType.unpacked);\n      const dim = outputShape.length;\n\n      const outputPitches = new Array<number>(dim);\n      const inputPitches = new Array<number>(dim);\n      let precalculatedPitches = `\n      int output_pitches[${dim}];\n      int input_pitches[${dim}];\n      `;\n      for (let d = dim - 1; d >= 0; d--) {\n        outputPitches[d] = (d === dim - 1) ? 1 : outputPitches[d + 1] * outputShape[d + 1];\n        inputPitches[d] = (d === dim - 1) ? 1 : inputPitches[d + 1] * inputs[0].dims[d + 1];\n\n        precalculatedPitches += `\n        output_pitches[${d}] = ${outputPitches[d]};\n        input_pitches[${d}] = ${inputPitches[d]};\n        `;\n      }\n      const getInputFloatFunction = `\n      float getInputFloat(int index) {\n        vec2 coords = offsetToCoords(index, ${inputWidth}, ${inputHeight});\n        float value = getColorAsFloat(${glsl.texture2D}(X, coords));\n        return value;\n      }\n      `;\n\n      const shaderSource = attributes.mode === 'nearest' ?\n          // nearest\n          `\n    ${getInputFloatFunction}\n    float process(int indices[${dim}]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int d, m;\n      for (int dim = 0; dim < ${dim}; ++dim) {\n        d = output_index / output_pitches[dim];\n        m = output_index - d * output_pitches[dim];\n        output_index = m;\n\n        if (scales[dim] != 1 && d > 0) {\n          int d2 = d / scales[dim];\n          m = d - d2 * scales[dim];\n          d = d2;\n        }\n        input_index += input_pitches[dim] * d;\n      }\n\n      return getInputFloat(input_index);\n    }` :\n          dim === 4 ?\n          // bilinear 4D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[4]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m / output_pitches[1];\n      m = m - index_of_dim1 * output_pitches[1];\n      index_of_dim2 = m / output_pitches[2];\n      m = m - index_of_dim2 * output_pitches[2];\n      index_of_dim3 = m;\n\n      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;\n      index_of_input_dim2 = index_of_dim2 / scales[2];\n      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];\n      index_of_input_dim3 = index_of_dim3 / scales[3];\n      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];\n\n      input_index = index_of_dim0 * input_pitches[0] +\n            index_of_dim1 * input_pitches[1] +\n            index_of_input_dim2 * input_pitches[2] +\n            index_of_input_dim3;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim2 = false;\n      if (index_of_input_dim2 == (${inputs[0].dims[2]} - 1)) {\n        // It's the end in dimension 2\n        x01 = x00;\n        end_of_dim2 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[2]);\n      }\n\n      if (index_of_input_dim3 == (input_pitches[2] - 1)) {\n        // It's the end in dimension 3\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);\n    }` :\n              // bilinear 2D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[2]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m;\n\n      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;\n      index_of_input_dim0 = index_of_dim0 / scales[0];\n      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];\n      index_of_input_dim1 = index_of_dim1 / scales[1];\n      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];\n\n      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim0 = false;\n      if (index_of_input_dim0 == (${inputs[0].dims[0]} - 1)) {\n        // It's the end in dimension 0\n        x01 = x00;\n        end_of_dim0 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[0]);\n      }\n\n      if (index_of_input_dim1 == (input_pitches[0] - 1)) {\n        // It's the end in dimension 1\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);\n    }`;\n      return {\n        ...upsampleProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        variables: [{\n          name: 'scales',\n          type: 'int',\n          arrayLength: attributes.scales.length,\n          data: attributes.scales.map(x => Math.ceil(x))\n        }]\n      };\n    };\n\nexport const validateInputs = (inputs: Tensor[], attribute: UpsampleAttributes): void => {\n  if (!inputs || (attribute.opset < 9 && inputs.length !== 1) ||\n      (attribute.opset >= 9 && attribute.opset < 11 && inputs.length !== 2) ||\n      (attribute.opset >= 11 && inputs.length < 2)) {\n    throw new Error('invalid inputs.');\n  }\n\n  if (attribute.scales.length > 0 && inputs[0].dims.length !== attribute.scales.length) {\n    throw new Error('Invalid input shape.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('Invalid input tensor types.');\n  }\n};\n\nexport const scalesValidation = (scales: number[], mode: string, isResize: boolean): void => {\n  if (!isResize) {\n    for (const scale of scales) {\n      if (scale < 1) {\n        throw new Error('Scale value should be greater than or equal to 1.');\n      }\n    }\n  } else {\n    for (const scale of scales) {\n      if (scale <= 0) {\n        throw new Error('Scale value should be greater than 0.');\n      }\n    }\n  }\n  if (mode === 'linear' || mode === 'cubic') {\n    if (scales.length !== 2 && (scales.length !== 4 || scales[0] !== 1 || scales[1] !== 1)) {\n      throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic') \\\n        or 4-D inputs with the corresponding outermost 2 scale values being 1 \\\n        in the ${isResize ? 'Resize' : 'Upsample'} opeartor.`);\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport {Logger, Profiler} from '../../instrument';\n\nimport {GlslPreprocessor} from './glsl-preprocessor';\nimport {getVertexShaderSource} from './glsl-source';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {Artifact, ProgramInfo, ProgramVariable, TextureData, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * ProgramManager is the main class behind running computations\n * It builds ProgramInfo's into Artifacts\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\n * Uses the artifact to run the computation by calling Draw on\n * the WebGL drawing buffer\n * ProgramManager automatically maps (binds) input variables to their\n * corresponding Location's in the binary program\n */\nexport class ProgramManager {\n  repo: Map<unknown, Artifact>;  // this should be per-session object\n  vertexShader: WebGLShader;\n  attributesBound: boolean;\n\n  constructor(\n      public profiler: Readonly<Profiler>, public glContext: WebGLContext,\n      public textureLayoutStrategy: TextureLayoutStrategy) {\n    this.repo = new Map();\n    this.attributesBound = false;\n  }\n  getArtifact(key: unknown): Artifact|undefined {\n    return this.repo.get(key);\n  }\n  setArtifact(key: unknown, artifact: Artifact): void {\n    this.repo.set(key, artifact);\n  }\n  run(buildArtifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    this.profiler.event('op', `ProgramManager.run ${buildArtifact.programInfo.name ?? 'unknown kernel'}`, () => {\n      const gl = this.glContext.gl;\n      const program = buildArtifact.program;\n      gl.useProgram(program);\n      try {\n        this.bindOutput(output);\n        if (!this.attributesBound) {\n          this.bindAttributes(buildArtifact.attribLocations);\n        }\n        this.bindUniforms(buildArtifact.uniformLocations, buildArtifact.programInfo.variables ?? [], inputs);\n      } catch (err) {\n        Logger.error('ProgramManager', buildArtifact.programInfo.shaderSource);\n        throw err;\n      }\n      this.profiler.event('backend', 'GlContext.draw()', () => {\n        this.glContext.draw();\n      });\n    }, this.glContext);\n  }\n  dispose(): void {\n    if (this.vertexShader) {\n      this.glContext.deleteShader(this.vertexShader);\n    }\n    this.repo.forEach(a => this.glContext.deleteProgram(a.program));\n  }\n  build(programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[], outputTextureLayout: TextureLayout): Artifact {\n    return this.profiler.event('backend', 'ProgramManager.build', () => {\n      const preprocessor = new GlslPreprocessor(this.glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n      const fragScript = preprocessor.preprocess();\n      const program = this.compile(fragScript);\n      const artifact = {\n        programInfo,\n        program,\n        uniformLocations: this.getUniformLocations(\n            program, preprocessor.context.programInfo.inputNames, preprocessor.context.programInfo.variables),\n        attribLocations: this.getAttribLocations(program)\n      };\n      return artifact;\n    });\n  }\n  protected compile(fragShaderScript: string): WebGLProgram {\n    if (!this.vertexShader) {\n      Logger.verbose('ProrgramManager', 'Compiling and caching Vertex shader for the first time');\n      const vertexShaderScript = getVertexShaderSource(this.glContext.version);\n      this.vertexShader = this.glContext.compileShader(vertexShaderScript, this.glContext.gl.VERTEX_SHADER);\n    }\n    if (env.debug) {\n      Logger.verbose('ProrgramManager', `FragShader:\n${fragShaderScript}\n`);\n    }\n    const fragShader = this.glContext.compileShader(fragShaderScript, this.glContext.gl.FRAGMENT_SHADER);\n    const program = this.glContext.createProgram(this.vertexShader, fragShader);\n    this.glContext.deleteShader(fragShader);\n    return program;\n  }\n  bindOutput(td: TextureData): void {\n    const width = td.width;\n    const height = td.height;\n    Logger.verbose(\n        'ProrgramManager',\n        `Binding output texture to Framebuffer: w/h=${width}/${height}, shape=${td.shape}, type=${td.tensor.type}`);\n    this.glContext.attachFramebuffer(td.texture, width, height);\n  }\n  bindAttributes(attribLocations: Artifact.AttribLocations): void {\n    const positionHandle = attribLocations.position;\n    const textureCoordHandle = attribLocations.textureCoord;\n    this.glContext.setVertexAttributes(positionHandle, textureCoordHandle);\n    this.attributesBound = true;\n  }\n  bindUniforms(uniformLocations: Artifact.UniformLocations, variables: ProgramVariable[], textures: TextureData[]):\n      void {\n    const gl = this.glContext.gl;\n    let texturePosition = 0;\n    for (const {name, type, location, arrayLength} of uniformLocations) {\n      const value = variables.find(v => v.name === name)?.data;\n      if (type !== 'sampler2D' && !value) {\n        throw new Error(`variable '${name}' does not have data defined in program info`);\n      }\n      switch (type) {\n        case 'sampler2D':\n          this.bindTexture(textures[texturePosition], location, texturePosition);\n          texturePosition++;\n          break;\n        case 'float':\n          if (arrayLength) {\n            gl.uniform1fv(location, value as number[]);\n          } else {\n            gl.uniform1f(location, value as number);\n          }\n          break;\n        case 'int':\n          if (arrayLength) {\n            gl.uniform1iv(location, value as number[]);\n          } else {\n            gl.uniform1i(location, value as number);\n          }\n          break;\n        default:\n          throw new Error(`Uniform not implemented: ${type}`);\n      }\n    }\n  }\n  bindTexture(td: TextureData, uniformHandle: WebGLUniformLocation, position: number): void {\n    this.glContext.bindTextureToUniform(td.texture, position, uniformHandle);\n  }\n  getAttribLocations(program: WebGLProgram): Artifact.AttribLocations {\n    return {\n      position: this.getAttribLocation(program, 'position'),\n      textureCoord: this.getAttribLocation(program, 'textureCoord')\n    };\n  }\n  getUniformLocations(program: WebGLProgram, samplers?: string[], variables?: VariableInfo[]):\n      Artifact.UniformLocations {\n    const uniformLocations: Artifact.UniformLocations = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLocations.push({name: sampler, type: 'sampler2D', location: this.getUniformLocation(program, sampler)});\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLocations.push({...variable, location: this.getUniformLocation(program, variable.name)});\n      }\n    }\n    return uniformLocations;\n  }\n  getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation {\n    const gl = this.glContext.gl;\n    const reference = gl.getUniformLocation(program, name);\n    if (reference === null) {\n      throw new Error(`Uniform ${name} not found.`);\n    }\n    return reference;\n  }\n  getAttribLocation(program: WebGLProgram, name: string): number {\n    const gl = this.glContext.gl;\n    const attributeLocation: number = gl.getAttribLocation(program, name);\n    return attributeLocation;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from '../../backend';\nimport {Graph} from '../../graph';\nimport {Logger} from '../../instrument';\nimport {Operator} from '../../operators';\nimport {OpSet, resolveOperator} from '../../opset';\nimport {Session} from '../../session';\nimport {Tensor} from '../../tensor';\nimport {WebGLBackend} from '../backend-webgl';\n\nimport {WebGLInferenceHandler} from './inference-handler';\nimport {WEBGL_OP_RESOLVE_RULES} from './op-resolve-rules';\nimport {ProgramManager} from './program-manager';\nimport {PreferLogicalStrategy, TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureManager} from './texture-manager';\nimport {TextureData} from './types';\n\nexport class WebGLSessionHandler implements SessionHandler {\n  programManager: ProgramManager;\n  textureManager: TextureManager;\n  layoutStrategy: TextureLayoutStrategy;\n  packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  pack2unpackMap: Map<Tensor.Id, Tensor.Id>;\n  unpack2packMap: Map<Tensor.Id, Tensor.Id>;\n  initializers: Set<Tensor.Id>;\n  pack?: boolean;\n\n  constructor(public readonly backend: WebGLBackend, public readonly context: Session.Context) {\n    this.layoutStrategy = new PreferLogicalStrategy(backend.glContext.maxTextureSize);\n    this.programManager = new ProgramManager(this.context.profiler, backend.glContext, this.layoutStrategy);\n    this.textureManager = new TextureManager(\n        backend.glContext, this.layoutStrategy, this.context.profiler,\n        {reuseTextures: backend.textureCacheMode === 'full'});\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n    this.pack = backend.pack;\n    this.pack2unpackMap = new Map();\n    this.unpack2packMap = new Map();\n  }\n\n  createInferenceHandler() {\n    return new WebGLInferenceHandler(this);\n  }\n  onGraphInitialized(graph: Graph): void {\n    const initializers = graph.getValues().filter(v => v.from === -1 && v.tensor).map(v => v.tensor!.dataId);\n    this.initializers = new Set(initializers);\n  }\n  isInitializer(tensorId: Tensor.Id): boolean {\n    return this.initializers ? this.initializers.has(tensorId) : false;\n  }\n  addInitializer(tensorId: Tensor.Id): void {\n    this.initializers.add(tensorId);\n  }\n  getTextureData(tensorId: Tensor.Id, isPacked: boolean): TextureData|undefined {\n    if (isPacked) {\n      return this.packedTextureDataCache.get(tensorId);\n    } else {\n      return this.unpackedTextureDataCache.get(tensorId);\n    }\n  }\n  setTextureData(tensorId: Tensor.Id, textureData: TextureData, isPacked = false): void {\n    Logger.verbose('WebGLSessionHandler', 'Storing Texture data in cache');\n    if (isPacked) {\n      this.packedTextureDataCache.set(tensorId, textureData);\n    } else {\n      this.unpackedTextureDataCache.set(tensorId, textureData);\n    }\n  }\n  dispose(): void {\n    this.programManager.dispose();\n    this.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.unpackedTextureDataCache = new Map();\n  }\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator {\n    const op = resolveOperator(node, opsets, WEBGL_OP_RESOLVE_RULES);\n    return {impl: op.opImpl, context: op.opInit ? op.opInit(node, graph) : node};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nexport declare namespace Encoder {\n  export interface DataTypeMap {\n    float: Float32Array;\n    byte: Uint8Array;\n    int: Uint32Array;\n  }\n  export type DataType = keyof DataTypeMap;\n  type DataArrayType = DataTypeMap[DataType];\n\n  /* eslint-disable @typescript-eslint/naming-convention */\n  export const enum Usage {\n    Default = 0,\n    UploadOnly,\n    Download4BytesAsFloat32,\n  }\n}\n\n/**\n * Abstraction for mapping data types to texture texlets\n * Encoding means how a Float32 is mapped to 1 or 4 channels for each texlet\n * Decoding means how a texlet's channels are mapped to a resulting Float32\n */\nexport interface DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType;\n  allocate(size: number): Encoder.DataArrayType;\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Encoder.DataArrayType;\n}\n/**\n * WebGL2 data encoder\n * Uses R32F as the format for texlet\n */\nexport class RedFloat32DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGL2RenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.R32F;\n      this.format = gl.RED;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA32F;\n      this.format = gl.RGBA;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType {\n    let result: Float32Array;\n    let source: Float32Array;\n    if (src.constructor !== Float32Array) {\n      Logger.warning('Encoder', 'data was not of type Float32; creating new Float32Array');\n      source = new Float32Array(src);\n    }\n    if (textureSize * this.channelSize > src.length) {\n      Logger.warning('Encoder', 'Source data too small. Allocating larger array');\n      source = src as Float32Array;\n      result = this.allocate(textureSize * this.channelSize) as Float32Array;\n      source.forEach((v, i) => result[i] = v);\n    } else {\n      source = src as Float32Array;\n      result = source;\n    }\n    return result;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n/**\n * Data encoder for WebGL 1 with support for floating point texture\n */\nexport class RGBAFloatDataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGLRenderingContext, channels = 1, textureType?: number) {\n    if (channels !== 1 && channels !== 4) {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n    this.internalFormat = gl.RGBA;\n    this.format = gl.RGBA;\n    this.channelSize = channels;\n    this.textureType = textureType || gl.FLOAT;\n  }\n  encode(src: Float32Array, textureSize: number): Encoder.DataArrayType {\n    let dest = src;\n    if (this.channelSize === 1) {\n      Logger.verbose('Encoder', 'Exploding into a larger array');\n      dest = this.allocate(textureSize) as Float32Array;\n      src.forEach((v, i) => dest[i * 4] = v);\n    }\n    return dest;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n\nexport class Uint8DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize = 4;\n  constructor(gl: WebGLRenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.ALPHA;\n      this.format = gl.ALPHA;  // not tested\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA;\n      this.format = gl.RGBA;\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Uint8Array, _textureSize: number): Encoder.DataArrayType {\n    return new Uint8Array(src.buffer, src.byteOffset, src.byteLength);\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Uint8Array(size * this.channelSize);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Uint8Array {\n    if (buffer instanceof Uint8Array) {\n      return buffer.subarray(0, dataSize);\n    }\n    throw new Error(`Invalid array type: ${buffer.constructor}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\nimport {assert} from '../../util';\n\n/** Layout preferences */\nexport interface WidthHeightPrefs {\n  breakAxis?: number;\n  isPacked?: boolean;\n  reverseWH?: boolean;\n}\n/**\n * TextureLayoutStrategy is an abstraction for different plans\n * for mapping n-dimensional arrays to 2D textures (and back)\n */\nexport interface TextureLayoutStrategy {\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number];\n}\n\n/**\n * This strategy try to find the minimal max(W,H) that fulfills (W * H == totalSize)\n */\nexport class AlwaysKeepOriginalSizeStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    // scalar tensor\n    if (shape.length === 0) {\n      return [1, 1];\n    }\n    const maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    const totalSize = shape.reduce((a, b) => a * b);\n\n    let width = Math.floor(Math.sqrt(totalSize));\n\n    for (; width < maxTextureSize && width < totalSize; width++) {\n      if (totalSize % width === 0) {\n        break;\n      }\n    }\n\n    if (width >= maxTextureSize || totalSize % width !== 0) {\n      throw new Error(`The given dimensions are outside this GPU's boundaries: ${shape}`);\n    }\n    return [width, totalSize / width];\n  }\n}\n\nexport class PreferLogicalStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const wh = this.computeTexture(shape, prefs);\n    if (prefs && prefs.isPacked) {\n      wh[0] /= 2;\n      wh[1] /= 2;\n    }\n    if (prefs && prefs.reverseWH) {\n      return [wh[1], wh[0]];\n    }\n    return wh;\n  }\n\n  computeTexture(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const isPacked = prefs && prefs.isPacked;\n    // scalar tensor\n    if (shape.length === 0) {\n      return isPacked ? [2, 2] : [1, 1];\n    }\n    let maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    let logShape = shape.slice(0);\n    if (isPacked) {\n      maxTextureSize = maxTextureSize * 2;\n\n      // This logic ensures we accurately count the number of packed texels needed\n      // to accommodate the tensor. We can only pack values in the same texel if\n      // they are from adjacent pairs of rows/cols within the same batch. So if a\n      // tensor has 3 rows, we pretend it has 4 rows in order to account for the\n      // fact that the texels containing the third row are half empty.\n      logShape = logShape.map(\n          (d, i) => i >= logShape.length - 2 ? (logShape[i] % 2 === 0 ? logShape[i] : logShape[i] + 1) : logShape[i]);\n\n      // Packed texture height is at least 2 (the channel height of a single\n      // texel).\n      if (logShape.length === 1) {\n        logShape = [2, logShape[0]];\n      }\n    }\n\n    // If logical shape is 2, we don't squeeze, since we want to match physical.\n    if (logShape.length !== 2) {\n      const squeezeResult = squeezeShape(logShape);\n      logShape = squeezeResult.newShape;\n    }\n\n    const size = sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTextureSize) {\n      return [1, size];\n    } else if (logShape.length === 2 && logShape[0] <= maxTextureSize && logShape[1] <= maxTextureSize) {\n      return logShape as [number, number];\n    } else if (logShape.length === 3 && logShape[0] * logShape[1] <= maxTextureSize && logShape[2] <= maxTextureSize) {\n      return [logShape[0] * logShape[1], logShape[2]];\n    } else if (logShape.length === 3 && logShape[0] <= maxTextureSize && logShape[1] * logShape[2] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2]];\n    } else if (\n        logShape.length === 4 && logShape[0] * logShape[1] * logShape[2] <= maxTextureSize &&\n        logShape[3] <= maxTextureSize) {\n      return [logShape[0] * logShape[1] * logShape[2], logShape[3]];\n    } else if (\n        logShape.length === 4 && logShape[0] <= maxTextureSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    } else {\n      if (isPacked) {\n        // For packed textures size equals the number of channels required to\n        // accommodate the texture data. However in order to squarify such that\n        // inner dimensions stay even, we rewrite size to equal the number of\n        // texels. Then in the return statement we rehydrate the squarified\n        // dimensions to channel units.\n        return sizeToSquarishShape(size / 4).map(d => d * 2) as [number, number];\n      }\n      return sizeToSquarishShape(size);\n    }\n  }\n}\n\nexport function squeezeShape(shape: number[], axis?: number[]): {newShape: number[]; keptDims: number[]} {\n  const newShape: number[] = [];\n  const keptDims: number[] = [];\n  const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n  const axes = (axis == null || isEmptyArray) ? null : parseAxisParam(axis, shape).sort();\n  let j = 0;\n  for (let i = 0; i < shape.length; ++i) {\n    if (axes != null) {\n      if (axes[j] === i && shape[i] !== 1) {\n        throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n      }\n      if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n        newShape.push(shape[i]);\n        keptDims.push(i);\n      }\n      if (axes[j] <= i) {\n        j++;\n      }\n    }\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n      keptDims.push(i);\n    }\n  }\n  return {newShape, keptDims};\n}\n\nexport function parseAxisParam(axis: number|number[], shape: number[]): number[] {\n  const rank = shape.length;\n\n  // Normalize input\n  axis = axis == null ? shape.map((s, i) => i) : ([] as number[]).concat(axis);\n\n  // Check for valid range\n  assert(\n      axis.every(ax => ax >= -rank && ax < rank),\n      () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n          `got axis ${axis}`);\n\n  // Check for only integers\n  assert(\n      axis.every(isInt),\n      () => 'All values in axis param must be integers but ' +\n          `got axis ${axis}`);\n\n  // Handle negative axis.\n  return axis.map(a => a < 0 ? rank + a : a);\n}\nexport function isInt(a: number): boolean {\n  return a % 1 === 0;\n}\nexport function sizeFromShape(shape: number[]): number {\n  if (shape.length === 0) {\n    // Scalar.\n    return 1;\n  }\n  let size = shape[0];\n  for (let i = 1; i < shape.length; i++) {\n    size *= shape[i];\n  }\n  return size;\n}\nexport function getRowsCols(shape: number[]): [number, number] {\n  if (shape.length === 0) {\n    throw Error('Cannot get rows and columns of an empty shape array.');\n  }\n\n  return [shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\nexport function sizeToSquarishShape(size: number): [number, number] {\n  const width = Math.ceil(Math.sqrt(size));\n  return [width, Math.ceil(size / width)];\n}\nexport function getBatchDim(shape: number[], dimsToSkip = 2): number {\n  return sizeFromShape(shape.slice(0, shape.length - dimsToSkip));\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ShapeUtil} from '../../util';\n\nimport {TextureLayoutStrategy, WidthHeightPrefs} from './texture-layout-strategy';\nimport {TextureLayout, TextureType} from './types';\n\nexport const createTextureLayoutFromTextureType =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[],\n     textureType: TextureType): TextureLayout => {\n      const channel = (textureType === TextureType.unpacked || textureType === TextureType.unpackedReversed) ? 1 : 4;\n      const isPacked = textureType === TextureType.packed;\n      const reverseWH = (textureType === TextureType.unpackedReversed || textureType === TextureType.packed);\n      const breakAxis = textureType === TextureType.packedLastDimension ? shape.length - 1 : undefined;\n      const unpackedShape = textureType === TextureType.packedLastDimension ?\n          shape.map((d, i) => i === shape.length - 1 ? d * 4 : d) :\n          undefined;\n      return createTextureLayoutFromShape(\n          textureLayoutStrategy, shape, channel, unpackedShape, {isPacked, reverseWH, breakAxis});\n    };\n\nexport const calculateTextureWidthAndHeight =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], textureType: TextureType):\n        [number, number] => {\n          const layout = createTextureLayoutFromTextureType(textureLayoutStrategy, shape, textureType);\n          return [layout.width, layout.height];\n        };\n\n/**\n * Create a TextureLayout object from shape.\n */\nexport const createTextureLayoutFromShape =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], channels: 1|4 = 1,\n     unpackedShape?: readonly number[], prefs?: WidthHeightPrefs): TextureLayout => {\n      const isPacked = !!(prefs && prefs.isPacked);\n      const [width, height] = textureLayoutStrategy.computeTextureWH(isPacked ? unpackedShape || shape : shape, prefs);\n      const rank = shape.length;\n      let inferredDims = shape.slice(0);\n      if (rank === 0) {\n        inferredDims = [1];\n      }\n      if (channels === 1) {\n        // unpackedShape will take `shape` and not `inferredDims` so as to create a scalar Tensor if need be\n        unpackedShape = shape;\n      } else if (isPacked) {\n        if (channels !== 4) {\n          throw new Error('a packed texture must be 4-channel');\n        }\n        unpackedShape = shape;\n        if (rank > 0) {\n          inferredDims[rank - 1] = Math.ceil(inferredDims[rank - 1] / 2);\n        }\n        if (rank > 1) {\n          inferredDims[rank - 2] = Math.ceil(inferredDims[rank - 2] / 2);\n        }\n      } else if (!unpackedShape) {\n        throw new Error('Unpacked shape is needed when using channels > 1');\n      }\n      return {\n        width,\n        height,\n        channels,\n        isPacked,\n        shape: inferredDims,\n        strides: ShapeUtil.computeStrides(inferredDims),\n        unpackedShape,\n        reversedWH: (prefs && prefs.reverseWH)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger, Profiler} from '../../instrument';\nimport {Tensor} from '../../tensor';\n\nimport {Encoder} from './texture-data-encoder';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureData, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\nexport interface TextureManagerConfig {\n  reuseTextures?: boolean;\n}\n\n/**\n * TextureManager is the mainly responsible for caching Textures\n * Textures are cached in 2 levels:\n *   1. the texures which are associated with a dataId (from Tensor)\n *    Caching these is crucial to performance. These are In-use Textures\n *   2. textures which are not in use by any current ProgramInfo/Tensor\n *     These are called Free Textures\n * TextureManager is also used to help creating textures. For this it\n * uses WebGLContext and TextureLayoutStrategy\n */\nexport class TextureManager {\n  private readonly inUseTextures: Map<string, WebGLTexture[]>;\n  private readonly idleTextures: Map<string, WebGLTexture[]>;\n  private readonly textureLookup: Map<WebGLTexture, string>;\n  private readonly pendingRead: Map<Tensor.Id, Array<(arr: Tensor.NumberType) => void>> = new Map();\n\n  constructor(\n      public glContext: WebGLContext, public layoutStrategy: TextureLayoutStrategy, public profiler: Readonly<Profiler>,\n      private config: TextureManagerConfig) {\n    if (config.reuseTextures) {\n      this.inUseTextures = new Map();\n      this.idleTextures = new Map();\n      this.textureLookup = new Map();\n    }\n  }\n  createTextureFromLayout(\n      dataType: Tensor.DataType, layout: TextureLayout, data?: Tensor.NumberType, usage?: Encoder.Usage) {\n    const textureDataType = this.toEncoderType(dataType);\n\n    const encoder = this.glContext.getEncoder(textureDataType, layout.channels || 1, usage);\n    if (layout.isPacked && usage === Encoder.Usage.UploadOnly) {\n      throw new Error('not implemented');\n    }\n    const width = layout.width;\n    const height = layout.height;\n\n    let key: string|undefined;\n    let inUseTextures: WebGLTexture[]|undefined;\n    if (this.config.reuseTextures) {\n      key = `${width}x${height}_${encoder.format}_${encoder.internalFormat}_${encoder.textureType}`;\n      inUseTextures = this.inUseTextures.get(key);\n      if (!inUseTextures) {\n        inUseTextures = [];\n        this.inUseTextures.set(key, inUseTextures);\n      }\n\n      const idleTextures = this.idleTextures.get(key);\n      if (idleTextures && idleTextures.length > 0) {\n        const texture = idleTextures.pop()!;\n        inUseTextures.push(texture);\n        if (usage === Encoder.Usage.UploadOnly) {\n          this.glContext.updateTexture(texture, width, height, encoder, this.toTextureData(dataType, data)!);\n        }\n        return texture;\n      }\n    }\n\n    Logger.verbose('TextureManager', `Creating new texture of size ${layout.width}x${layout.height}`);\n    const texture = this.glContext.allocateTexture(width, height, encoder, this.toTextureData(dataType, data));\n\n    if (this.config.reuseTextures) {\n      inUseTextures!.push(texture);\n      this.textureLookup.set(texture, key!);\n    }\n    return texture;\n  }\n  readTexture(td: TextureData, dataType: Tensor.DataType, channels?: number): Tensor.NumberType {\n    if (!channels) {\n      channels = 1;\n    }\n    return this.profiler.event('backend', 'TextureManager.readTexture', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      return this.toTensorData(dataType, data);\n    });\n  }\n  async readTextureAsync(td: TextureData, dataType: Tensor.DataType, channels?: number): Promise<Tensor.NumberType> {\n    const dataId = td.tensor.dataId;\n    if (!channels) {\n      channels = 1;\n    }\n    if (this.pendingRead.has(dataId)) {\n      const subscribers = this.pendingRead.get(dataId);\n      return new Promise<Tensor.NumberType>(resolve => subscribers?.push(resolve));\n    }\n    return this.profiler.event('backend', 'TextureManager.readTextureAsync', async () => {\n      this.pendingRead.set(dataId, []);\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      // add a fence waiting for the data to be ready\n      await this.glContext.createAndWaitForFence();\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      const tensorData = this.toTensorData(dataType, data);\n      const subscribers = this.pendingRead.get(dataId);\n      this.pendingRead.delete(dataId);\n      subscribers?.forEach(resolve => resolve(tensorData));\n      return tensorData;\n    });\n  }\n  readUint8TextureAsFloat(td: TextureData): Float32Array {\n    return this.profiler.event('backend', 'TextureManager.readUint8TextureAsFloat', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b);\n      const data = this.glContext.readTexture(td.texture, td.width, td.height, dataSize * 4, 'byte', 4);\n      return new Float32Array(data.buffer, data.byteOffset, dataSize);\n    });\n  }\n  releaseTexture(textureData: TextureData, deleteTexture?: boolean): void {\n    let key: string|undefined;\n    if (this.config.reuseTextures) {\n      key = this.textureLookup.get(textureData.texture);\n      if (key) {\n        if (deleteTexture) {\n          this.textureLookup.delete(key);\n        }\n        const inUseTextures = this.inUseTextures.get(key);\n        if (inUseTextures) {\n          const index = inUseTextures.indexOf(textureData.texture);\n          if (index !== -1) {\n            inUseTextures.splice(index, 1);\n            let idleTextures = this.idleTextures.get(key);\n            if (!idleTextures) {\n              idleTextures = [];\n              this.idleTextures.set(key, idleTextures);\n            }\n            idleTextures.push(textureData.texture);\n          }\n        }\n      }\n    }\n\n    if (!key || deleteTexture) {\n      Logger.verbose('TextureManager', `Deleting texture of size ${textureData.width}x${textureData.height}`);\n      this.glContext.deleteTexture(textureData.texture);\n    }\n  }\n  toTensorData(dataType: Tensor.DataType, data: Encoder.DataArrayType): Tensor.NumberType {\n    switch (dataType) {\n      case 'int16':\n        return data instanceof Int16Array ? data : Int16Array.from(data);\n      case 'int32':\n        return data instanceof Int32Array ? data : Int32Array.from(data);\n      case 'int8':\n        return data instanceof Int8Array ? data : Int8Array.from(data);\n      case 'uint16':\n        return data instanceof Uint16Array ? data : Uint16Array.from(data);\n      case 'uint32':\n        return data instanceof Uint32Array ? data : Uint32Array.from(data);\n      case 'uint8':\n      case 'bool':\n        return data instanceof Uint8Array ? data : Uint8Array.from(data);\n      case 'float32':\n        return data instanceof Float32Array ? data : Float32Array.from(data);\n      case 'float64':\n        return data instanceof Float64Array ? data : Float64Array.from(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n  }\n  toTextureData(dataType: Tensor.DataType, data: Tensor.NumberType|undefined): Encoder.DataArrayType|undefined {\n    if (!data) {\n      return undefined;\n    }\n    return (data instanceof Float32Array) ? data : new Float32Array(data);\n    /*\n    switch (dataType) {\n      case 'int16':\n      case 'int32':\n      case 'uint16':\n      case 'uint32':\n        return (data.constructor === Uint32Array) ? data as Uint32Array : new Uint32Array(data);\n      case 'int8':\n      case 'uint8':\n      case 'bool':\n        return (data.constructor === Uint8Array) ? data as Uint8Array : new Uint8Array(data);\n      case 'float32':\n      case 'float64':\n        return (data.constructor === Float32Array) ? data as Float32Array : new Float32Array(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n    */\n  }\n  toEncoderType(_dataType: Tensor.DataType): Encoder.DataType {\n    return 'float';\n    // switch (dataType) {\n    //   case 'int16':\n    //   case 'int32':\n    //   case 'uint16':\n    //   case 'uint32':\n    //     return 'int';\n    //   case 'uint8':\n    //   case 'bool':\n    //     return 'byte';\n    //   case 'float32':\n    //   case 'float64':\n    //     return 'float';\n    //   default:\n    //     throw new Error(`TensorData type ${dataType} is not supported`);\n    // }\n  }\n  clearActiveTextures(): void {\n    this.glContext.clearActiveTextures();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../tensor';\n\n/**\n * Layout info is used for mapping n-dimensional array to 2D textures\n * The layout is created by the TextureLayoutStrategy based on\n * the Tensor's dimensions and strides\n */\nexport interface TextureLayout {\n  width: number;\n  height: number;\n  /**\n   * specify the number of value that encoded in a single pixel\n   */\n  channels: 1|2|3|4;\n  /**\n   * whether in packed mode or not\n   */\n  isPacked?: boolean;\n  /**\n   * the normalized shape\n   */\n  shape: readonly number[];\n  /**\n   * the stride of each dimensions, calculated according to shape\n   */\n  strides: readonly number[];\n  /**\n   * the original shape(dims) of the corresponding tensor\n   */\n  unpackedShape: readonly number[];\n\n  reversedWH?: boolean;\n}\nexport interface TextureData extends TextureLayout {\n  tensor: Tensor;\n  texture: WebGLTexture;\n}\n\nexport enum TextureType {\n  unpacked,              // <-- normal unpacked texture\n  unpackedReversed,      // <-- unpacked texture used in old ONNX.js implementation (deprecated)\n  packed,                // <-- normal packed texture\n  downloadUint8AsFloat,  // <-- ONLY used in texture downloading for iOS devices\n  packedLastDimension    // <-- ONLY used in old ONNX.js Conv implementation for input W (deprecated)\n}\n\nexport interface TensorInfo {\n  id?: Tensor.Id;\n  dims: readonly number[];\n  type: Tensor.DataType;\n  textureType: TextureType;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * A set of metadata of a shader program.\n */\nexport interface ProgramMetadata {\n  /**\n   * the name of the program. used for debugging and profiling\n   */\n  name: string;\n  /**\n   * texture types for each input\n   */\n  inputTypes: TextureType[];\n  /**\n   * names of each input\n   */\n  inputNames: string[];\n  /**\n   * an optional string as a cache hint in the artifact cache\n   */\n  cacheHint?: string;\n}\n\n/**\n * A ProgramInfoLoader allows\n */\nexport interface ProgramInfoLoader extends ProgramMetadata {\n  /**\n   * a function to get the program info\n   */\n  get(): ProgramInfo;\n}\n\n/**\n * A set of data that represent a shader program\n */\nexport interface ProgramInfo extends ProgramMetadata {\n  /**\n   * information of uniform variables\n   */\n  variables?: ProgramVariable[];\n  /**\n   * tensor info for output\n   */\n  output: TensorInfo;\n  /**\n   * the shader's processing source code\n   */\n  shaderSource: string;\n  /**\n   * whether the shader source contains a customized main function implementation\n   */\n  hasMain?: boolean;\n}\n\nexport interface VariableInfo {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * Information of uniforms that shader uses\n */\nexport interface UniformInfo {\n  type: 'sampler2D'|VariableInfo['type'];\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface UniformLocation extends UniformInfo {\n  location: WebGLUniformLocation;\n}\n\n/**\n * Artifact is the result of compilation\n * It does not contain input of output data\n * However anything that could be run as a \"program\"\n */\nexport interface Artifact {\n  programInfo: ProgramInfo;\n  program: WebGLProgram;\n  uniformLocations: UniformLocation[];\n  attribLocations: {position: number; textureCoord: number};\n}\nexport declare namespace Artifact {\n  type UniformLocations = Artifact['uniformLocations'];\n  type AttribLocations = Artifact['attribLocations'];\n}\n\nexport interface UniformData {\n  [name: string]: number|number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {assert} from '../../util';\n/**\n * Given a non RGBA shape calculate the R version\n * It is assumed that the dimensions are multiples of given channels\n * NOTE: it is always the last dim that gets packed.\n * @param unpackedShape original shape to create a packed version from\n */\nexport function getPackedShape(unpackedShape: readonly number[]): readonly number[] {\n  const len = unpackedShape.length;\n  return unpackedShape.slice(0, len - 1).concat(unpackedShape[len - 1] / 4);\n}\n\nexport async function repeatedTry(\n    checkFn: () => boolean, delayFn = (_counter: number) => 0, maxCounter?: number): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    let tryCount = 0;\n\n    const tryFn = () => {\n      if (checkFn()) {\n        resolve();\n        return;\n      }\n\n      tryCount++;\n\n      const nextBackoff = delayFn(tryCount);\n\n      if (maxCounter != null && tryCount >= maxCounter) {\n        reject();\n        return;\n      }\n      setTimeout(tryFn, nextBackoff);\n    };\n\n    tryFn();\n  });\n}\n\n/**\n * Generates the function name from an input sampler name.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerName(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1);\n}\n\n/**\n * Generates the function name from an input sampler name at output coordinates.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1) + 'AtOutCoords';\n}\n\n/** Returns a new input shape (a copy) that has a squeezed logical shape. */\nexport function squeezeInputShape(inputShape: readonly number[], squeezedShape: number[]): number[] {\n  // Deep copy.\n  let newInputShape: number[] = JSON.parse(JSON.stringify(inputShape));\n  newInputShape = squeezedShape;\n  return newInputShape;\n}\n\n/** Returns a list of squeezed parameters for shader functions */\nexport function getSqueezedParams(params: string[], keptDims: number[]): string {\n  return keptDims.map(d => params[d]).join(', ');\n}\n\n/** Returns the data type for different ranks. */\nexport function getCoordsDataType(rank: number): string {\n  if (rank <= 1) {\n    return 'int';\n  } else if (rank === 2) {\n    return 'ivec2';\n  } else if (rank === 3) {\n    return 'ivec3';\n  } else if (rank === 4) {\n    return 'ivec4';\n  } else if (rank === 5) {\n    return 'ivec5';\n  } else if (rank === 6) {\n    return 'ivec6';\n  } else {\n    throw Error(`GPU for rank ${rank} is not yet supported`);\n  }\n}\n\nexport function getGlChannels(rank = 6): string[] {\n  return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nimport {WebGLContext} from './webgl-context';\n\nconst cache: {[contextId: string]: WebGLContext} = {};\n\n/**\n * This factory function creates proper WebGLRenderingContext based on\n * the current browsers capabilities\n * The order is from higher/most recent versions to most basic\n */\nexport function createWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  let context: WebGLContext|undefined;\n  if ((!contextId || contextId === 'webgl2') && 'webgl2' in cache) {\n    context = cache.webgl2;\n  } else if ((!contextId || contextId === 'webgl') && 'webgl' in cache) {\n    context = cache.webgl;\n  }\n\n  context = context || createNewWebGLContext(contextId);\n  contextId = contextId || context.version === 1 ? 'webgl' : 'webgl2';\n  const gl = context.gl;\n\n  cache[contextId] = context;\n\n  if (gl.isContextLost()) {\n    delete cache[contextId];\n    return createWebGLContext(contextId);\n  }\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST);\n  gl.disable(gl.BLEND);\n  gl.disable(gl.DITHER);\n  gl.disable(gl.POLYGON_OFFSET_FILL);\n  gl.disable(gl.SAMPLE_COVERAGE);\n  gl.enable(gl.SCISSOR_TEST);\n  gl.enable(gl.CULL_FACE);\n  gl.cullFace(gl.BACK);\n\n  return context;\n}\n\nexport function createNewWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  const canvas = createCanvas();\n  const contextAttributes: WebGLContextAttributes = {\n    alpha: false,\n    depth: false,\n    antialias: false,\n    stencil: false,\n    preserveDrawingBuffer: false,\n    premultipliedAlpha: false,\n    failIfMajorPerformanceCaveat: false\n  };\n  let gl: WebGLRenderingContext|null;\n  const ca = contextAttributes;\n  if (!contextId || contextId === 'webgl2') {\n    gl = canvas.getContext('webgl2', ca);\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 2);\n      } catch (err) {\n        Logger.warning('GlContextFactory', `failed to create WebGLContext using contextId 'webgl2'. Error: ${err}`);\n      }\n    }\n  }\n  if (!contextId || contextId === 'webgl') {\n    gl = canvas.getContext('webgl', ca) || canvas.getContext('experimental-webgl', ca) as WebGLRenderingContext;\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 1);\n      } catch (err) {\n        Logger.warning(\n            'GlContextFactory',\n            `failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${err}`);\n      }\n    }\n  }\n\n  throw new Error('WebGL is not supported');\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ndeclare let OffscreenCanvas: {new (width: number, height: number): HTMLCanvasElement};\n\nfunction createCanvas(): HTMLCanvasElement {\n  if (typeof document === 'undefined') {\n    if (typeof OffscreenCanvas === 'undefined') {\n      throw new TypeError('failed to create canvas: OffscreenCanvas is not supported');\n    }\n    return new OffscreenCanvas(1, 1);\n  }\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  return canvas;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport * as DataEncoders from './texture-data-encoder';\nimport {DataEncoder, Encoder} from './texture-data-encoder';\nimport {repeatedTry} from './utils';\n\nexport interface FenceContext {\n  query: WebGLSync|null;\n  isFencePassed(): boolean;\n}\n\ntype PollItem = {\n  isDoneFn: () => boolean; resolveFn: () => void;\n};\n\nexport function linearSearchLastTrue(arr: Array<() => boolean>): number {\n  let i = 0;\n  for (; i < arr.length; ++i) {\n    const isDone = arr[i]();\n    if (!isDone) {\n      break;\n    }\n  }\n  return i - 1;\n}\n\n/**\n * Abstraction and wrapper around WebGLRenderingContext and its operations\n */\nexport class WebGLContext {\n  gl: WebGLRenderingContext;\n  version: 1|2;\n\n  private vertexbuffer: WebGLBuffer;\n  private framebuffer: WebGLFramebuffer;\n\n  // WebGL flags and vital parameters\n  private isFloatTextureAttachableToFrameBuffer: boolean;\n  isFloat32DownloadSupported: boolean;\n  isRenderFloat32Supported: boolean;\n  isBlendSupported: boolean;\n  maxTextureSize: number;\n  // private maxCombinedTextureImageUnits: number;\n  private maxTextureImageUnits: number;\n  // private maxCubeMapTextureSize: number;\n  // private shadingLanguageVersion: string;\n  // private webglVendor: string;\n  // private webglVersion: string;\n\n  // WebGL2 flags and vital parameters\n  // private max3DTextureSize: number;\n  // private maxArrayTextureLayers: number;\n  // private maxColorAttachments: number;\n  // private maxDrawBuffers: number;\n\n  // WebGL extensions\n  // eslint-disable-next-line camelcase\n  textureFloatExtension: OES_texture_float|null;\n  // eslint-disable-next-line camelcase\n  textureHalfFloatExtension: OES_texture_half_float|null;\n\n  // WebGL2 extensions\n  colorBufferFloatExtension: unknown|null;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  disjointTimerQueryWebgl2Extension: {TIME_ELAPSED_EXT: GLenum; GPU_DISJOINT_EXT: GLenum}|null;\n\n  private disposed: boolean;\n  private frameBufferBound = false;\n\n  constructor(gl: WebGLRenderingContext, version: 1|2) {\n    this.gl = gl;\n    this.version = version;\n\n    this.getExtensions();\n    this.vertexbuffer = this.createVertexbuffer();\n    this.framebuffer = this.createFramebuffer();\n    this.queryVitalParameters();\n  }\n\n  allocateTexture(width: number, height: number, encoder: DataEncoder, data?: Encoder.DataArrayType): WebGLTexture {\n    const gl = this.gl;\n    // create the texture\n    const texture = gl.createTexture();\n    // bind the texture so the following methods effect this texture.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    const buffer = data ? encoder.encode(data, width * height) : null;\n    gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,  // Level of detail.\n        encoder.internalFormat, width, height,\n        0,  // Always 0 in OpenGL ES.\n        encoder.format, encoder.textureType, buffer);\n    this.checkError();\n    return texture as WebGLTexture;\n  }\n  updateTexture(\n      texture: WebGLTexture, width: number, height: number, encoder: DataEncoder, data: Encoder.DataArrayType): void {\n    const gl = this.gl;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    const buffer = encoder.encode(data, width * height);\n    gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,  // level\n        0,  // xoffset\n        0,  // yoffset\n        width, height, encoder.format, encoder.textureType, buffer);\n    this.checkError();\n  }\n  attachFramebuffer(texture: WebGLTexture, width: number, height: number): void {\n    const gl = this.gl;\n    // Make it the target for framebuffer operations - including rendering.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    this.checkError();\n    gl.viewport(0, 0, width, height);\n    gl.scissor(0, 0, width, height);\n  }\n  readTexture(\n      texture: WebGLTexture, width: number, height: number, dataSize: number, dataType: Encoder.DataType,\n      channels: number): Encoder.DataArrayType {\n    const gl = this.gl;\n    if (!channels) {\n      channels = 1;\n    }\n    if (!this.frameBufferBound) {\n      this.attachFramebuffer(texture, width, height);\n    }\n    const encoder = this.getEncoder(dataType, channels);\n    const buffer = encoder.allocate(width * height);\n    // bind texture to framebuffer\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    // TODO: Check if framebuffer is ready\n    gl.readPixels(0, 0, width, height, gl.RGBA, encoder.textureType, buffer);\n    this.checkError();\n    // unbind FB\n    return encoder.decode(buffer, dataSize);\n  }\n\n  isFramebufferReady(): boolean {\n    // TODO: Implement logic to check if the framebuffer is ready\n    return true;\n  }\n  getActiveTexture(): string {\n    const gl = this.gl;\n    const n = gl.getParameter(this.gl.ACTIVE_TEXTURE);\n    return `TEXTURE${(n - gl.TEXTURE0)}`;\n  }\n  getTextureBinding(): WebGLTexture {\n    return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\n  }\n  getFramebufferBinding(): WebGLFramebuffer {\n    return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);\n  }\n  setVertexAttributes(positionHandle: number, textureCoordHandle: number): void {\n    const gl = this.gl;\n    gl.vertexAttribPointer(positionHandle, 3, gl.FLOAT, false, 20, 0);\n    gl.enableVertexAttribArray(positionHandle);\n    if (textureCoordHandle !== -1) {\n      gl.vertexAttribPointer(textureCoordHandle, 2, gl.FLOAT, false, 20, 12);\n      gl.enableVertexAttribArray(textureCoordHandle);\n    }\n    this.checkError();\n  }\n  createProgram(\n      vertexShader: WebGLShader,\n      fragShader: WebGLShader,\n      ): WebGLProgram {\n    const gl = this.gl;\n    const program = gl.createProgram()!;\n\n    // the program consists of our shaders\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    return program;\n  }\n  compileShader(shaderSource: string, shaderType: number): WebGLShader {\n    const gl = this.gl;\n    const shader = gl.createShader(shaderType);\n    if (!shader) {\n      throw new Error(`createShader() returned null with type ${shaderType}`);\n    }\n\n    gl.shaderSource(shader, shaderSource);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n      throw new Error(`Failed to compile shader: ${gl.getShaderInfoLog(shader)}\nShader source:\n${shaderSource}`);\n    }\n    return shader;\n  }\n  deleteShader(shader: WebGLShader): void {\n    this.gl.deleteShader(shader);\n  }\n  bindTextureToUniform(texture: WebGLTexture, position: number, uniformHandle: WebGLUniformLocation): void {\n    const gl = this.gl;\n    gl.activeTexture(gl.TEXTURE0 + position);\n    this.checkError();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    this.checkError();\n    gl.uniform1i(uniformHandle, position);\n    this.checkError();\n  }\n  draw(): void {\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n    this.checkError();\n  }\n  checkError(): void {\n    if (env.debug) {\n      const gl = this.gl;\n      const error = gl.getError();\n      let label = '';\n      switch (error) {\n        case (gl.NO_ERROR):\n          return;\n        case (gl.INVALID_ENUM):\n          label = 'INVALID_ENUM';\n          break;\n        case (gl.INVALID_VALUE):\n          label = 'INVALID_VALUE';\n          break;\n        case (gl.INVALID_OPERATION):\n          label = 'INVALID_OPERATION';\n          break;\n        case (gl.INVALID_FRAMEBUFFER_OPERATION):\n          label = 'INVALID_FRAMEBUFFER_OPERATION';\n          break;\n        case (gl.OUT_OF_MEMORY):\n          label = 'OUT_OF_MEMORY';\n          break;\n        case (gl.CONTEXT_LOST_WEBGL):\n          label = 'CONTEXT_LOST_WEBGL';\n          break;\n        default:\n          label = `Unknown WebGL Error: ${error.toString(16)}`;\n      }\n      throw new Error(label);\n    }\n  }\n  deleteTexture(texture: WebGLTexture): void {\n    this.gl.deleteTexture(texture);\n  }\n  deleteProgram(program: WebGLProgram): void {\n    this.gl.deleteProgram(program);\n  }\n  getEncoder(dataType: Encoder.DataType, channels: number, usage: Encoder.Usage = Encoder.Usage.Default): DataEncoder {\n    if (this.version === 2) {\n      return new DataEncoders.RedFloat32DataEncoder(this.gl as WebGL2RenderingContext, channels);\n    }\n\n    switch (dataType) {\n      case 'float':\n        if (usage === Encoder.Usage.UploadOnly || this.isRenderFloat32Supported) {\n          return new DataEncoders.RGBAFloatDataEncoder(this.gl, channels);\n        } else {\n          return new DataEncoders.RGBAFloatDataEncoder(\n              this.gl, channels, this.textureHalfFloatExtension!.HALF_FLOAT_OES);\n        }\n      case 'int':\n        throw new Error('not implemented');\n      case 'byte':\n        return new DataEncoders.Uint8DataEncoder(this.gl, channels);\n      default:\n        throw new Error(`Invalid dataType: ${dataType}`);\n    }\n  }\n  clearActiveTextures(): void {\n    const gl = this.gl;\n    for (let unit = 0; unit < this.maxTextureImageUnits; ++unit) {\n      gl.activeTexture(gl.TEXTURE0 + unit);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n  }\n  dispose(): void {\n    if (this.disposed) {\n      return;\n    }\n    const gl = this.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteFramebuffer(this.framebuffer);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.deleteBuffer(this.vertexbuffer);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.finish();\n    this.disposed = true;\n  }\n\n  private createDefaultGeometry(): Float32Array {\n    // Sets of x,y,z(=0),s,t coordinates.\n    return new Float32Array([\n      -1.0, 1.0,  0.0, 0.0, 1.0,  // upper left\n      -1.0, -1.0, 0.0, 0.0, 0.0,  // lower left\n      1.0,  1.0,  0.0, 1.0, 1.0,  // upper right\n      1.0,  -1.0, 0.0, 1.0, 0.0   // lower right\n    ]);\n  }\n  private createVertexbuffer(): WebGLBuffer {\n    const gl = this.gl;\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n      throw new Error('createBuffer() returned null');\n    }\n    const geometry = this.createDefaultGeometry();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, geometry, gl.STATIC_DRAW);\n    this.checkError();\n    return buffer;\n  }\n  private createFramebuffer(): WebGLFramebuffer {\n    const fb = this.gl.createFramebuffer();\n    if (!fb) {\n      throw new Error('createFramebuffer returned null');\n    }\n    return fb;\n  }\n\n  private queryVitalParameters(): void {\n    const gl = this.gl;\n\n    this.isFloatTextureAttachableToFrameBuffer = this.checkFloatTextureAttachableToFrameBuffer();\n    this.isRenderFloat32Supported = this.checkRenderFloat32();\n    this.isFloat32DownloadSupported = this.checkFloat32Download();\n\n    if (this.version === 1 && !this.textureHalfFloatExtension && !this.isRenderFloat32Supported) {\n      throw new Error('both float32 and float16 TextureType are not supported');\n    }\n\n    this.isBlendSupported = !this.isRenderFloat32Supported || this.checkFloat32Blend();\n\n    // this.maxCombinedTextureImageUnits = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    this.maxTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    // this.maxCubeMapTextureSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n    // this.shadingLanguageVersion = gl.getParameter(gl.SHADING_LANGUAGE_VERSION);\n    // this.webglVendor = gl.getParameter(gl.VENDOR);\n    // this.webglVersion = gl.getParameter(gl.VERSION);\n\n    if (this.version === 2) {\n      // this.max3DTextureSize = gl.getParameter(WebGL2RenderingContext.MAX_3D_TEXTURE_SIZE);\n      // this.maxArrayTextureLayers = gl.getParameter(WebGL2RenderingContext.MAX_ARRAY_TEXTURE_LAYERS);\n      // this.maxColorAttachments = gl.getParameter(WebGL2RenderingContext.MAX_COLOR_ATTACHMENTS);\n      // this.maxDrawBuffers = gl.getParameter(WebGL2RenderingContext.MAX_DRAW_BUFFERS);\n    }\n  }\n  private getExtensions(): void {\n    if (this.version === 2) {\n      this.colorBufferFloatExtension = this.gl.getExtension('EXT_color_buffer_float');\n      this.disjointTimerQueryWebgl2Extension = this.gl.getExtension('EXT_disjoint_timer_query_webgl2');\n    } else {\n      this.textureFloatExtension = this.gl.getExtension('OES_texture_float');\n      this.textureHalfFloatExtension = this.gl.getExtension('OES_texture_half_float');\n    }\n  }\n\n  private checkFloatTextureAttachableToFrameBuffer(): boolean {\n    // test whether Float32 texture is supported:\n    // STEP.1 create a float texture\n    const gl = this.gl;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n    // STEP.2 bind a frame buffer\n    const frameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    // STEP.3 attach texture to framebuffer\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    // STEP.4 test whether framebuffer is complete\n    const isComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(frameBuffer);\n    return isComplete;\n  }\n\n  private checkRenderFloat32(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  private checkFloat32Download(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n      if (!this.gl.getExtension('WEBGL_color_buffer_float')) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  /**\n   * Check whether GL_BLEND is supported\n   */\n  private checkFloat32Blend(): boolean {\n    // it looks like currently (2019-05-08) there is no easy way to detect whether BLEND is supported\n    // https://github.com/microsoft/onnxjs/issues/145\n\n    const gl = this.gl;\n\n    let texture: WebGLTexture|null|undefined;\n    let frameBuffer: WebGLFramebuffer|null|undefined;\n    let vertexShader: WebGLShader|null|undefined;\n    let fragmentShader: WebGLShader|null|undefined;\n    let program: WebGLProgram|null|undefined;\n\n    try {\n      texture = gl.createTexture();\n      frameBuffer = gl.createFramebuffer();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n      gl.enable(gl.BLEND);\n\n      vertexShader = gl.createShader(gl.VERTEX_SHADER);\n      if (!vertexShader) {\n        return false;\n      }\n      gl.shaderSource(vertexShader, 'void main(){}');\n      gl.compileShader(vertexShader);\n\n      fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n      if (!fragmentShader) {\n        return false;\n      }\n      gl.shaderSource(fragmentShader, 'precision highp float;void main(){gl_FragColor=vec4(0.5);}');\n      gl.compileShader(fragmentShader);\n\n      program = gl.createProgram();\n      if (!program) {\n        return false;\n      }\n      gl.attachShader(program, vertexShader);\n      gl.attachShader(program, fragmentShader);\n      gl.linkProgram(program);\n      gl.useProgram(program);\n\n      gl.drawArrays(gl.POINTS, 0, 1);\n      return gl.getError() === gl.NO_ERROR;\n\n    } finally {\n      gl.disable(gl.BLEND);\n\n      if (program) {\n        gl.deleteProgram(program);\n      }\n      if (vertexShader) {\n        gl.deleteShader(vertexShader);\n      }\n      if (fragmentShader) {\n        gl.deleteShader(fragmentShader);\n      }\n      if (frameBuffer) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.deleteFramebuffer(frameBuffer);\n      }\n      if (texture) {\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.deleteTexture(texture);\n      }\n    }\n  }\n\n  beginTimer(): WebGLQuery {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      const query = gl2.createQuery() as WebGLQuery;\n      gl2.beginQuery(ext.TIME_ELAPSED_EXT, query);\n      return query;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported.');\n    }\n  }\n\n  endTimer() {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n      gl2.endQuery(ext.TIME_ELAPSED_EXT);\n      return;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n  }\n\n  isTimerResultAvailable(query: WebGLQuery): boolean {\n    let available = false, disjoint = false;\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\n      disjoint = gl2.getParameter(ext.GPU_DISJOINT_EXT);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n\n    return available && !disjoint;\n  }\n\n  getTimerResult(query: WebGLQuery): number {\n    let timeElapsed = 0;\n    if (this.version === 2) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      timeElapsed = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\n      gl2.deleteQuery(query);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n    // return miliseconds\n    return timeElapsed / 1000000;\n  }\n\n  async waitForQueryAndGetTime(query: WebGLQuery): Promise<number> {\n    await repeatedTry(() => this.isTimerResultAvailable(query));\n    return this.getTimerResult(query);\n  }\n\n  public async createAndWaitForFence(): Promise<void> {\n    const fenceContext = this.createFence(this.gl);\n    return this.pollFence(fenceContext);\n  }\n\n  private createFence(gl: WebGLRenderingContext): FenceContext {\n    let isFencePassed: () => boolean;\n    const gl2 = gl as WebGL2RenderingContext;\n    const query = gl2.fenceSync(gl2.SYNC_GPU_COMMANDS_COMPLETE, 0);\n    gl.flush();\n    if (query === null) {\n      isFencePassed = () => true;\n    } else {\n      isFencePassed = () => {\n        const status = gl2.clientWaitSync(query, 0, 0);\n        return status === gl2.ALREADY_SIGNALED || status === gl2.CONDITION_SATISFIED;\n      };\n    }\n    return {query, isFencePassed};\n  }\n\n  async pollFence(fenceContext: FenceContext) {\n    return new Promise<void>(resolve => {\n      void this.addItemToPoll(() => fenceContext.isFencePassed(), () => resolve());\n    });\n  }\n\n  private itemsToPoll: PollItem[] = [];\n\n  pollItems(): void {\n    // Find the last query that has finished.\n    const index = linearSearchLastTrue(this.itemsToPoll.map(x => x.isDoneFn));\n    for (let i = 0; i <= index; ++i) {\n      const {resolveFn} = this.itemsToPoll[i];\n      resolveFn();\n    }\n    this.itemsToPoll = this.itemsToPoll.slice(index + 1);\n  }\n\n  private async addItemToPoll(isDoneFn: () => boolean, resolveFn: () => void) {\n    this.itemsToPoll.push({isDoneFn, resolveFn});\n    if (this.itemsToPoll.length > 1) {\n      // We already have a running loop that polls.\n      return;\n    }\n    // Start a new loop that polls.\n    await repeatedTry(() => {\n      this.pollItems();\n      // End the loop if no more items to poll.\n      return this.itemsToPoll.length === 0;\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from './backend';\nimport {Graph} from './graph';\nimport {Logger, Profiler} from './instrument';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nclass KernelOp {\n  constructor(public op: Operator, public node: Graph.Node) {}\n}\n\nexport class ExecutionPlan {\n  constructor(private graph: Graph, ops: Operator[], private profiler: Readonly<Profiler>) {\n    this.initialize(ops);\n  }\n\n  initialize(ops: Operator[]) {\n    this.profiler.event('session', 'ExecutionPlan.initialize', () => {\n      const graphNodes = this.graph.getNodes();\n      if (graphNodes.length !== ops.length) {\n        throw new Error('The size of nodes and OPs do not match.');\n      }\n\n      this._ops = ops.map((op, i) => new KernelOp(op, graphNodes[i]));\n      this.reset();\n\n      // look for starter node(s)\n      this._starter = [];\n      this._ops.forEach((op, i) => {\n        let resolved = true;\n        for (const input of op.node.inputs) {\n          if (\n              !this._values[input]                                   // not an initialized input\n              && this.graph.getInputIndices().indexOf(input) === -1  // not model input\n          ) {\n            resolved = false;\n            break;\n          }\n        }\n        if (resolved) {\n          this._starter.push(i);\n        }\n      });\n    });\n  }\n\n  reset() {\n    this._values = this.graph.getValues().map(i => i.tensor);\n  }\n\n  async execute(sessionHandler: SessionHandler, modelInputs: Tensor[]): Promise<Tensor[]> {\n    return this.profiler.event('session', 'ExecutionPlan.execute', async () => {\n      // reset mediem result\n      this.reset();\n\n      // create inference handler\n      const inferenceHandler = sessionHandler.createInferenceHandler();\n\n      // populate inputs value\n      const graphInputs = this.graph.getInputIndices();\n      if (modelInputs.length !== graphInputs.length) {\n        throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${\n            modelInputs.length} expected: ${graphInputs.length}`);\n      }\n\n      modelInputs.forEach((input, i) => {\n        const index = graphInputs[i];\n        this._values[index] = input;\n      });\n\n      // prepare running sequence\n      const sequence: number[] = this._starter.slice(0);\n\n      // execution iterations\n      const graphValues = this.graph.getValues();\n      const graphNodes = this.graph.getNodes();\n\n      let rear = 0;\n      while (rear < sequence.length) {\n        const thisOpIndex = sequence[rear++];\n        const thisOp = this._ops[thisOpIndex];\n\n        // check input\n        const inputList = thisOp.node.inputs.map(i => this._values[i]);\n        if (inputList.indexOf(undefined) !== -1) {\n          throw new Error(`unresolved input detected: op: ${thisOp.node}`);\n        }\n\n        // run\n        const inputTensors = inputList as Tensor[];\n        Logger.verbose(\n            'ExecPlan',\n            `Runing op:${thisOp.node.name} (${\n                inputTensors.map((t, i) => `'${thisOp.node.inputs[i]}': ${t.type}[${t.dims.join(',')}]`).join(', ')})`);\n\n        const outputList = await this.profiler.event(\n            'node', thisOp.node.name, async () => thisOp.op.impl(inferenceHandler, inputTensors, thisOp.op.context));\n\n        // check output\n        if (outputList.length !== thisOp.node.outputs.length) {\n          throw new Error('the size of output does not match model definition.');\n        }\n\n        // fill value\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          if (this._values[j]) {\n            throw new Error(`output [${j}] already has value: op:${thisOp.node.name}`);\n          }\n          this._values[j] = output;\n        });\n\n        // resolve downstream nodes\n        const downstreamNodes = new Set<number>();\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          for (const currentDownstreamNodeIndex of graphValues[j].to) {\n            const currentDownstreamNode = graphNodes[currentDownstreamNodeIndex];\n            let resolved = true;\n            for (const k of currentDownstreamNode.inputs) {\n              if (!this._values[k]) {\n                resolved = false;\n                break;\n              }\n            }\n            if (resolved) {\n              downstreamNodes.add(currentDownstreamNodeIndex);\n            }\n          }\n        });\n        sequence.push(...downstreamNodes);\n      }\n\n      const output: Tensor[] = [];\n      for (let i = 0; i < this.graph.getOutputIndices().length; i++) {\n        const outputIndex = this.graph.getOutputIndices()[i];\n        const outputTensor = this._values[outputIndex];\n        if (outputTensor === undefined) {\n          throw new Error(`required output [${outputIndex}] does not have value`);\n        }\n        if (outputIndex === 0) {\n          await outputTensor.getData();\n        } else {\n          // eslint-disable-next-line no-unused-expressions\n          outputTensor.data;\n        }\n        output.push(outputTensor);\n      }\n      Logger.verbose('ExecPlan', 'disposing of inferenceHandler');\n      inferenceHandler.dispose();\n      return output;\n    });\n  }\n\n  _values: Array<Tensor|undefined>;\n  _ops: KernelOp[];\n  _starter: number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {onnx} from 'onnx-proto';\n\nimport {Attribute} from './attribute';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\nimport {LongUtil, MAX_CLIP, MIN_CLIP, ProtoUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport declare namespace Graph {\n  export interface Shape {\n    readonly dims: readonly number[];\n  }\n  export interface ValueType {\n    readonly tensorType: Tensor.DataType;\n    readonly shape: Shape;\n  }\n  export interface Value {\n    // the tensor data. empty for non-initialized inputs\n    readonly tensor?: Tensor;\n\n    // index to the Node where the value comes from. -1 for initializer.\n    readonly from: number;\n\n    // indices to the Nodes where the values go to.\n    readonly to: readonly number[];\n\n    // value type specification. empty for non-input values.\n    readonly type?: ValueType;\n  }\n  export interface Node {\n    // name of the node\n    readonly name: string;\n\n    // the operator type\n    readonly opType: string;\n\n    // indices to the Values where the inputs come from.\n    readonly inputs: readonly number[];\n\n    // indices to the Values where the outpus go to.\n    readonly outputs: readonly number[];\n\n    // the attributes that used by the operator\n    readonly attributes: Attribute;\n  }\n\n  /**\n   * a Transformer is an instance that allows all possible transformation operations that applied to a graph\n   */\n  export interface Transformer {\n    removeAllIdentityNodes(): void;\n    removeAllDropoutNodes(): void;\n    fuseConvActivationNodes(): void;\n    // TODO: add generic functions to manipulate the graph\n  }\n\n  // an initializer can use transformer to transform the graph\n  export interface Initializer {\n    transformGraph(transformer: Transformer): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Graph {\n  getInputIndices(): readonly number[];\n  getInputNames(): readonly string[];\n  getOutputIndices(): readonly number[];\n  getOutputNames(): readonly string[];\n  getValues(): readonly Graph.Value[];\n  getNodes(): readonly Graph.Node[];\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-redeclare\nexport const Graph = {\n  /**\n   * construct a graph from a graph protobuf type\n   */\n  from: (graphProto: onnx.IGraphProto|ortFbs.Graph, initializer?: Graph.Initializer) =>\n      new GraphImpl(graphProto, initializer),\n};\n\nclass Value implements Graph.Value {\n  constructor(valueInfo?: onnx.IValueInfoProto) {\n    this._from = undefined;\n    this._to = [];\n    this.tensor = undefined;\n    this.type = undefined;\n\n    if (valueInfo) {\n      this.type = ProtoUtil.tensorValueTypeFromProto(valueInfo.type!.tensorType!);\n    }\n  }\n\n  _from?: number;  // -1 represent from initializer\n  get from() {\n    return this._from!;\n  }\n  _to: number[];\n  get to() {\n    return this._to;\n  }\n  type?: Graph.ValueType;\n  tensor?: Tensor;\n}\n\nclass Node implements Graph.Node {\n  constructor(_nodeProto: onnx.INodeProto|ortFbs.Node, name?: string) {\n    if (_nodeProto instanceof onnx.NodeProto) {\n      this.name = _nodeProto.name;\n      this.opType = _nodeProto.opType;\n      this.attributes = new Attribute(_nodeProto.attribute);\n    } else if (_nodeProto instanceof ortFbs.Node) {\n      this.name = name ?? _nodeProto.name()!;\n      this.opType = _nodeProto.opType()!;\n      this.attributes = new Attribute(ProtoUtil.tensorAttributesFromORTFormat(_nodeProto));\n    }\n\n    this.inputs = [];\n    this.outputs = [];\n    this.executeNode = true;\n  }\n\n  name: string;\n  opType: string;\n  inputs: number[];\n  outputs: number[];\n  attributes: Attribute;\n  executeNode: boolean;\n}\n\nclass GraphImpl implements Graph, Graph.Transformer {\n  private _allData: Value[];\n\n  private _allInputIndices: number[];\n  private _allInputNames: string[];\n\n  private _allOutputIndices: number[];\n  private _allOutputNames: string[];\n\n  private _nodes: Node[];\n\n  constructor(graph: onnx.IGraphProto|ortFbs.Graph, graphInitializer?: Graph.Initializer) {\n    if (!graph) {\n      throw new TypeError('graph is empty');\n    }\n\n    // build the graph - will throw exceptions if something fatal is detected\n    this.buildGraph(graph);\n\n    // execute any transformation logic for the graph (if applicable)\n    this.transformGraph(graphInitializer);\n\n    // check for cycles and other inconsistencies - will throw exceptions if something fatal is detected\n    this.checkIsAcyclic();\n  }\n\n  getInputIndices(): readonly number[] {\n    return this._allInputIndices;\n  }\n\n  getInputNames(): readonly string[] {\n    return this._allInputNames;\n  }\n\n  getOutputIndices(): readonly number[] {\n    return this._allOutputIndices;\n  }\n\n  getOutputNames(): readonly string[] {\n    return this._allOutputNames;\n  }\n\n  getValues(): readonly Graph.Value[] {\n    return this._allData;\n  }\n\n  getNodes(): readonly Graph.Node[] {\n    return this._nodes;\n  }\n\n  private buildGraph(graph: onnx.IGraphProto|ortFbs.Graph) {\n    // build the graph - will throw exceptions if something fatal is detected\n    if (graph instanceof onnx.GraphProto) {\n      this.buildGraphFromOnnxFormat(graph);\n    } else if (graph instanceof ortFbs.Graph) {\n      this.buildGraphFromOrtFormat(graph);\n    } else {\n      throw new TypeError('Graph type is not supported.');\n    }\n  }\n  private buildGraphFromOnnxFormat(graph: onnx.IGraphProto) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    if (!graph.input) {\n      throw new Error('missing information in graph: input');\n    }\n    const inputValueNames = [];\n    for (const i of graph.input) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated input name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      inputValueNames.push(i.name!);\n    }\n\n    // scan all initializers\n    if (!graph.initializer) {\n      throw new Error('missing information in graph: initializer');\n    }\n    for (const i of graph.initializer) {\n      let index = dataIndices.get(i.name!);\n      if (index === undefined) {\n        const value = new Value();\n        value.type = {\n          shape: {dims: ProtoUtil.tensorDimsFromProto(i.dims!)},\n          tensorType: ProtoUtil.tensorDataTypeFromProto(i.dataType!)\n        };\n        index = this._allData.push(value) - 1;\n        dataIndices.set(i.name!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromProto(i);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    if (!graph.output) {\n      throw new Error('missing information in graph: output');\n    }\n    for (const i of graph.output) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated output name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(i.name!);\n    }\n\n    // scan all nodes\n    if (!graph.node) {\n      throw new Error('missing information in graph: node');\n    }\n    for (const nodeProto of graph.node) {\n      if (!nodeProto.name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          const name = `unnamed_${nodeProto.opType}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            nodeProto.name = name;\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(nodeProto.name)) {\n        throw new Error(`duplicated node name: ${nodeProto.name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto)) - 1;\n      nodesIndices.set(nodeProto.name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n      if (!nodeProto.output) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (const output of nodeProto.output) {\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType === 'Constant') {\n          if (!nodeProto.attribute || nodeProto.attribute.length !== 1 || !nodeProto.attribute[0].t) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (!nodeProto.output || nodeProto.output.length !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromProto(nodeProto.attribute[0].t);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n\n      if (!nodeProto.input) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (const input of nodeProto.input) {\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          // handle exception when opset > 9 and roi not given\n          if (input === '' && nodeProto.input.length === 3 && nodeProto.opType === 'Resize') {\n            continue;\n          }\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto.name}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n\n    return true;\n  }\n\n  private buildGraphFromOrtFormat(graph: ortFbs.Graph) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    const inputValueNames = [];\n    for (let i = 0; i < graph.inputsLength(); i++) {\n      const inputName = graph.inputs(i);\n      if (dataIndices.has(inputName)) {\n        throw new Error(`duplicated input name: ${inputName}`);\n      }\n      // Find the input typeInfo from nodeargs\n      for (let j = 0; j < graph.nodeArgsLength(); j++) {\n        if (graph.nodeArgs(j)?.name() === inputName) {\n          const value = new Value();\n          const valueType = graph.nodeArgs(j)?.type()?.valueType();\n          if (valueType !== ortFbs.TypeInfoValue.tensor_type) {\n            throw new Error('Unexpected value type for the nodeArg.');\n          }\n          const valueInfo = graph.nodeArgs(j)!.type()!.value(new ortFbs.TensorTypeAndShape())!;\n          const type = ProtoUtil.tensorDataTypeFromProto(valueInfo.elemType());\n          const shape = valueInfo.shape()!;\n          const dims = [];\n          for (let k = 0; k < shape.dimLength()!; k++) {\n            dims.push(LongUtil.longToNumber(shape.dim(k)!.value()!.dimValue()!));\n          }\n          value.type = {shape: {dims}, tensorType: type};\n          const currentIndex = this._allData.push(value) - 1;\n          dataIndices.set(inputName, currentIndex);\n          inputValueNames.push(inputName);\n        }\n      }\n    }\n    // check initializers\n    for (let i = 0; i < graph.initializersLength(); i++) {\n      const initializer = graph.initializers(i)!;\n      let index = dataIndices.get(initializer.name()!);\n      if (index === undefined) {\n        const value = new Value();\n        const dims = ProtoUtil.tensorDimsFromORTFormat(initializer);\n        const type = ProtoUtil.tensorDataTypeFromProto(initializer.dataType());\n        value.type = {shape: {dims}, tensorType: type};\n        index = this._allData.push(value) - 1;\n        dataIndices.set(initializer.name()!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromOrtTensor(initializer);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    for (let i = 0; i < graph.outputsLength(); i++) {\n      const outputName = graph.outputs(i);\n      if (dataIndices.has(outputName)) {\n        throw new Error(`duplicated output name: ${outputName}`);\n      }\n      const currentIndex = this._allData.push(new Value()) - 1;\n      dataIndices.set(outputName, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(outputName);\n    }\n\n    // scan all nodes\n    if (!graph.nodes) {\n      throw new Error('missing information in graph: node');\n    }\n    for (let i = 0; i < graph.nodesLength(); i++) {\n      const nodeProto = graph.nodes(i);\n      let name = nodeProto!.name();\n      if (!name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          name = `unnamed_${nodeProto!.opType()}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            // an unique name is found. break.\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(name)) {\n        throw new Error(`duplicated node name: ${name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto!, name)) - 1;\n      nodesIndices.set(name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i);\n      if (nodeProto == null) {\n        throw new Error(`No node exists at index ${i}`);\n      }\n      if (nodeProto?.outputsLength() === 0) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto?.outputsLength(); j++) {\n        const output = nodeProto?.outputs(j);\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType() === 'Constant') {\n          if (nodeProto.attributesLength() !== 1 || !nodeProto.attributes(0)!.t()) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (nodeProto.outputsLength() !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromOrtTensor(nodeProto.attributes(0)!.t()!);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i)!;\n\n      if (nodeProto.inputsLength() === 0) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto.inputsLength()!; j++) {\n        const input = nodeProto.inputs(j)!;\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto!.name()}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n  }\n\n  private checkIsAcyclic() {\n    // go through the graph and check for cycles or other fatal inconsistencies\n    const starters: Set<number> = new Set<number>();\n    this._allInputIndices.forEach(i => {\n      const data = this._allData[i];\n      data._to.forEach(j => {\n        starters.add(j);\n      });\n    });\n\n    // Iterative DFS to check for cycles\n    const nodesStack = Array.from(starters);\n    const nodesState = new Array<string>(this._nodes.length).fill('white');\n\n    while (nodesStack.length > 0) {\n      const nodeIndex = nodesStack.pop()!;\n      // this node has now been processed completely. Mark this node 'black' to denote this.\n      if (nodesState[nodeIndex] === 'gray') {\n        nodesState[nodeIndex] = 'black';\n      } else {\n        // this node is under processing stage. mark this node 'gray' to denote this.\n        nodesStack.push(nodeIndex);\n        nodesState[nodeIndex] = 'gray';\n\n        this._nodes[nodeIndex].outputs.forEach((outgoingEdgeIndex) => {\n          const data = this._allData[outgoingEdgeIndex];\n          if (typeof data.tensor !== 'undefined') {\n            throw new Error('node outputs should not be initialized');\n          }\n          if (data._from !== nodeIndex) {\n            throw new Error('from property of the Value object doesn\\'t match index of Node being processed');\n          }\n          data._to.forEach((downstreamNodeIndex) => {\n            // back edge found - cyclic\n            if (nodesState[downstreamNodeIndex] === 'gray') {\n              throw new Error('model graph is cyclic');\n            }\n            // tree edge found - continue processing by adding it to stack\n            else if (nodesState[downstreamNodeIndex] === 'white') {\n              nodesStack.push(downstreamNodeIndex);\n            }\n          });\n        });\n      }\n    }\n  }\n\n  private transformGraph(graphInitializer?: Graph.Initializer): void {\n    // apply common transform\n    this.removeAllIdentityNodes();\n    this.removeAllDropoutNodes();\n    this.fuseConvActivationNodes();\n    // apply initializer specific transform\n    if (graphInitializer) {\n      graphInitializer.transformGraph(this);\n    }\n\n    // finalize graph\n    this.finalizeGraph();\n  }\n\n  /**\n   * finalize the graph.\n   *\n   * this function should be called after all the transformation completed.\n   * this function removes all unnecessary nodes and values from the graph\n   */\n  finalizeGraph() {\n    let offset = 0;\n    // delete all nodes that are not being executed\n    // The graph is represented using these two arrays\n    // this._nodes - Array holding the kernels to execute - each entry is a kernel pointing to this._allData\n    // this._allData - hold 2 fields - to [] & from - these feileds hold the graph map for inputs and outputs per node\n    // newIndices - remapping the graph after reading the flag 'executeNode'\n    const newIndices = new Array<number>(this._nodes.length, 0);\n    let nodePossition = 0;\n\n    for (let i = 0; i < this._nodes.length; i++) {\n      // giving new indexes to the nodes based on execution flag\n      newIndices[i] = nodePossition;\n      if (this._nodes[i].executeNode) {\n        if (nodePossition !== i) {\n          this._nodes[nodePossition] = this._nodes[i];\n        }\n        nodePossition++;\n\n      } else {\n        // delete all output values\n        this._nodes[i].outputs.forEach(ind => {\n          this._allData[ind]._from = -2;\n        });\n      }\n    }\n\n    // removing the unused nodes\n    this._nodes.splice(nodePossition, this._nodes.length - nodePossition);\n\n    // Updating this._allData according to the new this._nodes\n    for (let i = 0; i < this._allData.length; i++) {\n      const currentData = this._allData[i];\n      if (currentData._from !== undefined && currentData._from !== -1 && currentData._from !== -2) {\n        currentData._from = newIndices[currentData._from];\n      }\n\n      for (let j = 0; j < currentData._to.length; j++) {\n        if (currentData._to[j] >= 0) {\n          currentData._to[j] = newIndices[currentData._to[j]];\n        } else {\n          throw new Error('Trying to update a removed node');\n        }\n      }\n    }\n\n    offset = 0;\n    // delete all values that are not being referenced\n    for (let i = 0; i < this._allData.length; i++) {\n      // if current value is neither linked to next node, nor an output value, remove it.\n      if (this._allData[i].from === -2 && this._allOutputIndices.indexOf(i + offset) === -1) {\n        offset++;\n        this._allData.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        let ind = -1;\n        // if current value is neither an input value nor an initializer, find the node it's\n        // coming from and update the corresponding node output\n        if (this._allData[i].from !== undefined && this._allData[i].from !== -1) {\n          ind = this._nodes[this._allData[i].from].outputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[this._allData[i].from].outputs[ind] = i;\n          }\n        } else {\n          // if current value is an input value, update its reference in inputIndices\n          ind = this._allInputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allInputIndices[ind] = i;\n          }\n        }\n\n        // find the node that the current value is linking to and update its input reference\n        this._allData[i].to.forEach(node => {\n          ind = this._nodes[node].inputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[node].inputs[ind] = i;\n          }\n        });\n        if (this._allData[i].to.length === 0) {\n          // if current value is a graph output, update its reference in outputIndices\n          ind = this._allOutputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allOutputIndices[ind] = i;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Delete the specifed node. Assume the node has one incoming input and the first output connected to other nodes.\n   * An input validation must be done before calling this function.\n   * @param nodeIndex The index of node to be deleted\n   */\n  private deleteNode(nodeIndex: number) {\n    const node = this._nodes[nodeIndex];\n    if (node.outputs.length > 1) {\n      for (let i = 1; i < node.outputs.length; i++) {\n        if (this._allData[node.outputs[i]].to.length > 0) {\n          throw new Error('Node deletion with more than one output connected to other nodes is not supported. ');\n        }\n      }\n    }\n\n    // this node wil not be executed\n    node.executeNode = false;\n    const inputValueIndex = node.inputs[0];\n    const outputValueIndex = node.outputs[0];\n    const nodesConsumingOutput = this._allData[outputValueIndex].to;\n\n    // remove this node from the to property of the input Value\n    for (let i = 0; i < node.inputs.length; i++) {\n      const delIndex = this._allData[node.inputs[i]].to.indexOf(nodeIndex);\n      // should not happen\n      if (delIndex === -1) {\n        throw new Error('The Value object doesn\\'t have the current Node in it\\'s \\'to\\' property ');\n      }\n      this._allData[node.inputs[i]].to.splice(delIndex, 1);\n    }\n\n    // clear node indices consuming this output Value\n    this._allData[outputValueIndex]._to = [];\n\n    // if the output of this node is a graph output, adjust the index appropriately\n    const index = this._allOutputIndices.indexOf(outputValueIndex);\n    if (index !== -1) {\n      this._allOutputIndices[index] = inputValueIndex;\n    }\n\n    // override the inputs for nodes consuming this node's output with the input to this node\n    if (nodesConsumingOutput && nodesConsumingOutput.length > 0) {\n      for (const nodeIndex of nodesConsumingOutput) {\n        const replaceIndex = this._nodes[nodeIndex].inputs.indexOf(outputValueIndex);\n        // should not happen\n        if (replaceIndex === -1) {\n          throw new Error('The Node object doesn\\'t have the output Value in it\\'s \\'inputs\\' property ');\n        }\n        this._nodes[nodeIndex].inputs[replaceIndex] = inputValueIndex;\n        this._allData[inputValueIndex].to.push(nodeIndex);\n      }\n    }\n  }\n\n  removeAllDropoutNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Dropout' nodes so that no time is wasted in execution\n      if (node.opType === 'Dropout') {\n        // the node should have exactly 1 input and 1 or 2 outputs\n        if (node.inputs.length !== 1) {\n          throw new Error('Dropout nodes should only contain one input. ');\n        }\n        if (node.outputs.length !== 1 && node.outputs.length !== 2) {\n          throw new Error('Dropout nodes should contain either 1 or 2 output(s)');\n        }\n        // the second output should not be referenced by any other node\n        if (node.outputs.length === 2 && this._allData[node.outputs[1]]._to.length !== 0) {\n          throw new Error('Dropout nodes\\'s second output should not be referenced by other nodes');\n        }\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  removeAllIdentityNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Identity' nodes so that no time is wasted in execution\n      if (node.opType === 'Identity') {\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  isActivation(n: Node): boolean {\n    switch (n.opType) {\n      // TODO: add other activation methods\n      case 'Relu':\n      case 'Sigmoid':\n      case 'Clip':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  fuseConvActivationNodes() {\n    for (const node of this._nodes) {\n      if (node.opType === 'Conv') {\n        const next = this._allData[node.outputs[0]]._to;\n        if (next.length === 1 && this.isActivation(this._nodes[next[0]])) {\n          const child = this._nodes[next[0]];\n          if (child.opType === 'Clip') {\n            if (child.inputs.length === 1) {\n              try {\n                node.attributes.set(\n                    'activation_params', 'floats',\n                    [child.attributes.getFloat('min'), child.attributes.getFloat('max')]);\n              } catch (e) {\n                node.attributes.set('activation_params', 'floats', [MIN_CLIP, MAX_CLIP]);\n              }\n            } else if (\n                child.inputs.length >= 3 && this._allData[child.inputs[1]].tensor !== undefined &&\n                this._allData[child.inputs[2]].tensor !== undefined) {\n              node.attributes.set('activation_params', 'floats', [\n                this._allData[child.inputs[1]].tensor!.floatData[0], this._allData[child.inputs[2]].tensor!.floatData[0]\n              ]);\n            } else {\n              // Skip fusion with clip node since clip min and clip max are not coming from initializer\n              continue;\n            }\n          }\n          node.attributes.set('activation', 'string', (child.opType));\n          this.deleteNode(next[0]);\n        }\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {WebGLContext} from './backends/webgl/webgl-context';\n\nexport declare namespace Logger {\n  export interface SeverityTypeMap {\n    verbose: 'v';\n    info: 'i';\n    warning: 'w';\n    error: 'e';\n    fatal: 'f';\n  }\n\n  export type Severity = keyof SeverityTypeMap;\n\n  export type Provider = 'none'|'console';\n\n  /**\n   * Logging config that used to control the behavior of logger\n   */\n  export interface Config {\n    /**\n     * Specify the logging provider. 'console' by default\n     */\n    provider?: Provider;\n    /**\n     * Specify the minimal logger serverity. 'warning' by default\n     */\n    minimalSeverity?: Logger.Severity;\n    /**\n     * Whether to output date time in log. true by default\n     */\n    logDateTime?: boolean;\n    /**\n     * Whether to output source information (Not yet supported). false by default\n     */\n    logSourceLocation?: boolean;\n  }\n\n  export interface CategorizedLogger {\n    verbose(content: string): void;\n    info(content: string): void;\n    warning(content: string): void;\n    error(content: string): void;\n    fatal(content: string): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Logger {\n  (category: string): Logger.CategorizedLogger;\n\n  verbose(content: string): void;\n  verbose(category: string, content: string): void;\n  info(content: string): void;\n  info(category: string, content: string): void;\n  warning(content: string): void;\n  warning(category: string, content: string): void;\n  error(content: string): void;\n  error(category: string, content: string): void;\n  fatal(content: string): void;\n  fatal(category: string, content: string): void;\n\n  /**\n   * Reset the logger configuration.\n   * @param config specify an optional default config\n   */\n  reset(config?: Logger.Config): void;\n  /**\n   * Set the logger's behavior on the given category\n   * @param category specify a category string. If '*' is specified, all previous configuration will be overwritten. If\n   * '' is specified, the default behavior will be updated.\n   * @param config the config object to indicate the logger's behavior\n   */\n  set(category: string, config: Logger.Config): void;\n\n  /**\n   * Set the logger's behavior from ort-common env\n   * @param env the env used to set logger. Currently only setting loglevel is supported through Env.\n   */\n  setWithEnv(env: Env): void;\n}\n\ninterface LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string): void;\n}\nclass NoOpLoggerProvider implements LoggerProvider {\n  log(_severity: Logger.Severity, _content: string, _category?: string) {\n    // do nothing\n  }\n}\nclass ConsoleLoggerProvider implements LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string) {\n    // eslint-disable-next-line no-console\n    console.log(`${this.color(severity)} ${category ? '\\x1b[35m' + category + '\\x1b[0m ' : ''}${content}`);\n  }\n\n  private color(severity: Logger.Severity) {\n    switch (severity) {\n      case 'verbose':\n        return '\\x1b[34;40mv\\x1b[0m';\n      case 'info':\n        return '\\x1b[32mi\\x1b[0m';\n      case 'warning':\n        return '\\x1b[30;43mw\\x1b[0m';\n      case 'error':\n        return '\\x1b[31;40me\\x1b[0m';\n      case 'fatal':\n        return '\\x1b[101mf\\x1b[0m';\n      default:\n        throw new Error(`unsupported severity: ${severity}`);\n    }\n  }\n}\n\nconst SEVERITY_VALUE = {\n  verbose: 1000,\n  info: 2000,\n  warning: 4000,\n  error: 5000,\n  fatal: 6000\n};\n\nconst LOGGER_PROVIDER_MAP: {readonly [provider: string]: Readonly<LoggerProvider>} = {\n  ['none']: new NoOpLoggerProvider(),\n  ['console']: new ConsoleLoggerProvider()\n};\nconst LOGGER_DEFAULT_CONFIG = {\n  provider: 'console',\n  minimalSeverity: 'warning',\n  logDateTime: true,\n  logSourceLocation: false\n};\nlet LOGGER_CONFIG_MAP:\n    {[category: string]: Readonly<Required<Logger.Config>>} = {['']: LOGGER_DEFAULT_CONFIG as Required<Logger.Config>};\n\nfunction log(category: string): Logger.CategorizedLogger;\nfunction log(severity: Logger.Severity, content: string): void;\nfunction log(severity: Logger.Severity, category: string, content: string): void;\nfunction log(severity: Logger.Severity, arg1: string, arg2?: string): void;\nfunction log(\n    arg0: string|Logger.Severity, arg1?: string, arg2?: string|number, arg3?: number): Logger.CategorizedLogger|void {\n  if (arg1 === undefined) {\n    // log(category: string): Logger.CategorizedLogger;\n    return createCategorizedLogger(arg0);\n  } else if (arg2 === undefined) {\n    // log(severity, content);\n    logInternal(arg0 as Logger.Severity, arg1, 1);\n  } else if (typeof arg2 === 'number' && arg3 === undefined) {\n    // log(severity, content, stack)\n    logInternal(arg0 as Logger.Severity, arg1, arg2);\n  } else if (typeof arg2 === 'string' && arg3 === undefined) {\n    // log(severity, category, content)\n    logInternal(arg0 as Logger.Severity, arg2, 1, arg1);\n  } else if (typeof arg2 === 'string' && typeof arg3 === 'number') {\n    // log(severity, category, content, stack)\n    logInternal(arg0 as Logger.Severity, arg2, arg3, arg1);\n  } else {\n    throw new TypeError('input is valid');\n  }\n}\n\nfunction createCategorizedLogger(category: string): Logger.CategorizedLogger {\n  return {\n    verbose: log.verbose.bind(null, category),\n    info: log.info.bind(null, category),\n    warning: log.warning.bind(null, category),\n    error: log.error.bind(null, category),\n    fatal: log.fatal.bind(null, category)\n  };\n}\n\n// NOTE: argument 'category' is put the last parameter beacause typescript\n// doesn't allow optional argument put in front of required argument. This\n// order is different from a usual logging API.\nfunction logInternal(severity: Logger.Severity, content: string, stack: number, category?: string) {\n  const config = LOGGER_CONFIG_MAP[category || ''] || LOGGER_CONFIG_MAP[''];\n  if (SEVERITY_VALUE[severity] < SEVERITY_VALUE[config.minimalSeverity]) {\n    return;\n  }\n\n  if (config.logDateTime) {\n    content = `${new Date().toISOString()}|${content}`;\n  }\n\n  if (config.logSourceLocation) {\n    // TODO: calculate source location from 'stack'\n  }\n\n  LOGGER_PROVIDER_MAP[config.provider].log(severity, content, category);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace log {\n  export function verbose(content: string): void;\n  export function verbose(category: string, content: string): void;\n  export function verbose(arg0: string, arg1?: string) {\n    log('verbose', arg0, arg1);\n  }\n  export function info(content: string): void;\n  export function info(category: string, content: string): void;\n  export function info(arg0: string, arg1?: string) {\n    log('info', arg0, arg1);\n  }\n  export function warning(content: string): void;\n  export function warning(category: string, content: string): void;\n  export function warning(arg0: string, arg1?: string) {\n    log('warning', arg0, arg1);\n  }\n  export function error(content: string): void;\n  export function error(category: string, content: string): void;\n  export function error(arg0: string, arg1?: string) {\n    log('error', arg0, arg1);\n  }\n  export function fatal(content: string): void;\n  export function fatal(category: string, content: string): void;\n  export function fatal(arg0: string, arg1?: string) {\n    log('fatal', arg0, arg1);\n  }\n\n  export function reset(config?: Logger.Config): void {\n    LOGGER_CONFIG_MAP = {};\n    set('', config || {});\n  }\n  export function set(category: string, config: Logger.Config): void {\n    if (category === '*') {\n      reset(config);\n    } else {\n      const previousConfig = LOGGER_CONFIG_MAP[category] || LOGGER_DEFAULT_CONFIG;\n      LOGGER_CONFIG_MAP[category] = {\n        provider: config.provider || previousConfig.provider,\n        minimalSeverity: config.minimalSeverity || previousConfig.minimalSeverity,\n        logDateTime: (config.logDateTime === undefined) ? previousConfig.logDateTime : config.logDateTime,\n        logSourceLocation: (config.logSourceLocation === undefined) ? previousConfig.logSourceLocation :\n                                                                      config.logSourceLocation\n      };\n    }\n\n    // TODO: we want to support wildcard or regex?\n  }\n\n  export function setWithEnv(env: Env): void {\n    const config: Logger.Config = {};\n    if (env.logLevel) {\n      config.minimalSeverity = env.logLevel as Logger.Severity;\n    }\n    set('', config);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare, @typescript-eslint/naming-convention\nexport const Logger: Logger = log;\n\nexport declare namespace Profiler {\n  export interface Config {\n    maxNumberEvents?: number;\n    flushBatchSize?: number;\n    flushIntervalInMilliseconds?: number;\n  }\n\n  export type EventCategory = 'session'|'node'|'op'|'backend';\n\n  export interface Event {\n    end(): void|Promise<void>;\n  }\n}\n// TODO\n// class WebGLEvent implements Profiler.Event {}\n\nclass Event implements Profiler.Event {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number,\n      private endCallback: (e: Event) => void|Promise<void>, public timer?: WebGLQuery, public ctx?: WebGLContext) {}\n\n  async end() {\n    return this.endCallback(this);\n  }\n\n  async checkTimer(): Promise<number> {\n    if (this.ctx === undefined || this.timer === undefined) {\n      throw new Error('No webgl timer found');\n    } else {\n      this.ctx.endTimer();\n      return this.ctx.waitForQueryAndGetTime(this.timer);\n    }\n  }\n}\n\nclass EventRecord {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number, public endTime: number) {}\n}\n\nexport class Profiler {\n  static create(config?: Profiler.Config): Profiler {\n    if (config === undefined) {\n      return new this();\n    }\n    return new this(config.maxNumberEvents, config.flushBatchSize, config.flushIntervalInMilliseconds);\n  }\n\n  private constructor(maxNumberEvents?: number, flushBatchSize?: number, flushIntervalInMilliseconds?: number) {\n    this._started = false;\n    this._maxNumberEvents = maxNumberEvents === undefined ? 10000 : maxNumberEvents;\n    this._flushBatchSize = flushBatchSize === undefined ? 10 : flushBatchSize;\n    this._flushIntervalInMilliseconds = flushIntervalInMilliseconds === undefined ? 5000 : flushIntervalInMilliseconds;\n  }\n\n  // start profiling\n  start() {\n    this._started = true;\n    this._timingEvents = [];\n    this._flushTime = now();\n    this._flushPointer = 0;\n  }\n\n  // stop profiling\n  stop() {\n    this._started = false;\n    for (; this._flushPointer < this._timingEvents.length; this._flushPointer++) {\n      this.logOneEvent(this._timingEvents[this._flushPointer]);\n    }\n  }\n\n  // create an event scope for the specific function\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T, ctx?: WebGLContext): T;\n  event<T>(category: Profiler.EventCategory, name: string, func: () => Promise<T>, ctx?: WebGLContext): Promise<T>;\n\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T | Promise<T>, ctx?: WebGLContext): T\n      |Promise<T> {\n    const event = this._started ? this.begin(category, name, ctx) : undefined;\n    let isPromise = false;\n\n    const res = func();\n\n    // we consider a then-able object is a promise\n    if (res && typeof (res as Promise<T>).then === 'function') {\n      isPromise = true;\n      return new Promise<T>((resolve, reject) => {\n        (res as Promise<T>)\n            .then(\n                async value => {  // fulfilled\n                  if (event) {\n                    await event.end();\n                  }\n                  resolve(value);\n                },\n                async reason => {  // rejected\n                  if (event) {\n                    await event.end();\n                  }\n                  reject(reason);\n                });\n      });\n    }\n    if (!isPromise && event) {\n      const eventRes = event.end();\n      if (eventRes && typeof eventRes.then === 'function') {\n        return new Promise<T>((resolve, reject) => {\n          (eventRes).then(\n              () => {  // fulfilled\n                resolve(res);\n              },\n              (reason) => {  // rejected\n                reject(reason);\n              });\n        });\n      }\n    }\n    return res;\n  }\n\n  // begin an event\n  begin(category: Profiler.EventCategory, name: string, ctx?: WebGLContext): Event {\n    if (!this._started) {\n      throw new Error('profiler is not started yet');\n    }\n    if (ctx === undefined) {\n      const startTime = now();\n      this.flush(startTime);\n      return new Event(category, name, startTime, e => this.endSync(e));\n    } else {\n      const timer: WebGLQuery = ctx.beginTimer();\n      return new Event(category, name, 0, async e => this.end(e), timer, ctx);\n    }\n  }\n\n  // end the specific event\n  private async end(event: Event): Promise<void> {\n    const endTime: number = await event.checkTimer();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private endSync(event: Event): void {\n    const endTime: number = now();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private logOneEvent(event: EventRecord) {\n    Logger.verbose(\n        `Profiler.${event.category}`,\n        `${(event.endTime - event.startTime).toFixed(2)}ms on event '${event.name}' at ${event.endTime.toFixed(2)}`);\n  }\n\n  private flush(currentTime: number) {\n    if (this._timingEvents.length - this._flushPointer >= this._flushBatchSize ||\n        currentTime - this._flushTime >= this._flushIntervalInMilliseconds) {\n      // should flush when either batch size accumlated or interval elepsed\n\n      for (const previousPointer = this._flushPointer; this._flushPointer < previousPointer + this._flushBatchSize &&\n           this._flushPointer < this._timingEvents.length;\n           this._flushPointer++) {\n        this.logOneEvent(this._timingEvents[this._flushPointer]);\n      }\n\n      this._flushTime = now();\n    }\n  }\n\n  get started() {\n    return this._started;\n  }\n  private _started = false;\n  private _timingEvents: EventRecord[];\n\n  private readonly _maxNumberEvents: number;\n\n  private readonly _flushBatchSize: number;\n  private readonly _flushIntervalInMilliseconds: number;\n\n  private _flushTime: number;\n  private _flushPointer = 0;\n}\n\n/**\n * returns a number to represent the current timestamp in a resolution as high as possible.\n */\nexport const now = (typeof performance !== 'undefined' && performance.now) ? () => performance.now() : Date.now;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {OpSet} from './opset';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {LongUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport class Model {\n  // empty model\n  constructor() {}\n\n  load(buf: Uint8Array, graphInitializer?: Graph.Initializer, isOrtFormat?: boolean): void {\n    if (!isOrtFormat) {\n      // isOrtFormat === false || isOrtFormat === undefined\n      try {\n        this.loadFromOnnxFormat(buf, graphInitializer);\n        return;\n      } catch (e) {\n        if (isOrtFormat !== undefined) {\n          throw e;\n        }\n      }\n    }\n\n    this.loadFromOrtFormat(buf, graphInitializer);\n  }\n\n  private loadFromOnnxFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const modelProto = onnx.ModelProto.decode(buf);\n    const irVersion = LongUtil.longToNumber(modelProto.irVersion);\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n\n    this._opsets =\n        modelProto.opsetImport.map(i => ({domain: i.domain as string, version: LongUtil.longToNumber(i.version!)}));\n\n    this._graph = Graph.from(modelProto.graph!, graphInitializer);\n  }\n\n  private loadFromOrtFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const fb = new flatbuffers.ByteBuffer(buf);\n    const ortModel = ortFbs.InferenceSession.getRootAsInferenceSession(fb).model()!;\n    const irVersion = LongUtil.longToNumber(ortModel.irVersion());\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n    this._opsets = [];\n    for (let i = 0; i < ortModel.opsetImportLength(); i++) {\n      const opsetId = ortModel.opsetImport(i)!;\n      this._opsets.push({domain: opsetId?.domain() as string, version: LongUtil.longToNumber(opsetId.version()!)});\n    }\n\n    this._graph = Graph.from(ortModel.graph()!, graphInitializer);\n  }\n\n  private _graph: Graph;\n  get graph(): Graph {\n    return this._graph;\n  }\n\n  private _opsets: OpSet[];\n  get opsets(): readonly OpSet[] {\n    return this._opsets;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from './backend';\nimport {Graph} from './graph';\nimport {Tensor} from './tensor';\n\nexport type OperatorImplementation<T> = (inferenceHandler: InferenceHandler, inputs: Tensor[], context: T) => Tensor[];\nexport type OperatorInitialization<T> = (node: Graph.Node, graph: Graph) => T;\n\nexport interface Operator {\n  readonly impl: OperatorImplementation<unknown>;\n  readonly context: Graph.Node|unknown;\n}\n\nexport const NUMBER_TYPES: readonly Tensor.DataType[] =\n    ['float32', 'float64', 'int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const INT_TYPES: readonly Tensor.DataType[] = ['int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const FLOAT_TYPES: readonly Tensor.DataType[] = ['float32', 'float64'];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from './graph';\nimport {OperatorImplementation, OperatorInitialization} from './operators';\n\nexport interface OpSet {\n  domain: string;\n  version: number;\n}\nexport declare namespace OpSet {\n  /**\n   * Domain of an opset, it can be an empty string(default value, represent for ai.onnx), or 'ai.onnx.ml'\n   */\n  type Domain = ''|'ai.onnx.ml'|'com.microsoft';\n  /**\n   * A resolve rule consists of 4 or 5 items: opType, opSetDomain, versionSelector, operatorImplementation and\n   * operatorInitialization (optional)\n   */\n  type ResolveRule = [\n    string, Domain, string, OperatorImplementation<Graph.Node>\n  ]|[string, Domain, string, OperatorImplementation<unknown>, OperatorInitialization<unknown>];\n}\n\nexport function resolveOperator(node: Graph.Node, opsets: readonly OpSet[], rules: readonly OpSet.ResolveRule[]) {\n  for (const rule of rules) {\n    const opType = rule[0];\n    const domain = rule[1];\n    const versionSelector = rule[2];\n    const opImpl = rule[3];\n    const opInit = rule[4];\n\n    if (node.opType === opType) {  // operator type matches\n      for (const opset of opsets) {\n        // opset '' and 'ai.onnx' are considered the same.\n        if (opset.domain === domain || (opset.domain === 'ai.onnx' && domain === '')) {  // opset domain found\n          if (matchSelector(opset.version, versionSelector)) {\n            return {opImpl, opInit};\n          }\n        }\n      }\n    }\n  }\n\n  throw new TypeError(`cannot resolve operator '${node.opType}' with opsets: ${\n      opsets.map(set => `${set.domain || 'ai.onnx'} v${set.version}`).join(', ')}`);\n}\n\nfunction matchSelector(version: number, selector: string): boolean {\n  if (selector.endsWith('+')) {\n    // minimum version match ('7+' expects version>=7)\n    const rangeStart = Number.parseInt(selector.substring(0, selector.length - 1), 10);\n    return !isNaN(rangeStart) && rangeStart <= version;\n  } else if (selector.split('-').length === 2) {\n    // range match ('6-8' expects 6<=version<=8)\n    const pair = selector.split('-');\n    const rangeStart = Number.parseInt(pair[0], 10);\n    const rangeEnd = Number.parseInt(pair[1], 10);\n    return !isNaN(rangeStart) && !isNaN(rangeEnd) && rangeStart <= version && version <= rangeEnd;\n  } else {\n    // exact match ('7' expects version===7)\n    return Number.parseInt(selector, 10) === version;\n  }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n/* eslint-disable */\n\nimport {flatbuffers} from 'flatbuffers';\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum AttributeType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    INT = 2,\n    STRING = 3,\n    TENSOR = 4,\n    GRAPH = 5,\n    FLOATS = 6,\n    INTS = 7,\n    STRINGS = 8,\n    TENSORS = 9,\n    GRAPHS = 10,\n    SPARSE_TENSOR = 11,\n    SPARSE_TENSORS = 12\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum DimensionValueType {UNKNOWN = 0, VALUE = 1, PARAM = 2}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TensorDataType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    UINT8 = 2,\n    INT8 = 3,\n    UINT16 = 4,\n    INT16 = 5,\n    INT32 = 6,\n    INT64 = 7,\n    STRING = 8,\n    BOOL = 9,\n    FLOAT16 = 10,\n    DOUBLE = 11,\n    UINT32 = 12,\n    UINT64 = 13,\n    COMPLEX64 = 14,\n    COMPLEX128 = 15,\n    BFLOAT16 = 16\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum NodeType {Primitive = 0, Fused = 1}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TypeInfoValue {NONE = 0, tensor_type = 1, sequence_type = 2, map_type = 3}\n}\n\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Shape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Shape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Shape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getSizePrefixedRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Dimension= obj\n     * @returns onnxruntime.experimental.fbs.Dimension\n     */\n    dim(index: number, obj?: onnxruntime.experimental.fbs.Dimension): onnxruntime.experimental.fbs.Dimension|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Dimension())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    dimLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startShape(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimOffset\n     */\n    static addDim(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, dimOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createShape(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Shape.startShape(builder);\n      Shape.addDim(builder, dimOffset);\n      return Shape.endShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Dimension {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Dimension\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Dimension {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getSizePrefixedRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.DimensionValue= obj\n     * @returns onnxruntime.experimental.fbs.DimensionValue|null\n     */\n    value(obj?: onnxruntime.experimental.fbs.DimensionValue): onnxruntime.experimental.fbs.DimensionValue|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.DimensionValue())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimension(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimension(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimension(\n        builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset,\n        denotationOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Dimension.startDimension(builder);\n      Dimension.addValue(builder, valueOffset);\n      Dimension.addDenotation(builder, denotationOffset);\n      return Dimension.endDimension(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class DimensionValue {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns DimensionValue\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): DimensionValue {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getSizePrefixedRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.DimensionValueType\n     */\n    dimType(): onnxruntime.experimental.fbs.DimensionValueType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    dimValue(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    dimParam(): string|null;\n    dimParam(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    dimParam(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimensionValue(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.DimensionValueType dimType\n     */\n    static addDimType(builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType) {\n      builder.addFieldInt8(0, dimType, onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long dimValue\n     */\n    static addDimValue(builder: flatbuffers.Builder, dimValue: flatbuffers.Long) {\n      builder.addFieldInt64(1, dimValue, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimParamOffset\n     */\n    static addDimParam(builder: flatbuffers.Builder, dimParamOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimParamOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimensionValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimensionValue(\n        builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType,\n        dimValue: flatbuffers.Long, dimParamOffset: flatbuffers.Offset): flatbuffers.Offset {\n      DimensionValue.startDimensionValue(builder);\n      DimensionValue.addDimType(builder, dimType);\n      DimensionValue.addDimValue(builder, dimValue);\n      DimensionValue.addDimParam(builder, dimParamOffset);\n      return DimensionValue.endDimensionValue(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TensorTypeAndShape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TensorTypeAndShape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TensorTypeAndShape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape): TensorTypeAndShape {\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getSizePrefixedRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape):\n        TensorTypeAndShape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    elemType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Shape= obj\n     * @returns onnxruntime.experimental.fbs.Shape|null\n     */\n    shape(obj?: onnxruntime.experimental.fbs.Shape): onnxruntime.experimental.fbs.Shape|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Shape())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensorTypeAndShape(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType elemType\n     */\n    static addElemType(builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, elemType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset shapeOffset\n     */\n    static addShape(builder: flatbuffers.Builder, shapeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, shapeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensorTypeAndShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensorTypeAndShape(\n        builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType,\n        shapeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TensorTypeAndShape.startTensorTypeAndShape(builder);\n      TensorTypeAndShape.addElemType(builder, elemType);\n      TensorTypeAndShape.addShape(builder, shapeOffset);\n      return TensorTypeAndShape.endTensorTypeAndShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class MapType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns MapType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): MapType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getSizePrefixedRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    keyType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    valueType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startMapType(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType keyType\n     */\n    static addKeyType(builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, keyType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueTypeOffset\n     */\n    static addValueType(builder: flatbuffers.Builder, valueTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, valueTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endMapType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createMapType(\n        builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType,\n        valueTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      MapType.startMapType(builder);\n      MapType.addKeyType(builder, keyType);\n      MapType.addValueType(builder, valueTypeOffset);\n      return MapType.endMapType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SequenceType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SequenceType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SequenceType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getSizePrefixedRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    elemType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSequenceType(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset elemTypeOffset\n     */\n    static addElemType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, elemTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSequenceType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSequenceType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SequenceType.startSequenceType(builder);\n      SequenceType.addElemType(builder, elemTypeOffset);\n      return SequenceType.endSequenceType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class EdgeEnd {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns EdgeEnd\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): EdgeEnd {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      return this.bb!.readUint32(this.bb_pos);\n    }\n\n    /**\n     * @returns number\n     */\n    srcArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 4);\n    }\n\n    /**\n     * @returns number\n     */\n    dstArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number node_index\n     * @param number src_arg_index\n     * @param number dst_arg_index\n     * @returns flatbuffers.Offset\n     */\n    static createEdgeEnd(\n        builder: flatbuffers.Builder, node_index: number, src_arg_index: number,\n        dst_arg_index: number): flatbuffers.Offset {\n      builder.prep(4, 12);\n      builder.writeInt32(dst_arg_index);\n      builder.writeInt32(src_arg_index);\n      builder.writeInt32(node_index);\n      return builder.offset();\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class NodeEdge {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns NodeEdge\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): NodeEdge {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getSizePrefixedRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    inputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    outputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNodeEdge(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number nodeIndex\n     */\n    static addNodeIndex(builder: flatbuffers.Builder, nodeIndex: number) {\n      builder.addFieldInt32(0, nodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputEdgesOffset\n     */\n    static addInputEdges(builder: flatbuffers.Builder, inputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, inputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputEdgesOffset\n     */\n    static addOutputEdges(builder: flatbuffers.Builder, outputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, outputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNodeEdge(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNodeEdge(\n        builder: flatbuffers.Builder, nodeIndex: number, inputEdgesOffset: flatbuffers.Offset,\n        outputEdgesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      NodeEdge.startNodeEdge(builder);\n      NodeEdge.addNodeIndex(builder, nodeIndex);\n      NodeEdge.addInputEdges(builder, inputEdgesOffset);\n      NodeEdge.addOutputEdges(builder, outputEdgesOffset);\n      return NodeEdge.endNodeEdge(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Node {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Node\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Node {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getSizePrefixedRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    sinceVersion(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    index(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    opType(): string|null;\n    opType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    opType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.NodeType\n     */\n    type(): onnxruntime.experimental.fbs.NodeType {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.NodeType.Primitive;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    executionProviderType(): string|null;\n    executionProviderType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    executionProviderType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Attribute= obj\n     * @returns onnxruntime.experimental.fbs.Attribute\n     */\n    attributes(index: number, obj?: onnxruntime.experimental.fbs.Attribute): onnxruntime.experimental.fbs.Attribute\n        |null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Attribute())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    attributesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    inputArgCounts(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    inputArgCountsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Int32Array\n     */\n    inputArgCountsArray(): Int32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ?\n          new Int32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    implicitInputs(index: number): string;\n    implicitInputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    implicitInputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    implicitInputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNode(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number sinceVersion\n     */\n    static addSinceVersion(builder: flatbuffers.Builder, sinceVersion: number) {\n      builder.addFieldInt32(3, sinceVersion, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number index\n     */\n    static addIndex(builder: flatbuffers.Builder, index: number) {\n      builder.addFieldInt32(4, index, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opTypeOffset\n     */\n    static addOpType(builder: flatbuffers.Builder, opTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, opTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.NodeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.NodeType) {\n      builder.addFieldInt32(6, type, onnxruntime.experimental.fbs.NodeType.Primitive);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset executionProviderTypeOffset\n     */\n    static addExecutionProviderType(builder: flatbuffers.Builder, executionProviderTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, executionProviderTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset attributesOffset\n     */\n    static addAttributes(builder: flatbuffers.Builder, attributesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, attributesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createAttributesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startAttributesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputArgCountsOffset\n     */\n    static addInputArgCounts(builder: flatbuffers.Builder, inputArgCountsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, inputArgCountsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputArgCountsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputArgCountsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset implicitInputsOffset\n     */\n    static addImplicitInputs(builder: flatbuffers.Builder, implicitInputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, implicitInputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createImplicitInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startImplicitInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNode(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNode(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, sinceVersion: number, index: number, opTypeOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.NodeType, executionProviderTypeOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset, attributesOffset: flatbuffers.Offset,\n        inputArgCountsOffset: flatbuffers.Offset, implicitInputsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Node.startNode(builder);\n      Node.addName(builder, nameOffset);\n      Node.addDocString(builder, docStringOffset);\n      Node.addDomain(builder, domainOffset);\n      Node.addSinceVersion(builder, sinceVersion);\n      Node.addIndex(builder, index);\n      Node.addOpType(builder, opTypeOffset);\n      Node.addType(builder, type);\n      Node.addExecutionProviderType(builder, executionProviderTypeOffset);\n      Node.addInputs(builder, inputsOffset);\n      Node.addOutputs(builder, outputsOffset);\n      Node.addAttributes(builder, attributesOffset);\n      Node.addInputArgCounts(builder, inputArgCountsOffset);\n      Node.addImplicitInputs(builder, implicitInputsOffset);\n      return Node.endNode(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class ValueInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns ValueInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): ValueInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getSizePrefixedRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    type(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startValueInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset typeOffset\n     */\n    static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, typeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endValueInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createValueInfo(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        typeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      ValueInfo.startValueInfo(builder);\n      ValueInfo.addName(builder, nameOffset);\n      ValueInfo.addDocString(builder, docStringOffset);\n      ValueInfo.addType(builder, typeOffset);\n      return ValueInfo.endValueInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TypeInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TypeInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TypeInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getSizePrefixedRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TypeInfoValue\n     */\n    valueType(): onnxruntime.experimental.fbs.TypeInfoValue {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TypeInfoValue.NONE;\n    }\n\n    /**\n     * @param flatbuffers.Table obj\n     * @returns ?flatbuffers.Table\n     */\n    value<T extends flatbuffers.Table>(obj: T): T|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTypeInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TypeInfoValue valueType\n     */\n    static addValueType(builder: flatbuffers.Builder, valueType: onnxruntime.experimental.fbs.TypeInfoValue) {\n      builder.addFieldInt8(1, valueType, onnxruntime.experimental.fbs.TypeInfoValue.NONE);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTypeInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTypeInfo(\n        builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset,\n        valueType: onnxruntime.experimental.fbs.TypeInfoValue, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TypeInfo.startTypeInfo(builder);\n      TypeInfo.addDenotation(builder, denotationOffset);\n      TypeInfo.addValueType(builder, valueType);\n      TypeInfo.addValue(builder, valueOffset);\n      return TypeInfo.endTypeInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class OperatorSetId {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns OperatorSetId\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): OperatorSetId {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getSizePrefixedRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    version(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startOperatorSetId(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long version\n     */\n    static addVersion(builder: flatbuffers.Builder, version: flatbuffers.Long) {\n      builder.addFieldInt64(1, version, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endOperatorSetId(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createOperatorSetId(\n        builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset, version: flatbuffers.Long): flatbuffers.Offset {\n      OperatorSetId.startOperatorSetId(builder);\n      OperatorSetId.addDomain(builder, domainOffset);\n      OperatorSetId.addVersion(builder, version);\n      return OperatorSetId.endOperatorSetId(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Tensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Tensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Tensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getSizePrefixedRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    dataType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    rawData(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    rawDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint8Array\n     */\n    rawDataArray(): Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ?\n          new Uint8Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    stringData(index: number): string;\n    stringData(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    stringData(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensor(builder: flatbuffers.Builder) {\n      builder.startObject(6);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType dataType\n     */\n    static addDataType(builder: flatbuffers.Builder, dataType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(3, dataType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset rawDataOffset\n     */\n    static addRawData(builder: flatbuffers.Builder, rawDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, rawDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createRawDataVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(1, data.length, 1);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt8(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startRawDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(1, numElems, 1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringDataOffset\n     */\n    static addStringData(builder: flatbuffers.Builder, stringDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, stringDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringDataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensor(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset, dataType: onnxruntime.experimental.fbs.TensorDataType,\n        rawDataOffset: flatbuffers.Offset, stringDataOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Tensor.startTensor(builder);\n      Tensor.addName(builder, nameOffset);\n      Tensor.addDocString(builder, docStringOffset);\n      Tensor.addDims(builder, dimsOffset);\n      Tensor.addDataType(builder, dataType);\n      Tensor.addRawData(builder, rawDataOffset);\n      Tensor.addStringData(builder, stringDataOffset);\n      return Tensor.endTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SparseTensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SparseTensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SparseTensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getSizePrefixedRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    values(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    indices(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSparseTensor(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valuesOffset\n     */\n    static addValues(builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valuesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset indicesOffset\n     */\n    static addIndices(builder: flatbuffers.Builder, indicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, indicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSparseTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSparseTensor(\n        builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset, indicesOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SparseTensor.startSparseTensor(builder);\n      SparseTensor.addValues(builder, valuesOffset);\n      SparseTensor.addIndices(builder, indicesOffset);\n      SparseTensor.addDims(builder, dimsOffset);\n      return SparseTensor.endSparseTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Attribute {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Attribute\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Attribute {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getSizePrefixedRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.AttributeType\n     */\n    type(): onnxruntime.experimental.fbs.AttributeType {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.AttributeType.UNDEFINED;\n    }\n\n    /**\n     * @returns number\n     */\n    f(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    i(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    s(): string|null;\n    s(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    s(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    t(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    g(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    floats(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.readFloat32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    floatsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Float32Array\n     */\n    floatsArray(): Float32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ?\n          new Float32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    ints(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    intsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    strings(index: number): string;\n    strings(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    strings(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    tensors(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    tensorsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph\n     */\n    graphs(index: number, obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    graphsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startAttribute(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.AttributeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.AttributeType) {\n      builder.addFieldInt32(2, type, onnxruntime.experimental.fbs.AttributeType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number f\n     */\n    static addF(builder: flatbuffers.Builder, f: number) {\n      builder.addFieldFloat32(3, f, 0.0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long i\n     */\n    static addI(builder: flatbuffers.Builder, i: flatbuffers.Long) {\n      builder.addFieldInt64(4, i, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sOffset\n     */\n    static addS(builder: flatbuffers.Builder, sOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, sOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tOffset\n     */\n    static addT(builder: flatbuffers.Builder, tOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, tOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset gOffset\n     */\n    static addG(builder: flatbuffers.Builder, gOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, gOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset floatsOffset\n     */\n    static addFloats(builder: flatbuffers.Builder, floatsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, floatsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createFloatsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addFloat32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startFloatsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset intsOffset\n     */\n    static addInts(builder: flatbuffers.Builder, intsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, intsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createIntsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startIntsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringsOffset\n     */\n    static addStrings(builder: flatbuffers.Builder, stringsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, stringsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tensorsOffset\n     */\n    static addTensors(builder: flatbuffers.Builder, tensorsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, tensorsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createTensorsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startTensorsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphsOffset\n     */\n    static addGraphs(builder: flatbuffers.Builder, graphsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, graphsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createGraphsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startGraphsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endAttribute(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createAttribute(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.AttributeType, f: number, i: flatbuffers.Long, sOffset: flatbuffers.Offset,\n        tOffset: flatbuffers.Offset, gOffset: flatbuffers.Offset, floatsOffset: flatbuffers.Offset,\n        intsOffset: flatbuffers.Offset, stringsOffset: flatbuffers.Offset, tensorsOffset: flatbuffers.Offset,\n        graphsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Attribute.startAttribute(builder);\n      Attribute.addName(builder, nameOffset);\n      Attribute.addDocString(builder, docStringOffset);\n      Attribute.addType(builder, type);\n      Attribute.addF(builder, f);\n      Attribute.addI(builder, i);\n      Attribute.addS(builder, sOffset);\n      Attribute.addT(builder, tOffset);\n      Attribute.addG(builder, gOffset);\n      Attribute.addFloats(builder, floatsOffset);\n      Attribute.addInts(builder, intsOffset);\n      Attribute.addStrings(builder, stringsOffset);\n      Attribute.addTensors(builder, tensorsOffset);\n      Attribute.addGraphs(builder, graphsOffset);\n      return Attribute.endAttribute(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Graph {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Graph\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Graph {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getSizePrefixedRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    initializers(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    initializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.ValueInfo= obj\n     * @returns onnxruntime.experimental.fbs.ValueInfo\n     */\n    nodeArgs(index: number, obj?: onnxruntime.experimental.fbs.ValueInfo): onnxruntime.experimental.fbs.ValueInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.ValueInfo())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeArgsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Node= obj\n     * @returns onnxruntime.experimental.fbs.Node\n     */\n    nodes(index: number, obj?: onnxruntime.experimental.fbs.Node): onnxruntime.experimental.fbs.Node|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Node())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    maxNodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.NodeEdge= obj\n     * @returns onnxruntime.experimental.fbs.NodeEdge\n     */\n    nodeEdges(index: number, obj?: onnxruntime.experimental.fbs.NodeEdge): onnxruntime.experimental.fbs.NodeEdge|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? (obj || new onnxruntime.experimental.fbs.NodeEdge())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SparseTensor= obj\n     * @returns onnxruntime.experimental.fbs.SparseTensor\n     */\n    sparseInitializers(index: number, obj?: onnxruntime.experimental.fbs.SparseTensor):\n        onnxruntime.experimental.fbs.SparseTensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SparseTensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    sparseInitializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startGraph(builder: flatbuffers.Builder) {\n      builder.startObject(8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset initializersOffset\n     */\n    static addInitializers(builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, initializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeArgsOffset\n     */\n    static addNodeArgs(builder: flatbuffers.Builder, nodeArgsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, nodeArgsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeArgsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeArgsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodesOffset\n     */\n    static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, nodesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number maxNodeIndex\n     */\n    static addMaxNodeIndex(builder: flatbuffers.Builder, maxNodeIndex: number) {\n      builder.addFieldInt32(3, maxNodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeEdgesOffset\n     */\n    static addNodeEdges(builder: flatbuffers.Builder, nodeEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, nodeEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeEdgesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sparseInitializersOffset\n     */\n    static addSparseInitializers(builder: flatbuffers.Builder, sparseInitializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, sparseInitializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSparseInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSparseInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endGraph(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createGraph(\n        builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset, nodeArgsOffset: flatbuffers.Offset,\n        nodesOffset: flatbuffers.Offset, maxNodeIndex: number, nodeEdgesOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset,\n        sparseInitializersOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Graph.startGraph(builder);\n      Graph.addInitializers(builder, initializersOffset);\n      Graph.addNodeArgs(builder, nodeArgsOffset);\n      Graph.addNodes(builder, nodesOffset);\n      Graph.addMaxNodeIndex(builder, maxNodeIndex);\n      Graph.addNodeEdges(builder, nodeEdgesOffset);\n      Graph.addInputs(builder, inputsOffset);\n      Graph.addOutputs(builder, outputsOffset);\n      Graph.addSparseInitializers(builder, sparseInitializersOffset);\n      return Graph.endGraph(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Model {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Model\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Model {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getSizePrefixedRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    irVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.OperatorSetId= obj\n     * @returns onnxruntime.experimental.fbs.OperatorSetId\n     */\n    opsetImport(index: number, obj?: onnxruntime.experimental.fbs.OperatorSetId):\n        onnxruntime.experimental.fbs.OperatorSetId|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.OperatorSetId())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    opsetImportLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerName(): string|null;\n    producerName(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerName(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerVersion(): string|null;\n    producerVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    modelVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    graph(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphDocString(): string|null;\n    graphDocString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphDocString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startModel(builder: flatbuffers.Builder) {\n      builder.startObject(9);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long irVersion\n     */\n    static addIrVersion(builder: flatbuffers.Builder, irVersion: flatbuffers.Long) {\n      builder.addFieldInt64(0, irVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opsetImportOffset\n     */\n    static addOpsetImport(builder: flatbuffers.Builder, opsetImportOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, opsetImportOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOpsetImportVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOpsetImportVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerNameOffset\n     */\n    static addProducerName(builder: flatbuffers.Builder, producerNameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, producerNameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerVersionOffset\n     */\n    static addProducerVersion(builder: flatbuffers.Builder, producerVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(3, producerVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long modelVersion\n     */\n    static addModelVersion(builder: flatbuffers.Builder, modelVersion: flatbuffers.Long) {\n      builder.addFieldInt64(5, modelVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphOffset\n     */\n    static addGraph(builder: flatbuffers.Builder, graphOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, graphOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphDocStringOffset\n     */\n    static addGraphDocString(builder: flatbuffers.Builder, graphDocStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, graphDocStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endModel(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createModel(\n        builder: flatbuffers.Builder, irVersion: flatbuffers.Long, opsetImportOffset: flatbuffers.Offset,\n        producerNameOffset: flatbuffers.Offset, producerVersionOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, modelVersion: flatbuffers.Long, docStringOffset: flatbuffers.Offset,\n        graphOffset: flatbuffers.Offset, graphDocStringOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Model.startModel(builder);\n      Model.addIrVersion(builder, irVersion);\n      Model.addOpsetImport(builder, opsetImportOffset);\n      Model.addProducerName(builder, producerNameOffset);\n      Model.addProducerVersion(builder, producerVersionOffset);\n      Model.addDomain(builder, domainOffset);\n      Model.addModelVersion(builder, modelVersion);\n      Model.addDocString(builder, docStringOffset);\n      Model.addGraph(builder, graphOffset);\n      Model.addGraphDocString(builder, graphDocStringOffset);\n      return Model.endModel(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class KernelCreateInfos {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns KernelCreateInfos\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): KernelCreateInfos {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos): KernelCreateInfos {\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getSizePrefixedRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos):\n        KernelCreateInfos {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    nodeIndices(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndicesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint32Array\n     */\n    nodeIndicesArray(): Uint32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ?\n          new Uint32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    kernelDefHashes(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readUint64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    kernelDefHashesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startKernelCreateInfos(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeIndicesOffset\n     */\n    static addNodeIndices(builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nodeIndicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeIndicesVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeIndicesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelDefHashesOffset\n     */\n    static addKernelDefHashes(builder: flatbuffers.Builder, kernelDefHashesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, kernelDefHashesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createKernelDefHashesVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startKernelDefHashesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endKernelCreateInfos(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createKernelCreateInfos(\n        builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset,\n        kernelDefHashesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      KernelCreateInfos.startKernelCreateInfos(builder);\n      KernelCreateInfos.addNodeIndices(builder, nodeIndicesOffset);\n      KernelCreateInfos.addKernelDefHashes(builder, kernelDefHashesOffset);\n      return KernelCreateInfos.endKernelCreateInfos(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SubGraphSessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SubGraphSessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SubGraphSessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState): SubGraphSessionState {\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getSizePrefixedRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState):\n        SubGraphSessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphId(): string|null;\n    graphId(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphId(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSubGraphSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphIdOffset\n     */\n    static addGraphId(builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, graphIdOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSubGraphSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      builder.requiredField(offset, 4);  // graph_id\n      return offset;\n    }\n\n    static createSubGraphSessionState(\n        builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SubGraphSessionState.startSubGraphSessionState(builder);\n      SubGraphSessionState.addGraphId(builder, graphIdOffset);\n      SubGraphSessionState.addSessionState(builder, sessionStateOffset);\n      return SubGraphSessionState.endSubGraphSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getSizePrefixedRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.KernelCreateInfos= obj\n     * @returns onnxruntime.experimental.fbs.KernelCreateInfos|null\n     */\n    kernels(obj?: onnxruntime.experimental.fbs.KernelCreateInfos): onnxruntime.experimental.fbs.KernelCreateInfos|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.KernelCreateInfos())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SubGraphSessionState= obj\n     * @returns onnxruntime.experimental.fbs.SubGraphSessionState\n     */\n    subGraphSessionStates(index: number, obj?: onnxruntime.experimental.fbs.SubGraphSessionState):\n        onnxruntime.experimental.fbs.SubGraphSessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SubGraphSessionState())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    subGraphSessionStatesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelsOffset\n     */\n    static addKernels(builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, kernelsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset subGraphSessionStatesOffset\n     */\n    static addSubGraphSessionStates(builder: flatbuffers.Builder, subGraphSessionStatesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, subGraphSessionStatesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSubGraphSessionStatesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSubGraphSessionStatesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSessionState(\n        builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset,\n        subGraphSessionStatesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SessionState.startSessionState(builder);\n      SessionState.addKernels(builder, kernelsOffset);\n      SessionState.addSubGraphSessionStates(builder, subGraphSessionStatesOffset);\n      return SessionState.endSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class InferenceSession {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns InferenceSession\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): InferenceSession {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getSizePrefixedRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @returns boolean\n     */\n    static bufferHasIdentifier(bb: flatbuffers.ByteBuffer): boolean {\n      return bb.__has_identifier('ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    ortVersion(): string|null;\n    ortVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    ortVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Model= obj\n     * @returns onnxruntime.experimental.fbs.Model|null\n     */\n    model(obj?: onnxruntime.experimental.fbs.Model): onnxruntime.experimental.fbs.Model|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Model())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startInferenceSession(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset ortVersionOffset\n     */\n    static addOrtVersion(builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, ortVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset modelOffset\n     */\n    static addModel(builder: flatbuffers.Builder, modelOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, modelOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endInferenceSession(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishSizePrefixedInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM', true);\n    }\n\n    static createInferenceSession(\n        builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset, modelOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      InferenceSession.startInferenceSession(builder);\n      InferenceSession.addOrtVersion(builder, ortVersionOffset);\n      InferenceSession.addModel(builder, modelOffset);\n      InferenceSession.addSessionState(builder, sessionStateOffset);\n      return InferenceSession.endInferenceSession(builder);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\n\nimport {Session} from './session';\nimport {Tensor as OnnxjsTensor} from './tensor';\n\nexport class OnnxjsSessionHandler implements SessionHandler {\n  constructor(private session: Session) {\n    this.inputNames = this.session.inputNames;\n    this.outputNames = this.session.outputNames;\n  }\n\n  async dispose(): Promise<void> {}\n  inputNames: readonly string[];\n  outputNames: readonly string[];\n  async run(\n      feeds: SessionHandler.FeedsType, _fetches: SessionHandler.FetchesType,\n      _options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType> {\n    const inputMap = new Map<string, OnnxjsTensor>();\n    for (const name in feeds) {\n      if (Object.hasOwnProperty.call(feeds, name)) {\n        const feed = feeds[name];\n        inputMap.set(\n            name,\n            new OnnxjsTensor(\n                feed.dims, feed.type as OnnxjsTensor.DataType, undefined, undefined,\n                feed.data as OnnxjsTensor.NumberType));\n      }\n    }\n    const outputMap = await this.session.run(inputMap);\n    const output: SessionHandler.ReturnType = {};\n    outputMap.forEach((tensor, name) => {\n      output[name] = new Tensor(tensor.type, tensor.data, tensor.dims);\n    });\n    return output;\n  }\n  startProfiling(): void {\n    this.session.startProfiling();\n  }\n  endProfiling(): void {\n    this.session.endProfiling();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {promisify} from 'util';\n\nimport {resolveBackend, SessionHandlerType} from './backend';\nimport {ExecutionPlan} from './execution-plan';\nimport {Graph} from './graph';\nimport {Profiler} from './instrument';\nimport {Model} from './model';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nexport declare namespace Session {\n  export interface Config {\n    backendHint?: string;\n    profiler?: Profiler.Config;\n  }\n\n  export interface Context {\n    profiler: Readonly<Profiler>;\n    graphInputTypes?: Tensor.DataType[];\n    graphInputDims?: Array<readonly number[]>;\n  }\n}\n\nexport class Session {\n  constructor(config: Session.Config = {}) {\n    this._initialized = false;\n    this.backendHint = config.backendHint;\n    this.profiler = Profiler.create(config.profiler);\n    this.context = {profiler: this.profiler, graphInputTypes: [], graphInputDims: []};\n  }\n\n  get inputNames(): readonly string[] {\n    return this._model.graph.getInputNames();\n  }\n  get outputNames(): readonly string[] {\n    return this._model.graph.getOutputNames();\n  }\n\n  startProfiling() {\n    this.profiler.start();\n  }\n\n  endProfiling() {\n    this.profiler.stop();\n  }\n\n  async loadModel(uri: string): Promise<void>;\n  async loadModel(buffer: ArrayBuffer, byteOffset?: number, length?: number): Promise<void>;\n  async loadModel(buffer: Uint8Array): Promise<void>;\n  async loadModel(arg: string|ArrayBuffer|Uint8Array, byteOffset?: number, length?: number): Promise<void> {\n    await this.profiler.event('session', 'Session.loadModel', async () => {\n      // resolve backend and session handler\n      const backend = await resolveBackend(this.backendHint);\n      this.sessionHandler = backend.createSessionHandler(this.context);\n\n      this._model = new Model();\n      if (typeof arg === 'string') {\n        const isOrtFormat = arg.endsWith('.ort');\n        if (typeof fetch === 'undefined') {\n          // node\n          const buf = await promisify(readFile)(arg);\n          this.initialize(buf, isOrtFormat);\n        } else {\n          // browser\n          const response = await fetch(arg);\n          const buf = await response.arrayBuffer();\n          this.initialize(new Uint8Array(buf), isOrtFormat);\n        }\n      } else if (!ArrayBuffer.isView(arg)) {\n        // load model from ArrayBuffer\n        const arr = new Uint8Array(arg, byteOffset || 0, length || arg.byteLength);\n        this.initialize(arr);\n      } else {\n        // load model from Uint8array\n        this.initialize(arg);\n      }\n    });\n  }\n\n  private initialize(modelProtoBlob: Uint8Array, isOrtFormat?: boolean): void {\n    if (this._initialized) {\n      throw new Error('already initialized');\n    }\n\n    this.profiler.event('session', 'Session.initialize', () => {\n      // load graph\n      const graphInitializer =\n          this.sessionHandler.transformGraph ? this.sessionHandler as Graph.Initializer : undefined;\n      this._model.load(modelProtoBlob, graphInitializer, isOrtFormat);\n\n      // graph is completely initialzied at this stage , let the interested handlers know\n      if (this.sessionHandler.onGraphInitialized) {\n        this.sessionHandler.onGraphInitialized(this._model.graph);\n      }\n      // initialize each operator in the graph\n      this.initializeOps(this._model.graph);\n\n      // instantiate an ExecutionPlan object to be used by the Session object\n      this._executionPlan = new ExecutionPlan(this._model.graph, this._ops, this.profiler);\n    });\n\n    this._initialized = true;\n  }\n\n  async run(inputs: Map<string, Tensor>|Tensor[]): Promise<Map<string, Tensor>> {\n    if (!this._initialized) {\n      throw new Error('session not initialized yet');\n    }\n\n    return this.profiler.event('session', 'Session.run', async () => {\n      const inputTensors = this.normalizeAndValidateInputs(inputs);\n\n      const outputTensors = await this._executionPlan.execute(this.sessionHandler, inputTensors);\n\n      return this.createOutput(outputTensors);\n    });\n  }\n\n  private normalizeAndValidateInputs(inputs: Map<string, Tensor>|Tensor[]): Tensor[] {\n    const modelInputNames = this._model.graph.getInputNames();\n\n    // normalize inputs\n    // inputs: Tensor[]\n    if (Array.isArray(inputs)) {\n      if (inputs.length !== modelInputNames.length) {\n        throw new Error(`incorrect input array length: expected ${modelInputNames.length} but got ${inputs.length}`);\n      }\n    }\n    // convert map to array\n    // inputs: Map<string, Tensor>\n    else {\n      if (inputs.size !== modelInputNames.length) {\n        throw new Error(`incorrect input map size: expected ${modelInputNames.length} but got ${inputs.size}`);\n      }\n\n      const sortedInputs = new Array<Tensor>(inputs.size);\n      let sortedInputsIndex = 0;\n      for (let i = 0; i < modelInputNames.length; ++i) {\n        const tensor = inputs.get(modelInputNames[i]);\n        if (!tensor) {\n          throw new Error(`missing input tensor for: '${name}'`);\n        }\n        sortedInputs[sortedInputsIndex++] = tensor;\n      }\n\n      inputs = sortedInputs;\n    }\n\n    // validate dims requirements\n    // First session run - graph input data is not cached for the session\n    if (!this.context.graphInputTypes || this.context.graphInputTypes.length === 0 || !this.context.graphInputDims ||\n        this.context.graphInputDims.length === 0) {\n      const modelInputIndices = this._model.graph.getInputIndices();\n      const modelValues = this._model.graph.getValues();\n\n      const graphInputDims = new Array<readonly number[]>(modelInputIndices.length);\n\n      for (let i = 0; i < modelInputIndices.length; ++i) {\n        const graphInput = modelValues[modelInputIndices[i]];\n        graphInputDims[i] = graphInput.type!.shape.dims;\n\n        // cached for second and subsequent runs.\n        // Some parts of the framework works on the assumption that the graph and types and shapes are static\n        this.context.graphInputTypes!.push(graphInput.type!.tensorType);\n        this.context.graphInputDims!.push(inputs[i].dims);\n      }\n\n      this.validateInputTensorDims(graphInputDims, inputs, true);\n    }\n\n    // Second and subsequent session runs - graph input data is cached for the session\n    else {\n      this.validateInputTensorDims(this.context.graphInputDims, inputs, false);\n    }\n\n    // validate types requirement\n    this.validateInputTensorTypes(this.context.graphInputTypes!, inputs);\n\n    return inputs;\n  }\n\n  private validateInputTensorTypes(graphInputTypes: Tensor.DataType[], givenInputs: Tensor[]) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedType = graphInputTypes[i];\n      const actualType = givenInputs[i].type;\n      if (expectedType !== actualType) {\n        throw new Error(`input tensor[${i}] check failed: expected type '${expectedType}' but got ${actualType}`);\n      }\n    }\n  }\n\n  private validateInputTensorDims(\n      graphInputDims: Array<readonly number[]>, givenInputs: Tensor[], noneDimSupported: boolean) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedDims = graphInputDims[i];\n      const actualDims = givenInputs[i].dims;\n      if (!this.compareTensorDims(expectedDims, actualDims, noneDimSupported)) {\n        throw new Error(`input tensor[${i}] check failed: expected shape '[${expectedDims.join(',')}]' but got [${\n            actualDims.join(',')}]`);\n      }\n    }\n  }\n\n  private compareTensorDims(expectedDims: readonly number[], actualDims: readonly number[], noneDimSupported: boolean):\n      boolean {\n    if (expectedDims.length !== actualDims.length) {\n      return false;\n    }\n\n    for (let i = 0; i < expectedDims.length; ++i) {\n      if (expectedDims[i] !== actualDims[i] && (!noneDimSupported || expectedDims[i] !== 0)) {\n        // data shape mis-match AND not a 'None' dimension.\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private createOutput(outputTensors: Tensor[]): Map<string, Tensor> {\n    const modelOutputNames = this._model.graph.getOutputNames();\n    if (outputTensors.length !== modelOutputNames.length) {\n      throw new Error('expected number of outputs do not match number of generated outputs');\n    }\n\n    const output = new Map<string, Tensor>();\n    for (let i = 0; i < modelOutputNames.length; ++i) {\n      output.set(modelOutputNames[i], outputTensors[i]);\n    }\n\n    return output;\n  }\n\n  private initializeOps(graph: Graph): void {\n    const nodes = graph.getNodes();\n    this._ops = new Array(nodes.length);\n\n    for (let i = 0; i < nodes.length; i++) {\n      this._ops[i] = this.sessionHandler.resolve(nodes[i], this._model.opsets, graph);\n    }\n  }\n\n  private _model: Model;\n  private _initialized: boolean;\n\n  private _ops: Operator[];\n  private _executionPlan: ExecutionPlan;\n\n  private backendHint?: string;\n\n  private sessionHandler: SessionHandlerType;\n  private context: Session.Context;\n  private profiler: Readonly<Profiler>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Guid} from 'guid-typescript';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {decodeUtf8String, ProtoUtil, ShapeUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport declare namespace Tensor {\n  export interface DataTypeMap {\n    bool: Uint8Array;\n    float32: Float32Array;\n    float64: Float64Array;\n    string: string[];\n    int8: Int8Array;\n    uint8: Uint8Array;\n    int16: Int16Array;\n    uint16: Uint16Array;\n    int32: Int32Array;\n    uint32: Uint32Array;\n  }\n\n  export type DataType = keyof DataTypeMap;\n\n  export type StringType = Tensor.DataTypeMap['string'];\n  export type BooleanType = Tensor.DataTypeMap['bool'];\n  export type IntegerType = Tensor.DataTypeMap['int8']|Tensor.DataTypeMap['uint8']|Tensor.DataTypeMap['int16']|\n                            Tensor.DataTypeMap['uint16']|Tensor.DataTypeMap['int32']|Tensor.DataTypeMap['uint32'];\n  export type FloatType = Tensor.DataTypeMap['float32']|Tensor.DataTypeMap['float64'];\n  export type NumberType = BooleanType|IntegerType|FloatType;\n\n  export type Id = Guid;\n}\n\ntype TensorData = Tensor.DataTypeMap[Tensor.DataType];\n\ntype DataProvider = (id: Tensor.Id) => TensorData;\ntype AsyncDataProvider = (id: Tensor.Id) => Promise<TensorData>;\n\nexport class Tensor {\n  /**\n   * get the underlying tensor data\n   */\n  get data(): TensorData {\n    if (this.cache === undefined) {\n      const data = this.dataProvider!(this.dataId);\n      if (data.length !== this.size) {\n        throw new Error('Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.');\n      }\n      this.cache = data;\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the underlying string tensor data. Should only use when type is STRING\n   */\n  get stringData() {\n    if (this.type !== 'string') {\n      throw new TypeError('data type is not string');\n    }\n\n    return this.data as Tensor.StringType;\n  }\n\n  /**\n   * get the underlying integer tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL)\n   */\n  get integerData() {\n    switch (this.type) {\n      case 'uint8':\n      case 'int8':\n      case 'uint16':\n      case 'int16':\n      case 'int32':\n      case 'uint32':\n      case 'bool':\n        return this.data as Tensor.IntegerType;\n\n      default:\n        throw new TypeError('data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)');\n    }\n  }\n\n  /**\n   * get the underlying float tensor data. Should only use when type is one of the following: (FLOAT, DOUBLE)\n   */\n  get floatData() {\n    switch (this.type) {\n      case 'float32':\n      case 'float64':\n        return this.data as Tensor.FloatType;\n\n      default:\n        throw new TypeError('data type is not float (float32, float64)');\n    }\n  }\n\n  /**\n   * get the underlying number tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL, FLOAT, DOUBLE)\n   */\n  get numberData() {\n    if (this.type !== 'string') {\n      return this.data as Tensor.NumberType;\n    }\n    throw new TypeError('type cannot be non-number (string)');\n  }\n\n  /**\n   * get value of an element at the given indices\n   */\n  get(indices: readonly number[]): Tensor.DataTypeMap[Tensor.DataType][number] {\n    return this.data[ShapeUtil.indicesToOffset(indices, this.strides)];\n  }\n\n  /**\n   * set value of an element at the given indices\n   */\n  set(indices: readonly number[], value: Tensor.DataTypeMap[Tensor.DataType][number]) {\n    this.data[ShapeUtil.indicesToOffset(indices, this.strides)] = value;\n  }\n\n  /**\n   * get the underlying tensor data asynchronously\n   */\n  async getData(): Promise<TensorData> {\n    if (this.cache === undefined) {\n      this.cache = await this.asyncDataProvider!(this.dataId);\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the number of elements in the tensor\n   */\n  public readonly size: number;\n\n  private _strides: readonly number[];\n  /**\n   * get the strides for each dimension\n   */\n  get strides(): readonly number[] {\n    if (!this._strides) {\n      this._strides = ShapeUtil.computeStrides(this.dims);\n    }\n    return this._strides;\n  }\n\n  constructor(\n      /**\n       * get the dimensions of the tensor\n       */\n      public readonly dims: readonly number[],\n      /**\n       * get the type of the tensor\n       */\n      public readonly type: Tensor.DataType, private dataProvider?: DataProvider,\n      private asyncDataProvider?: AsyncDataProvider, private cache?: TensorData,\n      /**\n       * get the data ID that used to map to a tensor data\n       */\n      public readonly dataId: Guid = Guid.create()) {\n    this.size = ShapeUtil.validateDimsAndCalcSize(dims);\n    const size = this.size;\n    const empty = (dataProvider === undefined && asyncDataProvider === undefined && cache === undefined);\n\n    if (cache !== undefined) {\n      if (cache.length !== size) {\n        throw new RangeError('Input dims doesn\\'t match data length.');\n      }\n    }\n\n    if (type === 'string') {\n      if (cache !== undefined && (!Array.isArray(cache) || !cache.every(i => typeof i === 'string'))) {\n        throw new TypeError('cache should be a string array');\n      }\n\n      if (empty) {\n        this.cache = new Array<string>(size);\n      }\n    } else {\n      if (cache !== undefined) {\n        const constructor = dataviewConstructor(type);\n        if (!(cache instanceof constructor)) {\n          throw new TypeError(`cache should be type ${constructor.name}`);\n        }\n      }\n\n      if (empty) {\n        const buf = new ArrayBuffer(size * sizeof(type));\n        this.cache = createView(buf, type);\n      }\n    }\n  }\n\n  /**\n   * Construct new Tensor from a ONNX Tensor object\n   * @param tensorProto the ONNX Tensor\n   */\n  static fromProto(tensorProto: onnx.ITensorProto): Tensor {\n    if (!tensorProto) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const type = ProtoUtil.tensorDataTypeFromProto(tensorProto.dataType!);\n    const dims = ProtoUtil.tensorDimsFromProto(tensorProto.dims!);\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      tensorProto.stringData!.forEach((str, i) => {\n        value.data[i] = decodeUtf8String(str);\n      });\n\n    } else if (\n        tensorProto.rawData && typeof tensorProto.rawData.byteLength === 'number' &&\n        tensorProto.rawData.byteLength > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource =\n          new DataView(tensorProto.rawData.buffer, tensorProto.rawData.byteOffset, tensorProto.rawData.byteLength);\n      const elementSize = sizeofProto(tensorProto.dataType!);\n      const length = tensorProto.rawData.byteLength / elementSize;\n\n      if (tensorProto.rawData.byteLength % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, tensorProto.dataType!, i * elementSize);\n        dataDest[i] = n;\n      }\n    } else {\n      // populate value from array\n      let array: Array<number|Long>;\n      switch (tensorProto.dataType) {\n        case onnx.TensorProto.DataType.FLOAT:\n          array = tensorProto.floatData!;\n          break;\n        case onnx.TensorProto.DataType.INT32:\n        case onnx.TensorProto.DataType.INT16:\n        case onnx.TensorProto.DataType.UINT16:\n        case onnx.TensorProto.DataType.INT8:\n        case onnx.TensorProto.DataType.UINT8:\n        case onnx.TensorProto.DataType.BOOL:\n          array = tensorProto.int32Data!;\n          break;\n        case onnx.TensorProto.DataType.INT64:\n          array = tensorProto.int64Data!;\n          break;\n        case onnx.TensorProto.DataType.DOUBLE:\n          array = tensorProto.doubleData!;\n          break;\n        case onnx.TensorProto.DataType.UINT32:\n        case onnx.TensorProto.DataType.UINT64:\n          array = tensorProto.uint64Data!;\n          break;\n        default:\n          // should never run here\n          throw new Error('unspecific error');\n      }\n\n      if (array === null || array === undefined) {\n        throw new Error('failed to populate data from a tensorproto value');\n      }\n\n      const data = value.data;\n      if (data.length !== array.length) {\n        throw new Error('array length mismatch');\n      }\n\n      for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (Long.isLong(element)) {\n          data[i] = longToNumber(element, tensorProto.dataType);\n        } else {\n          data[i] = element;\n        }\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Construct new Tensor from raw data\n   * @param data the raw data object. Should be a string array for 'string' tensor, and the corresponding typed array\n   * for other types of tensor.\n   * @param dims the dimensions of the tensor\n   * @param type the type of the tensor\n   */\n  static fromData(data: Tensor.DataTypeMap[Tensor.DataType], dims: readonly number[], type: Tensor.DataType) {\n    return new Tensor(dims, type, undefined, undefined, data);\n  }\n\n  static fromOrtTensor(ortTensor: ortFbs.Tensor) {\n    if (!ortTensor) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const dims = ProtoUtil.tensorDimsFromORTFormat(ortTensor);\n    const type = ProtoUtil.tensorDataTypeFromProto(ortTensor.dataType());\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      for (let i = 0; i < ortTensor.stringDataLength(); i++) {\n        value.data[i] = ortTensor.stringData(i);\n      }\n\n    } else if (\n        ortTensor.rawDataArray() && typeof ortTensor.rawDataLength() === 'number' && ortTensor.rawDataLength() > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource = new DataView(\n          ortTensor.rawDataArray()!.buffer, ortTensor.rawDataArray()!.byteOffset, ortTensor.rawDataLength());\n      const elementSize = sizeofProto(ortTensor.dataType());\n      const length = ortTensor.rawDataLength() / elementSize;\n\n      if (ortTensor.rawDataLength() % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, ortTensor.dataType(), i * elementSize);\n        dataDest[i] = n;\n      }\n    }\n    return value;\n  }\n}\n\nfunction sizeof(type: Tensor.DataType): number {\n  switch (type) {\n    case 'bool':\n    case 'int8':\n    case 'uint8':\n      return 1;\n    case 'int16':\n    case 'uint16':\n      return 2;\n    case 'int32':\n    case 'uint32':\n    case 'float32':\n      return 4;\n    case 'float64':\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${type}`);\n  }\n}\n\nfunction sizeofProto(type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.UINT8:\n    case onnx.TensorProto.DataType.INT8:\n    case onnx.TensorProto.DataType.BOOL:\n      return 1;\n    case onnx.TensorProto.DataType.UINT16:\n    case onnx.TensorProto.DataType.INT16:\n      return 2;\n    case onnx.TensorProto.DataType.FLOAT:\n    case onnx.TensorProto.DataType.INT32:\n    case onnx.TensorProto.DataType.UINT32:\n      return 4;\n    case onnx.TensorProto.DataType.INT64:\n    case onnx.TensorProto.DataType.DOUBLE:\n    case onnx.TensorProto.DataType.UINT64:\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n\nfunction createView(dataBuffer: ArrayBuffer, type: Tensor.DataType) {\n  return new (dataviewConstructor(type))(dataBuffer);\n}\n\nfunction dataviewConstructor(type: Tensor.DataType) {\n  switch (type) {\n    case 'bool':\n    case 'uint8':\n      return Uint8Array;\n    case 'int8':\n      return Int8Array;\n    case 'int16':\n      return Int16Array;\n    case 'uint16':\n      return Uint16Array;\n    case 'int32':\n      return Int32Array;\n    case 'uint32':\n      return Uint32Array;\n    case 'float32':\n      return Float32Array;\n    case 'float64':\n      return Float64Array;\n    default:\n      // should never run to here\n      throw new Error('unspecified error');\n  }\n}\n\n// convert a long number to a 32-bit integer (cast-down)\nfunction longToNumber(i: Long, type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  // INT64, UINT32, UINT64\n  if (type === onnx.TensorProto.DataType.INT64 || type === ortFbs.TensorDataType.INT64) {\n    if (i.greaterThanOrEqual(2147483648) || i.lessThan(-2147483648)) {\n      throw new TypeError('int64 is not supported');\n    }\n  } else if (\n      type === onnx.TensorProto.DataType.UINT32 || type === ortFbs.TensorDataType.UINT32 ||\n      type === onnx.TensorProto.DataType.UINT64 || type === ortFbs.TensorDataType.UINT64) {\n    if (i.greaterThanOrEqual(4294967296) || i.lessThan(0)) {\n      throw new TypeError('uint64 is not supported');\n    }\n  } else {\n    throw new TypeError(`not a LONG type: ${onnx.TensorProto.DataType[type]}`);\n  }\n\n  return i.toNumber();\n}\n\n// read one value from TensorProto\nfunction readProto(view: DataView, type: onnx.TensorProto.DataType|ortFbs.TensorDataType, byteOffset: number): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.BOOL:\n    case onnx.TensorProto.DataType.UINT8:\n      return view.getUint8(byteOffset);\n    case onnx.TensorProto.DataType.INT8:\n      return view.getInt8(byteOffset);\n    case onnx.TensorProto.DataType.UINT16:\n      return view.getUint16(byteOffset, true);\n    case onnx.TensorProto.DataType.INT16:\n      return view.getInt16(byteOffset, true);\n    case onnx.TensorProto.DataType.FLOAT:\n      return view.getFloat32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT32:\n      return view.getInt32(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT32:\n      return view.getUint32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), false), type);\n    case onnx.TensorProto.DataType.DOUBLE:\n      return view.getFloat64(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), true), type);\n    default:\n      throw new Error(`cannot read from DataView for type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\n\n// check the inputs shape before running an OP.\n// return true when the inputs pass the check\n// return false when the inputs do not fit the requirement\n// throw exception when fatal error or not implemented\nexport function checkInputsShape(inputs: Tensor[], ...expectedDimensions: number[]): boolean {\n  if (!inputs || inputs.length !== expectedDimensions.length) {\n    return false;\n  }\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].dims || inputs[i].dims.length !== expectedDimensions[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Evaluates the given expression and asserts error message if condition is unmet.\nexport function assert(expr: boolean, msg: () => string) {\n  if (!expr) {\n    throw new Error(typeof msg === 'string' ? msg : msg());\n  }\n}\n\nexport class ArrayUtil {\n  /**\n   * Verifies if 2 input arrays contain the same elements.\n   * @param n1 Array 1\n   * @param n2 Array 2\n   * @returns Whether these 2 are equal\n   */\n  static arraysEqual(\n      n1: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array,\n      n2: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array) {\n    if (n1.length !== n2.length) {\n      return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n      if (n1[i] !== n2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nexport class MatMulUtil {\n  /**\n   * Fix the input shapes for MatMul operation if they need fixing\n   * @param dimsA The shape of tensor A. Should be an array of positive integers\n   * @param dimsB The shape of tensor B. Should be an array of positive integers\n   * @returns A tuple containing the preprocessed input shapes as required by ONNX specifications\n   */\n  static preprocessInputShapes(dimsA: readonly number[], dimsB: readonly number[]):\n      [readonly number[], readonly number[]] {\n    // If the first argument is 1-D, it is promoted to a matrix by prepending\n    // a 1 to its dimensions. After matrix multiplication the prepended 1 is\n    // removed.\n    const a = (dimsA.length === 1) ? [1, dimsA[0]] : dimsA;\n\n    // If the second argument is 1-D, it is promoted to a matrix by appending\n    // a 1 to its dimensions. After matrix multiplication the appended 1 is\n    // removed.\n    const b = (dimsB.length === 1) ? [dimsB[0], 1] : dimsB;\n\n    return [a, b];\n  }\n\n  /**\n   * Fix the output shape computed for MatMul operation if it needs fixing\n   * @param outputShape The computed outputShape. Should be an array (atleast of length 2) of positive integers.\n   * This will be mutated.\n   * @param aRank The rank of tensor A.\n   * @param bRank The rank of tensor B.\n   */\n  static postprocessOutputShape(outputShape: number[], aRank: number, bRank: number) {\n    // Remove prepended dimension if first input is 1d\n    if (aRank === 1) {\n      // outputShape = outputShape.slice(0, outputShape.length - 2).concat(outputShape.slice(outputShape.length - 1));\n      outputShape.splice(outputShape.length - 2, 1);\n    }\n    // Remove appended dimension if second input is 1d\n    if (bRank === 1) {\n      outputShape.pop();\n    }\n  }\n\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n}\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    if (arank === 0) {\n      return bdims;\n    }\n    if (brank === 0) {\n      return adims;\n    }\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcas\n   * @returns The calculated indices that maps to the original tensor.\n   */\n  static index(broadcastedIndices: readonly number[], originalShape: readonly number[]): number[] {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same\n    // length as the broadcasted shape, and for each dimension the index should\n    // not be out of range.\n    const originalIndices = new Array(originalShape.length);\n    BroadcastUtil.fillIndex(broadcastedIndices, originalShape, originalIndices);\n    return originalIndices;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcast\n   * @param originalIndices The mapping of broadcastedIndices to the originalIndices (output parameter - will be\n   *     mutated).\n   */\n  static fillIndex(broadcastedIndices: readonly number[], originalShape: readonly number[], originalIndices: number[]) {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same length as the\n    // broadcasted shape, and for each dimension the index should not be out of range.\n    // NOTE 2: we assume the parameter originalIndices has the same length as the originalShape\n    const dimOffset = broadcastedIndices.length - originalShape.length;\n    for (let i = 0; i < originalShape.length; i++) {\n      originalIndices[i] = broadcastedIndices[dimOffset + i] % originalShape[i];\n    }\n  }\n\n  /**\n   * Perform the broadcasting operation on the specific operator\n   * @param a The input tensor A\n   * @param b The input tensor B\n   * @param op The operator lambda function\n   * @param inplace Whether to write the result back to A.\n   * @returns The result tensor, or undefined if input not broadcastable.\n   */\n  static calc(\n      a: Tensor, b: Tensor, op: (a: string|number, b: string|number) => (string | number), inplace: boolean,\n      resultType?: Tensor.DataType): Tensor|undefined {\n    const outputShape = BroadcastUtil.calcShape(a.dims, b.dims);\n\n    if (outputShape) {\n      if (inplace && !ShapeUtil.areEqual(outputShape, a.dims)) {\n        // B is not broadcastable to A, failed to calculate inplace.\n        return undefined;\n      }\n\n      const size = ShapeUtil.size(outputShape);\n      const c = inplace ? a : new Tensor(outputShape, resultType || a.type);\n\n      // both inputs are scalars\n      if (outputShape.length === 0) {\n        c.set([], op(a.get([]), b.get([])));\n      }\n\n      // atleast one input is a non-scalar\n      else {\n        const outputIndices = new Array<number>(outputShape.length);\n        const originalIndicesA = new Array(a.dims.length);\n        const originalIndicesB = new Array(b.dims.length);\n        let valA: string|number = 0;\n        let valB: string|number = 0;\n        let isAScalar = false;\n        let isBScalar = false;\n        if (a.dims.length === 0) {\n          valA = a.get([]);\n          isAScalar = true;\n        }\n        if (b.dims.length === 0) {\n          valB = b.get([]);\n          isBScalar = true;\n        }\n        let rest: number;\n        for (let i = 0; i < size; i++) {\n          // traversal indices\n          rest = i;\n          for (let j = outputShape.length - 1; j >= 0; j--) {\n            outputIndices[j] = rest % outputShape[j];\n            rest = Math.floor(rest / outputShape[j]);\n          }\n\n          if (!isAScalar) {\n            // map outputIndices (which is actually broadcasted) to the originalIndices\n            BroadcastUtil.fillIndex(outputIndices, a.dims, originalIndicesA);\n            valA = a.get(originalIndicesA);\n          }\n          if (!isBScalar) {\n            BroadcastUtil.fillIndex(outputIndices, b.dims, originalIndicesB);\n            valB = b.get(originalIndicesB);\n          }\n\n          c.set(outputIndices, op(valA, valB));\n        }\n      }\n\n      return c;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determine the broadcasted dims in input shape based on the given output shape.\n   * Note that this function only returns the broadcasted dims.\n   * @param inputShape The input shape\n   * @param outputShape The output shape\n   * @returns The broadcasted dims in input shape.\n   */\n  static getBroadcastDims(inputShape: readonly number[], outputShape: readonly number[]): number[] {\n    const inRank = inputShape.length;\n    const dims: number[] = [];\n    for (let i = 0; i < inRank; i++) {\n      const dim = inRank - 1 - i;\n      const a = inputShape[dim] || 1;\n      const b = outputShape[outputShape.length - 1 - i] || 1;\n      if (b > 1 && a === 1) {\n        dims.unshift(dim);\n      }\n    }\n    return dims;\n  }\n}\n\n// copy array helper\n// mimics memcpy as much as possible\nexport function arrayCopyHelper(\n    target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n    blockSize: number) {\n  if (sourceIndex < 0 || sourceIndex >= source.length) {\n    throw new Error('sourceIndex out of bounds');\n  }\n  if (targetIndex < 0 || targetIndex >= target.length) {\n    throw new Error('targetIndex out of bounds');\n  }\n  if (sourceIndex + blockSize > source.length) {\n    throw new Error('source indices to be copied are outside bounds');\n  }\n  if (targetIndex + blockSize > target.length) {\n    throw new Error('target array is too small to hold result');\n  }\n\n  for (let offset = 0; offset < blockSize; offset++) {\n    target[targetIndex + offset] = source[sourceIndex + offset];\n  }\n}\n\nexport class GemmUtil {\n  // will make sure input shapes are compatible for this op\n  // and return back the shape of the output in the form of a tuple\n  // will throw exception if the input shapes are not compatible\n  static getShapeOfGemmResult(\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\n      biasShape?: readonly number[]): readonly number[] {\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\n      throw new Error('shape need to be of size 2');\n    }\n\n    let M: number;\n    let K: number;\n    let N: number;\n\n    if (transLeft) {\n      M = leftShape[1];\n      K = leftShape[0];\n    } else {\n      M = leftShape[0];\n      K = leftShape[1];\n    }\n\n    let kDim = -1;\n\n    if (transRight) {\n      N = rightShape[0];\n      kDim = 1;\n    } else {\n      N = rightShape[1];\n      kDim = 0;\n    }\n\n    if (rightShape[kDim] !== K) {\n      throw new Error('dimension mismatch');\n    }\n\n    if (M <= 0 || N <= 0 || K <= 0) {\n      throw new Error('invalid shape specified');\n    }\n\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\n      throw new Error('gemm: invalid bias shape for broadcast');\n    }\n\n    return [M, N, K];\n  }\n}\n\nexport class ProtoUtil {\n  static tensorDataTypeFromProto(typeProto: onnx.TensorProto.DataType|\n                                 onnxruntime.experimental.fbs.TensorDataType): Tensor.DataType {\n    switch (typeProto) {\n      case onnx.TensorProto.DataType.INT8:\n        return 'int8';\n      case onnx.TensorProto.DataType.UINT8:\n        return 'uint8';\n      case onnx.TensorProto.DataType.BOOL:\n        return 'bool';\n      case onnx.TensorProto.DataType.INT16:\n        return 'int16';\n      case onnx.TensorProto.DataType.UINT16:\n        return 'uint16';\n      case onnx.TensorProto.DataType.INT32:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT32:\n        return 'uint32';\n      case onnx.TensorProto.DataType.FLOAT:\n        return 'float32';\n      case onnx.TensorProto.DataType.DOUBLE:\n        return 'float64';\n      case onnx.TensorProto.DataType.STRING:\n        return 'string';\n\n      // For INT64/UINT64, reduce their value to 32-bits.\n      // Should throw exception when overflow\n      case onnx.TensorProto.DataType.INT64:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT64:\n        return 'uint32';\n\n      default:\n        throw new Error(`unsupported data type: ${onnx.TensorProto.DataType[typeProto]}`);\n    }\n  }\n\n  static tensorDataTypeStringToEnum(type: string): onnx.TensorProto.DataType {\n    switch (type) {\n      case 'int8':\n        return onnx.TensorProto.DataType.INT8;\n      case 'uint8':\n        return onnx.TensorProto.DataType.UINT8;\n      case 'bool':\n        return onnx.TensorProto.DataType.BOOL;\n      case 'int16':\n        return onnx.TensorProto.DataType.INT16;\n      case 'uint16':\n        return onnx.TensorProto.DataType.UINT16;\n      case 'int32':\n        return onnx.TensorProto.DataType.INT32;\n      case 'uint32':\n        return onnx.TensorProto.DataType.UINT32;\n      case 'float32':\n        return onnx.TensorProto.DataType.FLOAT;\n      case 'float64':\n        return onnx.TensorProto.DataType.DOUBLE;\n      case 'string':\n        return onnx.TensorProto.DataType.STRING;\n      case 'int64':\n        return onnx.TensorProto.DataType.INT64;\n      case 'uint64':\n        return onnx.TensorProto.DataType.UINT64;\n\n      default:\n        throw new Error(`unsupported data type: ${type}`);\n    }\n  }\n\n  static tensorDimsFromProto(dims: Array<number|Long>): number[] {\n    // get rid of Long type for dims\n    return dims.map(d => Long.isLong(d) ? d.toNumber() : d);\n  }\n\n  static tensorValueTypeFromProto(valueType: onnx.TypeProto.ITensor): Graph.ValueType {\n    return {\n      tensorType: ProtoUtil.tensorDataTypeFromProto(valueType.elemType!),\n      shape: {dims: ProtoUtil.tensorDimsFromProto(valueType.shape!.dim!.map(d => d.dimValue!))}\n    };\n  }\n\n  static tensorDimsFromORTFormat(tensor: onnxruntime.experimental.fbs.Tensor) {\n    const dims = [];\n    for (let i = 0; i < tensor.dimsLength(); i++) {\n      dims.push(LongUtil.longToNumber(tensor.dims(i)!));\n    }\n    return dims;\n  }\n\n  static tensorAttributesFromORTFormat(node: onnxruntime.experimental.fbs.Node) {\n    const attributes = [];\n    for (let i = 0; i < node.attributesLength(); i++) {\n      attributes.push(node.attributes(i)!);\n    }\n    return attributes;\n  }\n}\n\nexport class LongUtil {\n  // This function is called to get a number from long type of data for attribute, dim, and ir version,\n  // which values are signed integers.\n  // To make it more generic, add an optional paramter to convert to a unsigned number.\n  static longToNumber(n: Long|flatbuffers.Long|number, unsigned?: boolean) {\n    if (Long.isLong(n)) {\n      return n.toNumber();\n    } else if (n instanceof flatbuffers.Long) {\n      return Long.fromValue({low: n.low, high: n.high, unsigned: unsigned ?? false}).toNumber();\n    }\n    return n;\n  }\n  static isLong(n: unknown) {\n    return Long.isLong(n) || n instanceof flatbuffers.Long;\n  }\n}\n\nexport class ShapeUtil {\n  static size(dims: readonly number[]): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  // `axis` inclusive\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  // `axis` exclusive\n  static sizeToDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be 0 or negative.\n      if (dims[i] <= 0) {\n        throw new Error(\n            // eslint-disable-next-line max-len\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  static computeStrides(dims: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [1];\n    }\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = dims[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * dims[i + 1];\n    }\n    return strides;\n  }\n\n  static transpose(dims: readonly number[]): readonly number[] {\n    const copy = dims.slice();\n    return copy.reverse();\n  }\n\n  static indicesToOffset(indices: readonly number[], strides: readonly number[], axis?: number): number {\n    if (axis === undefined) {\n      axis = indices.length;\n    }\n    let offset = 0;\n    for (let i = 0; i < axis; ++i) {\n      offset += strides[i] * indices[i];\n    }\n    return offset;\n  }\n\n  static offsetToIndices(offset: number, strides: readonly number[]): readonly number[] {\n    const rank = strides.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [offset * strides[0]];\n    }\n    const indices: number[] = new Array(strides.length);\n    for (let i = 0; i < indices.length - 1; ++i) {\n      indices[i] = Math.floor(offset / strides[i]);\n      offset -= indices[i] * strides[i];\n    }\n    indices[indices.length - 1] = offset;\n    return indices;\n  }\n\n  /**\n   * normailze axis of range [-r, r) into [0, r).\n   */\n  static normalizeAxis(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  static normalizeAxes(axes: readonly number[], tensorRank: number): number[] {\n    return axes.map(x => this.normalizeAxis(x, tensorRank));\n  }\n\n  // Increment an index into a tensor (in lexicographic\n  // ordering), wrapping around the specified upper_bound.\n  /**\n   * Increment an index into a tensor (in lexicographic ordering), wrapping around the specified upper_bound.\n   * @param index Given index to increment (Will be mutated)\n   * @param dims The dimensions of the tensor for which the given index corresponds to\n   * @param axisToIncrementOn The 1-indexed axis to increment on. If undefined, axisToIncrementOn == rank\n   */\n  static incrementIndex(index: number[], dims: readonly number[], axisToIncrementOn?: number) {\n    if (dims.length === 0 || index.length === 0) {\n      throw new Error('Index incrementing unsupported for scalar Tensor');\n    }\n    if (axisToIncrementOn === undefined) {\n      axisToIncrementOn = dims.length;\n    } else {\n      if (axisToIncrementOn <= 0 || axisToIncrementOn > dims.length) {\n        throw new Error('Incorrect axis to increment on');\n      }\n    }\n\n    for (let k = axisToIncrementOn - 1; k >= 0; --k) {\n      index[k]++;\n      if (index[k] < dims[k]) {\n        break;\n      }\n      index[k] = 0;\n    }\n  }\n\n  /**\n   * Produces a new dimensions array based on the values in the 'originalDimensions' and 'shape' array\n   * Used in Reshape\n   * @param originalDims Original Shape array\n   * @param shapeHints array containing values to compute the new dimensions\n   * For example:\n   * originalDims = [2,2] and shapeHints = [0,-1] will return [2,2]\n   * originalDims = [2,2] and shapeHints = [4] will return [4]\n   * originalDims = [2,2] and shapeHints = [5] will throw an exception\n   * https://github.com/onnx/onnx/blob/main/docs/Operators.md#Reshape\n   */\n\n  static calculateReshapedDims(originalDims: readonly number[], shapeHints: ArrayLike<number>): number[] {\n    // reshape to a Scalar Tensor\n    if (shapeHints.length === 0) {\n      if (originalDims.length === 0 || ShapeUtil.size(originalDims) === 1) {\n        return [];\n      } else {\n        throw new Error('cannot reshape to a scalar Tensor');\n      }\n    }\n\n    const nDims = shapeHints.length;\n    const reshapedDims = new Array<number>(nDims);\n    let unknownDimension = -1;\n    let newTensorSize = 1;\n    for (let i = 0; i < nDims; i++) {\n      if (shapeHints[i] < -1) {\n        throw new Error('a dimension in shape hints cannot be less than -1');\n      }\n      if (shapeHints[i] === -1) {\n        if (unknownDimension !== -1) {\n          throw new Error('at most one dimension in shape hints can be -1');\n        }\n        unknownDimension = i;\n      } else {\n        if (shapeHints[i] === 0) {\n          if (i >= originalDims.length) {\n            throw new Error('the dimension with value zero exceeds the dimension size of the input tensor');\n          }\n          reshapedDims[i] = originalDims[i];\n        } else {\n          reshapedDims[i] = shapeHints[i];\n        }\n        newTensorSize *= reshapedDims[i];\n      }\n    }\n\n    const oldTensorSize = ShapeUtil.size(originalDims);\n    if (unknownDimension !== -1) {\n      if (oldTensorSize % newTensorSize !== 0) {\n        throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${\n            originalDims}] Output shape: [${shapeHints}]`);\n      }\n      reshapedDims[unknownDimension] = oldTensorSize / newTensorSize;\n    }\n    // validate sizes from originalDims and reshapedDims match\n    else {\n      if (newTensorSize !== oldTensorSize) {\n        throw new Error('reshapedDims and originalDims don\\'t have matching sizes');\n      }\n    }\n    return reshapedDims;\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n\n  /**\n   * Validates if the given `dims` or `shape` is valid in ONNX.js context and returns data size\n   * @param dims - input `dims` that needs to be checked\n   */\n  static validateDimsAndCalcSize(dims: readonly number[]): number {\n    if (dims.length > 6) {\n      throw new TypeError('Only rank 0 to 6 is supported for tensor shape.');\n    }\n    let size = 1;\n    for (const n of dims) {\n      if (!Number.isInteger(n)) {\n        throw new TypeError(`Invalid shape: ${n} is not an integer`);\n      }\n      if (n < 0 || n > 2147483647) {\n        throw new TypeError(`Invalid shape: length ${n} is not allowed`);\n      }\n      size *= n;\n    }\n    return size;\n  }\n\n  /**\n   * Determines the shape of output tensor y = flatten(x, axis)\n   * @param dims - shape of input tensor\n   * @param axis - flatten axis, in the range [-r, r]\n   */\n  static flattenShape(dims: readonly number[], axis: number): readonly number[] {\n    if (axis < 0) {\n      axis += dims.length;\n    }\n    const total = dims.reduce((x, y) => x * y, 1);\n    const right = dims.slice(axis).reduce((x, y) => x * y, 1);\n    const outputDims = [total / right, right];\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = squeeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - squeeze axes\n   */\n  static squeezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>();\n\n    // sanity check\n    axes = ShapeUtil.normalizeAxes(axes, dims.length);\n\n    for (let i = 0; i < dims.length; i++) {\n      const inSqueezeList = axes.indexOf(i) >= 0;\n      if (inSqueezeList && dims[i] !== 1) {\n        throw new Error('squeeze an axis of size different than 1');\n      }\n\n      if ((axes.length === 0 && dims[i] > 1) || (axes.length > 0 && !inSqueezeList)) {\n        outputDims.push(dims[i]);\n      }\n    }\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = unsqueeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - unsqueeze axes\n   */\n  static unsqueezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>(dims.length + axes.length);\n\n    // initialize the array elements to 0\n    outputDims.fill(0);\n\n    // set all axes indices to 1 in outputDims and check for duplicates\n    for (let i = 0; i < axes.length; i++) {\n      const axis = ShapeUtil.normalizeAxis(axes[i], outputDims.length);\n      if (axis >= outputDims.length) {\n        throw new Error('\\'axes\\' has an out of range axis');\n      }\n      if (outputDims[axis] !== 0) {\n        throw new Error('\\'axes\\' has a duplicate axis');\n      }\n\n      outputDims[axis] = 1;\n    }\n\n    // fill in the zero entries of outputDims with the input tensor's shape\n    let inputDimsIterator = 0;\n    for (let i = 0; i < outputDims.length; i++) {\n      if (outputDims[i] === 0) {\n        outputDims[i] = dims[inputDimsIterator++];\n      }\n    }\n\n    // sanity check assertion. 'inputDimsIterator'\n    // should be equal to the length of 'dims'\n    if (inputDimsIterator !== dims.length) {\n      throw new Error('the unsqueezed dimension could not be established');\n    }\n\n    return outputDims;\n  }\n}\n\n// bunch of helper methods that do a variety of math operations\nexport class MathUtil {\n  // y = (x*x) + y\n  static sqr(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += Math.pow(source[sourceIndex + offset], 2);\n    }\n  }\n\n  // y = ax + y\n  static axpy(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, alpha: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += (alpha * source[sourceIndex + offset]);\n    }\n  }\n\n  // y = pow(x, b)\n  static powx(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, b: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = Math.pow(source[sourceIndex + offset], b);\n    }\n  }\n\n  // y = x * y\n  static mul(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = (source[sourceIndex + offset] * target[targetIndex + offset]);\n    }\n  }\n}\n\nexport class SplitUtil {\n  /**\n   * Calculates new Shapes from existing one and the splits given along the axis provides\n   * @param dims Shape of the Tensor to be splitted into two or more Shapes\n   * @param axis The dimension along which the Tensor will be split\n   * @param splits Offsets for the start of each split\n   */\n  static splitShape(dims: readonly number[], axis: number, split: number[], numOutputs?: number):\n      [number[][], number[]] {\n    if (split.length === 0) {\n      if (!numOutputs) {\n        throw new Error('need to know number of outputs when the \\'split\\' attribute is not specified');\n      }\n      SplitUtil.determineSplit(dims[axis], numOutputs, split);\n    }\n\n    const shapes: number[][] = [];\n    const offsets = [0];\n    for (let i = 0; i < split.length; ++i) {\n      if (i !== 0) {\n        offsets.push(offsets[i - 1] + split[i - 1]);\n      }\n      const shape = dims.slice();\n      shape[axis] = split[i];\n      shapes.push(shape);\n    }\n    return [shapes, offsets];\n  }\n\n  static determineSplit(numElementsAlongAxis: number, numOutputs: number, split: number[]) {\n    // If 'split' is not specified by the user, we need to partition the number of elements equally among the outputs\n    if (numElementsAlongAxis % numOutputs !== 0) {\n      throw new Error('cannot split tensor to equal sized parts');\n    }\n    for (let i = 0; i < numOutputs; ++i) {\n      split.push(numElementsAlongAxis / numOutputs);\n    }\n  }\n}\n\nexport class ReduceUtil {\n  /**\n   * Perform reduce operations on the specific operator\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduce(\n      a: Tensor, axes: number[], keepdims: boolean, op1: (b: number) => number,\n      op2: (a: number, b: number) => number): Tensor {\n    const dims = a.dims.slice(0);\n    // if axes is not set, perform reduce on all axes\n    if (axes.length === 0) {\n      dims.forEach((d, ind) => axes.push(ind));\n    }\n    // get a temporary broadcastable output shape\n    const outputDims = ReduceUtil.calcReduceShape(dims, axes, true);\n\n    // loop through the output and calculate result one by one\n    const size = ShapeUtil.size(outputDims);\n    const y = new Tensor(outputDims, a.type);\n    const strides = ShapeUtil.computeStrides(outputDims);\n    const inputStrides = ShapeUtil.computeStrides(dims);\n    const indicesY = new Array(dims.length);\n    for (let i = 0; i < size; i++) {\n      const indices = ShapeUtil.offsetToIndices(i, strides);\n      // map index\n      BroadcastUtil.fillIndex(indices, dims, indicesY);\n      y.set(\n          indices,\n          ReduceUtil.calcReduceByAxis(\n              a.numberData, axes, dims, 0, ShapeUtil.indicesToOffset(indicesY, inputStrides), op1, op2));\n    }\n\n    if (keepdims) {\n      return y;\n    } else {\n      // keepdims == 0, calculate the expected shape\n      return new Tensor(\n          ReduceUtil.calcReduceShape(dims, axes, keepdims), y.type, undefined, undefined, y.data, y.dataId);\n    }\n  }\n\n  /**\n   * Perform reduce operations on the specific operator on specific axes\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param dims The input dimension.\n   * @param curAxisInd Index in axes specifying the current dimension along\n   *      which the tensor will be reduced\n   * @param pos The current index of element to perform operation\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduceByAxis(\n      input: Tensor.NumberType, axes: number[], dims: number[], curAxisInd: number, pos: number,\n      op1: (b: number) => number, op2: (a: number, b: number) => number): number {\n    let res = 0;\n    if (curAxisInd >= axes.length) {\n      return op1(input[pos]);\n    }\n    const axis = axes[curAxisInd];\n    const step = axis >= dims.length ? 1 : ShapeUtil.size(dims.slice(axis + 1));\n    for (let i = 0; i < dims[axis]; i++) {\n      res = i === 0 ? ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2) :\n                      op2(res, ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2));\n      pos += step;\n    }\n    return res;\n  }\n\n  /**\n   * Calculate the expected shape of a reduce operation\n   * @param dims The input tensor dimension\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   */\n  static calcReduceShape(dims: readonly number[], axes: readonly number[], keepDims: boolean): number[] {\n    const outputDims = dims.slice();\n    for (let i = 0; i < axes.length; i++) {\n      if (keepDims) {\n        outputDims[axes[i]] = 1;\n      } else {\n        outputDims[axes[i]] = 0;\n      }\n    }\n    return outputDims.filter(dim => dim !== 0);\n  }\n}\n\nexport class PoolConvUtil {\n  /**\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   */\n  static adjustPoolAttributes(\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\n      dilations: number[], pads: number[]) {\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\n    }\n\n    if (isGlobalOperator) {\n      // adjust kernel shape to cover the input dims\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        if (dim >= kernelShape.length) {\n          kernelShape.push(inputDims[dim + 2]);\n        } else {\n          kernelShape[dim] = inputDims[dim + 2];\n        }\n      }\n    }\n\n    // adjust strides length to match kernel shape length\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < strides.length) {\n        if (strides[dim] < 0) {\n          throw new Error('strides should be greater than or equal to 1');\n        }\n      } else {\n        strides.push(1);\n      }\n    }\n\n    // adjust dilation value\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < dilations.length) {\n        if (dilations[dim] < 0) {\n          throw new Error('dilations should be greater than or equal to 1');\n        }\n      } else {\n        dilations.push(1);\n      }\n    }\n\n    // adjust pads length to match 2 * kernel shape length\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\n      if (dim < pads.length) {\n        if (pads[dim] < 0) {\n          throw new Error('pad should be greater than or equal to 1');\n        }\n      } else {\n        pads.push(0);\n      }\n    }\n\n    // sanity checks for values in kernel shapes and pads\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (kernelShape[dim] <= 0) {\n        throw new Error('kernel shapes need to be greater than 0');\n      }\n\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\n        throw new Error('pads should be smaller than kernel');\n      }\n    }\n  }\n\n  // adjust pad values based on 'autoPad' attribute\n  static adjustPadsBasedOnAutoPad(\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\n      kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (!autoPad) {\n      return;\n    }\n\n    if (pads.length !== 2 * (inputDims.length - 2)) {\n      throw new Error('length of pads should be twice the length of data dimensions');\n    }\n\n    if (strides.length !== (inputDims.length - 2)) {\n      throw new Error('length of strides should be the length of data dimensions');\n    }\n\n    if (kernelShape.length !== (inputDims.length - 2)) {\n      throw new Error('length of kernel shapes should be the length of data dimensions');\n    }\n\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\n      PoolConvUtil.adjustPadAndReturnShape(\n          inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n          autoPad);\n    }\n  }\n\n  /**\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computePoolOutputShape(\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0) {\n      throw new Error('input shape must be of size greater than 0');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], inputDims[1]];\n\n    PoolConvUtil.computeShapeHelper(\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  /**\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computeConvOutputShape(\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], filterDims[0]];\n\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\n  // called by computePoolOutputShape() and computeConvOutputShape()\n  // adjust pads based on 'autoPad' attribute prior to shape computation\n  private static computeShapeHelper(\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (isGlobalOperator) {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(1);\n      }\n    } else {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n            autoPad));\n      }\n    }\n  }\n\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\n  private static adjustPadAndReturnShape(\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\n      padTailIndex: number, autoPad?: string): number {\n    const dkernel = dilation * (kernel - 1) + 1;\n    if (autoPad && autoPad !== 'NOTSET') {\n      switch (autoPad) {\n        case 'VALID':\n          pads[padHeadIndex] = 0;\n          pads[padTailIndex] = 0;\n          return Math.floor(((inSize - dkernel) / stride) + 1);\n        case 'SAME_LOWER':\n        case 'SAME_UPPER':\n          if (dilation !== 1) {\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\n          } else {\n            const legacyTargetSize = (inSize + stride - 1) / stride;\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\n            pads[padHeadIndex] =\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\n          }\n        default:\n          throw new Error('Unsupported AutoPad type');\n      }\n    } else {\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\n    }\n  }\n}\n\nexport const MIN_CLIP = -3.4028234663852886e+38;\nexport const MAX_CLIP = 3.4028234663852886e+38;\n\nexport function decodeUtf8String(buffer: Uint8Array): string {\n  return new TextDecoder().decode(buffer);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport {LOG_DEBUG} from './log';\nimport {TensorView} from './tensor';\nimport {createGpuDataManager, GpuDataManager} from './webgpu/gpu-data-manager';\nimport {RunFunction, WEBGPU_OP_RESOLVE_RULES} from './webgpu/op-resolve-rules';\nimport {ProgramManager} from './webgpu/program-manager';\nimport {ComputeContext, GpuData, GpuDataType, ProgramInfo, ProgramInfoLoader} from './webgpu/types';\n\n/**\n * get a unique key representing the program from the program info,input shapes and types.\n *\n * @returns a unique key is a shorter string than the shader source, which contains all the information to identify a\n * program. if the key is the same, the program shader source should be the same, so we can reuse the program.\n *\n */\nconst getProgramInfoUniqueKey =\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTensorShapes: ReadonlyArray<TensorView['dims']>,\n     inputGpuDataTypes: readonly GpuDataType[]): string => {\n      const inputTensorShapesToString = inputTensorShapes.map(d => `${d.join(',')}`).join('_');\n      const inputGpuDataTypesToString = inputGpuDataTypes.join('_');\n      let key = programInfo.name;\n      if (programInfo.cacheHint) {\n        key += '[' + programInfo.cacheHint + ']';\n      }\n      key += ':' + inputTensorShapesToString + ';' + inputGpuDataTypesToString;\n      return key;\n    };\n\n/**\n * this class is designed to store status and being used as a singleton for JSEP. It will be passed to jsepInit() as\n * the first parameter so that it is stored for future use.\n */\nexport class WebGpuBackend {\n  device: GPUDevice;\n  /**\n   * an instance of GpuDataManager to manage a GpuDataId -> GpuBuffer mapping\n   */\n  gpuDataManager: GpuDataManager;\n  /**\n   * an instance of ProgramManager to build and run WebGPU compute shader program, and manage a ProgramKey -> Program\n   * artifacts mapping\n   */\n  programManager: ProgramManager;\n\n  /**\n   * representing the kernel ID of which is currently being computed (CPU code perspective).\n   * `null` means no kernel is being computed.\n   * only one kernel can be computed at a moment.\n   */\n  currentKernelId: number|null = null;\n  /**\n   * a list of temporary GPU data for the current kernel. should release when the kernel done computation.\n   */\n  private temporaryData: GpuData[];\n  /**\n   * a KernelID -> a GPU data list, which stores persistent GPU data owned by the specific kernel.\n   */\n  private kernelPersistentData: Map<number, GpuData[]>;\n  /**\n   * a KernelID -> a custom data, which stores custom data owned by the specific kernel.\n   */\n  private kernelCustomData: Map<number, {[key: string]: unknown}>;\n  /**\n   * get the custom data of the current kernel\n   */\n  get currentKernelCustomData(): {[key: string]: unknown} {\n    if (this.currentKernelId === null) {\n      throw new Error('currentKernelCustomData(): currentKernelId is null. (should not happen)');\n    }\n\n    let data = this.kernelCustomData.get(this.currentKernelId);\n    if (!data) {\n      data = {};\n      this.kernelCustomData.set(this.currentKernelId, data);\n    }\n\n    return data;\n  }\n\n  /**\n   * a KernelID -> kernel info mapping. value is [ name, run function, [optional] preprocess_attribute_once function ]\n   */\n  kernels: Map<number, [string, RunFunction, [((attribute: unknown) => unknown) | undefined, unknown]]>;\n\n  commandEncoder: GPUCommandEncoder|null = null;\n  computePassEncoder: GPUComputePassEncoder|null = null;\n  pendingDispatchNumber = 0;\n\n  profilingEnabled = false;\n  profilingQuerySet: GPUQuerySet;\n  profilingTimeBase?: bigint;\n\n  async initialize(): Promise<void> {\n    if (!navigator.gpu) {\n      // WebGPU is not available.\n      throw new Error('WebGpuBackend: WebGPU is not available.');\n    }\n\n    const adapter = await navigator.gpu.requestAdapter();\n    if (!adapter) {\n      throw new Error('WebGpuBackend: Failed to get GPU adapter.');\n    }\n\n    const deviceDescriptor: GPUDeviceDescriptor = {\n      requiredLimits: {\n        maxComputeWorkgroupStorageSize: adapter.limits.maxComputeWorkgroupStorageSize,\n        maxComputeWorkgroupsPerDimension: adapter.limits.maxComputeWorkgroupsPerDimension,\n        maxStorageBufferBindingSize: adapter.limits.maxStorageBufferBindingSize,\n      }\n    };\n    // WebGPU Spec: Timestamp Queries Inside Passes\n    // https://github.com/gpuweb/gpuweb/blob/main/proposals/timestamp-query-inside-passes.md\n    if (adapter.features.has('timestamp-query-inside-passes') && env.webgpu.profilingMode === 'default') {\n      this.profilingEnabled = true;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      deviceDescriptor.requiredFeatures = ['timestamp-query-inside-passes' as any];\n    }\n\n    this.device = await adapter.requestDevice(deviceDescriptor);\n    this.gpuDataManager = createGpuDataManager(this);\n    this.programManager = new ProgramManager(this);\n    this.kernels = new Map();\n    this.kernelPersistentData = new Map();\n    this.kernelCustomData = new Map();\n    // TODO: set up flags\n\n    this.device.onuncapturederror = ev => {\n      if (ev.error instanceof GPUValidationError) {\n        // eslint-disable-next-line no-console\n        console.error(`An uncaught WebGPU validation error was raised: ${ev.error.message}`);\n      }\n    };\n\n    if (this.profilingEnabled) {\n      this.profilingQuerySet = this.device.createQuerySet({\n        type: 'timestamp',\n        count: 2,\n      });\n    }\n  }\n\n  dispose(): void {\n    // currently, we do not do anything in this function. In all known use cases, we don't have the requirement to\n    // actually dispose the WebGpuBackend instance, because it's always used as a singleton.\n    //\n    // revisit this place if we get real requirement to dispose the instance.\n  }\n\n  getCommandEncoder(): GPUCommandEncoder {\n    if (!this.commandEncoder) {\n      this.commandEncoder = this.device.createCommandEncoder();\n    }\n    return this.commandEncoder;\n  }\n\n  getComputePassEncoder(): GPUComputePassEncoder {\n    if (!this.computePassEncoder) {\n      this.computePassEncoder = this.getCommandEncoder().beginComputePass();\n    }\n    return this.computePassEncoder;\n  }\n\n  endComputePass(): void {\n    if (this.computePassEncoder) {\n      this.computePassEncoder.end();\n      this.computePassEncoder = null;\n    }\n  }\n\n  flush(): void {\n    this.endComputePass();\n    this.device.queue.submit([this.getCommandEncoder().finish()]);\n    this.gpuDataManager.refreshPendingBuffers();\n    this.commandEncoder = null;\n    this.pendingDispatchNumber = 0;\n  }\n\n  /**\n   * run a WebGPU program.\n   * @param program either a ProgramInfo instance containing metadata including the shader code, or a function that\n   * can be called and return a ProgramInfo instance\n   * @param inputs a TensorView array. each element represents a value already exists in GPU.\n   * @param outputIndices an indices array. each element can be either -1 (temporary data), -2 (persistent data) or an\n   * index to the kernel's output.\n   * @param createKernelOutput a callback function that create a value to kernel's output with the given index\n   * @param createIntermediateOutput a callback function that create a value as a intermediate value, either temporary\n   * or persistent (owned by the current kernel)\n   * @returns a TensorView array representing the result.\n   */\n  run(program: ProgramInfoLoader|ProgramInfo, inputs: readonly TensorView[], outputIndices: readonly number[],\n      createKernelOutput: (index: number, dataType: number, dims: readonly number[]) => TensorView,\n      createIntermediateOutput: (dataType: number, dims: readonly number[]) => TensorView): TensorView[] {\n    if (inputs.length !== program.inputTypes.length) {\n      throw new Error(`Input size must be equal to ${program.inputTypes.length}.`);\n    }\n\n    // create info for inputs\n    const inputDatas: GpuData[] = [];\n    for (let i = 0; i < inputs.length; ++i) {\n      const gpuData = this.gpuDataManager.get(inputs[i].data);\n      if (!gpuData) {\n        throw new Error(`no GPU data for input: ${inputs[i].data}`);\n      }\n      inputDatas[i] = gpuData;\n    }\n\n    const key = getProgramInfoUniqueKey(program, inputs.map(i => i.dims), inputDatas.map(i => i.type));\n    let artifact = this.programManager.getArtifact(key);\n    const programInfo = artifact ?\n        artifact.programInfo :\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\n                                                                    (program as ProgramInfo));\n\n    // check output indices\n    const validatedOutputIndices = outputIndices.length === 0 ? programInfo.outputs.map((_, i) => i) : outputIndices;\n    if (validatedOutputIndices.length !== programInfo.outputs.length) {\n      throw new Error(`Output size ${validatedOutputIndices.length} must be equal to ${programInfo.outputs.length}.`);\n    }\n\n    // create info for outputs\n    const outputTensorViews: TensorView[] = [];\n    const outputDatas: GpuData[] = [];\n    for (let i = 0; i < programInfo.outputs.length; ++i) {\n      // value -1 and -2 are used for creating temporary and persistent outputs. so -2, -1 and 0, 1, 2, ... are valid\n      // output indices. see type definition of ComputeContextInputsOutputsMapping for more details.\n      if (!Number.isInteger(validatedOutputIndices[i]) || validatedOutputIndices[i] < -2 ||\n          validatedOutputIndices[i] >= programInfo.outputs.length) {\n        throw new Error(`Invalid output index: ${validatedOutputIndices[i]}`);\n      }\n      const isTemporary = validatedOutputIndices[i] === -1;\n      const isPersistent = validatedOutputIndices[i] === -2;\n      const tensorView = (isTemporary || isPersistent) ?\n          createIntermediateOutput(programInfo.outputs[i].dataType, programInfo.outputs[i].dims) :\n          createKernelOutput(validatedOutputIndices[i], programInfo.outputs[i].dataType, programInfo.outputs[i].dims);\n      const gpuData = this.gpuDataManager.get(tensorView.data);\n      if (!gpuData) {\n        throw new Error(`no GPU data for output: ${tensorView.data}`);\n      }\n      if (isTemporary) {\n        this.temporaryData.push(gpuData);\n      }\n      if (isPersistent) {\n        let persistentData = this.kernelPersistentData.get(this.currentKernelId!);\n        if (!persistentData) {\n          persistentData = [];\n          this.kernelPersistentData.set(this.currentKernelId!, persistentData);\n        }\n        persistentData.push(gpuData);\n      }\n      outputTensorViews.push(tensorView);\n      outputDatas.push(gpuData);\n    }\n\n    const normalizedDispatchGroup = this.programManager.normalizeDispatchGroupSize(programInfo.dispatchGroup(inputs));\n\n    if (!artifact) {\n      artifact = this.programManager.build(programInfo, normalizedDispatchGroup);\n      this.programManager.setArtifact(key, artifact);\n    }\n\n    LOG_DEBUG(\n        'info',\n        () => `[ProgramManager] run \"${programInfo.name}\" (key=${key}) with ${normalizedDispatchGroup[0]}x${\n            normalizedDispatchGroup[1]}x${normalizedDispatchGroup[2]}`);\n    this.programManager.run(artifact, inputDatas, outputDatas, normalizedDispatchGroup);\n\n    return outputTensorViews;\n  }\n\n  upload(gpuDataId: number, data: Uint8Array): void {\n    this.gpuDataManager.upload(gpuDataId, data);\n  }\n\n  memcpy(src: number, dst: number): void {\n    this.gpuDataManager.memcpy(src, dst);\n  }\n\n  async download(gpuDataId: number, getTargetBuffer: () => Uint8Array): Promise<void> {\n    const arrayBuffer = await this.gpuDataManager.download(gpuDataId);\n\n    // the underlying buffer may be changed after the async function is called. so we use a getter function to make sure\n    // the buffer is up-to-date.\n    const data = getTargetBuffer();\n    data.set(new Uint8Array(arrayBuffer));\n  }\n\n  alloc(size: number): number {\n    return this.gpuDataManager.create(size).id;\n  }\n\n  free(ptr: number): number {\n    return this.gpuDataManager.release(ptr);\n  }\n\n  createKernel(name: string, kernelId: number, attribute: unknown): void {\n    const op = WEBGPU_OP_RESOLVE_RULES.get(name);\n    if (!op) {\n      throw new Error(`kernel not implemented: ${name}`);\n    }\n\n    this.kernels.set(kernelId, [name, op[0], [op[1], attribute]]);\n  }\n\n  releaseKernel(kernelId: number): void {\n    const persistentData = this.kernelPersistentData.get(kernelId);\n    if (persistentData) {\n      for (const data of persistentData) {\n        this.gpuDataManager.release(data.id);\n      }\n      this.kernelPersistentData.delete(kernelId);\n    }\n\n    this.kernelCustomData.delete(kernelId);\n    this.kernels.delete(kernelId);\n  }\n\n  computeKernel(kernelId: number, context: ComputeContext): number {\n    const kernel = this.kernels.get(kernelId);\n    if (!kernel) {\n      throw new Error(`kernel not created: ${kernelId}`);\n    }\n    const [name, kernelEntry, attributes] = kernel;\n    if (this.currentKernelId !== null) {\n      throw new Error(`kernel \"${name}\" is not allowed to be called recursively`);\n    }\n    this.currentKernelId = kernelId;\n\n    // parse attributes if necessary\n    if (attributes[0]) {\n      attributes[1] = attributes[0](attributes[1]);\n      attributes[0] = undefined;\n    }\n\n    LOG_DEBUG('info', () => `[WebGPU] Start to run kernel \"${name}\"...`);\n\n    this.temporaryData = [];\n    try {\n      kernelEntry(context, attributes[1]);\n      return 0;  // ORT_OK\n    } catch (e) {\n      LOG_DEBUG('warning', `[WebGPU] Kernel \"${name}\" failed. Error: ${e}`);\n      return 1;  // ORT_FAIL\n    } finally {\n      for (const data of this.temporaryData) {\n        this.gpuDataManager.release(data.id);\n      }\n      this.temporaryData = [];\n      this.currentKernelId = null;\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OrtWasmModule} from '../binding/ort-wasm';\nimport {getTensorElementSize} from '../wasm-common';\n\nimport {WebGpuBackend} from './backend-webgpu';\nimport {LOG_DEBUG} from './log';\nimport {TensorView} from './tensor';\nimport {ShapeUtil} from './util';\nimport {ComputeContext, ComputeContextInputsOutputsMapping, ProgramInfo, ProgramInfoLoader} from './webgpu/types';\n\n/* eslint-disable no-bitwise */\n\nclass TensorViewImpl implements TensorView {\n  constructor(\n      private module: OrtWasmModule, public readonly dataType: number, public readonly data: number,\n      public readonly dims: readonly number[]) {}\n\n  getFloat32Array(): Float32Array {\n    return new Float32Array(this.module.HEAP8.buffer, this.data, ShapeUtil.size(this.dims));\n  }\n\n  reshape(newDims: readonly number[]): TensorView {\n    if (ShapeUtil.size(newDims) !== ShapeUtil.size(this.dims)) {\n      throw new Error('Invalid new shape');\n    }\n    return new TensorViewImpl(this.module, this.dataType, this.data, newDims);\n  }\n}\n\nclass ComputeContextImpl implements ComputeContext {\n  readonly opKernelContext: number;\n  readonly inputs: readonly TensorView[];\n  get customData(): {[key: string]: unknown} {\n    return this.backend.currentKernelCustomData;\n  }\n  constructor(private module: OrtWasmModule, private backend: WebGpuBackend, contextDataOffset: number) {\n    const heapU32 = module.HEAPU32;\n\n    // extract context data\n    let dataIndex = (contextDataOffset >> 2);\n    this.opKernelContext = heapU32[dataIndex++];\n    const inputCount = heapU32[dataIndex++];\n\n    const inputs: TensorView[] = [];\n    for (let i = 0; i < inputCount; i++) {\n      const dataType = heapU32[dataIndex++];\n      const data = heapU32[dataIndex++];\n      const dim = heapU32[dataIndex++];\n      const dims: number[] = [];\n      for (let d = 0; d < dim; d++) {\n        dims.push(heapU32[dataIndex++]);\n      }\n      inputs.push(new TensorViewImpl(module, dataType, data, dims));\n    }\n    this.inputs = inputs;\n  }\n\n  compute(program: ProgramInfoLoader|ProgramInfo, inputsOutputsMapping?: ComputeContextInputsOutputsMapping):\n      TensorView[] {\n    // prepare inputs. inputs should always be valid data.\n    const mappedInputs =\n        inputsOutputsMapping?.inputs?.map(i => typeof i === 'number' ? this.inputs[i] : i) ?? this.inputs;\n    // prepare outputs.\n    const outputIndices = inputsOutputsMapping?.outputs ?? [];\n    const createKernelOutput = (index: number, dataType: number, dims: readonly number[]): TensorView =>\n        new TensorViewImpl(this.module, dataType, this.output(index, dims), dims);\n    const createTemporaryOutput = (dataType: number, dims: readonly number[]): TensorView => {\n      const elementSize = getTensorElementSize(dataType);\n      if (!elementSize) {\n        throw new Error(`Unsupported data type: ${dataType}`);\n      }\n      const bufferSize = elementSize * ShapeUtil.size(dims);\n      return new TensorViewImpl(this.module, dataType, this.backend.gpuDataManager.create(bufferSize).id, dims);\n    };\n    return this.backend.run(program, mappedInputs, outputIndices, createKernelOutput, createTemporaryOutput);\n  }\n\n  output(index: number, dims: readonly number[]): number {\n    const stack = this.module.stackSave();\n    try {\n      const data = this.module.stackAlloc((1 + dims.length) * 4 /* sizeof(size_t) */);\n      let offset = data >> 2;\n      this.module.HEAPU32[offset++] = dims.length;\n      for (let i = 0; i < dims.length; i++) {\n        this.module.HEAPU32[offset++] = dims[i];\n      }\n      return this.module._JsepOutput(this.opKernelContext, index, data);\n    } finally {\n      this.module.stackRestore(stack);\n    }\n  }\n}\n\nexport const init = async(module: OrtWasmModule): Promise<void> => {\n  const init = module.jsepInit;\n  if (init && navigator.gpu) {\n    const backend = new WebGpuBackend();\n    await backend.initialize();\n\n    init(\n        // backend\n        {backend},\n\n        // jsepAlloc()\n        (size: number) => backend.alloc(size),\n\n        // jsepFree()\n        (ptr: number) => backend.free(ptr),\n\n        // jsepCopy(src, dst, size, isSourceGpu)\n        (src: number, dst: number, size: number, isSourceGpu = false) => {\n          if (isSourceGpu) {\n            LOG_DEBUG('verbose', () => `[WebGPU] jsepCopyGpuToGpu: src=${src}, dst=${dst}, size=${size}`);\n            backend.memcpy(src, dst);\n          } else {\n            LOG_DEBUG('verbose', () => `[WebGPU] jsepCopyCpuToGpu: dataOffset=${src}, gpuDataId=${dst}, size=${size}`);\n            const data = module.HEAPU8.subarray(src, src + size);\n            backend.upload(dst, data);\n          }\n        },\n\n        // jsepCopyAsync(src, dst, size)\n        async(gpuDataId: number, dataOffset: number, size: number):\n            Promise<void> => {\n              LOG_DEBUG(\n                  'verbose',\n                  () => `[WebGPU] jsepCopyGpuToCpu: gpuDataId=${gpuDataId}, dataOffset=${dataOffset}, size=${size}`);\n\n              await backend.download(gpuDataId, () => module.HEAPU8.subarray(dataOffset, dataOffset + size));\n            },\n\n        // jsepCreateKernel\n        (name: string, kernel: number, attribute: unknown) => backend.createKernel(name, kernel, attribute),\n\n        // jsepReleaseKernel\n        (kernel: number) => backend.releaseKernel(kernel),\n\n        // jsepRun\n        (kernel: number, contextDataOffset: number) => {\n          LOG_DEBUG('verbose', () => `[WebGPU] jsepRun: kernel=${kernel}, contextDataOffset=${contextDataOffset}`);\n          const context = new ComputeContextImpl(module, backend, contextDataOffset);\n          return backend.computeKernel(kernel, context);\n        });\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport {logLevelStringToEnum} from '../wasm-common';\n\ntype LogLevel = NonNullable<typeof env.logLevel>;\ntype MessageString = string;\ntype MessageFunction = () => string;\ntype Message = MessageString|MessageFunction;\n\nconst logLevelPrefix = ['V', 'I', 'W', 'E', 'F'];\n\nconst doLog = (level: number, message: string): void => {\n  // eslint-disable-next-line no-console\n  console.log(`[${logLevelPrefix[level]},${new Date().toISOString()}]${message}`);\n};\n\n/**\n * A simple logging utility to log messages to the console.\n */\nexport const LOG = (logLevel: LogLevel, msg: Message): void => {\n  const messageLevel = logLevelStringToEnum(logLevel);\n  const configLevel = logLevelStringToEnum(env.logLevel!);\n  if (messageLevel >= configLevel) {\n    doLog(messageLevel, typeof msg === 'function' ? msg() : msg);\n  }\n};\n\n/**\n * A simple logging utility to log messages to the console. Only logs when debug is enabled.\n */\nexport const LOG_DEBUG: typeof LOG = (...args: Parameters<typeof LOG>) => {\n  if (env.debug) {\n    LOG(...args);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable no-param-reassign */\n\nexport class MatMulUtil {\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n}\n\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    if (arank === 0) {\n      return bdims;\n    }\n    if (brank === 0) {\n      return adims;\n    }\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n\nexport class ShapeUtil {\n  /**\n   * calculate the size (number of elements)\n   */\n  static size(dims: readonly number[]): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  /**\n   * calculate the size (number of elements) from the given axis (inclusive)\n   */\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  /**\n   * calculate the size (number of elements) to the given axis (exclusive)\n   */\n  static sizeToDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  /**\n   * calculate the size (number of elements) from and to the given axis [start, end)\n   */\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be 0 or negative.\n      if (dims[i] <= 0) {\n        throw new Error(\n            // eslint-disable-next-line max-len\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  static computeStrides(dims: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [1];\n    }\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = dims[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * dims[i + 1];\n    }\n    return strides;\n  }\n\n  /**\n   * normailze axis of range [-r, r) into [0, r).\n   */\n  static normalizeAxis(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  static normalizeAxes(axes: readonly number[], tensorRank?: number): number[] {\n    return axes.map(x => this.normalizeAxis(x, tensorRank ?? axes.length));\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n}\n\nexport class PoolConvUtil {\n  /**\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   */\n  static adjustPoolAttributes(\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\n      dilations: number[], pads: number[]): void {\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\n    }\n\n    if (isGlobalOperator) {\n      // adjust kernel shape to cover the input dims\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        if (dim >= kernelShape.length) {\n          kernelShape.push(inputDims[dim + 2]);\n        } else {\n          kernelShape[dim] = inputDims[dim + 2];\n        }\n      }\n    }\n\n    // adjust strides length to match kernel shape length\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < strides.length) {\n        if (strides[dim] < 0) {\n          throw new Error('strides should be greater than or equal to 1');\n        }\n      } else {\n        strides.push(1);\n      }\n    }\n\n    // adjust dilation value\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < dilations.length) {\n        if (dilations[dim] < 0) {\n          throw new Error('dilations should be greater than or equal to 1');\n        }\n      } else {\n        dilations.push(1);\n      }\n    }\n\n    // adjust pads length to match 2 * kernel shape length\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\n      if (dim < pads.length) {\n        if (pads[dim] < 0) {\n          throw new Error('pad should be greater than or equal to 1');\n        }\n      } else {\n        pads.push(0);\n      }\n    }\n\n    // sanity checks for values in kernel shapes and pads\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (kernelShape[dim] <= 0) {\n        throw new Error('kernel shapes need to be greater than 0');\n      }\n\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\n        throw new Error('pads should be smaller than kernel');\n      }\n    }\n  }\n\n  // adjust pad values based on 'autoPad' attribute\n  static adjustPadsBasedOnAutoPad(\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\n      kernelShape: readonly number[], pads: number[], isChannelLast: boolean, autoPad?: string): void {\n    if (!autoPad) {\n      return;\n    }\n\n    if (pads.length !== 2 * (inputDims.length - 2)) {\n      throw new Error('length of pads should be twice the length of data dimensions');\n    }\n\n    if (strides.length !== (inputDims.length - 2)) {\n      throw new Error('length of strides should be the length of data dimensions');\n    }\n\n    if (kernelShape.length !== (inputDims.length - 2)) {\n      throw new Error('length of kernel shapes should be the length of data dimensions');\n    }\n\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\n      PoolConvUtil.adjustPadAndReturnShape(\n          inputDims[dim + (isChannelLast ? 1 : 2)], strides[dim], dilations[dim], kernelShape[dim], pads, dim,\n          dim + inputDims.length - 2, autoPad);\n    }\n  }\n\n  /**\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computePoolOutputShape(\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0) {\n      throw new Error('input shape must be of size greater than 0');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], inputDims[1]];\n\n    PoolConvUtil.computeShapeHelper(\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  /**\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computeConvOutputShape(\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], filterDims[0]];\n\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\n  // called by computePoolOutputShape() and computeConvOutputShape()\n  // adjust pads based on 'autoPad' attribute prior to shape computation\n  private static computeShapeHelper(\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (isGlobalOperator) {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(1);\n      }\n    } else {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n            autoPad));\n      }\n    }\n  }\n\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\n  private static adjustPadAndReturnShape(\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\n      padTailIndex: number, autoPad?: string): number {\n    const dkernel = dilation * (kernel - 1) + 1;\n    if (autoPad && autoPad !== 'NOTSET') {\n      switch (autoPad) {\n        case 'VALID':\n          pads[padHeadIndex] = 0;\n          pads[padTailIndex] = 0;\n          return Math.floor(((inSize - dkernel) / stride) + 1);\n        case 'SAME_LOWER':\n        case 'SAME_UPPER':\n          if (dilation !== 1) {\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\n          } else {\n            const legacyTargetSize = (inSize + stride - 1) / stride;\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\n            pads[padHeadIndex] =\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\n          }\n        default:\n          throw new Error('Unsupported AutoPad type');\n      }\n    } else {\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\n    }\n  }\n}\n\nexport class GemmUtil {\n  // will make sure input shapes are compatible for this op\n  // and return back the shape of the output in the form of a tuple\n  // will throw exception if the input shapes are not compatible\n  static getShapeOfGemmResult(\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\n      biasShape?: readonly number[]): readonly number[] {\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\n      throw new Error('shape need to be of size 2');\n    }\n\n    let M: number;\n    let K: number;\n    let N: number;\n\n    if (transLeft) {\n      M = leftShape[1];\n      K = leftShape[0];\n    } else {\n      M = leftShape[0];\n      K = leftShape[1];\n    }\n\n    let kDim = -1;\n\n    if (transRight) {\n      N = rightShape[0];\n      kDim = 1;\n    } else {\n      N = rightShape[1];\n      kDim = 0;\n    }\n\n    if (rightShape[kDim] !== K) {\n      throw new Error('dimension mismatch');\n    }\n\n    if (M <= 0 || N <= 0 || K <= 0) {\n      throw new Error('invalid shape specified');\n    }\n\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\n      throw new Error('gemm: invalid bias shape for broadcast');\n    }\n\n    return [M, N, K];\n  }\n}\n\n\nexport const MIN_CLIP = -3.4028234663852886e+38;\nexport const MAX_CLIP = 3.4028234663852886e+38;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nclass AttributeWithCacheKeyImpl {\n  constructor(attribute: Record<string, unknown>) {\n    Object.assign(this, attribute);\n  }\n\n  private _cacheKey: string;\n  public get cacheKey(): string {\n    if (!this._cacheKey) {\n      this._cacheKey =\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\n    }\n    return this._cacheKey;\n  }\n}\n\nexport interface AttributeWithCacheKey {\n  readonly cacheKey: string;\n}\n\n/**\n * create a new object from the given attribute, and add a cacheKey property to it\n */\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGpuBackend} from '../backend-webgpu';\nimport {LOG_DEBUG} from '../log';\n\nimport {GpuData, GpuDataId, GpuDataType} from './types';\n\n/**\n * manages GpuDataId -> GpuBuffer\n */\nexport interface GpuDataManager {\n  /**\n   * copy data from CPU to GPU.\n   */\n  upload(id: GpuDataId, data: Uint8Array): void;\n  /**\n   * copy data from GPU to GPU.\n   */\n  memcpy(sourceId: GpuDataId, destinationId: GpuDataId): void;\n  /**\n   * create new data on GPU.\n   */\n  create(size: number, usage?: number): GpuData;\n  /**\n   * get GPU data by ID.\n   */\n  get(id: GpuDataId): GpuData|undefined;\n  /**\n   * release the data on GPU by ID.\n   *\n   * @return size of the data released\n   */\n  release(id: GpuDataId): number;\n  /**\n   * copy data from GPU to CPU.\n   */\n  download(id: GpuDataId): Promise<ArrayBufferLike>;\n\n  /**\n   * refresh the buffers that marked for release.\n   *\n   * when release() is called, the buffer is not released immediately. this is because we need to wait for the commands\n   * to be submitted to the GPU. this function is called after the commands are submitted so that the buffers can be\n   * actually released.\n   */\n  refreshPendingBuffers(): void;\n}\n\ninterface StorageCacheValue {\n  gpuData: GpuData;\n  originalSize: number;\n}\n\ninterface DownloadCacheValue {\n  data: Promise<ArrayBufferLike>;\n}\n\n/**\n * normalize the buffer size so that it fits the 128-bits (16 bytes) alignment.\n */\nconst calcNormalizedBufferSize = (size: number) => Math.ceil(size / 16) * 16;\n\nlet guid = 0;\nconst createNewGpuDataId = () => guid++;\n\nclass GpuDataManagerImpl implements GpuDataManager {\n  // GPU Data ID => GPU Data ( storage buffer )\n  storageCache: Map<GpuDataId, StorageCacheValue>;\n\n  // GPU Data ID => GPU Data ( read buffer )\n  downloadCache: Map<GpuDataId, DownloadCacheValue>;\n\n  // pending buffers for uploading ( data is unmapped )\n  private buffersForUploadingPending: GPUBuffer[];\n  // pending buffers for computing\n  private buffersPending: GPUBuffer[];\n\n  constructor(private backend: WebGpuBackend /* , private reuseBuffer: boolean */) {\n    this.storageCache = new Map();\n    this.downloadCache = new Map();\n    this.buffersForUploadingPending = [];\n    this.buffersPending = [];\n  }\n\n  upload(id: GpuDataId, data: Uint8Array): void {\n    const srcArrayBuffer = data.buffer;\n    const srcOffset = data.byteOffset;\n    const srcLength = data.byteLength;\n    const size = calcNormalizedBufferSize(srcLength);\n\n    // get destination gpu buffer\n    const gpuDataCache = this.storageCache.get(id);\n    if (!gpuDataCache) {\n      throw new Error('gpu data for uploading does not exist');\n    }\n    if (gpuDataCache.originalSize !== srcLength) {\n      throw new Error(`inconsistent data size. gpu data size=${gpuDataCache.originalSize}, data size=${srcLength}`);\n    }\n\n    // create gpu buffer\n    const gpuBufferForUploading = this.backend.device.createBuffer(\n        // eslint-disable-next-line no-bitwise\n        {mappedAtCreation: true, size, usage: GPUBufferUsage.MAP_WRITE | GPUBufferUsage.COPY_SRC});\n\n    // copy (upload) data\n    const arrayBuffer = gpuBufferForUploading.getMappedRange();\n    new Uint8Array(arrayBuffer).set(new Uint8Array(srcArrayBuffer, srcOffset, srcLength));\n    gpuBufferForUploading.unmap();\n\n\n    // GPU copy\n    const commandEncoder = this.backend.getCommandEncoder();\n    this.backend.endComputePass();\n    commandEncoder.copyBufferToBuffer(gpuBufferForUploading, 0, gpuDataCache.gpuData.buffer, 0, size);\n\n    LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.upload(id=${id})`);\n\n    this.buffersForUploadingPending.push(gpuBufferForUploading);\n  }\n\n  memcpy(sourceId: GpuDataId, destinationId: GpuDataId): void {\n    // get source gpu buffer\n    const sourceGpuDataCache = this.storageCache.get(sourceId);\n    if (!sourceGpuDataCache) {\n      throw new Error('source gpu data for memcpy does not exist');\n    }\n    // get destination gpu buffer\n    const destinationGpuDataCache = this.storageCache.get(destinationId);\n    if (!destinationGpuDataCache) {\n      throw new Error('destination gpu data for memcpy does not exist');\n    }\n    if (sourceGpuDataCache.originalSize !== destinationGpuDataCache.originalSize) {\n      throw new Error('inconsistent source and destination gpu data size');\n    }\n    const size = calcNormalizedBufferSize(sourceGpuDataCache.originalSize);\n    // GPU copy\n    this.backend.getCommandEncoder().copyBufferToBuffer(\n        sourceGpuDataCache.gpuData.buffer, 0, destinationGpuDataCache.gpuData.buffer, 0, size);\n  }\n\n  // eslint-disable-next-line no-bitwise\n  create(size: number, usage = GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST): GpuData {\n    // !!!\n    // !!! IMPORTANT: TODO: whether we should keep the storage buffer every time, or always create new ones.\n    // !!!                  This need to be figured out by performance test results.\n    // !!!\n\n    const bufferSize = calcNormalizedBufferSize(size);\n\n    // create gpu buffer\n    const gpuBuffer = this.backend.device.createBuffer({size: bufferSize, usage});\n\n    const gpuData = {id: createNewGpuDataId(), type: GpuDataType.default, buffer: gpuBuffer};\n    this.storageCache.set(gpuData.id, {gpuData, originalSize: size});\n\n    LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.create(size=${size}) => id=${gpuData.id}`);\n    return gpuData;\n  }\n\n  get(id: GpuDataId): GpuData|undefined {\n    return this.storageCache.get(id)?.gpuData;\n  }\n\n  release(id: GpuDataId): number {\n    const cachedData = this.storageCache.get(id);\n    if (!cachedData) {\n      throw new Error('releasing data does not exist');\n    }\n\n    LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.release(id=${id}), gpuDataId=${cachedData.gpuData.id}`);\n\n    this.storageCache.delete(id);\n    this.buffersPending.push(cachedData.gpuData.buffer);\n    // cachedData.gpuData.buffer.destroy();\n\n    const downloadingData = this.downloadCache.get(id);\n    if (downloadingData) {\n      this.downloadCache.delete(id);\n    }\n\n    return cachedData.originalSize;\n  }\n\n  async download(id: GpuDataId): Promise<ArrayBufferLike> {\n    const downloadData = this.downloadCache.get(id);\n    if (downloadData) {\n      return downloadData.data;\n    }\n\n    const cachedData = this.storageCache.get(id);\n    if (!cachedData) {\n      throw new Error('data does not exist');\n    }\n\n    const commandEncoder = this.backend.getCommandEncoder();\n    this.backend.endComputePass();\n    const gpuReadBuffer = this.backend.device.createBuffer(\n        // eslint-disable-next-line no-bitwise\n        {size: cachedData.originalSize, usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ});\n    commandEncoder.copyBufferToBuffer(\n        cachedData.gpuData.buffer /* source buffer */, 0 /* source offset */, gpuReadBuffer /* destination buffer */,\n        0 /* destination offset */, cachedData.originalSize /* size */\n    );\n    this.backend.flush();\n\n    const readDataPromise = new Promise<ArrayBuffer>((resolve) => {\n      gpuReadBuffer.mapAsync(GPUMapMode.READ).then(() => {\n        const data = gpuReadBuffer.getMappedRange().slice(0);\n        gpuReadBuffer.destroy();\n        resolve(data);\n      });\n    });\n\n    this.downloadCache.set(id, {data: readDataPromise});\n\n    return readDataPromise;\n  }\n\n  refreshPendingBuffers(): void {\n    for (const buffer of this.buffersForUploadingPending) {\n      buffer.destroy();\n    }\n    for (const buffer of this.buffersPending) {\n      buffer.destroy();\n    }\n  }\n}\n\nexport const createGpuDataManager = (...args: ConstructorParameters<typeof GpuDataManagerImpl>): GpuDataManager =>\n    new GpuDataManagerImpl(...args);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as binaryOps from './ops/binary-op';\nimport {conv, parseConvAttributes} from './ops/conv';\nimport {gemm, parseGemmAttributes} from './ops/gemm';\nimport {matMul} from './ops/matmul';\nimport * as pool from './ops/pool';\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\nimport * as unaryOps from './ops/unary-op';\nimport {ComputeContext} from './types';\n\nexport type RunFunction = (context: ComputeContext, attribute?: unknown) => void;\nexport type ParseAttributeFunction = (attributeRaw: unknown) => unknown;\nexport type OperatorImplementation = [RunFunction]|[RunFunction, ParseAttributeFunction];\n\nexport const WEBGPU_OP_RESOLVE_RULES: Map<string, OperatorImplementation> = new Map([\n  ['Abs', [unaryOps.abs]],\n  ['Acos', [unaryOps.acos]],\n  ['Acosh', [unaryOps.acosh]],\n  ['Add', [binaryOps.add]],\n  ['Asin', [unaryOps.asin]],\n  ['Asinh', [unaryOps.asinh]],\n  ['Atan', [unaryOps.atan]],\n  ['Atanh', [unaryOps.atanh]],\n  // TODO: support new attributes for AveragePool-10\n  ['AveragePool', [pool.averagePool, pool.parseAveragePoolAttributes]],\n  ['Ceil', [unaryOps.ceil]],\n  ['ClipV10', [unaryOps.clipV10]],\n  ['Clip', [unaryOps.clip]],\n  ['Conv', [conv, parseConvAttributes]],\n  ['Cos', [unaryOps.cos]],\n  ['Cosh', [unaryOps.cosh]],\n  ['Div', [binaryOps.div]],\n  ['Elu', [unaryOps.elu, unaryOps.parseAlphaAttributes]],\n  ['Erf', [unaryOps.erf]],\n  ['Exp', [unaryOps.exp]],\n  ['Floor', [unaryOps.floor]],\n  ['Gemm', [gemm, parseGemmAttributes]],\n  ['GlobalAveragePool', [pool.globalAveragePool, pool.parseGlobalAveragePoolAttributes]],\n  ['GlobalMaxPool', [pool.globalMaxPool, pool.parseGlobalMaxPoolAttributes]],\n  ['LeakyRelu', [unaryOps.leakyRelu, unaryOps.parseAlphaAttributes]],\n  ['MatMul', [matMul]],\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\n  ['MaxPool', [pool.maxPool, pool.parseMaxPoolAttributes]],\n  ['Mul', [binaryOps.mul]],\n  ['Neg', [unaryOps.neg]],\n  ['Pow', [binaryOps.pow]],\n  ['Reciprocal', [unaryOps.reciprocal]],\n  ['Relu', [unaryOps.relu]],\n  ['Sigmoid', [unaryOps.sigmoid]],\n  ['Sin', [unaryOps.sin]],\n  ['Sinh', [unaryOps.sinh]],\n  ['Sqrt', [unaryOps.sqrt]],\n  ['Sub', [binaryOps.sub]],\n  ['Tan', [unaryOps.tan]],\n  ['Tanh', [unaryOps.tanh]],\n  ['ThresholdedRelu', [unaryOps.thresholdedRelu, unaryOps.parseAlphaAttributes]],\n  ['Transpose', [transpose, parseTransposeAttributes]],\n]);\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/activation_util.ts\n//\n// modified to fit the needs of the project\n\nexport declare type Activation = 'linear' | 'relu' | 'prelu' | 'elu' | 'relu6' | 'leakyrelu' | 'sigmoid';\n\nexport const typeSnippet = (component: number) => {\n  switch (component) {\n    case 1:\n      return 'f32';\n    case 2:\n      return 'vec2<f32>';\n    case 3:\n      return 'vec3<f32>';\n    case 4:\n      return 'vec4<f32>';\n    default:\n      throw new Error(`${component}-component is not supported.`);\n  }\n};\n\nexport const activationFnSnippet =\n    (activation?: Activation, _hasPreluActivationWeights = false, _packed = false, _coordsLength = 3): string => {\n      if (!activation) {\n        return '';\n      }\n\n      // TODO: add implementations\n      return '';\n    };\n\nexport const biasActivationSnippet = (hasBias: boolean, activation?: Activation): string => `\n      ${hasBias ? 'value = value + getBiasByOutputCoords(coords);' : ''}\n      ${activation ? 'value = activation(value, coords);' : ''}\n      `;\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/conv2d_mm_webgpu.ts\n//\n// modified to fit the needs of the project\n\nimport {LOG_DEBUG} from '../../../log';\nimport {TensorView} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {GpuDataType, ProgramInfo, ProgramMetadata} from '../../types';\nimport {ConvAttributes} from '../conv';\n\nimport {Activation, activationFnSnippet, biasActivationSnippet, typeSnippet} from './activation_util';\nimport {utilFunctions} from './conv_util';\nimport {makeMatMulPackedSource, makeMatMulPackedVec4Source} from './matmul_packed_webgpu';\n\nconst conv2dCommonSnippet =\n    (isChannelsLast: boolean, fitAOuter: boolean, fitBOuter: boolean, fitInner: boolean, addBias = false,\n     activation?: Activation, hasPreluActivationWeights = false, innerElementSizeX = 4, innerElementSizeW = 4,\n     innerElementSize = 4): string => {\n      const getXSnippet = (innerElementSize: number) => {\n        switch (innerElementSize) {\n          case 1:\n            return 'resData = x[xIndex];';\n          case 3:\n            return 'resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);';\n          case 4:\n            return 'resData = x[xIndex / 4];';\n          default:\n            throw new Error(`innerElementSize ${innerElementSize} is not supported.`);\n        }\n      };\n      const getWSnippet = (innerElementSize: number) => {\n        switch (innerElementSize) {\n          case 1:\n            return 'return w[row * wShape[3] + colIn];';\n          case 4:\n            return 'return w[row * wShape[3] / 4 + colIn];';\n          default:\n            throw new Error(`innerElementSize ${innerElementSize} is not supported.`);\n        }\n      };\n      const coordASnippet = isChannelsLast ? `\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    ` :\n                                             `\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `;\n\n      const coordResSnippet = isChannelsLast ? `\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ` :\n                                               `\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `;\n\n      const xHeight = isChannelsLast ? 'xShape[1]' : 'xShape[2]';\n      const xWidth = isChannelsLast ? 'xShape[2]' : 'xShape[3]';\n      const row = isChannelsLast ? 'row' : 'col';\n      const col = isChannelsLast ? 'col' : 'row';\n      const readXSnippet = `\n    let inChannels = wShape[2];\n    let outWidth = ${isChannelsLast ? 'outShape[2]' : 'outShape[3]'};\n    let outRow = ${row} / outWidth;\n    let outCol = ${row} % outWidth;\n\n    let WRow = ${col} / (filterDims[1] * inChannels);\n    let WCol = ${col} / inChannels % filterDims[1];\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\n    let xCh = ${col} % inChannels;\n    var resData = ${typeSnippet(innerElementSizeX)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the 'same' padding type.\n    if (xRow >= 0 && xRow < ${xHeight} && xCol >= 0 && xCol < ${xWidth}) {\n      ${coordASnippet}\n      let xIndex = getIndexFromCoords4D(coord, xShape);\n      ${getXSnippet(innerElementSizeX)}\n    }\n    return resData;`;\n\n      const sampleX = isChannelsLast ? (fitAOuter && fitInner ? `\n    let col = colIn * ${innerElementSizeX};\n    ${readXSnippet}` :\n                                                                `\n    let col = colIn * ${innerElementSizeX};\n    if (row < dimAOuter && col < dimInner) {\n      ${readXSnippet}\n    }\n    return ${typeSnippet(innerElementSizeX)}(0.0);`) :\n                                       (fitInner && fitBOuter ? `\n    let col = colIn * ${innerElementSizeX};\n    ${readXSnippet}` :\n                                                                `\n    let col = colIn * ${innerElementSizeX};\n    if (row < dimInner && col < dimBOuter) {\n      ${readXSnippet}\n    }\n    return ${typeSnippet(innerElementSizeX)}(0.0);`);\n\n      const sampleW = `${getWSnippet(innerElementSizeW)}`;\n\n      const resType = typeSnippet(innerElementSize);\n      const aType = isChannelsLast ? typeSnippet(innerElementSizeX) : typeSnippet(innerElementSizeW);\n      const bType = isChannelsLast ? typeSnippet(innerElementSizeW) : typeSnippet(innerElementSizeX);\n      const userCode = `\n    ${activationFnSnippet(activation, hasPreluActivationWeights, innerElementSize === 4, 4)}\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${aType} {\n      ${isChannelsLast ? sampleX : sampleW}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${bType} {\n      ${isChannelsLast ? sampleW : sampleX}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${resType}) {\n      let col = colIn * ${innerElementSize};\n      if (row < dimAOuter && col < dimBOuter)\n      {\n      var value = valueIn;\n      let outWidth = ${isChannelsLast ? 'outShape[2]' : 'outShape[3]'};\n      ${coordResSnippet}\n      ${biasActivationSnippet(addBias, activation)}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`;\n      return userCode;\n    };\n\nexport const createConv2DMatMulProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, attributes: ConvAttributes,\n     outputShape: readonly number[], dimAOuter: number, dimBOuter: number, dimInner: number, hasBias: boolean,\n     sequentialAccessByThreads: boolean): ProgramInfo => {\n      const isChannelsLast = attributes.format === 'NHWC';\n      const inChannels = isChannelsLast ? inputs[0].dims[3] : inputs[0].dims[1];\n      const batchSize = outputShape[0];\n      const outWidth = isChannelsLast ? outputShape[2] : outputShape[3];\n      const outHeight = isChannelsLast ? outputShape[1] : outputShape[2];\n      const outChannels = isChannelsLast ? outputShape[3] : outputShape[1];\n      const isVec4 = (((inChannels % 4 === 0 || inChannels % 3 === 0) && isChannelsLast) ||\n                      (outWidth % 4 === 0 && !isChannelsLast)) &&\n          outChannels % 4 === 0;\n\n      // TODO: fine tune size\n      const dispatchX = isChannelsLast ? outChannels : outWidth * outHeight;\n      const dispatchY = isChannelsLast ? outWidth * outHeight : outChannels;\n      const workGroupSize: [number, number, number] =\n          isVec4 ? [8, 8, 1] : [dispatchX <= 4 ? 4 : 16, dispatchX > 4 && dispatchY <= 4 ? 4 : 16, 1];\n      const elementsPerThread =\n          isVec4 ? [4, 4, 1] : [dispatchX <= 4 ? 1 : 2, dispatchX > 4 && dispatchY <= 4 ? 1 : 2, 1];\n      const dispatch = [\n        Math.ceil(dispatchX / workGroupSize[0] / elementsPerThread[0]),\n        Math.ceil(dispatchY / workGroupSize[1] / elementsPerThread[1]),\n        Math.ceil(batchSize / workGroupSize[2] / elementsPerThread[1])\n      ];\n\n      LOG_DEBUG('verbose', () => `[conv2d_mm_webgpu] dispatch = ${dispatch}`);\n\n      const innerElementSize = isVec4 ? (isChannelsLast && inChannels % 4 !== 0 ? 3 : 4) : elementsPerThread[0];\n\n      const tileAOuter = workGroupSize[1] * elementsPerThread[1];\n      const tileBOuter = workGroupSize[0] * elementsPerThread[0];\n      const tileInner = Math.max(workGroupSize[0] * innerElementSize, workGroupSize[1]);\n\n      const fitAOuter = dimAOuter % tileAOuter === 0;\n      const fitBOuter = dimBOuter % tileBOuter === 0;\n      const fitInner = dimInner % tileInner === 0;\n\n      const elementsSize = isVec4 ? [innerElementSize, 4, 4] : [1, 1, 1];\n\n      const declareInputs = [\n        `@group(0) @binding(0) var<storage, read> x: array<${isVec4 && innerElementSize === 4 ? 'vec4<f32>' : 'f32'}>;`,\n        `@group(0) @binding(1) var<storage, read> w: array<${isVec4 ? 'vec4<f32>' : 'f32'}>;`\n      ];\n      let declareFunctions = `\n      fn setOutputAtIndex(flatIndex : i32, value : ${isVec4 ? 'vec4<f32>' : 'f32'}) {\n        result[flatIndex] = ${isVec4 ? 'vec4<f32>' : 'f32'}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${isVec4 ? 'vec4<f32>' : 'f32'}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${isVec4 ? '/ 4' : ''}, value);\n      }`;\n      if (hasBias) {\n        declareInputs.push(`@group(0) @binding(2) var<storage, read> bias: array<${isVec4 ? 'vec4<f32>' : 'f32'}>;`);\n        declareFunctions += `\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${isVec4 ? 'vec4<f32>' : 'f32'} {\n          return bias[coords.${isChannelsLast ? 'w' : 'y'}${isVec4 ? '/ 4' : ''}];\n        }`;\n      }\n\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        dispatchGroup: () => ({x: dispatch[0], y: dispatch[1], z: dispatch[2]}),\n        getShaderSource: () => `\n        ${utilFunctions}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${declareInputs.join('')}\n        @group(0) @binding(${declareInputs.length}) var<storage, read_write> result: array<${\n            isVec4 ? 'vec4<f32>' : 'f32'}>;\n        //@group(0) @binding(${declareInputs.length + 1}) var<uniform> uniforms: Uniforms;\n\n        const xShape : vec4<i32> = vec4<i32>(${inputs[0].dims.join(',')});\n        const wShape : vec4<i32> = vec4<i32>(${inputs[1].dims.join(',')});\n        const outShape : vec4<i32> = vec4<i32>(${outputShape.join(',')});\n        const outShapeStrides : vec3<i32> = vec3<i32>(${ShapeUtil.computeStrides(outputShape).slice(0, 3).join(',')});\n        const filterDims : vec2<i32> = vec2<i32>(${attributes.kernelShape[0]}, ${attributes.kernelShape[1]});\n        const pad : vec2<i32> = vec2<i32>(${attributes.pads[0]}, ${attributes.pads[1]});\n        const stride : vec2<i32> = vec2<i32>(${attributes.strides[0]}, ${attributes.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${attributes.dilations[0]}, ${attributes.dilations[1]});\n        const dimAOuter : i32 = ${dimAOuter};\n        const dimBOuter : i32 = ${dimBOuter};\n        const dimInner : i32 = ${dimInner};\n        ${declareFunctions}\n        ${\n            conv2dCommonSnippet(\n                isChannelsLast, fitAOuter, fitBOuter, fitInner, hasBias, undefined, false, elementsSize[0],\n                elementsSize[1], elementsSize[2])}\n            ${\n            isVec4 ? makeMatMulPackedVec4Source(elementsPerThread, workGroupSize, !isChannelsLast, tileInner) :\n                     makeMatMulPackedSource(\n                         elementsPerThread, workGroupSize, !isChannelsLast, tileInner, false, undefined,\n                         sequentialAccessByThreads)}`\n      };\n    };\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-core/src/ops/conv_util.ts\n//\n// modified to fit the needs of the project\n\nexport const utilFunctions = `\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));\n}\n`;\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/matmul_packed_webgpu.ts\n//\n// modified to fit the needs of the project\n\nconst writeDataToSubAVec4Snippet = (transpose: boolean) => {\n  if (transpose) {\n    return `\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol);\n        `;\n\n  } else {\n    return `\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol);\n        `;\n  }\n};\n\nconst calculateResultSnippet = (transposeA: boolean, innerElementSize: number) => {\n  if (transposeA) {\n    return `\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${innerElementSize === 3 ? '' : 'let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];'}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${innerElementSize === 3 ? '' : 'acc[i] = BCached3 * ACached3[i] + acc[i];'}\n        }`;\n  } else {\n    return `\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${innerElementSize === 3 ? '' : 'acc[i] = BCached3 * ACached.w + acc[i];'}\n        }`;\n  }\n};\n\nexport const makeMatMulPackedVec4Source =\n    (workPerThread: number[], workgroupSize: [number, number, number], transposeA = false, tileInner = 32,\n     splitK = false, splitedDimInner = 32, isVectorA = false): string => {\n      const tileAOuter = workgroupSize[1] * workPerThread[1];\n      const tileBOuter = workgroupSize[0] * workPerThread[0];\n      const tileAWidth = transposeA ? tileAOuter : tileInner;\n      const tileAHight = transposeA ? tileInner : tileAOuter;\n      const innerElementSize = tileAWidth / workgroupSize[0];\n      const rowPerThreadB = tileInner / workgroupSize[1];\n\n      if (!(((transposeA && innerElementSize === 4 && workPerThread[1] === 4) ||\n             (!transposeA && (innerElementSize === 3 || innerElementSize === 4))) &&\n            tileAWidth % workgroupSize[0] === 0 && tileInner % workgroupSize[1] === 0 && workPerThread[0] === 4)) {\n        throw new Error(`If transposeA ${transposeA} is true, innerElementSize ${\n            innerElementSize} and workPerThread[1] ${workPerThread[1]} must be 4.\n      Otherwise, innerElementSize ${innerElementSize} must be 3 or 4.\n  tileAWidth ${tileAWidth} must be divisible by workgroupSize[0]${workgroupSize[0]}. tileInner ${\n            tileInner} must be divisible by workgroupSize[1] ${workgroupSize[1]}. colPerThread ${\n            workPerThread[0]} must be 4.`);\n      }\n      return `\nvar<workgroup> mm_Asub : array<array<vec${innerElementSize}<f32>, ${tileAWidth / innerElementSize}>, ${tileAHight}>;\nvar<workgroup> mm_Bsub : array<array<vec4<f32>, ${tileBOuter / workPerThread[0]}>, ${tileInner}>;\n\nconst rowPerThread = ${workPerThread[1]};\nconst colPerThread = ${workPerThread[0]};\nconst innerElementSize = ${innerElementSize};\nconst tileInner = ${tileInner};\n\n@compute @workgroup_size(${workgroupSize[0]}, ${workgroupSize[1]}, ${workgroupSize[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = ${isVectorA ? '0' : 'localRow * rowPerThread'};\n  let tileCol = i32(localId.x);\n\n  let globalRow = ${isVectorA ? '0' : 'i32(globalId.y) * rowPerThread'};\n  let globalCol = i32(globalId.x);\n  let batch = ${splitK ? '0' : 'i32(globalId.z)'};\n  let globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n\n  let numTiles = ${splitK ? `${Math.ceil(splitedDimInner / tileInner)}` : '(dimInner - 1) / tileInner + 1'};\n  var kStart = ${splitK ? `i32(globalId.z) * ${splitedDimInner}` : '0'};\n\n  var acc: array<vec4<f32>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${rowPerThreadB};\n  for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${writeDataToSubAVec4Snippet(transposeA)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${rowPerThreadB}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol);\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${innerElementSize === 3 ? '' : 'let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];'}\n\n          ${calculateResultSnippet(transposeA, innerElementSize)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`;\n    };\n\nconst writeDataToSubASnippet = (transpose: boolean) => {\n  if (transpose) {\n    return `\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol);\n            `;\n\n  } else {\n    return `\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol);\n            `;\n  }\n};\n\nconst readDataFromSubASnippet = (transposeA: boolean) =>\n    transposeA ? 'let ACached = mm_Asub[k][tileRow + innerRow];' : 'let ACached = mm_Asub[tileRow + innerRow][k];';\n\n// sequentialAccessByThreads means sequential data in memory is accessed by\n// threads, instead of a single thread (default behavior).\nexport const makeMatMulPackedSource =\n    (workPerThread: number[], workgroupSize: [number, number, number], transposeA = false, tileInner = 32,\n     splitK = false, splitedDimInner = 32, sequentialAccessByThreads = false): string => {\n      const tileAOuter = workPerThread[1] * workgroupSize[1];\n      const tileBOuter = workPerThread[0] * workgroupSize[0];\n      const tileAWidth = transposeA ? tileAOuter : tileInner;\n      const tileAHight = transposeA ? tileInner : tileAOuter;\n\n      if (!(tileAHight % workgroupSize[1] === 0 && tileAWidth % workgroupSize[0] === 0 &&\n            tileInner % workgroupSize[1] === 0)) {\n        throw new Error(`tileAHight ${tileAHight} must be divisible by workgroupSize[1]${\n            workgroupSize[1]}, tileAWidth ${tileAWidth} must be divisible by workgroupSize[0]${\n            workgroupSize[0]}, tileInner ${tileInner} must be divisible by workgroupSize[1]${workgroupSize[1]}`);\n      }\n      const rowPerThreadA = tileAHight / workgroupSize[1];\n      const colPerThreadA = tileAWidth / workgroupSize[0];\n      const rowPerThreadB = tileInner / workgroupSize[1];\n      const matmulSnippet = sequentialAccessByThreads ?\n          `\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n    let globalColStart = i32(workgroupId.x) * ${tileBOuter};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${tileAHight}; inputRow = inputRow + ${workgroupSize[1]}) {\n        for (var inputCol = localCol; inputCol < ${tileAWidth}; inputCol = inputCol + ${workgroupSize[0]}) {\n          ${writeDataToSubASnippet(transposeA)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${tileInner}; inputRow = inputRow + ${workgroupSize[1]}) {\n            for (var inputCol = localCol; inputCol < ${tileBOuter}; inputCol = inputCol + ${workgroupSize[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol);\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<f32, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${workgroupSize[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${\n              transposeA ? `mm_Asub[k][localRow + innerRow * ${workgroupSize[1]}];` :\n                           `mm_Asub[localRow + innerRow * ${workgroupSize[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${workgroupSize[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${workgroupSize[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    ` :\n          `\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n\nlet tileRowA = i32(localId.y) * ${rowPerThreadA};\nlet tileColA = i32(localId.x) * ${colPerThreadA};\nlet tileRowB = i32(localId.y) * ${rowPerThreadB};\n// Loop over shared dimension.\nfor (var t = 0; t < numTiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${rowPerThreadA}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${colPerThreadA}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${writeDataToSubASnippet(transposeA)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${rowPerThreadB}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol);\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<f32, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${readDataFromSubASnippet(transposeA)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;\n\n      return `\n  var<workgroup> mm_Asub : array<array<f32, ${tileAWidth}>, ${tileAHight}>;\n  var<workgroup> mm_Bsub : array<array<f32, ${tileBOuter}>, ${tileInner}>;\n  const rowPerThread = ${workPerThread[1]};\n  const colPerThread = ${workPerThread[0]};\n  const tileInner = ${tileInner};\n\n@compute @workgroup_size(${workgroupSize[0]}, ${workgroupSize[1]}, ${workgroupSize[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${splitK ? '0' : 'i32(globalId.z)'};\n    let numTiles = ${splitK ? `${Math.ceil(splitedDimInner / tileInner)}` : '(dimInner - 1) / tileInner + 1'};\n    var kStart = ${splitK ? `i32(globalId.z) * ${splitedDimInner}` : '0'};\n\n    var acc : array<array<f32, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${matmulSnippet}\n  }\n`;\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../util';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\n\ntype BuiltinFunctionName = string;\ntype BinaryCustomExpression = (expressionA: string, expressionB: string) => string;\ntype BinaryFunctionCall = BuiltinFunctionName|BinaryCustomExpression|{\n  scalar: BinaryCustomExpression;\n  vector: BinaryCustomExpression;\n};\n\nconst createBinaryOpProgramShader =\n    (shaderHelper: ShaderHelper, dimsA: readonly number[], dimsB: readonly number[], dimsOutput: readonly number[],\n     vectorize: boolean, doBroadcast: boolean, funcCall: BinaryFunctionCall, additionalImplementation?: string,\n     typeA = 'f32', typeB = 'f32', typeOutput = 'f32') => {\n      const outputSize = ShapeUtil.size(dimsOutput);\n      const vecSize = Math.ceil(outputSize / 4);\n\n      let expressionScalar: BinaryCustomExpression;\n      let expressionVector: BinaryCustomExpression;\n      if (typeof funcCall === 'string') {\n        expressionScalar = expressionVector = (a, b) => `${funcCall}((${a}),(${b}))`;\n      } else if (typeof funcCall === 'function') {\n        expressionScalar = expressionVector = funcCall;\n      } else {\n        expressionScalar = funcCall.scalar;\n        expressionVector = funcCall.vector;\n      }\n\n      let broadcastImpl = '';\n      const outputIndicesHelper = createIndicesHelper('output', dimsOutput);\n      if (doBroadcast) {\n        const calcOffsetImpl = (dims: readonly number[]) => {\n          const strides = ShapeUtil.computeStrides(dims);\n          const offsets: string[] = [];\n          for (let i = dims.length - 1; i >= 0; i--) {\n            const idx = dimsOutput.length === 0 ? '0u' :\n                (dimsOutput.length === 1)       ? '(*outputIndices)' :\n                                                  `(*outputIndices)[${i + dimsOutput.length - dims.length}]`;\n            offsets.push(`${strides[i]}u * (${idx} % ${dims[i]}u)`);\n          }\n          return offsets.length > 0 ? offsets.join('+') : '0u';\n        };\n\n        broadcastImpl = `\n  ${outputIndicesHelper.o2iImpl}\n\n  fn calcOffsetA(outputIndices: ptr<function, ${outputIndicesHelper.iType}>) -> u32 {\n    return ${calcOffsetImpl(dimsA)};\n  }\n\n  fn calcOffsetB(outputIndices: ptr<function, ${outputIndicesHelper.iType}>) -> u32 {\n    return ${calcOffsetImpl(dimsB)};\n  }\n  `;\n      }\n\n      let assignment: string;\n      if (vectorize) {\n        if (doBroadcast) {\n          assignment = `\n      ${outputIndicesHelper.indicesVariableDeclaration('outputIndices')}\n      ${outputIndicesHelper.o2iCall('global_idx * 4u', 'outputIndices')}\n      let offsetA = calcOffsetA(&outputIndices);\n      let offsetB = calcOffsetB(&outputIndices);\n      outputData[global_idx] = ${expressionVector('aData[offsetA / 4u]', 'bData[offsetB / 4u]')};`;\n        } else {\n          assignment = `outputData[global_idx] = ${expressionVector('aData[global_idx]', 'bData[global_idx]')};`;\n        }\n      } else {\n        if (!doBroadcast) {\n          throw new Error('no necessary to use scalar implementation for element-wise binary op implementation.');\n        }\n        const singleAssignment = (x: number) => {\n          const expressionA = `aData[indexA${x}][componentA${x}]`;\n          const expressionB = `bData[indexB${x}][componentB${x}]`;\n          return `\n      ${outputIndicesHelper.o2iCall(`global_idx * 4u + ${x}u`, 'outputIndices')}\n      let offsetA${x} = calcOffsetA(&outputIndices);\n      let offsetB${x} = calcOffsetB(&outputIndices);\n      let indexA${x} = offsetA${x} / 4u;\n      let indexB${x} = offsetB${x} / 4u;\n      let componentA${x} = offsetA${x} % 4u;\n      let componentB${x} = offsetB${x} % 4u;\n      outputData[global_idx][${x}] = ${expressionScalar(expressionA, expressionB)};`;\n        };\n\n        assignment = `\n      ${outputIndicesHelper.indicesVariableDeclaration('outputIndices')}\n      ${singleAssignment(0)}\n      ${singleAssignment(1)}\n      ${singleAssignment(2)}\n      ${singleAssignment(3)}`;\n      }\n\n      return `\n  @group(0) @binding(0) var<storage, read> aData : array<vec4<${typeA}>>;\n  @group(0) @binding(1) var<storage, read> bData : array<vec4<${typeB}>>;\n  @group(0) @binding(2) var<storage, read_write> outputData : array<vec4<${typeOutput}>>;\n\n  ${additionalImplementation ?? ''}\n  ${broadcastImpl}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(vecSize)}\n    ${assignment}\n  }`;\n    };\n\nconst createBinaryOpProgramInfo =\n    (metadata: ProgramMetadata, a: TensorView, b: TensorView, funcCall: BinaryFunctionCall,\n     additionalImplementation?: string, outputDataType: number = a.dataType): ProgramInfo => {\n      const isBroadcast = !ShapeUtil.areEqual(a.dims, b.dims);\n      let outputShape = a.dims;\n      let outputSize = ShapeUtil.size(a.dims);\n\n      let vectorize = false;\n\n      // TODO: deal with zero-sized tensors (eg. dims=[1,0])\n\n      if (isBroadcast) {\n        const calculatedShape = BroadcastUtil.calcShape(a.dims, b.dims, false);\n        if (!calculatedShape) {\n          throw new Error('Can\\'t perform binary op on the given tensors');\n        }\n        outputShape = calculatedShape;\n        outputSize = ShapeUtil.size(outputShape);\n\n        // check whether vectorize can be enabled\n        let sharedDimension = 1;\n        for (let i = 0; i < outputShape.length; i++) {\n          const dimA = a.dims[a.dims.length - i] ?? 1;\n          const dimB = b.dims[b.dims.length - i] ?? 1;\n          if (dimA === dimB) {\n            sharedDimension *= dimA;\n          } else {\n            break;\n          }\n        }\n        if (sharedDimension % 4 === 0) {\n          vectorize = true;\n        }\n\n\n      } else {\n        // element-wise\n        vectorize = true;\n      }\n\n      return {\n        ...metadata,\n        getShaderSource: (shaderHelper) => createBinaryOpProgramShader(\n            shaderHelper, a.dims, b.dims, outputShape, vectorize, isBroadcast, funcCall, additionalImplementation),\n        outputs: [{dims: outputShape, dataType: outputDataType, gpuDataType: GpuDataType.default}],\n        dispatchGroup: () =>\n            ({x: Math.ceil(outputSize / 64 /* workgroup size */ / (vectorize ? 4 : 1) /* vec size */)})\n      };\n    };\n\nconst createBinaryOpProgramInfoLoader =\n    (inputs: readonly TensorView[], name: string, funcCall: BinaryFunctionCall, additionalImplementation?: string,\n     cacheKey?: string): ProgramInfoLoader => {\n      const metadata:\n          ProgramMetadata = {name, inputTypes: [GpuDataType.default, GpuDataType.default], cacheHint: cacheKey};\n      return {\n        ...metadata,\n        get: () => createBinaryOpProgramInfo(metadata, inputs[0], inputs[1], funcCall, additionalImplementation)\n      };\n    };\n\nexport const add = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Add', (a, b) => `${a}+${b}`));\n};\n\nexport const div = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Div', (a, b) => `${a}/${b}`));\n};\n\nexport const mul = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Mul', (a, b) => `${a}*${b}`));\n};\n\nexport const pow = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(\n      context.inputs, 'Pow', ({scalar: (a, b) => `pow_f32(${a},${b})`, vector: (a, b) => `pow_vf32(${a},${b})`}), `\n    fn pow_f32(a : f32, b : f32) -> f32 {\n      if (b == 0.0) {\n        return 1.0;\n      } else if (a < 0.0 && b != floor(b)) {\n        return pow(a, b); // NaN\n      }\n      return select(sign(a), 1.0, round(abs(b) % 2.0) != 1.0) * pow(abs(a), b);\n    }\n    fn pow_vf32(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {\n      // TODO: implement vectorized pow\n      return vec4<f32>(pow_f32(a.x, b.x), pow_f32(a.y, b.y), pow_f32(a.z, b.z), pow_f32(a.w, b.w));\n    }\n      `));\n};\n\nexport const sub = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Sub', (a, b) => `${a}-${b}`));\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ShapeUtil} from '../../util';\n\n/**\n * constant value for a workgroup size.\n *\n * We definitely can do further optimization in future, but for now we use 64.\n *\n * rule of thumb: Use [a workgroup size of] 64 unless you know what GPU you are targeting or that your workload\n *                needs something different.\n *\n * from: https://surma.dev/things/webgpu/\n **/\nexport const WORKGROUP_SIZE = 64;\n\nexport interface IndicesHelper {\n  /**\n   * WGSL code of function implementation for offset-to-indices\n   */\n  o2iImpl: string;\n  /**\n   * WGSL code of function call for offset-to-indices\n   */\n  o2iCall: (varOffset: string, varIndices: string) => string;\n  /**\n   * WGSL code of function implementation for indices-to-offset\n   */\n  i2oImpl: string;\n  /**\n   * WGSL code of function implementation for indices-to-offset\n   *\n   * @param isPtr - whether the variable is a pointer. default is false.\n   */\n  i2oExpression: (varIndices: string, isPtr?: boolean) => string;\n  /**\n   * WGSL code of indices variable declaration\n   *\n   * @param v - variable name.\n   * @param init - initial value.\n   */\n  indicesVariableDeclaration: (v: string, init?: string[]) => string;\n  /**\n   * data type of indices\n   */\n  iType: string;\n}\n\nexport const createIndicesHelper = (name: string, shape: readonly number[]): IndicesHelper => {\n  const iType = shape.length < 2 ? 'u32' : `array<u32, ${shape.length}>`;\n\n  const strides = ShapeUtil.computeStrides(shape);\n  let o2iSnippet = '';\n  for (let i = 0; i < shape.length - 1; i++) {\n    o2iSnippet += `\n    let dim${i} = current / ${strides[i]}u;\n    let rest${i} = current % ${strides[i]}u;\n    (*indices)[${i}] = dim${i};\n    current = rest${i};\n    `;\n  }\n  o2iSnippet += `(*indices)[${shape.length - 1}] = current;`;\n\n  const o2iImpl = shape.length < 2 ? '' : `\n  fn ih_o2i_${name}(offset: u32, indices: ptr<function, ${iType}>) {\n    var current = offset;\n    ${o2iSnippet}\n  }`;\n\n  const o2iCall = (varOffset: string, varIndices: string) =>\n      shape.length < 2 ? `${varIndices}=${varOffset};` : `ih_o2i_${name}(${varOffset}, &${varIndices});`;\n\n  const offsets: string[] = [];\n  if (shape.length === 0) {\n    offsets.push('0u');\n  } else if (shape.length < 2) {\n    offsets.push('(*indices)');\n  } else {\n    for (let i = shape.length - 1; i >= 0; i--) {\n      offsets.push(`${strides[i]}u * ((*indices)[${i}])`);\n    }\n  }\n\n  const i2oImpl = shape.length < 2 ? '' : `\n  fn ih_i2o_${name}(indices: ptr<function, ${iType}>) -> u32 {\n    return ${offsets.join('+')};\n  }`;\n\n  const i2oExpression = (varIndices: string, isPtr?: boolean) =>\n      shape.length < 2 ? `(${isPtr ? '*' : ''}${varIndices})` : `ih_i2o_${name}(${isPtr ? '' : '&'}${varIndices})`;\n\n  const indicesVariableDeclaration = (v: string, init?: string[]) =>\n      `var ${v}:${iType}${init ? `=${iType}(${init.join(',')})` : ''};`;\n\n  return {o2iImpl, o2iCall, i2oImpl, i2oExpression, indicesVariableDeclaration, iType};\n};\n\n/**\n * A ShaderHelper is a helper class for generating WGSL code.\n */\nexport interface ShaderHelper {\n  mainStart(workgroupSize?: number|[number, number, number]): string;\n  guardAgainstOutOfBoundsWorkgroupSizes(size: unknown): string;\n}\n\nclass ShaderHelperImpl implements ShaderHelper {\n  constructor(private normalizedDispatchGroup: [number, number, number]) {}\n  guardAgainstOutOfBoundsWorkgroupSizes(size: number|string): string {\n    // Guard against out-of-bounds work group sizes\n    const sizeInCode = typeof size === 'number' ? `${size}u` : size;\n    return `if (global_idx >= ${sizeInCode}) { return; }`;\n  }\n  mainStart(workgroupSize: number|[number, number, number] = WORKGROUP_SIZE) {\n    const workgroupSizeX = typeof workgroupSize === 'number' ? workgroupSize : workgroupSize[0];\n    const workgroupSizeY = typeof workgroupSize === 'number' ? 1 : workgroupSize[1];\n    const workgroupSizeZ = typeof workgroupSize === 'number' ? 1 : workgroupSize[2];\n\n    const is1DimensionDispatch = this.normalizedDispatchGroup[1] === 1 && this.normalizedDispatchGroup[2] === 1;\n    const paramList = is1DimensionDispatch ? '@builtin(global_invocation_id) global_id : vec3<u32>' :\n                                             `@builtin(local_invocation_index) local_index : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>`;\n    const globalIdxDefinition = is1DimensionDispatch ?\n        'let global_idx = global_id.x;' :\n        `let global_idx = (workgroup_id.z * ${this.normalizedDispatchGroup[0] * this.normalizedDispatchGroup[1]}u +\n          workgroup_id.y * ${this.normalizedDispatchGroup[0]}u + workgroup_id.x) * ${\n            workgroupSizeX * workgroupSizeY * workgroupSizeZ}u + local_index;`;\n\n    return `@compute @workgroup_size(${workgroupSizeX}, ${workgroupSizeY}, ${workgroupSizeZ})\n  fn main(${paramList}) {\n    ${globalIdxDefinition}\n  `;\n  }\n}\n\nexport const createShaderHelper = (dispatchGroup: [number, number, number]): ShaderHelper =>\n    new ShaderHelperImpl(dispatchGroup);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {ShapeUtil} from '../../util';\nimport {GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {getActicationSnippet} from './fuse-utils';\n\nconst createGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'GroupedConv',\n  inputTypes: hasBias ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                        [GpuDataType.default, GpuDataType.default],\n  cacheHint\n});\n\nconst createGroupedConvProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, attributes: ConvAttributes,\n     squeezeOutputShapeFunction?: (shape: readonly number[]) => number[]): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += b[output_channel];' : '';\n      const xShape = inputs[0].dims;\n      const wShape = inputs[1].dims;\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\n\n      const dataType = 'f32';  // TODO: support other data type\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\n      const inputStorageBuffersDeclarations = [\n        `@group(0) @binding(0) var<storage, read> x : array<${dataType}>;`,\n        `@group(0) @binding(1) var<storage, read> w : array<${dataType}>;`\n      ];\n      if (hasBias) {\n        inputStorageBuffersDeclarations.push(`@group(0) @binding(2) var<storage, read> b : array<${dataType}>;`);\n      }\n\n      const isChannelLast = attributes.format === 'NHWC';\n      const outputShape = calculateOutputShape(\n          xShape, wShape, attributes.dilations, attributes.pads, attributes.strides, isChannelLast);\n      const outputSize = ShapeUtil.size(outputShape);\n      const outputIndicesHelper = createIndicesHelper('output', outputShape);\n      const xIndicesHelper = createIndicesHelper('x', xShape);\n      const wIndicesHelper = createIndicesHelper('w', wShape);\n\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const strides: vec2<u32> = vec2(${attributes.strides[0]}u, ${attributes.strides[1]}u);\n  const pads: vec2<u32> = vec2(${attributes.pads[0]}u, ${attributes.pads[1]}u);\n\n  ${inputStorageBuffersDeclarations.join('\\n')}\n  @group(0) @binding(${inputStorageBuffersDeclarations.length}) var<storage, read_write> output : array<${dataType}>;\n\n  ${activationFunction}\n  ${outputIndicesHelper.o2iImpl}\n  ${xIndicesHelper.i2oImpl}\n  ${wIndicesHelper.i2oImpl}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    ${outputIndicesHelper.indicesVariableDeclaration('outputIndices')}\n    ${outputIndicesHelper.o2iCall('global_idx', 'outputIndices')}\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${isChannelLast ? 3 : 1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${isChannelLast ? 1 : 2}], outputIndices[${\n          isChannelLast ? 2 : 3}]) * strides - pads;\n    let group_id: u32 = output_channel / ${outputChannelsPerGroup}u;\n\n    var value: ${dataType} = ${dataType}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < ${wShape[1]}u; wInChannel++) {\n      let input_channel = group_id * ${wShape[1]}u + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < ${wShape[2]}u; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]}u;\n\n        if (xHeight < 0u || xHeight >= ${xShape[isChannelLast ? 1 : 2]}u) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < ${wShape[3]}u; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]}u;\n          if (xWidth < 0u || xWidth >= ${xShape[isChannelLast ? 2 : 3]}u) {\n            continue;\n          }\n\n          ${\n          xIndicesHelper.indicesVariableDeclaration(\n              'xIndices',\n              isChannelLast ? ['batch', 'xHeight', 'xWidth', 'input_channel'] :\n                              [\n                                'batch', 'input_channel', 'xHeight', 'xWidth'\n                              ])}\n          let xVal = x[${xIndicesHelper.i2oExpression('xIndices')}];\n          ${\n          wIndicesHelper.indicesVariableDeclaration('wIndices', [\n            'output_channel', 'wInChannel', 'wHeight', 'wWidth'\n          ])}\n          let wVal = w[${wIndicesHelper.i2oExpression('wIndices')}];\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${processBias}\n    ${applyActivation}\n    output[global_idx] = value;\n  }`;\n      return {\n        ...metadata,\n        outputs: [{\n          dims: squeezeOutputShapeFunction ? squeezeOutputShapeFunction(outputShape) : outputShape,\n          dataType: inputs[0].dataType,\n          gpuDataType: GpuDataType.default\n        }],\n        getShaderSource,\n        dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n      };\n    };\n\n/**\n * naive grouped conv implementation, supports 1d/2d conv\n * @param squeezeOutputShapeFunction - an optional function to squeeze the output shape, only used in conv1d\n */\nexport const createGroupedConvProgramInfoLoader =\n    (inputs: readonly TensorView[], attributes: ConvAttributes,\n     squeezeOutputShapeFunction?: (shape: readonly number[]) => number[]): ProgramInfoLoader => {\n      const metadata = createGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createGroupedConvProgramInfo(inputs, metadata, attributes, squeezeOutputShapeFunction)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {PoolConvUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext} from '../types';\n\nimport {createGroupedConvProgramInfoLoader} from './conv-grouped';\nimport {createConv2DMatMulProgramInfoLoader} from './conv2d-mm';\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createTransposeProgramInfo, TransposeAttributes, transposeProgramMetadata} from './transpose';\n\nexport const calculateOutputShape =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\n     adjustPads: readonly number[], strides: readonly number[], isChannelLast: boolean): number[] => {\n      const batchSize = inputShape[0];\n      const inputSpatialShape = inputShape.slice(isChannelLast ? 1 : 2, isChannelLast ? 3 : 4);\n      const spatialRank = inputSpatialShape.length;\n      const outChannels = kernelShape[0];\n      const kernelSpatialShape = kernelShape.slice(2);\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\n      const outputShape =\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\n      outputShape.splice(0, 0, batchSize);\n      outputShape.splice(isChannelLast ? 3 : 1, 0, outChannels);\n      return outputShape;\n    };\n\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly dilations: readonly number[];\n  readonly format: 'NHWC'|'NCHW';\n  readonly group: number;\n  readonly kernelShape: readonly number[];\n  readonly pads: readonly number[];\n  readonly strides: readonly number[];\n  readonly wIsConst: boolean;\n}\n\n// for transposing weight tensor from [M, C/group, KH, KW] to [KH, KW, C/group, M]\nconst weightTransposeAttribute: TransposeAttributes = createAttributeWithCacheKey({perm: [2, 3, 1, 0]});\n\nconst validateInputs = (inputs: readonly TensorView[], attributes: ConvAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/master/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 && inputs[0].dims.length !== 3) {\n    throw new Error('currently only support conv 1D and 2D');\n  }\n\n  if (inputs[0].dims.length !== inputs[1].dims.length) {\n    throw new Error('filter does not have same dimension as input');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[attributes.format === 'NHWC' ? inputs[0].dims.length - 1 : 1];\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].dataType !== DataType.float || inputs[1].dataType !== DataType.float) {\n    throw new Error('Conv input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].dataType !== DataType.float) {\n    throw new Error('Conv input(bias) should be float tensor');\n  }\n};\n\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: readonly TensorView[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  for (let i = 2; i < inputs[1].dims.length; ++i) {\n    if (kernelShape[i - 2] === 0) {\n      kernelShape[i - 2] = inputs[1].dims[i];\n    }\n  }\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.format === 'NHWC',\n      attributes.autoPad);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvAttributes = (attributes: Record<string, unknown>): ConvAttributes => {\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const format = attributes.format as 'NHWC' | 'NCHW';\n  const autoPad = ['NOTSET', 'VALID', 'SAME_UPPER', 'SAME_LOWER'][attributes.auto_pad as number];\n  const dilations = attributes.dilations as [number, number];\n  const group = attributes.group as number;\n  const kernelShape = attributes.kernel_shape as [number, number];\n  const pads = attributes.pads as [number, number, number, number];\n  const strides = attributes.strides as [number, number];\n  const wIsConst = (attributes.w_is_const as () => boolean)();\n\n  return createAttributeWithCacheKey(\n      {autoPad, format, dilations, group, kernelShape, pads, strides, wIsConst, ...activationAttributes});\n};\n\nconst conv2d = (context: ComputeContext, inputs: readonly TensorView[], attributes: ConvAttributes): void => {\n  const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\n\n  // check attributes\n\n  const hasBias = inputs.length === 3;\n  // const hasPreluActivationWeights = false; /* TODO: add support for prelu activation weights */\n  const isChannelsLast = attributes.format === 'NHWC';\n\n  // const batchSize = context.inputs[0].dims[0];\n  const inputHeight = inputs[0].dims[isChannelsLast ? 1 : 2];\n  const inputWidth = inputs[0].dims[isChannelsLast ? 2 : 3];\n  const inputChannels = inputs[0].dims[isChannelsLast ? 3 : 1];\n  const weightHeight = inputs[1].dims[2];\n  const weightWidth = inputs[1].dims[3];\n\n  const outputShape = calculateOutputShape(\n      inputs[0].dims, inputs[1].dims, attributes.dilations, adjustedAttributes.pads, attributes.strides,\n      isChannelsLast);\n  const outHeight = outputShape[isChannelsLast ? 1 : 2];\n  const outWidth = outputShape[isChannelsLast ? 2 : 3];\n  const outChannels = outputShape[isChannelsLast ? 3 : 1];\n\n  const sameSize =\n      isChannelsLast && weightHeight === inputHeight && weightWidth === inputWidth && attributes.autoPad === 'VALID';\n  if (sameSize ||\n      (weightHeight === 1 && weightWidth === 1 && attributes.dilations[0] === 1 && attributes.dilations[1] === 1 &&\n       attributes.strides[0] === 1 && attributes.strides[1] === 1 &&\n       (attributes.autoPad === 'SAME_UPPER' || attributes.autoPad === 'SAME_LOWER' ||\n        attributes.autoPad === 'VALID'))) {\n    // TODO: implement conv2dByMatMul()\n    context.compute(createGroupedConvProgramInfoLoader(inputs, adjustedAttributes));\n    return;\n  }\n\n  if (!isChannelsLast || attributes.group !== 1) {\n    context.compute(createGroupedConvProgramInfoLoader(inputs, adjustedAttributes));\n    return;\n  }\n\n  // TODO: implement conv2dWithIm2Col()\n\n  const dimAOuter = isChannelsLast ? outHeight * outWidth : outChannels;\n  const dimBOuter = isChannelsLast ? outChannels : outHeight * outWidth;\n  const dimInner = weightHeight * weightWidth * inputChannels;\n\n  const sequentialAccessByThreads = /* backend.adapterInfo.isIntel() */ true;\n\n  // STEP.1: transpose weight\n  const transposedWeight = (context.customData.wT as TensorView | undefined) ??\n      context.compute(\n          {\n            ...transposeProgramMetadata,\n            cacheHint: weightTransposeAttribute.cacheKey,\n            get: () => createTransposeProgramInfo(inputs[1], weightTransposeAttribute.perm)\n          },\n          {inputs: [1], outputs: [attributes.wIsConst ? -2 : -1]})[0];\n  if (attributes.wIsConst && !context.customData.wT) {\n    context.customData.wT = transposedWeight;\n  }\n\n  // STEP.2: prepare reshaped inputs\n  const convInputs = [inputs[0], transposedWeight];\n  if (hasBias) {\n    if (!isChannelsLast && inputs[2].dims.length === 1) {\n      convInputs.push(inputs[2].reshape([inputs[2].dims[0], 1, 1]));\n    } else {\n      convInputs.push(inputs[2]);\n    }\n  }\n\n  // STEP.3: compute matmul\n  context.compute(\n      createConv2DMatMulProgramInfoLoader(\n          convInputs, adjustedAttributes, outputShape, dimAOuter, dimBOuter, dimInner, hasBias,\n          sequentialAccessByThreads),\n      {inputs: convInputs});\n};\n\nconst conv1d = (context: ComputeContext, attributes: ConvAttributes): void => {\n  // extend the input to 2D by adding H dimension\n  const isChannelLast = attributes.format === 'NHWC';\n  const inputs = [\n    context.inputs[0].reshape(\n        isChannelLast ?\n            // [N, W, C] -> [N, H=1, W, C]\n            [context.inputs[0].dims[0], 1, context.inputs[0].dims[1], context.inputs[0].dims[2]] :\n            // [N, C, W] -> [N, C, H=1, W]\n            [context.inputs[0].dims[0], context.inputs[0].dims[1], 1, context.inputs[0].dims[2]]),\n    //[FILTER_OUT_CHANNEL, FILTER_IN_CHANNEL, kW] -> [FILTER_OUT_CHANNEL, FILTER_IN_CHANNEL, kH=1, kW]\n    context.inputs[1].reshape([context.inputs[1].dims[0], context.inputs[1].dims[1], 1, context.inputs[1].dims[2]])\n  ];\n  if (context.inputs.length === 3) {\n    inputs.push(context.inputs[2]);\n  }\n  const pads = [0, attributes.pads[0], 0, attributes.pads[1]];\n  const strides = [1].concat(attributes.strides);\n  const dilations = [1].concat(attributes.dilations);\n  const kernelShape = [1].concat(attributes.kernelShape);\n  const adjustedAttributes = getAdjustedConvAttributes({...attributes, pads, strides, dilations, kernelShape}, inputs);\n  context.compute(createGroupedConvProgramInfoLoader(\n      inputs, adjustedAttributes,\n      outputShape => isChannelLast ? [outputShape[0], outputShape[2], outputShape[3]] : []));\n};\n\nexport const conv = (context: ComputeContext, attributes: ConvAttributes): void => {\n  validateInputs(context.inputs, attributes);  // currently will fail if not conv1D/2D\n  if (context.inputs[0].dims.length === 3) {\n    conv1d(context, attributes);\n  } else {\n    conv2d(context, context.inputs, attributes);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {GpuDataType, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {createConv2DMatMulProgramInfo} from './3rd-party/conv2d_mm_webgpu';\nimport {ConvAttributes} from './conv';\n\n\nconst createConv2DMatMulProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'Conv2DMatMul',\n  inputTypes: hasBias ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                        [GpuDataType.default, GpuDataType.default],\n  cacheHint\n});\n\nexport const createConv2DMatMulProgramInfoLoader =\n    (inputs: readonly TensorView[], attributes: ConvAttributes, outputShape: readonly number[], dimAOuter: number,\n     dimBOuter: number, dimInner: number, hasBias: boolean, sequentialAccessByThreads: boolean): ProgramInfoLoader => {\n      const metadata = createConv2DMatMulProgramMetadata(hasBias, attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createConv2DMatMulProgramInfo(\n            inputs, metadata, attributes, outputShape, dimAOuter, dimBOuter, dimInner, hasBias,\n            sequentialAccessByThreads)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {MAX_CLIP, MIN_CLIP} from '../../util';\n\nexport interface InternalActivationAttributes {\n  readonly activation: string;\n  readonly clipMin?: number;\n  readonly clipMax?: number;\n  readonly activationCacheKey: string;\n}\n\nexport const getActicationSnippet =\n    (attributes: InternalActivationAttributes): {activationFunction: string; applyActivation: string} => {\n      switch (attributes.activation) {\n        case 'Relu':\n          return {activationFunction: '', applyActivation: 'value = max(value, 0.0);'};\n        case 'Sigmoid':\n          return {activationFunction: '', applyActivation: 'value = (1.0 / (1.0 + exp(-value)));'};\n        case 'Clip':\n          return {\n            activationFunction:\n                `const clip_min_=f32(${attributes.clipMin!});const clip_max_=f32(${attributes.clipMax!});`,\n            applyActivation: 'value = clamp(value, clip_min_, clip_max_);'\n          };\n          // TODO: adding other activations that can be fused.\n        default:\n          return {activationFunction: '', applyActivation: ''};\n      }\n    };\n\nexport const parseInternalActivationAttributes =\n    (attributes: Record<string, unknown>|undefined): InternalActivationAttributes => {\n      const activation = attributes?.activation as string || '';\n\n      if (activation === 'Clip') {\n        const [clipMin, clipMax] = attributes?.activation_params as [number, number] || [MIN_CLIP, MAX_CLIP];\n        return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\n      }\n      return {activation, activationCacheKey: activation};\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {GemmUtil, ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {ShaderHelper} from './common';\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs) {\n    throw new Error('Input is missing');\n  }\n  if (inputs.length < 2 || inputs.length > 3) {\n    throw new Error('Invaid input number.');\n  }\n\n  // 'C' can be of dimensionality 0, 1 or 2 only\n  if (inputs.length === 3 && inputs[2].dims.length > 2) {\n    throw new Error('Invalid input shape of C');\n  }\n\n  if ((inputs[0].dataType !== DataType.float) || (inputs[1].dataType !== DataType.float) ||\n      (inputs.length === 3 && inputs[2].dataType !== DataType.float)) {\n    throw new Error('Invalid input type.');\n  }\n\n  if ((inputs[0].dataType !== inputs[1].dataType) ||\n      (inputs.length === 3 && inputs[0].dataType !== inputs[2].dataType)) {\n    throw new Error('Input types are mismatched');\n  }\n};\n\nexport interface GemmAttributes extends AttributeWithCacheKey {\n  transA: boolean;\n  transB: boolean;\n  alpha: number;\n  beta: number;\n}\n\nconst offsetC = (m: number, n: number, dims: readonly number[]): string => {\n  if (dims.length === 0) {\n    return '0u';\n  }\n\n  const broadcastM = (dims.length === 1 && m !== 1) || (dims.length === 2 && dims[0] !== m);\n  const broadcastN = dims[dims.length - 1] !== n;\n\n  let offset = '0u';\n  if (!broadcastM) {\n    offset += `+ m * ${dims[dims.length - 1]}u`;\n  }\n  if (!broadcastN) {\n    offset += '+n';\n  }\n\n  return offset;\n};\n\nconst createGemmProgramInfo =\n    (metadata: ProgramMetadata, inputs: readonly TensorView[], attributes: GemmAttributes): ProgramInfo => {\n      const aShape = inputs[0].dims.slice();\n      const bShape = inputs[1].dims.slice();\n      const [M, N, K] = GemmUtil.getShapeOfGemmResult(\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\n      const outputShape = [M, N];\n      if (!outputShape) {\n        throw new Error('Can\\'t use gemm on the given tensors');\n      }\n      const outputSize = ShapeUtil.size(outputShape);\n      let line = '';\n      if (attributes.transA && attributes.transB) {\n        line = 'value += a[k * M + m] * b[n * K + k];';\n      } else if (attributes.transA && !attributes.transB) {\n        line = 'value += a[k * M + m] * b[k * N + n];';\n      } else if (!attributes.transA && attributes.transB) {\n        line = 'value += a[m * K + k] * b[n * K + k];';\n      } else if (!attributes.transA && !attributes.transB) {\n        line = 'value += a[m * K + k] * b[k * N + n];';\n      }\n\n      const dataType = 'f32';  // TODO: support other data type\n      const calculateAlpha = attributes.alpha === 1 ? '' : 'value *= alpha;';\n      const calculateC = inputs.length === 3 ? `value += beta * c[${offsetC(M, N, inputs[2].dims)}];` : '';\n      const inputStorageBuffersDeclarations = [\n        `@group(0) @binding(0) var<storage, read> a : array<${dataType}>;`,\n        `@group(0) @binding(1) var<storage, read> b : array<${dataType}>;`\n      ];\n      if (inputs.length === 3) {\n        inputStorageBuffersDeclarations.push(`@group(0) @binding(2) var<storage, read> c : array<${dataType}>;`);\n      }\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const M: u32 = ${M}u;\n  const N: u32 = ${N}u;\n  const K: u32 = ${K}u;\n  const alpha = ${dataType}(${attributes.alpha});\n  const beta = ${dataType}(${attributes.beta});\n\n  ${inputStorageBuffersDeclarations.join('\\n')}\n  @group(0) @binding(${inputs.length}) var<storage, read_write> output : array<${dataType}>;\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    let m = global_id.x / N;\n    let n = global_id.x % N;\n\n    var value = ${dataType}(0);\n    for (var k: u32 = 0u; k<${K}u; k++) {\n      ${line}\n    }\n\n    ${calculateAlpha}\n    ${calculateC}\n    output[global_id.x] = value;\n\n  }`;\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        getShaderSource,\n        dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n      };\n    };\n\nconst createGemmProgramInfoLoader = (inputs: readonly TensorView[], attributes: GemmAttributes): ProgramInfoLoader => {\n  const metadata = {\n    name: 'Gemm',\n    inputTypes: inputs.length === 3 ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                                      [GpuDataType.default, GpuDataType.default],\n    cacheHint: attributes.cacheKey\n  };\n\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\n};\n\nexport const gemm = (context: ComputeContext, attributes: GemmAttributes): void => {\n  validateInputs(context.inputs);\n  context.compute(createGemmProgramInfoLoader(context.inputs, attributes));\n};\n\nexport const parseGemmAttributes = (attributes: Record<string, unknown>): GemmAttributes =>\n    createAttributeWithCacheKey(attributes as Omit<GemmAttributes, keyof AttributeWithCacheKey>);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../util';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {ShaderHelper} from './common';\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\n\n\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul',\n  inputTypes: hasBias ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                        [GpuDataType.default, GpuDataType.default],\n  cacheHint\n});\n\nconst createMatmulProgramInfo =\n    (metadata: ProgramMetadata, inputs: readonly TensorView[], activationAttributes: InternalActivationAttributes):\n        ProgramInfo => {\n          const aShape = inputs[0].dims;\n          const bShape = inputs[1].dims;\n          const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n          if (!outputShape) {\n            throw new Error('Can\\'t use matmul on the given tensors');\n          }\n          const outputSize = ShapeUtil.size(outputShape);\n          // TODO: support broadcasting\n\n          const dataType = 'f32';  // TODO: support other data type\n          const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\n\n          const M = outputShape[outputShape.length - 2];\n          const K = aShape[aShape.length - 1];\n          const N = outputShape[outputShape.length - 1];\n          const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const M: u32 = ${M}u;\n  const N: u32 = ${N}u;\n  const K: u32 = ${K}u;\n\n  @group(0) @binding(0) var<storage, read> a : array<${dataType}>;\n  @group(0) @binding(1) var<storage, read> b : array<${dataType}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${dataType}>;\n\n  ${activationFunction}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    let stack = global_idx / (M * N);\n    let mn = global_idx % (M * N);\n    let n = global_idx % N;\n    let m = mn / N;\n\n    let offsetA = stack * (M * K);\n    let offsetB = stack * (K * N);\n\n    var value = ${dataType}(0);\n    for (var k: u32 = 0u; k<${K}u; k++) {\n      value += a[offsetA + m * K + k] * b[offsetB + k * N + n];\n    }\n    ${applyActivation}\n    output[global_idx] = value;\n  }`;\n          return {\n            ...metadata,\n            outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n            getShaderSource,\n            dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n          };\n        };\n\nexport const createMatmulProgramInfoLoader =\n    (inputs: readonly TensorView[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n      return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\n    };\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('MatMul requires 2 inputs.');\n  }\n\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\n    throw new Error('shared dimension does not match.');\n  }\n\n  if (inputs[0].dataType !== DataType.float || inputs[1].dataType !== DataType.float) {\n    throw new Error('inputs should be float type');\n  }\n};\n\nexport const matMul = (context: ComputeContext): void => {\n  validateInputs(context.inputs);\n\n  context.compute(createMatmulProgramInfoLoader(context.inputs, {activation: '', activationCacheKey: ''}));\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {PoolConvUtil, ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramMetadata} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\n\n// TODO: support:\n// - ceil_mode                 \"test_maxpool_2d_ceil\"\n// - storage_order             \"test_maxpool_with_argmax_2d_precomputed_strides\"\n// - [MaxPool] dilations       \"test_maxpool_2d_dilations\"\n// - [MaxPool] output[1]       \"test_maxpool_with_argmax_2d_precomputed_pads\"\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pool ops requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Pool ops supports 2-D inputs only for now.');\n  }\n  if (inputs[0].dataType !== DataType.float) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst getAdjustedPoolAttributesAndOutputShape = <AttributeType extends AveragePoolAttributes|MaxPoolAttributes>(\n    inputs: readonly TensorView[], attributes: AttributeType, isGlobalOperator: boolean): [AttributeType, number[]] => {\n  const isChannelsLast = attributes.format === 'NHWC';\n  const inputShapeAsChannelFirst = isChannelsLast ?\n      [inputs[0].dims[0], inputs[0].dims[3], inputs[0].dims[1], inputs[0].dims[2]] :\n      inputs[0].dims.slice();\n  const hasDilations = Object.hasOwnProperty.call(attributes, 'dilations');\n  const kernelShape = attributes.kernelShape.slice();\n  const strides = attributes.strides.slice();\n  const dilations: number[] = hasDilations ? (attributes as MaxPoolAttributes).dilations.slice() : [];\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPoolAttributes(isGlobalOperator, inputShapeAsChannelFirst, kernelShape, strides, dilations, pads);\n\n  const outputShapeAsChannelFirst = PoolConvUtil.computePoolOutputShape(\n      isGlobalOperator, inputShapeAsChannelFirst, strides, dilations, kernelShape, pads, attributes.autoPad);\n\n  const newAttributes = Object.assign({}, attributes);\n  if (hasDilations) {\n    Object.assign(newAttributes, {kernelShape, strides, pads, dilations, cacheKey: attributes.cacheKey});\n  } else {\n    Object.assign(newAttributes, {kernelShape, strides, pads, cacheKey: attributes.cacheKey});\n  }\n  return [\n    newAttributes,\n    isChannelsLast ?\n        [\n          outputShapeAsChannelFirst[0], outputShapeAsChannelFirst[2], outputShapeAsChannelFirst[3],\n          outputShapeAsChannelFirst[1]\n        ] :\n        outputShapeAsChannelFirst\n  ];\n};\n\nconst generatePoolingCode = <AttributeType extends AveragePoolAttributes|MaxPoolAttributes>(\n    shaderHelper: ShaderHelper, inputDims: readonly number[], outputShape: readonly number[], attributes: AttributeType,\n    op1: string, op2: string, dataType: string, start: string): string => {\n  const isChannelsLast = attributes.format === 'NHWC';\n  const rank = inputDims.length;\n  const outputSize = ShapeUtil.size(outputShape);\n  const outputIndicesHelper = createIndicesHelper('output', outputShape);\n  const xIndicesHelper = createIndicesHelper('x', inputDims);\n\n  if (attributes.kernelShape.length <= 2) {\n    const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\n    const sw = attributes.strides[attributes.strides.length - 1];\n    const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\n    const pwEnd = attributes.pads[attributes.pads.length - 1];\n    const dimIdxW = rank - (isChannelsLast ? 2 : 1);\n    let codeW = '';\n    let codeH = '';\n    let codeHEnd = '';\n    if (pwStart + pwEnd !== 0) {\n      codeW = `\n              for (var i: u32 = 0u; i < ${kw}u; i++) {\n                xIndices[${dimIdxW}] = indices[${dimIdxW}] * ${sw} - ${pwStart} + i;\n                if (xIndices[${dimIdxW}] < 0 || xIndices[${dimIdxW}] >= ${inputDims[dimIdxW]}) {\n                  pad++;\n                  continue;\n                }\n                let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n                ${op1}\n              }`;\n    } else {\n      codeW = `\n              for (var i: u32 = 0u; i < ${kw}u; i++) {\n                xIndices[${dimIdxW}] = indices[${dimIdxW}] * ${sw} - ${pwStart} + i;\n                let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n                ${op1}\n              }`;\n    }\n\n    if (attributes.kernelShape.length === 2) {\n      const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\n      const sh = attributes.strides[attributes.strides.length - 2];\n      const phStart = attributes.pads[attributes.pads.length / 2 - 2];\n      const phEnd = attributes.pads[attributes.pads.length - 2];\n      const dimIdxH = rank - (isChannelsLast ? 3 : 2);\n      const dimH = inputDims[dimIdxH];\n      if (phStart + phEnd !== 0) {\n        codeH = `\n                for (var j: u32 = 0u; j < ${kh}u; j++) {\n                  xIndices[${dimIdxH}] = indices[${dimIdxH}] * ${sh} - ${phStart} + j;\n                  if (xIndices[${dimIdxH}] < 0 || xIndices[${dimIdxH}] >= ${dimH}) {\n                    pad+= ${kw};\n                    continue;\n                  }\n              `;\n      } else {\n        codeH = `\n                for (var j: u32 = 0u; j < ${kh}u; j++) {\n                  xIndices[${dimIdxH}] = indices[${dimIdxH}] * ${sh} - ${phStart} + j;\n                `;\n      }\n      codeHEnd = `\n              }\n            `;\n    }\n\n    const poolingCode = `\n            @group(0) @binding(0) var<storage, read> x : array<${dataType}>;\n            @group(0) @binding(1) var<storage, read_write> output : array<${dataType}>;\n\n            ${outputIndicesHelper.o2iImpl}\n            ${xIndicesHelper.i2oImpl}\n\n            ${shaderHelper.mainStart()}\n              ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n              ${outputIndicesHelper.indicesVariableDeclaration('indices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'indices')}\n              ${outputIndicesHelper.indicesVariableDeclaration('xIndices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'xIndices')}\n\n              var value: ${dataType} = ${dataType}(${start});\n              var pad = 0;\n              ${codeH}\n              ${codeW}\n              ${codeHEnd}\n              ${op2}\n\n              output[global_idx] = value;\n            }`;\n    return poolingCode;\n  } else {\n    if (isChannelsLast) {\n      throw new Error('Pooling with kernelShape.length > 2 is not supported for NHWC format.');\n    }\n    const kernelSize = ShapeUtil.size(attributes.kernelShape);\n    const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\n    const stridesRank = kernelStrides.length;\n    const padsRank = attributes.pads.length;\n    const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\n    let padCode = '';\n    if (hasPads) {\n      padCode = `\n                if (xIndices[j] >= inputDims[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n                ${op1}\n              }`;\n    } else {\n      padCode = `\n              }\n              let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n              ${op1}\n            `;\n    }\n    const poolingCode = `\n            @group(0) @binding(0) var<storage, read> x : array<${dataType}>;\n            @group(0) @binding(1) var<storage, read_write> output : array<${dataType}>;\n\n            ${outputIndicesHelper.o2iImpl}\n            ${xIndicesHelper.i2oImpl}\n\n            const pads = array<u32, ${padsRank}>(${attributes.pads.map(i => `${i}u`).join(',')});\n            const inputDims = array<u32, ${rank}>(${inputDims.map(i => `${i}u`).join(',')});\n            const kernelStrides = array<u32, ${stridesRank}>(${kernelStrides.map(i => `${i}u`).join(',')});\n            const strides = array<u32, ${stridesRank}>(${attributes.strides.map(i => `${i}u`).join(',')});\n\n            ${shaderHelper.mainStart()}\n              ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n              ${outputIndicesHelper.indicesVariableDeclaration('indices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'indices')}\n              ${outputIndicesHelper.indicesVariableDeclaration('xIndices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'xIndices')}\n\n              var offsets: array<u32, ${stridesRank}>;\n\n              var value = ${dataType}(${start});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < ${kernelSize}u; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${stridesRank - 1}u; j++) {\n                  offsets[j] = offset / kernelStrides[j];\n                  offset -= offsets[j] * kernelStrides[j];\n                }\n                offsets[${stridesRank - 1}] = offset;\n\n                isPad = false;\n                for (var j = ${rank - stridesRank}u; j < ${rank}u; j++) {\n                  xIndices[j] = indices[j] * strides[j - ${rank - stridesRank}u]\n                    + offsets[j - ${rank - stridesRank}u] - pads[j - 2u];\n                  ${padCode}\n              }\n              ${op2}\n\n              output[global_idx] = value;\n            }`;\n    return poolingCode;\n  }\n};\n\nexport interface FormatAttributes {\n  readonly format: 'NHWC'|'NCHW';\n}\n\nexport interface PoolCommonAttributes extends FormatAttributes {\n  readonly autoPad: string;\n  readonly ceilMode: number;\n  readonly kernelShape: readonly number[];\n  readonly strides: readonly number[];\n  readonly pads: readonly number[];\n}\n\nconst parsePoolCommonAttributes = (attributes: Record<string, unknown>): PoolCommonAttributes => ({\n  format: attributes.format as FormatAttributes['format'],\n  autoPad: ['NOTSET', 'VALID', 'SAME_UPPER', 'SAME_LOWER'][attributes.auto_pad as number],\n  ceilMode: attributes.ceil_mode as number,\n  kernelShape: attributes.kernel_shape as [number, number],\n  strides: attributes.strides as [number, number],\n  pads: attributes.pads as [number, number, number, number]\n});\n\nexport interface AveragePoolAttributes extends PoolCommonAttributes, AttributeWithCacheKey {\n  readonly countIncludePad: boolean;\n}\n\nconst createAveragePoolProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, isGlobalOperator: boolean,\n     attributes: AveragePoolAttributes): ProgramInfo => {\n      const [adjustedAttributes, outputShape] =\n          getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n      const kernelSize = ShapeUtil.size(adjustedAttributes.kernelShape);\n\n      const dataType = 'f32';\n\n      const op1 = 'value += x_val;';\n      let op2 = '';\n      if (adjustedAttributes.countIncludePad) {\n        op2 += `value /= ${dataType}(${kernelSize});`;\n      } else {\n        op2 += `value /= ${dataType}(${kernelSize} - pad);`;\n      }\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        getShaderSource: shaderHelper => generatePoolingCode(\n            shaderHelper, inputs[0].dims, outputShape, adjustedAttributes, op1, op2, dataType, '0.0'),\n        dispatchGroup: () => ({x: Math.ceil(ShapeUtil.size(outputShape) / 64 /* workgroup size */)})\n      };\n    };\n\nexport const parseAveragePoolAttributes = (attributes: Record<string, unknown>): AveragePoolAttributes => {\n  const countIncludePad = (attributes.count_include_pad as number) === 0 ? false : true;\n\n  const attr = parsePoolCommonAttributes(attributes);\n  // TODO: support attribute 'ceil_mode'\n  if (attr.ceilMode !== 0) {\n    throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\n  }\n\n  return createAttributeWithCacheKey({countIncludePad, ...attr});\n};\n\nexport const averagePool = (context: ComputeContext, attributes: AveragePoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'AveragePool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createAveragePoolProgramInfo(context.inputs, metadata, false, attributes)});\n};\n\nconst globalPoolAttributes = {\n  autoPad: '',\n  ceilMode: 0,\n  countIncludePad: false,\n  kernelShape: [],\n  strides: [],\n  pads: [],\n  storageOrder: 0,\n  dilations: [],\n  cacheKey: ''\n};\n\nexport const parseGlobalAveragePoolAttributes = (attributes: Record<string, unknown>): AveragePoolAttributes => {\n  const format = attributes.format as FormatAttributes['format'];\n  return {format, ...globalPoolAttributes, cacheKey: format};\n};\n\nexport const globalAveragePool = (context: ComputeContext, attributes: AveragePoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'GlobalAveragePool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createAveragePoolProgramInfo(context.inputs, metadata, true, attributes)});\n};\n\nexport interface MaxPoolAttributes extends PoolCommonAttributes, AttributeWithCacheKey {\n  readonly storageOrder: number;\n  readonly dilations: number[];\n}\n\nconst createMaxPoolProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, isGlobalOperator: boolean,\n     attributes: MaxPoolAttributes): ProgramInfo => {\n      const [adjustedAttributes, outputShape] =\n          getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n      const op1 = `\n      value = max(x_val, value);\n    `;\n      const op2 = '';\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        getShaderSource: shaderHelper =>\n            generatePoolingCode(shaderHelper, inputs[0].dims, outputShape, adjustedAttributes, op1, op2, 'f32', '-1e5'),\n        dispatchGroup: () => ({x: Math.ceil(ShapeUtil.size(outputShape) / 64 /* workgroup size */)})\n      };\n    };\n\nexport const maxPool = (context: ComputeContext, attributes: MaxPoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'MaxPool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createMaxPoolProgramInfo(context.inputs, metadata, false, attributes)});\n};\n\nexport const parseMaxPoolAttributes = (attributes: Record<string, unknown>): MaxPoolAttributes => {\n  const storageOrder = attributes.storage_order as number;\n  const dilations = attributes.dilations as [number, number];\n\n  const attr = parsePoolCommonAttributes(attributes);\n  // TODO: support attribute 'ceil_mode' and 'storage_order'\n  if (storageOrder !== 0) {\n    throw new Error('column major storage order is not yet supported for MaxPool');\n  }\n  if (attr.ceilMode !== 0) {\n    throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\n  }\n\n  return createAttributeWithCacheKey({storageOrder, dilations, ...attr});\n};\n\nexport const parseGlobalMaxPoolAttributes = (attributes: Record<string, unknown>): MaxPoolAttributes => {\n  const format = attributes.format as FormatAttributes['format'];\n  return {format, ...globalPoolAttributes, cacheKey: format};\n};\n\nexport const globalMaxPool = (context: ComputeContext, attributes: MaxPoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'GlobalMaxPool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createMaxPoolProgramInfo(context.inputs, metadata, true, attributes)});\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\n\nexport interface TransposeAttributes extends AttributeWithCacheKey {\n  readonly perm: number[];\n}\n\nexport const transposeProgramMetadata = {\n  name: 'Transpose',\n  inputTypes: [GpuDataType.default]\n};\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Transpose requires 1 input.');\n  }\n\n  if (inputs[0].dataType !== DataType.float) {\n    throw new Error('input should be float tensor');\n  }\n};\n\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] =>\n    (perm && perm.length !== inputShape.length) ? [...(inputShape.keys())].reverse() : perm;\n\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] =>\n    ShapeUtil.sortBasedOnPerm(inputShape, getAdjustedPerm(inputShape, perm));\n\nconst permFunctionBody = (perm: number[], rank: number): string => {\n  const reverseFunc = [];\n  reverseFunc.push(`fn perm(a: ptr<function, array<u32, ${rank}>>, i: ptr<function, array<u32, ${rank}>>) {`);\n  for (let i = 0; i < rank; ++i) {\n    reverseFunc.push(`\\t(*a)[${perm[i]}]=(*i)[${i}];`);\n  }\n  reverseFunc.push('\\t}');\n  return reverseFunc.join('\\n');\n};\n\nexport const createTransposeProgramInfo = (input: TensorView, permAttr: number[]): ProgramInfo => {\n  const dataType = 'f32';  // TODO: support other data type\n  const inputShape = input.dims;\n  const perm = getAdjustedPerm(inputShape, permAttr);\n  const outputShape = getOutputShape(inputShape, perm);\n  const rank = inputShape.length;\n  const outputSize = ShapeUtil.size(outputShape);\n  // A dims=[${inputs[0].dims.toString()}]\n  // out Dims=[${unpackedOutputShape.toString()}]\n  // based on perm=[${perm.toString()}]\n\n  const outputIndicesHelper = createIndicesHelper('output', outputShape);\n  const inputIndicesHelper = createIndicesHelper('a', inputShape);\n\n  const getShaderSource = (shaderHelper: ShaderHelper) => `\n  @group(0) @binding(0) var<storage, read> a : array<${dataType}>;\n  @group(0) @binding(1) var<storage, read_write> output : array<${dataType}>;\n\n  ${permFunctionBody(perm, rank)}\n  ${outputIndicesHelper.o2iImpl}\n  ${inputIndicesHelper.i2oImpl}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    ${outputIndicesHelper.indicesVariableDeclaration('indices')}\n    ${outputIndicesHelper.o2iCall('global_idx', 'indices')}\n    ${inputIndicesHelper.indicesVariableDeclaration('aIndices')}\n    perm(&aIndices, &indices);\n\n    output[global_idx] = a[${inputIndicesHelper.i2oExpression('aIndices')}];\n  }`;\n  return {\n    ...transposeProgramMetadata,\n    outputs: [{dims: outputShape, dataType: input.dataType, gpuDataType: GpuDataType.default}],\n    getShaderSource,\n    dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n  };\n};\n\nexport const transpose = (context: ComputeContext, attributes: TransposeAttributes): void => {\n  validateInputs(context.inputs);\n  context.compute({\n    ...transposeProgramMetadata,\n    cacheHint: attributes.cacheKey,\n    get: () => createTransposeProgramInfo(context.inputs[0], attributes.perm)\n  });\n};\n\nexport const parseTransposeAttributes = (attributes: Record<string, unknown>): TransposeAttributes =>\n    createAttributeWithCacheKey({perm: attributes.perm as number[]});\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {MAX_CLIP, MIN_CLIP, ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {ShaderHelper} from './common';\n\ntype BuiltinFunctionName = string;\ntype ElementwiseCustomExpression = (expression: string) => string;\ntype ElementwiseFunctionCall = BuiltinFunctionName|ElementwiseCustomExpression;\n\nconst createElementwiseProgramShader =\n    (shaderHelper: ShaderHelper, datasize: number, funcCall: ElementwiseFunctionCall,\n     additionalImplementation?: string): string => {\n      const vecSize = Math.ceil(datasize / 4);\n\n      let expression = '';\n      if (typeof funcCall === 'string') {\n        expression = `${funcCall}(a)`;\n      } else {\n        expression = funcCall('a');\n      }\n      return `\n  @group(0) @binding(0) var<storage, read> inputData : array<vec4<f32>>;\n  @group(0) @binding(1) var<storage, read_write> outputData : array<vec4<f32>>;\n\n  ${additionalImplementation ?? ''}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(vecSize)}\n\n    let a = inputData[global_idx];\n    outputData[global_idx] = ${expression};\n  }`;\n    };\n\nconst createElementwiseProgramInfo =\n    (metadata: ProgramMetadata, input: TensorView, funcCall: ElementwiseFunctionCall,\n     additionalImplementation?: string): ProgramInfo => ({\n      ...metadata,\n      getShaderSource: shaderHelper =>\n          createElementwiseProgramShader(shaderHelper, ShapeUtil.size(input.dims), funcCall, additionalImplementation),\n      outputs: [{dims: input.dims, dataType: input.dataType, gpuDataType: GpuDataType.default}],\n      dispatchGroup: (inputTensors) =>\n          ({x: Math.ceil(ShapeUtil.size(inputTensors[0].dims) / 64 /* workgroup size */ / 4 /* vec size */)})\n    });\n\nconst createElementwiseProgramInfoLoader =\n    (input: TensorView, name: string, funcCall: ElementwiseFunctionCall, additionalImplementation?: string,\n     cacheKey?: string): ProgramInfoLoader => {\n      const metadata: ProgramMetadata = {name, inputTypes: [GpuDataType.default], cacheHint: cacheKey};\n      return {\n        ...metadata,\n        get: () => createElementwiseProgramInfo(metadata, input, funcCall, additionalImplementation)\n      };\n    };\n\nexport const abs = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Abs', 'abs'));\n};\n\nexport const acos = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Acos', 'acos'));\n};\n\nexport const acosh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Acosh', 'acosh'));\n};\n\nexport const asin = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Asin', 'asin'));\n};\n\nexport const asinh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Asinh', 'asinh'));\n};\n\nexport const atan = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Atan', 'atan'));\n};\nexport const atanh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Atanh', 'atanh'));\n};\n\nexport interface ClipAttributes extends AttributeWithCacheKey {\n  readonly min: number;\n  readonly max: number;\n}\n\nexport const clipV10 = (context: ComputeContext, attributes: ClipAttributes): void => {\n  context.compute(\n      createElementwiseProgramInfoLoader(\n          context.inputs[0], 'Clip', a => `clamp(${a}, clip_min_, clip_max_)`, `\n    const clip_min_: vec4<f32> = vec4(f32(${attributes.min}));\n    const clip_max_: vec4<f32> = vec4(f32(${attributes.max}));\n`,\n          attributes.cacheKey),\n      {inputs: [0]});\n};\nconst generateClipAttributesFromInputs = (inputs: readonly TensorView[]): ClipAttributes => {\n  const min = (inputs.length >= 2) ? inputs[1].getFloat32Array()[0] : MIN_CLIP;\n  const max = (inputs.length >= 3) ? inputs[2].getFloat32Array()[0] : MAX_CLIP;\n  return createAttributeWithCacheKey({min, max});\n};\n\nexport const clip = (context: ComputeContext): void => {\n  const attributes = generateClipAttributesFromInputs(context.inputs);\n  clipV10(context, attributes);\n};\n\nexport const ceil = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Ceil', 'ceil'));\n};\n\nexport const cos = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Cos', 'cos'));\n};\n\nexport const cosh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Cosh', 'cosh'));\n};\n\nexport interface AlphaAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const parseAlphaAttributes = (attributes: Record<string, unknown>): AlphaAttributes =>\n    createAttributeWithCacheKey(attributes as {alpha: number});\n\nexport const elu = (context: ComputeContext, attributes: AlphaAttributes): void => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'Elu', a => `elu_vf32(${a})`, `\n  const elu_alpha_: f32 = f32(${attributes.alpha});\n\n  fn elu_f32(a: f32) -> f32 {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,\n      attributes.cacheKey));\n};\n\nexport const erf = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Erf', a => `erf_vf32(${a})`, `\n  const r0: f32 = 0.3275911;\n  const r1: f32 = 0.254829592;\n  const r2: f32 = -0.284496736;\n  const r3: f32 = 1.421413741;\n  const r4: f32 = -1.453152027;\n  const r5: f32 = 1.061405429;\n\n  fn erf_vf32(v: vec4<f32>) -> vec4<f32> {\n    let absv = abs(v);\n    let x = 1.0 / (1.0 + r0 * absv);\n    return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n  }`));\n};\n\nexport const exp = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Exp', 'exp'));\n};\n\nexport const floor = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Floor', 'floor'));\n};\n\nexport const leakyRelu = (context: ComputeContext, attributes: AlphaAttributes): void => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'LeakyRelu', a => `select(leaky_relu_alpha_ * ${a}, ${a}, ${a} >= vec4<f32>(0.0))`,\n      `const leaky_relu_alpha_: f32 = f32(${attributes.alpha});`, attributes.cacheKey));\n};\n\nexport const neg = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Neg', a => `-${a}`));\n};\n\nexport const reciprocal = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Reciprocal', a => `1.0/${a}`));\n};\n\nexport const relu = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'Relu', a => `select(vec4<f32>(0.0), ${a}, ${a} > vec4<f32>(0.0))`));\n};\n\nexport const sigmoid = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sigmoid', a => `(1.0 / (1.0 + exp(-${a})))`));\n};\n\nexport const sin = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sin', 'sin'));\n};\n\nexport const sinh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sinh', 'sinh'));\n};\n\nexport const sqrt = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sqrt', 'sqrt'));\n};\n\nexport const tan = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Tan', 'tan'));\n};\n\nexport const tanh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Tanh', 'tanh'));\n};\n\nexport const thresholdedRelu = (context: ComputeContext, attributes: AlphaAttributes): number => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'ThresholdedRelu', a => `select(vec4<f32>(0.0), ${a}, ${a} > thresholded_relu_alpha_)`,\n      `const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${attributes.alpha});`, attributes.cacheKey));\n  return 0;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGpuBackend} from '../backend-webgpu';\nimport {LOG_DEBUG} from '../log';\n\nimport {createShaderHelper} from './ops/common';\nimport {Artifact, GpuData, ProgramInfo} from './types';\n\n/**\n * ProgramManager is the main class behind running computations\n * It builds ProgramInfo's into Artifacts\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\n * Uses the artifact to run the computation by calling Draw on\n * the WebGL drawing buffer\n * ProgramManager automatically maps (binds) input variables to their\n * corresponding Location's in the binary program\n */\nexport class ProgramManager {\n  repo: Map<unknown, Artifact>;  // this should be per-session object\n  attributesBound: boolean;\n\n  constructor(private backend: WebGpuBackend) {\n    this.repo = new Map();\n    this.attributesBound = false;\n  }\n  getArtifact(key: unknown): Artifact|undefined {\n    return this.repo.get(key);\n  }\n  setArtifact(key: unknown, artifact: Artifact): void {\n    this.repo.set(key, artifact);\n  }\n  run(buildArtifact: Artifact, inputs: GpuData[], outputs: GpuData[], dispatchGroup: [number, number, number]): void {\n    const device = this.backend.device;\n    const computePassEncoder = this.backend.getComputePassEncoder();\n\n    if (this.backend.profilingEnabled) {\n      // profiling write start timestamp\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (computePassEncoder as any).writeTimestamp(this.backend.profilingQuerySet, 0);\n    }\n\n    computePassEncoder.setPipeline(buildArtifact.computePipeline);\n    const entries = [];\n    for (const input of inputs) {\n      entries.push({binding: entries.length, resource: {buffer: input.buffer}});\n    }\n    for (const output of outputs) {\n      entries.push({binding: entries.length, resource: {buffer: output.buffer}});\n    }\n    const bindGroup = device.createBindGroup({layout: buildArtifact.computePipeline.getBindGroupLayout(0), entries});\n    computePassEncoder.setBindGroup(0, bindGroup);\n\n    computePassEncoder.dispatchWorkgroups(...dispatchGroup);\n\n    this.backend.pendingDispatchNumber++;\n\n    if (this.backend.profilingEnabled) {\n      // profiling write end timestamp\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (computePassEncoder as any).writeTimestamp(this.backend.profilingQuerySet, 1);\n      // eslint-disable-next-line no-bitwise\n      const queryData = this.backend.gpuDataManager.create(16, GPUBufferUsage.COPY_SRC | GPUBufferUsage.QUERY_RESOLVE);\n      // eslint-disable-next-line no-bitwise\n      const syncData = this.backend.gpuDataManager.create(16, GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST);\n\n      this.backend.endComputePass();\n      this.backend.getCommandEncoder().resolveQuerySet(this.backend.profilingQuerySet, 0, 2, queryData.buffer, 0);\n      this.backend.getCommandEncoder().copyBufferToBuffer(queryData.buffer, 0, syncData.buffer, 0, 16);\n      this.backend.flush();\n\n      const kernelId = this.backend.currentKernelId!;\n      const kernelName = this.backend.kernels.get(kernelId)![0];\n\n      syncData.buffer.mapAsync(GPUMapMode.READ).then(() => {\n        const mappedData = new BigUint64Array(syncData.buffer.getMappedRange());\n        const startTimeU64 = mappedData[0];\n        const endTimeU64 = mappedData[1];\n\n        syncData.buffer.unmap();\n\n        if (typeof this.backend.profilingTimeBase === 'undefined') {\n          this.backend.profilingTimeBase = startTimeU64;\n        }\n\n        const startTime = Number(startTimeU64 - this.backend.profilingTimeBase);\n        const endTime = Number(endTimeU64 - this.backend.profilingTimeBase);\n\n        if (!Number.isSafeInteger(startTime) || !Number.isSafeInteger(endTime)) {\n          throw new RangeError('incorrect timestamp range');\n        }\n\n        this.backend.gpuDataManager.release(queryData.id);\n        this.backend.gpuDataManager.release(syncData.id);\n\n        // eslint-disable-next-line no-console\n        console.log(`[profiling] kernel \"${kernelId}|${kernelName}\" execution time: ${endTime - startTime} ns`);\n      });\n    }\n\n    if (this.backend.pendingDispatchNumber >= 16) {\n      this.backend.flush();\n    }\n  }\n  dispose(): void {\n    // this.repo.forEach(a => this.glContext.deleteProgram(a.program));\n  }\n  build(programInfo: ProgramInfo, normalizedDispatchGroupSize: [number, number, number]): Artifact {\n    const device = this.backend.device;\n\n    const code = programInfo.getShaderSource(createShaderHelper(normalizedDispatchGroupSize));\n    const shaderModule = device.createShaderModule({code});\n    LOG_DEBUG('verbose', () => `[WebGPU] shader code: ${code}`);\n\n    const computePipeline =\n        device.createComputePipeline({compute: {module: shaderModule, entryPoint: 'main'}, layout: 'auto'});\n\n    return {programInfo, computePipeline};\n  }\n\n  normalizeDispatchGroupSize(dispatchGroup: ReturnType<ProgramInfo['dispatchGroup']>): [number, number, number] {\n    const x = typeof dispatchGroup === 'number' ? dispatchGroup : dispatchGroup.x;\n    const y = typeof dispatchGroup === 'number' ? 1 : (dispatchGroup.y || 1);\n    const z = typeof dispatchGroup === 'number' ? 1 : (dispatchGroup.z || 1);\n    const limitPerDimension = this.backend.device.limits.maxComputeWorkgroupsPerDimension;\n    if (x <= limitPerDimension && y <= limitPerDimension && z <= limitPerDimension) {\n      return [x, y, z];\n    }\n    const size = x * y * z;\n    let dispatchAverage = Math.ceil(Math.sqrt(size));\n    if (dispatchAverage > limitPerDimension) {\n      dispatchAverage = Math.ceil(Math.cbrt(size));\n      if (dispatchAverage > limitPerDimension) {\n        throw new Error('Total dispatch size exceeds WebGPU maximum.');\n      }\n      return [dispatchAverage, dispatchAverage, dispatchAverage];\n    } else {\n      return [dispatchAverage, dispatchAverage, 1];\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor, TensorView} from '../tensor';\n\nimport {ShaderHelper} from './ops/common';\n\nexport enum GpuDataType {\n  default = 0,\n  upload = 1,\n  profile = 2\n}\nexport type GpuDataId = number;\n\nexport interface GpuData {\n  type: GpuDataType;\n  id: GpuDataId;\n  buffer: GPUBuffer;\n}\n\nexport interface TensorInfo {\n  id?: Tensor.Id;\n  dims: readonly number[];\n  dataType: number;\n  gpuDataType: GpuDataType;\n}\n\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n\nexport interface ProgramMetadata {\n  /**\n   * the name of the program. used for debugging and profiling\n   */\n  name: string;\n\n  /**\n   * gpu data types for each input\n   */\n  inputTypes: GpuDataType[];\n  /**\n   * an optional string as a cache hint in the artifact cache\n   */\n  cacheHint?: string;\n}\n\n/**\n * A ProgramInfoLoader allows\n */\nexport interface ProgramInfoLoader extends ProgramMetadata {\n  /**\n   * a function to get the program info\n   */\n  get(): ProgramInfo;\n}\n\n/**\n * A set of data that represent a shader program\n */\nexport interface ProgramInfo extends ProgramMetadata {\n  /**\n   * information of uniform variables\n   */\n  variables?: ProgramVariable[];\n  /**\n   * tensor info for outputs\n   */\n  outputs: TensorInfo[];\n  /**\n   * the shader's processing source code\n   */\n  getShaderSource: (shaderHelper: ShaderHelper) => string;\n  /**\n   * default is \"main\"\n   */\n  // entryPoint: string;\n\n  dispatchGroup: (inputs: readonly TensorView[]) => {\n    x: number;\n    y?: number;\n    z?: number;\n  };\n}\n\nexport interface Artifact {\n  programInfo: ProgramInfo;\n  computePipeline: GPUComputePipeline;\n}\n\nexport interface ComputeContextInputsOutputsMapping {\n  /**\n   * specify the mapping to the program's inputs. the value can be a number or a tensor view.\n   * - if it's a number, it's the index of the kernel's input\n   * - if it's a tensor view, it's an existing tensor view that will be used as the input\n   *\n   * if inputs is not specified, the mapping will be the kernel's inputs in order.\n   */\n  readonly inputs?: ReadonlyArray<TensorView|number>;\n  /**\n   * specify the mapping to the program's outputs. the value must be a number.\n   * - if it's a non-negative number, it's the index of the kernel's output\n   * - if it's -1, it's an output that will be created as a temporary value. this value will be released after\n   * the kernel is executed.\n   * - if it's -2, it's an output that will be created as a persistent value. this value will be released when the\n   * kernel is released.\n   *\n   * if outputs is not specified, the mapping will be the kernel's outputs in order.\n   */\n  readonly outputs?: readonly number[];\n}\n\n/**\n * A ComputeContext instance carries the states that representing the current running of a kernel.\n */\nexport interface ComputeContext {\n  /**\n   * stores the pointer to OpKernelContext\n   */\n  readonly opKernelContext: number;\n\n  /**\n   * a list of inputs, each input is an instance of TensorView\n   */\n  readonly inputs: readonly TensorView[];\n\n  /**\n   * a custom data object that can be used to store any data that is needed by the kernel\n   */\n  readonly customData: {[key: string]: unknown};\n\n  compute(program: ProgramInfoLoader|ProgramInfo, inputsOutputsMapping?: ComputeContextInputsOutputsMapping):\n      TensorView[];\n  output(index: number, dims: readonly number[]): number;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession} from 'onnxruntime-common';\n\nimport {init as initJsep} from './jsep/init';\nimport {OrtWasmMessage, SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {getInstance, initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionAllocateCallbacks: Array<PromiseCallbacks<SerializableModeldata>> = [];\nconst createSessionFinalizeCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create_allocate':\n      if (ev.data.err) {\n        createSessionAllocateCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionAllocateCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create_finalize':\n      if (ev.data.err) {\n        createSessionFinalizeCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionFinalizeCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initWasm = async(): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, +(scriptSrc).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initOrt = async(numThreads: number, loggingLevel: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : {numThreads, loggingLevel}};\n      proxyWorker!.postMessage(message);\n\n      // TODO: support JSEP in worker\n    });\n  } else {\n    core.initOrt(numThreads, loggingLevel);\n\n    // init JSEP if available\n    await initJsep(getInstance());\n  }\n};\n\nexport const createSessionAllocate = async(model: Uint8Array): Promise<SerializableModeldata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableModeldata>((resolve, reject) => {\n      createSessionAllocateCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create_allocate', in : {model}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSessionAllocate(model);\n  }\n};\n\nexport const createSessionFinalize = async(modeldata: SerializableModeldata, options?: InferenceSession.SessionOptions):\n    Promise<SerializableSessionMetadata> => {\n      if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n        ensureWorker();\n        return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n          createSessionFinalizeCallbacks.push([resolve, reject]);\n          const message: OrtWasmMessage = {type: 'create_finalize', in : {modeldata, options}};\n          proxyWorker!.postMessage(message);\n        });\n      } else {\n        return core.createSessionFinalize(modeldata, options);\n      }\n    };\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      throw new Error('Can\\'t create run options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a run config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\nimport {promisify} from 'util';\n\nimport {SerializableModeldata} from './proxy-messages';\nimport {createSession, createSessionAllocate, createSessionFinalize, endProfiling, initOrt, releaseSession, run} from './proxy-wrapper';\nimport {logLevelStringToEnum} from './wasm-common';\n\nlet ortInit: boolean;\n\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async createSessionAllocate(path: string): Promise<SerializableModeldata> {\n    // fetch model from url and move to wasm heap. The arraybufffer that held the http\n    // response is freed once we return\n    const response = await fetch(path);\n    const arrayBuffer = await response.arrayBuffer();\n    return createSessionAllocate(new Uint8Array(arrayBuffer));\n  }\n\n  async loadModel(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!ortInit) {\n      await initOrt(env.wasm.numThreads!, logLevelStringToEnum(env.logLevel!));\n      ortInit = true;\n    }\n\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof fetch === 'undefined') {\n        // node\n        const model = await promisify(readFile)(pathOrBuffer);\n        [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n      } else {\n        // browser\n        // fetch model and move to wasm heap.\n        const modelData: SerializableModeldata = await this.createSessionAllocate(pathOrBuffer);\n        // create the session\n        [this.sessionId, this.inputNames, this.outputNames] = await createSessionFinalize(modelData, options);\n      }\n    } else {\n      [this.sessionId, this.inputNames, this.outputNames] = await createSession(pathOrBuffer, options);\n    }\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      // TODO: support pre-allocated output\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputIndices.push(index);\n    });\n\n    const outputs =\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\n\n    const result: SessionHandler.ReturnType = {};\n    for (let i = 0; i < outputs.length; i++) {\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\n    }\n    return result;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n\n  // if using JSEP with WebGPU, always disable memory pattern\n  if (options.executionProviders &&\n      options.executionProviders.some(ep => (typeof ep === 'string' ? ep : ep.name) === 'webgpu')) {\n    options.enableMemPattern = false;\n  }\n};\n\nconst setExecutionProviders =\n    (sessionOptionsHandle: number, executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n     allocs: number[]): void => {\n      for (const ep of executionProviders) {\n        let epName = typeof ep === 'string' ? ep : ep.name;\n\n        // check EP name\n        switch (epName) {\n          case 'xnnpack':\n            epName = 'XNNPACK';\n            break;\n          case 'webgpu':\n            epName = 'JS';\n            break;\n          case 'wasm':\n          case 'cpu':\n            continue;\n          default:\n            throw new Error(`not supported EP: ${epName}`);\n        }\n\n        const epNameDataOffset = allocWasmString(epName, allocs);\n        if (getInstance()._OrtAppendExecutionProvider(sessionOptionsHandle, epNameDataOffset) !== 0) {\n          throw new Error(`Can't append execution provider: ${epName}`);\n        }\n      }\n    };\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel ?? 'all');\n    const executionMode = getExecutionMode(sessionOptions.executionMode ?? 'sequential');\n    const logIdDataOffset =\n        typeof sessionOptions.logId === 'string' ? allocWasmString(sessionOptions.logId, allocs) : 0;\n\n    const logSeverityLevel = sessionOptions.logSeverityLevel ?? 2;  // Default to 2 - warning\n    if (!Number.isInteger(logSeverityLevel) || logSeverityLevel < 0 || logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${logSeverityLevel}`);\n    }\n\n    const logVerbosityLevel = sessionOptions.logVerbosityLevel ?? 0;  // Default to 0 - verbose\n    if (!Number.isInteger(logVerbosityLevel) || logVerbosityLevel < 0 || logVerbosityLevel > 4) {\n      throw new Error(`log verbosity level is not valid: ${logVerbosityLevel}`);\n    }\n\n    const optimizedModelFilePathOffset = typeof sessionOptions.optimizedModelFilePath === 'string' ?\n        allocWasmString(sessionOptions.optimizedModelFilePath, allocs) :\n        0;\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena, !!sessionOptions.enableMemPattern, executionMode,\n        !!sessionOptions.enableProfiling, 0, logIdDataOffset, logSeverityLevel, logVerbosityLevel,\n        optimizedModelFilePathOffset);\n    if (sessionOptionsHandle === 0) {\n      throw new Error('Can\\'t create session options');\n    }\n\n    if (sessionOptions.executionProviders) {\n      setExecutionProviders(sessionOptionsHandle, sessionOptions.executionProviders, allocs);\n    }\n\n    if (sessionOptions.extra !== undefined) {\n      iterateExtraOptions(sessionOptions.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a session config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from 'onnxruntime-common';\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nexport const enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n/**\n * Map string tensor data to enum value\n */\nexport const tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\n/**\n * Map enum value to string tensor data\n */\nexport const tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\n/**\n * get tensor element size in bytes by the given data type\n * @returns size in integer or undefined if the data type is not supported\n */\nexport const getTensorElementSize = (dateType: number): number|\n    undefined => [undefined, 4, 1, 1, 2, 2, 4, 8, undefined, 1, 2, 8, 4, 8, undefined, undefined, undefined][dateType];\n\n/**\n * get typed array constructor by the given tensor type\n */\nexport const tensorTypeToTypedArrayConstructor = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * Map string log level to integer value\n */\nexport const logLevelStringToEnum = (logLevel: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {allocWasmString} from './string-utils';\nimport {tensorDataTypeEnumToString, tensorDataTypeStringToEnum, tensorTypeToTypedArrayConstructor} from './wasm-common';\nimport {getInstance} from './wasm-factory';\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nexport const initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    throw new Error(`Can't initialize onnxruntime. error code = ${errorCode}`);\n  }\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\n */\ntype SessionMetadata = [number, number[], number[]];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSessionAllocate = (model: Uint8Array): [number, number] => {\n  const wasm = getInstance();\n  const modelDataOffset = wasm._malloc(model.byteLength);\n  wasm.HEAPU8.set(model, modelDataOffset);\n  return [modelDataOffset, model.byteLength];\n};\n\nexport const createSessionFinalize =\n    (modelData: SerializableModeldata, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        sessionHandle = wasm._OrtCreateSession(modelData[0], modelData[1], sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          throw new Error('Can\\'t create a session');\n        }\n      } finally {\n        wasm._free(modelData[0]);\n        if (sessionOptionsHandle !== 0) {\n          wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        }\n        allocs.forEach(wasm._free);\n      }\n\n      const inputCount = wasm._OrtGetInputCount(sessionHandle);\n      const outputCount = wasm._OrtGetOutputCount(sessionHandle);\n\n      const inputNames = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNames = [];\n      const outputNamesUTF8Encoded = [];\n      for (let i = 0; i < inputCount; i++) {\n        const name = wasm._OrtGetInputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an input name');\n        }\n        inputNamesUTF8Encoded.push(name);\n        inputNames.push(wasm.UTF8ToString(name));\n      }\n      for (let i = 0; i < outputCount; i++) {\n        const name = wasm._OrtGetOutputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an output name');\n        }\n        outputNamesUTF8Encoded.push(name);\n        outputNames.push(wasm.UTF8ToString(name));\n      }\n\n      activeSessions.set(sessionHandle, [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\n      return [sessionHandle, inputNames, outputNames];\n    };\n\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const modelData: SerializableModeldata = createSessionAllocate(model);\n      return createSessionFinalize(modelData, options);\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  inputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  outputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions.delete(sessionId);\n};\n\n/**\n * perform inference run\n */\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  const inputCount = inputIndices.length;\n  const outputCount = outputIndices.length;\n\n  let runOptionsHandle = 0;\n  let runOptionsAllocs: number[] = [];\n\n  const inputValues: number[] = [];\n  const inputAllocs: number[] = [];\n\n  try {\n    [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n    // create input tensors\n    for (let i = 0; i < inputCount; i++) {\n      const dataType = inputs[i][0];\n      const dims = inputs[i][1];\n      const data = inputs[i][2];\n\n      let dataOffset: number;\n      let dataByteLength: number;\n\n      if (Array.isArray(data)) {\n        // string tensor\n        dataByteLength = 4 * data.length;\n        dataOffset = wasm._malloc(dataByteLength);\n        inputAllocs.push(dataOffset);\n        let dataIndex = dataOffset / 4;\n        for (let i = 0; i < data.length; i++) {\n          if (typeof data[i] !== 'string') {\n            throw new TypeError(`tensor data at index ${i} is not a string`);\n          }\n          wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\n        }\n      } else {\n        dataByteLength = data.byteLength;\n        dataOffset = wasm._malloc(dataByteLength);\n        inputAllocs.push(dataOffset);\n        wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\n      }\n\n      const stack = wasm.stackSave();\n      const dimsOffset = wasm.stackAlloc(4 * dims.length);\n      try {\n        let dimIndex = dimsOffset / 4;\n        dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n        const tensor = wasm._OrtCreateTensor(\n            tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\n        if (tensor === 0) {\n          throw new Error('Can\\'t create a tensor');\n        }\n        inputValues.push(tensor);\n      } finally {\n        wasm.stackRestore(stack);\n      }\n    }\n\n    const beforeRunStack = wasm.stackSave();\n    const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n    const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n    const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n    const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n    try {\n      let inputValuesIndex = inputValuesOffset / 4;\n      let inputNamesIndex = inputNamesOffset / 4;\n      let outputValuesIndex = outputValuesOffset / 4;\n      let outputNamesIndex = outputNamesOffset / 4;\n      for (let i = 0; i < inputCount; i++) {\n        wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\n        wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n      }\n      for (let i = 0; i < outputCount; i++) {\n        wasm.HEAPU32[outputValuesIndex++] = 0;\n        wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n      }\n\n      // support RunOptions\n      let errorCode = wasm._OrtRun(\n          sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n          outputValuesOffset, runOptionsHandle);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const runPromise = wasm.jsepRunPromise;\n      if (runPromise && typeof runPromise.then !== 'undefined') {\n        errorCode = await runPromise;\n      }\n\n      const output: SerializableTensor[] = [];\n\n      if (errorCode === 0) {\n        for (let i = 0; i < outputCount; i++) {\n          const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n\n          const beforeGetTensorDataStack = wasm.stackSave();\n          // stack allocate 4 pointer value\n          const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n          let type: Tensor.Type|undefined, dataOffset = 0;\n          try {\n            errorCode = wasm._OrtGetTensorData(\n                tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n            if (errorCode !== 0) {\n              throw new Error(`Can't access output tensor data. error code = ${errorCode}`);\n            }\n            let tensorDataIndex = tensorDataOffset / 4;\n            const dataType = wasm.HEAPU32[tensorDataIndex++];\n            dataOffset = wasm.HEAPU32[tensorDataIndex++];\n            const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n            const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n            const dims = [];\n            for (let i = 0; i < dimsLength; i++) {\n              dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n            }\n            wasm._OrtFree(dimsOffset);\n\n            const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\n            type = tensorDataTypeEnumToString(dataType);\n            if (type === 'string') {\n              const stringData: string[] = [];\n              let dataIndex = dataOffset / 4;\n              for (let i = 0; i < size; i++) {\n                const offset = wasm.HEAPU32[dataIndex++];\n                const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n                stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n              }\n              output.push([type, dims, stringData]);\n            } else {\n              const typedArrayConstructor = tensorTypeToTypedArrayConstructor(type);\n              const data = new typedArrayConstructor(size);\n              new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                  .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n              output.push([type, dims, data]);\n            }\n          } finally {\n            wasm.stackRestore(beforeGetTensorDataStack);\n            if (type === 'string' && dataOffset) {\n              wasm._free(dataOffset);\n            }\n            wasm._OrtReleaseTensor(tensor);\n          }\n        }\n      }\n\n      if (errorCode === 0) {\n        return output;\n      } else {\n        throw new Error(`failed to call OrtRun(). error code = ${errorCode}.`);\n      }\n    } finally {\n      wasm.stackRestore(beforeRunStack);\n    }\n  } finally {\n    inputValues.forEach(wasm._OrtReleaseTensor);\n    inputAllocs.forEach(wasm._free);\n\n    wasm._OrtReleaseRunOptions(runOptionsHandle);\n    runOptionsAllocs.forEach(wasm._free);\n  }\n};\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    throw new Error('Can\\'t get an profile file name');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && data.buffer) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\nimport * as path from 'path';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\n\n/* eslint-disable @typescript-eslint/no-require-imports */\nconst ortWasmFactory: EmscriptenModuleFactory<OrtWasmModule> =\n    BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm.js') : require('./binding/ort-wasm-simd.jsep.js');\n\nconst ortWasmFactoryThreaded: EmscriptenModuleFactory<OrtWasmModule> = !BUILD_DEFS.DISABLE_WASM_THREAD ?\n    (BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm-threaded.js') :\n                                 require('./binding/ort-wasm-simd-threaded.jsep.js')) :\n    ortWasmFactory;\n/* eslint-enable @typescript-eslint/no-require-imports */\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(new Uint8Array([\n      0,   97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1,   28,  0, 65, 0,\n      253, 15, 253, 12,  0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0,  0,  253, 186, 1, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPaths = flags.wasmPaths;\n  const wasmPrefixOverride = typeof wasmPaths === 'string' ? wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof wasmPaths === 'object' ? wasmPaths[wasmFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads && fileName.endsWith('.worker.js') &&\n            typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName.endsWith('.wasm')) {\n          if (wasmPathOverride) {\n            return wasmPathOverride;\n          }\n\n          const prefix = wasmPrefixOverride ?? scriptDirectory;\n\n          if (!BUILD_DEFS.DISABLE_WEBGPU) {\n            if (wasmFileName === 'ort-wasm-simd.wasm') {\n              return prefix + 'ort-wasm-simd.jsep.wasm';\n            } else if (wasmFileName === 'ort-wasm-simd-threaded.wasm') {\n              return prefix + 'ort-wasm-simd-threaded.jsep.wasm';\n            }\n          }\n\n          return prefix + wasmFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode = `var ortWasmThreaded=(function(){var _scriptDir;return ${factory.toString()}})();`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","\nimport worker from \"!!../../../../node_modules/worker-loader/dist/runtime/inline.js\";\n\nexport default function Worker_fn() {\n  return worker(\"/*!\\n* ONNX Runtime Web v1.16.0\\n* Copyright (c) Microsoft Corporation. All rights reserved.\\n* Licensed under the MIT License.\\n*/\\n!function(){var t={899:function(t,n){\\\"use strict\\\";var e=this&&this.__read||function(t,n){var e=\\\"function\\\"==typeof Symbol&&t[Symbol.iterator];if(!e)return t;var r,i,a=e.call(t),o=[];try{for(;(void 0===n||n-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(t){i={error:t}}finally{try{r&&!r.done&&(e=a.return)&&e.call(a)}finally{if(i)throw i.error}}return o};Object.defineProperty(n,\\\"__esModule\\\",{value:!0}),n.iterateExtraOptions=void 0,n.iterateExtraOptions=function(t,r,i,a){if(\\\"object\\\"==typeof t&&null!==t){if(i.has(t))throw new Error(\\\"Circular reference in options\\\");i.add(t)}Object.entries(t).forEach((function(t){var o=e(t,2),u=o[0],c=o[1],l=r?r+u:u;if(\\\"object\\\"==typeof c)(0,n.iterateExtraOptions)(c,l+\\\".\\\",i,a);else if(\\\"string\\\"==typeof c||\\\"number\\\"==typeof c)a(l,c.toString());else{if(\\\"boolean\\\"!=typeof c)throw new Error(\\\"Can't handle extra config type: \\\".concat(typeof c));a(l,c?\\\"1\\\":\\\"0\\\")}}))}},918:function(t,n,e){\\\"use strict\\\";Object.defineProperty(n,\\\"__esModule\\\",{value:!0}),n.setRunOptions=void 0;var r=e(899),i=e(444),a=e(263);n.setRunOptions=function(t){var n=(0,a.getInstance)(),e=0,o=[],u=t||{};try{if(void 0===(null==t?void 0:t.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof t.logSeverityLevel||!Number.isInteger(t.logSeverityLevel)||t.logSeverityLevel<0||t.logSeverityLevel>4)throw new Error(\\\"log serverity level is not valid: \\\".concat(t.logSeverityLevel));if(void 0===(null==t?void 0:t.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof t.logVerbosityLevel||!Number.isInteger(t.logVerbosityLevel))throw new Error(\\\"log verbosity level is not valid: \\\".concat(t.logVerbosityLevel));void 0===(null==t?void 0:t.terminate)&&(u.terminate=!1);var c=0;if(void 0!==(null==t?void 0:t.tag)&&(c=(0,i.allocWasmString)(t.tag,o)),0===(e=n._OrtCreateRunOptions(u.logSeverityLevel,u.logVerbosityLevel,!!u.terminate,c)))throw new Error(\\\"Can't create run options\\\");return void 0!==(null==t?void 0:t.extra)&&(0,r.iterateExtraOptions)(t.extra,\\\"\\\",new WeakSet,(function(t,r){var a=(0,i.allocWasmString)(t,o),u=(0,i.allocWasmString)(r,o);if(0!==n._OrtAddRunConfigEntry(e,a,u))throw new Error(\\\"Can't set a run config entry: \\\".concat(t,\\\" - \\\").concat(r))})),[e,o]}catch(t){throw 0!==e&&n._OrtReleaseRunOptions(e),o.forEach(n._free),t}}},622:function(t,n,e){\\\"use strict\\\";var r=this&&this.__values||function(t){var n=\\\"function\\\"==typeof Symbol&&Symbol.iterator,e=n&&t[n],r=0;if(e)return e.call(t);if(t&&\\\"number\\\"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(n?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")};Object.defineProperty(n,\\\"__esModule\\\",{value:!0}),n.setSessionOptions=void 0;var i=e(899),a=e(444),o=e(263);n.setSessionOptions=function(t){var n,e,u,c,l=(0,o.getInstance)(),f=0,s=[],p=t||{};!function(t){t.extra||(t.extra={}),t.extra.session||(t.extra.session={});var n=t.extra.session;n.use_ort_model_bytes_directly||(n.use_ort_model_bytes_directly=\\\"1\\\"),t.executionProviders&&t.executionProviders.some((function(t){return\\\"webgpu\\\"===(\\\"string\\\"==typeof t?t:t.name)}))&&(t.enableMemPattern=!1)}(p);try{var h=function(t){switch(t){case\\\"disabled\\\":return 0;case\\\"basic\\\":return 1;case\\\"extended\\\":return 2;case\\\"all\\\":return 99;default:throw new Error(\\\"unsupported graph optimization level: \\\".concat(t))}}(null!==(n=p.graphOptimizationLevel)&&void 0!==n?n:\\\"all\\\"),d=function(t){switch(t){case\\\"sequential\\\":return 0;case\\\"parallel\\\":return 1;default:throw new Error(\\\"unsupported execution mode: \\\".concat(t))}}(null!==(e=p.executionMode)&&void 0!==e?e:\\\"sequential\\\"),y=\\\"string\\\"==typeof p.logId?(0,a.allocWasmString)(p.logId,s):0,v=null!==(u=p.logSeverityLevel)&&void 0!==u?u:2;if(!Number.isInteger(v)||v<0||v>4)throw new Error(\\\"log serverity level is not valid: \\\".concat(v));var m=null!==(c=p.logVerbosityLevel)&&void 0!==c?c:0;if(!Number.isInteger(m)||m<0||m>4)throw new Error(\\\"log verbosity level is not valid: \\\".concat(m));var g=\\\"string\\\"==typeof p.optimizedModelFilePath?(0,a.allocWasmString)(p.optimizedModelFilePath,s):0;if(0===(f=l._OrtCreateSessionOptions(h,!!p.enableCpuMemArena,!!p.enableMemPattern,d,!!p.enableProfiling,0,y,v,m,g)))throw new Error(\\\"Can't create session options\\\");return p.executionProviders&&function(t,n,e){var i,u;try{for(var c=r(n),l=c.next();!l.done;l=c.next()){var f=l.value,s=\\\"string\\\"==typeof f?f:f.name;switch(s){case\\\"xnnpack\\\":s=\\\"XNNPACK\\\";break;case\\\"webgpu\\\":s=\\\"JS\\\";break;case\\\"wasm\\\":case\\\"cpu\\\":continue;default:throw new Error(\\\"not supported EP: \\\".concat(s))}var p=(0,a.allocWasmString)(s,e);if(0!==(0,o.getInstance)()._OrtAppendExecutionProvider(t,p))throw new Error(\\\"Can't append execution provider: \\\".concat(s))}}catch(t){i={error:t}}finally{try{l&&!l.done&&(u=c.return)&&u.call(c)}finally{if(i)throw i.error}}}(f,p.executionProviders,s),void 0!==p.extra&&(0,i.iterateExtraOptions)(p.extra,\\\"\\\",new WeakSet,(function(t,n){var e=(0,a.allocWasmString)(t,s),r=(0,a.allocWasmString)(n,s);if(0!==l._OrtAddSessionConfigEntry(f,e,r))throw new Error(\\\"Can't set a session config entry: \\\".concat(t,\\\" - \\\").concat(n))})),[f,s]}catch(t){throw 0!==f&&l._OrtReleaseSessionOptions(f),s.forEach(l._free),t}}},444:function(t,n,e){\\\"use strict\\\";Object.defineProperty(n,\\\"__esModule\\\",{value:!0}),n.allocWasmString=void 0;var r=e(263);n.allocWasmString=function(t,n){var e=(0,r.getInstance)(),i=e.lengthBytesUTF8(t)+1,a=e._malloc(i);return e.stringToUTF8(t,a,i),n.push(a),a}},917:function(t,n){\\\"use strict\\\";Object.defineProperty(n,\\\"__esModule\\\",{value:!0}),n.logLevelStringToEnum=n.tensorTypeToTypedArrayConstructor=n.getTensorElementSize=n.tensorDataTypeEnumToString=n.tensorDataTypeStringToEnum=void 0,n.tensorDataTypeStringToEnum=function(t){switch(t){case\\\"int8\\\":return 3;case\\\"uint8\\\":return 2;case\\\"bool\\\":return 9;case\\\"int16\\\":return 5;case\\\"uint16\\\":return 4;case\\\"int32\\\":return 6;case\\\"uint32\\\":return 12;case\\\"float32\\\":return 1;case\\\"float64\\\":return 11;case\\\"string\\\":return 8;case\\\"int64\\\":return 7;case\\\"uint64\\\":return 13;default:throw new Error(\\\"unsupported data type: \\\".concat(t))}},n.tensorDataTypeEnumToString=function(t){switch(t){case 3:return\\\"int8\\\";case 2:return\\\"uint8\\\";case 9:return\\\"bool\\\";case 5:return\\\"int16\\\";case 4:return\\\"uint16\\\";case 6:return\\\"int32\\\";case 12:return\\\"uint32\\\";case 1:return\\\"float32\\\";case 11:return\\\"float64\\\";case 8:return\\\"string\\\";case 7:return\\\"int64\\\";case 13:return\\\"uint64\\\";default:throw new Error(\\\"unsupported data type: \\\".concat(t))}},n.getTensorElementSize=function(t){return[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][t]},n.tensorTypeToTypedArrayConstructor=function(t){switch(t){case\\\"float32\\\":return Float32Array;case\\\"uint8\\\":case\\\"bool\\\":return Uint8Array;case\\\"int8\\\":return Int8Array;case\\\"uint16\\\":return Uint16Array;case\\\"int16\\\":return Int16Array;case\\\"int32\\\":return Int32Array;case\\\"float64\\\":return Float64Array;case\\\"uint32\\\":return Uint32Array;case\\\"int64\\\":return BigInt64Array;case\\\"uint64\\\":return BigUint64Array;default:throw new Error(\\\"unsupported type: \\\".concat(t))}},n.logLevelStringToEnum=function(t){switch(t){case\\\"verbose\\\":return 0;case\\\"info\\\":return 1;case\\\"warning\\\":return 2;case\\\"error\\\":return 3;case\\\"fatal\\\":return 4;default:throw new Error(\\\"unsupported logging level: \\\".concat(t))}}},259:function(t,n,e){\\\"use strict\\\";var r=this&&this.__awaiter||function(t,n,e,r){return new(e||(e=Promise))((function(i,a){function o(t){try{c(r.next(t))}catch(t){a(t)}}function u(t){try{c(r.throw(t))}catch(t){a(t)}}function c(t){var n;t.done?i(t.value):(n=t.value,n instanceof e?n:new e((function(t){t(n)}))).then(o,u)}c((r=r.apply(t,n||[])).next())}))},i=this&&this.__generator||function(t,n){var e,r,i,a,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:u(0),throw:u(1),return:u(2)},\\\"function\\\"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function u(u){return function(c){return function(u){if(e)throw new TypeError(\\\"Generator is already executing.\\\");for(;a&&(a=0,u[0]&&(o=0)),o;)try{if(e=1,r&&(i=2&u[0]?r.return:u[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,u[1])).done)return i;switch(r=0,i&&(u=[2&u[0],i.value]),u[0]){case 0:case 1:i=u;break;case 4:return o.label++,{value:u[1],done:!1};case 5:o.label++,r=u[1],u=[0];continue;case 7:u=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==u[0]&&2!==u[0])){o=0;continue}if(3===u[0]&&(!i||u[1]>i[0]&&u[1]<i[3])){o.label=u[1];break}if(6===u[0]&&o.label<i[1]){o.label=i[1],i=u;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(u);break}i[2]&&o.ops.pop(),o.trys.pop();continue}u=n.call(t,o)}catch(t){u=[6,t],r=0}finally{e=i=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,c])}}},a=this&&this.__read||function(t,n){var e=\\\"function\\\"==typeof Symbol&&t[Symbol.iterator];if(!e)return t;var r,i,a=e.call(t),o=[];try{for(;(void 0===n||n-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(t){i={error:t}}finally{try{r&&!r.done&&(e=a.return)&&e.call(a)}finally{if(i)throw i.error}}return o},o=this&&this.__values||function(t){var n=\\\"function\\\"==typeof Symbol&&Symbol.iterator,e=n&&t[n],r=0;if(e)return e.call(t);if(t&&\\\"number\\\"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(n?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")};Object.defineProperty(n,\\\"__esModule\\\",{value:!0}),n.extractTransferableBuffers=n.endProfiling=n.run=n.releaseSession=n.createSession=n.createSessionFinalize=n.createSessionAllocate=n.initOrt=void 0;var u=e(918),c=e(622),l=e(444),f=e(917),s=e(263);n.initOrt=function(t,n){var e=(0,s.getInstance)()._OrtInit(t,n);if(0!==e)throw new Error(\\\"Can't initialize onnxruntime. error code = \\\".concat(e))};var p=new Map;n.createSessionAllocate=function(t){var n=(0,s.getInstance)(),e=n._malloc(t.byteLength);return n.HEAPU8.set(t,e),[e,t.byteLength]},n.createSessionFinalize=function(t,n){var e,r=(0,s.getInstance)(),i=0,o=0,u=[];try{if(o=(e=a((0,c.setSessionOptions)(n),2))[0],u=e[1],0===(i=r._OrtCreateSession(t[0],t[1],o)))throw new Error(\\\"Can't create a session\\\")}finally{r._free(t[0]),0!==o&&r._OrtReleaseSessionOptions(o),u.forEach(r._free)}for(var l=r._OrtGetInputCount(i),f=r._OrtGetOutputCount(i),h=[],d=[],y=[],v=[],m=0;m<l;m++){var g=r._OrtGetInputName(i,m);if(0===g)throw new Error(\\\"Can't get an input name\\\");d.push(g),h.push(r.UTF8ToString(g))}for(m=0;m<f;m++){var w=r._OrtGetOutputName(i,m);if(0===w)throw new Error(\\\"Can't get an output name\\\");v.push(w),y.push(r.UTF8ToString(w))}return p.set(i,[i,d,v]),[i,h,y]},n.createSession=function(t,e){var r=(0,n.createSessionAllocate)(t);return(0,n.createSessionFinalize)(r,e)},n.releaseSession=function(t){var n=(0,s.getInstance)(),e=p.get(t);if(!e)throw new Error(\\\"invalid session id\\\");var r=e[0],i=e[1],a=e[2];i.forEach(n._OrtFree),a.forEach(n._OrtFree),n._OrtReleaseSession(r),p.delete(t)},n.run=function(t,n,e,o,c){return r(void 0,void 0,void 0,(function(){var r,h,d,y,v,m,g,w,_,b,j,C,O,S,T,A,E,M,x,R,k,D,P,F,I,U,W,H,Y,L,z,G,B,N,V,q,X,J,Z,Q,$,K,tt,nt,et;return i(this,(function(i){switch(i.label){case 0:if(r=(0,s.getInstance)(),!(h=p.get(t)))throw new Error(\\\"invalid session id\\\");d=h[0],y=h[1],v=h[2],m=n.length,g=o.length,w=0,_=[],b=[],j=[],i.label=1;case 1:for(i.trys.push([1,,7,8]),et=a((0,u.setRunOptions)(c),2),w=et[0],_=et[1],C=function(t){var n=e[t][0],i=e[t][1],a=e[t][2],o=void 0,u=void 0;if(Array.isArray(a)){u=4*a.length,o=r._malloc(u),j.push(o);for(var c=o/4,s=0;s<a.length;s++){if(\\\"string\\\"!=typeof a[s])throw new TypeError(\\\"tensor data at index \\\".concat(s,\\\" is not a string\\\"));r.HEAPU32[c++]=(0,l.allocWasmString)(a[s],j)}}else u=a.byteLength,o=r._malloc(u),j.push(o),r.HEAPU8.set(new Uint8Array(a.buffer,a.byteOffset,u),o);var p=r.stackSave(),h=r.stackAlloc(4*i.length);try{var d=h/4;i.forEach((function(t){return r.HEAP32[d++]=t}));var y=r._OrtCreateTensor((0,f.tensorDataTypeStringToEnum)(n),o,u,h,i.length);if(0===y)throw new Error(\\\"Can't create a tensor\\\");b.push(y)}finally{r.stackRestore(p)}},I=0;I<m;I++)C(I);O=r.stackSave(),S=r.stackAlloc(4*m),T=r.stackAlloc(4*m),A=r.stackAlloc(4*g),E=r.stackAlloc(4*g),i.label=2;case 2:for(i.trys.push([2,,5,6]),M=S/4,x=T/4,R=A/4,k=E/4,I=0;I<m;I++)r.HEAPU32[M++]=b[I],r.HEAPU32[x++]=y[n[I]];for(I=0;I<g;I++)r.HEAPU32[R++]=0,r.HEAPU32[k++]=v[o[I]];return D=r._OrtRun(d,T,S,m,E,g,A,w),(P=r.jsepRunPromise)&&void 0!==P.then?[4,P]:[3,4];case 3:D=i.sent(),i.label=4;case 4:if(F=[],0===D)for(I=0;I<g;I++){U=r.HEAPU32[A/4+I],W=r.stackSave(),H=r.stackAlloc(16),Y=void 0,L=0;try{if(0!==(D=r._OrtGetTensorData(U,H,H+4,H+8,H+12)))throw new Error(\\\"Can't access output tensor data. error code = \\\".concat(D));for(z=H/4,G=r.HEAPU32[z++],L=r.HEAPU32[z++],B=r.HEAPU32[z++],N=r.HEAPU32[z++],V=[],q=0;q<N;q++)V.push(r.HEAPU32[B/4+q]);if(r._OrtFree(B),X=0===V.length?1:V.reduce((function(t,n){return t*n})),\\\"string\\\"===(Y=(0,f.tensorDataTypeEnumToString)(G))){for(J=[],Z=L/4,Q=0;Q<X;Q++)$=r.HEAPU32[Z++],K=Q===X-1?void 0:r.HEAPU32[Z]-$,J.push(r.UTF8ToString($,K));F.push([Y,V,J])}else tt=(0,f.tensorTypeToTypedArrayConstructor)(Y),nt=new tt(X),new Uint8Array(nt.buffer,nt.byteOffset,nt.byteLength).set(r.HEAPU8.subarray(L,L+nt.byteLength)),F.push([Y,V,nt])}finally{r.stackRestore(W),\\\"string\\\"===Y&&L&&r._free(L),r._OrtReleaseTensor(U)}}if(0===D)return[2,F];throw new Error(\\\"failed to call OrtRun(). error code = \\\".concat(D,\\\".\\\"));case 5:return r.stackRestore(O),[7];case 6:return[3,8];case 7:return b.forEach(r._OrtReleaseTensor),j.forEach(r._free),r._OrtReleaseRunOptions(w),_.forEach(r._free),[7];case 8:return[2]}}))}))},n.endProfiling=function(t){var n=(0,s.getInstance)(),e=p.get(t);if(!e)throw new Error(\\\"invalid session id\\\");var r=e[0],i=n._OrtEndProfiling(r);if(0===i)throw new Error(\\\"Can't get an profile file name\\\");n._OrtFree(i)},n.extractTransferableBuffers=function(t){var n,e,r=[];try{for(var i=o(t),a=i.next();!a.done;a=i.next()){var u=a.value[2];!Array.isArray(u)&&u.buffer&&r.push(u.buffer)}}catch(t){n={error:t}}finally{try{a&&!a.done&&(e=i.return)&&e.call(i)}finally{if(n)throw n.error}}return r}},263:function(t,n,e){\\\"use strict\\\";var r=this&&this.__createBinding||(Object.create?function(t,n,e,r){void 0===r&&(r=e);var i=Object.getOwnPropertyDescriptor(n,e);i&&!(\\\"get\\\"in i?!n.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return n[e]}}),Object.defineProperty(t,r,i)}:function(t,n,e,r){void 0===r&&(r=e),t[r]=n[e]}),i=this&&this.__setModuleDefault||(Object.create?function(t,n){Object.defineProperty(t,\\\"default\\\",{enumerable:!0,value:n})}:function(t,n){t.default=n}),a=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var e in t)\\\"default\\\"!==e&&Object.prototype.hasOwnProperty.call(t,e)&&r(n,t,e);return i(n,t),n},o=this&&this.__awaiter||function(t,n,e,r){return new(e||(e=Promise))((function(i,a){function o(t){try{c(r.next(t))}catch(t){a(t)}}function u(t){try{c(r.throw(t))}catch(t){a(t)}}function c(t){var n;t.done?i(t.value):(n=t.value,n instanceof e?n:new e((function(t){t(n)}))).then(o,u)}c((r=r.apply(t,n||[])).next())}))},u=this&&this.__generator||function(t,n){var e,r,i,a,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:u(0),throw:u(1),return:u(2)},\\\"function\\\"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function u(u){return function(c){return function(u){if(e)throw new TypeError(\\\"Generator is already executing.\\\");for(;a&&(a=0,u[0]&&(o=0)),o;)try{if(e=1,r&&(i=2&u[0]?r.return:u[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,u[1])).done)return i;switch(r=0,i&&(u=[2&u[0],i.value]),u[0]){case 0:case 1:i=u;break;case 4:return o.label++,{value:u[1],done:!1};case 5:o.label++,r=u[1],u=[0];continue;case 7:u=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==u[0]&&2!==u[0])){o=0;continue}if(3===u[0]&&(!i||u[1]>i[0]&&u[1]<i[3])){o.label=u[1];break}if(6===u[0]&&o.label<i[1]){o.label=i[1],i=u;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(u);break}i[2]&&o.ops.pop(),o.trys.pop();continue}u=n.call(t,o)}catch(t){u=[6,t],r=0}finally{e=i=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,c])}}};Object.defineProperty(n,\\\"__esModule\\\",{value:!0}),n.dispose=n.getInstance=n.initializeWebAssembly=void 0;var c,l=a(e(449)),f=e(932),s=e(474),p=!1,h=!1,d=!1;n.initializeWebAssembly=function(t){return o(void 0,void 0,void 0,(function(){var n,r,i,a,o,y,v,m,g,w,_;return u(this,(function(u){switch(u.label){case 0:if(p)return[2,Promise.resolve()];if(h)throw new Error(\\\"multiple calls to 'initializeWebAssembly()' detected.\\\");if(d)throw new Error(\\\"previous call to 'initializeWebAssembly()' failed.\\\");return h=!0,n=t.initTimeout,r=t.numThreads,i=t.simd,a=r>1&&function(){try{return\\\"undefined\\\"!=typeof SharedArrayBuffer&&(\\\"undefined\\\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(t){return!1}}(),o=i&&function(){try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch(t){return!1}}(),y=t.wasmPaths,v=\\\"string\\\"==typeof y?y:void 0,m=function(t,n){return n?t?\\\"ort-wasm-simd-threaded.wasm\\\":\\\"ort-wasm-threaded.wasm\\\":t?\\\"ort-wasm-simd.wasm\\\":\\\"ort-wasm.wasm\\\"}(o,a),g=\\\"object\\\"==typeof y?y[m]:void 0,w=!1,_=[],n>0&&_.push(new Promise((function(t){setTimeout((function(){w=!0,t()}),n)}))),_.push(new Promise((function(t,n){var r=a?s:f,i={locateFile:function(t,n){return a&&t.endsWith(\\\".worker.js\\\")&&\\\"undefined\\\"!=typeof Blob?URL.createObjectURL(new Blob([e(154)],{type:\\\"text/javascript\\\"})):t.endsWith(\\\".wasm\\\")?g||(null!=v?v:n)+m:n+t}};if(a)if(\\\"undefined\\\"==typeof Blob)i.mainScriptUrlOrBlob=l.join(\\\"/\\\",\\\"ort-wasm-threaded.js\\\");else{var o=\\\"var ortWasmThreaded=(function(){var _scriptDir;return \\\".concat(r.toString(),\\\"})();\\\");i.mainScriptUrlOrBlob=new Blob([o],{type:\\\"text/javascript\\\"})}r(i).then((function(n){h=!1,p=!0,c=n,t()}),(function(t){h=!1,d=!0,n(t)}))}))),[4,Promise.race(_)];case 1:if(u.sent(),w)throw new Error(\\\"WebAssembly backend initializing failed due to timeout: \\\".concat(n,\\\"ms\\\"));return[2]}}))}))},n.getInstance=function(){if(p&&c)return c;throw new Error(\\\"WebAssembly is not initialized yet.\\\")},n.dispose=function(){var t;!p||h||d||(h=!0,null===(t=c.PThread)||void 0===t||t.terminateAllThreads(),c=void 0,h=!1,p=!1,d=!0)}},474:function(t,n,e){var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(t){function n(){return R.buffer!=D&&N(R.buffer),P}function r(){return R.buffer!=D&&N(R.buffer),F}function i(){return R.buffer!=D&&N(R.buffer),I}function a(){return R.buffer!=D&&N(R.buffer),U}function o(){return R.buffer!=D&&N(R.buffer),W}var u,c,l;t=t||{},u||(u=void 0!==t?t:{}),u.ready=new Promise((function(t,n){c=t,l=n}));var f,s,p,h,d,y,v=Object.assign({},u),m=\\\"./this.program\\\",g=(t,n)=>{throw n},w=\\\"object\\\"==typeof window,_=\\\"function\\\"==typeof importScripts,b=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,j=u.ENVIRONMENT_IS_PTHREAD||!1,C=\\\"\\\";function O(t){return u.locateFile?u.locateFile(t,C):C+t}if(b){let n;C=_?e(908).dirname(C)+\\\"/\\\":\\\"//\\\",y=()=>{d||(h=e(384),d=e(908))},f=function(t,n){return y(),t=d.normalize(t),h.readFileSync(t,n?void 0:\\\"utf8\\\")},p=t=>((t=f(t,!0)).buffer||(t=new Uint8Array(t)),t),s=(t,n,e)=>{y(),t=d.normalize(t),h.readFile(t,(function(t,r){t?e(t):n(r.buffer)}))},1<process.argv.length&&(m=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(t){if(!(t instanceof ot))throw t})),process.on(\\\"unhandledRejection\\\",(function(t){throw t})),g=(t,n)=>{if(x)throw process.exitCode=t,n;n instanceof ot||M(\\\"exiting due to exception: \\\"+n),process.exit(t)},u.inspect=function(){return\\\"[Emscripten Module object]\\\"};try{n=e(925)}catch(t){throw console.error('The \\\"worker_threads\\\" module is not supported in this node.js build - perhaps a newer version is needed?'),t}e.g.Worker=n.Worker}else(w||_)&&(_?C=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(C=document.currentScript.src),_scriptDir&&(C=_scriptDir),C=0!==C.indexOf(\\\"blob:\\\")?C.substr(0,C.replace(/[?#].*/,\\\"\\\").lastIndexOf(\\\"/\\\")+1):\\\"\\\",b||(f=t=>{var n=new XMLHttpRequest;return n.open(\\\"GET\\\",t,!1),n.send(null),n.responseText},_&&(p=t=>{var n=new XMLHttpRequest;return n.open(\\\"GET\\\",t,!1),n.responseType=\\\"arraybuffer\\\",n.send(null),new Uint8Array(n.response)}),s=(t,n,e)=>{var r=new XMLHttpRequest;r.open(\\\"GET\\\",t,!0),r.responseType=\\\"arraybuffer\\\",r.onload=()=>{200==r.status||0==r.status&&r.response?n(r.response):e()},r.onerror=e,r.send(null)}));b&&\\\"undefined\\\"==typeof performance&&(e.g.performance=e(953).performance);var S=console.log.bind(console),T=console.warn.bind(console);b&&(y(),S=t=>h.writeSync(1,t+\\\"\\\\n\\\"),T=t=>h.writeSync(2,t+\\\"\\\\n\\\"));var A,E=u.print||S,M=u.printErr||T;Object.assign(u,v),v=null,u.thisProgram&&(m=u.thisProgram),u.quit&&(g=u.quit),u.wasmBinary&&(A=u.wasmBinary);var x=u.noExitRuntime||!0;\\\"object\\\"!=typeof WebAssembly&&et(\\\"no native wasm support detected\\\");var R,k,D,P,F,I,U,W,H=!1,Y=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function L(t,n,e){var r=(n>>>=0)+e;for(e=n;t[e]&&!(e>=r);)++e;if(16<e-n&&t.buffer&&Y)return Y.decode(t.buffer instanceof SharedArrayBuffer?t.slice(n,e):t.subarray(n,e));for(r=\\\"\\\";n<e;){var i=t[n++];if(128&i){var a=63&t[n++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var o=63&t[n++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&t[n++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function z(t,n){return(t>>>=0)?L(r(),t,n):\\\"\\\"}function G(t,n,e,r){if(!(0<r))return 0;var i=e>>>=0;r=e+r-1;for(var a=0;a<t.length;++a){var o=t.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&t.charCodeAt(++a)),127>=o){if(e>=r)break;n[e++>>>0]=o}else{if(2047>=o){if(e+1>=r)break;n[e++>>>0]=192|o>>6}else{if(65535>=o){if(e+2>=r)break;n[e++>>>0]=224|o>>12}else{if(e+3>=r)break;n[e++>>>0]=240|o>>18,n[e++>>>0]=128|o>>12&63}n[e++>>>0]=128|o>>6&63}n[e++>>>0]=128|63&o}}return n[e>>>0]=0,e-i}function B(t){for(var n=0,e=0;e<t.length;++e){var r=t.charCodeAt(e);127>=r?n++:2047>=r?n+=2:55296<=r&&57343>=r?(n+=4,++e):n+=3}return n}function N(t){D=t,u.HEAP8=P=new Int8Array(t),u.HEAP16=new Int16Array(t),u.HEAP32=I=new Int32Array(t),u.HEAPU8=F=new Uint8Array(t),u.HEAPU16=new Uint16Array(t),u.HEAPU32=U=new Uint32Array(t),u.HEAPF32=new Float32Array(t),u.HEAPF64=W=new Float64Array(t)}j&&(D=u.buffer);var V=u.INITIAL_MEMORY||16777216;if(j)R=u.wasmMemory,D=u.buffer;else if(u.wasmMemory)R=u.wasmMemory;else if(!((R=new WebAssembly.Memory({initial:V/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw M(\\\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\\\"),b&&console.log(\\\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\\\"),Error(\\\"bad memory\\\");R&&(D=R.buffer),V=D.byteLength,N(D);var q,X=[],J=[],Z=[];function Q(){var t=u.preRun.shift();X.unshift(t)}var $,K=0,tt=null,nt=null;function et(t){throw j?postMessage({cmd:\\\"onAbort\\\",arg:t}):u.onAbort&&u.onAbort(t),M(t=\\\"Aborted(\\\"+t+\\\")\\\"),H=!0,t=new WebAssembly.RuntimeError(t+\\\". Build with -sASSERTIONS for more info.\\\"),l(t),t}function rt(){return $.startsWith(\\\"data:application/octet-stream;base64,\\\")}function it(){var t=$;try{if(t==$&&A)return new Uint8Array(A);if(p)return p(t);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(t){et(t)}}$=\\\"ort-wasm-threaded.wasm\\\",rt()||($=O($));var at={};function ot(t){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+t+\\\")\\\",this.status=t}function ut(t){(t=st.Yc[t])||et(),st.pd(t)}function ct(t){var n=st.Ed();if(!n)return 6;st.gd.push(n),st.Yc[t.Xc]=n,n.Xc=t.Xc;var e={cmd:\\\"run\\\",start_routine:t.Kd,arg:t.yd,pthread_ptr:t.Xc};return n.ed=()=>{e.time=performance.now(),n.postMessage(e,t.Qd)},n.loaded&&(n.ed(),delete n.ed),0}function lt(t){if(j)return Bt(1,1,t);x||(st.Ld(),u.onExit&&u.onExit(t),H=!0),g(t,new ot(t))}function ft(t,n){if(!n&&j)throw ht(t),\\\"unwind\\\";lt(t)}var st={ad:[],gd:[],sd:[],Yc:{},kd:function(){j&&st.Gd()},Sd:function(){},Gd:function(){st.receiveObjectTransfer=st.Id,st.threadInitTLS=st.rd,st.setExitStatus=st.qd,x=!1},qd:function(){},Ld:function(){for(var t of Object.values(st.Yc))st.pd(t);for(t of st.ad)t.terminate();st.ad=[]},pd:function(t){var n=t.Xc;delete st.Yc[n],st.ad.push(t),st.gd.splice(st.gd.indexOf(t),1),t.Xc=0,mn(n)},Id:function(){},rd:function(){st.sd.forEach((t=>t()))},Hd:function(t,n){t.onmessage=e=>{var r=(e=e.data).cmd;if(t.Xc&&(st.Cd=t.Xc),e.targetThread&&e.targetThread!=fn()){var i=st.Yc[e.Td];i?i.postMessage(e,e.transferList):M('Internal error! Worker sent a message \\\"'+r+'\\\" to target pthread '+e.targetThread+\\\", but that thread no longer exists!\\\")}else\\\"processProxyingQueue\\\"===r?Wt(e.queue):\\\"spawnThread\\\"===r?ct(e):\\\"cleanupThread\\\"===r?ut(e.thread):\\\"killThread\\\"===r?(e=e.thread,r=st.Yc[e],delete st.Yc[e],r.terminate(),mn(e),st.gd.splice(st.gd.indexOf(r),1),r.Xc=0):\\\"cancelThread\\\"===r?st.Yc[e.thread].postMessage({cmd:\\\"cancel\\\"}):\\\"loaded\\\"===r?(t.loaded=!0,n&&n(t),t.ed&&(t.ed(),delete t.ed)):\\\"print\\\"===r?E(\\\"Thread \\\"+e.threadId+\\\": \\\"+e.text):\\\"printErr\\\"===r?M(\\\"Thread \\\"+e.threadId+\\\": \\\"+e.text):\\\"alert\\\"===r?alert(\\\"Thread \\\"+e.threadId+\\\": \\\"+e.text):\\\"setimmediate\\\"===e.target?t.postMessage(e):\\\"onAbort\\\"===r?u.onAbort&&u.onAbort(e.arg):r&&M(\\\"worker sent an unknown command \\\"+r);st.Cd=void 0},t.onerror=t=>{throw M(\\\"worker sent an error! \\\"+t.filename+\\\":\\\"+t.lineno+\\\": \\\"+t.message),t},b&&(t.on(\\\"message\\\",(function(n){t.onmessage({data:n})})),t.on(\\\"error\\\",(function(n){t.onerror(n)})),t.on(\\\"detachedExit\\\",(function(){}))),t.postMessage({cmd:\\\"load\\\",urlOrBlob:u.mainScriptUrlOrBlob||_scriptDir,wasmMemory:R,wasmModule:k})},xd:function(){var t=O(\\\"ort-wasm-threaded.worker.js\\\");st.ad.push(new Worker(t))},Ed:function(){return 0==st.ad.length&&(st.xd(),st.Hd(st.ad[0])),st.ad.pop()}};function pt(t){for(;0<t.length;)t.shift()(u)}function ht(t){if(j)return Bt(2,0,t);try{ft(t)}catch(t){t instanceof ot||\\\"unwind\\\"==t||g(1,t)}}u.PThread=st,u.establishStackSpace=function(){var t=fn(),n=i()[t+44>>2>>>0];t=i()[t+48>>2>>>0],_n(n,n-t),jn(n)};var dt=[];function yt(t){var n=dt[t];return n||(t>=dt.length&&(dt.length=t+1),dt[t]=n=q.get(t)),n}u.invokeEntryPoint=function(t,n){t=yt(t)(n),x?st.qd(t):gn(t)};var vt,mt,gt=[],wt=0,_t=0;function bt(t){this.dd=t,this.Vc=t-24,this.Dd=function(t){a()[this.Vc+4>>2>>>0]=t},this.bd=function(){return a()[this.Vc+4>>2>>>0]},this.zd=function(t){a()[this.Vc+8>>2>>>0]=t},this.Fd=function(){return a()[this.Vc+8>>2>>>0]},this.Bd=function(){i()[this.Vc>>2>>>0]=0},this.ld=function(t){t=t?1:0,n()[this.Vc+12>>0>>>0]=t},this.td=function(){return 0!=n()[this.Vc+12>>0>>>0]},this.md=function(t){t=t?1:0,n()[this.Vc+13>>0>>>0]=t},this.od=function(){return 0!=n()[this.Vc+13>>0>>>0]},this.kd=function(t,n){this.cd(0),this.Dd(t),this.zd(n),this.Bd(),this.ld(!1),this.md(!1)},this.ud=function(){Atomics.add(i(),this.Vc>>2,1)},this.Jd=function(){return 1===Atomics.sub(i(),this.Vc>>2,1)},this.cd=function(t){a()[this.Vc+16>>2>>>0]=t},this.vd=function(){return a()[this.Vc+16>>2>>>0]},this.wd=function(){if(Sn(this.bd()))return a()[this.dd>>2>>>0];var t=this.vd();return 0!==t?t:this.dd}}function jt(t){return pn(new bt(t).Vc)}function Ct(t,n,e,r){return j?Bt(3,1,t,n,e,r):Ot(t,n,e,r)}function Ot(t,n,e,r){if(\\\"undefined\\\"==typeof SharedArrayBuffer)return M(\\\"Current environment does not support SharedArrayBuffer, pthreads are not available!\\\"),6;var i=[];return j&&0===i.length?Ct(t,n,e,r):(t={Kd:e,Xc:t,yd:r,Qd:i},j?(t.Rd=\\\"spawnThread\\\",postMessage(t,i),0):ct(t))}function St(t,n,e){return j?Bt(4,1,t,n,e):0}function Tt(t,n){if(j)return Bt(5,1,t,n)}function At(t,n){if(j)return Bt(6,1,t,n)}function Et(t,n,e){if(j)return Bt(7,1,t,n,e)}function Mt(t,n,e){return j?Bt(8,1,t,n,e):0}function xt(t,n){if(j)return Bt(9,1,t,n)}function Rt(t,n,e){if(j)return Bt(10,1,t,n,e)}function kt(t,n,e,r){if(j)return Bt(11,1,t,n,e,r)}function Dt(t,n,e,r){if(j)return Bt(12,1,t,n,e,r)}function Pt(t,n,e,r){if(j)return Bt(13,1,t,n,e,r)}function Ft(t){if(j)return Bt(14,1,t)}function It(t,n){if(j)return Bt(15,1,t,n)}function Ut(t,n,e){if(j)return Bt(16,1,t,n,e)}function Wt(t){Atomics.store(i(),t>>2,1),fn()&&vn(t),Atomics.compareExchange(i(),t>>2,1,0)}function Ht(t){return a()[t>>>2]+4294967296*i()[t+4>>>2]}function Yt(t,n,e,r,i,a){return j?Bt(17,1,t,n,e,r,i,a):-52}function Lt(t,n,e,r,i,a){if(j)return Bt(18,1,t,n,e,r,i,a)}function zt(t){var e=B(t)+1,r=sn(e);return r&&G(t,n(),r,e),r}function Gt(t,n,e){function r(t){return(t=t.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?t[1]:\\\"GMT\\\"}if(j)return Bt(19,1,t,n,e);var o=(new Date).getFullYear(),u=new Date(o,0,1),c=new Date(o,6,1);o=u.getTimezoneOffset();var l=c.getTimezoneOffset(),f=Math.max(o,l);i()[t>>2>>>0]=60*f,i()[n>>2>>>0]=Number(o!=l),t=r(u),n=r(c),t=zt(t),n=zt(n),l<o?(a()[e>>2>>>0]=t,a()[e+4>>2>>>0]=n):(a()[e>>2>>>0]=n,a()[e+4>>2>>>0]=t)}function Bt(t,n){var e=arguments.length-2,r=arguments;return function(t){var n=bn();return t=t(),jn(n),t}((()=>{for(var i=Cn(8*e),a=i>>3,u=0;u<e;u++){var c=r[2+u];o()[a+u>>>0]=c}return yn(t,e,i,n)}))}u.executeNotifiedProxyingQueue=Wt,mt=b?()=>{var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:j?()=>performance.now()-u.__performance_now_clock_drift:()=>performance.now();var Nt,Vt=[],qt={};function Xt(){if(!Nt){var t,n={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:m||\\\"./this.program\\\"};for(t in qt)void 0===qt[t]?delete n[t]:n[t]=qt[t];var e=[];for(t in n)e.push(t+\\\"=\\\"+n[t]);Nt=e}return Nt}function Jt(t,e){if(j)return Bt(20,1,t,e);var r=0;return Xt().forEach((function(i,o){var u=e+r;for(o=a()[t+4*o>>2>>>0]=u,u=0;u<i.length;++u)n()[o++>>0>>>0]=i.charCodeAt(u);n()[o>>0>>>0]=0,r+=i.length+1})),0}function Zt(t,n){if(j)return Bt(21,1,t,n);var e=Xt();a()[t>>2>>>0]=e.length;var r=0;return e.forEach((function(t){r+=t.length+1})),a()[n>>2>>>0]=r,0}function Qt(t){return j?Bt(22,1,t):52}function $t(t,n,e,r){return j?Bt(23,1,t,n,e,r):52}function Kt(t,n,e,r,i){return j?Bt(24,1,t,n,e,r,i):70}var tn=[null,[],[]];function nn(t,n,e,i){if(j)return Bt(25,1,t,n,e,i);for(var o=0,u=0;u<e;u++){var c=a()[n>>2>>>0],l=a()[n+4>>2>>>0];n+=8;for(var f=0;f<l;f++){var s=r()[c+f>>>0],p=tn[t];0===s||10===s?((1===t?E:M)(L(p,0)),p.length=0):p.push(s)}o+=l}return a()[i>>2>>>0]=o,0}var en=0;function rn(t){return 0==t%4&&(0!=t%100||0==t%400)}var an=[31,29,31,30,31,30,31,31,30,31,30,31],on=[31,28,31,30,31,30,31,31,30,31,30,31];function un(t,e,r,a){function o(t,n,e){for(t=\\\"number\\\"==typeof t?t.toString():t||\\\"\\\";t.length<n;)t=e[0]+t;return t}function u(t,n){return o(t,n,\\\"0\\\")}function c(t,n){function e(t){return 0>t?-1:0<t?1:0}var r;return 0===(r=e(t.getFullYear()-n.getFullYear()))&&0===(r=e(t.getMonth()-n.getMonth()))&&(r=e(t.getDate()-n.getDate())),r}function l(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function f(t){var n=t.Zc;for(t=new Date(new Date(t.$c+1900,0,1).getTime());0<n;){var e=t.getMonth(),r=(rn(t.getFullYear())?an:on)[e];if(!(n>r-t.getDate())){t.setDate(t.getDate()+n);break}n-=r-t.getDate()+1,t.setDate(1),11>e?t.setMonth(e+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return e=new Date(t.getFullYear()+1,0,4),n=l(new Date(t.getFullYear(),0,4)),e=l(e),0>=c(n,t)?0>=c(e,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var s=i()[a+40>>2>>>0];for(var p in a={Od:i()[a>>2>>>0],Nd:i()[a+4>>2>>>0],hd:i()[a+8>>2>>>0],nd:i()[a+12>>2>>>0],jd:i()[a+16>>2>>>0],$c:i()[a+20>>2>>>0],Wc:i()[a+24>>2>>>0],Zc:i()[a+28>>2>>>0],Ud:i()[a+32>>2>>>0],Md:i()[a+36>>2>>>0],Pd:s?z(s):\\\"\\\"},r=z(r),s={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})r=r.replace(new RegExp(p,\\\"g\\\"),s[p]);var h=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),d=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(p in s={\\\"%a\\\":function(t){return h[t.Wc].substring(0,3)},\\\"%A\\\":function(t){return h[t.Wc]},\\\"%b\\\":function(t){return d[t.jd].substring(0,3)},\\\"%B\\\":function(t){return d[t.jd]},\\\"%C\\\":function(t){return u((t.$c+1900)/100|0,2)},\\\"%d\\\":function(t){return u(t.nd,2)},\\\"%e\\\":function(t){return o(t.nd,2,\\\" \\\")},\\\"%g\\\":function(t){return f(t).toString().substring(2)},\\\"%G\\\":function(t){return f(t)},\\\"%H\\\":function(t){return u(t.hd,2)},\\\"%I\\\":function(t){return 0==(t=t.hd)?t=12:12<t&&(t-=12),u(t,2)},\\\"%j\\\":function(t){for(var n=0,e=0;e<=t.jd-1;n+=(rn(t.$c+1900)?an:on)[e++]);return u(t.nd+n,3)},\\\"%m\\\":function(t){return u(t.jd+1,2)},\\\"%M\\\":function(t){return u(t.Nd,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(t){return 0<=t.hd&&12>t.hd?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(t){return u(t.Od,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(t){return t.Wc||7},\\\"%U\\\":function(t){return u(Math.floor((t.Zc+7-t.Wc)/7),2)},\\\"%V\\\":function(t){var n=Math.floor((t.Zc+7-(t.Wc+6)%7)/7);if(2>=(t.Wc+371-t.Zc-2)%7&&n++,n)53==n&&(4==(e=(t.Wc+371-t.Zc)%7)||3==e&&rn(t.$c)||(n=1));else{n=52;var e=(t.Wc+7-t.Zc-1)%7;(4==e||5==e&&rn(t.$c%400-1))&&n++}return u(n,2)},\\\"%w\\\":function(t){return t.Wc},\\\"%W\\\":function(t){return u(Math.floor((t.Zc+7-(t.Wc+6)%7)/7),2)},\\\"%y\\\":function(t){return(t.$c+1900).toString().substring(2)},\\\"%Y\\\":function(t){return t.$c+1900},\\\"%z\\\":function(t){var n=0<=(t=t.Md);return t=Math.abs(t)/60,(n?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(t/60*100+t%60)).slice(-4)},\\\"%Z\\\":function(t){return t.Pd},\\\"%%\\\":function(){return\\\"%\\\"}},r=r.replace(/%%/g,\\\"\\\\0\\\\0\\\"),s)r.includes(p)&&(r=r.replace(new RegExp(p,\\\"g\\\"),s[p](a)));return p=function(t){var n=Array(B(t)+1);return G(t,n,0,n.length),n}(r=r.replace(/\\\\0\\\\0/g,\\\"%\\\")),p.length>e?0:(function(t,e){n().set(t,e>>>0)}(p,t),p.length-1)}st.kd();var cn=[null,lt,ht,Ct,St,Tt,At,Et,Mt,xt,Rt,kt,Dt,Pt,Ft,It,Ut,Yt,Lt,Gt,Jt,Zt,Qt,$t,Kt,nn],ln={k:function(t){return sn(t+24)+24},r:function(t){return(t=new bt(t)).td()||(t.ld(!0),wt--),t.md(!1),gt.push(t),t.ud(),t.wd()},ja:function(t){throw M(\\\"Unexpected exception thrown, this is not properly supported - aborting\\\"),H=!0,t},C:function(){wn(0);var t=gt.pop();if(t.Jd()&&!t.od()){var n=t.Fd();n&&yt(n)(t.dd),jt(t.dd)}_t=0},c:function(){var t=_t;if(!t)return en=0;var n=new bt(t);n.cd(t);var e=n.bd();if(!e)return en=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(On(a,e,n.Vc+16))return en=a,t}return en=e,t},m:function(){var t=_t;if(!t)return en=0;var n=new bt(t);n.cd(t);var e=n.bd();if(!e)return en=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(On(a,e,n.Vc+16))return en=a,t}return en=e,t},v:function(){var t=_t;if(!t)return en=0;var n=new bt(t);n.cd(t);var e=n.bd();if(!e)return en=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(On(a,e,n.Vc+16))return en=a,t}return en=e,t},o:function(){var t=_t;if(!t)return en=0;var n=new bt(t);n.cd(t);var e=n.bd();if(!e)return en=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(On(a,e,n.Vc+16))return en=a,t}return en=e,t},n:jt,U:function(){var t=gt.pop();t||et(\\\"no exception to throw\\\");var n=t.dd;throw t.od()||(gt.push(t),t.md(!0),t.ld(!1),wt++),_t=n,n},w:function(t,n,e){throw new bt(t).kd(n,e),_t=t,wt++,t},ma:function(){return wt},Ga:function(t){hn(t,!_,1,!w),st.rd()},aa:function(t){j?postMessage({cmd:\\\"cleanupThread\\\",thread:t}):ut(t)},xa:Ot,g:function(t){throw _t||(_t=t),t},V:St,Ma:Tt,ta:At,va:Et,la:Mt,Ka:xt,Da:Rt,Ja:kt,ca:Dt,ua:Pt,ra:Ft,La:It,sa:Ut,qb:function(){},X:function(){et(\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Bb:function(){et(\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},da:function(){return Date.now()},ya:function(){return 2097152},Oa:function(){return!0},za:function(t,n,e,r){if(t==n)setTimeout((()=>Wt(r)));else if(j)postMessage({targetThread:t,cmd:\\\"processProxyingQueue\\\",queue:r});else{if(!(t=st.Yc[t]))return;t.postMessage({cmd:\\\"processProxyingQueue\\\",queue:r})}return 1},Fa:function(){return-1},Pa:function(t,n){t=new Date(1e3*Ht(t)),i()[n>>2>>>0]=t.getUTCSeconds(),i()[n+4>>2>>>0]=t.getUTCMinutes(),i()[n+8>>2>>>0]=t.getUTCHours(),i()[n+12>>2>>>0]=t.getUTCDate(),i()[n+16>>2>>>0]=t.getUTCMonth(),i()[n+20>>2>>>0]=t.getUTCFullYear()-1900,i()[n+24>>2>>>0]=t.getUTCDay(),t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,i()[n+28>>2>>>0]=t},Qa:function(t,n){t=new Date(1e3*Ht(t)),i()[n>>2>>>0]=t.getSeconds(),i()[n+4>>2>>>0]=t.getMinutes(),i()[n+8>>2>>>0]=t.getHours(),i()[n+12>>2>>>0]=t.getDate(),i()[n+16>>2>>>0]=t.getMonth(),i()[n+20>>2>>>0]=t.getFullYear()-1900,i()[n+24>>2>>>0]=t.getDay();var e=new Date(t.getFullYear(),0,1),r=(t.getTime()-e.getTime())/864e5|0;i()[n+28>>2>>>0]=r,i()[n+36>>2>>>0]=-60*t.getTimezoneOffset(),r=new Date(t.getFullYear(),6,1).getTimezoneOffset(),t=0|(r!=(e=e.getTimezoneOffset())&&t.getTimezoneOffset()==Math.min(e,r)),i()[n+32>>2>>>0]=t},Ra:function(t){var n=new Date(i()[t+20>>2>>>0]+1900,i()[t+16>>2>>>0],i()[t+12>>2>>>0],i()[t+8>>2>>>0],i()[t+4>>2>>>0],i()[t>>2>>>0],0),e=i()[t+32>>2>>>0],r=n.getTimezoneOffset(),a=new Date(n.getFullYear(),0,1),o=new Date(n.getFullYear(),6,1).getTimezoneOffset(),u=a.getTimezoneOffset(),c=Math.min(u,o);return 0>e?i()[t+32>>2>>>0]=Number(o!=u&&c==r):0<e!=(c==r)&&(o=Math.max(u,o),n.setTime(n.getTime()+6e4*((0<e?c:o)-r))),i()[t+24>>2>>>0]=n.getDay(),e=(n.getTime()-a.getTime())/864e5|0,i()[t+28>>2>>>0]=e,i()[t>>2>>>0]=n.getSeconds(),i()[t+4>>2>>>0]=n.getMinutes(),i()[t+8>>2>>>0]=n.getHours(),i()[t+12>>2>>>0]=n.getDate(),i()[t+16>>2>>>0]=n.getMonth(),n.getTime()/1e3|0},Ba:Yt,Ca:Lt,Xa:function t(n,e,r){t.Ad||(t.Ad=!0,Gt(n,e,r))},R:function(){et(\\\"\\\")},ba:function(){if(!b&&!_){var t=\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\";vt||(vt={}),vt[t]||(vt[t]=1,b&&(t=\\\"warning: \\\"+t),M(t))}},oa:function(){return 4294901760},F:mt,Aa:function(t,n,e){r().copyWithin(t>>>0,n>>>0,n+e>>>0)},pa:function(){return b?e(993).cpus().length:navigator.hardwareConcurrency},Ea:function(t,n,e){Vt.length=n,e>>=3;for(var r=0;r<n;r++)Vt[r]=o()[e+r>>>0];return(0>t?at[-t-1]:cn[t]).apply(null,Vt)},na:function(t){var n=r().length;if((t>>>=0)<=n||4294901760<t)return!1;for(var e=1;4>=e;e*=2){var i=n*(1+.2/e);i=Math.min(i,t+100663296);var a=Math;i=Math.max(t,i),a=a.min.call(a,4294901760,i+(65536-i%65536)%65536);t:{try{R.grow(a-D.byteLength+65535>>>16),N(R.buffer);var o=1;break t}catch(t){}o=void 0}if(o)return!0}return!1},Na:function(){throw\\\"unwind\\\"},Ha:Jt,Ia:Zt,wa:ft,T:Qt,$:$t,Ab:Kt,qa:nn,b:function(){return en},ea:function(t,n,e){var r=bn();try{return yt(t)(n,e)}catch(t){if(jn(r),t!==t+0)throw t;wn(1,0)}},E:function(t,n,e,r,i,a,o){var u=bn();try{return yt(t)(n,e,r,i,a,o)}catch(t){if(jn(u),t!==t+0)throw t;wn(1,0)}},y:function(t){var n=bn();try{return yt(t)()}catch(t){if(jn(n),t!==t+0)throw t;wn(1,0)}},d:function(t,n){var e=bn();try{return yt(t)(n)}catch(t){if(jn(e),t!==t+0)throw t;wn(1,0)}},W:function(t,n,e){var r=bn();try{return yt(t)(n,e)}catch(t){if(jn(r),t!==t+0)throw t;wn(1,0)}},S:function(t,n,e){var r=bn();try{return yt(t)(n,e)}catch(t){if(jn(r),t!==t+0)throw t;wn(1,0)}},l:function(t,n,e){var r=bn();try{return yt(t)(n,e)}catch(t){if(jn(r),t!==t+0)throw t;wn(1,0)}},h:function(t,n,e,r){var i=bn();try{return yt(t)(n,e,r)}catch(t){if(jn(i),t!==t+0)throw t;wn(1,0)}},j:function(t,n,e,r,i){var a=bn();try{return yt(t)(n,e,r,i)}catch(t){if(jn(a),t!==t+0)throw t;wn(1,0)}},p:function(t,n,e,r,i,a){var o=bn();try{return yt(t)(n,e,r,i,a)}catch(t){if(jn(o),t!==t+0)throw t;wn(1,0)}},z:function(t,n,e,r,i,a,o){var u=bn();try{return yt(t)(n,e,r,i,a,o)}catch(t){if(jn(u),t!==t+0)throw t;wn(1,0)}},M:function(t,n,e,r,i,a,o,u){var c=bn();try{return yt(t)(n,e,r,i,a,o,u)}catch(t){if(jn(c),t!==t+0)throw t;wn(1,0)}},_:function(t,n,e,r,i,a,o,u,c,l,f){var s=bn();try{return yt(t)(n,e,r,i,a,o,u,c,l,f)}catch(t){if(jn(s),t!==t+0)throw t;wn(1,0)}},O:function(t,n,e,r,i,a,o,u,c,l,f,s){var p=bn();try{return yt(t)(n,e,r,i,a,o,u,c,l,f,s)}catch(t){if(jn(p),t!==t+0)throw t;wn(1,0)}},wb:function(t,n,e,r,i,a,o){var u=bn();try{return En(t,n,e,r,i,a,o)}catch(t){if(jn(u),t!==t+0)throw t;wn(1,0)}},kb:function(t,n,e,r,i,a,o,u,c,l){var f=bn();try{return Yn(t,n,e,r,i,a,o,u,c,l)}catch(t){if(jn(f),t!==t+0)throw t;wn(1,0)}},Sa:function(t,n,e,r,i){var a=bn();try{return ne(t,n,e,r,i)}catch(t){if(jn(a),t!==t+0)throw t;wn(1,0)}},jb:function(t,n,e,r,i,a,o,u,c){var l=bn();try{return Ln(t,n,e,r,i,a,o,u,c)}catch(t){if(jn(l),t!==t+0)throw t;wn(1,0)}},zb:function(t,n,e,r){var i=bn();try{return An(t,n,e,r)}catch(t){if(jn(i),t!==t+0)throw t;wn(1,0)}},Ta:function(t){var n=bn();try{return Tn(t)}catch(t){if(jn(n),t!==t+0)throw t;wn(1,0)}},Za:function(t,n,e){var r=bn();try{return ie(t,n,e)}catch(t){if(jn(r),t!==t+0)throw t;wn(1,0)}},ub:function(t,n){var e=bn();try{return Dn(t,n)}catch(t){if(jn(e),t!==t+0)throw t;wn(1,0)}},tb:function(t,n,e){var r=bn();try{return xn(t,n,e)}catch(t){if(jn(r),t!==t+0)throw t;wn(1,0)}},ib:function(t,n,e,r){var i=bn();try{return zn(t,n,e,r)}catch(t){if(jn(i),t!==t+0)throw t;wn(1,0)}},lb:function(t,n,e,r,i){var a=bn();try{return Hn(t,n,e,r,i)}catch(t){if(jn(a),t!==t+0)throw t;wn(1,0)}},e:function(t){var n=bn();try{yt(t)()}catch(t){if(jn(n),t!==t+0)throw t;wn(1,0)}},u:function(t,n){var e=bn();try{yt(t)(n)}catch(t){if(jn(e),t!==t+0)throw t;wn(1,0)}},i:function(t,n,e){var r=bn();try{yt(t)(n,e)}catch(t){if(jn(r),t!==t+0)throw t;wn(1,0)}},G:function(t,n,e,r,i){var a=bn();try{yt(t)(n,e,r,i)}catch(t){if(jn(a),t!==t+0)throw t;wn(1,0)}},f:function(t,n,e,r){var i=bn();try{yt(t)(n,e,r)}catch(t){if(jn(i),t!==t+0)throw t;wn(1,0)}},Z:function(t,n,e,r,i){var a=bn();try{yt(t)(n,e,r,i)}catch(t){if(jn(a),t!==t+0)throw t;wn(1,0)}},s:function(t,n,e,r,i){var a=bn();try{yt(t)(n,e,r,i)}catch(t){if(jn(a),t!==t+0)throw t;wn(1,0)}},q:function(t,n,e,r,i,a){var o=bn();try{yt(t)(n,e,r,i,a)}catch(t){if(jn(o),t!==t+0)throw t;wn(1,0)}},x:function(t,n,e,r,i,a,o){var u=bn();try{yt(t)(n,e,r,i,a,o)}catch(t){if(jn(u),t!==t+0)throw t;wn(1,0)}},I:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y){var v=bn();try{yt(t)(n,e,r,i,a,o,u,c,l,f,s,p,h,d,y)}catch(t){if(jn(v),t!==t+0)throw t;wn(1,0)}},P:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v){var m=bn();try{yt(t)(n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v)}catch(t){if(jn(m),t!==t+0)throw t;wn(1,0)}},H:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d){var y=bn();try{yt(t)(n,e,r,i,a,o,u,c,l,f,s,p,h,d)}catch(t){if(jn(y),t!==t+0)throw t;wn(1,0)}},A:function(t,n,e,r,i,a,o,u){var c=bn();try{yt(t)(n,e,r,i,a,o,u)}catch(t){if(jn(c),t!==t+0)throw t;wn(1,0)}},D:function(t,n,e,r,i,a,o,u,c){var l=bn();try{yt(t)(n,e,r,i,a,o,u,c)}catch(t){if(jn(l),t!==t+0)throw t;wn(1,0)}},J:function(t,n,e,r,i,a,o,u,c,l){var f=bn();try{yt(t)(n,e,r,i,a,o,u,c,l)}catch(t){if(jn(f),t!==t+0)throw t;wn(1,0)}},Y:function(t,n,e,r,i,a,o,u,c,l,f,s){var p=bn();try{yt(t)(n,e,r,i,a,o,u,c,l,f,s)}catch(t){if(jn(p),t!==t+0)throw t;wn(1,0)}},fa:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h){var d=bn();try{yt(t)(n,e,r,i,a,o,u,c,l,f,s,p,h)}catch(t){if(jn(d),t!==t+0)throw t;wn(1,0)}},L:function(t,n,e,r,i,a,o,u,c,l,f){var s=bn();try{yt(t)(n,e,r,i,a,o,u,c,l,f)}catch(t){if(jn(s),t!==t+0)throw t;wn(1,0)}},ga:function(t,n,e,r,i,a,o,u,c,l,f,s){var p=bn();try{yt(t)(n,e,r,i,a,o,u,c,l,f,s)}catch(t){if(jn(p),t!==t+0)throw t;wn(1,0)}},B:function(t,n,e,r,i,a,o,u,c,l,f,s,p){var h=bn();try{yt(t)(n,e,r,i,a,o,u,c,l,f,s,p)}catch(t){if(jn(h),t!==t+0)throw t;wn(1,0)}},Q:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h){var d=bn();try{yt(t)(n,e,r,i,a,o,u,c,l,f,s,p,h)}catch(t){if(jn(d),t!==t+0)throw t;wn(1,0)}},ha:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v){var m=bn();try{yt(t)(n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v)}catch(t){if(jn(m),t!==t+0)throw t;wn(1,0)}},N:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y){var v=bn();try{yt(t)(n,e,r,i,a,o,u,c,l,f,s,p,h,d,y)}catch(t){if(jn(v),t!==t+0)throw t;wn(1,0)}},mb:function(t,n,e,r,i,a,o,u,c,l,f,s,p){var h=bn();try{Wn(t,n,e,r,i,a,o,u,c,l,f,s,p)}catch(t){if(jn(h),t!==t+0)throw t;wn(1,0)}},vb:function(t,n,e,r,i,a,o){var u=bn();try{kn(t,n,e,r,i,a,o)}catch(t){if(jn(u),t!==t+0)throw t;wn(1,0)}},nb:function(t,n,e,r,i,a){var o=bn();try{Un(t,n,e,r,i,a)}catch(t){if(jn(o),t!==t+0)throw t;wn(1,0)}},pb:function(t,n,e,r,i,a,o){var u=bn();try{Fn(t,n,e,r,i,a,o)}catch(t){if(jn(u),t!==t+0)throw t;wn(1,0)}},xb:function(t,n,e,r,i,a,o,u){var c=bn();try{ee(t,n,e,r,i,a,o,u)}catch(t){if(jn(c),t!==t+0)throw t;wn(1,0)}},Ya:function(t,n,e,r,i,a,o,u,c,l){var f=bn();try{Kn(t,n,e,r,i,a,o,u,c,l)}catch(t){if(jn(f),t!==t+0)throw t;wn(1,0)}},Wa:function(t,n,e,r,i,a,o,u,c,l,f,s){var p=bn();try{te(t,n,e,r,i,a,o,u,c,l,f,s)}catch(t){if(jn(p),t!==t+0)throw t;wn(1,0)}},rb:function(t,n,e,r,i,a){var o=bn();try{Rn(t,n,e,r,i,a)}catch(t){if(jn(o),t!==t+0)throw t;wn(1,0)}},Ua:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h){var d=bn();try{re(t,n,e,r,i,a,o,u,c,l,f,s,p,h)}catch(t){if(jn(d),t!==t+0)throw t;wn(1,0)}},sb:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h){var d=bn();try{Pn(t,n,e,r,i,a,o,u,c,l,f,s,p,h)}catch(t){if(jn(d),t!==t+0)throw t;wn(1,0)}},yb:function(t,n,e,r){var i=bn();try{Mn(t,n,e,r)}catch(t){if(jn(i),t!==t+0)throw t;wn(1,0)}},Va:function(t,n,e,r,i){var a=bn();try{ae(t,n,e,r,i)}catch(t){if(jn(a),t!==t+0)throw t;wn(1,0)}},ob:function(t,n,e,r,i,a,o){var u=bn();try{In(t,n,e,r,i,a,o)}catch(t){if(jn(u),t!==t+0)throw t;wn(1,0)}},bb:function(t,n,e,r,i,a,o,u,c,l,f,s){var p=bn();try{Jn(t,n,e,r,i,a,o,u,c,l,f,s)}catch(t){if(jn(p),t!==t+0)throw t;wn(1,0)}},cb:function(t,n,e,r,i,a,o,u,c,l,f,s){var p=bn();try{Xn(t,n,e,r,i,a,o,u,c,l,f,s)}catch(t){if(jn(p),t!==t+0)throw t;wn(1,0)}},ab:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_){var b=bn();try{Zn(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_)}catch(t){if(jn(b),t!==t+0)throw t;wn(1,0)}},_a:function(t,n,e,r,i,a,o,u,c,l,f,s,p){var h=bn();try{$n(t,n,e,r,i,a,o,u,c,l,f,s,p)}catch(t){if(jn(h),t!==t+0)throw t;wn(1,0)}},$a:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d){var y=bn();try{Qn(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d)}catch(t){if(jn(y),t!==t+0)throw t;wn(1,0)}},eb:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j){var C=bn();try{Vn(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j)}catch(t){if(jn(C),t!==t+0)throw t;wn(1,0)}},fb:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C,O){var S=bn();try{Nn(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C,O)}catch(t){if(jn(S),t!==t+0)throw t;wn(1,0)}},hb:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C){var O=bn();try{Gn(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C)}catch(t){if(jn(O),t!==t+0)throw t;wn(1,0)}},db:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C,O,S,T,A){var E=bn();try{qn(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C,O,S,T,A)}catch(t){if(jn(E),t!==t+0)throw t;wn(1,0)}},gb:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C,O,S,T,A,E){var M=bn();try{Bn(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C,O,S,T,A,E)}catch(t){if(jn(M),t!==t+0)throw t;wn(1,0)}},t:function(t){return t},a:R||u.wasmMemory,K:function(t){en=t},ia:un,ka:function(t,n,e,r){return un(t,n,e,r)}};!function(){function t(t,n){u.asm=t.exports,st.sd.push(u.asm._b),q=u.asm.cc,J.unshift(u.asm.Cb),k=n,j||(K--,u.monitorRunDependencies&&u.monitorRunDependencies(K),0==K&&(null!==tt&&(clearInterval(tt),tt=null),nt&&(t=nt,nt=null,t())))}function n(n){t(n.instance,n.module)}function e(t){return function(){if(!A&&(w||_)){if(\\\"function\\\"==typeof fetch&&!$.startsWith(\\\"file://\\\"))return fetch($,{credentials:\\\"same-origin\\\"}).then((function(t){if(!t.ok)throw\\\"failed to load wasm binary file at '\\\"+$+\\\"'\\\";return t.arrayBuffer()})).catch((function(){return it()}));if(s)return new Promise((function(t,n){s($,(function(n){t(new Uint8Array(n))}),n)}))}return Promise.resolve().then((function(){return it()}))}().then((function(t){return WebAssembly.instantiate(t,r)})).then((function(t){return t})).then(t,(function(t){M(\\\"failed to asynchronously prepare wasm: \\\"+t),et(t)}))}var r={a:ln};if(j||(K++,u.monitorRunDependencies&&u.monitorRunDependencies(K)),u.instantiateWasm)try{return u.instantiateWasm(r,t)}catch(t){return M(\\\"Module.instantiateWasm callback failed with error: \\\"+t),!1}(A||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||rt()||$.startsWith(\\\"file://\\\")||b||\\\"function\\\"!=typeof fetch?e(n):fetch($,{credentials:\\\"same-origin\\\"}).then((function(t){return WebAssembly.instantiateStreaming(t,r).then(n,(function(t){return M(\\\"wasm streaming compile failed: \\\"+t),M(\\\"falling back to ArrayBuffer instantiation\\\"),e(n)}))}))).catch(l)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.Cb).apply(null,arguments)},u._OrtInit=function(){return(u._OrtInit=u.asm.Db).apply(null,arguments)},u._OrtCreateSessionOptions=function(){return(u._OrtCreateSessionOptions=u.asm.Eb).apply(null,arguments)},u._OrtAppendExecutionProvider=function(){return(u._OrtAppendExecutionProvider=u.asm.Fb).apply(null,arguments)},u._OrtAddSessionConfigEntry=function(){return(u._OrtAddSessionConfigEntry=u.asm.Gb).apply(null,arguments)},u._OrtReleaseSessionOptions=function(){return(u._OrtReleaseSessionOptions=u.asm.Hb).apply(null,arguments)},u._OrtCreateSession=function(){return(u._OrtCreateSession=u.asm.Ib).apply(null,arguments)},u._OrtReleaseSession=function(){return(u._OrtReleaseSession=u.asm.Jb).apply(null,arguments)},u._OrtGetInputCount=function(){return(u._OrtGetInputCount=u.asm.Kb).apply(null,arguments)},u._OrtGetOutputCount=function(){return(u._OrtGetOutputCount=u.asm.Lb).apply(null,arguments)},u._OrtGetInputName=function(){return(u._OrtGetInputName=u.asm.Mb).apply(null,arguments)},u._OrtGetOutputName=function(){return(u._OrtGetOutputName=u.asm.Nb).apply(null,arguments)},u._OrtFree=function(){return(u._OrtFree=u.asm.Ob).apply(null,arguments)},u._OrtCreateTensor=function(){return(u._OrtCreateTensor=u.asm.Pb).apply(null,arguments)},u._OrtGetTensorData=function(){return(u._OrtGetTensorData=u.asm.Qb).apply(null,arguments)},u._OrtReleaseTensor=function(){return(u._OrtReleaseTensor=u.asm.Rb).apply(null,arguments)},u._OrtCreateRunOptions=function(){return(u._OrtCreateRunOptions=u.asm.Sb).apply(null,arguments)},u._OrtAddRunConfigEntry=function(){return(u._OrtAddRunConfigEntry=u.asm.Tb).apply(null,arguments)},u._OrtReleaseRunOptions=function(){return(u._OrtReleaseRunOptions=u.asm.Ub).apply(null,arguments)},u._OrtRun=function(){return(u._OrtRun=u.asm.Vb).apply(null,arguments)},u._OrtEndProfiling=function(){return(u._OrtEndProfiling=u.asm.Wb).apply(null,arguments)};var fn=u._pthread_self=function(){return(fn=u._pthread_self=u.asm.Xb).apply(null,arguments)},sn=u._malloc=function(){return(sn=u._malloc=u.asm.Yb).apply(null,arguments)},pn=u._free=function(){return(pn=u._free=u.asm.Zb).apply(null,arguments)};u.__emscripten_tls_init=function(){return(u.__emscripten_tls_init=u.asm._b).apply(null,arguments)};var hn=u.__emscripten_thread_init=function(){return(hn=u.__emscripten_thread_init=u.asm.$b).apply(null,arguments)};u.__emscripten_thread_crashed=function(){return(u.__emscripten_thread_crashed=u.asm.ac).apply(null,arguments)};var dn,yn=u._emscripten_run_in_main_runtime_thread_js=function(){return(yn=u._emscripten_run_in_main_runtime_thread_js=u.asm.bc).apply(null,arguments)},vn=u.__emscripten_proxy_execute_task_queue=function(){return(vn=u.__emscripten_proxy_execute_task_queue=u.asm.dc).apply(null,arguments)},mn=u.__emscripten_thread_free_data=function(){return(mn=u.__emscripten_thread_free_data=u.asm.ec).apply(null,arguments)},gn=u.__emscripten_thread_exit=function(){return(gn=u.__emscripten_thread_exit=u.asm.fc).apply(null,arguments)},wn=u._setThrew=function(){return(wn=u._setThrew=u.asm.gc).apply(null,arguments)},_n=u._emscripten_stack_set_limits=function(){return(_n=u._emscripten_stack_set_limits=u.asm.hc).apply(null,arguments)},bn=u.stackSave=function(){return(bn=u.stackSave=u.asm.ic).apply(null,arguments)},jn=u.stackRestore=function(){return(jn=u.stackRestore=u.asm.jc).apply(null,arguments)},Cn=u.stackAlloc=function(){return(Cn=u.stackAlloc=u.asm.kc).apply(null,arguments)},On=u.___cxa_can_catch=function(){return(On=u.___cxa_can_catch=u.asm.lc).apply(null,arguments)},Sn=u.___cxa_is_pointer_type=function(){return(Sn=u.___cxa_is_pointer_type=u.asm.mc).apply(null,arguments)},Tn=u.dynCall_j=function(){return(Tn=u.dynCall_j=u.asm.nc).apply(null,arguments)},An=u.dynCall_iij=function(){return(An=u.dynCall_iij=u.asm.oc).apply(null,arguments)},En=u.dynCall_iiiiij=function(){return(En=u.dynCall_iiiiij=u.asm.pc).apply(null,arguments)},Mn=u.dynCall_vij=function(){return(Mn=u.dynCall_vij=u.asm.qc).apply(null,arguments)},xn=u.dynCall_jii=function(){return(xn=u.dynCall_jii=u.asm.rc).apply(null,arguments)},Rn=u.dynCall_viiji=function(){return(Rn=u.dynCall_viiji=u.asm.sc).apply(null,arguments)},kn=u.dynCall_viiiij=function(){return(kn=u.dynCall_viiiij=u.asm.tc).apply(null,arguments)},Dn=u.dynCall_ji=function(){return(Dn=u.dynCall_ji=u.asm.uc).apply(null,arguments)},Pn=u.dynCall_viijjjiiiii=function(){return(Pn=u.dynCall_viijjjiiiii=u.asm.vc).apply(null,arguments)},Fn=u.dynCall_viiiji=function(){return(Fn=u.dynCall_viiiji=u.asm.wc).apply(null,arguments)},In=u.dynCall_vijiii=function(){return(In=u.dynCall_vijiii=u.asm.xc).apply(null,arguments)},Un=u.dynCall_viiij=function(){return(Un=u.dynCall_viiij=u.asm.yc).apply(null,arguments)},Wn=u.dynCall_viiiiiiiiiji=function(){return(Wn=u.dynCall_viiiiiiiiiji=u.asm.zc).apply(null,arguments)},Hn=u.dynCall_jjj=function(){return(Hn=u.dynCall_jjj=u.asm.Ac).apply(null,arguments)},Yn=u.dynCall_iiiijjj=function(){return(Yn=u.dynCall_iiiijjj=u.asm.Bc).apply(null,arguments)},Ln=u.dynCall_iiijjj=function(){return(Ln=u.dynCall_iiijjj=u.asm.Cc).apply(null,arguments)},zn=u.dynCall_jiii=function(){return(zn=u.dynCall_jiii=u.asm.Dc).apply(null,arguments)},Gn=u.dynCall_vjjjjjjffiifiiiiii=function(){return(Gn=u.dynCall_vjjjjjjffiifiiiiii=u.asm.Ec).apply(null,arguments)},Bn=u.dynCall_vjjjjjjjjfffiifiiiiii=function(){return(Bn=u.dynCall_vjjjjjjjjfffiifiiiiii=u.asm.Fc).apply(null,arguments)},Nn=u.dynCall_vjjjjjjfffifiiiiiii=function(){return(Nn=u.dynCall_vjjjjjjfffifiiiiiii=u.asm.Gc).apply(null,arguments)},Vn=u.dynCall_vjjjjjjfffifiiiii=function(){return(Vn=u.dynCall_vjjjjjjfffifiiiii=u.asm.Hc).apply(null,arguments)},qn=u.dynCall_vjjjjjjjjfffiifiiiii=function(){return(qn=u.dynCall_vjjjjjjjjfffiifiiiii=u.asm.Ic).apply(null,arguments)},Xn=u.dynCall_vijjfffiii=function(){return(Xn=u.dynCall_vijjfffiii=u.asm.Jc).apply(null,arguments)},Jn=u.dynCall_vijiiiiiiii=function(){return(Jn=u.dynCall_vijiiiiiiii=u.asm.Kc).apply(null,arguments)},Zn=u.dynCall_vijjjjjjifiiiii=function(){return(Zn=u.dynCall_vijjjjjjifiiiii=u.asm.Lc).apply(null,arguments)},Qn=u.dynCall_vjjjjjiiii=function(){return(Qn=u.dynCall_vjjjjjiiii=u.asm.Mc).apply(null,arguments)},$n=u.dynCall_vjjjjfiii=function(){return($n=u.dynCall_vjjjjfiii=u.asm.Nc).apply(null,arguments)},Kn=u.dynCall_viiijiiii=function(){return(Kn=u.dynCall_viiijiiii=u.asm.Oc).apply(null,arguments)},te=u.dynCall_viiijjjii=function(){return(te=u.dynCall_viiijjjii=u.asm.Pc).apply(null,arguments)},ne=u.dynCall_iiij=function(){return(ne=u.dynCall_iiij=u.asm.Qc).apply(null,arguments)},ee=u.dynCall_viiijii=function(){return(ee=u.dynCall_viiijii=u.asm.Rc).apply(null,arguments)},re=u.dynCall_viijiiiiiiiii=function(){return(re=u.dynCall_viijiiiiiiiii=u.asm.Sc).apply(null,arguments)},ie=u.dynCall_jfi=function(){return(ie=u.dynCall_jfi=u.asm.Tc).apply(null,arguments)},ae=u.dynCall_viji=function(){return(ae=u.dynCall_viji=u.asm.Uc).apply(null,arguments)};function oe(){function t(){if(!dn&&(dn=!0,u.calledRun=!0,!H)&&(j||pt(J),c(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),!j)){if(u.postRun)for(\\\"function\\\"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;){var t=u.postRun.shift();Z.unshift(t)}pt(Z)}}if(!(0<K))if(j)c(u),j||pt(J),postMessage({cmd:\\\"loaded\\\"});else{if(u.preRun)for(\\\"function\\\"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)Q();pt(X),0<K||(u.setStatus?(u.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){u.setStatus(\\\"\\\")}),1),t()}),1)):t())}}if(u.UTF8ToString=z,u.stringToUTF8=function(t,n,e){return G(t,r(),n,e)},u.lengthBytesUTF8=B,u.keepRuntimeAlive=function(){return x},u.wasmMemory=R,u.stackSave=bn,u.stackRestore=jn,u.stackAlloc=Cn,u.ExitStatus=ot,u.PThread=st,nt=function t(){dn||oe(),dn||(nt=t)},u.preInit)for(\\\"function\\\"==typeof u.preInit&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();return oe(),t.ready});t.exports=r},932:function(t,n,e){var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(t){var n,r,i;t=t||{},n||(n=void 0!==t?t:{}),n.ready=new Promise((function(t,n){r=t,i=n}));var a,o,u,c,l,f,s=Object.assign({},n),p=\\\"./this.program\\\",h=\\\"object\\\"==typeof window,d=\\\"function\\\"==typeof importScripts,y=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,v=\\\"\\\";y?(v=d?e(908).dirname(v)+\\\"/\\\":\\\"//\\\",f=()=>{l||(c=e(384),l=e(908))},a=function(t,n){return f(),t=l.normalize(t),c.readFileSync(t,n?void 0:\\\"utf8\\\")},u=t=>((t=a(t,!0)).buffer||(t=new Uint8Array(t)),t),o=(t,n,e)=>{f(),t=l.normalize(t),c.readFile(t,(function(t,r){t?e(t):n(r.buffer)}))},1<process.argv.length&&(p=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(t){throw t})),process.on(\\\"unhandledRejection\\\",(function(t){throw t})),n.inspect=function(){return\\\"[Emscripten Module object]\\\"}):(h||d)&&(d?v=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(v=document.currentScript.src),_scriptDir&&(v=_scriptDir),v=0!==v.indexOf(\\\"blob:\\\")?v.substr(0,v.replace(/[?#].*/,\\\"\\\").lastIndexOf(\\\"/\\\")+1):\\\"\\\",a=t=>{var n=new XMLHttpRequest;return n.open(\\\"GET\\\",t,!1),n.send(null),n.responseText},d&&(u=t=>{var n=new XMLHttpRequest;return n.open(\\\"GET\\\",t,!1),n.responseType=\\\"arraybuffer\\\",n.send(null),new Uint8Array(n.response)}),o=(t,n,e)=>{var r=new XMLHttpRequest;r.open(\\\"GET\\\",t,!0),r.responseType=\\\"arraybuffer\\\",r.onload=()=>{200==r.status||0==r.status&&r.response?n(r.response):e()},r.onerror=e,r.send(null)});var m,g=n.print||console.log.bind(console),w=n.printErr||console.warn.bind(console);Object.assign(n,s),s=null,n.thisProgram&&(p=n.thisProgram),n.wasmBinary&&(m=n.wasmBinary),n.noExitRuntime,\\\"object\\\"!=typeof WebAssembly&&z(\\\"no native wasm support detected\\\");var _,b,j,C,O,S,T=!1,A=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function E(t,n,e){var r=(n>>>=0)+e;for(e=n;t[e]&&!(e>=r);)++e;if(16<e-n&&t.buffer&&A)return A.decode(t.subarray(n,e));for(r=\\\"\\\";n<e;){var i=t[n++];if(128&i){var a=63&t[n++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var o=63&t[n++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&t[n++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function M(t,n){return(t>>>=0)?E(C,t,n):\\\"\\\"}function x(t,n,e,r){if(!(0<r))return 0;var i=e>>>=0;r=e+r-1;for(var a=0;a<t.length;++a){var o=t.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&t.charCodeAt(++a)),127>=o){if(e>=r)break;n[e++>>>0]=o}else{if(2047>=o){if(e+1>=r)break;n[e++>>>0]=192|o>>6}else{if(65535>=o){if(e+2>=r)break;n[e++>>>0]=224|o>>12}else{if(e+3>=r)break;n[e++>>>0]=240|o>>18,n[e++>>>0]=128|o>>12&63}n[e++>>>0]=128|o>>6&63}n[e++>>>0]=128|63&o}}return n[e>>>0]=0,e-i}function R(t){for(var n=0,e=0;e<t.length;++e){var r=t.charCodeAt(e);127>=r?n++:2047>=r?n+=2:55296<=r&&57343>=r?(n+=4,++e):n+=3}return n}function k(){var t=_.buffer;b=t,n.HEAP8=j=new Int8Array(t),n.HEAP16=new Int16Array(t),n.HEAP32=O=new Int32Array(t),n.HEAPU8=C=new Uint8Array(t),n.HEAPU16=new Uint16Array(t),n.HEAPU32=S=new Uint32Array(t),n.HEAPF32=new Float32Array(t),n.HEAPF64=new Float64Array(t)}var D,P=[],F=[],I=[];function U(){var t=n.preRun.shift();P.unshift(t)}var W,H=0,Y=null,L=null;function z(t){throw n.onAbort&&n.onAbort(t),w(t=\\\"Aborted(\\\"+t+\\\")\\\"),T=!0,t=new WebAssembly.RuntimeError(t+\\\". Build with -sASSERTIONS for more info.\\\"),i(t),t}function G(){return W.startsWith(\\\"data:application/octet-stream;base64,\\\")}if(W=\\\"ort-wasm.wasm\\\",!G()){var B=W;W=n.locateFile?n.locateFile(B,v):v+B}function N(){var t=W;try{if(t==W&&m)return new Uint8Array(m);if(u)return u(t);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(t){z(t)}}function V(t){for(;0<t.length;)t.shift()(n)}var q=[],X=0,J=0;function Z(t){this.Ic=t,this.Cc=t-24,this.Wc=function(t){S[this.Cc+4>>2>>>0]=t},this.Gc=function(){return S[this.Cc+4>>2>>>0]},this.Uc=function(t){S[this.Cc+8>>2>>>0]=t},this.Yc=function(){return S[this.Cc+8>>2>>>0]},this.Vc=function(){O[this.Cc>>2>>>0]=0},this.Lc=function(t){j[this.Cc+12>>0>>>0]=t?1:0},this.Rc=function(){return 0!=j[this.Cc+12>>0>>>0]},this.Mc=function(t){j[this.Cc+13>>0>>>0]=t?1:0},this.Oc=function(){return 0!=j[this.Cc+13>>0>>>0]},this.Tc=function(t,n){this.Hc(0),this.Wc(t),this.Uc(n),this.Vc(),this.Lc(!1),this.Mc(!1)},this.Pc=function(){O[this.Cc>>2>>>0]+=1},this.Zc=function(){var t=O[this.Cc>>2>>>0];return O[this.Cc>>2>>>0]=t-1,1===t},this.Hc=function(t){S[this.Cc+16>>2>>>0]=t},this.Qc=function(){return S[this.Cc+16>>2>>>0]},this.Sc=function(){if(wt(this.Gc()))return S[this.Ic>>2>>>0];var t=this.Qc();return 0!==t?t:this.Ic}}function Q(t){return ht(new Z(t).Cc)}var $=[];function K(t){var n=$[t];return n||(t>=$.length&&($.length=t+1),$[t]=n=D.get(t)),n}function tt(t){var n=R(t)+1,e=pt(n);return e&&x(t,j,e,n),e}var nt={};function et(){if(!rt){var t,n={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:p||\\\"./this.program\\\"};for(t in nt)void 0===nt[t]?delete n[t]:n[t]=nt[t];var e=[];for(t in n)e.push(t+\\\"=\\\"+n[t]);rt=e}return rt}var rt,it=[null,[],[]],at=0;function ot(t){return 0==t%4&&(0!=t%100||0==t%400)}var ut=[31,29,31,30,31,30,31,31,30,31,30,31],ct=[31,28,31,30,31,30,31,31,30,31,30,31];function lt(t,n,e,r){function i(t,n,e){for(t=\\\"number\\\"==typeof t?t.toString():t||\\\"\\\";t.length<n;)t=e[0]+t;return t}function a(t,n){return i(t,n,\\\"0\\\")}function o(t,n){function e(t){return 0>t?-1:0<t?1:0}var r;return 0===(r=e(t.getFullYear()-n.getFullYear()))&&0===(r=e(t.getMonth()-n.getMonth()))&&(r=e(t.getDate()-n.getDate())),r}function u(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function c(t){var n=t.Ec;for(t=new Date(new Date(t.Fc+1900,0,1).getTime());0<n;){var e=t.getMonth(),r=(ot(t.getFullYear())?ut:ct)[e];if(!(n>r-t.getDate())){t.setDate(t.getDate()+n);break}n-=r-t.getDate()+1,t.setDate(1),11>e?t.setMonth(e+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return e=new Date(t.getFullYear()+1,0,4),n=u(new Date(t.getFullYear(),0,4)),e=u(e),0>=o(n,t)?0>=o(e,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var l=O[r+40>>2>>>0];for(var f in r={bd:O[r>>2>>>0],ad:O[r+4>>2>>>0],Jc:O[r+8>>2>>>0],Nc:O[r+12>>2>>>0],Kc:O[r+16>>2>>>0],Fc:O[r+20>>2>>>0],Dc:O[r+24>>2>>>0],Ec:O[r+28>>2>>>0],dd:O[r+32>>2>>>0],$c:O[r+36>>2>>>0],cd:l?M(l):\\\"\\\"},e=M(e),l={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})e=e.replace(new RegExp(f,\\\"g\\\"),l[f]);var s=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),p=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(f in l={\\\"%a\\\":function(t){return s[t.Dc].substring(0,3)},\\\"%A\\\":function(t){return s[t.Dc]},\\\"%b\\\":function(t){return p[t.Kc].substring(0,3)},\\\"%B\\\":function(t){return p[t.Kc]},\\\"%C\\\":function(t){return a((t.Fc+1900)/100|0,2)},\\\"%d\\\":function(t){return a(t.Nc,2)},\\\"%e\\\":function(t){return i(t.Nc,2,\\\" \\\")},\\\"%g\\\":function(t){return c(t).toString().substring(2)},\\\"%G\\\":function(t){return c(t)},\\\"%H\\\":function(t){return a(t.Jc,2)},\\\"%I\\\":function(t){return 0==(t=t.Jc)?t=12:12<t&&(t-=12),a(t,2)},\\\"%j\\\":function(t){for(var n=0,e=0;e<=t.Kc-1;n+=(ot(t.Fc+1900)?ut:ct)[e++]);return a(t.Nc+n,3)},\\\"%m\\\":function(t){return a(t.Kc+1,2)},\\\"%M\\\":function(t){return a(t.ad,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(t){return 0<=t.Jc&&12>t.Jc?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(t){return a(t.bd,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(t){return t.Dc||7},\\\"%U\\\":function(t){return a(Math.floor((t.Ec+7-t.Dc)/7),2)},\\\"%V\\\":function(t){var n=Math.floor((t.Ec+7-(t.Dc+6)%7)/7);if(2>=(t.Dc+371-t.Ec-2)%7&&n++,n)53==n&&(4==(e=(t.Dc+371-t.Ec)%7)||3==e&&ot(t.Fc)||(n=1));else{n=52;var e=(t.Dc+7-t.Ec-1)%7;(4==e||5==e&&ot(t.Fc%400-1))&&n++}return a(n,2)},\\\"%w\\\":function(t){return t.Dc},\\\"%W\\\":function(t){return a(Math.floor((t.Ec+7-(t.Dc+6)%7)/7),2)},\\\"%y\\\":function(t){return(t.Fc+1900).toString().substring(2)},\\\"%Y\\\":function(t){return t.Fc+1900},\\\"%z\\\":function(t){var n=0<=(t=t.$c);return t=Math.abs(t)/60,(n?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(t/60*100+t%60)).slice(-4)},\\\"%Z\\\":function(t){return t.cd},\\\"%%\\\":function(){return\\\"%\\\"}},e=e.replace(/%%/g,\\\"\\\\0\\\\0\\\"),l)e.includes(f)&&(e=e.replace(new RegExp(f,\\\"g\\\"),l[f](r)));return f=function(t){var n=Array(R(t)+1);return x(t,n,0,n.length),n}(e=e.replace(/\\\\0\\\\0/g,\\\"%\\\")),f.length>n?0:(j.set(f,t>>>0),f.length-1)}var ft={j:function(t){return pt(t+24)+24},p:function(t){return(t=new Z(t)).Rc()||(t.Lc(!0),X--),t.Mc(!1),q.push(t),t.Pc(),t.Sc()},sa:function(t){throw w(\\\"Unexpected exception thrown, this is not properly supported - aborting\\\"),T=!0,t},B:function(){dt(0);var t=q.pop();if(t.Zc()&&!t.Oc()){var n=t.Yc();n&&K(n)(t.Ic),Q(t.Ic)}J=0},b:function(){var t=J;if(!t)return at=0;var n=new Z(t);n.Hc(t);var e=n.Gc();if(!e)return at=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(gt(a,e,n.Cc+16))return at=a,t}return at=e,t},l:function(){var t=J;if(!t)return at=0;var n=new Z(t);n.Hc(t);var e=n.Gc();if(!e)return at=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(gt(a,e,n.Cc+16))return at=a,t}return at=e,t},v:function(){var t=J;if(!t)return at=0;var n=new Z(t);n.Hc(t);var e=n.Gc();if(!e)return at=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(gt(a,e,n.Cc+16))return at=a,t}return at=e,t},n:function(){var t=J;if(!t)return at=0;var n=new Z(t);n.Hc(t);var e=n.Gc();if(!e)return at=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(gt(a,e,n.Cc+16))return at=a,t}return at=e,t},m:Q,S:function(){var t=q.pop();t||z(\\\"no exception to throw\\\");var n=t.Ic;throw t.Oc()||(q.push(t),t.Mc(!0),t.Lc(!1),X++),J=n,n},w:function(t,n,e){throw new Z(t).Tc(n,e),J=t,X++,t},va:function(){return X},f:function(t){throw J||(J=t),t},U:function(){return 0},Ma:function(){},Aa:function(){},Ca:function(){},ua:function(){return 0},Ka:function(){},Ga:function(){},Ja:function(){},$:function(){},Ba:function(){},ya:function(){},La:function(){},za:function(){},eb:function(){},la:function(){z(\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},pb:function(){z(\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},aa:function(){return Date.now()},Na:function(){return!0},Oa:function(t,n){t=new Date(1e3*(S[t>>>2]+4294967296*O[t+4>>>2])),O[n>>2>>>0]=t.getUTCSeconds(),O[n+4>>2>>>0]=t.getUTCMinutes(),O[n+8>>2>>>0]=t.getUTCHours(),O[n+12>>2>>>0]=t.getUTCDate(),O[n+16>>2>>>0]=t.getUTCMonth(),O[n+20>>2>>>0]=t.getUTCFullYear()-1900,O[n+24>>2>>>0]=t.getUTCDay(),O[n+28>>2>>>0]=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},Pa:function(t,n){t=new Date(1e3*(S[t>>>2]+4294967296*O[t+4>>>2])),O[n>>2>>>0]=t.getSeconds(),O[n+4>>2>>>0]=t.getMinutes(),O[n+8>>2>>>0]=t.getHours(),O[n+12>>2>>>0]=t.getDate(),O[n+16>>2>>>0]=t.getMonth(),O[n+20>>2>>>0]=t.getFullYear()-1900,O[n+24>>2>>>0]=t.getDay();var e=new Date(t.getFullYear(),0,1);O[n+28>>2>>>0]=(t.getTime()-e.getTime())/864e5|0,O[n+36>>2>>>0]=-60*t.getTimezoneOffset();var r=new Date(t.getFullYear(),6,1).getTimezoneOffset();e=e.getTimezoneOffset(),O[n+32>>2>>>0]=0|(r!=e&&t.getTimezoneOffset()==Math.min(e,r))},Qa:function(t){var n=new Date(O[t+20>>2>>>0]+1900,O[t+16>>2>>>0],O[t+12>>2>>>0],O[t+8>>2>>>0],O[t+4>>2>>>0],O[t>>2>>>0],0),e=O[t+32>>2>>>0],r=n.getTimezoneOffset(),i=new Date(n.getFullYear(),0,1),a=new Date(n.getFullYear(),6,1).getTimezoneOffset(),o=i.getTimezoneOffset(),u=Math.min(o,a);return 0>e?O[t+32>>2>>>0]=Number(a!=o&&u==r):0<e!=(u==r)&&(a=Math.max(o,a),n.setTime(n.getTime()+6e4*((0<e?u:a)-r))),O[t+24>>2>>>0]=n.getDay(),O[t+28>>2>>>0]=(n.getTime()-i.getTime())/864e5|0,O[t>>2>>>0]=n.getSeconds(),O[t+4>>2>>>0]=n.getMinutes(),O[t+8>>2>>>0]=n.getHours(),O[t+12>>2>>>0]=n.getDate(),O[t+16>>2>>>0]=n.getMonth(),n.getTime()/1e3|0},Ea:function(){return-52},Fa:function(){},Va:function t(n,e,r){t.Xc||(t.Xc=!0,function(t,n,e){function r(t){return(t=t.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?t[1]:\\\"GMT\\\"}var i=(new Date).getFullYear(),a=new Date(i,0,1),o=new Date(i,6,1);i=a.getTimezoneOffset();var u=o.getTimezoneOffset();O[t>>2>>>0]=60*Math.max(i,u),O[n>>2>>>0]=Number(i!=u),t=r(a),n=r(o),t=tt(t),n=tt(n),u<i?(S[e>>2>>>0]=t,S[e+4>>2>>>0]=n):(S[e>>2>>>0]=n,S[e+4>>2>>>0]=t)}(n,e,r))},P:function(){z(\\\"\\\")},wa:function(){return 4294901760},V:y?()=>{var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:()=>performance.now(),Da:function(t,n,e){C.copyWithin(t>>>0,n>>>0,n+e>>>0)},T:function(t){var n=C.length;if(4294901760<(t>>>=0))return!1;for(var e=1;4>=e;e*=2){var r=n*(1+.2/e);r=Math.min(r,t+100663296);var i=Math;r=Math.max(t,r),i=i.min.call(i,4294901760,r+(65536-r%65536)%65536);t:{try{_.grow(i-b.byteLength+65535>>>16),k();var a=1;break t}catch(t){}a=void 0}if(a)return!0}return!1},Ha:function(t,n){var e=0;return et().forEach((function(r,i){var a=n+e;for(i=S[t+4*i>>2>>>0]=a,a=0;a<r.length;++a)j[i++>>0>>>0]=r.charCodeAt(a);j[i>>0>>>0]=0,e+=r.length+1})),0},Ia:function(t,n){var e=et();S[t>>2>>>0]=e.length;var r=0;return e.forEach((function(t){r+=t.length+1})),S[n>>2>>>0]=r,0},R:function(){return 52},_:function(){return 52},na:function(){return 70},xa:function(t,n,e,r){for(var i=0,a=0;a<e;a++){var o=S[n>>2>>>0],u=S[n+4>>2>>>0];n+=8;for(var c=0;c<u;c++){var l=C[o+c>>>0],f=it[t];0===l||10===l?((1===t?g:w)(E(f,0)),f.length=0):f.push(l)}i+=u}return S[r>>2>>>0]=i,0},a:function(){return at},oa:function(t,n,e){var r=yt();try{return K(t)(n,e)}catch(t){if(vt(r),t!==t+0)throw t;dt(1,0)}},C:function(t,n,e,r,i,a,o){var u=yt();try{return K(t)(n,e,r,i,a,o)}catch(t){if(vt(u),t!==t+0)throw t;dt(1,0)}},x:function(t){var n=yt();try{return K(t)()}catch(t){if(vt(n),t!==t+0)throw t;dt(1,0)}},c:function(t,n){var e=yt();try{return K(t)(n)}catch(t){if(vt(e),t!==t+0)throw t;dt(1,0)}},W:function(t,n,e){var r=yt();try{return K(t)(n,e)}catch(t){if(vt(r),t!==t+0)throw t;dt(1,0)}},Q:function(t,n,e){var r=yt();try{return K(t)(n,e)}catch(t){if(vt(r),t!==t+0)throw t;dt(1,0)}},k:function(t,n,e){var r=yt();try{return K(t)(n,e)}catch(t){if(vt(r),t!==t+0)throw t;dt(1,0)}},g:function(t,n,e,r){var i=yt();try{return K(t)(n,e,r)}catch(t){if(vt(i),t!==t+0)throw t;dt(1,0)}},i:function(t,n,e,r,i){var a=yt();try{return K(t)(n,e,r,i)}catch(t){if(vt(a),t!==t+0)throw t;dt(1,0)}},o:function(t,n,e,r,i,a){var o=yt();try{return K(t)(n,e,r,i,a)}catch(t){if(vt(o),t!==t+0)throw t;dt(1,0)}},y:function(t,n,e,r,i,a,o){var u=yt();try{return K(t)(n,e,r,i,a,o)}catch(t){if(vt(u),t!==t+0)throw t;dt(1,0)}},K:function(t,n,e,r,i,a,o,u){var c=yt();try{return K(t)(n,e,r,i,a,o,u)}catch(t){if(vt(c),t!==t+0)throw t;dt(1,0)}},Z:function(t,n,e,r,i,a,o,u,c,l,f){var s=yt();try{return K(t)(n,e,r,i,a,o,u,c,l,f)}catch(t){if(vt(s),t!==t+0)throw t;dt(1,0)}},M:function(t,n,e,r,i,a,o,u,c,l,f,s){var p=yt();try{return K(t)(n,e,r,i,a,o,u,c,l,f,s)}catch(t){if(vt(p),t!==t+0)throw t;dt(1,0)}},ia:function(t,n,e,r,i,a,o){var u=yt();try{return jt(t,n,e,r,i,a,o)}catch(t){if(vt(u),t!==t+0)throw t;dt(1,0)}},kb:function(t,n,e,r,i,a,o,u,c,l){var f=yt();try{return Ft(t,n,e,r,i,a,o,u,c,l)}catch(t){if(vt(f),t!==t+0)throw t;dt(1,0)}},Ra:function(t,n,e,r,i){var a=yt();try{return Zt(t,n,e,r,i)}catch(t){if(vt(a),t!==t+0)throw t;dt(1,0)}},jb:function(t,n,e,r,i,a,o,u,c){var l=yt();try{return It(t,n,e,r,i,a,o,u,c)}catch(t){if(vt(l),t!==t+0)throw t;dt(1,0)}},ma:function(t,n,e,r){var i=yt();try{return bt(t,n,e,r)}catch(t){if(vt(i),t!==t+0)throw t;dt(1,0)}},Sa:function(t){var n=yt();try{return _t(t)}catch(t){if(vt(n),t!==t+0)throw t;dt(1,0)}},Ya:function(t,n,e){var r=yt();try{return Kt(t,n,e)}catch(t){if(vt(r),t!==t+0)throw t;dt(1,0)}},fa:function(t,n){var e=yt();try{return Et(t,n)}catch(t){if(vt(e),t!==t+0)throw t;dt(1,0)}},ea:function(t,n,e){var r=yt();try{return Ot(t,n,e)}catch(t){if(vt(r),t!==t+0)throw t;dt(1,0)}},ib:function(t,n,e,r){var i=yt();try{return Ut(t,n,e,r)}catch(t){if(vt(i),t!==t+0)throw t;dt(1,0)}},lb:function(t,n,e,r,i){var a=yt();try{return Pt(t,n,e,r,i)}catch(t){if(vt(a),t!==t+0)throw t;dt(1,0)}},d:function(t){var n=yt();try{K(t)()}catch(t){if(vt(n),t!==t+0)throw t;dt(1,0)}},t:function(t,n){var e=yt();try{K(t)(n)}catch(t){if(vt(e),t!==t+0)throw t;dt(1,0)}},h:function(t,n,e){var r=yt();try{K(t)(n,e)}catch(t){if(vt(r),t!==t+0)throw t;dt(1,0)}},E:function(t,n,e,r,i){var a=yt();try{K(t)(n,e,r,i)}catch(t){if(vt(a),t!==t+0)throw t;dt(1,0)}},e:function(t,n,e,r){var i=yt();try{K(t)(n,e,r)}catch(t){if(vt(i),t!==t+0)throw t;dt(1,0)}},Y:function(t,n,e,r,i){var a=yt();try{K(t)(n,e,r,i)}catch(t){if(vt(a),t!==t+0)throw t;dt(1,0)}},s:function(t,n,e,r,i){var a=yt();try{K(t)(n,e,r,i)}catch(t){if(vt(a),t!==t+0)throw t;dt(1,0)}},u:function(t,n,e,r,i,a){var o=yt();try{K(t)(n,e,r,i,a)}catch(t){if(vt(o),t!==t+0)throw t;dt(1,0)}},q:function(t,n,e,r,i,a,o){var u=yt();try{K(t)(n,e,r,i,a,o)}catch(t){if(vt(u),t!==t+0)throw t;dt(1,0)}},G:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y){var v=yt();try{K(t)(n,e,r,i,a,o,u,c,l,f,s,p,h,d,y)}catch(t){if(vt(v),t!==t+0)throw t;dt(1,0)}},N:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v){var m=yt();try{K(t)(n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v)}catch(t){if(vt(m),t!==t+0)throw t;dt(1,0)}},F:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d){var y=yt();try{K(t)(n,e,r,i,a,o,u,c,l,f,s,p,h,d)}catch(t){if(vt(y),t!==t+0)throw t;dt(1,0)}},z:function(t,n,e,r,i,a,o,u){var c=yt();try{K(t)(n,e,r,i,a,o,u)}catch(t){if(vt(c),t!==t+0)throw t;dt(1,0)}},D:function(t,n,e,r,i,a,o,u,c){var l=yt();try{K(t)(n,e,r,i,a,o,u,c)}catch(t){if(vt(l),t!==t+0)throw t;dt(1,0)}},H:function(t,n,e,r,i,a,o,u,c,l){var f=yt();try{K(t)(n,e,r,i,a,o,u,c,l)}catch(t){if(vt(f),t!==t+0)throw t;dt(1,0)}},X:function(t,n,e,r,i,a,o,u,c,l,f,s){var p=yt();try{K(t)(n,e,r,i,a,o,u,c,l,f,s)}catch(t){if(vt(p),t!==t+0)throw t;dt(1,0)}},pa:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h){var d=yt();try{K(t)(n,e,r,i,a,o,u,c,l,f,s,p,h)}catch(t){if(vt(d),t!==t+0)throw t;dt(1,0)}},J:function(t,n,e,r,i,a,o,u,c,l,f){var s=yt();try{K(t)(n,e,r,i,a,o,u,c,l,f)}catch(t){if(vt(s),t!==t+0)throw t;dt(1,0)}},qa:function(t,n,e,r,i,a,o,u,c,l,f,s){var p=yt();try{K(t)(n,e,r,i,a,o,u,c,l,f,s)}catch(t){if(vt(p),t!==t+0)throw t;dt(1,0)}},A:function(t,n,e,r,i,a,o,u,c,l,f,s,p){var h=yt();try{K(t)(n,e,r,i,a,o,u,c,l,f,s,p)}catch(t){if(vt(h),t!==t+0)throw t;dt(1,0)}},O:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h){var d=yt();try{K(t)(n,e,r,i,a,o,u,c,l,f,s,p,h)}catch(t){if(vt(d),t!==t+0)throw t;dt(1,0)}},L:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y){var v=yt();try{K(t)(n,e,r,i,a,o,u,c,l,f,s,p,h,d,y)}catch(t){if(vt(v),t!==t+0)throw t;dt(1,0)}},mb:function(t,n,e,r,i,a,o,u,c,l,f,s,p){var h=yt();try{Dt(t,n,e,r,i,a,o,u,c,l,f,s,p)}catch(t){if(vt(h),t!==t+0)throw t;dt(1,0)}},ga:function(t,n,e,r,i,a,o,u){var c=yt();try{At(t,n,e,r,i,a,o,u)}catch(t){if(vt(c),t!==t+0)throw t;dt(1,0)}},ha:function(t,n,e,r,i,a,o){var u=yt();try{Tt(t,n,e,r,i,a,o)}catch(t){if(vt(u),t!==t+0)throw t;dt(1,0)}},nb:function(t,n,e,r,i,a){var o=yt();try{kt(t,n,e,r,i,a)}catch(t){if(vt(o),t!==t+0)throw t;dt(1,0)}},ba:function(t,n,e,r,i,a,o){var u=yt();try{xt(t,n,e,r,i,a,o)}catch(t){if(vt(u),t!==t+0)throw t;dt(1,0)}},ja:function(t,n,e,r,i,a,o,u){var c=yt();try{Qt(t,n,e,r,i,a,o,u)}catch(t){if(vt(c),t!==t+0)throw t;dt(1,0)}},Xa:function(t,n,e,r,i,a,o,u,c,l){var f=yt();try{Xt(t,n,e,r,i,a,o,u,c,l)}catch(t){if(vt(f),t!==t+0)throw t;dt(1,0)}},Wa:function(t,n,e,r,i,a,o,u,c,l,f,s){var p=yt();try{Jt(t,n,e,r,i,a,o,u,c,l,f,s)}catch(t){if(vt(p),t!==t+0)throw t;dt(1,0)}},ca:function(t,n,e,r,i,a){var o=yt();try{St(t,n,e,r,i,a)}catch(t){if(vt(o),t!==t+0)throw t;dt(1,0)}},Ta:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h){var d=yt();try{$t(t,n,e,r,i,a,o,u,c,l,f,s,p,h)}catch(t){if(vt(d),t!==t+0)throw t;dt(1,0)}},da:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h){var d=yt();try{Mt(t,n,e,r,i,a,o,u,c,l,f,s,p,h)}catch(t){if(vt(d),t!==t+0)throw t;dt(1,0)}},ka:function(t,n,e,r){var i=yt();try{Ct(t,n,e,r)}catch(t){if(vt(i),t!==t+0)throw t;dt(1,0)}},Ua:function(t,n,e,r,i){var a=yt();try{tn(t,n,e,r,i)}catch(t){if(vt(a),t!==t+0)throw t;dt(1,0)}},ob:function(t,n,e,r,i,a,o){var u=yt();try{Rt(t,n,e,r,i,a,o)}catch(t){if(vt(u),t!==t+0)throw t;dt(1,0)}},ab:function(t,n,e,r,i,a,o,u,c,l,f,s){var p=yt();try{Bt(t,n,e,r,i,a,o,u,c,l,f,s)}catch(t){if(vt(p),t!==t+0)throw t;dt(1,0)}},bb:function(t,n,e,r,i,a,o,u,c,l,f,s){var p=yt();try{Gt(t,n,e,r,i,a,o,u,c,l,f,s)}catch(t){if(vt(p),t!==t+0)throw t;dt(1,0)}},$a:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_){var b=yt();try{Nt(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_)}catch(t){if(vt(b),t!==t+0)throw t;dt(1,0)}},Za:function(t,n,e,r,i,a,o,u,c,l,f,s,p){var h=yt();try{qt(t,n,e,r,i,a,o,u,c,l,f,s,p)}catch(t){if(vt(h),t!==t+0)throw t;dt(1,0)}},_a:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d){var y=yt();try{Vt(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d)}catch(t){if(vt(y),t!==t+0)throw t;dt(1,0)}},db:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j){var C=yt();try{Lt(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j)}catch(t){if(vt(C),t!==t+0)throw t;dt(1,0)}},fb:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C,O){var S=yt();try{Yt(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C,O)}catch(t){if(vt(S),t!==t+0)throw t;dt(1,0)}},hb:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C){var O=yt();try{Wt(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C)}catch(t){if(vt(O),t!==t+0)throw t;dt(1,0)}},cb:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C,O,S,T,A){var E=yt();try{zt(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C,O,S,T,A)}catch(t){if(vt(E),t!==t+0)throw t;dt(1,0)}},gb:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C,O,S,T,A,E){var M=yt();try{Ht(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C,O,S,T,A,E)}catch(t){if(vt(M),t!==t+0)throw t;dt(1,0)}},r:function(t){return t},I:function(t){at=t},ra:lt,ta:function(t,n,e,r){return lt(t,n,e,r)}};!function(){function t(t){n.asm=t.exports,_=n.asm.qb,k(),D=n.asm.Ob,F.unshift(n.asm.rb),H--,n.monitorRunDependencies&&n.monitorRunDependencies(H),0==H&&(null!==Y&&(clearInterval(Y),Y=null),L&&(t=L,L=null,t()))}function e(n){t(n.instance)}function r(t){return function(){if(!m&&(h||d)){if(\\\"function\\\"==typeof fetch&&!W.startsWith(\\\"file://\\\"))return fetch(W,{credentials:\\\"same-origin\\\"}).then((function(t){if(!t.ok)throw\\\"failed to load wasm binary file at '\\\"+W+\\\"'\\\";return t.arrayBuffer()})).catch((function(){return N()}));if(o)return new Promise((function(t,n){o(W,(function(n){t(new Uint8Array(n))}),n)}))}return Promise.resolve().then((function(){return N()}))}().then((function(t){return WebAssembly.instantiate(t,a)})).then((function(t){return t})).then(t,(function(t){w(\\\"failed to asynchronously prepare wasm: \\\"+t),z(t)}))}var a={a:ft};if(H++,n.monitorRunDependencies&&n.monitorRunDependencies(H),n.instantiateWasm)try{return n.instantiateWasm(a,t)}catch(t){return w(\\\"Module.instantiateWasm callback failed with error: \\\"+t),!1}(m||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||G()||W.startsWith(\\\"file://\\\")||y||\\\"function\\\"!=typeof fetch?r(e):fetch(W,{credentials:\\\"same-origin\\\"}).then((function(t){return WebAssembly.instantiateStreaming(t,a).then(e,(function(t){return w(\\\"wasm streaming compile failed: \\\"+t),w(\\\"falling back to ArrayBuffer instantiation\\\"),r(e)}))}))).catch(i)}(),n.___wasm_call_ctors=function(){return(n.___wasm_call_ctors=n.asm.rb).apply(null,arguments)},n._OrtInit=function(){return(n._OrtInit=n.asm.sb).apply(null,arguments)},n._OrtCreateSessionOptions=function(){return(n._OrtCreateSessionOptions=n.asm.tb).apply(null,arguments)},n._OrtAppendExecutionProvider=function(){return(n._OrtAppendExecutionProvider=n.asm.ub).apply(null,arguments)},n._OrtAddSessionConfigEntry=function(){return(n._OrtAddSessionConfigEntry=n.asm.vb).apply(null,arguments)},n._OrtReleaseSessionOptions=function(){return(n._OrtReleaseSessionOptions=n.asm.wb).apply(null,arguments)},n._OrtCreateSession=function(){return(n._OrtCreateSession=n.asm.xb).apply(null,arguments)},n._OrtReleaseSession=function(){return(n._OrtReleaseSession=n.asm.yb).apply(null,arguments)},n._OrtGetInputCount=function(){return(n._OrtGetInputCount=n.asm.zb).apply(null,arguments)},n._OrtGetOutputCount=function(){return(n._OrtGetOutputCount=n.asm.Ab).apply(null,arguments)},n._OrtGetInputName=function(){return(n._OrtGetInputName=n.asm.Bb).apply(null,arguments)},n._OrtGetOutputName=function(){return(n._OrtGetOutputName=n.asm.Cb).apply(null,arguments)},n._OrtFree=function(){return(n._OrtFree=n.asm.Db).apply(null,arguments)},n._OrtCreateTensor=function(){return(n._OrtCreateTensor=n.asm.Eb).apply(null,arguments)},n._OrtGetTensorData=function(){return(n._OrtGetTensorData=n.asm.Fb).apply(null,arguments)},n._OrtReleaseTensor=function(){return(n._OrtReleaseTensor=n.asm.Gb).apply(null,arguments)},n._OrtCreateRunOptions=function(){return(n._OrtCreateRunOptions=n.asm.Hb).apply(null,arguments)},n._OrtAddRunConfigEntry=function(){return(n._OrtAddRunConfigEntry=n.asm.Ib).apply(null,arguments)},n._OrtReleaseRunOptions=function(){return(n._OrtReleaseRunOptions=n.asm.Jb).apply(null,arguments)},n._OrtRun=function(){return(n._OrtRun=n.asm.Kb).apply(null,arguments)},n._OrtEndProfiling=function(){return(n._OrtEndProfiling=n.asm.Lb).apply(null,arguments)};var st,pt=n._malloc=function(){return(pt=n._malloc=n.asm.Mb).apply(null,arguments)},ht=n._free=function(){return(ht=n._free=n.asm.Nb).apply(null,arguments)},dt=n._setThrew=function(){return(dt=n._setThrew=n.asm.Pb).apply(null,arguments)},yt=n.stackSave=function(){return(yt=n.stackSave=n.asm.Qb).apply(null,arguments)},vt=n.stackRestore=function(){return(vt=n.stackRestore=n.asm.Rb).apply(null,arguments)},mt=n.stackAlloc=function(){return(mt=n.stackAlloc=n.asm.Sb).apply(null,arguments)},gt=n.___cxa_can_catch=function(){return(gt=n.___cxa_can_catch=n.asm.Tb).apply(null,arguments)},wt=n.___cxa_is_pointer_type=function(){return(wt=n.___cxa_is_pointer_type=n.asm.Ub).apply(null,arguments)},_t=n.dynCall_j=function(){return(_t=n.dynCall_j=n.asm.Vb).apply(null,arguments)},bt=n.dynCall_iij=function(){return(bt=n.dynCall_iij=n.asm.Wb).apply(null,arguments)},jt=n.dynCall_iiiiij=function(){return(jt=n.dynCall_iiiiij=n.asm.Xb).apply(null,arguments)},Ct=n.dynCall_vij=function(){return(Ct=n.dynCall_vij=n.asm.Yb).apply(null,arguments)},Ot=n.dynCall_jii=function(){return(Ot=n.dynCall_jii=n.asm.Zb).apply(null,arguments)},St=n.dynCall_viiji=function(){return(St=n.dynCall_viiji=n.asm._b).apply(null,arguments)},Tt=n.dynCall_viiiij=function(){return(Tt=n.dynCall_viiiij=n.asm.$b).apply(null,arguments)},At=n.dynCall_viiiiij=function(){return(At=n.dynCall_viiiiij=n.asm.ac).apply(null,arguments)},Et=n.dynCall_ji=function(){return(Et=n.dynCall_ji=n.asm.bc).apply(null,arguments)},Mt=n.dynCall_viijjjiiiii=function(){return(Mt=n.dynCall_viijjjiiiii=n.asm.cc).apply(null,arguments)},xt=n.dynCall_viiiji=function(){return(xt=n.dynCall_viiiji=n.asm.dc).apply(null,arguments)},Rt=n.dynCall_vijiii=function(){return(Rt=n.dynCall_vijiii=n.asm.ec).apply(null,arguments)},kt=n.dynCall_viiij=function(){return(kt=n.dynCall_viiij=n.asm.fc).apply(null,arguments)},Dt=n.dynCall_viiiiiiiiiji=function(){return(Dt=n.dynCall_viiiiiiiiiji=n.asm.gc).apply(null,arguments)},Pt=n.dynCall_jjj=function(){return(Pt=n.dynCall_jjj=n.asm.hc).apply(null,arguments)},Ft=n.dynCall_iiiijjj=function(){return(Ft=n.dynCall_iiiijjj=n.asm.ic).apply(null,arguments)},It=n.dynCall_iiijjj=function(){return(It=n.dynCall_iiijjj=n.asm.jc).apply(null,arguments)},Ut=n.dynCall_jiii=function(){return(Ut=n.dynCall_jiii=n.asm.kc).apply(null,arguments)},Wt=n.dynCall_vjjjjjjffiifiiiiii=function(){return(Wt=n.dynCall_vjjjjjjffiifiiiiii=n.asm.lc).apply(null,arguments)},Ht=n.dynCall_vjjjjjjjjfffiifiiiiii=function(){return(Ht=n.dynCall_vjjjjjjjjfffiifiiiiii=n.asm.mc).apply(null,arguments)},Yt=n.dynCall_vjjjjjjfffifiiiiiii=function(){return(Yt=n.dynCall_vjjjjjjfffifiiiiiii=n.asm.nc).apply(null,arguments)},Lt=n.dynCall_vjjjjjjfffifiiiii=function(){return(Lt=n.dynCall_vjjjjjjfffifiiiii=n.asm.oc).apply(null,arguments)},zt=n.dynCall_vjjjjjjjjfffiifiiiii=function(){return(zt=n.dynCall_vjjjjjjjjfffiifiiiii=n.asm.pc).apply(null,arguments)},Gt=n.dynCall_vijjfffiii=function(){return(Gt=n.dynCall_vijjfffiii=n.asm.qc).apply(null,arguments)},Bt=n.dynCall_vijiiiiiiii=function(){return(Bt=n.dynCall_vijiiiiiiii=n.asm.rc).apply(null,arguments)},Nt=n.dynCall_vijjjjjjifiiiii=function(){return(Nt=n.dynCall_vijjjjjjifiiiii=n.asm.sc).apply(null,arguments)},Vt=n.dynCall_vjjjjjiiii=function(){return(Vt=n.dynCall_vjjjjjiiii=n.asm.tc).apply(null,arguments)},qt=n.dynCall_vjjjjfiii=function(){return(qt=n.dynCall_vjjjjfiii=n.asm.uc).apply(null,arguments)},Xt=n.dynCall_viiijiiii=function(){return(Xt=n.dynCall_viiijiiii=n.asm.vc).apply(null,arguments)},Jt=n.dynCall_viiijjjii=function(){return(Jt=n.dynCall_viiijjjii=n.asm.wc).apply(null,arguments)},Zt=n.dynCall_iiij=function(){return(Zt=n.dynCall_iiij=n.asm.xc).apply(null,arguments)},Qt=n.dynCall_viiijii=function(){return(Qt=n.dynCall_viiijii=n.asm.yc).apply(null,arguments)},$t=n.dynCall_viijiiiiiiiii=function(){return($t=n.dynCall_viijiiiiiiiii=n.asm.zc).apply(null,arguments)},Kt=n.dynCall_jfi=function(){return(Kt=n.dynCall_jfi=n.asm.Ac).apply(null,arguments)},tn=n.dynCall_viji=function(){return(tn=n.dynCall_viji=n.asm.Bc).apply(null,arguments)};function nn(){function t(){if(!st&&(st=!0,n.calledRun=!0,!T)){if(V(F),r(n),n.onRuntimeInitialized&&n.onRuntimeInitialized(),n.postRun)for(\\\"function\\\"==typeof n.postRun&&(n.postRun=[n.postRun]);n.postRun.length;){var t=n.postRun.shift();I.unshift(t)}V(I)}}if(!(0<H)){if(n.preRun)for(\\\"function\\\"==typeof n.preRun&&(n.preRun=[n.preRun]);n.preRun.length;)U();V(P),0<H||(n.setStatus?(n.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){n.setStatus(\\\"\\\")}),1),t()}),1)):t())}}if(n.UTF8ToString=M,n.stringToUTF8=function(t,n,e){return x(t,C,n,e)},n.lengthBytesUTF8=R,n.stackSave=yt,n.stackRestore=vt,n.stackAlloc=mt,L=function t(){st||nn(),st||(L=t)},n.preInit)for(\\\"function\\\"==typeof n.preInit&&(n.preInit=[n.preInit]);0<n.preInit.length;)n.preInit.pop()();return nn(),t.ready});t.exports=r},154:function(t){\\\"use strict\\\";t.exports='\\\"use strict\\\";var e={},t=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node;if(t){var r=require(\\\"worker_threads\\\"),a=r.parentPort;a.on(\\\"message\\\",(e=>onmessage({data:e})));var o=require(\\\"fs\\\");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:r.Worker,importScripts:function(e){(0,eval)(o.readFileSync(e,\\\"utf8\\\"))},postMessage:function(e){a.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var s=!1,n=[],i=function(){var e=Array.prototype.slice.call(arguments).join(\\\" \\\");t?o.writeSync(2,e+\\\"\\\\\\\\n\\\"):console.error(e)};self.alert=function(){var t=Array.prototype.slice.call(arguments).join(\\\" \\\");postMessage({cmd:\\\"alert\\\",text:t,threadId:e._pthread_self()})},e.instantiateWasm=(t,r)=>{var a=new WebAssembly.Instance(e.wasmModule,t);return r(a),e.wasmModule=null,a.exports},self.onunhandledrejection=e=>{throw e.reason??e},self.onmessage=t=>{try{if(\\\"load\\\"===t.data.cmd){if(e.wasmModule=t.data.wasmModule,e.wasmMemory=t.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,\\\"string\\\"==typeof t.data.urlOrBlob)importScripts(t.data.urlOrBlob);else{var r=URL.createObjectURL(t.data.urlOrBlob);importScripts(r),URL.revokeObjectURL(r)}ortWasmThreaded(e).then((function(t){e=t}))}else if(\\\"run\\\"===t.data.cmd){e.__performance_now_clock_drift=performance.now()-t.data.time,e.__emscripten_thread_init(t.data.pthread_ptr,0,0,1),e.establishStackSpace(),e.PThread.receiveObjectTransfer(t.data),e.PThread.threadInitTLS(),s||(n.forEach((t=>{e.executeNotifiedProxyingQueue(t)})),n=[],s=!0);try{e.invokeEntryPoint(t.data.start_routine,t.data.arg)}catch(t){if(\\\"unwind\\\"!=t){if(!(t instanceof e.ExitStatus))throw t;e.keepRuntimeAlive()||e.__emscripten_thread_exit(t.status)}}}else\\\"cancel\\\"===t.data.cmd?e._pthread_self()&&e.__emscripten_thread_exit(-1):\\\"setimmediate\\\"===t.data.target||(\\\"processProxyingQueue\\\"===t.data.cmd?s?e.executeNotifiedProxyingQueue(t.data.queue):n.push(t.data.queue):(i(\\\"worker.js received unknown command \\\"+t.data.cmd),i(t.data)))}catch(t){throw i(\\\"worker.js onmessage() captured an uncaught exception: \\\"+t),t&&t.stack&&i(t.stack),e.__emscripten_thread_crashed&&e.__emscripten_thread_crashed(),t}};\\\\n'},384:function(){},993:function(){},908:function(){},953:function(){},925:function(){},449:function(){}},n={};function e(r){var i=n[r];if(void 0!==i)return i.exports;var a=n[r]={exports:{}};return t[r].call(a.exports,a,a.exports,e),a.exports}e.g=function(){if(\\\"object\\\"==typeof globalThis)return globalThis;try{return this||new Function(\\\"return this\\\")()}catch(t){if(\\\"object\\\"==typeof window)return window}}(),function(){\\\"use strict\\\";var t=e(259),n=e(263);self.onmessage=function(e){switch(e.data.type){case\\\"init-wasm\\\":(0,n.initializeWebAssembly)(e.data.in).then((function(){return postMessage({type:\\\"init-wasm\\\"})}),(function(t){return postMessage({type:\\\"init-wasm\\\",err:t})}));break;case\\\"init-ort\\\":try{var r=e.data.in,i=r.numThreads,a=r.loggingLevel;(0,t.initOrt)(i,a),postMessage({type:\\\"init-ort\\\"})}catch(t){postMessage({type:\\\"init-ort\\\",err:t})}break;case\\\"create_allocate\\\":try{var o=e.data.in.model,u=(0,t.createSessionAllocate)(o);postMessage({type:\\\"create_allocate\\\",out:u})}catch(t){postMessage({type:\\\"create_allocate\\\",err:t})}break;case\\\"create_finalize\\\":try{var c=e.data.in,l=(u=c.modeldata,c.options),f=(0,t.createSessionFinalize)(u,l);postMessage({type:\\\"create_finalize\\\",out:f})}catch(t){postMessage({type:\\\"create_finalize\\\",err:t})}break;case\\\"create\\\":try{var s=e.data.in;o=s.model,l=s.options,f=(0,t.createSession)(o,l),postMessage({type:\\\"create\\\",out:f})}catch(t){postMessage({type:\\\"create\\\",err:t})}break;case\\\"release\\\":try{var p=e.data.in;(0,t.releaseSession)(p),postMessage({type:\\\"release\\\"})}catch(t){postMessage({type:\\\"release\\\",err:t})}break;case\\\"run\\\":try{var h=e.data.in,d=h.sessionId,y=h.inputIndices,v=h.inputs,m=h.outputIndices;l=h.options,(0,t.run)(d,y,v,m,l).then((function(n){postMessage({type:\\\"run\\\",out:n},(0,t.extractTransferableBuffers)(n))}),(function(t){postMessage({type:\\\"run\\\",err:t})}))}catch(t){postMessage({type:\\\"run\\\",err:t})}break;case\\\"end-profiling\\\":try{p=e.data.in,(0,t.endProfiling)(p),postMessage({type:\\\"end-profiling\\\"})}catch(t){postMessage({type:\\\"end-profiling\\\",err:t})}}}}()}();\\n\", \"Worker\", undefined, undefined);\n}\n","\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","var _scriptDir,t=(_scriptDir=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\"undefined\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(t){function n(){return k.buffer!=R&&B(k.buffer),D}function r(){return k.buffer!=R&&B(k.buffer),F}function e(){return k.buffer!=R&&B(k.buffer),Y}function i(){return k.buffer!=R&&B(k.buffer),I}function a(){return k.buffer!=R&&B(k.buffer),W}var u,o,c;t=t||{},u||(u=void 0!==t?t:{}),u.ready=new Promise((function(t,n){o=t,c=n}));var f,l,s,d,h,p,y=Object.assign({},u),m=\"./this.program\",v=(t,n)=>{throw n},_=\"object\"==typeof window,g=\"function\"==typeof importScripts,w=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,j=u.ENVIRONMENT_IS_PTHREAD||!1,b=\"\";function C(t){return u.locateFile?u.locateFile(t,b):b+t}if(w){let t;b=g?require(\"path\").dirname(b)+\"/\":__dirname+\"/\",p=()=>{h||(d=require(\"fs\"),h=require(\"path\"))},f=function(t,n){return p(),t=h.normalize(t),d.readFileSync(t,n?void 0:\"utf8\")},s=t=>((t=f(t,!0)).buffer||(t=new Uint8Array(t)),t),l=(t,n,r)=>{p(),t=h.normalize(t),d.readFile(t,(function(t,e){t?r(t):n(e.buffer)}))},1<process.argv.length&&(m=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",(function(t){if(!(t instanceof at))throw t})),process.on(\"unhandledRejection\",(function(t){throw t})),v=(t,n)=>{if(x)throw process.exitCode=t,n;n instanceof at||S(\"exiting due to exception: \"+n),process.exit(t)},u.inspect=function(){return\"[Emscripten Module object]\"};try{t=require(\"worker_threads\")}catch(t){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),t}global.Worker=t.Worker}else(_||g)&&(g?b=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(b=document.currentScript.src),_scriptDir&&(b=_scriptDir),b=0!==b.indexOf(\"blob:\")?b.substr(0,b.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):\"\",w||(f=t=>{var n=new XMLHttpRequest;return n.open(\"GET\",t,!1),n.send(null),n.responseText},g&&(s=t=>{var n=new XMLHttpRequest;return n.open(\"GET\",t,!1),n.responseType=\"arraybuffer\",n.send(null),new Uint8Array(n.response)}),l=(t,n,r)=>{var e=new XMLHttpRequest;e.open(\"GET\",t,!0),e.responseType=\"arraybuffer\",e.onload=()=>{200==e.status||0==e.status&&e.response?n(e.response):r()},e.onerror=r,e.send(null)}));w&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);var O=console.log.bind(console),T=console.warn.bind(console);w&&(p(),O=t=>d.writeSync(1,t+\"\\n\"),T=t=>d.writeSync(2,t+\"\\n\"));var A,M=u.print||O,S=u.printErr||T;Object.assign(u,y),y=null,u.thisProgram&&(m=u.thisProgram),u.quit&&(v=u.quit),u.wasmBinary&&(A=u.wasmBinary);var x=u.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&nt(\"no native wasm support detected\");var k,E,R,D,F,Y,I,W,P=!1,U=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function H(t,n,r){var e=(n>>>=0)+r;for(r=n;t[r]&&!(r>=e);)++r;if(16<r-n&&t.buffer&&U)return U.decode(t.buffer instanceof SharedArrayBuffer?t.slice(n,r):t.subarray(n,r));for(e=\"\";n<r;){var i=t[n++];if(128&i){var a=63&t[n++];if(192==(224&i))e+=String.fromCharCode((31&i)<<6|a);else{var u=63&t[n++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|u:(7&i)<<18|a<<12|u<<6|63&t[n++])?e+=String.fromCharCode(i):(i-=65536,e+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else e+=String.fromCharCode(i)}return e}function V(t,n){return(t>>>=0)?H(r(),t,n):\"\"}function q(t,n,r,e){if(!(0<e))return 0;var i=r>>>=0;e=r+e-1;for(var a=0;a<t.length;++a){var u=t.charCodeAt(a);if(55296<=u&&57343>=u&&(u=65536+((1023&u)<<10)|1023&t.charCodeAt(++a)),127>=u){if(r>=e)break;n[r++>>>0]=u}else{if(2047>=u){if(r+1>=e)break;n[r++>>>0]=192|u>>6}else{if(65535>=u){if(r+2>=e)break;n[r++>>>0]=224|u>>12}else{if(r+3>=e)break;n[r++>>>0]=240|u>>18,n[r++>>>0]=128|u>>12&63}n[r++>>>0]=128|u>>6&63}n[r++>>>0]=128|63&u}}return n[r>>>0]=0,r-i}function G(t){for(var n=0,r=0;r<t.length;++r){var e=t.charCodeAt(r);127>=e?n++:2047>=e?n+=2:55296<=e&&57343>=e?(n+=4,++r):n+=3}return n}function B(t){R=t,u.HEAP8=D=new Int8Array(t),u.HEAP16=new Int16Array(t),u.HEAP32=Y=new Int32Array(t),u.HEAPU8=F=new Uint8Array(t),u.HEAPU16=new Uint16Array(t),u.HEAPU32=I=new Uint32Array(t),u.HEAPF32=new Float32Array(t),u.HEAPF64=W=new Float64Array(t)}j&&(R=u.buffer);var z=u.INITIAL_MEMORY||16777216;if(j)k=u.wasmMemory,R=u.buffer;else if(u.wasmMemory)k=u.wasmMemory;else if(!((k=new WebAssembly.Memory({initial:z/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw S(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),w&&console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\"),Error(\"bad memory\");k&&(R=k.buffer),z=R.byteLength,B(R);var N,L=[],X=[],Z=[];function $(){var t=u.preRun.shift();L.unshift(t)}var Q,J=0,K=null,tt=null;function nt(t){throw j?postMessage({cmd:\"onAbort\",arg:t}):u.onAbort&&u.onAbort(t),S(t=\"Aborted(\"+t+\")\"),P=!0,t=new WebAssembly.RuntimeError(t+\". Build with -sASSERTIONS for more info.\"),c(t),t}function rt(){return Q.startsWith(\"data:application/octet-stream;base64,\")}function et(){var t=Q;try{if(t==Q&&A)return new Uint8Array(A);if(s)return s(t);throw\"both async and sync fetching of the wasm failed\"}catch(t){nt(t)}}Q=\"ort-wasm-threaded.wasm\",rt()||(Q=C(Q));var it={};function at(t){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+t+\")\",this.status=t}function ut(t){(t=lt.Yc[t])||nt(),lt.pd(t)}function ot(t){var n=lt.Ed();if(!n)return 6;lt.gd.push(n),lt.Yc[t.Xc]=n,n.Xc=t.Xc;var r={cmd:\"run\",start_routine:t.Kd,arg:t.yd,pthread_ptr:t.Xc};return n.ed=()=>{r.time=performance.now(),n.postMessage(r,t.Qd)},n.loaded&&(n.ed(),delete n.ed),0}function ct(t){if(j)return Gt(1,1,t);x||(lt.Ld(),u.onExit&&u.onExit(t),P=!0),v(t,new at(t))}function ft(t,n){if(!n&&j)throw dt(t),\"unwind\";ct(t)}var lt={ad:[],gd:[],sd:[],Yc:{},kd:function(){j&&lt.Gd()},Sd:function(){},Gd:function(){lt.receiveObjectTransfer=lt.Id,lt.threadInitTLS=lt.rd,lt.setExitStatus=lt.qd,x=!1},qd:function(){},Ld:function(){for(var t of Object.values(lt.Yc))lt.pd(t);for(t of lt.ad)t.terminate();lt.ad=[]},pd:function(t){var n=t.Xc;delete lt.Yc[n],lt.ad.push(t),lt.gd.splice(lt.gd.indexOf(t),1),t.Xc=0,mn(n)},Id:function(){},rd:function(){lt.sd.forEach((t=>t()))},Hd:function(t,n){t.onmessage=r=>{var e=(r=r.data).cmd;if(t.Xc&&(lt.Cd=t.Xc),r.targetThread&&r.targetThread!=fn()){var i=lt.Yc[r.Td];i?i.postMessage(r,r.transferList):S('Internal error! Worker sent a message \"'+e+'\" to target pthread '+r.targetThread+\", but that thread no longer exists!\")}else\"processProxyingQueue\"===e?Wt(r.queue):\"spawnThread\"===e?ot(r):\"cleanupThread\"===e?ut(r.thread):\"killThread\"===e?(r=r.thread,e=lt.Yc[r],delete lt.Yc[r],e.terminate(),mn(r),lt.gd.splice(lt.gd.indexOf(e),1),e.Xc=0):\"cancelThread\"===e?lt.Yc[r.thread].postMessage({cmd:\"cancel\"}):\"loaded\"===e?(t.loaded=!0,n&&n(t),t.ed&&(t.ed(),delete t.ed)):\"print\"===e?M(\"Thread \"+r.threadId+\": \"+r.text):\"printErr\"===e?S(\"Thread \"+r.threadId+\": \"+r.text):\"alert\"===e?alert(\"Thread \"+r.threadId+\": \"+r.text):\"setimmediate\"===r.target?t.postMessage(r):\"onAbort\"===e?u.onAbort&&u.onAbort(r.arg):e&&S(\"worker sent an unknown command \"+e);lt.Cd=void 0},t.onerror=t=>{throw S(\"worker sent an error! \"+t.filename+\":\"+t.lineno+\": \"+t.message),t},w&&(t.on(\"message\",(function(n){t.onmessage({data:n})})),t.on(\"error\",(function(n){t.onerror(n)})),t.on(\"detachedExit\",(function(){}))),t.postMessage({cmd:\"load\",urlOrBlob:u.mainScriptUrlOrBlob||_scriptDir,wasmMemory:k,wasmModule:E})},xd:function(){var t=C(\"ort-wasm-threaded.worker.js\");lt.ad.push(new Worker(t))},Ed:function(){return 0==lt.ad.length&&(lt.xd(),lt.Hd(lt.ad[0])),lt.ad.pop()}};function st(t){for(;0<t.length;)t.shift()(u)}function dt(t){if(j)return Gt(2,0,t);try{ft(t)}catch(t){t instanceof at||\"unwind\"==t||v(1,t)}}u.PThread=lt,u.establishStackSpace=function(){var t=fn(),n=e()[t+44>>2>>>0];t=e()[t+48>>2>>>0],gn(n,n-t),jn(n)};var ht=[];function pt(t){var n=ht[t];return n||(t>=ht.length&&(ht.length=t+1),ht[t]=n=N.get(t)),n}u.invokeEntryPoint=function(t,n){t=pt(t)(n),x?lt.qd(t):vn(t)};var yt,mt,vt=[],_t=0,gt=0;function wt(t){this.dd=t,this.Vc=t-24,this.Dd=function(t){i()[this.Vc+4>>2>>>0]=t},this.bd=function(){return i()[this.Vc+4>>2>>>0]},this.zd=function(t){i()[this.Vc+8>>2>>>0]=t},this.Fd=function(){return i()[this.Vc+8>>2>>>0]},this.Bd=function(){e()[this.Vc>>2>>>0]=0},this.ld=function(t){t=t?1:0,n()[this.Vc+12>>0>>>0]=t},this.td=function(){return 0!=n()[this.Vc+12>>0>>>0]},this.md=function(t){t=t?1:0,n()[this.Vc+13>>0>>>0]=t},this.od=function(){return 0!=n()[this.Vc+13>>0>>>0]},this.kd=function(t,n){this.cd(0),this.Dd(t),this.zd(n),this.Bd(),this.ld(!1),this.md(!1)},this.ud=function(){Atomics.add(e(),this.Vc>>2,1)},this.Jd=function(){return 1===Atomics.sub(e(),this.Vc>>2,1)},this.cd=function(t){i()[this.Vc+16>>2>>>0]=t},this.vd=function(){return i()[this.Vc+16>>2>>>0]},this.wd=function(){if(On(this.bd()))return i()[this.dd>>2>>>0];var t=this.vd();return 0!==t?t:this.dd}}function jt(t){return sn(new wt(t).Vc)}function bt(t,n,r,e){return j?Gt(3,1,t,n,r,e):Ct(t,n,r,e)}function Ct(t,n,r,e){if(\"undefined\"==typeof SharedArrayBuffer)return S(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;var i=[];return j&&0===i.length?bt(t,n,r,e):(t={Kd:r,Xc:t,yd:e,Qd:i},j?(t.Rd=\"spawnThread\",postMessage(t,i),0):ot(t))}function Ot(t,n,r){return j?Gt(4,1,t,n,r):0}function Tt(t,n){if(j)return Gt(5,1,t,n)}function At(t,n){if(j)return Gt(6,1,t,n)}function Mt(t,n,r){if(j)return Gt(7,1,t,n,r)}function St(t,n,r){return j?Gt(8,1,t,n,r):0}function xt(t,n){if(j)return Gt(9,1,t,n)}function kt(t,n,r){if(j)return Gt(10,1,t,n,r)}function Et(t,n,r,e){if(j)return Gt(11,1,t,n,r,e)}function Rt(t,n,r,e){if(j)return Gt(12,1,t,n,r,e)}function Dt(t,n,r,e){if(j)return Gt(13,1,t,n,r,e)}function Ft(t){if(j)return Gt(14,1,t)}function Yt(t,n){if(j)return Gt(15,1,t,n)}function It(t,n,r){if(j)return Gt(16,1,t,n,r)}function Wt(t){Atomics.store(e(),t>>2,1),fn()&&yn(t),Atomics.compareExchange(e(),t>>2,1,0)}function Pt(t){return i()[t>>>2]+4294967296*e()[t+4>>>2]}function Ut(t,n,r,e,i,a){return j?Gt(17,1,t,n,r,e,i,a):-52}function Ht(t,n,r,e,i,a){if(j)return Gt(18,1,t,n,r,e,i,a)}function Vt(t){var r=G(t)+1,e=ln(r);return e&&q(t,n(),e,r),e}function qt(t,n,r){function a(t){return(t=t.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?t[1]:\"GMT\"}if(j)return Gt(19,1,t,n,r);var u=(new Date).getFullYear(),o=new Date(u,0,1),c=new Date(u,6,1);u=o.getTimezoneOffset();var f=c.getTimezoneOffset(),l=Math.max(u,f);e()[t>>2>>>0]=60*l,e()[n>>2>>>0]=Number(u!=f),t=a(o),n=a(c),t=Vt(t),n=Vt(n),f<u?(i()[r>>2>>>0]=t,i()[r+4>>2>>>0]=n):(i()[r>>2>>>0]=n,i()[r+4>>2>>>0]=t)}function Gt(t,n){var r=arguments.length-2,e=arguments;return function(t){var n=wn();return t=t(),jn(n),t}((()=>{for(var i=bn(8*r),u=i>>3,o=0;o<r;o++){var c=e[2+o];a()[u+o>>>0]=c}return pn(t,r,i,n)}))}u.executeNotifiedProxyingQueue=Wt,mt=w?()=>{var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:j?()=>performance.now()-u.__performance_now_clock_drift:()=>performance.now();var Bt,zt=[],Nt={};function Lt(){if(!Bt){var t,n={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:m||\"./this.program\"};for(t in Nt)void 0===Nt[t]?delete n[t]:n[t]=Nt[t];var r=[];for(t in n)r.push(t+\"=\"+n[t]);Bt=r}return Bt}function Xt(t,r){if(j)return Gt(20,1,t,r);var e=0;return Lt().forEach((function(a,u){var o=r+e;for(u=i()[t+4*u>>2>>>0]=o,o=0;o<a.length;++o)n()[u++>>0>>>0]=a.charCodeAt(o);n()[u>>0>>>0]=0,e+=a.length+1})),0}function Zt(t,n){if(j)return Gt(21,1,t,n);var r=Lt();i()[t>>2>>>0]=r.length;var e=0;return r.forEach((function(t){e+=t.length+1})),i()[n>>2>>>0]=e,0}function $t(t){return j?Gt(22,1,t):52}function Qt(t,n,r,e){return j?Gt(23,1,t,n,r,e):52}function Jt(t,n,r,e,i){return j?Gt(24,1,t,n,r,e,i):70}var Kt=[null,[],[]];function tn(t,n,e,a){if(j)return Gt(25,1,t,n,e,a);for(var u=0,o=0;o<e;o++){var c=i()[n>>2>>>0],f=i()[n+4>>2>>>0];n+=8;for(var l=0;l<f;l++){var s=r()[c+l>>>0],d=Kt[t];0===s||10===s?((1===t?M:S)(H(d,0)),d.length=0):d.push(s)}u+=f}return i()[a>>2>>>0]=u,0}var nn=0;function rn(t){return 0==t%4&&(0!=t%100||0==t%400)}var en=[31,29,31,30,31,30,31,31,30,31,30,31],an=[31,28,31,30,31,30,31,31,30,31,30,31];function un(t,r,i,a){function u(t,n,r){for(t=\"number\"==typeof t?t.toString():t||\"\";t.length<n;)t=r[0]+t;return t}function o(t,n){return u(t,n,\"0\")}function c(t,n){function r(t){return 0>t?-1:0<t?1:0}var e;return 0===(e=r(t.getFullYear()-n.getFullYear()))&&0===(e=r(t.getMonth()-n.getMonth()))&&(e=r(t.getDate()-n.getDate())),e}function f(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function l(t){var n=t.Zc;for(t=new Date(new Date(t.$c+1900,0,1).getTime());0<n;){var r=t.getMonth(),e=(rn(t.getFullYear())?en:an)[r];if(!(n>e-t.getDate())){t.setDate(t.getDate()+n);break}n-=e-t.getDate()+1,t.setDate(1),11>r?t.setMonth(r+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return r=new Date(t.getFullYear()+1,0,4),n=f(new Date(t.getFullYear(),0,4)),r=f(r),0>=c(n,t)?0>=c(r,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var s=e()[a+40>>2>>>0];for(var d in a={Od:e()[a>>2>>>0],Nd:e()[a+4>>2>>>0],hd:e()[a+8>>2>>>0],nd:e()[a+12>>2>>>0],jd:e()[a+16>>2>>>0],$c:e()[a+20>>2>>>0],Wc:e()[a+24>>2>>>0],Zc:e()[a+28>>2>>>0],Ud:e()[a+32>>2>>>0],Md:e()[a+36>>2>>>0],Pd:s?V(s):\"\"},i=V(i),s={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"})i=i.replace(new RegExp(d,\"g\"),s[d]);var h=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),p=\"January February March April May June July August September October November December\".split(\" \");for(d in s={\"%a\":function(t){return h[t.Wc].substring(0,3)},\"%A\":function(t){return h[t.Wc]},\"%b\":function(t){return p[t.jd].substring(0,3)},\"%B\":function(t){return p[t.jd]},\"%C\":function(t){return o((t.$c+1900)/100|0,2)},\"%d\":function(t){return o(t.nd,2)},\"%e\":function(t){return u(t.nd,2,\" \")},\"%g\":function(t){return l(t).toString().substring(2)},\"%G\":function(t){return l(t)},\"%H\":function(t){return o(t.hd,2)},\"%I\":function(t){return 0==(t=t.hd)?t=12:12<t&&(t-=12),o(t,2)},\"%j\":function(t){for(var n=0,r=0;r<=t.jd-1;n+=(rn(t.$c+1900)?en:an)[r++]);return o(t.nd+n,3)},\"%m\":function(t){return o(t.jd+1,2)},\"%M\":function(t){return o(t.Nd,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(t){return 0<=t.hd&&12>t.hd?\"AM\":\"PM\"},\"%S\":function(t){return o(t.Od,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(t){return t.Wc||7},\"%U\":function(t){return o(Math.floor((t.Zc+7-t.Wc)/7),2)},\"%V\":function(t){var n=Math.floor((t.Zc+7-(t.Wc+6)%7)/7);if(2>=(t.Wc+371-t.Zc-2)%7&&n++,n)53==n&&(4==(r=(t.Wc+371-t.Zc)%7)||3==r&&rn(t.$c)||(n=1));else{n=52;var r=(t.Wc+7-t.Zc-1)%7;(4==r||5==r&&rn(t.$c%400-1))&&n++}return o(n,2)},\"%w\":function(t){return t.Wc},\"%W\":function(t){return o(Math.floor((t.Zc+7-(t.Wc+6)%7)/7),2)},\"%y\":function(t){return(t.$c+1900).toString().substring(2)},\"%Y\":function(t){return t.$c+1900},\"%z\":function(t){var n=0<=(t=t.Md);return t=Math.abs(t)/60,(n?\"+\":\"-\")+String(\"0000\"+(t/60*100+t%60)).slice(-4)},\"%Z\":function(t){return t.Pd},\"%%\":function(){return\"%\"}},i=i.replace(/%%/g,\"\\0\\0\"),s)i.includes(d)&&(i=i.replace(new RegExp(d,\"g\"),s[d](a)));return d=function(t){var n=Array(G(t)+1);return q(t,n,0,n.length),n}(i=i.replace(/\\0\\0/g,\"%\")),d.length>r?0:(function(t,r){n().set(t,r>>>0)}(d,t),d.length-1)}lt.kd();var on=[null,ct,dt,bt,Ot,Tt,At,Mt,St,xt,kt,Et,Rt,Dt,Ft,Yt,It,Ut,Ht,qt,Xt,Zt,$t,Qt,Jt,tn],cn={k:function(t){return ln(t+24)+24},r:function(t){return(t=new wt(t)).td()||(t.ld(!0),_t--),t.md(!1),vt.push(t),t.ud(),t.wd()},ja:function(t){throw S(\"Unexpected exception thrown, this is not properly supported - aborting\"),P=!0,t},C:function(){_n(0);var t=vt.pop();if(t.Jd()&&!t.od()){var n=t.Fd();n&&pt(n)(t.dd),jt(t.dd)}gt=0},c:function(){var t=gt;if(!t)return nn=0;var n=new wt(t);n.cd(t);var r=n.bd();if(!r)return nn=0,t;for(var e=Array.prototype.slice.call(arguments),i=0;i<e.length;i++){var a=e[i];if(0===a||a===r)break;if(Cn(a,r,n.Vc+16))return nn=a,t}return nn=r,t},m:function(){var t=gt;if(!t)return nn=0;var n=new wt(t);n.cd(t);var r=n.bd();if(!r)return nn=0,t;for(var e=Array.prototype.slice.call(arguments),i=0;i<e.length;i++){var a=e[i];if(0===a||a===r)break;if(Cn(a,r,n.Vc+16))return nn=a,t}return nn=r,t},v:function(){var t=gt;if(!t)return nn=0;var n=new wt(t);n.cd(t);var r=n.bd();if(!r)return nn=0,t;for(var e=Array.prototype.slice.call(arguments),i=0;i<e.length;i++){var a=e[i];if(0===a||a===r)break;if(Cn(a,r,n.Vc+16))return nn=a,t}return nn=r,t},o:function(){var t=gt;if(!t)return nn=0;var n=new wt(t);n.cd(t);var r=n.bd();if(!r)return nn=0,t;for(var e=Array.prototype.slice.call(arguments),i=0;i<e.length;i++){var a=e[i];if(0===a||a===r)break;if(Cn(a,r,n.Vc+16))return nn=a,t}return nn=r,t},n:jt,U:function(){var t=vt.pop();t||nt(\"no exception to throw\");var n=t.dd;throw t.od()||(vt.push(t),t.md(!0),t.ld(!1),_t++),gt=n,n},w:function(t,n,r){throw new wt(t).kd(n,r),gt=t,_t++,t},ma:function(){return _t},Ga:function(t){dn(t,!g,1,!_),lt.rd()},aa:function(t){j?postMessage({cmd:\"cleanupThread\",thread:t}):ut(t)},xa:Ct,g:function(t){throw gt||(gt=t),t},V:Ot,Ma:Tt,ta:At,va:Mt,la:St,Ka:xt,Da:kt,Ja:Et,ca:Rt,ua:Dt,ra:Ft,La:Yt,sa:It,qb:function(){},X:function(){nt(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Bb:function(){nt(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},da:function(){return Date.now()},ya:function(){return 2097152},Oa:function(){return!0},za:function(t,n,r,e){if(t==n)setTimeout((()=>Wt(e)));else if(j)postMessage({targetThread:t,cmd:\"processProxyingQueue\",queue:e});else{if(!(t=lt.Yc[t]))return;t.postMessage({cmd:\"processProxyingQueue\",queue:e})}return 1},Fa:function(){return-1},Pa:function(t,n){t=new Date(1e3*Pt(t)),e()[n>>2>>>0]=t.getUTCSeconds(),e()[n+4>>2>>>0]=t.getUTCMinutes(),e()[n+8>>2>>>0]=t.getUTCHours(),e()[n+12>>2>>>0]=t.getUTCDate(),e()[n+16>>2>>>0]=t.getUTCMonth(),e()[n+20>>2>>>0]=t.getUTCFullYear()-1900,e()[n+24>>2>>>0]=t.getUTCDay(),t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,e()[n+28>>2>>>0]=t},Qa:function(t,n){t=new Date(1e3*Pt(t)),e()[n>>2>>>0]=t.getSeconds(),e()[n+4>>2>>>0]=t.getMinutes(),e()[n+8>>2>>>0]=t.getHours(),e()[n+12>>2>>>0]=t.getDate(),e()[n+16>>2>>>0]=t.getMonth(),e()[n+20>>2>>>0]=t.getFullYear()-1900,e()[n+24>>2>>>0]=t.getDay();var r=new Date(t.getFullYear(),0,1),i=(t.getTime()-r.getTime())/864e5|0;e()[n+28>>2>>>0]=i,e()[n+36>>2>>>0]=-60*t.getTimezoneOffset(),i=new Date(t.getFullYear(),6,1).getTimezoneOffset(),t=0|(i!=(r=r.getTimezoneOffset())&&t.getTimezoneOffset()==Math.min(r,i)),e()[n+32>>2>>>0]=t},Ra:function(t){var n=new Date(e()[t+20>>2>>>0]+1900,e()[t+16>>2>>>0],e()[t+12>>2>>>0],e()[t+8>>2>>>0],e()[t+4>>2>>>0],e()[t>>2>>>0],0),r=e()[t+32>>2>>>0],i=n.getTimezoneOffset(),a=new Date(n.getFullYear(),0,1),u=new Date(n.getFullYear(),6,1).getTimezoneOffset(),o=a.getTimezoneOffset(),c=Math.min(o,u);return 0>r?e()[t+32>>2>>>0]=Number(u!=o&&c==i):0<r!=(c==i)&&(u=Math.max(o,u),n.setTime(n.getTime()+6e4*((0<r?c:u)-i))),e()[t+24>>2>>>0]=n.getDay(),r=(n.getTime()-a.getTime())/864e5|0,e()[t+28>>2>>>0]=r,e()[t>>2>>>0]=n.getSeconds(),e()[t+4>>2>>>0]=n.getMinutes(),e()[t+8>>2>>>0]=n.getHours(),e()[t+12>>2>>>0]=n.getDate(),e()[t+16>>2>>>0]=n.getMonth(),n.getTime()/1e3|0},Ba:Ut,Ca:Ht,Xa:function t(n,r,e){t.Ad||(t.Ad=!0,qt(n,r,e))},R:function(){nt(\"\")},ba:function(){if(!w&&!g){var t=\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\";yt||(yt={}),yt[t]||(yt[t]=1,w&&(t=\"warning: \"+t),S(t))}},oa:function(){return 4294901760},F:mt,Aa:function(t,n,e){r().copyWithin(t>>>0,n>>>0,n+e>>>0)},pa:function(){return w?require(\"os\").cpus().length:navigator.hardwareConcurrency},Ea:function(t,n,r){zt.length=n,r>>=3;for(var e=0;e<n;e++)zt[e]=a()[r+e>>>0];return(0>t?it[-t-1]:on[t]).apply(null,zt)},na:function(t){var n=r().length;if((t>>>=0)<=n||4294901760<t)return!1;for(var e=1;4>=e;e*=2){var i=n*(1+.2/e);i=Math.min(i,t+100663296);var a=Math;i=Math.max(t,i),a=a.min.call(a,4294901760,i+(65536-i%65536)%65536);t:{try{k.grow(a-R.byteLength+65535>>>16),B(k.buffer);var u=1;break t}catch(t){}u=void 0}if(u)return!0}return!1},Na:function(){throw\"unwind\"},Ha:Xt,Ia:Zt,wa:ft,T:$t,$:Qt,Ab:Jt,qa:tn,b:function(){return nn},ea:function(t,n,r){var e=wn();try{return pt(t)(n,r)}catch(t){if(jn(e),t!==t+0)throw t;_n(1,0)}},E:function(t,n,r,e,i,a,u){var o=wn();try{return pt(t)(n,r,e,i,a,u)}catch(t){if(jn(o),t!==t+0)throw t;_n(1,0)}},y:function(t){var n=wn();try{return pt(t)()}catch(t){if(jn(n),t!==t+0)throw t;_n(1,0)}},d:function(t,n){var r=wn();try{return pt(t)(n)}catch(t){if(jn(r),t!==t+0)throw t;_n(1,0)}},W:function(t,n,r){var e=wn();try{return pt(t)(n,r)}catch(t){if(jn(e),t!==t+0)throw t;_n(1,0)}},S:function(t,n,r){var e=wn();try{return pt(t)(n,r)}catch(t){if(jn(e),t!==t+0)throw t;_n(1,0)}},l:function(t,n,r){var e=wn();try{return pt(t)(n,r)}catch(t){if(jn(e),t!==t+0)throw t;_n(1,0)}},h:function(t,n,r,e){var i=wn();try{return pt(t)(n,r,e)}catch(t){if(jn(i),t!==t+0)throw t;_n(1,0)}},j:function(t,n,r,e,i){var a=wn();try{return pt(t)(n,r,e,i)}catch(t){if(jn(a),t!==t+0)throw t;_n(1,0)}},p:function(t,n,r,e,i,a){var u=wn();try{return pt(t)(n,r,e,i,a)}catch(t){if(jn(u),t!==t+0)throw t;_n(1,0)}},z:function(t,n,r,e,i,a,u){var o=wn();try{return pt(t)(n,r,e,i,a,u)}catch(t){if(jn(o),t!==t+0)throw t;_n(1,0)}},M:function(t,n,r,e,i,a,u,o){var c=wn();try{return pt(t)(n,r,e,i,a,u,o)}catch(t){if(jn(c),t!==t+0)throw t;_n(1,0)}},_:function(t,n,r,e,i,a,u,o,c,f,l){var s=wn();try{return pt(t)(n,r,e,i,a,u,o,c,f,l)}catch(t){if(jn(s),t!==t+0)throw t;_n(1,0)}},O:function(t,n,r,e,i,a,u,o,c,f,l,s){var d=wn();try{return pt(t)(n,r,e,i,a,u,o,c,f,l,s)}catch(t){if(jn(d),t!==t+0)throw t;_n(1,0)}},wb:function(t,n,r,e,i,a,u){var o=wn();try{return Mn(t,n,r,e,i,a,u)}catch(t){if(jn(o),t!==t+0)throw t;_n(1,0)}},kb:function(t,n,r,e,i,a,u,o,c,f){var l=wn();try{return Un(t,n,r,e,i,a,u,o,c,f)}catch(t){if(jn(l),t!==t+0)throw t;_n(1,0)}},Sa:function(t,n,r,e,i){var a=wn();try{return tr(t,n,r,e,i)}catch(t){if(jn(a),t!==t+0)throw t;_n(1,0)}},jb:function(t,n,r,e,i,a,u,o,c){var f=wn();try{return Hn(t,n,r,e,i,a,u,o,c)}catch(t){if(jn(f),t!==t+0)throw t;_n(1,0)}},zb:function(t,n,r,e){var i=wn();try{return An(t,n,r,e)}catch(t){if(jn(i),t!==t+0)throw t;_n(1,0)}},Ta:function(t){var n=wn();try{return Tn(t)}catch(t){if(jn(n),t!==t+0)throw t;_n(1,0)}},Za:function(t,n,r){var e=wn();try{return er(t,n,r)}catch(t){if(jn(e),t!==t+0)throw t;_n(1,0)}},ub:function(t,n){var r=wn();try{return Rn(t,n)}catch(t){if(jn(r),t!==t+0)throw t;_n(1,0)}},tb:function(t,n,r){var e=wn();try{return xn(t,n,r)}catch(t){if(jn(e),t!==t+0)throw t;_n(1,0)}},ib:function(t,n,r,e){var i=wn();try{return Vn(t,n,r,e)}catch(t){if(jn(i),t!==t+0)throw t;_n(1,0)}},lb:function(t,n,r,e,i){var a=wn();try{return Pn(t,n,r,e,i)}catch(t){if(jn(a),t!==t+0)throw t;_n(1,0)}},e:function(t){var n=wn();try{pt(t)()}catch(t){if(jn(n),t!==t+0)throw t;_n(1,0)}},u:function(t,n){var r=wn();try{pt(t)(n)}catch(t){if(jn(r),t!==t+0)throw t;_n(1,0)}},i:function(t,n,r){var e=wn();try{pt(t)(n,r)}catch(t){if(jn(e),t!==t+0)throw t;_n(1,0)}},G:function(t,n,r,e,i){var a=wn();try{pt(t)(n,r,e,i)}catch(t){if(jn(a),t!==t+0)throw t;_n(1,0)}},f:function(t,n,r,e){var i=wn();try{pt(t)(n,r,e)}catch(t){if(jn(i),t!==t+0)throw t;_n(1,0)}},Z:function(t,n,r,e,i){var a=wn();try{pt(t)(n,r,e,i)}catch(t){if(jn(a),t!==t+0)throw t;_n(1,0)}},s:function(t,n,r,e,i){var a=wn();try{pt(t)(n,r,e,i)}catch(t){if(jn(a),t!==t+0)throw t;_n(1,0)}},q:function(t,n,r,e,i,a){var u=wn();try{pt(t)(n,r,e,i,a)}catch(t){if(jn(u),t!==t+0)throw t;_n(1,0)}},x:function(t,n,r,e,i,a,u){var o=wn();try{pt(t)(n,r,e,i,a,u)}catch(t){if(jn(o),t!==t+0)throw t;_n(1,0)}},I:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y){var m=wn();try{pt(t)(n,r,e,i,a,u,o,c,f,l,s,d,h,p,y)}catch(t){if(jn(m),t!==t+0)throw t;_n(1,0)}},P:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m){var v=wn();try{pt(t)(n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m)}catch(t){if(jn(v),t!==t+0)throw t;_n(1,0)}},H:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p){var y=wn();try{pt(t)(n,r,e,i,a,u,o,c,f,l,s,d,h,p)}catch(t){if(jn(y),t!==t+0)throw t;_n(1,0)}},A:function(t,n,r,e,i,a,u,o){var c=wn();try{pt(t)(n,r,e,i,a,u,o)}catch(t){if(jn(c),t!==t+0)throw t;_n(1,0)}},D:function(t,n,r,e,i,a,u,o,c){var f=wn();try{pt(t)(n,r,e,i,a,u,o,c)}catch(t){if(jn(f),t!==t+0)throw t;_n(1,0)}},J:function(t,n,r,e,i,a,u,o,c,f){var l=wn();try{pt(t)(n,r,e,i,a,u,o,c,f)}catch(t){if(jn(l),t!==t+0)throw t;_n(1,0)}},Y:function(t,n,r,e,i,a,u,o,c,f,l,s){var d=wn();try{pt(t)(n,r,e,i,a,u,o,c,f,l,s)}catch(t){if(jn(d),t!==t+0)throw t;_n(1,0)}},fa:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h){var p=wn();try{pt(t)(n,r,e,i,a,u,o,c,f,l,s,d,h)}catch(t){if(jn(p),t!==t+0)throw t;_n(1,0)}},L:function(t,n,r,e,i,a,u,o,c,f,l){var s=wn();try{pt(t)(n,r,e,i,a,u,o,c,f,l)}catch(t){if(jn(s),t!==t+0)throw t;_n(1,0)}},ga:function(t,n,r,e,i,a,u,o,c,f,l,s){var d=wn();try{pt(t)(n,r,e,i,a,u,o,c,f,l,s)}catch(t){if(jn(d),t!==t+0)throw t;_n(1,0)}},B:function(t,n,r,e,i,a,u,o,c,f,l,s,d){var h=wn();try{pt(t)(n,r,e,i,a,u,o,c,f,l,s,d)}catch(t){if(jn(h),t!==t+0)throw t;_n(1,0)}},Q:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h){var p=wn();try{pt(t)(n,r,e,i,a,u,o,c,f,l,s,d,h)}catch(t){if(jn(p),t!==t+0)throw t;_n(1,0)}},ha:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m){var v=wn();try{pt(t)(n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m)}catch(t){if(jn(v),t!==t+0)throw t;_n(1,0)}},N:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y){var m=wn();try{pt(t)(n,r,e,i,a,u,o,c,f,l,s,d,h,p,y)}catch(t){if(jn(m),t!==t+0)throw t;_n(1,0)}},mb:function(t,n,r,e,i,a,u,o,c,f,l,s,d){var h=wn();try{Wn(t,n,r,e,i,a,u,o,c,f,l,s,d)}catch(t){if(jn(h),t!==t+0)throw t;_n(1,0)}},vb:function(t,n,r,e,i,a,u){var o=wn();try{En(t,n,r,e,i,a,u)}catch(t){if(jn(o),t!==t+0)throw t;_n(1,0)}},nb:function(t,n,r,e,i,a){var u=wn();try{In(t,n,r,e,i,a)}catch(t){if(jn(u),t!==t+0)throw t;_n(1,0)}},pb:function(t,n,r,e,i,a,u){var o=wn();try{Fn(t,n,r,e,i,a,u)}catch(t){if(jn(o),t!==t+0)throw t;_n(1,0)}},xb:function(t,n,r,e,i,a,u,o){var c=wn();try{nr(t,n,r,e,i,a,u,o)}catch(t){if(jn(c),t!==t+0)throw t;_n(1,0)}},Ya:function(t,n,r,e,i,a,u,o,c,f){var l=wn();try{Jn(t,n,r,e,i,a,u,o,c,f)}catch(t){if(jn(l),t!==t+0)throw t;_n(1,0)}},Wa:function(t,n,r,e,i,a,u,o,c,f,l,s){var d=wn();try{Kn(t,n,r,e,i,a,u,o,c,f,l,s)}catch(t){if(jn(d),t!==t+0)throw t;_n(1,0)}},rb:function(t,n,r,e,i,a){var u=wn();try{kn(t,n,r,e,i,a)}catch(t){if(jn(u),t!==t+0)throw t;_n(1,0)}},Ua:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h){var p=wn();try{rr(t,n,r,e,i,a,u,o,c,f,l,s,d,h)}catch(t){if(jn(p),t!==t+0)throw t;_n(1,0)}},sb:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h){var p=wn();try{Dn(t,n,r,e,i,a,u,o,c,f,l,s,d,h)}catch(t){if(jn(p),t!==t+0)throw t;_n(1,0)}},yb:function(t,n,r,e){var i=wn();try{Sn(t,n,r,e)}catch(t){if(jn(i),t!==t+0)throw t;_n(1,0)}},Va:function(t,n,r,e,i){var a=wn();try{ir(t,n,r,e,i)}catch(t){if(jn(a),t!==t+0)throw t;_n(1,0)}},ob:function(t,n,r,e,i,a,u){var o=wn();try{Yn(t,n,r,e,i,a,u)}catch(t){if(jn(o),t!==t+0)throw t;_n(1,0)}},bb:function(t,n,r,e,i,a,u,o,c,f,l,s){var d=wn();try{Xn(t,n,r,e,i,a,u,o,c,f,l,s)}catch(t){if(jn(d),t!==t+0)throw t;_n(1,0)}},cb:function(t,n,r,e,i,a,u,o,c,f,l,s){var d=wn();try{Ln(t,n,r,e,i,a,u,o,c,f,l,s)}catch(t){if(jn(d),t!==t+0)throw t;_n(1,0)}},ab:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m,v,_,g,w){var j=wn();try{Zn(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m,v,_,g,w)}catch(t){if(jn(j),t!==t+0)throw t;_n(1,0)}},_a:function(t,n,r,e,i,a,u,o,c,f,l,s,d){var h=wn();try{Qn(t,n,r,e,i,a,u,o,c,f,l,s,d)}catch(t){if(jn(h),t!==t+0)throw t;_n(1,0)}},$a:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p){var y=wn();try{$n(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p)}catch(t){if(jn(y),t!==t+0)throw t;_n(1,0)}},eb:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m,v,_,g,w,j,b){var C=wn();try{zn(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m,v,_,g,w,j,b)}catch(t){if(jn(C),t!==t+0)throw t;_n(1,0)}},fb:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m,v,_,g,w,j,b,C,O){var T=wn();try{Bn(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m,v,_,g,w,j,b,C,O)}catch(t){if(jn(T),t!==t+0)throw t;_n(1,0)}},hb:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m,v,_,g,w,j,b,C){var O=wn();try{qn(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m,v,_,g,w,j,b,C)}catch(t){if(jn(O),t!==t+0)throw t;_n(1,0)}},db:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m,v,_,g,w,j,b,C,O,T,A,M){var S=wn();try{Nn(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m,v,_,g,w,j,b,C,O,T,A,M)}catch(t){if(jn(S),t!==t+0)throw t;_n(1,0)}},gb:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m,v,_,g,w,j,b,C,O,T,A,M,S){var x=wn();try{Gn(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m,v,_,g,w,j,b,C,O,T,A,M,S)}catch(t){if(jn(x),t!==t+0)throw t;_n(1,0)}},t:function(t){return t},a:k||u.wasmMemory,K:function(t){nn=t},ia:un,ka:function(t,n,r,e){return un(t,n,r,e)}};!function(){function t(t,n){u.asm=t.exports,lt.sd.push(u.asm._b),N=u.asm.cc,X.unshift(u.asm.Cb),E=n,j||(J--,u.monitorRunDependencies&&u.monitorRunDependencies(J),0==J&&(null!==K&&(clearInterval(K),K=null),tt&&(t=tt,tt=null,t())))}function n(n){t(n.instance,n.module)}function r(t){return function(){if(!A&&(_||g)){if(\"function\"==typeof fetch&&!Q.startsWith(\"file://\"))return fetch(Q,{credentials:\"same-origin\"}).then((function(t){if(!t.ok)throw\"failed to load wasm binary file at '\"+Q+\"'\";return t.arrayBuffer()})).catch((function(){return et()}));if(l)return new Promise((function(t,n){l(Q,(function(n){t(new Uint8Array(n))}),n)}))}return Promise.resolve().then((function(){return et()}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(t){return t})).then(t,(function(t){S(\"failed to asynchronously prepare wasm: \"+t),nt(t)}))}var e={a:cn};if(j||(J++,u.monitorRunDependencies&&u.monitorRunDependencies(J)),u.instantiateWasm)try{return u.instantiateWasm(e,t)}catch(t){return S(\"Module.instantiateWasm callback failed with error: \"+t),!1}(A||\"function\"!=typeof WebAssembly.instantiateStreaming||rt()||Q.startsWith(\"file://\")||w||\"function\"!=typeof fetch?r(n):fetch(Q,{credentials:\"same-origin\"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(t){return S(\"wasm streaming compile failed: \"+t),S(\"falling back to ArrayBuffer instantiation\"),r(n)}))}))).catch(c)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.Cb).apply(null,arguments)},u._OrtInit=function(){return(u._OrtInit=u.asm.Db).apply(null,arguments)},u._OrtCreateSessionOptions=function(){return(u._OrtCreateSessionOptions=u.asm.Eb).apply(null,arguments)},u._OrtAppendExecutionProvider=function(){return(u._OrtAppendExecutionProvider=u.asm.Fb).apply(null,arguments)},u._OrtAddSessionConfigEntry=function(){return(u._OrtAddSessionConfigEntry=u.asm.Gb).apply(null,arguments)},u._OrtReleaseSessionOptions=function(){return(u._OrtReleaseSessionOptions=u.asm.Hb).apply(null,arguments)},u._OrtCreateSession=function(){return(u._OrtCreateSession=u.asm.Ib).apply(null,arguments)},u._OrtReleaseSession=function(){return(u._OrtReleaseSession=u.asm.Jb).apply(null,arguments)},u._OrtGetInputCount=function(){return(u._OrtGetInputCount=u.asm.Kb).apply(null,arguments)},u._OrtGetOutputCount=function(){return(u._OrtGetOutputCount=u.asm.Lb).apply(null,arguments)},u._OrtGetInputName=function(){return(u._OrtGetInputName=u.asm.Mb).apply(null,arguments)},u._OrtGetOutputName=function(){return(u._OrtGetOutputName=u.asm.Nb).apply(null,arguments)},u._OrtFree=function(){return(u._OrtFree=u.asm.Ob).apply(null,arguments)},u._OrtCreateTensor=function(){return(u._OrtCreateTensor=u.asm.Pb).apply(null,arguments)},u._OrtGetTensorData=function(){return(u._OrtGetTensorData=u.asm.Qb).apply(null,arguments)},u._OrtReleaseTensor=function(){return(u._OrtReleaseTensor=u.asm.Rb).apply(null,arguments)},u._OrtCreateRunOptions=function(){return(u._OrtCreateRunOptions=u.asm.Sb).apply(null,arguments)},u._OrtAddRunConfigEntry=function(){return(u._OrtAddRunConfigEntry=u.asm.Tb).apply(null,arguments)},u._OrtReleaseRunOptions=function(){return(u._OrtReleaseRunOptions=u.asm.Ub).apply(null,arguments)},u._OrtRun=function(){return(u._OrtRun=u.asm.Vb).apply(null,arguments)},u._OrtEndProfiling=function(){return(u._OrtEndProfiling=u.asm.Wb).apply(null,arguments)};var fn=u._pthread_self=function(){return(fn=u._pthread_self=u.asm.Xb).apply(null,arguments)},ln=u._malloc=function(){return(ln=u._malloc=u.asm.Yb).apply(null,arguments)},sn=u._free=function(){return(sn=u._free=u.asm.Zb).apply(null,arguments)};u.__emscripten_tls_init=function(){return(u.__emscripten_tls_init=u.asm._b).apply(null,arguments)};var dn=u.__emscripten_thread_init=function(){return(dn=u.__emscripten_thread_init=u.asm.$b).apply(null,arguments)};u.__emscripten_thread_crashed=function(){return(u.__emscripten_thread_crashed=u.asm.ac).apply(null,arguments)};var hn,pn=u._emscripten_run_in_main_runtime_thread_js=function(){return(pn=u._emscripten_run_in_main_runtime_thread_js=u.asm.bc).apply(null,arguments)},yn=u.__emscripten_proxy_execute_task_queue=function(){return(yn=u.__emscripten_proxy_execute_task_queue=u.asm.dc).apply(null,arguments)},mn=u.__emscripten_thread_free_data=function(){return(mn=u.__emscripten_thread_free_data=u.asm.ec).apply(null,arguments)},vn=u.__emscripten_thread_exit=function(){return(vn=u.__emscripten_thread_exit=u.asm.fc).apply(null,arguments)},_n=u._setThrew=function(){return(_n=u._setThrew=u.asm.gc).apply(null,arguments)},gn=u._emscripten_stack_set_limits=function(){return(gn=u._emscripten_stack_set_limits=u.asm.hc).apply(null,arguments)},wn=u.stackSave=function(){return(wn=u.stackSave=u.asm.ic).apply(null,arguments)},jn=u.stackRestore=function(){return(jn=u.stackRestore=u.asm.jc).apply(null,arguments)},bn=u.stackAlloc=function(){return(bn=u.stackAlloc=u.asm.kc).apply(null,arguments)},Cn=u.___cxa_can_catch=function(){return(Cn=u.___cxa_can_catch=u.asm.lc).apply(null,arguments)},On=u.___cxa_is_pointer_type=function(){return(On=u.___cxa_is_pointer_type=u.asm.mc).apply(null,arguments)},Tn=u.dynCall_j=function(){return(Tn=u.dynCall_j=u.asm.nc).apply(null,arguments)},An=u.dynCall_iij=function(){return(An=u.dynCall_iij=u.asm.oc).apply(null,arguments)},Mn=u.dynCall_iiiiij=function(){return(Mn=u.dynCall_iiiiij=u.asm.pc).apply(null,arguments)},Sn=u.dynCall_vij=function(){return(Sn=u.dynCall_vij=u.asm.qc).apply(null,arguments)},xn=u.dynCall_jii=function(){return(xn=u.dynCall_jii=u.asm.rc).apply(null,arguments)},kn=u.dynCall_viiji=function(){return(kn=u.dynCall_viiji=u.asm.sc).apply(null,arguments)},En=u.dynCall_viiiij=function(){return(En=u.dynCall_viiiij=u.asm.tc).apply(null,arguments)},Rn=u.dynCall_ji=function(){return(Rn=u.dynCall_ji=u.asm.uc).apply(null,arguments)},Dn=u.dynCall_viijjjiiiii=function(){return(Dn=u.dynCall_viijjjiiiii=u.asm.vc).apply(null,arguments)},Fn=u.dynCall_viiiji=function(){return(Fn=u.dynCall_viiiji=u.asm.wc).apply(null,arguments)},Yn=u.dynCall_vijiii=function(){return(Yn=u.dynCall_vijiii=u.asm.xc).apply(null,arguments)},In=u.dynCall_viiij=function(){return(In=u.dynCall_viiij=u.asm.yc).apply(null,arguments)},Wn=u.dynCall_viiiiiiiiiji=function(){return(Wn=u.dynCall_viiiiiiiiiji=u.asm.zc).apply(null,arguments)},Pn=u.dynCall_jjj=function(){return(Pn=u.dynCall_jjj=u.asm.Ac).apply(null,arguments)},Un=u.dynCall_iiiijjj=function(){return(Un=u.dynCall_iiiijjj=u.asm.Bc).apply(null,arguments)},Hn=u.dynCall_iiijjj=function(){return(Hn=u.dynCall_iiijjj=u.asm.Cc).apply(null,arguments)},Vn=u.dynCall_jiii=function(){return(Vn=u.dynCall_jiii=u.asm.Dc).apply(null,arguments)},qn=u.dynCall_vjjjjjjffiifiiiiii=function(){return(qn=u.dynCall_vjjjjjjffiifiiiiii=u.asm.Ec).apply(null,arguments)},Gn=u.dynCall_vjjjjjjjjfffiifiiiiii=function(){return(Gn=u.dynCall_vjjjjjjjjfffiifiiiiii=u.asm.Fc).apply(null,arguments)},Bn=u.dynCall_vjjjjjjfffifiiiiiii=function(){return(Bn=u.dynCall_vjjjjjjfffifiiiiiii=u.asm.Gc).apply(null,arguments)},zn=u.dynCall_vjjjjjjfffifiiiii=function(){return(zn=u.dynCall_vjjjjjjfffifiiiii=u.asm.Hc).apply(null,arguments)},Nn=u.dynCall_vjjjjjjjjfffiifiiiii=function(){return(Nn=u.dynCall_vjjjjjjjjfffiifiiiii=u.asm.Ic).apply(null,arguments)},Ln=u.dynCall_vijjfffiii=function(){return(Ln=u.dynCall_vijjfffiii=u.asm.Jc).apply(null,arguments)},Xn=u.dynCall_vijiiiiiiii=function(){return(Xn=u.dynCall_vijiiiiiiii=u.asm.Kc).apply(null,arguments)},Zn=u.dynCall_vijjjjjjifiiiii=function(){return(Zn=u.dynCall_vijjjjjjifiiiii=u.asm.Lc).apply(null,arguments)},$n=u.dynCall_vjjjjjiiii=function(){return($n=u.dynCall_vjjjjjiiii=u.asm.Mc).apply(null,arguments)},Qn=u.dynCall_vjjjjfiii=function(){return(Qn=u.dynCall_vjjjjfiii=u.asm.Nc).apply(null,arguments)},Jn=u.dynCall_viiijiiii=function(){return(Jn=u.dynCall_viiijiiii=u.asm.Oc).apply(null,arguments)},Kn=u.dynCall_viiijjjii=function(){return(Kn=u.dynCall_viiijjjii=u.asm.Pc).apply(null,arguments)},tr=u.dynCall_iiij=function(){return(tr=u.dynCall_iiij=u.asm.Qc).apply(null,arguments)},nr=u.dynCall_viiijii=function(){return(nr=u.dynCall_viiijii=u.asm.Rc).apply(null,arguments)},rr=u.dynCall_viijiiiiiiiii=function(){return(rr=u.dynCall_viijiiiiiiiii=u.asm.Sc).apply(null,arguments)},er=u.dynCall_jfi=function(){return(er=u.dynCall_jfi=u.asm.Tc).apply(null,arguments)},ir=u.dynCall_viji=function(){return(ir=u.dynCall_viji=u.asm.Uc).apply(null,arguments)};function ar(){function t(){if(!hn&&(hn=!0,u.calledRun=!0,!P)&&(j||st(X),o(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),!j)){if(u.postRun)for(\"function\"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;){var t=u.postRun.shift();Z.unshift(t)}st(Z)}}if(!(0<J))if(j)o(u),j||st(X),postMessage({cmd:\"loaded\"});else{if(u.preRun)for(\"function\"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)$();st(L),0<J||(u.setStatus?(u.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){u.setStatus(\"\")}),1),t()}),1)):t())}}if(u.UTF8ToString=V,u.stringToUTF8=function(t,n,e){return q(t,r(),n,e)},u.lengthBytesUTF8=G,u.keepRuntimeAlive=function(){return x},u.wasmMemory=k,u.stackSave=wn,u.stackRestore=jn,u.stackAlloc=bn,u.ExitStatus=at,u.PThread=lt,tt=function t(){hn||ar(),hn||(tt=t)},u.preInit)for(\"function\"==typeof u.preInit&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();return ar(),t.ready});\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t:\"function\"==typeof define&&define.amd?define([],(function(){return t})):\"object\"==typeof exports&&(exports.ortWasmThreaded=t);\n","\nvar ortWasm = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(ortWasm) {\n  ortWasm = ortWasm || {};\n\n\nnull;var d;d||(d=typeof ortWasm !== 'undefined' ? ortWasm : {});var ba,ca;d.ready=new Promise(function(a,b){ba=a;ca=b});var da=Object.assign({},d),ea=\"./this.program\",fa=\"object\"==typeof window,q=\"function\"==typeof importScripts,ha=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,r=\"\",ia,ja,ka,fs,la,ma;\nif(ha)r=q?require(\"path\").dirname(r)+\"/\":__dirname+\"/\",ma=()=>{la||(fs=require(\"fs\"),la=require(\"path\"))},ia=function(a,b){ma();a=la.normalize(a);return fs.readFileSync(a,b?void 0:\"utf8\")},ka=a=>{a=ia(a,!0);a.buffer||(a=new Uint8Array(a));return a},ja=(a,b,c)=>{ma();a=la.normalize(a);fs.readFile(a,function(e,f){e?c(e):b(f.buffer)})},1<process.argv.length&&(ea=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",function(a){throw a;}),process.on(\"unhandledRejection\",\nfunction(a){throw a;}),d.inspect=function(){return\"[Emscripten Module object]\"};else if(fa||q)q?r=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(r=document.currentScript.src),_scriptDir&&(r=_scriptDir),0!==r.indexOf(\"blob:\")?r=r.substr(0,r.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):r=\"\",ia=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},q&&(ka=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),\nja=(a,b,c)=>{var e=new XMLHttpRequest;e.open(\"GET\",a,!0);e.responseType=\"arraybuffer\";e.onload=()=>{200==e.status||0==e.status&&e.response?b(e.response):c()};e.onerror=c;e.send(null)};var na=d.print||console.log.bind(console),t=d.printErr||console.warn.bind(console);Object.assign(d,da);da=null;d.thisProgram&&(ea=d.thisProgram);var y;d.wasmBinary&&(y=d.wasmBinary);var noExitRuntime=d.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&z(\"no native wasm support detected\");\nvar oa,pa=!1,qa=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction ra(a,b,c){b>>>=0;var e=b+c;for(c=b;a[c]&&!(c>=e);)++c;if(16<c-b&&a.buffer&&qa)return qa.decode(a.subarray(b,c));for(e=\"\";b<c;){var f=a[b++];if(f&128){var g=a[b++]&63;if(192==(f&224))e+=String.fromCharCode((f&31)<<6|g);else{var k=a[b++]&63;f=224==(f&240)?(f&15)<<12|g<<6|k:(f&7)<<18|g<<12|k<<6|a[b++]&63;65536>f?e+=String.fromCharCode(f):(f-=65536,e+=String.fromCharCode(55296|f>>10,56320|f&1023))}}else e+=String.fromCharCode(f)}return e}function sa(a,b){return(a>>>=0)?ra(C,a,b):\"\"}\nfunction ta(a,b,c,e){c>>>=0;if(!(0<e))return 0;var f=c;e=c+e-1;for(var g=0;g<a.length;++g){var k=a.charCodeAt(g);if(55296<=k&&57343>=k){var l=a.charCodeAt(++g);k=65536+((k&1023)<<10)|l&1023}if(127>=k){if(c>=e)break;b[c++>>>0]=k}else{if(2047>=k){if(c+1>=e)break;b[c++>>>0]=192|k>>6}else{if(65535>=k){if(c+2>=e)break;b[c++>>>0]=224|k>>12}else{if(c+3>=e)break;b[c++>>>0]=240|k>>18;b[c++>>>0]=128|k>>12&63}b[c++>>>0]=128|k>>6&63}b[c++>>>0]=128|k&63}}b[c>>>0]=0;return c-f}\nfunction ua(a){for(var b=0,c=0;c<a.length;++c){var e=a.charCodeAt(c);127>=e?b++:2047>=e?b+=2:55296<=e&&57343>=e?(b+=4,++c):b+=3}return b}var va,D,C,G,H;function wa(){var a=oa.buffer;va=a;d.HEAP8=D=new Int8Array(a);d.HEAP16=new Int16Array(a);d.HEAP32=G=new Int32Array(a);d.HEAPU8=C=new Uint8Array(a);d.HEAPU16=new Uint16Array(a);d.HEAPU32=H=new Uint32Array(a);d.HEAPF32=new Float32Array(a);d.HEAPF64=new Float64Array(a)}var xa,ya=[],za=[],Da=[];function Ea(){var a=d.preRun.shift();ya.unshift(a)}\nvar M=0,Fa=null,N=null;function z(a){if(d.onAbort)d.onAbort(a);a=\"Aborted(\"+a+\")\";t(a);pa=!0;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");ca(a);throw a;}function Ga(){return Q.startsWith(\"data:application/octet-stream;base64,\")}var Q;Q=\"ort-wasm.wasm\";if(!Ga()){var Ha=Q;Q=d.locateFile?d.locateFile(Ha,r):r+Ha}function Ia(){var a=Q;try{if(a==Q&&y)return new Uint8Array(y);if(ka)return ka(a);throw\"both async and sync fetching of the wasm failed\";}catch(b){z(b)}}\nfunction Ja(){if(!y&&(fa||q)){if(\"function\"==typeof fetch&&!Q.startsWith(\"file://\"))return fetch(Q,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+Q+\"'\";return a.arrayBuffer()}).catch(function(){return Ia()});if(ja)return new Promise(function(a,b){ja(Q,function(c){a(new Uint8Array(c))},b)})}return Promise.resolve().then(function(){return Ia()})}function Ka(a){for(;0<a.length;)a.shift()(d)}var La=[],Ma=0,R=0;\nfunction S(a){this.Ic=a;this.Cc=a-24;this.Wc=function(b){H[this.Cc+4>>2>>>0]=b};this.Gc=function(){return H[this.Cc+4>>2>>>0]};this.Uc=function(b){H[this.Cc+8>>2>>>0]=b};this.Yc=function(){return H[this.Cc+8>>2>>>0]};this.Vc=function(){G[this.Cc>>2>>>0]=0};this.Lc=function(b){D[this.Cc+12>>0>>>0]=b?1:0};this.Rc=function(){return 0!=D[this.Cc+12>>0>>>0]};this.Mc=function(b){D[this.Cc+13>>0>>>0]=b?1:0};this.Oc=function(){return 0!=D[this.Cc+13>>0>>>0]};this.Tc=function(b,c){this.Hc(0);this.Wc(b);this.Uc(c);\nthis.Vc();this.Lc(!1);this.Mc(!1)};this.Pc=function(){G[this.Cc>>2>>>0]+=1};this.Zc=function(){var b=G[this.Cc>>2>>>0];G[this.Cc>>2>>>0]=b-1;return 1===b};this.Hc=function(b){H[this.Cc+16>>2>>>0]=b};this.Qc=function(){return H[this.Cc+16>>2>>>0]};this.Sc=function(){if(Na(this.Gc()))return H[this.Ic>>2>>>0];var b=this.Qc();return 0!==b?b:this.Ic}}function Oa(a){return Pa((new S(a)).Cc)}var Qa=[];function T(a){var b=Qa[a];b||(a>=Qa.length&&(Qa.length=a+1),Qa[a]=b=xa.get(a));return b}\nfunction Ra(a){var b=ua(a)+1,c=Sa(b);c&&ta(a,D,c,b);return c}function Ta(a,b,c){function e(m){return(m=m.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?m[1]:\"GMT\"}var f=(new Date).getFullYear(),g=new Date(f,0,1),k=new Date(f,6,1);f=g.getTimezoneOffset();var l=k.getTimezoneOffset();G[a>>2>>>0]=60*Math.max(f,l);G[b>>2>>>0]=Number(f!=l);a=e(g);b=e(k);a=Ra(a);b=Ra(b);l<f?(H[c>>2>>>0]=a,H[c+4>>2>>>0]=b):(H[c>>2>>>0]=b,H[c+4>>2>>>0]=a)}function Ua(a,b,c){Ua.Xc||(Ua.Xc=!0,Ta(a,b,c))}var Va={};\nfunction Wa(){if(!Xa){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ea||\"./this.program\"},b;for(b in Va)void 0===Va[b]?delete a[b]:a[b]=Va[b];var c=[];for(b in a)c.push(b+\"=\"+a[b]);Xa=c}return Xa}var Xa,Ya=[null,[],[]],V=0;function Za(a){return 0===a%4&&(0!==a%100||0===a%400)}\nvar $a=[31,29,31,30,31,30,31,31,30,31,30,31],ab=[31,28,31,30,31,30,31,31,30,31,30,31];function bb(a){var b=Array(ua(a)+1);ta(a,b,0,b.length);return b}\nfunction cb(a,b,c,e){function f(h,u,w){for(h=\"number\"==typeof h?h.toString():h||\"\";h.length<u;)h=w[0]+h;return h}function g(h,u){return f(h,u,\"0\")}function k(h,u){function w(B){return 0>B?-1:0<B?1:0}var A;0===(A=w(h.getFullYear()-u.getFullYear()))&&0===(A=w(h.getMonth()-u.getMonth()))&&(A=w(h.getDate()-u.getDate()));return A}function l(h){switch(h.getDay()){case 0:return new Date(h.getFullYear()-1,11,29);case 1:return h;case 2:return new Date(h.getFullYear(),0,3);case 3:return new Date(h.getFullYear(),\n0,2);case 4:return new Date(h.getFullYear(),0,1);case 5:return new Date(h.getFullYear()-1,11,31);case 6:return new Date(h.getFullYear()-1,11,30)}}function m(h){var u=h.Ec;for(h=new Date((new Date(h.Fc+1900,0,1)).getTime());0<u;){var w=h.getMonth(),A=(Za(h.getFullYear())?$a:ab)[w];if(u>A-h.getDate())u-=A-h.getDate()+1,h.setDate(1),11>w?h.setMonth(w+1):(h.setMonth(0),h.setFullYear(h.getFullYear()+1));else{h.setDate(h.getDate()+u);break}}w=new Date(h.getFullYear()+1,0,4);u=l(new Date(h.getFullYear(),\n0,4));w=l(w);return 0>=k(u,h)?0>=k(w,h)?h.getFullYear()+1:h.getFullYear():h.getFullYear()-1}var n=G[e+40>>2>>>0];e={bd:G[e>>2>>>0],ad:G[e+4>>2>>>0],Jc:G[e+8>>2>>>0],Nc:G[e+12>>2>>>0],Kc:G[e+16>>2>>>0],Fc:G[e+20>>2>>>0],Dc:G[e+24>>2>>>0],Ec:G[e+28>>2>>>0],dd:G[e+32>>2>>>0],$c:G[e+36>>2>>>0],cd:n?sa(n):\"\"};c=sa(c);n={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\n\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var p in n)c=c.replace(new RegExp(p,\"g\"),n[p]);var v=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),x=\"January February March April May June July August September October November December\".split(\" \");n={\"%a\":function(h){return v[h.Dc].substring(0,3)},\"%A\":function(h){return v[h.Dc]},\"%b\":function(h){return x[h.Kc].substring(0,\n3)},\"%B\":function(h){return x[h.Kc]},\"%C\":function(h){return g((h.Fc+1900)/100|0,2)},\"%d\":function(h){return g(h.Nc,2)},\"%e\":function(h){return f(h.Nc,2,\" \")},\"%g\":function(h){return m(h).toString().substring(2)},\"%G\":function(h){return m(h)},\"%H\":function(h){return g(h.Jc,2)},\"%I\":function(h){h=h.Jc;0==h?h=12:12<h&&(h-=12);return g(h,2)},\"%j\":function(h){for(var u=0,w=0;w<=h.Kc-1;u+=(Za(h.Fc+1900)?$a:ab)[w++]);return g(h.Nc+u,3)},\"%m\":function(h){return g(h.Kc+1,2)},\"%M\":function(h){return g(h.ad,\n2)},\"%n\":function(){return\"\\n\"},\"%p\":function(h){return 0<=h.Jc&&12>h.Jc?\"AM\":\"PM\"},\"%S\":function(h){return g(h.bd,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(h){return h.Dc||7},\"%U\":function(h){return g(Math.floor((h.Ec+7-h.Dc)/7),2)},\"%V\":function(h){var u=Math.floor((h.Ec+7-(h.Dc+6)%7)/7);2>=(h.Dc+371-h.Ec-2)%7&&u++;if(u)53==u&&(w=(h.Dc+371-h.Ec)%7,4==w||3==w&&Za(h.Fc)||(u=1));else{u=52;var w=(h.Dc+7-h.Ec-1)%7;(4==w||5==w&&Za(h.Fc%400-1))&&u++}return g(u,2)},\"%w\":function(h){return h.Dc},\"%W\":function(h){return g(Math.floor((h.Ec+\n7-(h.Dc+6)%7)/7),2)},\"%y\":function(h){return(h.Fc+1900).toString().substring(2)},\"%Y\":function(h){return h.Fc+1900},\"%z\":function(h){h=h.$c;var u=0<=h;h=Math.abs(h)/60;return(u?\"+\":\"-\")+String(\"0000\"+(h/60*100+h%60)).slice(-4)},\"%Z\":function(h){return h.cd},\"%%\":function(){return\"%\"}};c=c.replace(/%%/g,\"\\x00\\x00\");for(p in n)c.includes(p)&&(c=c.replace(new RegExp(p,\"g\"),n[p](e)));c=c.replace(/\\0\\0/g,\"%\");p=bb(c);if(p.length>b)return 0;D.set(p,a>>>0);return p.length-1}\nvar vc={j:function(a){return Sa(a+24)+24},p:function(a){a=new S(a);a.Rc()||(a.Lc(!0),Ma--);a.Mc(!1);La.push(a);a.Pc();return a.Sc()},sa:function(a){t(\"Unexpected exception thrown, this is not properly supported - aborting\");pa=!0;throw a;},B:function(){W(0);var a=La.pop();if(a.Zc()&&!a.Oc()){var b=a.Yc();b&&T(b)(a.Ic);Oa(a.Ic)}R=0},b:function(){var a=R;if(!a)return V=0;var b=new S(a);b.Hc(a);var c=b.Gc();if(!c)return V=0,a;for(var e=Array.prototype.slice.call(arguments),f=0;f<e.length;f++){var g=\ne[f];if(0===g||g===c)break;if(X(g,c,b.Cc+16))return V=g,a}V=c;return a},l:function(){var a=R;if(!a)return V=0;var b=new S(a);b.Hc(a);var c=b.Gc();if(!c)return V=0,a;for(var e=Array.prototype.slice.call(arguments),f=0;f<e.length;f++){var g=e[f];if(0===g||g===c)break;if(X(g,c,b.Cc+16))return V=g,a}V=c;return a},v:function(){var a=R;if(!a)return V=0;var b=new S(a);b.Hc(a);var c=b.Gc();if(!c)return V=0,a;for(var e=Array.prototype.slice.call(arguments),f=0;f<e.length;f++){var g=e[f];if(0===g||g===c)break;\nif(X(g,c,b.Cc+16))return V=g,a}V=c;return a},n:function(){var a=R;if(!a)return V=0;var b=new S(a);b.Hc(a);var c=b.Gc();if(!c)return V=0,a;for(var e=Array.prototype.slice.call(arguments),f=0;f<e.length;f++){var g=e[f];if(0===g||g===c)break;if(X(g,c,b.Cc+16))return V=g,a}V=c;return a},m:Oa,S:function(){var a=La.pop();a||z(\"no exception to throw\");var b=a.Ic;a.Oc()||(La.push(a),a.Mc(!0),a.Lc(!1),Ma++);R=b;throw b;},w:function(a,b,c){(new S(a)).Tc(b,c);R=a;Ma++;throw a;},va:function(){return Ma},f:function(a){R||\n(R=a);throw a;},U:function(){return 0},Ma:function(){},Aa:function(){},Ca:function(){},ua:function(){return 0},Ka:function(){},Ga:function(){},Ja:function(){},$:function(){},Ba:function(){},ya:function(){},La:function(){},za:function(){},eb:function(){},la:function(){z(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},pb:function(){z(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},\naa:function(){return Date.now()},Na:function(){return!0},Oa:function(a,b){a=new Date(1E3*(H[a>>>2]+4294967296*G[a+4>>>2]));G[b>>2>>>0]=a.getUTCSeconds();G[b+4>>2>>>0]=a.getUTCMinutes();G[b+8>>2>>>0]=a.getUTCHours();G[b+12>>2>>>0]=a.getUTCDate();G[b+16>>2>>>0]=a.getUTCMonth();G[b+20>>2>>>0]=a.getUTCFullYear()-1900;G[b+24>>2>>>0]=a.getUTCDay();G[b+28>>2>>>0]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0},Pa:function(a,b){a=new Date(1E3*(H[a>>>2]+4294967296*G[a+4>>>2]));G[b>>2>>>0]=\na.getSeconds();G[b+4>>2>>>0]=a.getMinutes();G[b+8>>2>>>0]=a.getHours();G[b+12>>2>>>0]=a.getDate();G[b+16>>2>>>0]=a.getMonth();G[b+20>>2>>>0]=a.getFullYear()-1900;G[b+24>>2>>>0]=a.getDay();var c=new Date(a.getFullYear(),0,1);G[b+28>>2>>>0]=(a.getTime()-c.getTime())/864E5|0;G[b+36>>2>>>0]=-(60*a.getTimezoneOffset());var e=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();c=c.getTimezoneOffset();G[b+32>>2>>>0]=(e!=c&&a.getTimezoneOffset()==Math.min(c,e))|0},Qa:function(a){var b=new Date(G[a+20>>2>>>\n0]+1900,G[a+16>>2>>>0],G[a+12>>2>>>0],G[a+8>>2>>>0],G[a+4>>2>>>0],G[a>>2>>>0],0),c=G[a+32>>2>>>0],e=b.getTimezoneOffset(),f=new Date(b.getFullYear(),0,1),g=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),k=f.getTimezoneOffset(),l=Math.min(k,g);0>c?G[a+32>>2>>>0]=Number(g!=k&&l==e):0<c!=(l==e)&&(g=Math.max(k,g),b.setTime(b.getTime()+6E4*((0<c?l:g)-e)));G[a+24>>2>>>0]=b.getDay();G[a+28>>2>>>0]=(b.getTime()-f.getTime())/864E5|0;G[a>>2>>>0]=b.getSeconds();G[a+4>>2>>>0]=b.getMinutes();G[a+8>>2>>>0]=\nb.getHours();G[a+12>>2>>>0]=b.getDate();G[a+16>>2>>>0]=b.getMonth();return b.getTime()/1E3|0},Ea:function(){return-52},Fa:function(){},Va:Ua,P:function(){z(\"\")},wa:function(){return 4294901760},V:ha?()=>{var a=process.hrtime();return 1E3*a[0]+a[1]/1E6}:()=>performance.now(),Da:function(a,b,c){C.copyWithin(a>>>0,b>>>0,b+c>>>0)},T:function(a){var b=C.length;a>>>=0;if(4294901760<a)return!1;for(var c=1;4>=c;c*=2){var e=b*(1+.2/c);e=Math.min(e,a+100663296);var f=Math;e=Math.max(a,e);f=f.min.call(f,4294901760,\ne+(65536-e%65536)%65536);a:{try{oa.grow(f-va.byteLength+65535>>>16);wa();var g=1;break a}catch(k){}g=void 0}if(g)return!0}return!1},Ha:function(a,b){var c=0;Wa().forEach(function(e,f){var g=b+c;f=H[a+4*f>>2>>>0]=g;for(g=0;g<e.length;++g)D[f++>>0>>>0]=e.charCodeAt(g);D[f>>0>>>0]=0;c+=e.length+1});return 0},Ia:function(a,b){var c=Wa();H[a>>2>>>0]=c.length;var e=0;c.forEach(function(f){e+=f.length+1});H[b>>2>>>0]=e;return 0},R:function(){return 52},_:function(){return 52},na:function(){return 70},xa:function(a,\nb,c,e){for(var f=0,g=0;g<c;g++){var k=H[b>>2>>>0],l=H[b+4>>2>>>0];b+=8;for(var m=0;m<l;m++){var n=C[k+m>>>0],p=Ya[a];0===n||10===n?((1===a?na:t)(ra(p,0)),p.length=0):p.push(n)}f+=l}H[e>>2>>>0]=f;return 0},a:function(){return V},oa:db,C:eb,x:fb,c:gb,W:hb,Q:ib,k:jb,g:kb,i:lb,o:mb,y:nb,K:ob,Z:pb,M:qb,ia:rb,kb:sb,Ra:tb,jb:ub,ma:vb,Sa:wb,Ya:xb,fa:yb,ea:zb,ib:Ab,lb:Bb,d:Cb,t:Db,h:Eb,E:Fb,e:Gb,Y:Hb,s:Ib,u:Jb,q:Kb,G:Lb,N:Mb,F:Nb,z:Ob,D:Pb,H:Qb,X:Rb,pa:Sb,J:Tb,qa:Ub,A:Vb,O:Wb,L:Xb,mb:Yb,ga:Zb,ha:$b,nb:ac,\nba:bc,ja:cc,Xa:dc,Wa:ec,ca:fc,Ta:gc,da:hc,ka:ic,Ua:jc,ob:kc,ab:lc,bb:mc,$a:nc,Za:oc,_a:pc,db:qc,fb:rc,hb:sc,cb:tc,gb:uc,r:function(a){return a},I:function(a){V=a},ra:cb,ta:function(a,b,c,e){return cb(a,b,c,e)}};\n(function(){function a(f){d.asm=f.exports;oa=d.asm.qb;wa();xa=d.asm.Ob;za.unshift(d.asm.rb);M--;d.monitorRunDependencies&&d.monitorRunDependencies(M);0==M&&(null!==Fa&&(clearInterval(Fa),Fa=null),N&&(f=N,N=null,f()))}function b(f){a(f.instance)}function c(f){return Ja().then(function(g){return WebAssembly.instantiate(g,e)}).then(function(g){return g}).then(f,function(g){t(\"failed to asynchronously prepare wasm: \"+g);z(g)})}var e={a:vc};M++;d.monitorRunDependencies&&d.monitorRunDependencies(M);if(d.instantiateWasm)try{return d.instantiateWasm(e,\na)}catch(f){return t(\"Module.instantiateWasm callback failed with error: \"+f),!1}(function(){return y||\"function\"!=typeof WebAssembly.instantiateStreaming||Ga()||Q.startsWith(\"file://\")||ha||\"function\"!=typeof fetch?c(b):fetch(Q,{credentials:\"same-origin\"}).then(function(f){return WebAssembly.instantiateStreaming(f,e).then(b,function(g){t(\"wasm streaming compile failed: \"+g);t(\"falling back to ArrayBuffer instantiation\");return c(b)})})})().catch(ca);return{}})();\nd.___wasm_call_ctors=function(){return(d.___wasm_call_ctors=d.asm.rb).apply(null,arguments)};d._OrtInit=function(){return(d._OrtInit=d.asm.sb).apply(null,arguments)};d._OrtCreateSessionOptions=function(){return(d._OrtCreateSessionOptions=d.asm.tb).apply(null,arguments)};d._OrtAppendExecutionProvider=function(){return(d._OrtAppendExecutionProvider=d.asm.ub).apply(null,arguments)};d._OrtAddSessionConfigEntry=function(){return(d._OrtAddSessionConfigEntry=d.asm.vb).apply(null,arguments)};\nd._OrtReleaseSessionOptions=function(){return(d._OrtReleaseSessionOptions=d.asm.wb).apply(null,arguments)};d._OrtCreateSession=function(){return(d._OrtCreateSession=d.asm.xb).apply(null,arguments)};d._OrtReleaseSession=function(){return(d._OrtReleaseSession=d.asm.yb).apply(null,arguments)};d._OrtGetInputCount=function(){return(d._OrtGetInputCount=d.asm.zb).apply(null,arguments)};d._OrtGetOutputCount=function(){return(d._OrtGetOutputCount=d.asm.Ab).apply(null,arguments)};\nd._OrtGetInputName=function(){return(d._OrtGetInputName=d.asm.Bb).apply(null,arguments)};d._OrtGetOutputName=function(){return(d._OrtGetOutputName=d.asm.Cb).apply(null,arguments)};d._OrtFree=function(){return(d._OrtFree=d.asm.Db).apply(null,arguments)};d._OrtCreateTensor=function(){return(d._OrtCreateTensor=d.asm.Eb).apply(null,arguments)};d._OrtGetTensorData=function(){return(d._OrtGetTensorData=d.asm.Fb).apply(null,arguments)};\nd._OrtReleaseTensor=function(){return(d._OrtReleaseTensor=d.asm.Gb).apply(null,arguments)};d._OrtCreateRunOptions=function(){return(d._OrtCreateRunOptions=d.asm.Hb).apply(null,arguments)};d._OrtAddRunConfigEntry=function(){return(d._OrtAddRunConfigEntry=d.asm.Ib).apply(null,arguments)};d._OrtReleaseRunOptions=function(){return(d._OrtReleaseRunOptions=d.asm.Jb).apply(null,arguments)};d._OrtRun=function(){return(d._OrtRun=d.asm.Kb).apply(null,arguments)};\nd._OrtEndProfiling=function(){return(d._OrtEndProfiling=d.asm.Lb).apply(null,arguments)};\nvar Sa=d._malloc=function(){return(Sa=d._malloc=d.asm.Mb).apply(null,arguments)},Pa=d._free=function(){return(Pa=d._free=d.asm.Nb).apply(null,arguments)},W=d._setThrew=function(){return(W=d._setThrew=d.asm.Pb).apply(null,arguments)},Y=d.stackSave=function(){return(Y=d.stackSave=d.asm.Qb).apply(null,arguments)},Z=d.stackRestore=function(){return(Z=d.stackRestore=d.asm.Rb).apply(null,arguments)},wc=d.stackAlloc=function(){return(wc=d.stackAlloc=d.asm.Sb).apply(null,arguments)},X=d.___cxa_can_catch=\nfunction(){return(X=d.___cxa_can_catch=d.asm.Tb).apply(null,arguments)},Na=d.___cxa_is_pointer_type=function(){return(Na=d.___cxa_is_pointer_type=d.asm.Ub).apply(null,arguments)},xc=d.dynCall_j=function(){return(xc=d.dynCall_j=d.asm.Vb).apply(null,arguments)},yc=d.dynCall_iij=function(){return(yc=d.dynCall_iij=d.asm.Wb).apply(null,arguments)},zc=d.dynCall_iiiiij=function(){return(zc=d.dynCall_iiiiij=d.asm.Xb).apply(null,arguments)},Ac=d.dynCall_vij=function(){return(Ac=d.dynCall_vij=d.asm.Yb).apply(null,\narguments)},Bc=d.dynCall_jii=function(){return(Bc=d.dynCall_jii=d.asm.Zb).apply(null,arguments)},Cc=d.dynCall_viiji=function(){return(Cc=d.dynCall_viiji=d.asm._b).apply(null,arguments)},Dc=d.dynCall_viiiij=function(){return(Dc=d.dynCall_viiiij=d.asm.$b).apply(null,arguments)},Ec=d.dynCall_viiiiij=function(){return(Ec=d.dynCall_viiiiij=d.asm.ac).apply(null,arguments)},Fc=d.dynCall_ji=function(){return(Fc=d.dynCall_ji=d.asm.bc).apply(null,arguments)},Gc=d.dynCall_viijjjiiiii=function(){return(Gc=d.dynCall_viijjjiiiii=\nd.asm.cc).apply(null,arguments)},Hc=d.dynCall_viiiji=function(){return(Hc=d.dynCall_viiiji=d.asm.dc).apply(null,arguments)},Ic=d.dynCall_vijiii=function(){return(Ic=d.dynCall_vijiii=d.asm.ec).apply(null,arguments)},Jc=d.dynCall_viiij=function(){return(Jc=d.dynCall_viiij=d.asm.fc).apply(null,arguments)},Kc=d.dynCall_viiiiiiiiiji=function(){return(Kc=d.dynCall_viiiiiiiiiji=d.asm.gc).apply(null,arguments)},Lc=d.dynCall_jjj=function(){return(Lc=d.dynCall_jjj=d.asm.hc).apply(null,arguments)},Mc=d.dynCall_iiiijjj=\nfunction(){return(Mc=d.dynCall_iiiijjj=d.asm.ic).apply(null,arguments)},Nc=d.dynCall_iiijjj=function(){return(Nc=d.dynCall_iiijjj=d.asm.jc).apply(null,arguments)},Oc=d.dynCall_jiii=function(){return(Oc=d.dynCall_jiii=d.asm.kc).apply(null,arguments)},Pc=d.dynCall_vjjjjjjffiifiiiiii=function(){return(Pc=d.dynCall_vjjjjjjffiifiiiiii=d.asm.lc).apply(null,arguments)},Qc=d.dynCall_vjjjjjjjjfffiifiiiiii=function(){return(Qc=d.dynCall_vjjjjjjjjfffiifiiiiii=d.asm.mc).apply(null,arguments)},Rc=d.dynCall_vjjjjjjfffifiiiiiii=\nfunction(){return(Rc=d.dynCall_vjjjjjjfffifiiiiiii=d.asm.nc).apply(null,arguments)},Sc=d.dynCall_vjjjjjjfffifiiiii=function(){return(Sc=d.dynCall_vjjjjjjfffifiiiii=d.asm.oc).apply(null,arguments)},Tc=d.dynCall_vjjjjjjjjfffiifiiiii=function(){return(Tc=d.dynCall_vjjjjjjjjfffiifiiiii=d.asm.pc).apply(null,arguments)},Uc=d.dynCall_vijjfffiii=function(){return(Uc=d.dynCall_vijjfffiii=d.asm.qc).apply(null,arguments)},Vc=d.dynCall_vijiiiiiiii=function(){return(Vc=d.dynCall_vijiiiiiiii=d.asm.rc).apply(null,\narguments)},Wc=d.dynCall_vijjjjjjifiiiii=function(){return(Wc=d.dynCall_vijjjjjjifiiiii=d.asm.sc).apply(null,arguments)},Xc=d.dynCall_vjjjjjiiii=function(){return(Xc=d.dynCall_vjjjjjiiii=d.asm.tc).apply(null,arguments)},Yc=d.dynCall_vjjjjfiii=function(){return(Yc=d.dynCall_vjjjjfiii=d.asm.uc).apply(null,arguments)},Zc=d.dynCall_viiijiiii=function(){return(Zc=d.dynCall_viiijiiii=d.asm.vc).apply(null,arguments)},$c=d.dynCall_viiijjjii=function(){return($c=d.dynCall_viiijjjii=d.asm.wc).apply(null,arguments)},\nad=d.dynCall_iiij=function(){return(ad=d.dynCall_iiij=d.asm.xc).apply(null,arguments)},bd=d.dynCall_viiijii=function(){return(bd=d.dynCall_viiijii=d.asm.yc).apply(null,arguments)},cd=d.dynCall_viijiiiiiiiii=function(){return(cd=d.dynCall_viijiiiiiiiii=d.asm.zc).apply(null,arguments)},dd=d.dynCall_jfi=function(){return(dd=d.dynCall_jfi=d.asm.Ac).apply(null,arguments)},ed=d.dynCall_viji=function(){return(ed=d.dynCall_viji=d.asm.Bc).apply(null,arguments)};\nfunction gb(a,b){var c=Y();try{return T(a)(b)}catch(e){Z(c);if(e!==e+0)throw e;W(1,0)}}function Db(a,b){var c=Y();try{T(a)(b)}catch(e){Z(c);if(e!==e+0)throw e;W(1,0)}}function Eb(a,b,c){var e=Y();try{T(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;W(1,0)}}function jb(a,b,c){var e=Y();try{return T(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;W(1,0)}}function kb(a,b,c,e){var f=Y();try{return T(a)(b,c,e)}catch(g){Z(f);if(g!==g+0)throw g;W(1,0)}}\nfunction nb(a,b,c,e,f,g,k){var l=Y();try{return T(a)(b,c,e,f,g,k)}catch(m){Z(l);if(m!==m+0)throw m;W(1,0)}}function Cb(a){var b=Y();try{T(a)()}catch(c){Z(b);if(c!==c+0)throw c;W(1,0)}}function mb(a,b,c,e,f,g){var k=Y();try{return T(a)(b,c,e,f,g)}catch(l){Z(k);if(l!==l+0)throw l;W(1,0)}}function lb(a,b,c,e,f){var g=Y();try{return T(a)(b,c,e,f)}catch(k){Z(g);if(k!==k+0)throw k;W(1,0)}}function Gb(a,b,c,e){var f=Y();try{T(a)(b,c,e)}catch(g){Z(f);if(g!==g+0)throw g;W(1,0)}}\nfunction Ib(a,b,c,e,f){var g=Y();try{T(a)(b,c,e,f)}catch(k){Z(g);if(k!==k+0)throw k;W(1,0)}}function fb(a){var b=Y();try{return T(a)()}catch(c){Z(b);if(c!==c+0)throw c;W(1,0)}}function Jb(a,b,c,e,f,g){var k=Y();try{T(a)(b,c,e,f,g)}catch(l){Z(k);if(l!==l+0)throw l;W(1,0)}}function Kb(a,b,c,e,f,g,k){var l=Y();try{T(a)(b,c,e,f,g,k)}catch(m){Z(l);if(m!==m+0)throw m;W(1,0)}}function Ob(a,b,c,e,f,g,k,l){var m=Y();try{T(a)(b,c,e,f,g,k,l)}catch(n){Z(m);if(n!==n+0)throw n;W(1,0)}}\nfunction ob(a,b,c,e,f,g,k,l){var m=Y();try{return T(a)(b,c,e,f,g,k,l)}catch(n){Z(m);if(n!==n+0)throw n;W(1,0)}}function Qb(a,b,c,e,f,g,k,l,m,n){var p=Y();try{T(a)(b,c,e,f,g,k,l,m,n)}catch(v){Z(p);if(v!==v+0)throw v;W(1,0)}}function Pb(a,b,c,e,f,g,k,l,m){var n=Y();try{T(a)(b,c,e,f,g,k,l,m)}catch(p){Z(n);if(p!==p+0)throw p;W(1,0)}}function pb(a,b,c,e,f,g,k,l,m,n,p){var v=Y();try{return T(a)(b,c,e,f,g,k,l,m,n,p)}catch(x){Z(v);if(x!==x+0)throw x;W(1,0)}}\nfunction Wb(a,b,c,e,f,g,k,l,m,n,p,v,x,h){var u=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v,x,h)}catch(w){Z(u);if(w!==w+0)throw w;W(1,0)}}function Hb(a,b,c,e,f){var g=Y();try{T(a)(b,c,e,f)}catch(k){Z(g);if(k!==k+0)throw k;W(1,0)}}function Rb(a,b,c,e,f,g,k,l,m,n,p,v){var x=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v)}catch(h){Z(x);if(h!==h+0)throw h;W(1,0)}}function Ub(a,b,c,e,f,g,k,l,m,n,p,v){var x=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v)}catch(h){Z(x);if(h!==h+0)throw h;W(1,0)}}\nfunction eb(a,b,c,e,f,g,k){var l=Y();try{return T(a)(b,c,e,f,g,k)}catch(m){Z(l);if(m!==m+0)throw m;W(1,0)}}function Sb(a,b,c,e,f,g,k,l,m,n,p,v,x,h){var u=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v,x,h)}catch(w){Z(u);if(w!==w+0)throw w;W(1,0)}}function Mb(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A){var B=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A)}catch(E){Z(B);if(E!==E+0)throw E;W(1,0)}}\nfunction Lb(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w){var A=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v,x,h,u,w)}catch(B){Z(A);if(B!==B+0)throw B;W(1,0)}}function Nb(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u){var w=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v,x,h,u)}catch(A){Z(w);if(A!==A+0)throw A;W(1,0)}}function Vb(a,b,c,e,f,g,k,l,m,n,p,v,x){var h=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v,x)}catch(u){Z(h);if(u!==u+0)throw u;W(1,0)}}function Fb(a,b,c,e,f){var g=Y();try{T(a)(b,c,e,f)}catch(k){Z(g);if(k!==k+0)throw k;W(1,0)}}\nfunction ib(a,b,c){var e=Y();try{return T(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;W(1,0)}}function hb(a,b,c){var e=Y();try{return T(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;W(1,0)}}function qb(a,b,c,e,f,g,k,l,m,n,p,v){var x=Y();try{return T(a)(b,c,e,f,g,k,l,m,n,p,v)}catch(h){Z(x);if(h!==h+0)throw h;W(1,0)}}function Tb(a,b,c,e,f,g,k,l,m,n,p){var v=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p)}catch(x){Z(v);if(x!==x+0)throw x;W(1,0)}}\nfunction Xb(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w){var A=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v,x,h,u,w)}catch(B){Z(A);if(B!==B+0)throw B;W(1,0)}}function db(a,b,c){var e=Y();try{return T(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;W(1,0)}}function vb(a,b,c,e){var f=Y();try{return yc(a,b,c,e)}catch(g){Z(f);if(g!==g+0)throw g;W(1,0)}}function ic(a,b,c,e){var f=Y();try{Ac(a,b,c,e)}catch(g){Z(f);if(g!==g+0)throw g;W(1,0)}}\nfunction cc(a,b,c,e,f,g,k,l){var m=Y();try{bd(a,b,c,e,f,g,k,l)}catch(n){Z(m);if(n!==n+0)throw n;W(1,0)}}function rb(a,b,c,e,f,g,k){var l=Y();try{return zc(a,b,c,e,f,g,k)}catch(m){Z(l);if(m!==m+0)throw m;W(1,0)}}function $b(a,b,c,e,f,g,k){var l=Y();try{Dc(a,b,c,e,f,g,k)}catch(m){Z(l);if(m!==m+0)throw m;W(1,0)}}function Zb(a,b,c,e,f,g,k,l){var m=Y();try{Ec(a,b,c,e,f,g,k,l)}catch(n){Z(m);if(n!==n+0)throw n;W(1,0)}}\nfunction yb(a,b){var c=Y();try{return Fc(a,b)}catch(e){Z(c);if(e!==e+0)throw e;W(1,0)}}function zb(a,b,c){var e=Y();try{return Bc(a,b,c)}catch(f){Z(e);if(f!==f+0)throw f;W(1,0)}}function hc(a,b,c,e,f,g,k,l,m,n,p,v,x,h){var u=Y();try{Gc(a,b,c,e,f,g,k,l,m,n,p,v,x,h)}catch(w){Z(u);if(w!==w+0)throw w;W(1,0)}}function fc(a,b,c,e,f,g){var k=Y();try{Cc(a,b,c,e,f,g)}catch(l){Z(k);if(l!==l+0)throw l;W(1,0)}}\nfunction bc(a,b,c,e,f,g,k){var l=Y();try{Hc(a,b,c,e,f,g,k)}catch(m){Z(l);if(m!==m+0)throw m;W(1,0)}}function kc(a,b,c,e,f,g,k){var l=Y();try{Ic(a,b,c,e,f,g,k)}catch(m){Z(l);if(m!==m+0)throw m;W(1,0)}}function ac(a,b,c,e,f,g){var k=Y();try{Jc(a,b,c,e,f,g)}catch(l){Z(k);if(l!==l+0)throw l;W(1,0)}}function Yb(a,b,c,e,f,g,k,l,m,n,p,v,x){var h=Y();try{Kc(a,b,c,e,f,g,k,l,m,n,p,v,x)}catch(u){Z(h);if(u!==u+0)throw u;W(1,0)}}\nfunction Bb(a,b,c,e,f){var g=Y();try{return Lc(a,b,c,e,f)}catch(k){Z(g);if(k!==k+0)throw k;W(1,0)}}function sb(a,b,c,e,f,g,k,l,m,n){var p=Y();try{return Mc(a,b,c,e,f,g,k,l,m,n)}catch(v){Z(p);if(v!==v+0)throw v;W(1,0)}}function ub(a,b,c,e,f,g,k,l,m){var n=Y();try{return Nc(a,b,c,e,f,g,k,l,m)}catch(p){Z(n);if(p!==p+0)throw p;W(1,0)}}function Ab(a,b,c,e){var f=Y();try{return Oc(a,b,c,e)}catch(g){Z(f);if(g!==g+0)throw g;W(1,0)}}\nfunction sc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F,O){var L=Y();try{Pc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F,O)}catch(P){Z(L);if(P!==P+0)throw P;W(1,0)}}function uc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F,O,L,P,U,Aa,Ba){var aa=Y();try{Qc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F,O,L,P,U,Aa,Ba)}catch(Ca){Z(aa);if(Ca!==Ca+0)throw Ca;W(1,0)}}\nfunction rc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F,O,L){var P=Y();try{Rc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F,O,L)}catch(U){Z(P);if(U!==U+0)throw U;W(1,0)}}function qc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F){var O=Y();try{Sc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F)}catch(L){Z(O);if(L!==L+0)throw L;W(1,0)}}\nfunction tc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F,O,L,P,U,Aa){var Ba=Y();try{Tc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F,O,L,P,U,Aa)}catch(aa){Z(Ba);if(aa!==aa+0)throw aa;W(1,0)}}function mc(a,b,c,e,f,g,k,l,m,n,p,v){var x=Y();try{Uc(a,b,c,e,f,g,k,l,m,n,p,v)}catch(h){Z(x);if(h!==h+0)throw h;W(1,0)}}function lc(a,b,c,e,f,g,k,l,m,n,p,v){var x=Y();try{Vc(a,b,c,e,f,g,k,l,m,n,p,v)}catch(h){Z(x);if(h!==h+0)throw h;W(1,0)}}\nfunction nc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J){var K=Y();try{Wc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J)}catch(F){Z(K);if(F!==F+0)throw F;W(1,0)}}function pc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u){var w=Y();try{Xc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u)}catch(A){Z(w);if(A!==A+0)throw A;W(1,0)}}function oc(a,b,c,e,f,g,k,l,m,n,p,v,x){var h=Y();try{Yc(a,b,c,e,f,g,k,l,m,n,p,v,x)}catch(u){Z(h);if(u!==u+0)throw u;W(1,0)}}\nfunction xb(a,b,c){var e=Y();try{return dd(a,b,c)}catch(f){Z(e);if(f!==f+0)throw f;W(1,0)}}function dc(a,b,c,e,f,g,k,l,m,n){var p=Y();try{Zc(a,b,c,e,f,g,k,l,m,n)}catch(v){Z(p);if(v!==v+0)throw v;W(1,0)}}function ec(a,b,c,e,f,g,k,l,m,n,p,v){var x=Y();try{$c(a,b,c,e,f,g,k,l,m,n,p,v)}catch(h){Z(x);if(h!==h+0)throw h;W(1,0)}}function jc(a,b,c,e,f){var g=Y();try{ed(a,b,c,e,f)}catch(k){Z(g);if(k!==k+0)throw k;W(1,0)}}\nfunction gc(a,b,c,e,f,g,k,l,m,n,p,v,x,h){var u=Y();try{cd(a,b,c,e,f,g,k,l,m,n,p,v,x,h)}catch(w){Z(u);if(w!==w+0)throw w;W(1,0)}}function wb(a){var b=Y();try{return xc(a)}catch(c){Z(b);if(c!==c+0)throw c;W(1,0)}}function tb(a,b,c,e,f){var g=Y();try{return ad(a,b,c,e,f)}catch(k){Z(g);if(k!==k+0)throw k;W(1,0)}}d.UTF8ToString=sa;d.stringToUTF8=function(a,b,c){return ta(a,C,b,c)};d.lengthBytesUTF8=ua;d.stackSave=Y;d.stackRestore=Z;d.stackAlloc=wc;var fd;N=function gd(){fd||hd();fd||(N=gd)};\nfunction hd(){function a(){if(!fd&&(fd=!0,d.calledRun=!0,!pa)){Ka(za);ba(d);if(d.onRuntimeInitialized)d.onRuntimeInitialized();if(d.postRun)for(\"function\"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;){var b=d.postRun.shift();Da.unshift(b)}Ka(Da)}}if(!(0<M)){if(d.preRun)for(\"function\"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)Ea();Ka(ya);0<M||(d.setStatus?(d.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){d.setStatus(\"\")},1);a()},1)):a())}}\nif(d.preInit)for(\"function\"==typeof d.preInit&&(d.preInit=[d.preInit]);0<d.preInit.length;)d.preInit.pop()();hd();\n\n\n  return ortWasm.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasm;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return ortWasm; });\nelse if (typeof exports === 'object')\n  exports[\"ortWasm\"] = ortWasm;\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nexports.__esModule = true;\r\nvar Guid = /** @class */ (function () {\r\n    function Guid(guid) {\r\n        if (!guid) {\r\n            throw new TypeError(\"Invalid argument; `value` has no value.\");\r\n        }\r\n        this.value = Guid.EMPTY;\r\n        if (guid && Guid.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n    Guid.isGuid = function (guid) {\r\n        var value = guid.toString();\r\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\r\n    };\r\n    Guid.create = function () {\r\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\"));\r\n    };\r\n    Guid.createEmpty = function () {\r\n        return new Guid(\"emptyguid\");\r\n    };\r\n    Guid.parse = function (guid) {\r\n        return new Guid(guid);\r\n    };\r\n    Guid.raw = function () {\r\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\");\r\n    };\r\n    Guid.gen = function (count) {\r\n        var out = \"\";\r\n        for (var i = 0; i < count; i++) {\r\n            // tslint:disable-next-line:no-bitwise\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    };\r\n    Guid.prototype.equals = function (other) {\r\n        // Comparing string `value` against provided `guid` will auto-call\r\n        // toString on `guid` for comparison\r\n        return Guid.isGuid(other) && this.value === other.toString();\r\n    };\r\n    Guid.prototype.isEmpty = function () {\r\n        return this.value === Guid.EMPTY;\r\n    };\r\n    Guid.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Guid.prototype.toJSON = function () {\r\n        return {\r\n            value: this.value\r\n        };\r\n    };\r\n    Guid.validator = new RegExp(\"^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$\", \"i\");\r\n    Guid.EMPTY = \"00000000-0000-0000-0000-000000000000\";\r\n    return Guid;\r\n}());\r\nexports.Guid = Guid;\r\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.onnx = (function() {\n\n    /**\n     * Namespace onnx.\n     * @exports onnx\n     * @namespace\n     */\n    var onnx = {};\n\n    /**\n     * Version enum.\n     * @name onnx.Version\n     * @enum {string}\n     * @property {number} _START_VERSION=0 _START_VERSION value\n     * @property {number} IR_VERSION_2017_10_10=1 IR_VERSION_2017_10_10 value\n     * @property {number} IR_VERSION_2017_10_30=2 IR_VERSION_2017_10_30 value\n     * @property {number} IR_VERSION_2017_11_3=3 IR_VERSION_2017_11_3 value\n     * @property {number} IR_VERSION_2019_1_22=4 IR_VERSION_2019_1_22 value\n     * @property {number} IR_VERSION=5 IR_VERSION value\n     */\n    onnx.Version = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"_START_VERSION\"] = 0;\n        values[valuesById[1] = \"IR_VERSION_2017_10_10\"] = 1;\n        values[valuesById[2] = \"IR_VERSION_2017_10_30\"] = 2;\n        values[valuesById[3] = \"IR_VERSION_2017_11_3\"] = 3;\n        values[valuesById[4] = \"IR_VERSION_2019_1_22\"] = 4;\n        values[valuesById[5] = \"IR_VERSION\"] = 5;\n        return values;\n    })();\n\n    onnx.AttributeProto = (function() {\n\n        /**\n         * Properties of an AttributeProto.\n         * @memberof onnx\n         * @interface IAttributeProto\n         * @property {string|null} [name] AttributeProto name\n         * @property {string|null} [refAttrName] AttributeProto refAttrName\n         * @property {string|null} [docString] AttributeProto docString\n         * @property {onnx.AttributeProto.AttributeType|null} [type] AttributeProto type\n         * @property {number|null} [f] AttributeProto f\n         * @property {number|Long|null} [i] AttributeProto i\n         * @property {Uint8Array|null} [s] AttributeProto s\n         * @property {onnx.ITensorProto|null} [t] AttributeProto t\n         * @property {onnx.IGraphProto|null} [g] AttributeProto g\n         * @property {Array.<number>|null} [floats] AttributeProto floats\n         * @property {Array.<number|Long>|null} [ints] AttributeProto ints\n         * @property {Array.<Uint8Array>|null} [strings] AttributeProto strings\n         * @property {Array.<onnx.ITensorProto>|null} [tensors] AttributeProto tensors\n         * @property {Array.<onnx.IGraphProto>|null} [graphs] AttributeProto graphs\n         */\n\n        /**\n         * Constructs a new AttributeProto.\n         * @memberof onnx\n         * @classdesc Represents an AttributeProto.\n         * @implements IAttributeProto\n         * @constructor\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         */\n        function AttributeProto(properties) {\n            this.floats = [];\n            this.ints = [];\n            this.strings = [];\n            this.tensors = [];\n            this.graphs = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * AttributeProto name.\n         * @member {string} name\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.name = \"\";\n\n        /**\n         * AttributeProto refAttrName.\n         * @member {string} refAttrName\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.refAttrName = \"\";\n\n        /**\n         * AttributeProto docString.\n         * @member {string} docString\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.docString = \"\";\n\n        /**\n         * AttributeProto type.\n         * @member {onnx.AttributeProto.AttributeType} type\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.type = 0;\n\n        /**\n         * AttributeProto f.\n         * @member {number} f\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.f = 0;\n\n        /**\n         * AttributeProto i.\n         * @member {number|Long} i\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.i = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * AttributeProto s.\n         * @member {Uint8Array} s\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.s = $util.newBuffer([]);\n\n        /**\n         * AttributeProto t.\n         * @member {onnx.ITensorProto|null|undefined} t\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.t = null;\n\n        /**\n         * AttributeProto g.\n         * @member {onnx.IGraphProto|null|undefined} g\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.g = null;\n\n        /**\n         * AttributeProto floats.\n         * @member {Array.<number>} floats\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.floats = $util.emptyArray;\n\n        /**\n         * AttributeProto ints.\n         * @member {Array.<number|Long>} ints\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.ints = $util.emptyArray;\n\n        /**\n         * AttributeProto strings.\n         * @member {Array.<Uint8Array>} strings\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.strings = $util.emptyArray;\n\n        /**\n         * AttributeProto tensors.\n         * @member {Array.<onnx.ITensorProto>} tensors\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.tensors = $util.emptyArray;\n\n        /**\n         * AttributeProto graphs.\n         * @member {Array.<onnx.IGraphProto>} graphs\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.graphs = $util.emptyArray;\n\n        /**\n         * Creates a new AttributeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         * @returns {onnx.AttributeProto} AttributeProto instance\n         */\n        AttributeProto.create = function create(properties) {\n            return new AttributeProto(properties);\n        };\n\n        /**\n         * Encodes the specified AttributeProto message. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.f);\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.i);\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.s);\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                $root.onnx.TensorProto.encode(message.t, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                $root.onnx.GraphProto.encode(message.g, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.floats != null && message.floats.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.floats.length; ++i)\n                    writer.float(message.floats[i]);\n                writer.ldelim();\n            }\n            if (message.ints != null && message.ints.length) {\n                writer.uint32(/* id 8, wireType 2 =*/66).fork();\n                for (var i = 0; i < message.ints.length; ++i)\n                    writer.int64(message.ints[i]);\n                writer.ldelim();\n            }\n            if (message.strings != null && message.strings.length)\n                for (var i = 0; i < message.strings.length; ++i)\n                    writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.strings[i]);\n            if (message.tensors != null && message.tensors.length)\n                for (var i = 0; i < message.tensors.length; ++i)\n                    $root.onnx.TensorProto.encode(message.tensors[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.graphs != null && message.graphs.length)\n                for (var i = 0; i < message.graphs.length; ++i)\n                    $root.onnx.GraphProto.encode(message.graphs[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 13, wireType 2 =*/106).string(message.docString);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.type);\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                writer.uint32(/* id 21, wireType 2 =*/170).string(message.refAttrName);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified AttributeProto message, length delimited. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.AttributeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 21:\n                    message.refAttrName = reader.string();\n                    break;\n                case 13:\n                    message.docString = reader.string();\n                    break;\n                case 20:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.f = reader.float();\n                    break;\n                case 3:\n                    message.i = reader.int64();\n                    break;\n                case 4:\n                    message.s = reader.bytes();\n                    break;\n                case 5:\n                    message.t = $root.onnx.TensorProto.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.g = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    if (!(message.floats && message.floats.length))\n                        message.floats = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floats.push(reader.float());\n                    } else\n                        message.floats.push(reader.float());\n                    break;\n                case 8:\n                    if (!(message.ints && message.ints.length))\n                        message.ints = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.ints.push(reader.int64());\n                    } else\n                        message.ints.push(reader.int64());\n                    break;\n                case 9:\n                    if (!(message.strings && message.strings.length))\n                        message.strings = [];\n                    message.strings.push(reader.bytes());\n                    break;\n                case 10:\n                    if (!(message.tensors && message.tensors.length))\n                        message.tensors = [];\n                    message.tensors.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 11:\n                    if (!(message.graphs && message.graphs.length))\n                        message.graphs = [];\n                    message.graphs.push($root.onnx.GraphProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an AttributeProto message.\n         * @function verify\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        AttributeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                if (!$util.isString(message.refAttrName))\n                    return \"refAttrName: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                switch (message.type) {\n                default:\n                    return \"type: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                    break;\n                }\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                if (typeof message.f !== \"number\")\n                    return \"f: number expected\";\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (!$util.isInteger(message.i) && !(message.i && $util.isInteger(message.i.low) && $util.isInteger(message.i.high)))\n                    return \"i: integer|Long expected\";\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                if (!(message.s && typeof message.s.length === \"number\" || $util.isString(message.s)))\n                    return \"s: buffer expected\";\n            if (message.t != null && message.hasOwnProperty(\"t\")) {\n                var error = $root.onnx.TensorProto.verify(message.t);\n                if (error)\n                    return \"t.\" + error;\n            }\n            if (message.g != null && message.hasOwnProperty(\"g\")) {\n                var error = $root.onnx.GraphProto.verify(message.g);\n                if (error)\n                    return \"g.\" + error;\n            }\n            if (message.floats != null && message.hasOwnProperty(\"floats\")) {\n                if (!Array.isArray(message.floats))\n                    return \"floats: array expected\";\n                for (var i = 0; i < message.floats.length; ++i)\n                    if (typeof message.floats[i] !== \"number\")\n                        return \"floats: number[] expected\";\n            }\n            if (message.ints != null && message.hasOwnProperty(\"ints\")) {\n                if (!Array.isArray(message.ints))\n                    return \"ints: array expected\";\n                for (var i = 0; i < message.ints.length; ++i)\n                    if (!$util.isInteger(message.ints[i]) && !(message.ints[i] && $util.isInteger(message.ints[i].low) && $util.isInteger(message.ints[i].high)))\n                        return \"ints: integer|Long[] expected\";\n            }\n            if (message.strings != null && message.hasOwnProperty(\"strings\")) {\n                if (!Array.isArray(message.strings))\n                    return \"strings: array expected\";\n                for (var i = 0; i < message.strings.length; ++i)\n                    if (!(message.strings[i] && typeof message.strings[i].length === \"number\" || $util.isString(message.strings[i])))\n                        return \"strings: buffer[] expected\";\n            }\n            if (message.tensors != null && message.hasOwnProperty(\"tensors\")) {\n                if (!Array.isArray(message.tensors))\n                    return \"tensors: array expected\";\n                for (var i = 0; i < message.tensors.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.tensors[i]);\n                    if (error)\n                        return \"tensors.\" + error;\n                }\n            }\n            if (message.graphs != null && message.hasOwnProperty(\"graphs\")) {\n                if (!Array.isArray(message.graphs))\n                    return \"graphs: array expected\";\n                for (var i = 0; i < message.graphs.length; ++i) {\n                    var error = $root.onnx.GraphProto.verify(message.graphs[i]);\n                    if (error)\n                        return \"graphs.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates an AttributeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.AttributeProto} AttributeProto\n         */\n        AttributeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.AttributeProto)\n                return object;\n            var message = new $root.onnx.AttributeProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.refAttrName != null)\n                message.refAttrName = String(object.refAttrName);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            switch (object.type) {\n            case \"UNDEFINED\":\n            case 0:\n                message.type = 0;\n                break;\n            case \"FLOAT\":\n            case 1:\n                message.type = 1;\n                break;\n            case \"INT\":\n            case 2:\n                message.type = 2;\n                break;\n            case \"STRING\":\n            case 3:\n                message.type = 3;\n                break;\n            case \"TENSOR\":\n            case 4:\n                message.type = 4;\n                break;\n            case \"GRAPH\":\n            case 5:\n                message.type = 5;\n                break;\n            case \"FLOATS\":\n            case 6:\n                message.type = 6;\n                break;\n            case \"INTS\":\n            case 7:\n                message.type = 7;\n                break;\n            case \"STRINGS\":\n            case 8:\n                message.type = 8;\n                break;\n            case \"TENSORS\":\n            case 9:\n                message.type = 9;\n                break;\n            case \"GRAPHS\":\n            case 10:\n                message.type = 10;\n                break;\n            }\n            if (object.f != null)\n                message.f = Number(object.f);\n            if (object.i != null)\n                if ($util.Long)\n                    (message.i = $util.Long.fromValue(object.i)).unsigned = false;\n                else if (typeof object.i === \"string\")\n                    message.i = parseInt(object.i, 10);\n                else if (typeof object.i === \"number\")\n                    message.i = object.i;\n                else if (typeof object.i === \"object\")\n                    message.i = new $util.LongBits(object.i.low >>> 0, object.i.high >>> 0).toNumber();\n            if (object.s != null)\n                if (typeof object.s === \"string\")\n                    $util.base64.decode(object.s, message.s = $util.newBuffer($util.base64.length(object.s)), 0);\n                else if (object.s.length)\n                    message.s = object.s;\n            if (object.t != null) {\n                if (typeof object.t !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.t: object expected\");\n                message.t = $root.onnx.TensorProto.fromObject(object.t);\n            }\n            if (object.g != null) {\n                if (typeof object.g !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.g: object expected\");\n                message.g = $root.onnx.GraphProto.fromObject(object.g);\n            }\n            if (object.floats) {\n                if (!Array.isArray(object.floats))\n                    throw TypeError(\".onnx.AttributeProto.floats: array expected\");\n                message.floats = [];\n                for (var i = 0; i < object.floats.length; ++i)\n                    message.floats[i] = Number(object.floats[i]);\n            }\n            if (object.ints) {\n                if (!Array.isArray(object.ints))\n                    throw TypeError(\".onnx.AttributeProto.ints: array expected\");\n                message.ints = [];\n                for (var i = 0; i < object.ints.length; ++i)\n                    if ($util.Long)\n                        (message.ints[i] = $util.Long.fromValue(object.ints[i])).unsigned = false;\n                    else if (typeof object.ints[i] === \"string\")\n                        message.ints[i] = parseInt(object.ints[i], 10);\n                    else if (typeof object.ints[i] === \"number\")\n                        message.ints[i] = object.ints[i];\n                    else if (typeof object.ints[i] === \"object\")\n                        message.ints[i] = new $util.LongBits(object.ints[i].low >>> 0, object.ints[i].high >>> 0).toNumber();\n            }\n            if (object.strings) {\n                if (!Array.isArray(object.strings))\n                    throw TypeError(\".onnx.AttributeProto.strings: array expected\");\n                message.strings = [];\n                for (var i = 0; i < object.strings.length; ++i)\n                    if (typeof object.strings[i] === \"string\")\n                        $util.base64.decode(object.strings[i], message.strings[i] = $util.newBuffer($util.base64.length(object.strings[i])), 0);\n                    else if (object.strings[i].length)\n                        message.strings[i] = object.strings[i];\n            }\n            if (object.tensors) {\n                if (!Array.isArray(object.tensors))\n                    throw TypeError(\".onnx.AttributeProto.tensors: array expected\");\n                message.tensors = [];\n                for (var i = 0; i < object.tensors.length; ++i) {\n                    if (typeof object.tensors[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.tensors: object expected\");\n                    message.tensors[i] = $root.onnx.TensorProto.fromObject(object.tensors[i]);\n                }\n            }\n            if (object.graphs) {\n                if (!Array.isArray(object.graphs))\n                    throw TypeError(\".onnx.AttributeProto.graphs: array expected\");\n                message.graphs = [];\n                for (var i = 0; i < object.graphs.length; ++i) {\n                    if (typeof object.graphs[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.graphs: object expected\");\n                    message.graphs[i] = $root.onnx.GraphProto.fromObject(object.graphs[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an AttributeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.AttributeProto} message AttributeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AttributeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.floats = [];\n                object.ints = [];\n                object.strings = [];\n                object.tensors = [];\n                object.graphs = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.f = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.i = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.i = options.longs === String ? \"0\" : 0;\n                if (options.bytes === String)\n                    object.s = \"\";\n                else {\n                    object.s = [];\n                    if (options.bytes !== Array)\n                        object.s = $util.newBuffer(object.s);\n                }\n                object.t = null;\n                object.g = null;\n                object.docString = \"\";\n                object.type = options.enums === String ? \"UNDEFINED\" : 0;\n                object.refAttrName = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                object.f = options.json && !isFinite(message.f) ? String(message.f) : message.f;\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (typeof message.i === \"number\")\n                    object.i = options.longs === String ? String(message.i) : message.i;\n                else\n                    object.i = options.longs === String ? $util.Long.prototype.toString.call(message.i) : options.longs === Number ? new $util.LongBits(message.i.low >>> 0, message.i.high >>> 0).toNumber() : message.i;\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                object.s = options.bytes === String ? $util.base64.encode(message.s, 0, message.s.length) : options.bytes === Array ? Array.prototype.slice.call(message.s) : message.s;\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                object.t = $root.onnx.TensorProto.toObject(message.t, options);\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                object.g = $root.onnx.GraphProto.toObject(message.g, options);\n            if (message.floats && message.floats.length) {\n                object.floats = [];\n                for (var j = 0; j < message.floats.length; ++j)\n                    object.floats[j] = options.json && !isFinite(message.floats[j]) ? String(message.floats[j]) : message.floats[j];\n            }\n            if (message.ints && message.ints.length) {\n                object.ints = [];\n                for (var j = 0; j < message.ints.length; ++j)\n                    if (typeof message.ints[j] === \"number\")\n                        object.ints[j] = options.longs === String ? String(message.ints[j]) : message.ints[j];\n                    else\n                        object.ints[j] = options.longs === String ? $util.Long.prototype.toString.call(message.ints[j]) : options.longs === Number ? new $util.LongBits(message.ints[j].low >>> 0, message.ints[j].high >>> 0).toNumber() : message.ints[j];\n            }\n            if (message.strings && message.strings.length) {\n                object.strings = [];\n                for (var j = 0; j < message.strings.length; ++j)\n                    object.strings[j] = options.bytes === String ? $util.base64.encode(message.strings[j], 0, message.strings[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.strings[j]) : message.strings[j];\n            }\n            if (message.tensors && message.tensors.length) {\n                object.tensors = [];\n                for (var j = 0; j < message.tensors.length; ++j)\n                    object.tensors[j] = $root.onnx.TensorProto.toObject(message.tensors[j], options);\n            }\n            if (message.graphs && message.graphs.length) {\n                object.graphs = [];\n                for (var j = 0; j < message.graphs.length; ++j)\n                    object.graphs[j] = $root.onnx.GraphProto.toObject(message.graphs[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = options.enums === String ? $root.onnx.AttributeProto.AttributeType[message.type] : message.type;\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                object.refAttrName = message.refAttrName;\n            return object;\n        };\n\n        /**\n         * Converts this AttributeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.AttributeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AttributeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * AttributeType enum.\n         * @name onnx.AttributeProto.AttributeType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} INT=2 INT value\n         * @property {number} STRING=3 STRING value\n         * @property {number} TENSOR=4 TENSOR value\n         * @property {number} GRAPH=5 GRAPH value\n         * @property {number} FLOATS=6 FLOATS value\n         * @property {number} INTS=7 INTS value\n         * @property {number} STRINGS=8 STRINGS value\n         * @property {number} TENSORS=9 TENSORS value\n         * @property {number} GRAPHS=10 GRAPHS value\n         */\n        AttributeProto.AttributeType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"INT\"] = 2;\n            values[valuesById[3] = \"STRING\"] = 3;\n            values[valuesById[4] = \"TENSOR\"] = 4;\n            values[valuesById[5] = \"GRAPH\"] = 5;\n            values[valuesById[6] = \"FLOATS\"] = 6;\n            values[valuesById[7] = \"INTS\"] = 7;\n            values[valuesById[8] = \"STRINGS\"] = 8;\n            values[valuesById[9] = \"TENSORS\"] = 9;\n            values[valuesById[10] = \"GRAPHS\"] = 10;\n            return values;\n        })();\n\n        return AttributeProto;\n    })();\n\n    onnx.ValueInfoProto = (function() {\n\n        /**\n         * Properties of a ValueInfoProto.\n         * @memberof onnx\n         * @interface IValueInfoProto\n         * @property {string|null} [name] ValueInfoProto name\n         * @property {onnx.ITypeProto|null} [type] ValueInfoProto type\n         * @property {string|null} [docString] ValueInfoProto docString\n         */\n\n        /**\n         * Constructs a new ValueInfoProto.\n         * @memberof onnx\n         * @classdesc Represents a ValueInfoProto.\n         * @implements IValueInfoProto\n         * @constructor\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         */\n        function ValueInfoProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ValueInfoProto name.\n         * @member {string} name\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.name = \"\";\n\n        /**\n         * ValueInfoProto type.\n         * @member {onnx.ITypeProto|null|undefined} type\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.type = null;\n\n        /**\n         * ValueInfoProto docString.\n         * @member {string} docString\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new ValueInfoProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         * @returns {onnx.ValueInfoProto} ValueInfoProto instance\n         */\n        ValueInfoProto.create = function create(properties) {\n            return new ValueInfoProto(properties);\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                $root.onnx.TypeProto.encode(message.type, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.docString);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message, length delimited. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ValueInfoProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.type = $root.onnx.TypeProto.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ValueInfoProto message.\n         * @function verify\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ValueInfoProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\")) {\n                var error = $root.onnx.TypeProto.verify(message.type);\n                if (error)\n                    return \"type.\" + error;\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ValueInfoProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         */\n        ValueInfoProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ValueInfoProto)\n                return object;\n            var message = new $root.onnx.ValueInfoProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.type != null) {\n                if (typeof object.type !== \"object\")\n                    throw TypeError(\".onnx.ValueInfoProto.type: object expected\");\n                message.type = $root.onnx.TypeProto.fromObject(object.type);\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ValueInfoProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.ValueInfoProto} message ValueInfoProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ValueInfoProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.name = \"\";\n                object.type = null;\n                object.docString = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = $root.onnx.TypeProto.toObject(message.type, options);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            return object;\n        };\n\n        /**\n         * Converts this ValueInfoProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ValueInfoProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ValueInfoProto;\n    })();\n\n    onnx.NodeProto = (function() {\n\n        /**\n         * Properties of a NodeProto.\n         * @memberof onnx\n         * @interface INodeProto\n         * @property {Array.<string>|null} [input] NodeProto input\n         * @property {Array.<string>|null} [output] NodeProto output\n         * @property {string|null} [name] NodeProto name\n         * @property {string|null} [opType] NodeProto opType\n         * @property {string|null} [domain] NodeProto domain\n         * @property {Array.<onnx.IAttributeProto>|null} [attribute] NodeProto attribute\n         * @property {string|null} [docString] NodeProto docString\n         */\n\n        /**\n         * Constructs a new NodeProto.\n         * @memberof onnx\n         * @classdesc Represents a NodeProto.\n         * @implements INodeProto\n         * @constructor\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         */\n        function NodeProto(properties) {\n            this.input = [];\n            this.output = [];\n            this.attribute = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * NodeProto input.\n         * @member {Array.<string>} input\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.input = $util.emptyArray;\n\n        /**\n         * NodeProto output.\n         * @member {Array.<string>} output\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.output = $util.emptyArray;\n\n        /**\n         * NodeProto name.\n         * @member {string} name\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.name = \"\";\n\n        /**\n         * NodeProto opType.\n         * @member {string} opType\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.opType = \"\";\n\n        /**\n         * NodeProto domain.\n         * @member {string} domain\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.domain = \"\";\n\n        /**\n         * NodeProto attribute.\n         * @member {Array.<onnx.IAttributeProto>} attribute\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.attribute = $util.emptyArray;\n\n        /**\n         * NodeProto docString.\n         * @member {string} docString\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new NodeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         * @returns {onnx.NodeProto} NodeProto instance\n         */\n        NodeProto.create = function create(properties) {\n            return new NodeProto(properties);\n        };\n\n        /**\n         * Encodes the specified NodeProto message. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.input[i]);\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.output[i]);\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.opType);\n            if (message.attribute != null && message.attribute.length)\n                for (var i = 0; i < message.attribute.length; ++i)\n                    $root.onnx.AttributeProto.encode(message.attribute[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 7, wireType 2 =*/58).string(message.domain);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified NodeProto message, length delimited. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.NodeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push(reader.string());\n                    break;\n                case 2:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push(reader.string());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.opType = reader.string();\n                    break;\n                case 7:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    if (!(message.attribute && message.attribute.length))\n                        message.attribute = [];\n                    message.attribute.push($root.onnx.AttributeProto.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a NodeProto message.\n         * @function verify\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        NodeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i)\n                    if (!$util.isString(message.input[i]))\n                        return \"input: string[] expected\";\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i)\n                    if (!$util.isString(message.output[i]))\n                        return \"output: string[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                if (!$util.isString(message.opType))\n                    return \"opType: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.attribute != null && message.hasOwnProperty(\"attribute\")) {\n                if (!Array.isArray(message.attribute))\n                    return \"attribute: array expected\";\n                for (var i = 0; i < message.attribute.length; ++i) {\n                    var error = $root.onnx.AttributeProto.verify(message.attribute[i]);\n                    if (error)\n                        return \"attribute.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a NodeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.NodeProto} NodeProto\n         */\n        NodeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.NodeProto)\n                return object;\n            var message = new $root.onnx.NodeProto();\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.NodeProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i)\n                    message.input[i] = String(object.input[i]);\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.NodeProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i)\n                    message.output[i] = String(object.output[i]);\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.opType != null)\n                message.opType = String(object.opType);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.attribute) {\n                if (!Array.isArray(object.attribute))\n                    throw TypeError(\".onnx.NodeProto.attribute: array expected\");\n                message.attribute = [];\n                for (var i = 0; i < object.attribute.length; ++i) {\n                    if (typeof object.attribute[i] !== \"object\")\n                        throw TypeError(\".onnx.NodeProto.attribute: object expected\");\n                    message.attribute[i] = $root.onnx.AttributeProto.fromObject(object.attribute[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a NodeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.NodeProto} message NodeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        NodeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.input = [];\n                object.output = [];\n                object.attribute = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.opType = \"\";\n                object.docString = \"\";\n                object.domain = \"\";\n            }\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = message.input[j];\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = message.output[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                object.opType = message.opType;\n            if (message.attribute && message.attribute.length) {\n                object.attribute = [];\n                for (var j = 0; j < message.attribute.length; ++j)\n                    object.attribute[j] = $root.onnx.AttributeProto.toObject(message.attribute[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            return object;\n        };\n\n        /**\n         * Converts this NodeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.NodeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        NodeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return NodeProto;\n    })();\n\n    onnx.ModelProto = (function() {\n\n        /**\n         * Properties of a ModelProto.\n         * @memberof onnx\n         * @interface IModelProto\n         * @property {number|Long|null} [irVersion] ModelProto irVersion\n         * @property {Array.<onnx.IOperatorSetIdProto>|null} [opsetImport] ModelProto opsetImport\n         * @property {string|null} [producerName] ModelProto producerName\n         * @property {string|null} [producerVersion] ModelProto producerVersion\n         * @property {string|null} [domain] ModelProto domain\n         * @property {number|Long|null} [modelVersion] ModelProto modelVersion\n         * @property {string|null} [docString] ModelProto docString\n         * @property {onnx.IGraphProto|null} [graph] ModelProto graph\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [metadataProps] ModelProto metadataProps\n         */\n\n        /**\n         * Constructs a new ModelProto.\n         * @memberof onnx\n         * @classdesc Represents a ModelProto.\n         * @implements IModelProto\n         * @constructor\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         */\n        function ModelProto(properties) {\n            this.opsetImport = [];\n            this.metadataProps = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ModelProto irVersion.\n         * @member {number|Long} irVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.irVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto opsetImport.\n         * @member {Array.<onnx.IOperatorSetIdProto>} opsetImport\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.opsetImport = $util.emptyArray;\n\n        /**\n         * ModelProto producerName.\n         * @member {string} producerName\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerName = \"\";\n\n        /**\n         * ModelProto producerVersion.\n         * @member {string} producerVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerVersion = \"\";\n\n        /**\n         * ModelProto domain.\n         * @member {string} domain\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.domain = \"\";\n\n        /**\n         * ModelProto modelVersion.\n         * @member {number|Long} modelVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.modelVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto docString.\n         * @member {string} docString\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.docString = \"\";\n\n        /**\n         * ModelProto graph.\n         * @member {onnx.IGraphProto|null|undefined} graph\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.graph = null;\n\n        /**\n         * ModelProto metadataProps.\n         * @member {Array.<onnx.IStringStringEntryProto>} metadataProps\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.metadataProps = $util.emptyArray;\n\n        /**\n         * Creates a new ModelProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         * @returns {onnx.ModelProto} ModelProto instance\n         */\n        ModelProto.create = function create(properties) {\n            return new ModelProto(properties);\n        };\n\n        /**\n         * Encodes the specified ModelProto message. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.irVersion);\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.producerName);\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.producerVersion);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.domain);\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.modelVersion);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                $root.onnx.GraphProto.encode(message.graph, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.opsetImport != null && message.opsetImport.length)\n                for (var i = 0; i < message.opsetImport.length; ++i)\n                    $root.onnx.OperatorSetIdProto.encode(message.opsetImport[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.metadataProps != null && message.metadataProps.length)\n                for (var i = 0; i < message.metadataProps.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.metadataProps[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ModelProto message, length delimited. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ModelProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.irVersion = reader.int64();\n                    break;\n                case 8:\n                    if (!(message.opsetImport && message.opsetImport.length))\n                        message.opsetImport = [];\n                    message.opsetImport.push($root.onnx.OperatorSetIdProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.producerName = reader.string();\n                    break;\n                case 3:\n                    message.producerVersion = reader.string();\n                    break;\n                case 4:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    message.modelVersion = reader.int64();\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                case 7:\n                    message.graph = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    if (!(message.metadataProps && message.metadataProps.length))\n                        message.metadataProps = [];\n                    message.metadataProps.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ModelProto message.\n         * @function verify\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ModelProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (!$util.isInteger(message.irVersion) && !(message.irVersion && $util.isInteger(message.irVersion.low) && $util.isInteger(message.irVersion.high)))\n                    return \"irVersion: integer|Long expected\";\n            if (message.opsetImport != null && message.hasOwnProperty(\"opsetImport\")) {\n                if (!Array.isArray(message.opsetImport))\n                    return \"opsetImport: array expected\";\n                for (var i = 0; i < message.opsetImport.length; ++i) {\n                    var error = $root.onnx.OperatorSetIdProto.verify(message.opsetImport[i]);\n                    if (error)\n                        return \"opsetImport.\" + error;\n                }\n            }\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                if (!$util.isString(message.producerName))\n                    return \"producerName: string expected\";\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                if (!$util.isString(message.producerVersion))\n                    return \"producerVersion: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (!$util.isInteger(message.modelVersion) && !(message.modelVersion && $util.isInteger(message.modelVersion.low) && $util.isInteger(message.modelVersion.high)))\n                    return \"modelVersion: integer|Long expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.graph != null && message.hasOwnProperty(\"graph\")) {\n                var error = $root.onnx.GraphProto.verify(message.graph);\n                if (error)\n                    return \"graph.\" + error;\n            }\n            if (message.metadataProps != null && message.hasOwnProperty(\"metadataProps\")) {\n                if (!Array.isArray(message.metadataProps))\n                    return \"metadataProps: array expected\";\n                for (var i = 0; i < message.metadataProps.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.metadataProps[i]);\n                    if (error)\n                        return \"metadataProps.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a ModelProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ModelProto} ModelProto\n         */\n        ModelProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ModelProto)\n                return object;\n            var message = new $root.onnx.ModelProto();\n            if (object.irVersion != null)\n                if ($util.Long)\n                    (message.irVersion = $util.Long.fromValue(object.irVersion)).unsigned = false;\n                else if (typeof object.irVersion === \"string\")\n                    message.irVersion = parseInt(object.irVersion, 10);\n                else if (typeof object.irVersion === \"number\")\n                    message.irVersion = object.irVersion;\n                else if (typeof object.irVersion === \"object\")\n                    message.irVersion = new $util.LongBits(object.irVersion.low >>> 0, object.irVersion.high >>> 0).toNumber();\n            if (object.opsetImport) {\n                if (!Array.isArray(object.opsetImport))\n                    throw TypeError(\".onnx.ModelProto.opsetImport: array expected\");\n                message.opsetImport = [];\n                for (var i = 0; i < object.opsetImport.length; ++i) {\n                    if (typeof object.opsetImport[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.opsetImport: object expected\");\n                    message.opsetImport[i] = $root.onnx.OperatorSetIdProto.fromObject(object.opsetImport[i]);\n                }\n            }\n            if (object.producerName != null)\n                message.producerName = String(object.producerName);\n            if (object.producerVersion != null)\n                message.producerVersion = String(object.producerVersion);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.modelVersion != null)\n                if ($util.Long)\n                    (message.modelVersion = $util.Long.fromValue(object.modelVersion)).unsigned = false;\n                else if (typeof object.modelVersion === \"string\")\n                    message.modelVersion = parseInt(object.modelVersion, 10);\n                else if (typeof object.modelVersion === \"number\")\n                    message.modelVersion = object.modelVersion;\n                else if (typeof object.modelVersion === \"object\")\n                    message.modelVersion = new $util.LongBits(object.modelVersion.low >>> 0, object.modelVersion.high >>> 0).toNumber();\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.graph != null) {\n                if (typeof object.graph !== \"object\")\n                    throw TypeError(\".onnx.ModelProto.graph: object expected\");\n                message.graph = $root.onnx.GraphProto.fromObject(object.graph);\n            }\n            if (object.metadataProps) {\n                if (!Array.isArray(object.metadataProps))\n                    throw TypeError(\".onnx.ModelProto.metadataProps: array expected\");\n                message.metadataProps = [];\n                for (var i = 0; i < object.metadataProps.length; ++i) {\n                    if (typeof object.metadataProps[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.metadataProps: object expected\");\n                    message.metadataProps[i] = $root.onnx.StringStringEntryProto.fromObject(object.metadataProps[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ModelProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.ModelProto} message ModelProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ModelProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.opsetImport = [];\n                object.metadataProps = [];\n            }\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.irVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.irVersion = options.longs === String ? \"0\" : 0;\n                object.producerName = \"\";\n                object.producerVersion = \"\";\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.modelVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.modelVersion = options.longs === String ? \"0\" : 0;\n                object.docString = \"\";\n                object.graph = null;\n            }\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (typeof message.irVersion === \"number\")\n                    object.irVersion = options.longs === String ? String(message.irVersion) : message.irVersion;\n                else\n                    object.irVersion = options.longs === String ? $util.Long.prototype.toString.call(message.irVersion) : options.longs === Number ? new $util.LongBits(message.irVersion.low >>> 0, message.irVersion.high >>> 0).toNumber() : message.irVersion;\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                object.producerName = message.producerName;\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                object.producerVersion = message.producerVersion;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (typeof message.modelVersion === \"number\")\n                    object.modelVersion = options.longs === String ? String(message.modelVersion) : message.modelVersion;\n                else\n                    object.modelVersion = options.longs === String ? $util.Long.prototype.toString.call(message.modelVersion) : options.longs === Number ? new $util.LongBits(message.modelVersion.low >>> 0, message.modelVersion.high >>> 0).toNumber() : message.modelVersion;\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                object.graph = $root.onnx.GraphProto.toObject(message.graph, options);\n            if (message.opsetImport && message.opsetImport.length) {\n                object.opsetImport = [];\n                for (var j = 0; j < message.opsetImport.length; ++j)\n                    object.opsetImport[j] = $root.onnx.OperatorSetIdProto.toObject(message.opsetImport[j], options);\n            }\n            if (message.metadataProps && message.metadataProps.length) {\n                object.metadataProps = [];\n                for (var j = 0; j < message.metadataProps.length; ++j)\n                    object.metadataProps[j] = $root.onnx.StringStringEntryProto.toObject(message.metadataProps[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this ModelProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ModelProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ModelProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ModelProto;\n    })();\n\n    onnx.StringStringEntryProto = (function() {\n\n        /**\n         * Properties of a StringStringEntryProto.\n         * @memberof onnx\n         * @interface IStringStringEntryProto\n         * @property {string|null} [key] StringStringEntryProto key\n         * @property {string|null} [value] StringStringEntryProto value\n         */\n\n        /**\n         * Constructs a new StringStringEntryProto.\n         * @memberof onnx\n         * @classdesc Represents a StringStringEntryProto.\n         * @implements IStringStringEntryProto\n         * @constructor\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         */\n        function StringStringEntryProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * StringStringEntryProto key.\n         * @member {string} key\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.key = \"\";\n\n        /**\n         * StringStringEntryProto value.\n         * @member {string} value\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.value = \"\";\n\n        /**\n         * Creates a new StringStringEntryProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto instance\n         */\n        StringStringEntryProto.create = function create(properties) {\n            return new StringStringEntryProto(properties);\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message, length delimited. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.StringStringEntryProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StringStringEntryProto message.\n         * @function verify\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StringStringEntryProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                if (!$util.isString(message.key))\n                    return \"key: string expected\";\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                if (!$util.isString(message.value))\n                    return \"value: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StringStringEntryProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         */\n        StringStringEntryProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.StringStringEntryProto)\n                return object;\n            var message = new $root.onnx.StringStringEntryProto();\n            if (object.key != null)\n                message.key = String(object.key);\n            if (object.value != null)\n                message.value = String(object.value);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a StringStringEntryProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.StringStringEntryProto} message StringStringEntryProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StringStringEntryProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.key = \"\";\n                object.value = \"\";\n            }\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                object.key = message.key;\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                object.value = message.value;\n            return object;\n        };\n\n        /**\n         * Converts this StringStringEntryProto to JSON.\n         * @function toJSON\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StringStringEntryProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return StringStringEntryProto;\n    })();\n\n    onnx.TensorAnnotation = (function() {\n\n        /**\n         * Properties of a TensorAnnotation.\n         * @memberof onnx\n         * @interface ITensorAnnotation\n         * @property {string|null} [tensorName] TensorAnnotation tensorName\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [quantParameterTensorNames] TensorAnnotation quantParameterTensorNames\n         */\n\n        /**\n         * Constructs a new TensorAnnotation.\n         * @memberof onnx\n         * @classdesc Represents a TensorAnnotation.\n         * @implements ITensorAnnotation\n         * @constructor\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         */\n        function TensorAnnotation(properties) {\n            this.quantParameterTensorNames = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorAnnotation tensorName.\n         * @member {string} tensorName\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.tensorName = \"\";\n\n        /**\n         * TensorAnnotation quantParameterTensorNames.\n         * @member {Array.<onnx.IStringStringEntryProto>} quantParameterTensorNames\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.quantParameterTensorNames = $util.emptyArray;\n\n        /**\n         * Creates a new TensorAnnotation instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         * @returns {onnx.TensorAnnotation} TensorAnnotation instance\n         */\n        TensorAnnotation.create = function create(properties) {\n            return new TensorAnnotation(properties);\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.tensorName);\n            if (message.quantParameterTensorNames != null && message.quantParameterTensorNames.length)\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.quantParameterTensorNames[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message, length delimited. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorAnnotation();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorName = reader.string();\n                    break;\n                case 2:\n                    if (!(message.quantParameterTensorNames && message.quantParameterTensorNames.length))\n                        message.quantParameterTensorNames = [];\n                    message.quantParameterTensorNames.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorAnnotation message.\n         * @function verify\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorAnnotation.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                if (!$util.isString(message.tensorName))\n                    return \"tensorName: string expected\";\n            if (message.quantParameterTensorNames != null && message.hasOwnProperty(\"quantParameterTensorNames\")) {\n                if (!Array.isArray(message.quantParameterTensorNames))\n                    return \"quantParameterTensorNames: array expected\";\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.quantParameterTensorNames[i]);\n                    if (error)\n                        return \"quantParameterTensorNames.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorAnnotation message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         */\n        TensorAnnotation.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorAnnotation)\n                return object;\n            var message = new $root.onnx.TensorAnnotation();\n            if (object.tensorName != null)\n                message.tensorName = String(object.tensorName);\n            if (object.quantParameterTensorNames) {\n                if (!Array.isArray(object.quantParameterTensorNames))\n                    throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: array expected\");\n                message.quantParameterTensorNames = [];\n                for (var i = 0; i < object.quantParameterTensorNames.length; ++i) {\n                    if (typeof object.quantParameterTensorNames[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: object expected\");\n                    message.quantParameterTensorNames[i] = $root.onnx.StringStringEntryProto.fromObject(object.quantParameterTensorNames[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorAnnotation message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.TensorAnnotation} message TensorAnnotation\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorAnnotation.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.quantParameterTensorNames = [];\n            if (options.defaults)\n                object.tensorName = \"\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                object.tensorName = message.tensorName;\n            if (message.quantParameterTensorNames && message.quantParameterTensorNames.length) {\n                object.quantParameterTensorNames = [];\n                for (var j = 0; j < message.quantParameterTensorNames.length; ++j)\n                    object.quantParameterTensorNames[j] = $root.onnx.StringStringEntryProto.toObject(message.quantParameterTensorNames[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorAnnotation to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorAnnotation.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return TensorAnnotation;\n    })();\n\n    onnx.GraphProto = (function() {\n\n        /**\n         * Properties of a GraphProto.\n         * @memberof onnx\n         * @interface IGraphProto\n         * @property {Array.<onnx.INodeProto>|null} [node] GraphProto node\n         * @property {string|null} [name] GraphProto name\n         * @property {Array.<onnx.ITensorProto>|null} [initializer] GraphProto initializer\n         * @property {string|null} [docString] GraphProto docString\n         * @property {Array.<onnx.IValueInfoProto>|null} [input] GraphProto input\n         * @property {Array.<onnx.IValueInfoProto>|null} [output] GraphProto output\n         * @property {Array.<onnx.IValueInfoProto>|null} [valueInfo] GraphProto valueInfo\n         * @property {Array.<onnx.ITensorAnnotation>|null} [quantizationAnnotation] GraphProto quantizationAnnotation\n         */\n\n        /**\n         * Constructs a new GraphProto.\n         * @memberof onnx\n         * @classdesc Represents a GraphProto.\n         * @implements IGraphProto\n         * @constructor\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         */\n        function GraphProto(properties) {\n            this.node = [];\n            this.initializer = [];\n            this.input = [];\n            this.output = [];\n            this.valueInfo = [];\n            this.quantizationAnnotation = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * GraphProto node.\n         * @member {Array.<onnx.INodeProto>} node\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.node = $util.emptyArray;\n\n        /**\n         * GraphProto name.\n         * @member {string} name\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.name = \"\";\n\n        /**\n         * GraphProto initializer.\n         * @member {Array.<onnx.ITensorProto>} initializer\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.initializer = $util.emptyArray;\n\n        /**\n         * GraphProto docString.\n         * @member {string} docString\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.docString = \"\";\n\n        /**\n         * GraphProto input.\n         * @member {Array.<onnx.IValueInfoProto>} input\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.input = $util.emptyArray;\n\n        /**\n         * GraphProto output.\n         * @member {Array.<onnx.IValueInfoProto>} output\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.output = $util.emptyArray;\n\n        /**\n         * GraphProto valueInfo.\n         * @member {Array.<onnx.IValueInfoProto>} valueInfo\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.valueInfo = $util.emptyArray;\n\n        /**\n         * GraphProto quantizationAnnotation.\n         * @member {Array.<onnx.ITensorAnnotation>} quantizationAnnotation\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.quantizationAnnotation = $util.emptyArray;\n\n        /**\n         * Creates a new GraphProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         * @returns {onnx.GraphProto} GraphProto instance\n         */\n        GraphProto.create = function create(properties) {\n            return new GraphProto(properties);\n        };\n\n        /**\n         * Encodes the specified GraphProto message. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.node != null && message.node.length)\n                for (var i = 0; i < message.node.length; ++i)\n                    $root.onnx.NodeProto.encode(message.node[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n            if (message.initializer != null && message.initializer.length)\n                for (var i = 0; i < message.initializer.length; ++i)\n                    $root.onnx.TensorProto.encode(message.initializer[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 10, wireType 2 =*/82).string(message.docString);\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.input[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.output[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n            if (message.valueInfo != null && message.valueInfo.length)\n                for (var i = 0; i < message.valueInfo.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.valueInfo[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.quantizationAnnotation != null && message.quantizationAnnotation.length)\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i)\n                    $root.onnx.TensorAnnotation.encode(message.quantizationAnnotation[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GraphProto message, length delimited. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.GraphProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.node && message.node.length))\n                        message.node = [];\n                    message.node.push($root.onnx.NodeProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    if (!(message.initializer && message.initializer.length))\n                        message.initializer = [];\n                    message.initializer.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.docString = reader.string();\n                    break;\n                case 11:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 12:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 13:\n                    if (!(message.valueInfo && message.valueInfo.length))\n                        message.valueInfo = [];\n                    message.valueInfo.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    if (!(message.quantizationAnnotation && message.quantizationAnnotation.length))\n                        message.quantizationAnnotation = [];\n                    message.quantizationAnnotation.push($root.onnx.TensorAnnotation.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GraphProto message.\n         * @function verify\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GraphProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.node != null && message.hasOwnProperty(\"node\")) {\n                if (!Array.isArray(message.node))\n                    return \"node: array expected\";\n                for (var i = 0; i < message.node.length; ++i) {\n                    var error = $root.onnx.NodeProto.verify(message.node[i]);\n                    if (error)\n                        return \"node.\" + error;\n                }\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.initializer != null && message.hasOwnProperty(\"initializer\")) {\n                if (!Array.isArray(message.initializer))\n                    return \"initializer: array expected\";\n                for (var i = 0; i < message.initializer.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.initializer[i]);\n                    if (error)\n                        return \"initializer.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.input[i]);\n                    if (error)\n                        return \"input.\" + error;\n                }\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.output[i]);\n                    if (error)\n                        return \"output.\" + error;\n                }\n            }\n            if (message.valueInfo != null && message.hasOwnProperty(\"valueInfo\")) {\n                if (!Array.isArray(message.valueInfo))\n                    return \"valueInfo: array expected\";\n                for (var i = 0; i < message.valueInfo.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.valueInfo[i]);\n                    if (error)\n                        return \"valueInfo.\" + error;\n                }\n            }\n            if (message.quantizationAnnotation != null && message.hasOwnProperty(\"quantizationAnnotation\")) {\n                if (!Array.isArray(message.quantizationAnnotation))\n                    return \"quantizationAnnotation: array expected\";\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i) {\n                    var error = $root.onnx.TensorAnnotation.verify(message.quantizationAnnotation[i]);\n                    if (error)\n                        return \"quantizationAnnotation.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a GraphProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.GraphProto} GraphProto\n         */\n        GraphProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.GraphProto)\n                return object;\n            var message = new $root.onnx.GraphProto();\n            if (object.node) {\n                if (!Array.isArray(object.node))\n                    throw TypeError(\".onnx.GraphProto.node: array expected\");\n                message.node = [];\n                for (var i = 0; i < object.node.length; ++i) {\n                    if (typeof object.node[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.node: object expected\");\n                    message.node[i] = $root.onnx.NodeProto.fromObject(object.node[i]);\n                }\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.initializer) {\n                if (!Array.isArray(object.initializer))\n                    throw TypeError(\".onnx.GraphProto.initializer: array expected\");\n                message.initializer = [];\n                for (var i = 0; i < object.initializer.length; ++i) {\n                    if (typeof object.initializer[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.initializer: object expected\");\n                    message.initializer[i] = $root.onnx.TensorProto.fromObject(object.initializer[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.GraphProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i) {\n                    if (typeof object.input[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.input: object expected\");\n                    message.input[i] = $root.onnx.ValueInfoProto.fromObject(object.input[i]);\n                }\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.GraphProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i) {\n                    if (typeof object.output[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.output: object expected\");\n                    message.output[i] = $root.onnx.ValueInfoProto.fromObject(object.output[i]);\n                }\n            }\n            if (object.valueInfo) {\n                if (!Array.isArray(object.valueInfo))\n                    throw TypeError(\".onnx.GraphProto.valueInfo: array expected\");\n                message.valueInfo = [];\n                for (var i = 0; i < object.valueInfo.length; ++i) {\n                    if (typeof object.valueInfo[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.valueInfo: object expected\");\n                    message.valueInfo[i] = $root.onnx.ValueInfoProto.fromObject(object.valueInfo[i]);\n                }\n            }\n            if (object.quantizationAnnotation) {\n                if (!Array.isArray(object.quantizationAnnotation))\n                    throw TypeError(\".onnx.GraphProto.quantizationAnnotation: array expected\");\n                message.quantizationAnnotation = [];\n                for (var i = 0; i < object.quantizationAnnotation.length; ++i) {\n                    if (typeof object.quantizationAnnotation[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.quantizationAnnotation: object expected\");\n                    message.quantizationAnnotation[i] = $root.onnx.TensorAnnotation.fromObject(object.quantizationAnnotation[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a GraphProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.GraphProto} message GraphProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GraphProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.node = [];\n                object.initializer = [];\n                object.input = [];\n                object.output = [];\n                object.valueInfo = [];\n                object.quantizationAnnotation = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.docString = \"\";\n            }\n            if (message.node && message.node.length) {\n                object.node = [];\n                for (var j = 0; j < message.node.length; ++j)\n                    object.node[j] = $root.onnx.NodeProto.toObject(message.node[j], options);\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.initializer && message.initializer.length) {\n                object.initializer = [];\n                for (var j = 0; j < message.initializer.length; ++j)\n                    object.initializer[j] = $root.onnx.TensorProto.toObject(message.initializer[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = $root.onnx.ValueInfoProto.toObject(message.input[j], options);\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = $root.onnx.ValueInfoProto.toObject(message.output[j], options);\n            }\n            if (message.valueInfo && message.valueInfo.length) {\n                object.valueInfo = [];\n                for (var j = 0; j < message.valueInfo.length; ++j)\n                    object.valueInfo[j] = $root.onnx.ValueInfoProto.toObject(message.valueInfo[j], options);\n            }\n            if (message.quantizationAnnotation && message.quantizationAnnotation.length) {\n                object.quantizationAnnotation = [];\n                for (var j = 0; j < message.quantizationAnnotation.length; ++j)\n                    object.quantizationAnnotation[j] = $root.onnx.TensorAnnotation.toObject(message.quantizationAnnotation[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this GraphProto to JSON.\n         * @function toJSON\n         * @memberof onnx.GraphProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GraphProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return GraphProto;\n    })();\n\n    onnx.TensorProto = (function() {\n\n        /**\n         * Properties of a TensorProto.\n         * @memberof onnx\n         * @interface ITensorProto\n         * @property {Array.<number|Long>|null} [dims] TensorProto dims\n         * @property {number|null} [dataType] TensorProto dataType\n         * @property {onnx.TensorProto.ISegment|null} [segment] TensorProto segment\n         * @property {Array.<number>|null} [floatData] TensorProto floatData\n         * @property {Array.<number>|null} [int32Data] TensorProto int32Data\n         * @property {Array.<Uint8Array>|null} [stringData] TensorProto stringData\n         * @property {Array.<number|Long>|null} [int64Data] TensorProto int64Data\n         * @property {string|null} [name] TensorProto name\n         * @property {string|null} [docString] TensorProto docString\n         * @property {Uint8Array|null} [rawData] TensorProto rawData\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [externalData] TensorProto externalData\n         * @property {onnx.TensorProto.DataLocation|null} [dataLocation] TensorProto dataLocation\n         * @property {Array.<number>|null} [doubleData] TensorProto doubleData\n         * @property {Array.<number|Long>|null} [uint64Data] TensorProto uint64Data\n         */\n\n        /**\n         * Constructs a new TensorProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorProto.\n         * @implements ITensorProto\n         * @constructor\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         */\n        function TensorProto(properties) {\n            this.dims = [];\n            this.floatData = [];\n            this.int32Data = [];\n            this.stringData = [];\n            this.int64Data = [];\n            this.externalData = [];\n            this.doubleData = [];\n            this.uint64Data = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorProto dims.\n         * @member {Array.<number|Long>} dims\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dims = $util.emptyArray;\n\n        /**\n         * TensorProto dataType.\n         * @member {number} dataType\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataType = 0;\n\n        /**\n         * TensorProto segment.\n         * @member {onnx.TensorProto.ISegment|null|undefined} segment\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.segment = null;\n\n        /**\n         * TensorProto floatData.\n         * @member {Array.<number>} floatData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.floatData = $util.emptyArray;\n\n        /**\n         * TensorProto int32Data.\n         * @member {Array.<number>} int32Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int32Data = $util.emptyArray;\n\n        /**\n         * TensorProto stringData.\n         * @member {Array.<Uint8Array>} stringData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.stringData = $util.emptyArray;\n\n        /**\n         * TensorProto int64Data.\n         * @member {Array.<number|Long>} int64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int64Data = $util.emptyArray;\n\n        /**\n         * TensorProto name.\n         * @member {string} name\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.name = \"\";\n\n        /**\n         * TensorProto docString.\n         * @member {string} docString\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.docString = \"\";\n\n        /**\n         * TensorProto rawData.\n         * @member {Uint8Array} rawData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.rawData = $util.newBuffer([]);\n\n        /**\n         * TensorProto externalData.\n         * @member {Array.<onnx.IStringStringEntryProto>} externalData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.externalData = $util.emptyArray;\n\n        /**\n         * TensorProto dataLocation.\n         * @member {onnx.TensorProto.DataLocation} dataLocation\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataLocation = 0;\n\n        /**\n         * TensorProto doubleData.\n         * @member {Array.<number>} doubleData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.doubleData = $util.emptyArray;\n\n        /**\n         * TensorProto uint64Data.\n         * @member {Array.<number|Long>} uint64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.uint64Data = $util.emptyArray;\n\n        /**\n         * Creates a new TensorProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         * @returns {onnx.TensorProto} TensorProto instance\n         */\n        TensorProto.create = function create(properties) {\n            return new TensorProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorProto message. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dims != null && message.dims.length) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                for (var i = 0; i < message.dims.length; ++i)\n                    writer.int64(message.dims[i]);\n                writer.ldelim();\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dataType);\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                $root.onnx.TensorProto.Segment.encode(message.segment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.floatData != null && message.floatData.length) {\n                writer.uint32(/* id 4, wireType 2 =*/34).fork();\n                for (var i = 0; i < message.floatData.length; ++i)\n                    writer.float(message.floatData[i]);\n                writer.ldelim();\n            }\n            if (message.int32Data != null && message.int32Data.length) {\n                writer.uint32(/* id 5, wireType 2 =*/42).fork();\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    writer.int32(message.int32Data[i]);\n                writer.ldelim();\n            }\n            if (message.stringData != null && message.stringData.length)\n                for (var i = 0; i < message.stringData.length; ++i)\n                    writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.stringData[i]);\n            if (message.int64Data != null && message.int64Data.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    writer.int64(message.int64Data[i]);\n                writer.ldelim();\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 8, wireType 2 =*/66).string(message.name);\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.rawData);\n            if (message.doubleData != null && message.doubleData.length) {\n                writer.uint32(/* id 10, wireType 2 =*/82).fork();\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    writer.double(message.doubleData[i]);\n                writer.ldelim();\n            }\n            if (message.uint64Data != null && message.uint64Data.length) {\n                writer.uint32(/* id 11, wireType 2 =*/90).fork();\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    writer.uint64(message.uint64Data[i]);\n                writer.ldelim();\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 12, wireType 2 =*/98).string(message.docString);\n            if (message.externalData != null && message.externalData.length)\n                for (var i = 0; i < message.externalData.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.externalData[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.dataLocation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorProto message, length delimited. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dims && message.dims.length))\n                        message.dims = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.dims.push(reader.int64());\n                    } else\n                        message.dims.push(reader.int64());\n                    break;\n                case 2:\n                    message.dataType = reader.int32();\n                    break;\n                case 3:\n                    message.segment = $root.onnx.TensorProto.Segment.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if (!(message.floatData && message.floatData.length))\n                        message.floatData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floatData.push(reader.float());\n                    } else\n                        message.floatData.push(reader.float());\n                    break;\n                case 5:\n                    if (!(message.int32Data && message.int32Data.length))\n                        message.int32Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int32Data.push(reader.int32());\n                    } else\n                        message.int32Data.push(reader.int32());\n                    break;\n                case 6:\n                    if (!(message.stringData && message.stringData.length))\n                        message.stringData = [];\n                    message.stringData.push(reader.bytes());\n                    break;\n                case 7:\n                    if (!(message.int64Data && message.int64Data.length))\n                        message.int64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int64Data.push(reader.int64());\n                    } else\n                        message.int64Data.push(reader.int64());\n                    break;\n                case 8:\n                    message.name = reader.string();\n                    break;\n                case 12:\n                    message.docString = reader.string();\n                    break;\n                case 9:\n                    message.rawData = reader.bytes();\n                    break;\n                case 13:\n                    if (!(message.externalData && message.externalData.length))\n                        message.externalData = [];\n                    message.externalData.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    message.dataLocation = reader.int32();\n                    break;\n                case 10:\n                    if (!(message.doubleData && message.doubleData.length))\n                        message.doubleData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.doubleData.push(reader.double());\n                    } else\n                        message.doubleData.push(reader.double());\n                    break;\n                case 11:\n                    if (!(message.uint64Data && message.uint64Data.length))\n                        message.uint64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.uint64Data.push(reader.uint64());\n                    } else\n                        message.uint64Data.push(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorProto message.\n         * @function verify\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dims != null && message.hasOwnProperty(\"dims\")) {\n                if (!Array.isArray(message.dims))\n                    return \"dims: array expected\";\n                for (var i = 0; i < message.dims.length; ++i)\n                    if (!$util.isInteger(message.dims[i]) && !(message.dims[i] && $util.isInteger(message.dims[i].low) && $util.isInteger(message.dims[i].high)))\n                        return \"dims: integer|Long[] expected\";\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                if (!$util.isInteger(message.dataType))\n                    return \"dataType: integer expected\";\n            if (message.segment != null && message.hasOwnProperty(\"segment\")) {\n                var error = $root.onnx.TensorProto.Segment.verify(message.segment);\n                if (error)\n                    return \"segment.\" + error;\n            }\n            if (message.floatData != null && message.hasOwnProperty(\"floatData\")) {\n                if (!Array.isArray(message.floatData))\n                    return \"floatData: array expected\";\n                for (var i = 0; i < message.floatData.length; ++i)\n                    if (typeof message.floatData[i] !== \"number\")\n                        return \"floatData: number[] expected\";\n            }\n            if (message.int32Data != null && message.hasOwnProperty(\"int32Data\")) {\n                if (!Array.isArray(message.int32Data))\n                    return \"int32Data: array expected\";\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    if (!$util.isInteger(message.int32Data[i]))\n                        return \"int32Data: integer[] expected\";\n            }\n            if (message.stringData != null && message.hasOwnProperty(\"stringData\")) {\n                if (!Array.isArray(message.stringData))\n                    return \"stringData: array expected\";\n                for (var i = 0; i < message.stringData.length; ++i)\n                    if (!(message.stringData[i] && typeof message.stringData[i].length === \"number\" || $util.isString(message.stringData[i])))\n                        return \"stringData: buffer[] expected\";\n            }\n            if (message.int64Data != null && message.hasOwnProperty(\"int64Data\")) {\n                if (!Array.isArray(message.int64Data))\n                    return \"int64Data: array expected\";\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    if (!$util.isInteger(message.int64Data[i]) && !(message.int64Data[i] && $util.isInteger(message.int64Data[i].low) && $util.isInteger(message.int64Data[i].high)))\n                        return \"int64Data: integer|Long[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                if (!(message.rawData && typeof message.rawData.length === \"number\" || $util.isString(message.rawData)))\n                    return \"rawData: buffer expected\";\n            if (message.externalData != null && message.hasOwnProperty(\"externalData\")) {\n                if (!Array.isArray(message.externalData))\n                    return \"externalData: array expected\";\n                for (var i = 0; i < message.externalData.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.externalData[i]);\n                    if (error)\n                        return \"externalData.\" + error;\n                }\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                switch (message.dataLocation) {\n                default:\n                    return \"dataLocation: enum value expected\";\n                case 0:\n                case 1:\n                    break;\n                }\n            if (message.doubleData != null && message.hasOwnProperty(\"doubleData\")) {\n                if (!Array.isArray(message.doubleData))\n                    return \"doubleData: array expected\";\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    if (typeof message.doubleData[i] !== \"number\")\n                        return \"doubleData: number[] expected\";\n            }\n            if (message.uint64Data != null && message.hasOwnProperty(\"uint64Data\")) {\n                if (!Array.isArray(message.uint64Data))\n                    return \"uint64Data: array expected\";\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    if (!$util.isInteger(message.uint64Data[i]) && !(message.uint64Data[i] && $util.isInteger(message.uint64Data[i].low) && $util.isInteger(message.uint64Data[i].high)))\n                        return \"uint64Data: integer|Long[] expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorProto} TensorProto\n         */\n        TensorProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorProto)\n                return object;\n            var message = new $root.onnx.TensorProto();\n            if (object.dims) {\n                if (!Array.isArray(object.dims))\n                    throw TypeError(\".onnx.TensorProto.dims: array expected\");\n                message.dims = [];\n                for (var i = 0; i < object.dims.length; ++i)\n                    if ($util.Long)\n                        (message.dims[i] = $util.Long.fromValue(object.dims[i])).unsigned = false;\n                    else if (typeof object.dims[i] === \"string\")\n                        message.dims[i] = parseInt(object.dims[i], 10);\n                    else if (typeof object.dims[i] === \"number\")\n                        message.dims[i] = object.dims[i];\n                    else if (typeof object.dims[i] === \"object\")\n                        message.dims[i] = new $util.LongBits(object.dims[i].low >>> 0, object.dims[i].high >>> 0).toNumber();\n            }\n            if (object.dataType != null)\n                message.dataType = object.dataType | 0;\n            if (object.segment != null) {\n                if (typeof object.segment !== \"object\")\n                    throw TypeError(\".onnx.TensorProto.segment: object expected\");\n                message.segment = $root.onnx.TensorProto.Segment.fromObject(object.segment);\n            }\n            if (object.floatData) {\n                if (!Array.isArray(object.floatData))\n                    throw TypeError(\".onnx.TensorProto.floatData: array expected\");\n                message.floatData = [];\n                for (var i = 0; i < object.floatData.length; ++i)\n                    message.floatData[i] = Number(object.floatData[i]);\n            }\n            if (object.int32Data) {\n                if (!Array.isArray(object.int32Data))\n                    throw TypeError(\".onnx.TensorProto.int32Data: array expected\");\n                message.int32Data = [];\n                for (var i = 0; i < object.int32Data.length; ++i)\n                    message.int32Data[i] = object.int32Data[i] | 0;\n            }\n            if (object.stringData) {\n                if (!Array.isArray(object.stringData))\n                    throw TypeError(\".onnx.TensorProto.stringData: array expected\");\n                message.stringData = [];\n                for (var i = 0; i < object.stringData.length; ++i)\n                    if (typeof object.stringData[i] === \"string\")\n                        $util.base64.decode(object.stringData[i], message.stringData[i] = $util.newBuffer($util.base64.length(object.stringData[i])), 0);\n                    else if (object.stringData[i].length)\n                        message.stringData[i] = object.stringData[i];\n            }\n            if (object.int64Data) {\n                if (!Array.isArray(object.int64Data))\n                    throw TypeError(\".onnx.TensorProto.int64Data: array expected\");\n                message.int64Data = [];\n                for (var i = 0; i < object.int64Data.length; ++i)\n                    if ($util.Long)\n                        (message.int64Data[i] = $util.Long.fromValue(object.int64Data[i])).unsigned = false;\n                    else if (typeof object.int64Data[i] === \"string\")\n                        message.int64Data[i] = parseInt(object.int64Data[i], 10);\n                    else if (typeof object.int64Data[i] === \"number\")\n                        message.int64Data[i] = object.int64Data[i];\n                    else if (typeof object.int64Data[i] === \"object\")\n                        message.int64Data[i] = new $util.LongBits(object.int64Data[i].low >>> 0, object.int64Data[i].high >>> 0).toNumber();\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.rawData != null)\n                if (typeof object.rawData === \"string\")\n                    $util.base64.decode(object.rawData, message.rawData = $util.newBuffer($util.base64.length(object.rawData)), 0);\n                else if (object.rawData.length)\n                    message.rawData = object.rawData;\n            if (object.externalData) {\n                if (!Array.isArray(object.externalData))\n                    throw TypeError(\".onnx.TensorProto.externalData: array expected\");\n                message.externalData = [];\n                for (var i = 0; i < object.externalData.length; ++i) {\n                    if (typeof object.externalData[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorProto.externalData: object expected\");\n                    message.externalData[i] = $root.onnx.StringStringEntryProto.fromObject(object.externalData[i]);\n                }\n            }\n            switch (object.dataLocation) {\n            case \"DEFAULT\":\n            case 0:\n                message.dataLocation = 0;\n                break;\n            case \"EXTERNAL\":\n            case 1:\n                message.dataLocation = 1;\n                break;\n            }\n            if (object.doubleData) {\n                if (!Array.isArray(object.doubleData))\n                    throw TypeError(\".onnx.TensorProto.doubleData: array expected\");\n                message.doubleData = [];\n                for (var i = 0; i < object.doubleData.length; ++i)\n                    message.doubleData[i] = Number(object.doubleData[i]);\n            }\n            if (object.uint64Data) {\n                if (!Array.isArray(object.uint64Data))\n                    throw TypeError(\".onnx.TensorProto.uint64Data: array expected\");\n                message.uint64Data = [];\n                for (var i = 0; i < object.uint64Data.length; ++i)\n                    if ($util.Long)\n                        (message.uint64Data[i] = $util.Long.fromValue(object.uint64Data[i])).unsigned = true;\n                    else if (typeof object.uint64Data[i] === \"string\")\n                        message.uint64Data[i] = parseInt(object.uint64Data[i], 10);\n                    else if (typeof object.uint64Data[i] === \"number\")\n                        message.uint64Data[i] = object.uint64Data[i];\n                    else if (typeof object.uint64Data[i] === \"object\")\n                        message.uint64Data[i] = new $util.LongBits(object.uint64Data[i].low >>> 0, object.uint64Data[i].high >>> 0).toNumber(true);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.TensorProto} message TensorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.dims = [];\n                object.floatData = [];\n                object.int32Data = [];\n                object.stringData = [];\n                object.int64Data = [];\n                object.doubleData = [];\n                object.uint64Data = [];\n                object.externalData = [];\n            }\n            if (options.defaults) {\n                object.dataType = 0;\n                object.segment = null;\n                object.name = \"\";\n                if (options.bytes === String)\n                    object.rawData = \"\";\n                else {\n                    object.rawData = [];\n                    if (options.bytes !== Array)\n                        object.rawData = $util.newBuffer(object.rawData);\n                }\n                object.docString = \"\";\n                object.dataLocation = options.enums === String ? \"DEFAULT\" : 0;\n            }\n            if (message.dims && message.dims.length) {\n                object.dims = [];\n                for (var j = 0; j < message.dims.length; ++j)\n                    if (typeof message.dims[j] === \"number\")\n                        object.dims[j] = options.longs === String ? String(message.dims[j]) : message.dims[j];\n                    else\n                        object.dims[j] = options.longs === String ? $util.Long.prototype.toString.call(message.dims[j]) : options.longs === Number ? new $util.LongBits(message.dims[j].low >>> 0, message.dims[j].high >>> 0).toNumber() : message.dims[j];\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                object.dataType = message.dataType;\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                object.segment = $root.onnx.TensorProto.Segment.toObject(message.segment, options);\n            if (message.floatData && message.floatData.length) {\n                object.floatData = [];\n                for (var j = 0; j < message.floatData.length; ++j)\n                    object.floatData[j] = options.json && !isFinite(message.floatData[j]) ? String(message.floatData[j]) : message.floatData[j];\n            }\n            if (message.int32Data && message.int32Data.length) {\n                object.int32Data = [];\n                for (var j = 0; j < message.int32Data.length; ++j)\n                    object.int32Data[j] = message.int32Data[j];\n            }\n            if (message.stringData && message.stringData.length) {\n                object.stringData = [];\n                for (var j = 0; j < message.stringData.length; ++j)\n                    object.stringData[j] = options.bytes === String ? $util.base64.encode(message.stringData[j], 0, message.stringData[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.stringData[j]) : message.stringData[j];\n            }\n            if (message.int64Data && message.int64Data.length) {\n                object.int64Data = [];\n                for (var j = 0; j < message.int64Data.length; ++j)\n                    if (typeof message.int64Data[j] === \"number\")\n                        object.int64Data[j] = options.longs === String ? String(message.int64Data[j]) : message.int64Data[j];\n                    else\n                        object.int64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.int64Data[j]) : options.longs === Number ? new $util.LongBits(message.int64Data[j].low >>> 0, message.int64Data[j].high >>> 0).toNumber() : message.int64Data[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                object.rawData = options.bytes === String ? $util.base64.encode(message.rawData, 0, message.rawData.length) : options.bytes === Array ? Array.prototype.slice.call(message.rawData) : message.rawData;\n            if (message.doubleData && message.doubleData.length) {\n                object.doubleData = [];\n                for (var j = 0; j < message.doubleData.length; ++j)\n                    object.doubleData[j] = options.json && !isFinite(message.doubleData[j]) ? String(message.doubleData[j]) : message.doubleData[j];\n            }\n            if (message.uint64Data && message.uint64Data.length) {\n                object.uint64Data = [];\n                for (var j = 0; j < message.uint64Data.length; ++j)\n                    if (typeof message.uint64Data[j] === \"number\")\n                        object.uint64Data[j] = options.longs === String ? String(message.uint64Data[j]) : message.uint64Data[j];\n                    else\n                        object.uint64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.uint64Data[j]) : options.longs === Number ? new $util.LongBits(message.uint64Data[j].low >>> 0, message.uint64Data[j].high >>> 0).toNumber(true) : message.uint64Data[j];\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.externalData && message.externalData.length) {\n                object.externalData = [];\n                for (var j = 0; j < message.externalData.length; ++j)\n                    object.externalData[j] = $root.onnx.StringStringEntryProto.toObject(message.externalData[j], options);\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                object.dataLocation = options.enums === String ? $root.onnx.TensorProto.DataLocation[message.dataLocation] : message.dataLocation;\n            return object;\n        };\n\n        /**\n         * Converts this TensorProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * DataType enum.\n         * @name onnx.TensorProto.DataType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} UINT8=2 UINT8 value\n         * @property {number} INT8=3 INT8 value\n         * @property {number} UINT16=4 UINT16 value\n         * @property {number} INT16=5 INT16 value\n         * @property {number} INT32=6 INT32 value\n         * @property {number} INT64=7 INT64 value\n         * @property {number} STRING=8 STRING value\n         * @property {number} BOOL=9 BOOL value\n         * @property {number} FLOAT16=10 FLOAT16 value\n         * @property {number} DOUBLE=11 DOUBLE value\n         * @property {number} UINT32=12 UINT32 value\n         * @property {number} UINT64=13 UINT64 value\n         * @property {number} COMPLEX64=14 COMPLEX64 value\n         * @property {number} COMPLEX128=15 COMPLEX128 value\n         * @property {number} BFLOAT16=16 BFLOAT16 value\n         */\n        TensorProto.DataType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"UINT8\"] = 2;\n            values[valuesById[3] = \"INT8\"] = 3;\n            values[valuesById[4] = \"UINT16\"] = 4;\n            values[valuesById[5] = \"INT16\"] = 5;\n            values[valuesById[6] = \"INT32\"] = 6;\n            values[valuesById[7] = \"INT64\"] = 7;\n            values[valuesById[8] = \"STRING\"] = 8;\n            values[valuesById[9] = \"BOOL\"] = 9;\n            values[valuesById[10] = \"FLOAT16\"] = 10;\n            values[valuesById[11] = \"DOUBLE\"] = 11;\n            values[valuesById[12] = \"UINT32\"] = 12;\n            values[valuesById[13] = \"UINT64\"] = 13;\n            values[valuesById[14] = \"COMPLEX64\"] = 14;\n            values[valuesById[15] = \"COMPLEX128\"] = 15;\n            values[valuesById[16] = \"BFLOAT16\"] = 16;\n            return values;\n        })();\n\n        TensorProto.Segment = (function() {\n\n            /**\n             * Properties of a Segment.\n             * @memberof onnx.TensorProto\n             * @interface ISegment\n             * @property {number|Long|null} [begin] Segment begin\n             * @property {number|Long|null} [end] Segment end\n             */\n\n            /**\n             * Constructs a new Segment.\n             * @memberof onnx.TensorProto\n             * @classdesc Represents a Segment.\n             * @implements ISegment\n             * @constructor\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             */\n            function Segment(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Segment begin.\n             * @member {number|Long} begin\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.begin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Segment end.\n             * @member {number|Long} end\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.end = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Creates a new Segment instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             * @returns {onnx.TensorProto.Segment} Segment instance\n             */\n            Segment.create = function create(properties) {\n                return new Segment(properties);\n            };\n\n            /**\n             * Encodes the specified Segment message. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.begin);\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.end);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Segment message, length delimited. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto.Segment();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.begin = reader.int64();\n                        break;\n                    case 2:\n                        message.end = reader.int64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Segment message.\n             * @function verify\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Segment.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (!$util.isInteger(message.begin) && !(message.begin && $util.isInteger(message.begin.low) && $util.isInteger(message.begin.high)))\n                        return \"begin: integer|Long expected\";\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (!$util.isInteger(message.end) && !(message.end && $util.isInteger(message.end.low) && $util.isInteger(message.end.high)))\n                        return \"end: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Segment message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorProto.Segment} Segment\n             */\n            Segment.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorProto.Segment)\n                    return object;\n                var message = new $root.onnx.TensorProto.Segment();\n                if (object.begin != null)\n                    if ($util.Long)\n                        (message.begin = $util.Long.fromValue(object.begin)).unsigned = false;\n                    else if (typeof object.begin === \"string\")\n                        message.begin = parseInt(object.begin, 10);\n                    else if (typeof object.begin === \"number\")\n                        message.begin = object.begin;\n                    else if (typeof object.begin === \"object\")\n                        message.begin = new $util.LongBits(object.begin.low >>> 0, object.begin.high >>> 0).toNumber();\n                if (object.end != null)\n                    if ($util.Long)\n                        (message.end = $util.Long.fromValue(object.end)).unsigned = false;\n                    else if (typeof object.end === \"string\")\n                        message.end = parseInt(object.end, 10);\n                    else if (typeof object.end === \"number\")\n                        message.end = object.end;\n                    else if (typeof object.end === \"object\")\n                        message.end = new $util.LongBits(object.end.low >>> 0, object.end.high >>> 0).toNumber();\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Segment message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.Segment} message Segment\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Segment.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.begin = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.begin = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.end = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.end = options.longs === String ? \"0\" : 0;\n                }\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (typeof message.begin === \"number\")\n                        object.begin = options.longs === String ? String(message.begin) : message.begin;\n                    else\n                        object.begin = options.longs === String ? $util.Long.prototype.toString.call(message.begin) : options.longs === Number ? new $util.LongBits(message.begin.low >>> 0, message.begin.high >>> 0).toNumber() : message.begin;\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (typeof message.end === \"number\")\n                        object.end = options.longs === String ? String(message.end) : message.end;\n                    else\n                        object.end = options.longs === String ? $util.Long.prototype.toString.call(message.end) : options.longs === Number ? new $util.LongBits(message.end.low >>> 0, message.end.high >>> 0).toNumber() : message.end;\n                return object;\n            };\n\n            /**\n             * Converts this Segment to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Segment.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Segment;\n        })();\n\n        /**\n         * DataLocation enum.\n         * @name onnx.TensorProto.DataLocation\n         * @enum {string}\n         * @property {number} DEFAULT=0 DEFAULT value\n         * @property {number} EXTERNAL=1 EXTERNAL value\n         */\n        TensorProto.DataLocation = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"DEFAULT\"] = 0;\n            values[valuesById[1] = \"EXTERNAL\"] = 1;\n            return values;\n        })();\n\n        return TensorProto;\n    })();\n\n    onnx.TensorShapeProto = (function() {\n\n        /**\n         * Properties of a TensorShapeProto.\n         * @memberof onnx\n         * @interface ITensorShapeProto\n         * @property {Array.<onnx.TensorShapeProto.IDimension>|null} [dim] TensorShapeProto dim\n         */\n\n        /**\n         * Constructs a new TensorShapeProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorShapeProto.\n         * @implements ITensorShapeProto\n         * @constructor\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         */\n        function TensorShapeProto(properties) {\n            this.dim = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorShapeProto dim.\n         * @member {Array.<onnx.TensorShapeProto.IDimension>} dim\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         */\n        TensorShapeProto.prototype.dim = $util.emptyArray;\n\n        /**\n         * Creates a new TensorShapeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         * @returns {onnx.TensorShapeProto} TensorShapeProto instance\n         */\n        TensorShapeProto.create = function create(properties) {\n            return new TensorShapeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dim != null && message.dim.length)\n                for (var i = 0; i < message.dim.length; ++i)\n                    $root.onnx.TensorShapeProto.Dimension.encode(message.dim[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dim && message.dim.length))\n                        message.dim = [];\n                    message.dim.push($root.onnx.TensorShapeProto.Dimension.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorShapeProto message.\n         * @function verify\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorShapeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dim != null && message.hasOwnProperty(\"dim\")) {\n                if (!Array.isArray(message.dim))\n                    return \"dim: array expected\";\n                for (var i = 0; i < message.dim.length; ++i) {\n                    var error = $root.onnx.TensorShapeProto.Dimension.verify(message.dim[i]);\n                    if (error)\n                        return \"dim.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorShapeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         */\n        TensorShapeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorShapeProto)\n                return object;\n            var message = new $root.onnx.TensorShapeProto();\n            if (object.dim) {\n                if (!Array.isArray(object.dim))\n                    throw TypeError(\".onnx.TensorShapeProto.dim: array expected\");\n                message.dim = [];\n                for (var i = 0; i < object.dim.length; ++i) {\n                    if (typeof object.dim[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorShapeProto.dim: object expected\");\n                    message.dim[i] = $root.onnx.TensorShapeProto.Dimension.fromObject(object.dim[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorShapeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.TensorShapeProto} message TensorShapeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorShapeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.dim = [];\n            if (message.dim && message.dim.length) {\n                object.dim = [];\n                for (var j = 0; j < message.dim.length; ++j)\n                    object.dim[j] = $root.onnx.TensorShapeProto.Dimension.toObject(message.dim[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorShapeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorShapeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TensorShapeProto.Dimension = (function() {\n\n            /**\n             * Properties of a Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @interface IDimension\n             * @property {number|Long|null} [dimValue] Dimension dimValue\n             * @property {string|null} [dimParam] Dimension dimParam\n             * @property {string|null} [denotation] Dimension denotation\n             */\n\n            /**\n             * Constructs a new Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @classdesc Represents a Dimension.\n             * @implements IDimension\n             * @constructor\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             */\n            function Dimension(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Dimension dimValue.\n             * @member {number|Long} dimValue\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Dimension dimParam.\n             * @member {string} dimParam\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimParam = \"\";\n\n            /**\n             * Dimension denotation.\n             * @member {string} denotation\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.denotation = \"\";\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * Dimension value.\n             * @member {\"dimValue\"|\"dimParam\"|undefined} value\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Object.defineProperty(Dimension.prototype, \"value\", {\n                get: $util.oneOfGetter($oneOfFields = [\"dimValue\", \"dimParam\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new Dimension instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension instance\n             */\n            Dimension.create = function create(properties) {\n                return new Dimension(properties);\n            };\n\n            /**\n             * Encodes the specified Dimension message. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.dimValue);\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.dimParam);\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.denotation);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Dimension message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto.Dimension();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dimValue = reader.int64();\n                        break;\n                    case 2:\n                        message.dimParam = reader.string();\n                        break;\n                    case 3:\n                        message.denotation = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Dimension message.\n             * @function verify\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Dimension.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                var properties = {};\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    properties.value = 1;\n                    if (!$util.isInteger(message.dimValue) && !(message.dimValue && $util.isInteger(message.dimValue.low) && $util.isInteger(message.dimValue.high)))\n                        return \"dimValue: integer|Long expected\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    if (properties.value === 1)\n                        return \"value: multiple values\";\n                    properties.value = 1;\n                    if (!$util.isString(message.dimParam))\n                        return \"dimParam: string expected\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    if (!$util.isString(message.denotation))\n                        return \"denotation: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Dimension message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             */\n            Dimension.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorShapeProto.Dimension)\n                    return object;\n                var message = new $root.onnx.TensorShapeProto.Dimension();\n                if (object.dimValue != null)\n                    if ($util.Long)\n                        (message.dimValue = $util.Long.fromValue(object.dimValue)).unsigned = false;\n                    else if (typeof object.dimValue === \"string\")\n                        message.dimValue = parseInt(object.dimValue, 10);\n                    else if (typeof object.dimValue === \"number\")\n                        message.dimValue = object.dimValue;\n                    else if (typeof object.dimValue === \"object\")\n                        message.dimValue = new $util.LongBits(object.dimValue.low >>> 0, object.dimValue.high >>> 0).toNumber();\n                if (object.dimParam != null)\n                    message.dimParam = String(object.dimParam);\n                if (object.denotation != null)\n                    message.denotation = String(object.denotation);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Dimension message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.Dimension} message Dimension\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Dimension.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.denotation = \"\";\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    if (typeof message.dimValue === \"number\")\n                        object.dimValue = options.longs === String ? String(message.dimValue) : message.dimValue;\n                    else\n                        object.dimValue = options.longs === String ? $util.Long.prototype.toString.call(message.dimValue) : options.longs === Number ? new $util.LongBits(message.dimValue.low >>> 0, message.dimValue.high >>> 0).toNumber() : message.dimValue;\n                    if (options.oneofs)\n                        object.value = \"dimValue\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    object.dimParam = message.dimParam;\n                    if (options.oneofs)\n                        object.value = \"dimParam\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    object.denotation = message.denotation;\n                return object;\n            };\n\n            /**\n             * Converts this Dimension to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Dimension.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Dimension;\n        })();\n\n        return TensorShapeProto;\n    })();\n\n    onnx.TypeProto = (function() {\n\n        /**\n         * Properties of a TypeProto.\n         * @memberof onnx\n         * @interface ITypeProto\n         * @property {onnx.TypeProto.ITensor|null} [tensorType] TypeProto tensorType\n         * @property {string|null} [denotation] TypeProto denotation\n         */\n\n        /**\n         * Constructs a new TypeProto.\n         * @memberof onnx\n         * @classdesc Represents a TypeProto.\n         * @implements ITypeProto\n         * @constructor\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         */\n        function TypeProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TypeProto tensorType.\n         * @member {onnx.TypeProto.ITensor|null|undefined} tensorType\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.tensorType = null;\n\n        /**\n         * TypeProto denotation.\n         * @member {string} denotation\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.denotation = \"\";\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * TypeProto value.\n         * @member {\"tensorType\"|undefined} value\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        Object.defineProperty(TypeProto.prototype, \"value\", {\n            get: $util.oneOfGetter($oneOfFields = [\"tensorType\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new TypeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         * @returns {onnx.TypeProto} TypeProto instance\n         */\n        TypeProto.create = function create(properties) {\n            return new TypeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TypeProto message. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\"))\n                $root.onnx.TypeProto.Tensor.encode(message.tensorType, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.denotation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TypeProto message, length delimited. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorType = $root.onnx.TypeProto.Tensor.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.denotation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TypeProto message.\n         * @function verify\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TypeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            var properties = {};\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                properties.value = 1;\n                {\n                    var error = $root.onnx.TypeProto.Tensor.verify(message.tensorType);\n                    if (error)\n                        return \"tensorType.\" + error;\n                }\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                if (!$util.isString(message.denotation))\n                    return \"denotation: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TypeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TypeProto} TypeProto\n         */\n        TypeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TypeProto)\n                return object;\n            var message = new $root.onnx.TypeProto();\n            if (object.tensorType != null) {\n                if (typeof object.tensorType !== \"object\")\n                    throw TypeError(\".onnx.TypeProto.tensorType: object expected\");\n                message.tensorType = $root.onnx.TypeProto.Tensor.fromObject(object.tensorType);\n            }\n            if (object.denotation != null)\n                message.denotation = String(object.denotation);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TypeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.TypeProto} message TypeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TypeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                object.denotation = \"\";\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                object.tensorType = $root.onnx.TypeProto.Tensor.toObject(message.tensorType, options);\n                if (options.oneofs)\n                    object.value = \"tensorType\";\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                object.denotation = message.denotation;\n            return object;\n        };\n\n        /**\n         * Converts this TypeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TypeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TypeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TypeProto.Tensor = (function() {\n\n            /**\n             * Properties of a Tensor.\n             * @memberof onnx.TypeProto\n             * @interface ITensor\n             * @property {number|null} [elemType] Tensor elemType\n             * @property {onnx.ITensorShapeProto|null} [shape] Tensor shape\n             */\n\n            /**\n             * Constructs a new Tensor.\n             * @memberof onnx.TypeProto\n             * @classdesc Represents a Tensor.\n             * @implements ITensor\n             * @constructor\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             */\n            function Tensor(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Tensor elemType.\n             * @member {number} elemType\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.elemType = 0;\n\n            /**\n             * Tensor shape.\n             * @member {onnx.ITensorShapeProto|null|undefined} shape\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.shape = null;\n\n            /**\n             * Creates a new Tensor instance using the specified properties.\n             * @function create\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             * @returns {onnx.TypeProto.Tensor} Tensor instance\n             */\n            Tensor.create = function create(properties) {\n                return new Tensor(properties);\n            };\n\n            /**\n             * Encodes the specified Tensor message. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.elemType);\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    $root.onnx.TensorShapeProto.encode(message.shape, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Tensor message, length delimited. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto.Tensor();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.elemType = reader.int32();\n                        break;\n                    case 2:\n                        message.shape = $root.onnx.TensorShapeProto.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Tensor message.\n             * @function verify\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Tensor.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    if (!$util.isInteger(message.elemType))\n                        return \"elemType: integer expected\";\n                if (message.shape != null && message.hasOwnProperty(\"shape\")) {\n                    var error = $root.onnx.TensorShapeProto.verify(message.shape);\n                    if (error)\n                        return \"shape.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Tensor message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             */\n            Tensor.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TypeProto.Tensor)\n                    return object;\n                var message = new $root.onnx.TypeProto.Tensor();\n                if (object.elemType != null)\n                    message.elemType = object.elemType | 0;\n                if (object.shape != null) {\n                    if (typeof object.shape !== \"object\")\n                        throw TypeError(\".onnx.TypeProto.Tensor.shape: object expected\");\n                    message.shape = $root.onnx.TensorShapeProto.fromObject(object.shape);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Tensor message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.Tensor} message Tensor\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Tensor.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.elemType = 0;\n                    object.shape = null;\n                }\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    object.elemType = message.elemType;\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    object.shape = $root.onnx.TensorShapeProto.toObject(message.shape, options);\n                return object;\n            };\n\n            /**\n             * Converts this Tensor to JSON.\n             * @function toJSON\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Tensor.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Tensor;\n        })();\n\n        return TypeProto;\n    })();\n\n    onnx.OperatorSetIdProto = (function() {\n\n        /**\n         * Properties of an OperatorSetIdProto.\n         * @memberof onnx\n         * @interface IOperatorSetIdProto\n         * @property {string|null} [domain] OperatorSetIdProto domain\n         * @property {number|Long|null} [version] OperatorSetIdProto version\n         */\n\n        /**\n         * Constructs a new OperatorSetIdProto.\n         * @memberof onnx\n         * @classdesc Represents an OperatorSetIdProto.\n         * @implements IOperatorSetIdProto\n         * @constructor\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         */\n        function OperatorSetIdProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * OperatorSetIdProto domain.\n         * @member {string} domain\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.domain = \"\";\n\n        /**\n         * OperatorSetIdProto version.\n         * @member {number|Long} version\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new OperatorSetIdProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto instance\n         */\n        OperatorSetIdProto.create = function create(properties) {\n            return new OperatorSetIdProto(properties);\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domain);\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.version);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message, length delimited. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.OperatorSetIdProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.domain = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an OperatorSetIdProto message.\n         * @function verify\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        OperatorSetIdProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))\n                    return \"version: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates an OperatorSetIdProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         */\n        OperatorSetIdProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.OperatorSetIdProto)\n                return object;\n            var message = new $root.onnx.OperatorSetIdProto();\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.version != null)\n                if ($util.Long)\n                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;\n                else if (typeof object.version === \"string\")\n                    message.version = parseInt(object.version, 10);\n                else if (typeof object.version === \"number\")\n                    message.version = object.version;\n                else if (typeof object.version === \"object\")\n                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an OperatorSetIdProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.OperatorSetIdProto} message OperatorSetIdProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        OperatorSetIdProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.version = options.longs === String ? \"0\" : 0;\n            }\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (typeof message.version === \"number\")\n                    object.version = options.longs === String ? String(message.version) : message.version;\n                else\n                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;\n            return object;\n        };\n\n        /**\n         * Converts this OperatorSetIdProto to JSON.\n         * @function toJSON\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        OperatorSetIdProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return OperatorSetIdProto;\n    })();\n\n    return onnx;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1670__;","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZE_PREFIX_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {!flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {!Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {!flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n * @param {boolean=} opt_size_prefix\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier, opt_size_prefix) {\n  var size_prefix = opt_size_prefix ? flatbuffers.SIZE_PREFIX_LENGTH : 0;\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH + size_prefix);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT + size_prefix);\n  this.addOffset(root_table);\n  if (size_prefix) {\n    this.addInt32(this.bb.capacity() - this.space);\n  }\n  this.bb.setPosition(this.space);\n};\n\n/**\n * Finalize a size prefixed buffer, pointing to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finishSizePrefixed = function (root_table, opt_file_identifier) {\n  this.finish(root_table, opt_file_identifier, true);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {!flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|!Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(1057);\n"],"names":["root","factory","exports","module","require","define","amd","a","i","self","__WEBPACK_EXTERNAL_MODULE__1670__","init","createSessionHandler","pathOrBuffer","options","session","Session","loadModel","OnnxjsSessionHandler","onnxjsBackend","OnnxjsBackend","initializeFlags","env","wasm","initTimeout","simd","proxy","numThreads","Number","isInteger","numCpuLogicalCores","navigator","cpus","length","hardwareConcurrency","Math","min","ceil","initWasm","handler","OnnxruntimeWebAssemblySessionHandler","Promise","resolve","wasmBackend","OnnxruntimeWebAssemblyBackend","registerBackend","attribute","Object","assign","this","_cacheKey","getOwnPropertyNames","sort","map","name","join","createAttributeWithCacheKey","AttributeWithCacheKeyImpl","ortFbs","onnxruntime","experimental","fbs","attributes","_attributes","Map","attr","onnx","AttributeProto","set","Attribute","getValue","getType","size","Error","key","type","value","delete","getFloat","defaultValue","get","getInt","getString","getTensor","getFloats","getInts","getStrings","getTensors","valueAndType","undefined","AttributeType","FLOAT","INT","STRING","TENSOR","FLOATS","INTS","STRINGS","TENSORS","attrType","GRAPH","GRAPHS","getValueNoCheck","LongUtil","isLong","longToNumber","arr","numberValue","Array","maybeLong","Tensor","fromProto","fromOrtTensor","utf8String","decodeUtf8String","getValueNoCheckFromOnnxFormat","getValueNoCheckFromOrtFormat","f","s","t","g","floats","ints","strings","tensors","graphs","floatsArray","intsLength","push","stringsLength","tensorsLength","backendsCache","tryLoadBackend","backendHint","backendObj","backend","obj","o","initialize","dispose","webgl","WebGLBackend","resolveBackend","hint","hints","cache","contextId","matmulMaxBatchSize","textureCacheMode","pack","async","glContext","createWebGLContext","Logger","setWithEnv","verbose","e","warning","context","WebGLSessionHandler","getFunctions","offsetToCoords","coordsToOffset","toVec","valueFrom","getCommonUtilFuncs","getInputsSamplingSnippets","getOutputSamplingSnippet","getCustomTypes","GlslLibRoutine","outputLayout","outputTextureLayout","isPacked","getPackedOutputSamplingSnippet","getUnpackedOutputSamplingSnippet","outShape","unpackedShape","outTexShape","width","height","result","funcName","getOutputScalarCoords","getOutputPacked1DCoords","getOutputPacked2DCoords","getOutputPacked3DCoords","getOutputPackedNDCoords","glsl","getGlsl","version","floatTextureSetRGBASource","output","getOutputUnpacked1DCoords","getOutputUnpacked2DCoords","getOutputUnpacked3DCoords","getOutputUnpacked4DCoords","getOutputUnpacked5DCoords","getOutputUnpacked6DCoords","floatTextureSetRSource","shape","texShape","packedTexShape","source","ArrayUtil","arraysEqual","texelsInLogicalRow","texelsInBatch","texelsInBatchN","batches","coords","b","rank","strides","coordsToCompute","coordsFromIndexSnippet","stride","line1","line2","texture2D","programInfo","inputNames","forEach","samplerName","inputLayout","inputTextureLayouts","generateShaderFuncNameFromInputSamplerName","getPackedSamplerFromInput","getUnpackedSamplerFromInput","outCoordFuncName","generateShaderFuncNameFromInputSamplerNameAtOutCoords","getPackedSamplerAtOutputCoords","getUnpackedSamplerAtOutputCoords","coordsSnippet","inShape","texName","texFuncSnippet","inRank","outRank","broadcastDims","BroadcastUtil","getBroadcastDims","getCoordsDataType","rankDiff","fields","getGlChannels","d","unpackedCoordsSnippet","isInputScalar","ShapeUtil","isOutputScalar","rows","cols","indexOf","swapLastDimsSnippet","inTexShape","getPackedSamplerScalar","getPackedSampler1D","getPackedSampler2D","getPackedSampler3D","getPackedSamplerND","getUnpackedSamplerScalar","getUnpackedSampler1D","getUnpackedSampler2D","getUnpackedSampler3D","getUnpackedSampler4D","getUnpackedSampler5D","getUnpackedSampler6D","texNumR","texNumC","valuesPerRow","squeezedShape","slice","newInputShape","squeezeInputShape","newInputLayout","JSON","parse","stringify","samplerRoutine","routineBody","getSqueezedParams","dependencies","params","index","tNumR","tNumC","squeezeShape","newShape","keptDims","stride0","stride1","routine","revDims","reverse","stride2","stride3","stride4","xScale","yScale","stridesBlock","body","layout","getValueFromSingle","varName","transpose","getPackedValueFrom","GlslLib","CoordsGlslLib","FunctionType","GlslContext","addDependency","node","GlslLibRoutineNode","returnOrderedNodes","nodes","cycleCheck","Set","alreadyTraversed","createOrderedNodes","graphNodes","dfsTraverse","has","add","TopologicalSortGlslRoutines","encodeFloat32","decodeFloat32","encode","decode","encodeUint8","endianness","EncodingGlslLib","isLittleEndian","decodeUint8","ArrayBuffer","Uint32Array","c","Uint8Array","setFragColor","getColorAsFloat","FragColorGlslLib","INLINE_FUNC_DEF_REGEX","script","match","inlineDefs","exec","split","tokens","trim","filter","v","regexString","replace","regex","RegExp","variable","declLine","newBody","paramRedecLine","replacement","libs","glslLibRoutineDependencyGraph","keys","glslRegistry","lib","libName","routinesInLib","currentNode","preprocess","shaderSource","hasMain","getDefaultFragShaderMain","replaceInlines","getFragShaderPreamble","getUniforms","variables","getImports","routinesIncluded","selectGlslLibRoutinesToBeIncluded","routines","classAndRoutine","samplers","uniformLines","sampler","arrayLength","GlslPreprocessor","VecGlslLib","ShapeUtilsGlslLib","bcastIndex","bcastMatmulIndex","offsetToIndices","indicesToOffset","incrementIndices","outputRank","dimOffset","block","indexToOffsetSingle","offsetToIndicesSingle","shapeInit","GLSL_ES_2_0","varyingVertex","varyingFrag","outputDeclaration","GLSL_ES_3_0","outputShapeLength","binaryVecFunctions","copyVec","setVecItem","getVecItem","nameOp","sub","mul","div","fname","assignmentBlock","packedTextureDataCache","unpackedTextureDataCache","calculateTextureWidthAndHeight","textureType","layoutStrategy","executeProgram","program","inputs","inputTypes","inputTextureDatas","getOrCreateTextureData","texture","cacheHint","getProgramInfoUniqueKey","artifact","programManager","getArtifact","createTextureLayoutFromTextureType","dims","outputTextureData","createTextureData","build","setArtifact","runProgram","run","tensor","TextureType","packed","td","getTextureData","dataId","unpack","packedLastDimension","adjustedKernelShape","adjustedLayout","buffer","numberData","numFeatureMaps","oldRowSize","newRowSize","Float32Array","oldOffset","newOffset","subarray","unpackedTextureLayout","createTextureLayoutFromShape","reverseWH","unpackedTextureData","createTextureDataFromLayoutBindTensor","dataType","data","usage","textureManager","createTextureFromLayout","createTextureDataFromTexture","reshapeUnpacked","input","reshapedDims","inputTD","unpacked","newTextureLayout","channels","computeStrides","reshapePacked","isReshapeCheap","squeezedInputShape","processDims3D","squeezedOutputShape","squeezedInputTensor","squeezedOutputTensor","createPackedReshape3DProgramInfoLoader","cast","tensorId","textureData","_id","readTexture","readTextureAsync","setTextureData","isInitializer","isTextureLayoutCached","clearActiveTextures","releaseTexture","isFloat32DownloadSupported","readUint8TextureAsFloat","encodeAsUint8","createPackProgramInfoLoader","createUnpackProgramInfoLoader","WebGLInferenceHandler","WEBGL_OP_RESOLVE_RULES","unaryOps","abs","acos","binaryOps","and","asin","atan","averagePool","parseAveragePoolAttributes","batchNormalization","parseBatchNormalizationAttributes","parseCastAttributes","clip","parseClipAttributes","clipV11","concat","parseConcatAttributes","conv","parseConvAttributes","convTranspose","parseConvTransposeAttributes","cos","identity","depthToSpace","parseDepthToSpaceAttributes","equal","elu","parseEluAttributes","exp","flatten","parseFlattenAttributes","floor","gather","parseGatherAttributes","gemm","parseGemmAttributesV7","parseGemmAttributesV11","globalAveragePool","parseGlobalAveragePoolAttributes","globalMaxPool","greater","imageScaler","parseImageScalerAttributes","instanceNormalization","parseInstanceNormalizationAttributes","leakyRelu","parseLeakyReluAttributes","less","lrn","parseLrnAttributes","log","matMul","parseMatMulAttributes","maxPool","parseMaxPoolAttributes","neg","not","or","padV2","parsePadAttributesV2","padV11","parsePadAttributesV11","pow","pRelu","reduceLogSum","parseReduceAttributes","reduceMax","reduceMean","reduceMin","reduceProd","reduceSum","reduceLogSumSquare","relu","reshape","resize","parseResizeAttributesV10","parseResizeAttributesV11","sigmoid","sin","sliceV10","parseSliceAttributes","softmax","parseSoftmaxAttributes","softmaxV13","parseSoftmaxAttributesV13","parseSplitAttributes","sqrt","squeeze","parseSqueezeAttributes","squeezeV13","sum","tan","tanh","tile","parseTransposeAttributes","upsample","parseUpsampleAttributesV7","parseUpsampleAttributesV9","unsqueeze","parseUnsqueezeAttributes","unsqueezeV13","xor","batchNormalizationProgramMetadata","inferenceHandler","validateInputs","cacheKey","createBatchNormalizationProgramInfo","epsilon","momentum","spatial","scaleWidth","scaleHeight","X","scale","B","mean","var_","glslAdd","ValueBased","glslDiv","glslMul","glslSub","glslEqual","glslGreater","glslLess","glslAnd","glslOr","glslXor","glslPow","glslBuiltinBinary","glslPRelu","createBinaryProgramInfoLoader","glslFunc","outputTensorType","createBinaryProgramInfo","isBroadcast","areEqual","outputShape","usePackedTexture","calculatedShape","calcShape","aRank","bRank","aBcast","bBcast","to","ProtoUtil","tensorDataTypeFromProto","createPackedConcatProgramInfoLoader","inputCount","metadata","from","fill","axis","inputShape","dataNShape","axisIndex","getChannels","dtype","unpackChannel","unpackFromChannel","shapes","offsets","channel","lastChannels","allChannels","getValueSnippet","getShiftedChannelsSnippet","lastIndex","shift","x","createPackedConcatProgramInfo","channelIdx","idx","createUnpackedConcatProgramInfoLoader","sizeInConcatAxis","previousSum","getTextureIndexWhereDataResidesMethod","getTextureIndexWhereDataResidesLinearSearch","getTextureIndexWhereDataResidesBinarySearch","fetchDataFromCorrectTextureMethod","getFetchDataFromCorrectTextureMethod","getSizeInConcatAxisValueFromIndexMethod","getGetSizeInConcatAxisValueFromIndexMethod","createUnpackedConcatProgramInfo","searchAxis","numberOfTensors","tensorRank","codeLines","inputType","inputDimensionality","createUnpackedGroupedConvProgramInfoLoader","hasBias","processBias","xShape","wShape","outputChannelsPerGroup","group","autoPad","dilations","kernelShape","pads","calculateOutputShape","getActivationSnippet","activationFunction","applyActivation","createUnpackedGroupedConvProgramInfo","conv2DPackedPointwise","xshape","kshape","reshapedX","reshapedK","matmulInputs","matmulOutput","createPackedMatmulProgramInfoLoader","conv2DPacked","im2colOutput","createPackedIm2ColProgramInfoLoader","kernelReshaped","computeTotalPad","inDim","adj","kernel","dilation","outSize","distributePadding","totalPad","head","tail","smallPad","convTranspose2d","adjustedAttributes","getAdjustedConvTransposeAttributes","convTranspose2DUnpacked","valueInit","inputChannelsPerGroup","createUnpackedConvTransposeProgramInfo","createUnpackedConvTransposeProgramInfoLoader","outputPadding","spatialRank","updateShape","calculateOutputShapeAndPads","newAttributes","activationAttributes","parseInternalActivationAttributes","featureMaps","adjustPads","batchSize","inputSpatialShape","outChannels","dilatedKernelShape","outputSpatialShape","conv2d","getAdjustedConvAttributes","packMode","isPointwise","conv2DUnpackedPointwise","conv2DUnpacked","createMatmulProgramInfoLoader","xIm2Col","createIm2ColProgramInfoLoader","dotProductInputs","createDotProductProgramInfoLoader","PoolConvUtil","adjustPadsBasedOnAutoPad","blocksize","blocksizeSqr","transposePerm","mode","firstReshapeShape","firstReshapedTensor","transposeAttributes","perm","transposeOutput","secondReshapeShape","TypeError","activationCacheKey","createDotProductProgramMetadata","im2colShape","calculateIm2ColDims","kWidth","kHeight","im2colStrides","im2colWidth","im2colHeight","initValue","sharedDim","createDotProductProgramInfo","outputDims","flattenShape","r","func","activation","glslRelu","glslSigmoid","glslClip","clipMin","clipMax","activationName","MIN_CLIP","MAX_CLIP","createGatherProgramInfoLoader","gatherProgramMetadata","indexDataShape","normalizeAxis","indexCopyOps","orank","irank","iDrank","createGatherProgramInfo","NUMBER_TYPES","createGemmProgramInfoLoader","parseGemmAttributes","isOptionalC","transA","transB","alpha","beta","createGemmProgramInfo","aShape","bShape","GemmUtil","getShapeOfGemmResult","line","declareC","broadcastC","calculateC","w","wshape","kernelSize","unrolled","row","col","createPackedIm2ColProgramInfo","im2colDims","createIm2ColProgramInfo","createImageScalerProgramInfoLoader","bias","imageScalerProgramMetadata","getBiasMethod","createGetBiasMethod","createImageScalerProgramInfo","numChannels","meanAndVariance","createMeanAndVarianceProgramInfoLoader","createComputeOutputProgramInfoLoader","meanAndVarianceProgramMetadata","xDims","channelSize","createMeanAndVarianceProgramInfo","computeOutputProgramMetadata","meanAndVarianceShape","textureWidth","textureHeight","meanAndVarianceWidth","meanAndVarianceHeight","createComputeOutputProgramInfo","createLrnProgramInfoLoader","lrnProgramMetadata","C","createLrnProgramInfo","sharedDimIndex","coordsDataType","allGlChannels","getBiasForMatmulSnippet","getBiasForMatmul","getBcastedSamplerForMatmulSnippet","unpackedACoordsSnippet","unpackedBCoordsSnippet","inAShape","inBShape","inARank","inBRank","rankADiff","rankBDiff","broadcastADims","broadcastBDims","coordsASnippet","coordsBSnippet","swapDimSnippet","getBcastSamplerForMatmul","getSamplerAInLoopSnippet","res","getA","getSamplerBInLoopSnippet","getB","getOutputCoordsSnippet","createPackedMatmulProgramInfo","createMatmulProgramMetadata","arank","brank","createMatmulProgramInfo","packProgramMetadata","unpackedReversed","inputRank","setup","outOfBoundsCondition","cond","getOutOfBoundsCondition","D","getOutput","createPackProgramInfo","getVecChannels","padProgramMetadata","validateInputsV2","createPadProgramInfo","validateInputsV11","attrubutes","generatePadAttributesFromInputs","integerData","floatData","padShape","padFunction","getPadFunction","getPadConstant","getPadReflect","getPadEdge","createAveragePoolProgramInfo","ceilMode","countIncludePad","isGlobalOperator","getAdjustedPoolAttributesAndOutputShape","op2","poolingCode","generatePoolingCode","createMaxPoolProgramInfo","storageOrder","hasDilations","hasOwnProperty","call","adjustPoolAttributes","computePoolOutputShape","globalMaxPoolAttributes","globalMaxPoolMetadata","inputDims","op1","start","codeW","kw","sw","pwStart","pwEnd","dimW","codeH","codeHEnd","kh","sh","phStart","phEnd","dimH","padCode","kernelStrides","stridesRank","padsRank","offsetToIndicesFunction","copyInputDims","copyArray","copyPads","copyKernelStrides","copyStrides","reduce","cur","array","arrayName","reduceOp","reduceProgramMetadata","createReduceProgramInfo","axes","keepDims","iRank","idxCopy","normalizeAxes","ops","reduceOps","k","oRank","idxZero","input3D","outputShape3D","createPackedReshape3DProgramMetadata","inputShape3D","mainLoop","outputCoords","getFlattenedIndexFrom3D","createPackedReshape3DProgramInfo","batch","calculateReshapedDims","resizeProgramMetadata","createPackedResizeProgramInfo","parseUpsampleAttributes","prepareInputs","scales","every","coordinateTransformMode","dim","outputHeight","outputWidth","inputHeight","inputWidth","scalesHeight","scalesWidth","getSourceFracIndex","outputSizes","scalesTensor","scalesInputIdx","sizesInputIdx","parseScalesData","isResize","sizesTensor","parseScalesDataFromOutputSize","yDims","scalesValidation","end","Int32Array","sliceProgramMetadata","createSliceProgramInfo","starts","ends","val","normalizedAxes","sliceOps","validateInputsV10","generateSliceAttributesFromInputs","some","softmaxComputeMaxProgramMetadata","softmaxComputeScaleProgramMetadata","softmaxProgramMetadata","logicalRowCount","sizeToDimension","featureCount","sizeFromDimension","computeSoftmax","transposeAttribute","isTransposeRequired","transposedInputShape","transposedInputs","_","p","computeMaxProgramInfo","createComputeMaxProgramInfo","max","computeScaleProgramInfo","createComputScaleProgramInfo","softMaxProgramInfo","createSoftMaxProgramInfo","maxElementPerLogicalRow","normalizationPerLogicalRow","splitProgramMetadata","count","getProgramCount","createSplitProgramInfo","numOutputs","outputs","SplitUtil","splitShape","offset","validateInputsV13","sumProgramMetadata","createSumProgramInfo","sumLine","j","tileProgramMetadata","createTileProgramInfo","tileOps","transposeProgramMetadata","createTransposeProgramInfo","getAdjustedPerm","unpackedOutputShape","getOutputShape","getPermFunctionBody","sortBasedOnPerm","reverseFunc","downloadUint8AsFloat","glslAbs","glslBuiltinUnary","glslAcos","glslAsin","glslAtan","glslCeil","glslCos","glslElu","glslExp","glslFloor","glslIdentity","glslLeakyRelu","glslLog","glslNeg","glslNot","glslSin","glslSqrt","glslTan","glslTanh","createElementwiseProgramInfoLoader","createElementwiseProgramInfo","generateClipAttributesFromInputs","unpackProgramMetadata","createUnpackProgramInfo","innerDims","sourceCoords","getSourceCoords","unsqueezeShape","upsampleProgramMetadata","createUpsampleProgramInfo","opset","extrapolationValue","needRoiInput","useExtrapolation","nearestMode","cubicCoefficientA","excludeOutside","useNearest2xOptimization","roiInputIdx","outputPitches","inputPitches","precalculatedPitches","getInputFloatFunction","profiler","textureLayoutStrategy","repo","attributesBound","buildArtifact","event","gl","useProgram","bindOutput","bindAttributes","attribLocations","bindUniforms","uniformLocations","err","error","draw","vertexShader","deleteShader","deleteProgram","preprocessor","fragScript","compile","getUniformLocations","getAttribLocations","fragShaderScript","vertexShaderScript","getVertexShaderSource","compileShader","VERTEX_SHADER","debug","fragShader","FRAGMENT_SHADER","createProgram","attachFramebuffer","positionHandle","position","textureCoordHandle","textureCoord","setVertexAttributes","textures","texturePosition","find","bindTexture","uniform1fv","uniform1f","uniform1iv","uniform1i","uniformHandle","bindTextureToUniform","getAttribLocation","location","getUniformLocation","reference","ProgramManager","PreferLogicalStrategy","maxTextureSize","TextureManager","reuseTextures","pack2unpackMap","unpack2packMap","createInferenceHandler","onGraphInitialized","graph","initializers","getValues","addInitializer","opsets","op","resolveOperator","impl","opImpl","opInit","internalFormat","R32F","format","RED","RGBA32F","RGBA","src","textureSize","constructor","allocate","dataSize","RedFloat32DataEncoder","dest","RGBAFloatDataEncoder","ALPHA","UNSIGNED_BYTE","_textureSize","byteOffset","byteLength","Uint8DataEncoder","computeTextureWH","prefs","breakAxis","wsize","hsize","totalSize","AlwaysKeepOriginalSizeStrategy","wh","computeTexture","logShape","squeezeResult","sizeFromShape","sizeToSquarishShape","isEmptyArray","isArray","parseAxisParam","assert","ax","isInt","dimsToSkip","inferredDims","reversedWH","config","pendingRead","inUseTextures","idleTextures","textureLookup","textureDataType","toEncoderType","encoder","getEncoder","pop","updateTexture","toTextureData","allocateTexture","toTensorData","createAndWaitForFence","tensorData","subscribers","deleteTexture","splice","Int16Array","Int8Array","Uint16Array","Float64Array","_dataType","len","checkFn","delayFn","maxCounter","_counter","reject","tryCount","tryFn","nextBackoff","setTimeout","charAt","toUpperCase","createNewWebGLContext","canvas","document","OffscreenCanvas","createElement","createCanvas","ca","depth","antialias","stencil","preserveDrawingBuffer","premultipliedAlpha","failIfMajorPerformanceCaveat","getContext","WebGLContext","webgl2","isContextLost","disable","DEPTH_TEST","STENCIL_TEST","BLEND","DITHER","POLYGON_OFFSET_FILL","SAMPLE_COVERAGE","enable","SCISSOR_TEST","CULL_FACE","cullFace","BACK","linearSearchLastTrue","frameBufferBound","itemsToPoll","getExtensions","vertexbuffer","createVertexbuffer","framebuffer","createFramebuffer","queryVitalParameters","createTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","checkError","texSubImage2D","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","viewport","scissor","readPixels","isFramebufferReady","getActiveTexture","n","getParameter","ACTIVE_TEXTURE","TEXTURE0","getTextureBinding","TEXTURE_BINDING_2D","getFramebufferBinding","FRAMEBUFFER_BINDING","vertexAttribPointer","enableVertexAttribArray","attachShader","linkProgram","shaderType","shader","createShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","activeTexture","drawArrays","TRIANGLE_STRIP","getError","label","toString","DataEncoders","isRenderFloat32Supported","textureHalfFloatExtension","HALF_FLOAT_OES","unit","maxTextureImageUnits","disposed","deleteFramebuffer","bindBuffer","ARRAY_BUFFER","deleteBuffer","ELEMENT_ARRAY_BUFFER","finish","createDefaultGeometry","createBuffer","geometry","bufferData","STATIC_DRAW","fb","isFloatTextureAttachableToFrameBuffer","checkFloatTextureAttachableToFrameBuffer","checkRenderFloat32","checkFloat32Download","isBlendSupported","checkFloat32Blend","MAX_TEXTURE_SIZE","MAX_TEXTURE_IMAGE_UNITS","colorBufferFloatExtension","getExtension","disjointTimerQueryWebgl2Extension","textureFloatExtension","frameBuffer","isComplete","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","fragmentShader","POINTS","NO_ERROR","beginTimer","gl2","ext","query","createQuery","beginQuery","TIME_ELAPSED_EXT","endTimer","endQuery","isTimerResultAvailable","available","disjoint","getQueryParameter","QUERY_RESULT_AVAILABLE","GPU_DISJOINT_EXT","getTimerResult","timeElapsed","QUERY_RESULT","deleteQuery","waitForQueryAndGetTime","repeatedTry","fenceContext","createFence","pollFence","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","isFencePassed","status","clientWaitSync","ALREADY_SIGNALED","CONDITION_SATISFIED","addItemToPoll","pollItems","isDoneFn","resolveFn","getNodes","_ops","KernelOp","reset","_starter","resolved","_values","getInputIndices","execute","sessionHandler","modelInputs","graphInputs","sequence","graphValues","rear","thisOpIndex","thisOp","inputList","inputTensors","outputList","downstreamNodes","currentDownstreamNodeIndex","currentDownstreamNode","getOutputIndices","outputIndex","outputTensor","getData","ExecutionPlan","Graph","graphProto","initializer","GraphImpl","valueInfo","_from","_to","tensorValueTypeFromProto","tensorType","_nodeProto","NodeProto","opType","Node","tensorAttributesFromORTFormat","executeNode","graphInitializer","buildGraph","transformGraph","checkIsAcyclic","_allInputIndices","getInputNames","_allInputNames","_allOutputIndices","getOutputNames","_allOutputNames","_allData","_nodes","GraphProto","buildGraphFromOnnxFormat","buildGraphFromOrtFormat","dataIndices","nodesIndices","inputValueNames","currentIndex","Value","tensorDimsFromProto","nodeProto","pick","dataIndex","inputsLength","inputName","nodeArgsLength","nodeArgs","valueType","TypeInfoValue","tensor_type","TensorTypeAndShape","elemType","dimLength","dimValue","initializersLength","tensorDimsFromORTFormat","outputsLength","outputName","nodesLength","attributesLength","starters","nodesStack","nodesState","nodeIndex","outgoingEdgeIndex","downstreamNodeIndex","removeAllIdentityNodes","removeAllDropoutNodes","fuseConvActivationNodes","finalizeGraph","newIndices","nodePossition","ind","currentData","deleteNode","inputValueIndex","outputValueIndex","nodesConsumingOutput","delIndex","replaceIndex","isActivation","next","child","_severity","_content","_category","severity","content","category","console","color","SEVERITY_VALUE","info","fatal","LOGGER_PROVIDER_MAP","NoOpLoggerProvider","ConsoleLoggerProvider","LOGGER_DEFAULT_CONFIG","provider","minimalSeverity","logDateTime","logSourceLocation","LOGGER_CONFIG_MAP","arg0","arg1","arg2","arg3","bind","logInternal","stack","Date","toISOString","previousConfig","logLevel","startTime","endCallback","timer","ctx","checkTimer","endTime","maxNumberEvents","flushBatchSize","flushIntervalInMilliseconds","_started","_flushPointer","_maxNumberEvents","_flushBatchSize","_flushIntervalInMilliseconds","create","_timingEvents","_flushTime","now","stop","logOneEvent","begin","isPromise","then","reason","Event","endSync","EventRecord","toFixed","currentTime","previousPointer","Profiler","performance","load","buf","isOrtFormat","loadFromOnnxFormat","loadFromOrtFormat","modelProto","ModelProto","irVersion","_opsets","opsetImport","domain","_graph","flatbuffers","ByteBuffer","ortModel","InferenceSession","getRootAsInferenceSession","model","opsetImportLength","opsetId","Model","INT_TYPES","FLOAT_TYPES","matchSelector","selector","endsWith","rangeStart","parseInt","substring","isNaN","pair","rangeEnd","rules","rule","versionSelector","DimensionValueType","TensorDataType","NodeType","bb","bb_pos","__init","getRootAsShape","Shape","readInt32","getSizePrefixedRootAsShape","setPosition","SIZE_PREFIX_LENGTH","__offset","Dimension","__indirect","__vector","__vector_len","startShape","builder","startObject","addDim","addFieldOffset","createDimVector","startVector","addOffset","endVector","startDimVector","numElems","endShape","endObject","createShape","getRootAsDimension","getSizePrefixedRootAsDimension","DimensionValue","denotation","optionalEncoding","__string","startDimension","addValue","valueOffset","addDenotation","denotationOffset","endDimension","createDimension","getRootAsDimensionValue","getSizePrefixedRootAsDimensionValue","dimType","readInt8","UNKNOWN","readInt64","createLong","dimParam","startDimensionValue","addDimType","addFieldInt8","addDimValue","addFieldInt64","addDimParam","dimParamOffset","endDimensionValue","createDimensionValue","getRootAsTensorTypeAndShape","getSizePrefixedRootAsTensorTypeAndShape","UNDEFINED","startTensorTypeAndShape","addElemType","addFieldInt32","addShape","shapeOffset","endTensorTypeAndShape","createTensorTypeAndShape","getRootAsMapType","MapType","getSizePrefixedRootAsMapType","keyType","TypeInfo","startMapType","addKeyType","addValueType","valueTypeOffset","endMapType","createMapType","getRootAsSequenceType","SequenceType","getSizePrefixedRootAsSequenceType","startSequenceType","elemTypeOffset","endSequenceType","createSequenceType","readUint32","srcArgIndex","dstArgIndex","createEdgeEnd","node_index","src_arg_index","dst_arg_index","prep","writeInt32","EdgeEnd","getRootAsNodeEdge","NodeEdge","getSizePrefixedRootAsNodeEdge","inputEdges","inputEdgesLength","outputEdges","outputEdgesLength","startNodeEdge","addNodeIndex","addInputEdges","inputEdgesOffset","startInputEdgesVector","addOutputEdges","outputEdgesOffset","startOutputEdgesVector","endNodeEdge","createNodeEdge","getRootAsNode","getSizePrefixedRootAsNode","docString","sinceVersion","Primitive","executionProviderType","inputArgCounts","inputArgCountsLength","inputArgCountsArray","bytes","implicitInputs","implicitInputsLength","startNode","addName","nameOffset","addDocString","docStringOffset","addDomain","domainOffset","addSinceVersion","addIndex","addOpType","opTypeOffset","addType","addExecutionProviderType","executionProviderTypeOffset","addInputs","inputsOffset","createInputsVector","startInputsVector","addOutputs","outputsOffset","createOutputsVector","startOutputsVector","addAttributes","attributesOffset","createAttributesVector","startAttributesVector","addInputArgCounts","inputArgCountsOffset","createInputArgCountsVector","addInt32","startInputArgCountsVector","addImplicitInputs","implicitInputsOffset","createImplicitInputsVector","startImplicitInputsVector","endNode","createNode","getRootAsValueInfo","ValueInfo","getSizePrefixedRootAsValueInfo","startValueInfo","typeOffset","endValueInfo","createValueInfo","getRootAsTypeInfo","getSizePrefixedRootAsTypeInfo","readUint8","NONE","__union","startTypeInfo","endTypeInfo","createTypeInfo","getRootAsOperatorSetId","OperatorSetId","getSizePrefixedRootAsOperatorSetId","startOperatorSetId","addVersion","endOperatorSetId","createOperatorSetId","getRootAsTensor","getSizePrefixedRootAsTensor","dimsLength","rawData","rawDataLength","rawDataArray","stringData","stringDataLength","startTensor","addDims","dimsOffset","createDimsVector","addInt64","startDimsVector","addDataType","addRawData","rawDataOffset","createRawDataVector","addInt8","startRawDataVector","addStringData","stringDataOffset","createStringDataVector","startStringDataVector","endTensor","createTensor","getRootAsSparseTensor","SparseTensor","getSizePrefixedRootAsSparseTensor","values","indices","startSparseTensor","addValues","valuesOffset","addIndices","indicesOffset","endSparseTensor","createSparseTensor","getRootAsAttribute","getSizePrefixedRootAsAttribute","readFloat32","floatsLength","graphsLength","startAttribute","addF","addFieldFloat32","addI","addS","sOffset","addT","tOffset","addG","gOffset","addFloats","floatsOffset","createFloatsVector","addFloat32","startFloatsVector","addInts","intsOffset","createIntsVector","startIntsVector","addStrings","stringsOffset","createStringsVector","startStringsVector","addTensors","tensorsOffset","createTensorsVector","startTensorsVector","addGraphs","graphsOffset","createGraphsVector","startGraphsVector","endAttribute","createAttribute","getRootAsGraph","getSizePrefixedRootAsGraph","maxNodeIndex","nodeEdges","nodeEdgesLength","sparseInitializers","sparseInitializersLength","startGraph","addInitializers","initializersOffset","createInitializersVector","startInitializersVector","addNodeArgs","nodeArgsOffset","createNodeArgsVector","startNodeArgsVector","addNodes","nodesOffset","createNodesVector","startNodesVector","addMaxNodeIndex","addNodeEdges","nodeEdgesOffset","createNodeEdgesVector","startNodeEdgesVector","addSparseInitializers","sparseInitializersOffset","createSparseInitializersVector","startSparseInitializersVector","endGraph","createGraph","getRootAsModel","getSizePrefixedRootAsModel","producerName","producerVersion","modelVersion","graphDocString","startModel","addIrVersion","addOpsetImport","opsetImportOffset","createOpsetImportVector","startOpsetImportVector","addProducerName","producerNameOffset","addProducerVersion","producerVersionOffset","addModelVersion","addGraph","graphOffset","addGraphDocString","graphDocStringOffset","endModel","createModel","getRootAsKernelCreateInfos","KernelCreateInfos","getSizePrefixedRootAsKernelCreateInfos","nodeIndices","nodeIndicesLength","nodeIndicesArray","kernelDefHashes","readUint64","kernelDefHashesLength","startKernelCreateInfos","addNodeIndices","nodeIndicesOffset","createNodeIndicesVector","startNodeIndicesVector","addKernelDefHashes","kernelDefHashesOffset","createKernelDefHashesVector","startKernelDefHashesVector","endKernelCreateInfos","createKernelCreateInfos","getRootAsSubGraphSessionState","SubGraphSessionState","getSizePrefixedRootAsSubGraphSessionState","graphId","sessionState","SessionState","startSubGraphSessionState","addGraphId","graphIdOffset","addSessionState","sessionStateOffset","endSubGraphSessionState","requiredField","createSubGraphSessionState","getRootAsSessionState","getSizePrefixedRootAsSessionState","kernels","subGraphSessionStates","subGraphSessionStatesLength","startSessionState","addKernels","kernelsOffset","addSubGraphSessionStates","subGraphSessionStatesOffset","createSubGraphSessionStatesVector","startSubGraphSessionStatesVector","endSessionState","createSessionState","getSizePrefixedRootAsInferenceSession","bufferHasIdentifier","__has_identifier","ortVersion","startInferenceSession","addOrtVersion","ortVersionOffset","addModel","modelOffset","endInferenceSession","finishInferenceSessionBuffer","finishSizePrefixedInferenceSessionBuffer","createInferenceSession","outputNames","feeds","_fetches","_options","inputMap","feed","outputMap","startProfiling","endProfiling","_initialized","graphInputTypes","graphInputDims","_model","arg","fetch","promisify","readFile","arrayBuffer","isView","modelProtoBlob","initializeOps","_executionPlan","normalizeAndValidateInputs","outputTensors","createOutput","modelInputNames","sortedInputs","sortedInputsIndex","validateInputTensorDims","modelInputIndices","modelValues","graphInput","validateInputTensorTypes","givenInputs","expectedType","actualType","noneDimSupported","expectedDims","actualDims","compareTensorDims","modelOutputNames","dataProvider","asyncDataProvider","Guid","validateDimsAndCalcSize","empty","RangeError","dataviewConstructor","sizeof","dataBuffer","createView","_strides","tensorProto","str","dataDest","dataSource","DataView","elementSize","sizeofProto","readProto","TensorProto","DataType","INT32","INT16","UINT16","INT8","UINT8","BOOL","int32Data","INT64","int64Data","DOUBLE","doubleData","UINT32","UINT64","uint64Data","element","fromData","ortTensor","greaterThanOrEqual","lessThan","toNumber","view","getUint8","getInt8","getUint16","getInt16","getFloat32","getInt32","getUint32","fromBits","getFloat64","expectedDimensions","expr","msg","n1","n2","preprocessInputShapes","dimsA","dimsB","postprocessOutputShape","calcMatMulShape","MatMulUtil","adims","bdims","isMatMul","crank","cdims","cShapeMatMul","aLen","bLen","broadcastedIndices","originalShape","originalIndices","fillIndex","calc","inplace","resultType","outputIndices","originalIndicesA","originalIndicesB","valA","valB","isAScalar","isBScalar","rest","isValidBroadcast","finalShape","finalRank","unshift","target","targetIndex","sourceIndex","blockSize","leftShape","transLeft","rightShape","transRight","biasShape","M","K","N","kDim","typeProto","tensorDataTypeStringToEnum","unsigned","Long","fromValue","low","high","getSizeFromDimensionRange","incrementIndex","axisToIncrementOn","originalDims","shapeHints","nDims","unknownDimension","newTensorSize","oldTensorSize","pad","shape1","shape2","total","y","right","inSqueezeList","inputDimsIterator","sqr","axpy","powx","MathUtil","determineSplit","numElementsAlongAxis","calcReduce","keepdims","ReduceUtil","calcReduceShape","inputStrides","indicesY","calcReduceByAxis","curAxisInd","pos","step","adjustPadAndReturnShape","computeShapeHelper","computeConvOutputShape","filterDims","inSize","padHeadIndex","padTailIndex","dkernel","padNeeded","TextDecoder","currentKernelId","commandEncoder","computePassEncoder","pendingDispatchNumber","profilingEnabled","kernelCustomData","gpu","requestAdapter","adapter","deviceDescriptor","requiredLimits","maxComputeWorkgroupStorageSize","limits","maxComputeWorkgroupsPerDimension","maxStorageBufferBindingSize","features","webgpu","profilingMode","requiredFeatures","requestDevice","device","gpuDataManager","createGpuDataManager","kernelPersistentData","onuncapturederror","ev","GPUValidationError","message","profilingQuerySet","createQuerySet","getCommandEncoder","createCommandEncoder","getComputePassEncoder","beginComputePass","endComputePass","queue","submit","refreshPendingBuffers","createKernelOutput","createIntermediateOutput","inputDatas","gpuData","inputTensorShapes","inputGpuDataTypes","inputTensorShapesToString","inputGpuDataTypesToString","validatedOutputIndices","outputTensorViews","outputDatas","isTemporary","isPersistent","tensorView","temporaryData","persistentData","normalizedDispatchGroup","normalizeDispatchGroupSize","dispatchGroup","LOG_DEBUG","upload","gpuDataId","memcpy","dst","download","getTargetBuffer","alloc","id","free","ptr","release","createKernel","kernelId","WEBGPU_OP_RESOLVE_RULES","releaseKernel","computeKernel","kernelEntry","WebGpuBackend","getFloat32Array","HEAP8","newDims","TensorViewImpl","contextDataOffset","heapU32","HEAPU32","opKernelContext","currentKernelCustomData","compute","inputsOutputsMapping","mappedInputs","getTensorElementSize","bufferSize","stackSave","stackAlloc","_JsepOutput","stackRestore","jsepInit","isSourceGpu","HEAPU8","dataOffset","ComputeContextImpl","logLevelPrefix","LOG","level","messageLevel","logLevelStringToEnum","args","isChannelLast","calcNormalizedBufferSize","guid","storageCache","downloadCache","buffersForUploadingPending","buffersPending","srcArrayBuffer","srcOffset","srcLength","gpuDataCache","originalSize","gpuBufferForUploading","mappedAtCreation","GPUBufferUsage","MAP_WRITE","COPY_SRC","getMappedRange","unmap","copyBufferToBuffer","sourceId","destinationId","sourceGpuDataCache","destinationGpuDataCache","STORAGE","COPY_DST","gpuBuffer","GpuDataType","default","cachedData","downloadData","gpuReadBuffer","MAP_READ","readDataPromise","mapAsync","GPUMapMode","READ","destroy","GpuDataManagerImpl","acosh","asinh","atanh","pool","clipV10","cosh","parseAlphaAttributes","erf","parseGlobalMaxPoolAttributes","reciprocal","sinh","thresholdedRelu","typeSnippet","component","activationFnSnippet","_hasPreluActivationWeights","_packed","_coordsLength","biasActivationSnippet","createConv2DMatMulProgramInfo","dimAOuter","dimBOuter","dimInner","sequentialAccessByThreads","isChannelsLast","inChannels","outWidth","outHeight","isVec4","dispatchX","dispatchY","workGroupSize","elementsPerThread","dispatch","innerElementSize","tileAOuter","tileBOuter","tileInner","fitAOuter","fitBOuter","fitInner","elementsSize","declareInputs","declareFunctions","gpuDataType","z","getShaderSource","utilFunctions","addBias","hasPreluActivationWeights","innerElementSizeX","innerElementSizeW","coordASnippet","coordResSnippet","xHeight","xWidth","readXSnippet","getXSnippet","sampleX","sampleW","getWSnippet","resType","aType","bType","conv2dCommonSnippet","makeMatMulPackedVec4Source","makeMatMulPackedSource","workPerThread","workgroupSize","transposeA","splitK","splitedDimInner","isVectorA","tileAWidth","tileAHight","rowPerThreadB","calculateResultSnippet","writeDataToSubASnippet","rowPerThreadA","colPerThreadA","matmulSnippet","readDataFromSubASnippet","createBinaryOpProgramInfoLoader","funcCall","additionalImplementation","outputDataType","outputSize","vectorize","sharedDimension","dimA","shaderHelper","dimsOutput","doBroadcast","typeA","typeB","typeOutput","expressionScalar","expressionVector","vecSize","scalar","vector","assignment","broadcastImpl","outputIndicesHelper","createIndicesHelper","calcOffsetImpl","o2iImpl","iType","indicesVariableDeclaration","o2iCall","singleAssignment","expressionA","expressionB","mainStart","guardAgainstOutOfBoundsWorkgroupSizes","createBinaryOpProgramShader","createBinaryOpProgramInfo","WORKGROUP_SIZE","o2iSnippet","varOffset","varIndices","i2oImpl","i2oExpression","isPtr","sizeInCode","workgroupSizeX","workgroupSizeY","workgroupSizeZ","is1DimensionDispatch","paramList","globalIdxDefinition","createShaderHelper","ShaderHelperImpl","createGroupedConvProgramInfoLoader","squeezeOutputShapeFunction","getActicationSnippet","inputStorageBuffersDeclarations","xIndicesHelper","wIndicesHelper","createGroupedConvProgramInfo","weightTransposeAttribute","auto_pad","kernel_shape","wIsConst","w_is_const","conv1d","inputChannels","weightHeight","weightWidth","transposedWeight","customData","wT","convInputs","createConv2DMatMulProgramInfoLoader","createConv2DMatMulProgramMetadata","activation_params","calculateAlpha","m","broadcastM","broadcastN","offsetC","inputShapeAsChannelFirst","outputShapeAsChannelFirst","dimIdxW","dimIdxH","parsePoolCommonAttributes","ceil_mode","count_include_pad","globalPoolAttributes","storage_order","permAttr","inputIndicesHelper","permFunctionBody","datasize","expression","createElementwiseProgramShader","writeTimestamp","setPipeline","computePipeline","entries","binding","resource","bindGroup","createBindGroup","getBindGroupLayout","setBindGroup","dispatchWorkgroups","QUERY_RESOLVE","resolveQuerySet","mappedData","BigUint64Array","startTimeU64","endTimeU64","profilingTimeBase","isSafeInteger","normalizedDispatchGroupSize","code","shaderModule","createShaderModule","createComputePipeline","entryPoint","limitPerDimension","dispatchAverage","cbrt","iterateExtraOptions","prefix","seen","proxyWorker","initWasmCallbacks","initOrtCallbacks","isProxy","initializing","initialized","aborted","createSessionAllocateCallbacks","createSessionFinalizeCallbacks","createSessionCallbacks","releaseSessionCallbacks","runCallbacks","endProfilingCallbacks","ensureWorker","onProxyWorkerMessage","out","scriptSrc","currentScript","wasmPaths","substr","lastIndexOf","terminate","onmessage","in","postMessage","initializeWebAssembly","initOrt","loggingLevel","core","getInstance","createSessionAllocate","createSessionFinalize","modeldata","createSession","releaseSession","sessionId","inputIndices","extractTransferableBuffers","setRunOptions","runOptionsHandle","allocs","runOptions","logSeverityLevel","logVerbosityLevel","tagDataOffset","tag","allocWasmString","_OrtCreateRunOptions","extra","WeakSet","keyDataOffset","valueDataOffset","_OrtAddRunConfigEntry","_OrtReleaseRunOptions","_free","ortInit","path","modelData","fetches","inputArray","kvp","setSessionOptions","sessionOptionsHandle","sessionOptions","use_ort_model_bytes_directly","executionProviders","ep","enableMemPattern","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","executionMode","getExecutionMode","logIdDataOffset","logId","optimizedModelFilePathOffset","optimizedModelFilePath","_OrtCreateSessionOptions","enableCpuMemArena","enableProfiling","epName","epNameDataOffset","_OrtAppendExecutionProvider","setExecutionProviders","_OrtAddSessionConfigEntry","_OrtReleaseSessionOptions","dataLength","lengthBytesUTF8","_malloc","stringToUTF8","tensorDataTypeEnumToString","dateType","tensorTypeToTypedArrayConstructor","BigInt64Array","errorCode","_OrtInit","activeSessions","modelDataOffset","sessionHandle","_OrtCreateSession","_OrtGetInputCount","outputCount","_OrtGetOutputCount","inputNamesUTF8Encoded","outputNamesUTF8Encoded","_OrtGetInputName","UTF8ToString","_OrtGetOutputName","_OrtFree","_OrtReleaseSession","runOptionsAllocs","inputValues","inputAllocs","dataByteLength","HEAP32","_OrtCreateTensor","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","_OrtRun","runPromise","jsepRunPromise","beforeGetTensorDataStack","tensorDataOffset","_OrtGetTensorData","tensorDataIndex","maxBytesToRead","typedArrayConstructor","_OrtReleaseTensor","profileFileName","_OrtEndProfiling","buffers","ortWasmFactory","ortWasmFactoryThreaded","flags","timeout","useThreads","SharedArrayBuffer","MessageChannel","port1","WebAssembly","validate","isMultiThreadSupported","useSimd","isSimdSupported","wasmPrefixOverride","wasmFileName","getWasmFileName","wasmPathOverride","isTimeout","tasks","locateFile","fileName","scriptDirectory","Blob","URL","createObjectURL","mainScriptUrlOrBlob","scriptSourceCode","what","race","PThread","terminateAllThreads","Worker_fn","workerConstructor","workerOptions","url","globalScope","window","blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","webkitURL","objectURL","worker","revokeObjectURL","encodeURIComponent","_scriptDir","R","F","Y","I","W","u","ready","l","h","importScripts","process","versions","ENVIRONMENT_IS_PTHREAD","__dirname","normalize","readFileSync","argv","on","at","exitCode","S","exit","inspect","Worker","href","XMLHttpRequest","open","send","responseText","responseType","response","onload","onerror","O","T","warn","writeSync","A","print","printErr","thisProgram","quit","wasmBinary","noExitRuntime","nt","E","P","U","H","String","fromCharCode","V","q","charCodeAt","G","HEAP16","HEAPU16","HEAPF32","HEAPF64","INITIAL_MEMORY","wasmMemory","Memory","initial","maximum","shared","L","Z","$","preRun","Q","J","tt","cmd","onAbort","RuntimeError","rt","startsWith","et","it","ut","lt","Yc","pd","ot","Ed","gd","Xc","start_routine","Kd","yd","pthread_ptr","ed","time","Qd","loaded","ct","Gt","Ld","onExit","ft","dt","ad","sd","kd","Gd","Sd","receiveObjectTransfer","Id","threadInitTLS","rd","setExitStatus","qd","mn","Hd","Cd","targetThread","fn","Td","transferList","Wt","thread","threadId","text","alert","filename","lineno","urlOrBlob","wasmModule","xd","st","establishStackSpace","gn","jn","ht","pt","invokeEntryPoint","vn","yt","mt","vt","_t","gt","wt","dd","Vc","Dd","bd","zd","Fd","Bd","ld","md","od","cd","ud","Atomics","Jd","vd","wd","On","jt","sn","bt","Ct","Rd","Ot","Tt","At","Mt","St","xt","kt","Et","Rt","Dt","Ft","Yt","It","store","yn","compareExchange","Pt","Ut","Ht","Vt","ln","qt","toTimeString","getFullYear","getTimezoneOffset","arguments","wn","bn","pn","executeNotifiedProxyingQueue","hrtime","__performance_now_clock_drift","Bt","zt","Nt","Lt","USER","LOGNAME","PATH","PWD","HOME","LANG","languages","Xt","Zt","$t","Qt","Jt","Kt","tn","nn","rn","en","an","un","getMonth","getDate","getDay","Zc","$c","getTime","setDate","setMonth","setFullYear","Od","Nd","hd","nd","jd","Wc","Ud","Md","Pd","includes","cn","ja","_n","prototype","Cn","ma","Ga","dn","aa","xa","Ma","ta","va","la","Ka","Da","Ja","ua","ra","La","sa","qb","Bb","da","ya","Oa","za","Fa","Pa","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","Qa","getSeconds","getMinutes","getHours","Ra","setTime","Ba","Ca","Xa","Ad","ba","oa","Aa","copyWithin","pa","Ea","apply","na","grow","Na","Ha","Ia","wa","Ab","qa","ea","wb","Mn","kb","Un","Sa","tr","jb","Hn","zb","An","Ta","Tn","Za","er","ub","Rn","tb","xn","ib","Vn","lb","Pn","fa","ga","ha","mb","Wn","vb","En","nb","In","pb","Fn","xb","nr","Ya","Jn","Wa","Kn","rb","kn","Ua","rr","sb","Dn","yb","Sn","Va","ir","ob","Yn","Xn","cb","Ln","ab","Zn","_a","Qn","$a","$n","eb","zn","Bn","hb","qn","db","Nn","gb","Gn","ia","ka","asm","_b","cc","Cb","monitorRunDependencies","clearInterval","instance","credentials","ok","catch","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","Ob","Pb","Qb","Rb","Sb","Tb","Ub","Vb","Wb","_pthread_self","Xb","Yb","Zb","__emscripten_tls_init","__emscripten_thread_init","$b","__emscripten_thread_crashed","ac","hn","_emscripten_run_in_main_runtime_thread_js","bc","__emscripten_proxy_execute_task_queue","dc","__emscripten_thread_free_data","ec","__emscripten_thread_exit","fc","_setThrew","gc","_emscripten_stack_set_limits","hc","ic","jc","kc","___cxa_can_catch","lc","___cxa_is_pointer_type","mc","dynCall_j","nc","dynCall_iij","oc","dynCall_iiiiij","pc","dynCall_vij","qc","dynCall_jii","rc","dynCall_viiji","sc","dynCall_viiiij","tc","dynCall_ji","uc","dynCall_viijjjiiiii","vc","dynCall_viiiji","wc","dynCall_vijiii","xc","dynCall_viiij","yc","dynCall_viiiiiiiiiji","zc","dynCall_jjj","Ac","dynCall_iiiijjj","Bc","dynCall_iiijjj","Cc","dynCall_jiii","Dc","dynCall_vjjjjjjffiifiiiiii","Ec","dynCall_vjjjjjjjjfffiifiiiiii","Fc","dynCall_vjjjjjjfffifiiiiiii","Gc","dynCall_vjjjjjjfffifiiiii","Hc","dynCall_vjjjjjjjjfffiifiiiii","Ic","dynCall_vijjfffiii","Jc","dynCall_vijiiiiiiii","Kc","dynCall_vijjjjjjifiiiii","Lc","dynCall_vjjjjjiiii","Mc","dynCall_vjjjjfiii","Nc","dynCall_viiijiiii","Oc","dynCall_viiijjjii","Pc","dynCall_iiij","Qc","dynCall_viiijii","Rc","dynCall_viijiiiiiiiii","Sc","dynCall_jfi","Tc","dynCall_viji","Uc","ar","calledRun","onRuntimeInitialized","postRun","setStatus","keepRuntimeAlive","ExitStatus","preInit","ortWasm","fs","fd","dynCall_viiiiij","pending","base64","string","b64","s64","parts","chunk","invalidEncoding","test","EventEmitter","_listeners","evt","off","listeners","emit","f32","f8b","le","writeFloat_f32_cpy","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","round","exponent","LN2","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","SIZE","MAX","slab","utf8","read","write","c1","c2","__esModule","EMPTY","isGuid","validator","gen","createEmpty","raw","random","equals","other","isEmpty","toJSON","Instance","Module","__isLong__","defineProperty","INT_CACHE","UINT_CACHE","fromInt","cachedObj","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","radix","radixToPower","power","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","isZero","isNegative","eq","radixLong","rem1","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","notEquals","neq","ne","comp","lessThanOrEqual","lte","greaterThan","gte","ge","compare","thisNeg","otherNeg","negate","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","div_u","div_s","toUnsigned","shru","shr","shl","log2","delta","approxRes","approxRem","modulo","rem_u","rem_s","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","valuesById","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","Version","properties","refAttrName","newBuffer","emptyArray","writer","uint32","float","int64","fork","ldelim","int32","encodeDelimited","reader","end2","skipType","decodeDelimited","verify","isString","fromObject","object","LongBits","toObject","arrays","defaults","long","longs","enums","json","isFinite","toJSONOptions","ValueInfoProto","TypeProto","metadataProps","OperatorSetIdProto","StringStringEntryProto","TensorAnnotation","quantParameterTensorNames","tensorName","quantizationAnnotation","externalData","segment","dataLocation","Segment","double","uint64","DataLocation","TensorShapeProto","$oneOfFields","oneOfGetter","oneOfSetter","oneofs","protobuf","configure","_configure","BufferWriter","BufferReader","rpc","indexOutOfRange","writeLength","create_array","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","sint32","bool","fixed32","sfixed32","skip","wireType","BufferReader_","merge","sint64","zzDecode","fixed64","sfixed64","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","Boolean","rpcCall","method","requestCtor","responseCtor","request","callback","asPromise","endedByRPC","zero","zzEncode","zeroHash","toLong","fromHash","hash","toHash","mask","part0","part1","part2","ifNotSet","newError","CustomError","captureStackTrace","isNode","global","freeze","emptyObject","isObject","isset","isSet","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","lcFirst","toLowerCase","ProtocolError","fieldNames","fieldMap","encoding","allocUnsafe","Op","noop","State","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","float32","float64","toFloat64","Builder","opt_initial_size","initial_size","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","asUint8Array","additional_bytes","align_size","old_buf_size","growByteBuffer","byte_size","writeInt8","writeInt16","writeInt64","writeFloat32","writeFloat64","addInt16","addFloat64","voffset","slot","addFieldInt16","addFieldFloat64","addFieldStruct","nested","notNested","new_buf_size","nbb","numfields","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","readInt16","root_table","opt_file_identifier","opt_size_prefix","size_prefix","file_identifier","finishSizePrefixed","table","field","table_start","vtable_start","elem_size","num_elems","alignment","createString","codePoint","bytes_","position_","readUint16","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","vtable_offset","opt_encoding","ident","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","enumerable","globalThis","Function","Symbol","toStringTag","__webpack_exports__"],"sourceRoot":""}