{"version":3,"file":"ort.es5.min.js","mappings":";;;;;CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAa,IAAID,IAEjBD,EAAU,IAAIC,GACf,CATD,CASGK,MAAM,WACT,O,sNCRA,MAAMC,EAAW,CAAC,EACZC,EAA2B,GAWpBC,EAAkB,CAACC,EAAMC,EAASC,KAC3C,IAAID,GAAmC,mBAAjBA,EAAQE,MAA+D,mBAAjCF,EAAQG,qBA6BpE,MAAM,IAAIC,UAAU,uBA7BpB,CACI,MAAMC,EAAiBT,EAASG,GAChC,QAAuBO,IAAnBD,EACAT,EAASG,GAAQ,CAAEC,UAASC,gBAE3B,IAAII,EAAeJ,SAAWA,EAE/B,OAEC,GAAII,EAAeJ,WAAaA,GAC7BI,EAAeL,UAAYA,EAC3B,MAAM,IAAIO,MAAM,4BAA4BR,qBAAwBE,IAE5E,CACA,GAAIA,GAAY,EAAG,CACf,MAAMO,EAAIX,EAAyBY,QAAQV,IAChC,IAAPS,GACAX,EAAyBa,OAAOF,EAAG,GAEvC,IAAK,IAAIA,EAAI,EAAGA,EAAIX,EAAyBc,OAAQH,IACjD,GAAIZ,EAASC,EAAyBW,IAAIP,UAAYA,EAElD,YADAJ,EAAyBa,OAAOF,EAAG,EAAGT,GAI9CF,EAAyBe,KAAKb,EAClC,CAEJ,CAC0C,ECtCjCc,EAAM,ICJZ,MACHC,cACIC,KAAKC,KAAO,CAAC,EACbD,KAAKE,MAAQ,CAAC,EACdF,KAAKG,OAAS,CAAC,EACfH,KAAKI,iBAAmB,SAC5B,CAEIC,aAASC,GACT,QAAcf,IAAVe,EAAJ,CAGA,GAAqB,iBAAVA,IAA2F,IAArE,CAAC,UAAW,OAAQ,UAAW,QAAS,SAASZ,QAAQY,GACtF,MAAM,IAAId,MAAM,8BAA8Bc,KAElDN,KAAKI,iBAAmBE,CAJxB,CAKJ,CACID,eACA,OAAOL,KAAKI,gBAChB,GClBEG,EAAwC,IAAIC,IAAI,CAClD,CAAC,UAAWC,cACZ,CAAC,QAASC,YACV,CAAC,OAAQC,WACT,CAAC,SAAUC,aACX,CAAC,QAASC,YACV,CAAC,QAASC,YACV,CAAC,OAAQJ,YACT,CAAC,UAAWK,cACZ,CAAC,SAAUC,eAGTC,EAAwC,IAAIT,IAAI,CAClD,CAACC,aAAc,WACf,CAACC,WAAY,SACb,CAACC,UAAW,QACZ,CAACC,YAAa,UACd,CAACC,WAAY,SACb,CAACC,WAAY,SACb,CAACC,aAAc,WACf,CAACC,YAAa,YAKlB,IAAIE,GAAkB,EAmCf,MAAMC,EACTpB,YAAYqB,EAAMC,EAAMC,GAEpB,IAAIC,EACAC,EACAC,EAEJ,GAzCY,MAChB,IAAKP,EAAiB,CAClBA,GAAkB,EAClB,MAAMQ,EAAoD,oBAAlBC,eAA+D,mBAAvBA,cAAcC,KACxFC,EAAsD,oBAAnBC,gBAAiE,mBAAxBA,eAAeF,KAC7FF,IACAnB,EAAsCwB,IAAI,QAASJ,eACnDV,EAAsCc,IAAIJ,cAAe,UAEzDE,IACAtB,EAAsCwB,IAAI,SAAUD,gBACpDb,EAAsCc,IAAID,eAAgB,UAElE,GAuBIE,GAKoB,iBAATZ,EAMP,GAFAG,EAAOH,EACPK,EAAOH,EACM,WAATF,EAAmB,CAEnB,IAAKa,MAAMC,QAAQb,GACf,MAAM,IAAIhC,UAAU,kDAIxBmC,EAAOH,CACX,KACK,CAED,MAAMc,EAAwB5B,EAAsC6B,IAAIhB,GACxE,QAA8B7B,IAA1B4C,EACA,MAAM,IAAI9C,UAAU,4BAA4B+B,MAEpD,GAAIa,MAAMC,QAAQb,GAKdG,EAAOW,EAAsBP,KAAKP,OAEjC,MAAIA,aAAgBc,GAIrB,MAAM,IAAI9C,UAAU,KAAKkC,mCAAsCY,KAH/DX,EAAOH,CAIX,CACJ,MAOA,GADAI,EAAOJ,EACHY,MAAMC,QAAQd,GAAO,CAErB,GAAoB,IAAhBA,EAAKxB,OACL,MAAM,IAAIP,UAAU,uDAExB,MAAMgD,SAA0BjB,EAAK,GACrC,GAAyB,WAArBiB,EACAd,EAAO,SACPC,EAAOJ,MAEN,IAAyB,YAArBiB,EAQL,MAAM,IAAIhD,UAAU,uCAAuCgD,MAP3Dd,EAAO,OAIPC,EAAOd,WAAWkB,KAAKR,EAI3B,CACJ,KACK,CAED,MAAMkB,EAAarB,EAAsCmB,IAAIhB,EAAKrB,aAClE,QAAmBR,IAAf+C,EACA,MAAM,IAAIjD,UAAU,qCAAqC+B,EAAKrB,gBAElEwB,EAAOe,EACPd,EAAOJ,CACX,CAGJ,QAAa7B,IAATkC,EAEAA,EAAO,CAACD,EAAK5B,aAEZ,IAAKqC,MAAMC,QAAQT,GACpB,MAAM,IAAIpC,UAAU,0CAGxB,MAAMkD,EAtGQ,CAACd,IACnB,IAAIc,EAAO,EACX,IAAK,IAAI9C,EAAI,EAAGA,EAAIgC,EAAK7B,OAAQH,IAAK,CAClC,MAAM+C,EAAMf,EAAKhC,GACjB,GAAmB,iBAAR+C,IAAqBC,OAAOC,cAAcF,GACjD,MAAM,IAAInD,UAAU,QAAQI,+BAA+B+C,KAE/D,GAAIA,EAAM,EACN,MAAM,IAAIG,WAAW,QAAQlD,2CAA2C+C,KAE5ED,GAAQC,CACZ,CACA,OAAOD,CAAI,EA0FMK,CAAcnB,GAC3B,GAAIc,IAASf,EAAK5B,OACd,MAAM,IAAIJ,MAAM,iBAAiB+C,iCAAoCf,EAAK5B,YAE9EI,KAAKyB,KAAOA,EACZzB,KAAKuB,KAAOA,EACZvB,KAAKwB,KAAOA,EACZxB,KAAKuC,KAAOA,CAChB,CASAM,sBAAsBC,EAAQC,GAC1B,QAAexD,IAAXuD,EACA,MAAM,IAAItD,MAAM,gCAEpB,QAAuBD,IAAnBwD,EAAQC,aAA0CzD,IAAlBwD,EAAQE,MACxC,MAAM,IAAIzD,MAAM,0CAEpB,GAA6B,SAAzBuD,EAAQG,aACR,MAAM,IAAI1D,MAAM,2CAEpB,MAAM,OAAEwD,EAAM,MAAEC,GAAUF,EACpBI,EAAOJ,EAAQI,MAAQ,CAAEC,KAAM,IAAKC,KAAM,GAChD,IAAIC,EACAC,EAEAD,EADuB,iBAAfH,EAAS,KACN,CAACA,EAAKC,KAAMD,EAAKC,KAAMD,EAAKC,KAAMD,EAAKC,MAGvC,CAACD,EAAKC,KAAK,GAAID,EAAKC,KAAK,GAAID,EAAKC,KAAK,GAAID,EAAKC,KAAK,IAAM,KAGtEG,EADuB,iBAAfJ,EAAS,KACN,CAACA,EAAKE,KAAMF,EAAKE,KAAMF,EAAKE,KAAMF,EAAKE,MAGvC,CAACF,EAAKE,KAAK,GAAIF,EAAKE,KAAK,GAAIF,EAAKE,KAAK,GAAIF,EAAKE,KAAK,IAAM,GAE1E,MAAMG,OAAuCjE,IAAzBwD,EAAQU,aAA6BV,EAAQU,aAAe,OAE1EC,OAAwCnE,IAAzBwD,EAAQY,mBACCpE,IAAzBwD,EAAQY,aAA6BZ,EAAQY,aAC9C,MACEC,EAASZ,EAASC,EAClBY,EAA+B,SAAjBH,EAA0B,IAAIjD,aAAsB,EAATmD,GAAc,IAAInD,aAAsB,EAATmD,GAE9F,IAAIE,EAAO,EAAGC,EAAgB,EAAGC,EAAgB,EAAGC,EAAgB,EAAGC,EAAgB,EACnFC,EAAiB,EAAGC,EAAiBR,EAAQS,EAA0B,EAATT,EAAYU,GAAkB,EAE5E,QAAhBd,IACAM,EAAO,EACPC,EAAgB,EAChBC,EAAgB,EAChBC,EAAgB,EAChBC,GAAiB,GAGA,SAAjBR,EACAY,EAA0B,EAATV,EAEK,QAAjBF,GACLS,EAAiB,EACjBE,EAAiBT,EACjBQ,EAA0B,EAATR,GAEK,QAAjBF,IACLW,EAAiB,EACjBD,EAAiBR,EACjBO,EAA0B,EAATP,GAErB,IAAK,IAAInE,EAAI,EAAGA,EAAImE,EAAQnE,IAAKsE,GAAiBD,EAAMG,GAAiBH,EAAME,GAAiBF,EAAMI,GAAiBJ,EACnHD,EAAYM,MAAqBrB,EAAOiB,GAAiBR,EAAS,IAAMD,EAAS,GACjFO,EAAYO,MAAqBtB,EAAOkB,GAAiBT,EAAS,IAAMD,EAAS,GACjFO,EAAYQ,MAAqBvB,EAAOmB,GAAiBV,EAAS,IAAMD,EAAS,IACzD,IAApBgB,IAA4C,IAAnBJ,IACzBL,EAAYS,MAAqBxB,EAAOoB,GAAiBX,EAAS,IAAMD,EAAS,IAMzF,OAF+C,IAAInC,EAAO,UAAW0C,EAA/B,SAAjBH,EAA6D,CAAC,EAAG,EAAGV,EAAQC,GAC1D,CAAC,EAAG,EAAGD,EAAQC,GAE1D,CACAJ,uBAAuB0B,EAAOxB,GAE1B,MAAMyB,EAA+C,oBAAvB,kBAAsCD,aAAiBE,iBAC/EC,EAAwC,oBAAhB,WAA+BH,aAAiBI,UACxEC,EAAyC,oBAAlB,aAAiCL,aAAiBM,YACzEC,EAA4B,iBAAVP,EACxB,IAAI/C,EACAuD,EAAehC,GAAW,CAAC,EAE/B,GAAIyB,EAAgB,CAEhB,MAAMQ,EAASC,SAASC,cAAc,UACtCF,EAAO/B,MAAQsB,EAAMtB,MACrB+B,EAAOhC,OAASuB,EAAMvB,OACtB,MAAMmC,EAAkBH,EAAOI,WAAW,MAC1C,GAAuB,MAAnBD,EAqCA,MAAM,IAAI3F,MAAM,6BArCS,CACzB,IAAIwD,EAASuB,EAAMvB,OACfC,EAAQsB,EAAMtB,MAKlB,QAJgB1D,IAAZwD,QAAmDxD,IAA1BwD,EAAQsC,oBAAwD9F,IAAzBwD,EAAQuC,eACxEtC,EAASD,EAAQsC,cACjBpC,EAAQF,EAAQuC,mBAEJ/F,IAAZwD,EAAuB,CAEvB,GADAgC,EAAehC,OACcxD,IAAzBwD,EAAQY,aACR,MAAM,IAAInE,MAAM,+DAKpB,GAFIuF,EAAapB,aAAe,YAETpE,IAAnBwD,EAAQC,QAAwBD,EAAQC,SAAWA,EACnD,MAAM,IAAIxD,MAAM,mEAKpB,GAFIuF,EAAa/B,OAASA,OAEJzD,IAAlBwD,EAAQE,OAAuBF,EAAQE,QAAUA,EACjD,MAAM,IAAIzD,MAAM,iEAGhBuF,EAAa9B,MAAQA,CAE7B,MAEI8B,EAAapB,aAAe,OAC5BoB,EAAa/B,OAASA,EACtB+B,EAAa9B,MAAQA,EAEzBkC,EAAgBI,UAAUhB,EAAO,EAAG,GACpC/C,EAAO2D,EAAgBK,aAAa,EAAG,EAAGvC,EAAOD,GAAQxB,IAC7D,CAIJ,KACK,KAAIkD,EA4CJ,IAAIE,EAAe,CAEpB,QAAgBrF,IAAZwD,EACA,MAAM,IAAIvD,MAAM,2DAEpB,QAA6BD,IAAzBwD,EAAQU,aACR,MAAM,IAAIjE,MAAM,6DAEpB,MAAM2F,EAAkBF,SAASC,cAAc,UAAUE,WAAW,MACpE,GAAuB,MAAnBD,EAAyB,CACzB,MAAMnC,EAASuB,EAAMvB,OACfC,EAAQsB,EAAMtB,MAGpB,GAFAkC,EAAgBI,UAAUhB,EAAO,EAAG,EAAGtB,EAAOD,GAC9CxB,EAAO2D,EAAgBK,aAAa,EAAG,EAAGvC,EAAOD,GAAQxB,UACzCjC,IAAZwD,EAAuB,CAEvB,QAAuBxD,IAAnBwD,EAAQC,QAAwBD,EAAQC,SAAWA,EACnD,MAAM,IAAIxD,MAAM,8DAMpB,GAHIuF,EAAa/B,OAASA,OAGJzD,IAAlBwD,EAAQE,OAAuBF,EAAQE,QAAUA,EACjD,MAAM,IAAIzD,MAAM,4DAGhBuF,EAAa9B,MAAQA,CAE7B,MAEI8B,EAAa/B,OAASA,EACtB+B,EAAa9B,MAAQA,EAEzB,OAAO9B,EAAOsE,eAAejE,EAAMuD,EACvC,CAEI,MAAM,IAAIvF,MAAM,4BAExB,CACK,GAAIsF,EACL,OAAO,IAAIY,SAAQ,CAACC,EAASC,KACzB,MAAMZ,EAASC,SAASC,cAAc,UAChCW,EAAUb,EAAOI,WAAW,MAClC,IAAKb,IAAUsB,EACX,OAAOD,IAEX,MAAME,EAAW,IAAIC,MACrBD,EAASE,YAAc,YACvBF,EAASG,IAAM1B,EACfuB,EAASI,OAAS,KACdlB,EAAO/B,MAAQ6C,EAAS7C,MACxB+B,EAAOhC,OAAS8C,EAAS9C,OACzB6C,EAAQN,UAAUO,EAAU,EAAG,EAAGd,EAAO/B,MAAO+B,EAAOhC,QACvD,MAAMmD,EAAMN,EAAQL,aAAa,EAAG,EAAGR,EAAO/B,MAAO+B,EAAOhC,QAC5D,QAAgBzD,IAAZwD,EAAuB,CACvB,QAAuBxD,IAAnBwD,EAAQC,QAAwBD,EAAQC,SAAWgC,EAAOhC,OAC1D,MAAM,IAAIxD,MAAM,kDAKpB,GAFIuF,EAAa/B,OAASgC,EAAOhC,YAEXzD,IAAlBwD,EAAQE,OAAuBF,EAAQE,QAAU+B,EAAO/B,MACxD,MAAM,IAAIzD,MAAM,gDAGhBuF,EAAa9B,MAAQ+B,EAAO/B,KAEpC,MAEI8B,EAAa/B,OAASgC,EAAOhC,OAC7B+B,EAAa9B,MAAQ+B,EAAO/B,MAEhC0C,EAAQxE,EAAOsE,eAAeU,EAAI3E,KAAMuD,GAAc,CACzD,IAIL,MAAM,IAAIvF,MAAM,iEACpB,CA3HyB,CAErB,MAAM4G,EAAS,OACf,IAAIpD,EACAC,EASJ,QARgB1D,IAAZwD,QAAkDxD,IAAzBwD,EAAQuC,mBAAwD/F,IAA1BwD,EAAQsC,eACvErC,EAASD,EAAQsC,cACjBpC,EAAQF,EAAQuC,eAGhBtC,EAASuB,EAAMvB,OACfC,EAAQsB,EAAMtB,YAEF1D,IAAZwD,EAAuB,CAEvB,GADAgC,EAAehC,OACcxD,IAAzBwD,EAAQU,cAA8BV,EAAQU,eAAiB2C,EAC/D,MAAM,IAAI5G,MAAM,wDAGhBuF,EAAatB,aAAe,MAEpC,MAEIsB,EAAatB,aAAe,OAIhC,GAFAsB,EAAa/B,OAASA,EACtB+B,EAAa9B,MAAQA,OACL1D,IAAZwD,EAAuB,CACvB,MAAMsD,EAAapB,SAASC,cAAc,UAC1CmB,EAAWpD,MAAQA,EACnBoD,EAAWrD,OAASA,EACpB,MAAMmC,EAAkBkB,EAAWjB,WAAW,MAC9C,GAAuB,MAAnBD,EAKA,MAAM,IAAI3F,MAAM,6BAJhB2F,EAAgBmB,aAAa/B,EAAO,EAAG,GACvC/C,EAAO2D,EAAgBK,aAAa,EAAG,EAAGvC,EAAOD,GAAQxB,IAKjE,MAEIA,EAAO+C,EAAM/C,IAErB,CAgFA,CACA,QAAajC,IAATiC,EACA,OAAOL,EAAOsE,eAAejE,EAAMuD,GAGnC,MAAM,IAAIvF,MAAM,iEAExB,CACA+G,UAAUxD,GACN,MAAMiC,EAASC,SAASC,cAAc,UACtCF,EAAO/B,MAAQjD,KAAKyB,KAAK,GACzBuD,EAAOhC,OAAShD,KAAKyB,KAAK,GAC1B,MAAM0D,EAAkBH,EAAOI,WAAW,MAC1C,GAAuB,MAAnBD,EAAyB,CAEzB,IAAIlC,EACAD,OAC0BzD,IAA1BwD,GAASG,cAAuD,SAAzBH,EAAQG,cAC/CD,EAAQjD,KAAKyB,KAAK,GAClBuB,EAAShD,KAAKyB,KAAK,KAGnBwB,EAAQjD,KAAKyB,KAAK,GAClBuB,EAAShD,KAAKyB,KAAK,IAEvB,MAAM+B,OAAkCjE,IAApBwD,GAASqD,OAAuBrD,EAAQqD,OAAS,MAC/DjD,EAAOJ,GAASI,KACtB,IAAIG,EACAC,OACShE,IAAT4D,QAAoC5D,IAAd4D,EAAKC,KAC3BE,EAAW,CAAC,IAAK,IAAK,IAAK,KAGA,iBAAfH,EAAS,KACjBG,EAAW,CAACH,EAAKC,KAAMD,EAAKC,KAAMD,EAAKC,KAAMD,EAAKC,OAGlDE,EAAW,CAACH,EAAKC,KAAK,GAAID,EAAKC,KAAK,GAAID,EAAKC,KAAK,GAAI,QACjC7D,IAAjB4D,EAAKC,KAAK,KACVE,EAAS,GAAKH,EAAKC,KAAK,UAIvB7D,IAAT4D,QAAoC5D,IAAd4D,EAAKE,KAC3BE,EAAW,CAAC,EAAG,EAAG,EAAG,GAGM,iBAAfJ,EAAS,KACjBI,EAAW,CAACJ,EAAKE,KAAMF,EAAKE,KAAMF,EAAKE,KAAMF,EAAKE,OAGlDE,EAAW,CAACJ,EAAKE,KAAK,GAAIF,EAAKE,KAAK,GAAIF,EAAKE,KAAK,GAAI,QACjC9D,IAAjB4D,EAAKE,KAAK,KACVE,EAAS,GAAKJ,EAAKE,KAAK,KAIpC,MAAMO,EAASZ,EAASC,EAExB,IAAIkB,EAAiB,EAAGC,EAAiBR,EAAQS,EAA0B,EAATT,EAAYU,GAAkB,EAE5E,SAAhBd,GACAW,EAAiB,EACjBC,EAAiBR,EACjBS,EAA0B,EAATT,EACjBU,EAA0B,EAATV,GAEI,QAAhBJ,GACLW,EAAiB,EACjBC,EAAiBR,EACjBS,EAA0B,EAATT,GAEI,QAAhBJ,IACLW,EAAiB,EACjBE,EAAiBT,EACjBQ,EAA0B,EAATR,GAErB,IAAK,IAAInE,EAAI,EAAGA,EAAIuD,EAAQvD,IACxB,IAAK,IAAI+G,EAAI,EAAGA,EAAIvD,EAAOuD,IAAK,CAC5B,MAAMC,GAAKzG,KAAKwB,KAAK2C,KAAoBZ,EAAS,IAAMD,EAAS,GAC3DoD,GAAK1G,KAAKwB,KAAK4C,KAAoBb,EAAS,IAAMD,EAAS,GAC3DqD,GAAK3G,KAAKwB,KAAK6C,KAAoBd,EAAS,IAAMD,EAAS,GAC3DsD,GAAwB,IAApBtC,EACN,KACCtE,KAAKwB,KAAK8C,KAAoBf,EAAS,IAAMD,EAAS,GAE3D6B,EAAgB0B,UAAY,QAAUJ,EAAI,IAAMC,EAAI,IAAMC,EAAI,IAAMC,EAAI,IACxEzB,EAAgB2B,SAASN,EAAG/G,EAAG,EAAG,EACtC,CAEJ,OAAOuF,EAAOuB,WAClB,CAEI,MAAM,IAAI/G,MAAM,4BAExB,CACAuH,YAAYhE,GACR,MAAMoC,EAAkBF,SAASC,cAAc,UAAUE,WAAW,MACpE,IAAIb,EACJ,GAAuB,MAAnBY,EA4FA,MAAM,IAAI3F,MAAM,6BA5FS,CAEzB,IAAIyD,EACAD,EACAgE,OAC0BzH,IAA1BwD,GAASG,cAAuD,SAAzBH,EAAQG,cAC/CD,EAAQjD,KAAKyB,KAAK,GAClBuB,EAAShD,KAAKyB,KAAK,GACnBuF,EAAWhH,KAAKyB,KAAK,KAGrBwB,EAAQjD,KAAKyB,KAAK,GAClBuB,EAAShD,KAAKyB,KAAK,GACnBuF,EAAWhH,KAAKyB,KAAK,IAEzB,MAAM+B,OAA0BjE,IAAZwD,QAA4CxD,IAAnBwD,EAAQqD,OAAuBrD,EAAQqD,OAAkB,MAChGjD,EAAOJ,GAASI,KACtB,IAAIG,EACAC,OACShE,IAAT4D,QAAoC5D,IAAd4D,EAAKC,KAC3BE,EAAW,CAAC,IAAK,IAAK,IAAK,KAGA,iBAAfH,EAAS,KACjBG,EAAW,CAACH,EAAKC,KAAMD,EAAKC,KAAMD,EAAKC,KAAMD,EAAKC,OAGlDE,EAAW,CAACH,EAAKC,KAAK,GAAID,EAAKC,KAAK,GAAID,EAAKC,KAAK,GAAI,UACjC7D,IAAjB4D,EAAKC,KAAK,KACVE,EAAS,GAAKH,EAAKC,KAAK,UAIvB7D,IAAT4D,QAAoC5D,IAAd4D,EAAKE,KAC3BE,EAAW,CAAC,EAAG,EAAG,EAAG,GAGM,iBAAfJ,EAAS,KACjBI,EAAW,CAACJ,EAAKE,KAAMF,EAAKE,KAAMF,EAAKE,KAAMF,EAAKE,OAGlDE,EAAW,CAACJ,EAAKE,KAAK,GAAIF,EAAKE,KAAK,GAAIF,EAAKE,KAAK,GAAI,QACjC9D,IAAjB4D,EAAKE,KAAK,KACVE,EAAS,GAAKJ,EAAKE,KAAK,KAIpC,MAAMO,EAASZ,EAASC,EACxB,QAAgB1D,IAAZwD,EAAuB,CACvB,QAAuBxD,IAAnBwD,EAAQC,QAAwBD,EAAQC,SAAWA,EACnD,MAAM,IAAIxD,MAAM,0DAEpB,QAAsBD,IAAlBwD,EAAQE,OAAuBF,EAAQE,QAAUA,EACjD,MAAM,IAAIzD,MAAM,wDAEpB,QAAuBD,IAAnBwD,EAAQqD,QAAsC,IAAbY,GAAqC,SAAnBjE,EAAQqD,QAC7C,IAAbY,GAAsC,QAAnBjE,EAAQqD,QAAuC,QAAnBrD,EAAQqD,OACxD,MAAM,IAAI5G,MAAM,gDAExB,CAEA,MAAMsE,EAAO,EACb,IAAIC,EAAgB,EAAGC,EAAgB,EAAGC,EAAgB,EAAGC,EAAgB,EACzEC,EAAiB,EAAGC,EAAiBR,EAAQS,EAA0B,EAATT,EAAYU,GAAkB,EAE5E,SAAhBd,GACAW,EAAiB,EACjBC,EAAiBR,EACjBS,EAA0B,EAATT,EACjBU,EAA0B,EAATV,GAEI,QAAhBJ,GACLW,EAAiB,EACjBC,EAAiBR,EACjBS,EAA0B,EAATT,GAEI,QAAhBJ,IACLW,EAAiB,EACjBE,EAAiBT,EACjBQ,EAA0B,EAATR,GAErBW,EAAQY,EAAgB8B,gBAAgBhE,EAAOD,GAC/C,IAAK,IAAIvD,EAAI,EAAGA,EAAIuD,EAASC,EAAOc,GAAiBD,EAAME,GAAiBF,EAAMG,GAAiBH,EAAMI,GAAiBJ,EAAMrE,IAC5H8E,EAAM/C,KAAKuC,IAAkB/D,KAAKwB,KAAK2C,KAAoBZ,EAAS,IAAMD,EAAS,GACnFiB,EAAM/C,KAAKwC,IAAkBhE,KAAKwB,KAAK4C,KAAoBb,EAAS,IAAMD,EAAS,GACnFiB,EAAM/C,KAAKyC,IAAkBjE,KAAKwB,KAAK6C,KAAoBd,EAAS,IAAMD,EAAS,GACnFiB,EAAM/C,KAAK0C,IAAqC,IAApBI,EACxB,KACCtE,KAAKwB,KAAK8C,KAAoBf,EAAS,IAAMD,EAAS,EAEnE,CAIA,OAAOiB,CACX,CAGA2C,QAAQzF,GACJ,OAAO,IAAIN,EAAOnB,KAAKuB,KAAMvB,KAAKwB,KAAMC,EAC5C,ECpmBG,MAAM,EAASN,ECAf,MAAMgG,EACTpH,YAAYqH,GACRpH,KAAKoH,QAAUA,CACnB,CACAC,UAAUC,EAAOjG,EAAMC,GACnB,MAAMiG,EAAU,CAAC,EACjB,IAAIxE,EAAU,CAAC,EAEf,GAAqB,iBAAVuE,GAAgC,OAAVA,GAAkBA,aAAiB,GAAUrF,MAAMC,QAAQoF,GACxF,MAAM,IAAIjI,UAAU,iGAExB,IAAImI,GAAiB,EAErB,GAAoB,iBAATnG,EAAmB,CAC1B,GAAa,OAATA,EACA,MAAM,IAAIhC,UAAU,2CAExB,GAAIgC,aAAgB,EAChB,MAAM,IAAIhC,UAAU,gCAExB,GAAI4C,MAAMC,QAAQb,GAAO,CACrB,GAAoB,IAAhBA,EAAKzB,OACL,MAAM,IAAIP,UAAU,uCAExBmI,GAAiB,EAEjB,IAAK,MAAMxI,KAAQqC,EAAM,CACrB,GAAoB,iBAATrC,EACP,MAAM,IAAIK,UAAU,kDAExB,IAAwC,IAApCW,KAAKyH,YAAY/H,QAAQV,GACzB,MAAM,IAAI2D,WAAW,2CAA2C3D,MAEpEuI,EAAQvI,GAAQ,IACpB,CACA,GAAoB,iBAATsC,GAA8B,OAATA,EAC5ByB,EAAUzB,OAET,QAAoB,IAATA,EACZ,MAAM,IAAIjC,UAAU,+BAE5B,KACK,CAGD,IAAIqI,GAAY,EAChB,MAAMC,EAAWC,OAAOC,oBAAoBxG,GAC5C,IAAK,MAAMrC,KAAQgB,KAAKyH,YACpB,IAAgC,IAA5BE,EAASjI,QAAQV,GAAc,CAC/B,MAAM8I,EAAIzG,EAAKrC,IACL,OAAN8I,GAAcA,aAAa,KAC3BJ,GAAY,EACZF,GAAiB,EACjBD,EAAQvI,GAAQ8I,EAExB,CAEJ,GAAIJ,GACA,GAAoB,iBAATpG,GAA8B,OAATA,EAC5ByB,EAAUzB,OAET,QAAoB,IAATA,EACZ,MAAM,IAAIjC,UAAU,qCAIxB0D,EAAU1B,CAElB,CACJ,MACK,QAAoB,IAATA,EACZ,MAAM,IAAIhC,UAAU,2DAGxB,IAAK,MAAML,KAAQgB,KAAK+H,WACpB,QAA2B,IAAhBT,EAAMtI,GACb,MAAM,IAAIQ,MAAM,UAAUR,6BAIlC,GAAIwI,EACA,IAAK,MAAMxI,KAAQgB,KAAKyH,YACpBF,EAAQvI,GAAQ,KAIxB,MAAMgJ,QAAgBhI,KAAKoH,QAAQa,IAAIX,EAAOC,EAASxE,GACjDmF,EAAc,CAAC,EACrB,IAAK,MAAMC,KAAOH,EACVJ,OAAOQ,eAAeC,KAAKL,EAASG,KACpCD,EAAYC,GAAO,IAAI,EAAOH,EAAQG,GAAK5G,KAAMyG,EAAQG,GAAK3G,KAAMwG,EAAQG,GAAK1G,OAGzF,OAAOyG,CACX,CACArF,oBAAoBzB,EAAMC,EAAMC,EAAMgH,GAElC,IAAIC,EACAxF,EAAU,CAAC,EACf,GAAoB,iBAAT3B,GAEP,GADAmH,EAAuBnH,EACH,iBAATC,GAA8B,OAATA,EAC5B0B,EAAU1B,OAET,QAAoB,IAATA,EACZ,MAAM,IAAIhC,UAAU,qCAGvB,GAAI+B,aAAgBV,YAErB,GADA6H,EAAuBnH,EACH,iBAATC,GAA8B,OAATA,EAC5B0B,EAAU1B,OAET,QAAoB,IAATA,EACZ,MAAM,IAAIhC,UAAU,oCAGvB,MAAI+B,aAAgBoH,aACS,oBAAtBC,mBAAqCrH,aAAgBqH,mBAyC7D,MAAM,IAAIpJ,UAAU,uDAzC6D,CACjF,MAAMyD,EAAS1B,EACf,IAAIsH,EAAa,EACbC,EAAavH,EAAKuH,WACtB,GAAoB,iBAATtH,GAA8B,OAATA,EAC5B0B,EAAU1B,OAET,GAAoB,iBAATA,EAAmB,CAE/B,GADAqH,EAAarH,GACRoB,OAAOC,cAAcgG,GACtB,MAAM,IAAI/F,WAAW,oCAEzB,GAAI+F,EAAa,GAAKA,GAAc5F,EAAO6F,WACvC,MAAM,IAAIhG,WAAW,oCAAoCG,EAAO6F,gBAGpE,GADAA,EAAavH,EAAKuH,WAAaD,EACX,iBAATpH,EAAmB,CAE1B,GADAqH,EAAarH,GACRmB,OAAOC,cAAciG,GACtB,MAAM,IAAIhG,WAAW,oCAEzB,GAAIgG,GAAc,GAAKD,EAAaC,EAAa7F,EAAO6F,WACpD,MAAM,IAAIhG,WAAW,oCAAoCG,EAAO6F,WAAaD,OAEjF,GAAoB,iBAATJ,GAA8B,OAATA,EAC5BvF,EAAUuF,OAET,QAAoB,IAATA,EACZ,MAAM,IAAIjJ,UAAU,+BAE5B,MACK,QAAoB,IAATiC,EACZ,MAAM,IAAIjC,UAAU,iCAE5B,MACK,QAAoB,IAATgC,EACZ,MAAM,IAAIhC,UAAU,gCAExBkJ,EAAuB,IAAI7H,WAAWoC,EAAQ4F,EAAYC,EAC9D,CAGA,CAEA,MACMC,GADM7F,EAAQ8F,oBAAsB,IACjBC,KAAIrJ,GAAkB,iBAANA,EAAiBA,EAAIA,EAAET,OAC1DC,OLlHgBoI,OAAOuB,IACjC,MAAMG,EAAuC,IAAxBH,EAAahJ,OAAed,EAA2B8J,EACtEI,EAAS,GACf,IAAK,MAAMC,KAAeF,EAAc,CACpC,MAAMG,EAAcrK,EAASoK,GAC7B,GAAIC,EAAa,CACb,GAAIA,EAAYC,YACZ,OAAOD,EAAYjK,QAElB,GAAIiK,EAAYE,QACjB,SAEJ,MAAMC,IAAmBH,EAAYI,YACrC,IAMI,OALKD,IACDH,EAAYI,YAAcJ,EAAYjK,QAAQE,cAE5C+J,EAAYI,YAClBJ,EAAYC,aAAc,EACnBD,EAAYjK,OACvB,CACA,MAAOsK,GACEF,GACDL,EAAOnJ,KAAK,CAAEb,KAAMiK,EAAaO,IAAKD,IAE1CL,EAAYE,SAAU,CAC1B,CACA,eACWF,EAAYI,WACvB,CACJ,CACJ,CACA,MAAM,IAAI9J,MAAM,oCAAoCwJ,EAAOF,KAAIS,GAAK,IAAIA,EAAEvK,SAASuK,EAAEC,QAAOC,KAAK,QAAQ,EKkF/EC,CAAed,GAC/BxB,QAAgBnI,EAAQG,qBAAqBmJ,EAAsBxF,GACzE,OAAO,IAAIoE,EAAiBC,EAChC,CACAuC,iBACI3J,KAAKoH,QAAQuC,gBACjB,CACAC,eACI5J,KAAKoH,QAAQwC,cACjB,CACI7B,iBACA,OAAO/H,KAAKoH,QAAQW,UACxB,CACIN,kBACA,OAAOzH,KAAKoH,QAAQK,WACxB,ECnLG,MAAM,EAAmBN,C,ggDCEhC,cACA,UAEA,0BAqBA,QAnBQ,YAAAhI,KAAN,W,oFAEM,YAAAC,qBAAN,SAA2ByK,EAAiC9G,G,uGAMpD+G,EAAU,IAAI,EAAAC,QAAQhH,GAGA,iBAAjB8G,EAAP,MACF,GAAMC,EAAQE,UAAUH,I,cAAxB,S,aAEA,SAAMC,EAAQE,UAAUH,I,OAAxB,S,iBAGF,MAAO,CAAP,EAAO,IAAI,EAAAI,qBAAqBH,I,QAEpC,EArBA,GAuBa,EAAAI,cAAgB,IAAIC,C,ghDC7BjC,cACA,UAEA,UACA,UAQa,EAAAC,gBAAkB,WAa7B,IAZoC,iBAAzB,EAAAtK,IAAIG,KAAKoK,aAA4B,EAAAvK,IAAIG,KAAKoK,YAAc,KACrE,EAAAvK,IAAIG,KAAKoK,YAAc,GAGI,kBAAlB,EAAAvK,IAAIG,KAAKqK,OAClB,EAAAxK,IAAIG,KAAKqK,MAAO,GAGY,kBAAnB,EAAAxK,IAAIG,KAAKsK,QAClB,EAAAzK,IAAIG,KAAKsK,OAAQ,GAGgB,iBAAxB,EAAAzK,IAAIG,KAAKuK,aAA4B/H,OAAOgI,UAAU,EAAA3K,IAAIG,KAAKuK,aAAe,EAAA1K,IAAIG,KAAKuK,YAAc,EAAG,CACjH,IAAME,EAA0C,oBAAdC,WAA4B,IAAAC,QAAOhL,OAAS+K,UAAUE,oBACxF,EAAA/K,IAAIG,KAAKuK,WAAaM,KAAKC,IAAI,EAAGD,KAAKE,MAAMN,GAAsB,GAAK,G,CAE5E,EAEA,8BAgBA,QAfQ,YAAAvL,KAAN,W,0FAKE,OAHA,IAAAiL,mBAGA,IAAM,IAAAa,a,cAAN,S,YAII,YAAA7L,qBAAN,SAA2ByK,EAAiC9G,G,gGAG1D,UADMqE,EAAU,IAAI,EAAA8D,sCACNlB,UAAUH,EAAc9G,I,OACtC,OADA,SACO,CAAP,EAAO2C,QAAQC,QAAQyB,I,QAE3B,EAhBA,GAkBa,EAAA+D,YAAc,IAAIC,C,ygBC5C/B,aACA,cAGQlB,EAAgB,uBACtB,IAAAnL,iBAAgB,QAASmL,GAAgB,IAIzC,IAAMiB,EAAc,qBAIpB,IAAApM,iBAAgB,MAAOoM,EAAa,KACpC,IAAApM,iBAAgB,OAAQoM,EAAa,KACrC,IAAApM,iBAAgB,UAAWoM,EAAa,E,wHCpB1C,iBACE,WAAYE,GACVzD,OAAO0D,OAAOtL,KAAMqL,EACtB,CAUF,OAPE,sBAAW,uBAAQ,C,IAAnB,sBAKE,OAJKrL,KAAKuL,YACRvL,KAAKuL,UACD3D,OAAOC,oBAAoB7H,MAAMwL,OAAO1C,KAAI,SAAA9J,GAAQ,gBAAI,EAAiCA,GAArC,IAA8CyK,KAAK,MAEtGzJ,KAAKuL,SACd,E,gCACF,EAbA,GAmBa,EAAAE,4BAA8B,SAAoCJ,GAC3E,WAAIK,EAA0BL,EAA9B,C,6aCnBJ,cAEA,UACA,UACA,UAEOM,EAAS,EAAAC,YAAYC,aAAaC,IAqBzC,aACE,WAAYC,G,QAEV,GADA/L,KAAKgM,YAAc,IAAIxL,IACnBuL,QAAiD,C,IACnD,IAAmB,QAAAA,GAAU,8BAAE,CAA1B,IAAME,EAAI,QACTA,aAAgB,EAAAC,KAAKC,eACvBnM,KAAKgM,YAAYjK,IAAIkK,EAAKjN,KAAM,CAACoN,EAAUC,SAASJ,GAAOG,EAAUE,QAAQL,KACpEA,aAAgBN,EAAOS,WAChCpM,KAAKgM,YAAYjK,IAAIkK,EAAKjN,OAAS,CAACoN,EAAUC,SAASJ,GAAOG,EAAUE,QAAQL,I,mGAGpF,GAAIjM,KAAKgM,YAAYzJ,KAAOwJ,EAAWnM,OACrC,MAAM,IAAIJ,MAAM,6B,CAGtB,CAiOF,OA/NE,YAAAuC,IAAA,SAAIoG,EAAa5G,EAA0BjB,GACzCN,KAAKgM,YAAYjK,IAAIoG,EAAK,CAAC7H,EAAOiB,GACpC,EACA,YAAAgL,OAAA,SAAOpE,GACLnI,KAAKgM,YAAYO,OAAOpE,EAC1B,EACA,YAAAqE,SAAA,SAASrE,EAAasE,GACpB,OAAOzM,KAAKoC,IAAI+F,EAAK,QAASsE,EAChC,EAEA,YAAAC,OAAA,SAAOvE,EAAasE,GAClB,OAAOzM,KAAKoC,IAAI+F,EAAK,MAAOsE,EAC9B,EAEA,YAAAE,UAAA,SAAUxE,EAAasE,GACrB,OAAOzM,KAAKoC,IAAI+F,EAAK,SAAUsE,EACjC,EAEA,YAAAG,UAAA,SAAUzE,EAAasE,GACrB,OAAOzM,KAAKoC,IAAI+F,EAAK,SAAUsE,EACjC,EAEA,YAAAI,UAAA,SAAU1E,EAAasE,GACrB,OAAOzM,KAAKoC,IAAI+F,EAAK,SAAUsE,EACjC,EAEA,YAAAK,QAAA,SAAQ3E,EAAasE,GACnB,OAAOzM,KAAKoC,IAAI+F,EAAK,OAAQsE,EAC/B,EAEA,YAAAM,WAAA,SAAW5E,EAAasE,GACtB,OAAOzM,KAAKoC,IAAI+F,EAAK,UAAWsE,EAClC,EAEA,YAAAO,WAAA,SAAW7E,EAAasE,GACtB,OAAOzM,KAAKoC,IAAI+F,EAAK,UAAWsE,EAClC,EAEQ,YAAArK,IAAR,SACI+F,EAAa5G,EAA0BkL,GACzC,IAAMQ,EAAejN,KAAKgM,YAAY5J,IAAI+F,GAC1C,QAAqB5I,IAAjB0N,EAA4B,CAC9B,QAAqB1N,IAAjBkN,EACF,OAAOA,EAET,MAAM,IAAIjN,MAAM,wCAAiC2I,G,CAEnD,GAAI8E,EAAa,KAAO1L,EACtB,MAAM,IAAI/B,MAAM,kCAA2B+B,EAAI,oBAAY0L,EAAa,KAE1E,OAAOA,EAAa,EACtB,EAEe,EAAAX,QAAf,SAAuBL,GACrB,IAAM1K,EAAO0K,aAAgB,EAAAC,KAAKC,eAAiB,EAAO5K,KAAQ0K,EAA0B1K,OAC5F,OAAQA,GACN,KAAK,EAAA2K,KAAKC,eAAee,cAAcC,MACrC,MAAO,QACT,KAAK,EAAAjB,KAAKC,eAAee,cAAcE,IACrC,MAAO,MACT,KAAK,EAAAlB,KAAKC,eAAee,cAAcG,OACrC,MAAO,SACT,KAAK,EAAAnB,KAAKC,eAAee,cAAcI,OACrC,MAAO,SACT,KAAK,EAAApB,KAAKC,eAAee,cAAcK,OACrC,MAAO,SACT,KAAK,EAAArB,KAAKC,eAAee,cAAcM,KACrC,MAAO,OACT,KAAK,EAAAtB,KAAKC,eAAee,cAAcO,QACrC,MAAO,UACT,KAAK,EAAAvB,KAAKC,eAAee,cAAcQ,QACrC,MAAO,UACT,QACE,MAAM,IAAIlO,MAAM,+CAAwC,EAAA0M,KAAKC,eAAee,cAAc3L,KAEhG,EAEe,EAAA8K,SAAf,SAAwBJ,GACtB,IAAM0B,EAAW1B,aAAgB,EAAAC,KAAKC,eAAiBF,EAAK1K,KAAQ0K,EAA0B1K,OAC9F,GAAIoM,IAAa,EAAAzB,KAAKC,eAAee,cAAcU,OAASD,IAAa,EAAAzB,KAAKC,eAAee,cAAcW,OACzG,MAAM,IAAIrO,MAAM,wCAGlB,IAAMc,EAAQN,KAAK8N,gBAAgB7B,GAGnC,GAAI0B,IAAa,EAAAzB,KAAKC,eAAee,cAAcE,KAAO,EAAAW,SAASC,OAAO1N,GACxE,OAAO,EAAAyN,SAASE,aAAa3N,GAI/B,GAAIqN,IAAa,EAAAzB,KAAKC,eAAee,cAAcM,KAAM,CAIvD,IAHA,IAAMU,EAAO5N,EACP6N,EAAwB,IAAIlM,MAAciM,EAAItO,QAE3CH,EAAI,EAAGA,EAAIyO,EAAItO,OAAQH,IAAK,CACnC,IAAM2O,EAAYF,EAAIzO,GACtB0O,EAAY1O,GAAK,EAAAsO,SAASE,aAAaG,E,CAGzC,OAAOD,C,CAIT,GAAIR,IAAa,EAAAzB,KAAKC,eAAee,cAAcI,OACjD,OAAOrB,aAAgB,EAAAC,KAAKC,eAAiB,EAAAhL,OAAOkN,UAAU/N,GACjB,EAAAa,OAAOmN,cAAchO,GAIpE,GAAIqN,IAAa,EAAAzB,KAAKC,eAAee,cAAcQ,QAAS,CAC1D,GAAIzB,aAAgB,EAAAC,KAAKC,eAEvB,OADqB7L,EACDwI,KAAI,SAAAxI,GAAS,SAAAa,OAAOkN,UAAU/N,EAAjB,IAC5B,GAAI2L,aAAgBN,EAAOS,UAEhC,OADqB9L,EACDwI,KAAI,SAAAxI,GAAS,SAAAa,OAAOmN,cAAchO,EAArB,G,CAKrC,GAAIqN,IAAa,EAAAzB,KAAKC,eAAee,cAAcG,QAG7CpB,aAAgB,EAAAC,KAAKC,eAAgB,CACvC,IAAMoC,EAAajO,EACnB,OAAO,IAAAkO,kBAAiBD,E,CAK5B,OAAIZ,IAAa,EAAAzB,KAAKC,eAAee,cAAcO,SAG7CxB,aAAgB,EAAAC,KAAKC,eACH7L,EACDwI,IAAI,EAAA0F,kBAIpBlO,CACT,EAEe,EAAAwN,gBAAf,SAA+B7B,GAC7B,OAAOA,aAAiB,EAAAC,KAAmB,eAAIlM,KAAKyO,8BAA8BxC,GACnCjM,KAAK0O,6BAA6BzC,EACnF,EAEe,EAAAwC,8BAAf,SAA6CxC,GAC3C,OAAQA,EAAK1K,MACX,KAAK,EAAA2K,KAAKC,eAAee,cAAcC,MACrC,OAAOlB,EAAK0C,EACd,KAAK,EAAAzC,KAAKC,eAAee,cAAcE,IACrC,OAAOnB,EAAKxM,EACd,KAAK,EAAAyM,KAAKC,eAAee,cAAcG,OACrC,OAAOpB,EAAK2C,EACd,KAAK,EAAA1C,KAAKC,eAAee,cAAcI,OACrC,OAAOrB,EAAK4C,EACd,KAAK,EAAA3C,KAAKC,eAAee,cAAcU,MACrC,OAAO3B,EAAK6C,EACd,KAAK,EAAA5C,KAAKC,eAAee,cAAcK,OACrC,OAAOtB,EAAK8C,OACd,KAAK,EAAA7C,KAAKC,eAAee,cAAcM,KACrC,OAAOvB,EAAK+C,KACd,KAAK,EAAA9C,KAAKC,eAAee,cAAcO,QACrC,OAAOxB,EAAKgD,QACd,KAAK,EAAA/C,KAAKC,eAAee,cAAcQ,QACrC,OAAOzB,EAAKiD,QACd,KAAK,EAAAhD,KAAKC,eAAee,cAAcW,OACrC,OAAO5B,EAAKkD,OACd,QACE,MAAM,IAAI3P,MAAM,sCAA+B,EAAA0M,KAAKC,eAAee,cAAcjB,EAAK1K,QAE5F,EAEe,EAAAmN,6BAAf,SAA4CzC,GAC1C,OAAQA,EAAK1K,QACX,KAAKoK,EAAOuB,cAAcC,MACxB,OAAOlB,EAAK0C,IACd,KAAKhD,EAAOuB,cAAcE,IACxB,OAAOnB,EAAKxM,IACd,KAAKkM,EAAOuB,cAAcG,OACxB,OAAOpB,EAAK2C,IACd,KAAKjD,EAAOuB,cAAcI,OACxB,OAAOrB,EAAK4C,IACd,KAAKlD,EAAOuB,cAAcU,MACxB,OAAO3B,EAAK6C,IACd,KAAKnD,EAAOuB,cAAcK,OACxB,OAAOtB,EAAKmD,cACd,KAAKzD,EAAOuB,cAAcM,KAExB,IADA,IAAMwB,EAAO,GACJvP,EAAI,EAAGA,EAAIwM,EAAKoD,aAAc5P,IACrCuP,EAAKnP,KAAKoM,EAAK+C,KAAKvP,IAEtB,OAAOuP,EAET,KAAKrD,EAAOuB,cAAcO,QACxB,IAAMwB,EAAU,GAChB,IAASxP,EAAI,EAAGA,EAAIwM,EAAKqD,gBAAiB7P,IACxCwP,EAAQpP,KAAKoM,EAAKgD,QAAQxP,IAE5B,OAAOwP,EAET,KAAKtD,EAAOuB,cAAcQ,QACxB,IAAMwB,EAAU,GAChB,IAASzP,EAAI,EAAGA,EAAIwM,EAAKsD,gBAAiB9P,IACxCyP,EAAQrP,KAAKoM,EAAKiD,QAAQzP,IAE5B,OAAOyP,EAST,QACE,MAAM,IAAI1P,MAAM,sCAA+BmM,EAAOuB,cAAcjB,EAAK1K,UAE/E,EAGF,EAhPA,GAAa,EAAA6K,UAAAA,C,40DC5Bb,cA0EMoD,EAAsC,IAAIhP,IAgChD,SAAeiP,EAAeC,G,gHAGW,KAFjCC,EAAa,EAAA1Q,SAEGyQ,KAeLE,EAf+CD,EAAWD,GAqBvE,eAJEG,EAAID,IAIuC,mBAAjBC,EAAEC,YAC9B,yBAA0BD,GAAuC,mBAA3BA,EAAEzQ,sBACxC,YAAayQ,GAA0B,mBAAdA,EAAEE,UAtBvB,EAAUJ,EAAWD,GAEP,iBADhBvQ,EAAO,EAAQ2Q,eACa,SAAU3Q,EACjC,GAAMA,GADX,OAHF,M,OAIAA,EAAO,S,iBAET,GAAIA,EAEF,OADAqQ,EAAczN,IAAI2N,EAAa,GACxB,CAAP,EAAO,G,iBAIX,MAAO,CAAP,OAAOnQ,GAGT,IAAmBqQ,EAEXC,C,OAlDK,EAAA5Q,QAAqC,CAChDiB,MAAO,IAAI,EAAA8P,cAOb,0BAAsBtG,EAAeuG,G,uHAC9BA,EAAD,MACK,CAAP,EAAOvG,EAAe,CAAC,W,OAEjBwG,EAAwB,iBAATD,EAAoB,CAACA,GAAQA,E,wCAExB,IAAAC,GAAK,W,sCAApBR,EAAW,SACdS,EAAQX,EAAcpN,IAAIsN,IAEvB,CAAP,EAAOS,GAGO,GAAMV,EAAeC,K,OACrC,GADM,EAAU,SAEd,MAAO,CAAP,EAAO,G,kMAKb,MAAM,IAAIlQ,MAAM,+B,kHCvGlB,cAGA,UAGA,UAEA,UAOA,0BAyEA,QAtEE,sBAAI,wBAAS,C,IAAb,WACE,OAAO,EAAAM,IAAII,MAAMkQ,SACnB,E,IACA,SAAc9P,GACZ,EAAAR,IAAII,MAAMkQ,UAAY9P,CACxB,E,gCAEA,sBAAI,iCAAkB,C,IAAtB,WACE,OAAO,EAAAR,IAAII,MAAMmQ,kBACnB,E,IACA,SAAuB/P,GACrB,EAAAR,IAAII,MAAMmQ,mBAAqB/P,CACjC,E,gCAEA,sBAAI,+BAAgB,C,IAApB,WACE,OAAO,EAAAR,IAAII,MAAMoQ,gBACnB,E,IACA,SAAqBhQ,GACnB,EAAAR,IAAII,MAAMoQ,iBAAmBhQ,CAC/B,E,gCAEA,sBAAI,mBAAI,C,IAAR,WACE,OAAO,EAAAR,IAAII,MAAMqQ,IACnB,E,IACA,SAASjQ,GACP,EAAAR,IAAII,MAAMqQ,KAAOjQ,CACnB,E,gCAEA,sBAAI,oBAAK,C,IAAT,WACE,OAAO,EAAAR,IAAII,MAAMmH,KACnB,E,IACA,SAAU/G,GACR,EAAAR,IAAII,MAAMmH,MAAQ/G,CACpB,E,gCAEA,YAAAwP,WAAA,WACE,IAsBE,OArBA9P,KAAKwQ,WAAY,IAAAC,oBAAmBzQ,KAAKoQ,WACF,iBAA5BpQ,KAAKqQ,qBACdrQ,KAAKqQ,mBAAqB,IAES,iBAA1BrQ,KAAKsQ,mBACdtQ,KAAKsQ,iBAAmB,QAED,kBAAdtQ,KAAKuQ,OACdvQ,KAAKuQ,MAAO,GAEY,kBAAfvQ,KAAKqH,QACdrH,KAAKqH,OAAQ,GAGf,EAAAqJ,OAAOC,WAAW,EAAA7Q,KAElB,EAAA4Q,OAAOE,QACH,eACA,uCAAgC5Q,KAAKwQ,UAAS,qCAC1CxQ,KAAKqQ,mBAAkB,+BAAuBrQ,KAAKsQ,iBAAgB,mBAAWtQ,KAAKuQ,KAAI,oBACvFvQ,KAAKqH,MAAK,OACX,C,CACP,MAAOkC,GAEP,OADA,EAAAmH,OAAOG,QAAQ,eAAgB,6CAAsCtH,KAC9D,C,CAEX,EACA,YAAAnK,qBAAA,SAAqByG,GACnB,OAAO,IAAI,EAAAiL,oBAAoB9Q,KAAM6F,EACvC,EACA,YAAAkK,QAAA,WACE/P,KAAKwQ,UAAUT,SACjB,EACF,EAzEA,GAAa,EAAAC,aAAAA,C,6lCCfb,cAEA,UACA,UACA,UAEA,SAMA,cAGE,WAAYnK,G,OACV,YAAMA,IAAQ,IAChB,CAqyCF,OA1yCmC,OAMjC,YAAAkL,aAAA,WACE,OAAO,EAAP,eACK/Q,KAAKgR,kBACLhR,KAAKiR,kBACLjR,KAAKkR,SACLlR,KAAKmR,aAELnR,KAAKoR,sBACLpR,KAAKqR,6BACLrR,KAAKsR,2BAEZ,EACA,YAAAC,eAAA,WACE,MAAO,CAAC,CACV,EAKU,YAAAP,eAAV,WAEE,MAAO,CACLA,eAAgB,IAAI,EAAAQ,eAAe,uBAFpB,iBAGA,iOAQnB,EAMU,YAAAP,eAAV,WAEE,MAAO,CACLA,eAAgB,IAAI,EAAAO,eAAe,sBAFpB,iBAGD,4NAQlB,EAMU,YAAAF,yBAAV,WACE,IAAMG,EAAezR,KAAK6F,QAAQ6L,oBAClC,OAAID,EAAaE,SACR3R,KAAK4R,+BAA+BH,GAEpCzR,KAAK6R,iCAAiCJ,EAEjD,EAKU,YAAAG,+BAAV,SAAyCH,GACvC,IAAMK,EAAWL,EAAaM,cACxBC,EAAc,CAACP,EAAaxO,MAAOwO,EAAazO,QAChDiP,EAA2C,CAAC,EAC5CC,EAAW,kBACjB,OAAQJ,EAASlS,QACf,KAAK,EACHqS,EAAOC,GAAYlS,KAAKmS,wBACxB,MACF,KAAK,EACHF,EAAOC,GAAYlS,KAAKoS,wBAAwBN,EAAsBE,GACtE,MACF,KAAK,EACHC,EAAOC,GAAYlS,KAAKqS,wBAAwBP,EAA8BE,GAC9E,MACF,KAAK,EACHC,EAAOC,GACHlS,KAAKsS,wBAAwBR,EAAsCE,GACvE,MACF,QACEC,EAAOC,GAAYlS,KAAKuS,wBAAwBT,EAAUE,GAE9D,IAAMQ,GAAO,IAAAC,SAAQzS,KAAK6F,QAAQ2K,UAAUkC,SAGtCC,EAA4B,sDAE5BH,EAAKI,OAAM,0BAKjB,OADAX,EAAkC,oBAAI,IAAI,EAAAT,eAAemB,GAClDV,CACT,EAKU,YAAAJ,iCAAV,SAA2CJ,GACzC,IAAMK,EAAWL,EAAaM,cACxBC,EAAc,CAACP,EAAaxO,MAAOwO,EAAazO,QAChDiP,EAA2C,CAAC,EAC5CC,EAAW,kBACjB,OAAQJ,EAASlS,QACf,KAAK,EACHqS,EAAOC,GAAYlS,KAAKmS,wBACxB,MACF,KAAK,EACHF,EAAOC,GAAYlS,KAAK6S,0BAA0Bf,EAAsBE,GACxE,MACF,KAAK,EACHC,EAAOC,GACHlS,KAAK8S,0BAA0BhB,EAA8BE,GACjE,MACF,KAAK,EACHC,EAAOC,GACHlS,KAAK+S,0BAA0BjB,EAAsCE,GACzE,MACF,KAAK,EACHC,EAAOC,GAAYlS,KAAKgT,0BACpBlB,EAA8CE,GAClD,MACF,KAAK,EACHC,EAAOC,GAAYlS,KAAKiT,0BACpBnB,EAAsDE,GAC1D,MACF,KAAK,EACHC,EAAOC,GAAYlS,KAAKkT,0BACpBpB,EAA8DE,GAClE,MACF,QACE,MAAM,IAAIxS,MAAM,6CAAsCsS,EAASlS,SAEnE,IAAM4S,GAAO,IAAAC,SAAQzS,KAAK6F,QAAQ2K,UAAUkC,SAGtCS,EAAyB,2DAEvBX,EAAKI,OAAM,2CAKnB,OADAX,EAA+B,iBAAI,IAAI,EAAAT,eAAe2B,GAC/ClB,CACT,EAKU,YAAAE,sBAAV,WACE,OAAO,IAAI,EAAAX,eAAe,oEAK5B,EAKU,YAAAY,wBAAV,SAAkCgB,EAAiBC,GACjD,IAAMC,EAAiBD,EACnBE,EAAS,GACb,OAA0B,IAAtBD,EAAe,IACjBC,EAAS,wFAE4BD,EAAe,GAAE,+BAG/C,IAAI,EAAA9B,eAAe+B,IAGF,IAAtBD,EAAe,IACjBC,EAAS,wFAE4BD,EAAe,GAAE,+BAG/C,IAAI,EAAA9B,eAAe+B,KAG5BA,EAAS,oIAG2BD,EAAe,GAAE,aAAKA,EAAe,GAAE,mDAC1CA,EAAe,GAAE,sCAG3C,IAAI,EAAA9B,eAAe+B,GAC5B,EAKU,YAAAlB,wBAAV,SAAkCe,EAAyBC,GACzD,IAAIE,EAAS,GACb,GAAI,EAAAC,UAAUC,YAAYL,EAAOC,GAM/B,OALAE,EAAS,8FAEkCF,EAAS,GAAE,aAAKA,EAAS,GAAE,0BAG/D,IAAI,EAAA7B,eAAe+B,GAG5B,IAAMD,EAAiBD,EAEjBK,EAAqB5I,KAAKE,KAAKoI,EAAM,GAAK,GAyBhD,OAdAG,EAAS,qIAG0BD,EAAe,GAAE,aAAKA,EAAe,GAAE,qDAEzCA,EAAe,GAAE,kHAGtBI,EAAkB,kDACjBA,EAAkB,0DAKxC,IAAI,EAAAlC,eAAe+B,EAC5B,EAKU,YAAAjB,wBAAV,SAAkCc,EAAiCC,GACjE,IAAMC,EAAiB,CAACD,EAAS,GAAIA,EAAS,IACxCK,EAAqB5I,KAAKE,KAAKoI,EAAM,GAAK,GAC1CO,EAAgBD,EAAqB5I,KAAKE,KAAKoI,EAAM,GAAK,GAC1DG,EAAS,qIAGoBD,EAAe,GAAE,aAAKA,EAAe,GAAE,mDACzCA,EAAe,GAAE,uDAE1BK,EAAa,qCAChBA,EAAa,qGAGND,EAAkB,kDACjBA,EAAkB,6DAK/C,OAAO,IAAI,EAAAlC,eAAe+B,EAC5B,EAKU,YAAAhB,wBAAV,SAAkCa,EAA0BC,GAS1D,IARA,IAAMC,EAAiB,CAACD,EAAS,GAAIA,EAAS,IAExCK,EAAqB5I,KAAKE,KAAKoI,EAAMA,EAAMxT,OAAS,GAAK,GACzD+T,EAAgBD,EAAqB5I,KAAKE,KAAKoI,EAAMA,EAAMxT,OAAS,GAAK,GAC3EgU,EAAiBD,EACjBE,EAAU,GACVC,EAAS,UAEJC,EAAI,EAAGA,EAAIX,EAAMxT,OAAS,EAAGmU,IACpCH,GAAkBR,EAAMA,EAAMxT,OAASmU,EAAI,GAC3CF,EAAU,uBACHE,EAAC,sBAAcH,EAAc,8BACxBG,EAAC,cAAMH,EAAc,WAC/BC,EACFC,EAAS,WAAIC,EAAC,MAAOD,EAEvB,IAAMP,EAAS,sBACPH,EAAMxT,OAAM,mHAEa0T,EAAe,GAAE,aAAKA,EAAe,GAAE,iDACzCA,EAAe,GAAE,qCAE1CO,EAAO,uCAESF,EAAa,mCAChBA,EAAa,iGAGND,EAAkB,gDACjBA,EAAkB,oCAE5BN,EAAMxT,OAAM,YAAIkU,EAAM,qBAGvC,OAAO,IAAI,EAAAtC,eAAe+B,EAC5B,EAKU,YAAAV,0BAAV,SAAoCO,EAAiBC,GACnD,IAAME,EAAS,mIAGoBF,EAAS,GAAE,aAAKA,EAAS,GAAE,8CAClCA,EAAS,GAAE,qCAGvC,OAAO,IAAI,EAAA7B,eAAe+B,EAC5B,EAKU,YAAAT,0BAAV,SAAoCM,EAAyBC,GAC3D,IAAME,EAAS,qIAGoBF,EAAS,GAAE,aAAKA,EAAS,GAAE,mDAC7BA,EAAS,GAAE,qDACpBD,EAAM,GAAE,4CACJA,EAAM,GAAE,uDAIpC,OAAO,IAAI,EAAA5B,eAAe+B,EAC5B,EAKU,YAAAR,0BAAV,SAAoCK,EAAiCC,GACnE,IAAIE,EACES,EAAOZ,EAAMxT,OAEfqU,EAAU,KACVD,EAAO,IACTC,EAAU,KAGZA,EAAU,IAAIhS,MAAM+R,EAAO,IACnBA,EAAO,GAAKZ,EAAMY,EAAO,GACjC,IAAK,IAAIvU,EAAIuU,EAAO,EAAGvU,GAAK,IAAKA,EAC/BwU,EAAQxU,GAAKwU,EAAQxU,EAAI,GAAK2T,EAAM3T,EAAI,GAE1C,IAAMyU,EAAkB,CAAC,IAAK,IAAK,KAC7BC,EACFF,EACKnL,KAAI,SAAClF,EAAQnE,GACZ,IAAM2U,EAAQ,cAAOF,EAAgBzU,GAAE,sBAAcmE,GAC/CyQ,EAAQ5U,IAAMwU,EAAQrU,OAAS,EACjC,cAAOsU,EAAgBzU,EAAI,GAAE,sBAAcyU,EAAgBzU,GAAE,cAAMmE,GACnE,mBAAYsQ,EAAgBzU,GAAE,cAAMmE,GACxC,MAAO,UAAGwQ,EAAK,aAAKC,EAAK,IAC3B,IACC5K,KAAK,IAWd,OATA8J,EAAS,qIAG0BF,EAAS,GAAE,aAAKA,EAAS,GAAE,mDAC7BA,EAAS,GAAE,qCACpCc,EAAsB,yDAIvB,IAAI,EAAA3C,eAAe+B,EAC5B,EAKU,YAAAP,0BAAV,SAAoCI,EAAyCC,GAE3E,IAAIE,EACES,EAAOZ,EAAMxT,OAEfqU,EAAU,KACVD,EAAO,IACTC,EAAU,KAGZA,EAAU,IAAIhS,MAAM+R,EAAO,IACnBA,EAAO,GAAKZ,EAAMY,EAAO,GACjC,IAAK,IAAIvU,EAAIuU,EAAO,EAAGvU,GAAK,IAAKA,EAC/BwU,EAAQxU,GAAKwU,EAAQxU,EAAI,GAAK2T,EAAM3T,EAAI,GAE1C,IAAMyU,EAAkB,CAAC,IAAK,IAAK,IAAK,MAClCC,EACFF,EACKnL,KAAI,SAAClF,EAAQnE,GACZ,IAAM2U,EAAQ,cAAOF,EAAgBzU,GAAE,sBAAcmE,GAC/CyQ,EAAQ5U,IAAMwU,EAAQrU,OAAS,EACjC,cAAOsU,EAAgBzU,EAAI,GAAE,sBAAcyU,EAAgBzU,GAAE,cAAMmE,GACnE,mBAAYsQ,EAAgBzU,GAAE,cAAMmE,GACxC,MAAO,UAAGwQ,EAAK,aAAKC,EAAK,IAC3B,IACC5K,KAAK,IAWd,OATA8J,EAAS,mIAG0BF,EAAS,GAAE,aAAKA,EAAS,GAAE,mDAC7BA,EAAS,GAAE,qCACpCc,EAAsB,6DAIvB,IAAI,EAAA3C,eAAe+B,EAC5B,EAKU,YAAAN,0BAAV,SAAoCG,EAAiDC,GAEnF,IAAIE,EACES,EAAOZ,EAAMxT,OAEfqU,EAAU,KACVD,EAAO,IACTC,EAAU,KAGZA,EAAU,IAAIhS,MAAM+R,EAAO,IACnBA,EAAO,GAAKZ,EAAMY,EAAO,GACjC,IAAK,IAAIvU,EAAIuU,EAAO,EAAGvU,GAAK,IAAKA,EAC/BwU,EAAQxU,GAAKwU,EAAQxU,EAAI,GAAK2T,EAAM3T,EAAI,GAE1C,IAAMyU,EAAkB,CAAC,IAAK,IAAK,IAAK,KAAM,MACxCC,EACFF,EACKnL,KAAI,SAAClF,EAAQnE,GACZ,IAAM2U,EAAQ,cAAOF,EAAgBzU,GAAE,sBAAcmE,GAC/CyQ,EAAQ5U,IAAMwU,EAAQrU,OAAS,EACjC,cAAOsU,EAAgBzU,EAAI,GAAE,sBAAcyU,EAAgBzU,GAAE,cAAMmE,GACnE,mBAAYsQ,EAAgBzU,GAAE,cAAMmE,GACxC,MAAO,UAAGwQ,EAAK,aAAKC,EAAK,IAC3B,IACC5K,KAAK,IAWd,OATA8J,EAAS,mIAG0BF,EAAS,GAAE,aAAKA,EAAS,GAAE,mDAC7BA,EAAS,GAAE,qCACpCc,EAAsB,iEAIvB,IAAI,EAAA3C,eAAe+B,EAC5B,EAKU,YAAAL,0BAAV,SAAoCE,EAAyDC,GAG3F,IAAIE,EACES,EAAOZ,EAAMxT,OAEfqU,EAAU,KACVD,EAAO,IACTC,EAAU,KAGZA,EAAU,IAAIhS,MAAM+R,EAAO,IACnBA,EAAO,GAAKZ,EAAMY,EAAO,GACjC,IAAK,IAAIvU,EAAIuU,EAAO,EAAGvU,GAAK,IAAKA,EAC/BwU,EAAQxU,GAAKwU,EAAQxU,EAAI,GAAK2T,EAAM3T,EAAI,GAE1C,IAAMyU,EAAkB,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,MAC9CC,EACFF,EACKnL,KAAI,SAAClF,EAAQnE,GACZ,IAAM2U,EAAQ,cAAOF,EAAgBzU,GAAE,sBAAcmE,GAC/CyQ,EAAQ5U,IAAMwU,EAAQrU,OAAS,EACjC,cAAOsU,EAAgBzU,EAAI,GAAE,sBAAcyU,EAAgBzU,GAAE,cAAMmE,GACnE,mBAAYsQ,EAAgBzU,GAAE,cAAMmE,GACxC,MAAO,UAAGwQ,EAAK,aAAKC,EAAK,IAC3B,IACC5K,KAAK,IAWd,OATA8J,EAAS,gIAGyBF,EAAS,GAAE,aAAKA,EAAS,GAAE,kDAC7BA,EAAS,GAAE,oCACpCc,EAAsB,kEAItB,IAAI,EAAA3C,eAAe+B,EAC5B,EAKU,YAAAnC,mBAAV,WACE,IAAMa,EAA2C,CAAC,EAC9CC,EAAW,aACfD,EAAOC,GAAY,IAAI,EAAAV,eAAe,yWAUtCS,EADAC,EAAW,kBACQ,IAAI,EAAAV,eAAe,6RAStCS,EADAC,EAAW,kBACQ,IAAI,EAAAV,eAAe,6VAStCS,EADAC,EAAW,kBACQ,IAAI,EAAAV,eAAe,kZAUtCU,EAAW,gBACX,IAAMM,GAAO,IAAAC,SAAQzS,KAAK6F,QAAQ2K,UAAUkC,SAK5C,OAJAT,EAAOC,GAAY,IAAI,EAAAV,eAAe,iGAErBgB,EAAK8B,UAAS,uCAExBrC,CACT,EAKU,YAAAZ,0BAAV,sBACQY,EAA2C,CAAC,EAC5CR,EAAezR,KAAK6F,QAAQ6L,oBAsBlC,OArBA1R,KAAK6F,QAAQ0O,YAAYxM,WAAWyM,SAAQ,SAACC,EAAahV,GACxD,IAAMiV,EAAc,EAAK7O,QAAQ8O,oBAAoBlV,GAC/CyS,GAAW,IAAA0C,4CAA2CH,GACxDC,EAAY/C,SACdM,EAAOC,GAAY,EAAK2C,0BAA0B3C,EAAUuC,EAAaC,GAEzEzC,EAAOC,GAAY,EAAK4C,4BAA4B5C,EAAUuC,EAAaC,GAG7E,IAAMK,GAAmB,IAAAC,uDAAsDP,GAC3EC,EAAY3C,cAAcnS,QAAU6R,EAAaM,cAAcnS,SAC7D8U,EAAY/C,SACdM,EAAO8C,GACH,EAAKE,+BAA+BF,EAAkBL,EAAajD,EAAcgD,GAErFxC,EAAO8C,GACH,EAAKG,iCAAiCH,EAAkBL,EAAajD,EAAcgD,GAG7F,IAEOxC,CACT,EAKU,YAAAgD,+BAAV,SACI/C,EAAkBwC,EAA4BjD,EAA6BzS,GAC7E,IAYImW,EAZEC,EAAUV,EAAY3C,cACtBD,EAAWL,EAAaM,cACxBsD,EAAUrW,EACVsW,GAAiB,IAAAV,4CAA2CS,GAE5DE,EAASH,EAAQxV,OACjB4V,EAAU1D,EAASlS,OAEnB6V,EAAgB,EAAAC,cAAcC,iBAAiBP,EAAStD,GAExDvQ,GAAO,IAAAqU,mBAAkBJ,GACzBK,EAAWL,EAAUD,EAErBO,GAAS,IAAAC,iBAGbZ,EADa,IAAXI,EACc,GACPC,EAAU,GAAKC,EAAc7V,QAAU,EAChC,cAEA6V,EAAc3M,KAAI,SAAAkN,GAAK,uBAAUF,EAAOE,EAAIH,GAAS,QAA9B,IAAuCpM,KAAK,MAErF,IAAIwM,EAEFA,EADET,EAAU,GAAKD,EAAS,EACF,SAEAH,EAAQtM,KAAI,SAAC8F,EAAGnP,GAAM,uBAAUqW,EAAOrW,EAAIoW,GAArB,IAAkCpM,KAAK,MAGvF,IAAImJ,EAAS,sBAEPsD,EAA2B,IADlB,EAAAC,UAAU5T,KAAK6S,GAGxBgB,EAA6B,IADnB,EAAAD,UAAU5T,KAAKuP,GAG/B,GAAe,IAAXyD,GAAiBW,GAAkBE,GAIhC,GAAIF,IAAkBE,EAEzBxD,EADc,IAAZ4C,EACO,2EAIA,yDAIN,GAAIC,EAAc7V,OAAQ,CAC/B,IAAMyW,EAAOd,EAAS,EAChBe,EAAOf,EAAS,EAElBE,EAAc/V,QAAQ2W,IAAS,GAAKZ,EAAc/V,QAAQ4W,IAAS,EACrE1D,EAAS,8BACA6C,EAAc/V,QAAQ2W,IAAS,EACxCzD,EAAS,2EAEA6C,EAAc/V,QAAQ4W,IAAS,IACxC1D,EAAS,+C,OAvBXA,EAAS,iEA2BX,IAAM2D,EAAsB,yCACDT,EAAON,EAAU,GAAE,6BACjCM,EAAON,EAAU,GAAE,qBAAaM,EAAON,EAAU,GAAE,6BACnDM,EAAON,EAAU,GAAE,uBAE1BjC,EAAS,uBACNrB,EAAQ,yBACX3Q,EAAI,iDACJgV,EAAmB,qBACnBpB,EAAa,wCACMG,EAAc,YAAIW,EAAqB,uBAC1DrD,EAAM,mBAGZ,OAAO,IAAI,EAAApB,eAAe+B,EAAQ,CAAC,+BACrC,EAKU,YAAA2B,iCAAV,SACIhD,EAAkBwC,EAA4BjD,EAA6BzS,GAC7E,IAAMgT,EAAc,CAACP,EAAaxO,MAAOwO,EAAazO,QAChDwT,EAAa,CAAC9B,EAAYzR,MAAOyR,EAAY1R,QAC7CuS,EAASb,EAAY3C,cAAcnS,OACnC4V,EAAU/D,EAAaM,cAAcnS,OACrCwV,EAAUV,EAAY3C,cACtBD,EAAWL,EAAaM,cACxBuD,GAAiB,IAAAV,4CAA2C5V,GAElE,GAAIuW,IAAWC,GAAW,EAAAhC,UAAUC,YAAY+C,EAAYxE,GAAc,CACxE,IAAM,EAAS,4BACHE,EAAQ,kDACSlT,EAAI,wCAGjC,OAAO,IAAI,EAAAwS,eAAe,EAAQ,CAAC,6B,CAGrC,IAGI2D,EAHE5T,GAAO,IAAAqU,mBAAkBJ,GACzBC,EAAgB,EAAAC,cAAcC,iBAAiBP,EAAStD,GACxD+D,EAAWL,EAAUD,EAErBO,GAAS,IAAAC,iBAGbZ,EADa,IAAXI,EACc,GACPC,EAAU,GAAKC,EAAc7V,QAAU,EAChC,cAEA6V,EAAc3M,KAAI,SAAAkN,GAAK,uBAAUF,EAAOE,EAAIH,GAAS,QAA9B,IAAuCpM,KAAK,MAErF,IAAIwM,EAEFA,EADET,EAAU,GAAKD,EAAS,EACF,SAEAb,EAAY3C,cAAcjJ,KAAI,SAAC8F,EAAGnP,GAAM,uBAAUqW,EAAOrW,EAAIoW,GAArB,IAAkCpM,KAAK,MAEzG,IAAM8J,EAAS,0BACHrB,EAAQ,2BACZ3Q,EAAI,mDACJ4T,EAAa,8BACNG,EAAc,YAAIW,EAAqB,yBAGtD,OAAO,IAAI,EAAAzE,eAAe+B,EAAQ,CAAC,+BACrC,EAKU,YAAAsB,0BAAV,SAAoC3C,EAAkBlT,EAAc0V,GAClE,OAAQA,EAAY3C,cAAcnS,QAChC,KAAK,EACH,OAAOI,KAAKyW,uBAAuBvE,EAAUlT,GAC/C,KAAK,EACH,OAAOgB,KAAK0W,mBAAmBxE,EAAUlT,EAAM0V,GACjD,KAAK,EACH,OAAO1U,KAAK2W,mBAAmBzE,EAAUlT,EAAM0V,GACjD,KAAK,EACH,OAAO1U,KAAK4W,mBAAmB1E,EAAUlT,EAAM0V,GACjD,QACE,OAAO1U,KAAK6W,mBAAmB3E,EAAUlT,EAAM0V,GAErD,EAKU,YAAAI,4BAAV,SAAsC5C,EAAkBlT,EAAc0V,GACpE,IAAMtB,EAAQsB,EAAY3C,cAC1B,OAAQqB,EAAMxT,QACZ,KAAK,EACH,OAAOI,KAAK8W,yBAAyB5E,EAAUlT,EAAM0V,GACvD,KAAK,EACH,OAAO1U,KAAK+W,qBAAqB7E,EAAUlT,EAAM0V,GACnD,KAAK,EACH,OAAO1U,KAAKgX,qBAAqB9E,EAAUlT,EAAM0V,GACnD,KAAK,EACH,OAAO1U,KAAKiX,qBAAqB/E,EAAUlT,EAAM0V,GACnD,KAAK,EACH,OAAO1U,KAAKkX,qBAAqBhF,EAAUlT,EAAM0V,GACnD,KAAK,EACH,OAAO1U,KAAKmX,qBAAqBjF,EAAUlT,EAAM0V,GACnD,KAAK,EACH,OAAO1U,KAAKoX,qBAAqBlF,EAAUlT,EAAM0V,GACnD,QAEE,MAAM,IAAIlV,MAAM,gCAAyB4T,EAAMxT,OAAM,OAE3D,EAKU,YAAA6W,uBAAV,SAAiCvE,EAAkBlT,GACjD,IAAMwT,GAAO,IAAAC,SAAQzS,KAAK6F,QAAQ2K,UAAUkC,SACtCa,EAAS,2BACFrB,EAAQ,oCACJM,EAAK8B,UAAS,YAAItV,EAAI,qCAGvC,OAAO,IAAI,EAAAwS,eAAe+B,EAC5B,EAKU,YAAAmD,mBAAV,SAA6BxE,EAAkBlT,EAAc0V,GAC3D,IAAMrB,EAAW,CAACqB,EAAYzR,MAAOyR,EAAY1R,QAC3CsQ,EAAiB,CAACD,EAAS,GAAIA,EAAS,IACxCb,GAAO,IAAAC,SAAQzS,KAAK6F,QAAQ2K,UAAUkC,SAOtCa,EALgB,eAAQrB,EAAQ,iEAElCoB,EAAe,GAAE,aAAKA,EAAe,GAAE,mCAChCd,EAAK8B,UAAS,YAAItV,EAAI,iBAGjC,OAAO,IAAI,EAAAwS,eAAe+B,EAAQ,CAAC,8BACrC,EAKU,YAAAoD,mBAAV,SAA6BzE,EAAkBlT,EAAc0V,GAC3D,IAAMtB,EAAQsB,EAAY3C,cACpBsB,EAAW,CAACqB,EAAYzR,MAAOyR,EAAY1R,QAC3CwP,GAAO,IAAAC,SAAQzS,KAAK6F,QAAQ2K,UAAUkC,SACtC2E,EAAUhE,EAAS,GACnBiE,EAAUjE,EAAS,GAEzB,GAAgB,MAAZA,GAAoB,EAAAG,UAAUC,YAAYL,EAAOC,GAAW,CAC9D,IAAM,EAAgB,eAAQnB,EAAQ,oFACSoF,EAAO,eAAOD,EAAO,gCACzD7E,EAAK8B,UAAS,YAAItV,EAAI,mBAGjC,OAAO,IAAI,EAAAwS,eAAe,E,CAE5B,IAAM8B,EAAiBD,EACjBkE,EAAezM,KAAKE,KAAKoI,EAAM,GAAK,GAKpCG,EAJgB,eAAQrB,EAAQ,gEACToB,EAAe,GAAE,aAAKA,EAAe,GAAE,aAAKiE,EAAY,sCAC1E/E,EAAK8B,UAAS,YAAItV,EAAI,iBAGjC,OAAO,IAAI,EAAAwS,eAAe+B,EAAQ,CAAC,8BACrC,EAKU,YAAAqD,mBAAV,SAA6B1E,EAAkBlT,EAAc0V,GAC3D,IAAMtB,EAAQsB,EAAY3C,cACpBsB,EAAW,CAACqB,EAAYzR,MAAOyR,EAAY1R,QAC3CsQ,EAAiB,CAACD,EAAS,GAAIA,EAAS,IACxCb,GAAO,IAAAC,SAAQzS,KAAK6F,QAAQ2K,UAAUkC,SAE5C,GAAiB,IAAbU,EAAM,GAAU,CAClB,IAAMoE,EAAgBpE,EAAMqE,MAAM,GAE5BC,GAAgB,IAAAC,mBAAkBvE,EAAOoE,GAGzCI,EAAgCC,KAAKC,MAAMD,KAAKE,UAAUrD,IAChEkD,EAAe7F,cAAgB2F,EAC/B,IAAMM,EAAiBhY,KAAK6U,0BAA0B3C,EAAUlT,EAAM4Y,GAKhE,EAJgB,UAAGI,EAAeC,YAAW,wBAC5C/F,EAAQ,uDACJA,EAAQ,aAAI,IAAAgG,mBAPR,CAAC,IAAK,MAAO,OAFX,CAAC,EAAG,IASqC,gBAG1D,OAAO,IAAI,EAAA1G,eAAe,EAAQwG,EAAeG,a,CAEnD,IAAMd,EAAU/D,EAAe,GACzBgE,EAAUhE,EAAe,GAEzBiE,EAAezM,KAAKE,KAAKoI,EAAM,GAAK,GACpCO,EAAgB4D,EAAezM,KAAKE,KAAKoI,EAAM,GAAK,GAMpDG,EAJgB,eAAQrB,EAAQ,iFAEhCoF,EAAO,aAAKD,EAAO,aAAK1D,EAAa,aAAK4D,EAAY,yCACjD/E,EAAK8B,UAAS,YAAItV,EAAI,WAEjC,OAAO,IAAI,EAAAwS,eAAe+B,EAAQ,CAAC,8BACrC,EAIU,YAAAsD,mBAAV,SAA6B3E,EAAkBlT,EAAc0V,GAa3D,IAZA,IAAMtB,EAAQsB,EAAY3C,cACpBiC,EAAOZ,EAAMxT,OACbyT,EAAW,CAACqB,EAAYzR,MAAOyR,EAAY1R,QAC3CwP,GAAO,IAAAC,SAAQzS,KAAK6F,QAAQ2K,UAAUkC,SAEtCY,EAAiB,CAACD,EAAS,GAAIA,EAAS,IACxCgE,EAAU/D,EAAe,GACzBgE,EAAUhE,EAAe,GACzBiE,EAAezM,KAAKE,KAAKoI,EAAMY,EAAO,GAAK,GAC7CL,EAAgB4D,EAAezM,KAAKE,KAAKoI,EAAMY,EAAO,GAAK,GAC3DoE,EAAS,0BACTC,EAAQ,cAAO1E,EAAa,0BAAkB4D,EAAY,gBACrDxD,EAAI,EAAGA,EAAIC,EAAO,EAAGD,IAC5BqE,EAAS,eAAQrE,EAAC,MAAOqE,EACzBzE,GAAiBP,EAAMY,EAAOD,EAAI,GAClCsE,EAAQ,WAAItE,EAAC,cAAMJ,EAAa,OAAQ0E,EAE1C,IAOM9E,EAPgB,eAAQrB,EAAQ,YAAIkG,EAAM,kCAChCC,EAAK,uCACEf,EAAO,8CACAA,EAAO,iEACYA,EAAO,aAAKD,EAAO,4BACzD7E,EAAK8B,UAAS,YAAItV,EAAI,iBAGjC,OAAO,IAAI,EAAAwS,eAAe+B,EAC5B,EAKU,YAAAuD,yBAAV,SAAmC5E,EAAkBlT,EAAc0V,GAC3D,QAAqB,CAACA,EAAYzR,MAAOyR,EAAY1R,QAAO,GAA3DqU,EAAO,KAAEC,EAAO,KACvB,GAAgB,IAAZD,GAA6B,IAAZC,EAAe,CAClC,IAAM,EAAS,4BACHpF,EAAQ,kDACSlT,EAAI,qCAGjC,OAAO,IAAI,EAAAwS,eAAe,EAAQ,CAAC,6B,CAGrC,IAAM+B,EAAS,0BACHrB,EAAQ,sCACDlT,EAAI,wCAAgCqY,EAAO,aAAKC,EAAO,8CAC7CD,EAAO,aAAKC,EAAO,oBAAYtY,EAAI,8CACnCA,EAAI,6BAGjC,OAAO,IAAI,EAAAwS,eACP+B,EAAQ,CAAC,yBAA0B,4BAA6B,8BACtE,EAKU,YAAAwD,qBAAV,SAA+B7E,EAAkBlT,EAAc0V,GAC7D,IAAM4D,EAAQ5D,EAAYzR,MACpBsV,EAAQ7D,EAAY1R,OAE1B,GAAc,IAAVuV,GAAyB,IAAVD,EAAa,CAC9B,IAAM,EAAS,0BACLpG,EAAQ,yDACSlT,EAAI,iCAG/B,OAAO,IAAI,EAAAwS,eAAe,EAAQ,CAAC,6B,CAGrC,GAAc,IAAV+G,EAAa,CACf,IAAM,EAAS,4BACHrG,EAAQ,4EAC0BoG,EAAK,uDACtBtZ,EAAI,iCAGjC,OAAO,IAAI,EAAAwS,eAAe,EAAQ,CAAC,6B,CAErC,GAAc,IAAV8G,EAAa,CACf,IAAM,EAAS,4BACHpG,EAAQ,iFAC+BqG,EAAK,kDAC3BvZ,EAAI,iCAGjC,OAAO,IAAI,EAAAwS,eAAe,EAAQ,CAAC,6B,CAErC,IAAM+B,EAAS,0BACHrB,EAAQ,yDACSoG,EAAK,aAAKC,EAAK,qDACfvZ,EAAI,6BAGjC,OAAO,IAAI,EAAAwS,eAAe+B,EAAQ,CAAC,yBAA0B,6BAC/D,EAMU,YAAAyD,qBAAV,SAA+B9E,EAAkBlT,EAAc0V,GAC7D,IAAMtB,EAAQsB,EAAY3C,cAGpBsB,EAAW,CAACqB,EAAY1R,OAAQ0R,EAAYzR,OAElD,GAAgB,MAAZoQ,GAAoB,EAAAG,UAAUC,YAAYL,EAAOC,GAAW,CAC9D,IAAM,EAAUA,EAAS,GACnB,EAAUA,EAAS,GACnB,EAAS,4BACHnB,EAAQ,wFAC+B,EAAO,eAAO,EAAO,kDAC3ClT,EAAI,iCAGjC,OAAO,IAAI,EAAAwS,eAAe,EAAQ,CAAC,6B,CAG/B,OAAuB,IAAAgH,cAAapF,GAAnCqF,EAAQ,WAAEC,EAAQ,WACnBlB,EAAgBiB,EACtB,GAAIjB,EAAc5X,OAASwT,EAAMxT,OAAQ,CACvC,IAAM8X,GAAgB,IAAAC,mBAAkBvE,EAAOoE,GAEzCI,EAAgCC,KAAKC,MAAMD,KAAKE,UAAUrD,IAChEkD,EAAe7F,cAAgB2F,EAE/B,IACM,EAAS,sBACT1X,KAAK8U,4BAA4B5C,EAAUlT,EAAM4Y,GAAgBK,YAAW,6BACtE/F,EAAQ,oDACLA,EAAQ,aAAI,IAAAgG,mBAJZ,CAAC,MAAO,OAI8BQ,GAAS,6BAG9D,OAAO,IAAI,EAAAlH,eAAe,EAAQ,CAAC,6B,CAGrC,IAAM6F,EAAUhE,EAAS,GACnBiE,EAAUjE,EAAS,GACzB,GAAgB,IAAZiE,EAAe,CACjB,IAAM,EAAS,4BACHpF,EAAQ,wDACDlT,EAAI,wCAAgCqY,EAAO,aAAKC,EAAO,mEAC1BtY,EAAI,mBAAWoU,EAAM,GAAE,sEAC3BiE,EAAO,kDACtBrY,EAAI,iCAGjC,OAAO,IAAI,EAAAwS,eAAe,EAAQ,CAAC,4BAA6B,8B,CAGlE,GAAgB,IAAZ6F,EAAe,CACjB,IAAM,EAAS,4BACHnF,EAAQ,wDACDlT,EAAI,wCAAgCqY,EAAO,aAAKC,EAAO,mEAC1BtY,EAAI,mBAAWoU,EAAM,GAAE,iEAChCkE,EAAO,uDACjBtY,EAAI,iCAGjC,OAAO,IAAI,EAAAwS,eAAe,EAAQ,CAAC,4BAA6B,8B,CAGlE,IAAM+B,EAAS,0BACHrB,EAAQ,6DACMkB,EAAM,GAAE,mDACLiE,EAAO,aAAKC,EAAO,qDACnBtY,EAAI,6BAGjC,OAAO,IAAI,EAAAwS,eACP+B,EAAQ,CAAC,yBAA0B,4BAA6B,8BACtE,EAMU,YAAA0D,qBAAV,SAA+B/E,EAAkBlT,EAAc0V,GAC7D,IAAMtB,EAAQsB,EAAY3C,cACpB4G,EAAUvF,EAAM,GAAKA,EAAM,GAC3BwF,EAAUxF,EAAM,GAEhB,GAAuB,IAAAoF,cAAapF,GAAnCqF,EAAQ,WAAEC,EAAQ,WACnBlB,EAAgBiB,EACtB,GAAIjB,EAAc5X,OAASwT,EAAMxT,OAAQ,CACvC,IAAM8X,GAAgB,IAAAC,mBAAkBvE,EAAOoE,GAGzCI,EAAgCC,KAAKC,MAAMD,KAAKE,UAAUrD,IAChEkD,EAAe7F,cAAgB2F,EAC/B,IAAMmB,EAAU7Y,KAAK8U,4BAA4B5C,EAAUlT,EAAM4Y,GAE3DkB,EAAUJ,EAASK,UACnB,EAAS,sBACTF,EAAQZ,YAAW,6BACb/F,EAAQ,+DACLA,EAAQ,aAAI,IAAAgG,mBAVZ,CAAC,QAAS,MAAO,OAUqBY,GAAQ,6BAG7D,OAAO,IAAI,EAAAtH,eAAe,EAAQqH,EAAQV,a,CAG5C,IAAMd,EAAU3C,EAAYzR,MACtBqU,EAAU5C,EAAY1R,OACtBuQ,EAAS,4BACDrB,EAAQ,6JAEQyG,EAAO,oBAAYC,EAAO,qDACzBvB,EAAO,aAAKC,EAAO,uDACnBtY,EAAI,+BAGnC,OAAO,IAAI,EAAAwS,eACP+B,EAAQ,CAAC,yBAA0B,4BAA6B,8BACtE,EAMU,YAAA2D,qBAAV,SAA+BhF,EAAkBlT,EAAc0V,GAC7D,IAAMtB,EAAQsB,EAAY3C,cACpBiH,EAAU5F,EAAM,GAChBwF,EAAUxF,EAAM,GAAK4F,EACrBL,EAAUvF,EAAM,GAAKwF,EAsBrBvB,EAAU3C,EAAYzR,MACtBqU,EAAU5C,EAAY1R,OACtBuQ,EAAS,0BACHrB,EAAQ,oFACMyG,EAAO,oBAAYC,EAAO,sCAC/BI,EAAO,qDACC3B,EAAO,aAAKC,EAAO,qDACnBtY,EAAI,6BAGjC,OAAO,IAAI,EAAAwS,eAAe+B,EAAQ,CAAC,yBAA0B,6BAC/D,EAKU,YAAA4D,qBAAV,SAA+BjF,EAAkBlT,EAAc0V,GAC7D,IAAMtB,EAAQsB,EAAY3C,cACpBkH,EAAU7F,EAAM,GAChB4F,EAAU5F,EAAM,GAAK6F,EACrBL,EAAUxF,EAAM,GAAK4F,EACrBL,EAAUvF,EAAM,GAAKwF,EAErB,GAAuB,IAAAJ,cAAapF,GAAnCqF,EAAQ,WAAEC,EAAQ,WACzB,GAAID,EAAS7Y,OAASwT,EAAMxT,OAAQ,CAClC,IAAM8X,GAAgB,IAAAC,mBAAkBvE,EAAOqF,GAGzCb,EAAgCC,KAAKC,MAAMD,KAAKE,UAAUrD,IAChEkD,EAAe7F,cAAgB2F,EAE/B,IAAM,EAAS,sBACT1X,KAAK8U,4BAA4B5C,EAAUlT,EAAM4Y,GAAgBK,YAAW,6BACtE/F,EAAQ,uFACLA,EAAQ,aAAI,IAAAgG,mBARZ,CAAC,MAAO,MAAO,QAAS,SAAU,UAQIQ,GAAS,6BAG9D,OAAO,IAAI,EAAAlH,eAAe,EAAQ,CAAC,4BAA6B,0B,CAGlE,IAAM6F,EAAU3C,EAAYzR,MACtBqU,EAAU5C,EAAY1R,OACtBuQ,EAAS,0BACHrB,EAAQ,gGACMyG,EAAO,oBAAYC,EAAO,sBAAcI,EAAO,kCACxDC,EAAO,sDACK5B,EAAO,aAAKC,EAAO,qDACnBtY,EAAI,6BAGjC,OAAO,IAAI,EAAAwS,eAAe+B,EAAQ,CAAC,4BAA6B,0BAClE,EAKU,YAAA6D,qBAAV,SAA+BlF,EAAkBlT,EAAc0V,GAC7D,IAAMtB,EAAQsB,EAAY3C,cACpBmH,EAAU9F,EAAM,GAChB6F,EAAU7F,EAAM,GAAK8F,EACrBF,EAAU5F,EAAM,GAAK6F,EACrBL,EAAUxF,EAAM,GAAK4F,EACrBL,EAAUvF,EAAM,GAAKwF,EAErB,GAAuB,IAAAJ,cAAapF,GAAnCqF,EAAQ,WAAEC,EAAQ,WACzB,GAAID,EAAS7Y,OAASwT,EAAMxT,OAAQ,CAClC,IAAM8X,GAAgB,IAAAC,mBAAkBvE,EAAOqF,GAGzCb,EAAgCC,KAAKC,MAAMD,KAAKE,UAAUrD,IAChEkD,EAAe7F,cAAgB2F,EAE/B,IAAM,EAAS,wBACP1X,KAAK8U,4BAA4B5C,EAAUlT,EAAM4Y,GAAgBK,YAAW,+BACtE/F,EAAQ,oHAELA,EAAQ,aAAI,IAAAgG,mBATd,CAAC,MAAO,MAAO,QAAS,SAAU,SAAU,UASJQ,GAAS,iCAGhE,OAAO,IAAI,EAAAlH,eAAe,EAAQ,CAAC,4BAA6B,0B,CAGlE,IAAM6F,EAAU3C,EAAYzR,MACtBqU,EAAU5C,EAAY1R,OACtBuQ,EAAS,4BACDrB,EAAQ,2HAEMyG,EAAO,oBAAYC,EAAO,sBAAcI,EAAO,oCACxDC,EAAO,uBAAeC,EAAO,wDACjB7B,EAAO,aAAKC,EAAO,uDACnBtY,EAAI,iCAGnC,OAAO,IAAI,EAAAwS,eACP+B,EAAQ,CAAC,yBAA0B,4BAA6B,8BACtE,EAQU,YAAArC,MAAV,WAQE,IAPA,IAAM0B,EAAS5S,KAAK6F,QAAQ6L,oBACtBsC,EAAOpB,EAAOQ,MAAMxT,OACpBqU,EAAUrB,EAAOqB,QACjBkF,EAASvG,EAAO3P,MAChBmW,EAASxG,EAAO5P,OAEhBqW,EAAe,GACZ5Z,EAAI,EAAGA,EAAIuU,EAAO,IAAKvU,EAC9B4Z,EAAaxZ,KAAK,sBACZJ,EAAC,wBAAgBwU,EAAQxU,GAAE,MACjC4Z,EAAaxZ,KAAK,gCACFJ,EAAC,eAAOwU,EAAQxU,GAAE,MAEpC4Z,EAAaxZ,KAAK,sBACVmU,EAAO,EAAC,gBAChB,IAAMsF,EAAO,uDAC4BtF,EAAI,gEACAmF,EAAM,aAAKC,EAAM,uBACxDC,EAAa5P,KAAK,IAAG,6DAEUuK,EAAI,yBACnCqF,EAAa5P,KAAK,IAAG,mBAG3B,MAAO,CAACyH,MAAO,IAAI,EAAAM,eAAe8H,EAAM,CAAC,+BAC3C,EAOU,YAAAnI,UAAV,sBACQc,EAA2C,CAAC,EAclD,OAbAjS,KAAK6F,QAAQ0O,YAAYxM,WAAWyM,SAAQ,SAACxV,EAAMS,GACjD,IAAM8Z,EAAS,EAAK1T,QAAQ8O,oBAAoBlV,GAE1CuU,GADQuF,EAAOxH,cAAcnS,OAAS,EAAI2Z,EAAOxH,cAAgBwH,EAAOnG,OAC3DxT,OACfsS,EAAW,WAAIlT,GACnBiT,EAAOC,GAAY,IAAI,EAAAV,eACnB,EAAKgI,mBAAmBxa,EAAMgV,EAAMuF,EAAOtW,MAAOsW,EAAOvW,QAAQ,GACjE,CAAC,oCAA6BkP,GAAY,6BAA8B,8BAE5ED,EADAC,GAAsB,MACH,IAAI,EAAAV,eACnB,EAAKgI,mBAAmBxa,EAAMgV,EAAMuF,EAAOtW,MAAOsW,EAAOvW,QAAQ,GACjE,CAAC,oCAA6BkP,GAAY,6BAA8B,6BAC9E,IACOD,CACT,EAQU,YAAAuH,mBAAV,SAA6BC,EAAiBzF,EAAc/Q,EAAeD,EAAgB0W,GAEzF,IAAI1a,EAAO,WAAIya,GACXC,IACF1a,GAAc,MAEhB,IAAMwT,GAAO,IAAAC,SAAQzS,KAAK6F,QAAQ2K,UAAUkC,SAC5C,MAAO,0BACK1T,EAAI,kBAAUgV,EAAI,uDACMhV,EAAI,gEACKiE,EAAK,aAAKD,EAAM,uDACvBwP,EAAK8B,UAAS,YAAImF,EAAO,4DAIjE,EASU,YAAAE,mBAAV,SAA6BF,EAAiBzF,EAAc/Q,EAAeD,EAAgB0W,GAEzF,IAAI1a,EAAO,WAAIya,EAAO,SAClBC,IACF1a,GAAc,MAEhB,IAAMwT,GAAO,IAAAC,SAAQzS,KAAK6F,QAAQ2K,UAAUkC,SAC5C,MAAO,yBACI1T,EAAI,kBAAUgV,EAAI,wDACQyF,EAAO,gEACCxW,EAAK,aAAKD,EAAM,gCAC9CwP,EAAK8B,UAAS,YAAImF,EAAO,kCAG1C,EACF,EA1yCA,CAAmC,EAAAG,SAAtB,EAAAC,cAAAA,C,kCCRb,IAAYC,E,oKAAAA,EAAA,EAAAA,eAAA,EAAAA,aAAY,KACtB,6BACA,+BAaW,EAAAC,YACX,SACWvJ,EAAgC+D,EAAiCI,EACjEjD,GADA,KAAAlB,UAAAA,EAAgC,KAAA+D,YAAAA,EAAiC,KAAAI,oBAAAA,EACjE,KAAAjD,oBAAAA,CAAqC,EAE5B,EAAAkI,QACpB,SAAmB/T,GAAA,KAAAA,QAAAA,CAAuB,EAM/B,EAAA2L,eACX,SAAmByG,EAA4BE,GAA5B,KAAAF,YAAAA,EAA4B,KAAAE,aAAAA,CAA0B,EAK3E,iBAGE,WAAmBnZ,EAAciZ,EAAsBE,GAApC,KAAAnZ,KAAAA,EAEfgB,KAAKmY,aADHA,GAGkB,GAGlBF,IACFjY,KAAKiY,YAAcA,EAEvB,CAMF,OALE,YAAA+B,cAAA,SAAcC,GACRA,GACFja,KAAKmY,aAAatY,KAAKoa,EAE3B,EACF,EAnBA,GAAa,EAAAC,mBAAAA,EAsBb,8BA0DA,QAzDS,EAAAC,mBAAP,SAA0BC,GACxB,IAAKA,GAA0B,IAAjBA,EAAMxa,OAClB,MAAO,GAGT,GAAqB,IAAjBwa,EAAMxa,OACR,OAAOwa,EAGT,IAAMC,EAAa,IAAIC,IACjBC,EAAmB,IAAID,IACvBrI,EAAS,IAAIhQ,MAGnB,OADAjC,KAAKwa,mBAAmBJ,EAAOC,EAAYE,EAAkBtI,GACtDA,CACT,EAEe,EAAAuI,mBAAf,SACIC,EAAkCJ,EAAyBE,EAC3DtI,GACF,IAAK,IAAIxS,EAAI,EAAGA,EAAIgb,EAAW7a,SAAUH,EACvCO,KAAK0a,YAAYD,EAAWhb,GAAI4a,EAAYE,EAAkBtI,EAElE,EAEe,EAAAyI,YAAf,SACIpc,EAA0B+b,EAAyBE,EAA+BtI,GAEpF,GAAK3T,IAAQic,EAAiBI,IAAIrc,EAAKU,MAAvC,CAKA,GAAIqb,EAAWM,IAAIrc,EAAKU,MACtB,MAAM,IAAIQ,MAAM,oFAIlB6a,EAAWO,IAAItc,EAAKU,MAGpB,IAAMmZ,EAAe7Z,EAAK6Z,aAC1B,GAAIA,GAAgBA,EAAavY,OAAS,EACxC,IAAK,IAAIH,EAAI,EAAGA,EAAI0Y,EAAavY,SAAUH,EACzCO,KAAK0a,YAAYvC,EAAa1Y,GAAI4a,EAAYE,EAAkBtI,GAKpEA,EAAOpS,KAAKvB,GAGZic,EAAiBK,IAAItc,EAAKU,MAG1Bqb,EAAW9N,OAAOjO,EAAKU,K,CACzB,EACF,EA1DA,GAAa,EAAA6b,4BAAAA,C,kzBC3Db,cAMA,cACE,WAAYhV,G,OACV,YAAMA,IAAQ,IAChB,CAsFF,OAzFqC,OAInC,YAAAkL,aAAA,WACE,OAAO,EAAP,KAAW/Q,KAAK8a,iBAAoB9a,KAAK+a,gBAC3C,EACA,YAAAxJ,eAAA,WACE,MAAO,CAAC,CACV,EACU,YAAAuJ,cAAV,WACE,MAAO,CACLE,OAAQ,IAAI,EAAAxJ,eAAe,iGAK/B,EACU,YAAAuJ,cAAV,WACE,MAAO,CACLE,OAAQ,IAAI,EAAAzJ,eAAe,oFAK/B,EAKU,YAAA0J,YAAV,WACE,IAAMC,EAAaC,EAAgBC,iBAAmB,uBAAyB,GAC/E,MAAO,CACLL,OAAQ,IAAI,EAAAxJ,eAAe,ymBAYvB2J,EAAU,mHAMlB,EAKU,YAAAG,YAAV,WACE,IAAMH,EAAaC,EAAgBC,iBAAmB,uBAAyB,GAC/E,MAAO,CACLJ,OAAQ,IAAI,EAAAzJ,eAAe,8JAGrB2J,EAAU,sYASpB,EAKO,EAAAE,eAAP,WACE,IAAMtH,EAAI,IAAIvL,YAAY,GACpB+S,EAAI,IAAIva,YAAY+S,GACpByH,EAAI,IAAI9a,WAAWqT,GAEzB,GADAwH,EAAE,GAAK,WACM,MAATC,EAAE,GACJ,OAAO,EAET,GAAa,MAATA,EAAE,GACJ,OAAO,EAET,MAAM,IAAIhc,MAAM,qBAClB,EACF,EAzFA,CAAqC,EAAAoa,SAAxB,EAAAwB,gBAAAA,C,mzBCNb,cACA,UAOA,cACE,WAAYvV,G,OACV,YAAMA,IAAQ,IAChB,CA8BF,OAjCsC,OAIpC,YAAAkL,aAAA,WACE,OAAO,EAAP,KAAW/Q,KAAKyb,gBAAmBzb,KAAK0b,kBAC1C,EACA,YAAAnK,eAAA,WACE,MAAO,CAAC,CACV,EACU,YAAAkK,aAAV,WACE,IAAMjJ,GAAO,IAAAC,SAAQzS,KAAK6F,QAAQ2K,UAAUkC,SAC5C,MAAO,CACL+I,aAAc,IAAI,EAAAjK,eACd,kEAEIgB,EAAKI,OAAM,0CAGf,CAAC,oBAET,EACU,YAAA8I,gBAAV,WACE,MAAO,CACLA,gBAAiB,IAAI,EAAAlK,eACjB,wGAKA,CAAC,oBAET,EACF,EAjCA,CAAsC,EAAAoI,SAAzB,EAAA+B,iBAAAA,C,2GCRb,IAAMC,EAAwB,qFAK9B,0BAA+BC,GAG7B,IAFA,IACIC,EADEC,EAAiG,CAAC,EAEhD,QAAhDD,EAAQF,EAAsBI,KAAKH,KAAmB,CAC5D,IAAMzD,EAAS0D,EAAM,GACDG,MAAM,KACNnT,KAAI,SAAA8F,GACH,IAAMsN,EAAStN,EAAEuN,OAAOF,MAAM,KAC9B,OAAIC,GAA4B,IAAlBA,EAAOtc,OACZ,CAAC2B,KAAM2a,EAAO,GAAIld,KAAMkd,EAAO,IAEjC,IACT,IACCE,QAAO,SAAAtU,GAAK,OAAM,OAANA,CAAA,IAChCiU,EAAWD,EAAM,IAAM,CAAC1D,OAAM,EAAEkB,KAAMwC,EAAM,G,CAE9C,IAAK,IAAM,KAAQC,EAGjB,IAFA,IAAMM,EArBc,6DAqBgBC,QAAQ,WAAY,GAClDC,EAAQ,IAAIC,OAAOH,EAAa,M,aAEpC,IAAM9a,EAAOua,EAAM,GACbW,EAAWX,EAAM,GACjB1D,EAAS0D,EAAM,GAAGG,MAAM,KACxBS,EAAW,EAAS,UAAGnb,EAAI,YAAIkb,EAAQ,KAAM,GAC/CE,EAAkBZ,EAAW,GAAMzC,KACnCsD,EAAiB,GACrBb,EAAW,GAAM3D,OAAO5D,SAAQ,SAAC1M,EAAGrI,GAC9BqI,IACF8U,GAAkB,UAAG9U,EAAEvG,KAAI,YAAIuG,EAAE9I,KAAI,cAAMoZ,EAAO3Y,GAAE,OAExD,IAEAkd,GADAA,EAAU,UAAGC,EAAc,cAAMD,IACfL,QAAQ,SAAU,UAAGG,EAAQ,QAC/C,IAAMI,EAAc,kBAClBH,EAAQ,8BAENC,EAAO,qBAGXd,EAASA,EAAOS,QAAQR,EAAM,GAAIe,E,EApBI,QAAhCf,EAAQS,EAAMP,KAAKH,K,IAwB7B,OADAA,EAASA,EAAOS,QAAQV,EAAuB,GAEjD,C,obCjDA,cACA,UACA,UACA,UAYA,aAKE,WACIpL,EAAyB+D,EAA0BI,EACnDjD,GAFJ,WAHS,KAAAoL,KAAkC,CAAC,EACnC,KAAAC,8BAA6E,CAAC,EAKrF/c,KAAK6F,QAAU,IAAI,EAAAkU,YAAYvJ,EAAW+D,EAAaI,EAAqBjD,GAG5E9J,OAAOoV,KAAK,EAAAC,cAAczI,SAAQ,SAACxV,GACjC,IAAMke,EAAM,IAAI,EAAAD,aAAaje,GAAM,EAAK6G,SACxC,EAAKiX,KAAK9d,GAAQke,CACpB,IAGA,IAAMpU,EAAM9I,KAAK+c,8BACjB,IAAK,IAAMI,KAAWnd,KAAK8c,KAAM,CAC/B,IACMM,EADMpd,KAAK8c,KAAKK,GACIpM,eAC1B,IAAK,IAAM8H,KAAWuE,EAAe,CACnC,IAAMjV,EAAMgV,EAAU,IAAMtE,EACxBwE,OAAW,EACXvU,EAAIX,IACNkV,EAAcvU,EAAIX,IACN8P,YAAcmF,EAAcvE,GAASZ,aAEjDoF,EAAc,IAAI,EAAAnD,mBAAmB/R,EAAKiV,EAAcvE,GAASZ,aACjEnP,EAAIX,GAAOkV,GAEb,IAAMlF,EAAeiF,EAAcvE,GAASV,aAC5C,GAAIA,EACF,IAAK,IAAI1Y,EAAI,EAAGA,EAAI0Y,EAAavY,SAAUH,EACzC,GAAKqJ,EAAIqP,EAAa1Y,IAKpB4d,EAAYrD,cAAclR,EAAIqP,EAAa1Y,SALlB,CACzB,IAAMwa,EAAO,IAAI,EAAAC,mBAAmB/B,EAAa1Y,IACjDqJ,EAAIqP,EAAa1Y,IAAMwa,EACvBoD,EAAYrD,cAAcC,E,GAQtC,CAmEF,OAjEE,YAAAqD,WAAA,WACE,IAAM/I,EAAcvU,KAAK6F,QAAQ0O,YAC7BhB,EAASgB,EAAYgJ,aAWzB,OARKvd,KAAK6F,QAAQ0O,YAAYiJ,UAC5BjK,EAAS,UAAGA,EAAM,oBAChB,IAAAkK,0BAAyBzd,KAAK6F,QAAQ2K,UAAUkC,QAAS1S,KAAK6F,QAAQ6L,oBAAoB0B,MAAMxT,UAGpG2T,GAAS,IAAAmK,gBAAenK,GAGjB,WAAG,IAAAoK,uBAAsB3d,KAAK6F,QAAQ2K,UAAUkC,SAAQ,iBAC7D1S,KAAK4d,YAAYrJ,EAAYxM,WAAYwM,EAAYsJ,WAAU,iBAC/D7d,KAAK8d,WAAWvK,GAAO,iBACvBA,EACJ,EAEU,YAAAuK,WAAV,SAAqBjC,GACnB,IAAMkC,EAAmB/d,KAAKge,kCAAkCnC,GAEhE,GAAgC,IAA5BkC,EAAiBne,OACnB,MAAO,GAIT,IADA,IAAIqe,EAAW,GACNxe,EAAI,EAAGA,EAAIse,EAAiBne,SAAUH,EAAG,CAChD,IAAIse,EAAiBte,GAAGwY,YAGtB,MAAM,IAAIzY,MAAM,qDAA8Cue,EAAiBte,GAAGT,OAFlFif,GAAYF,EAAiBte,GAAGwY,YAAc,I,CAMlD,OAAOgG,CACT,EACQ,YAAAD,kCAAR,SAA0CnC,GAA1C,WACQzB,EAA8B,GASpC,OAPAxS,OAAOoV,KAAKhd,KAAK+c,+BAA+BvI,SAAQ,SAAA0J,GACtD,IAAMrF,EAAUqF,EAAgBjC,MAAM,KAAK,IACV,IAA7BJ,EAAOnc,QAAQmZ,IACjBuB,EAAMva,KAAK,EAAKkd,8BAA8BmB,GAElD,IAEO,EAAArD,4BAA4BV,mBAAmBC,EACxD,EAEU,YAAAwD,YAAV,SAAsBO,EAAqBN,G,YACnCO,EAAyB,GAC/B,GAAID,E,IACF,IAAsB,QAAAA,GAAQ,8BAAE,CAA3B,IAAME,EAAO,QAChBD,EAAave,KAAK,4BAAqBwe,EAAO,K,mGAGlD,GAAIR,E,IACF,IAAuB,QAAAA,GAAS,8BAAE,CAA7B,IAAMpB,EAAQ,QACjB2B,EAAave,KACT,kBAAW4c,EAASlb,KAAI,YAAIkb,EAASzd,MAAI,OAAGyd,EAAS6B,YAAc,WAAI7B,EAAS6B,YAAW,KAAM,GAAE,K,mGAG3G,OAAOF,EAAa3U,KAAK,KAC3B,EACF,EAhHA,GAAa,EAAA8U,iBAAAA,C,2GCfb,cAEA,UACA,UACA,UACA,UAEa,EAAAtB,aAAwE,CACnF,SAAY,EAAA7B,gBACZ,UAAa,EAAAO,iBACb,IAAO,EAAA6C,WACP,WAAc,EAAAC,kBACd,YAAe,EAAA5E,c,ozBCZjB,cAMA,cACE,WAAYhU,G,OACV,YAAMA,IAAQ,IAChB,CAyJF,OA5JuC,OAIrC,YAAAkL,aAAA,WACE,OAAO,EAAP,WACK/Q,KAAK0e,cACL1e,KAAK2e,oBACL3e,KAAK4e,mBACL5e,KAAK6e,mBACL7e,KAAK8e,mBAEZ,EACA,YAAAvN,eAAA,WACE,MAAO,CAAC,CACV,EACU,YAAAmN,WAAV,sBACQK,EAAa/e,KAAK6F,QAAQ6L,oBAAoB0B,MAAMxT,OACpDqS,EAA2C,CAAC,EAqBlD,OApBAjS,KAAK6F,QAAQ0O,YAAYxM,WAAWyM,SAAQ,SAACxV,EAAMS,GACjD,IAAM2T,EAAQ,EAAKvN,QAAQ8O,oBAAoBlV,GAAGsS,cAClD,GAAIqB,EAAMxT,QAAUmf,EAAY,CAK9B,IAJA,IAAM/K,EAAOZ,EAAMxT,OACbof,EAAYD,EAAa/K,EACzB9B,EAAW,uBAAgBlT,GAC7BigB,EAAQ,GACH,EAAI,EAAG,EAAIjL,IAAQ,EAC1BiL,GAAS,kCACK,EAAC,6CAAqCD,EAAY,EAAC,eAAO5L,EAAM,GAAE,sBAGlF,IAAMkG,EAAO,yBACNpH,EAAQ,gCAAwB6M,EAAU,kCAA0B/K,EAAI,2BAC3EiL,EAAK,yBAGThN,EAAOC,GAAY,IAAI,EAAAV,eAAe8H,E,CAE1C,IACOrH,CACT,EACU,YAAA0M,iBAAV,sBACQI,EAAa/e,KAAK6F,QAAQ6L,oBAAoB0B,MAAMxT,OACpDqS,EAA2C,CAAC,EAuBlD,OAtBAjS,KAAK6F,QAAQ0O,YAAYxM,WAAWyM,SAAQ,SAACxV,EAAMS,GACjD,IAAM2T,EAAQ,EAAKvN,QAAQ8O,oBAAoBlV,GAAG2T,MAClD,KAAMA,EAAMxT,OAAS,GAAKwT,EAAMxT,OAASmf,GAAa,CAKpD,IAJA,IAAM/K,EAAOZ,EAAMxT,OACbof,EAAYD,EAAa/K,EACzB9B,EAAW,6BAAsBlT,GACnCigB,EAAQ,GACH,EAAI,EAAG,EAAIjL,EAAO,IAAK,EAC9BiL,GAAS,kCACK,EAAC,6CAAqCD,EAAY,EAAC,eAAO5L,EAAM,GAAE,sBAGlF,IAAMkG,EAAO,yBACNpH,EAAQ,+BAAuB6M,EAAU,kCAA0B/K,EAAI,2BAC1EiL,EAAK,mCACOjL,EAAO,EAAC,8BAAsB+K,EAAa,EAAC,qCAC5C/K,EAAO,EAAC,8BAAsB+K,EAAa,EAAC,2BAG5D9M,EAAOC,GAAY,IAAI,EAAAV,eAAe8H,E,CAE1C,IACOrH,CACT,EACU,YAAA4M,gBAAV,sBACQ5M,EAA2C,CAAC,EAWlD,OAVAjS,KAAK6F,QAAQ0O,YAAYxM,WAAWyM,SAAQ,SAACxV,EAAMS,GACjD,IAAM2T,EAAQ,EAAKvN,QAAQ8O,oBAAoBlV,GAAG2T,MAC5Ca,EAAU,EAAKpO,QAAQ8O,oBAAoBlV,GAAGwU,QAC9CD,EAAOZ,EAAMxT,OACfsS,EAAW,0BAAmBlT,GAClCiT,EAAOC,GAAY,IAAI,EAAAV,eAAeiN,EAAkBS,oBAAoBhN,EAAU8B,EAAMC,IAC5F/B,EAAW,0BAAmBlT,EAAI,MAClCiT,EAAOC,GACH,IAAI,EAAAV,eAAeiN,EAAkBS,oBAAoBhN,EAAU8B,EAAMC,EAAQwD,QAAQsB,WAC/F,IACO9G,CACT,EACO,EAAAiN,oBAAP,SAA2BlgB,EAAcgV,EAAcC,GAErD,IADA,IAAIgL,EAAQ,GACHxf,EAAIuU,EAAO,EAAGvU,GAAK,IAAKA,EAC/Bwf,GAAS,sCACaxf,EAAC,eAAOwU,EAAQxU,GAAE,eAG1C,MAAO,sBACCT,EAAI,wBAAgBgV,EAAI,kDAE1BiL,EAAK,4CAIb,EACU,YAAAL,gBAAV,sBACQ3M,EAA2C,CAAC,EAWlD,OAVAjS,KAAK6F,QAAQ0O,YAAYxM,WAAWyM,SAAQ,SAACxV,EAAMS,GACjD,IAAM2T,EAAQ,EAAKvN,QAAQ8O,oBAAoBlV,GAAG2T,MAC5Ca,EAAU,EAAKpO,QAAQ8O,oBAAoBlV,GAAGwU,QAC9CD,EAAOZ,EAAMxT,OACfsS,EAAW,0BAAmBlT,GAClCiT,EAAOC,GAAY,IAAI,EAAAV,eAAeiN,EAAkBU,sBAAsBjN,EAAU8B,EAAMC,IAC9F/B,EAAW,0BAAmBlT,EAAI,MAClCiT,EAAOC,GACH,IAAI,EAAAV,eAAeiN,EAAkBU,sBAAsBjN,EAAU8B,EAAMC,EAAQwD,QAAQsB,WACjG,IACO9G,CACT,EACO,EAAAkN,sBAAP,SAA6BngB,EAAcgV,EAAcC,GAEvD,IADA,IAAMoF,EAAe,GACZ5Z,EAAI,EAAGA,EAAIuU,EAAO,IAAKvU,EAC9B4Z,EAAaxZ,KAAK,0BACRJ,EAAC,wBAAgBwU,EAAQxU,GAAE,MACrC4Z,EAAaxZ,KAAK,sCACIJ,EAAC,eAAOwU,EAAQxU,GAAE,MAI1C,OAFA4Z,EAAaxZ,KAAK,0BACNmU,EAAO,EAAC,gBACb,uBACEhV,EAAI,wCAAgCgV,EAAI,yBAC3CqF,EAAa5P,KAAK,IAAG,oBAG7B,EACU,YAAAqV,iBAAV,sBACQ7M,EAA2C,CAAC,EA0BlD,OAzBAjS,KAAK6F,QAAQ0O,YAAYxM,WAAWyM,SAAQ,SAACxV,EAAMS,GAKjD,IAJA,IAAM2T,EAAQ,EAAKvN,QAAQ8O,oBAAoBlV,GAAG2T,MAC5CY,EAAOZ,EAAMxT,OACbsS,EAAW,2BAAoBlT,GACjCogB,EAAY,GACP,EAAI,EAAG,EAAIpL,IAAQ,EAC1BoL,GAAa,0BACL,EAAC,eAAOhM,EAAM,GAAE,KAE1B,IAAMkG,EAAO,yBACJpH,EAAQ,sCAA8B8B,EAAI,qCACnCA,EAAI,yBACdoL,EAAS,oCACGpL,EAAI,uOAUtB/B,EAAOC,GAAY,IAAI,EAAAV,eAAe8H,EACxC,IACOrH,CACT,EACF,EA5JA,CAAuC,EAAA2H,SAA1B,EAAA6E,kBAAAA,C,+KCOb,IAAMY,EAAoB,CACxB3M,QAAS,GACTrH,UAAW,YACXiU,cAAe,UACfC,YAAa,UACbjL,UAAW,YACX1B,OAAQ,eACR4M,kBAAmB,IAEfC,EAAoB,CACxB/M,QAAS,kBACTrH,UAAW,KACXiU,cAAe,MACfC,YAAa,KACbjL,UAAW,UACX1B,OAAQ,cACR4M,kBAAmB,yBAGrB,SAAgB/M,EAAQC,GACtB,OAAmB,IAAZA,EAAgB2M,EAAcI,CACvC,CAFA,YAIA,iCAAsC/M,GACpC,IAAMF,EAAOC,EAAQC,GACrB,MAAO,UAAGF,EAAKE,QAAO,iDAEhBF,EAAKnH,UAAS,kCACdmH,EAAKnH,UAAS,wCAEdmH,EAAK8M,cAAa,6IAO1B,EAEA,iCAAsC5M,GACpC,IAAMF,EAAOC,EAAQC,GACrB,MAAO,UAAGF,EAAKE,QAAO,uGAIlBF,EAAK+M,YAAW,iCAChB/M,EAAKgN,kBAAiB,qZA4B5B,EAEA,oCAAyC9M,EAAcgN,GACrD,IAAMlN,EAAOC,EAAQC,GACrB,MAAO,6CAESgN,EAAiB,8FAG7BlN,EAAKI,OAAM,sBAGjB,C,6yBCnGA,cAOA,cACE,WAAY/M,G,OACV,YAAMA,IAAQ,IAChB,CAmGF,OAtGgC,OAI9B,YAAA0L,eAAA,WACE,MAAO,CAAC,CACV,EACA,YAAAR,aAAA,WACE,OAAO,EAAP,SAAW/Q,KAAK2f,sBAAyB3f,KAAK4f,WAAc5f,KAAK6f,cAAiB7f,KAAK8f,aACzF,EACU,YAAAH,mBAAV,WACE,IACM3L,EADehU,KAAK6F,QAAQ6L,oBACR0B,MAAMxT,OAC1BmgB,EAAmC,CAACnF,IAAK,KAAMoF,IAAK,KAAMC,IAAK,KAAMC,IAAK,MAC1EjO,EAA2C,CAAC,EAClD,IAAK,IAAM,KAAQ8N,EAAQ,CAGzB,IAFA,IAAMI,EAAQ,UAAG,EAAI,OACjBC,EAAkB,GACb3gB,EAAI,EAAGA,EAAIuU,IAAQvU,EAC1B2gB,GAAmB,2BACV3gB,EAAC,aAAKsgB,EAAO,GAAK,gBAAQtgB,EAAC,kBAGtC,IAAM6Z,EAAO,yBACJ6G,EAAK,oBAAYnM,EAAI,2BAAmBA,EAAI,2BAC/CoM,EAAe,yBAGrBnO,EAAOkO,GAAS,IAAI,EAAA3O,eAAe8H,E,CAGrC,OAAOrH,CACT,EACU,YAAA2N,QAAV,WAIE,IAHA,IACM5L,EADehU,KAAK6F,QAAQ6L,oBACR0B,MAAMxT,OAC5BwgB,EAAkB,GACb3gB,EAAI,EAAGA,EAAIuU,IAAQvU,EAC1B2gB,GAAmB,yBACV3gB,EAAC,mBAAWA,EAAC,gBAGxB,IAAM6Z,EAAO,uCACYtF,EAAI,2BAAmBA,EAAI,yBAC9CoM,EAAe,qBAGrB,MAAO,CAACR,QAAS,IAAI,EAAApO,eAAe8H,GACtC,EAEU,YAAAuG,WAAV,WASE,IARA,IACM7L,EADehU,KAAK6F,QAAQ6L,oBACR0B,MAAMxT,OAC5Bqf,EAAQ,sDAEKjL,EAAI,2EAIZvU,EAAI,EAAGA,EAAIuU,EAAO,IAAKvU,EAC9Bwf,GAAS,sCACaxf,EAAC,4BACbA,EAAC,4BAGbwf,GAAS,wCAEGjL,EAAO,EAAC,wBAEpB,IAAMsF,EAAO,4CACiBtF,EAAI,+CAC5BiL,EAAK,uBAGX,MAAO,CAACY,WAAY,IAAI,EAAArO,eAAe8H,GACzC,EACU,YAAAwG,WAAV,WASE,IARA,IACM9L,EADehU,KAAK6F,QAAQ6L,oBACR0B,MAAMxT,OAC5Bqf,EAAQ,uDAEMjL,EAAI,wEAIbvU,EAAI,EAAGA,EAAIuU,EAAO,IAAKvU,EAC9Bwf,GAAS,sCACaxf,EAAC,mCACNA,EAAC,cAGpBwf,GAAS,+CAEUjL,EAAO,EAAC,gBAE3B,IAAMsF,EAAO,uCACYtF,EAAI,oCACvBiL,EAAK,mBAGX,MAAO,CAACa,WAAY,IAAI,EAAAtO,eAAe8H,GACzC,EACF,EAtGA,CAAgC,EAAAM,SAAnB,EAAA4E,WAAAA,C,6uDCNb,cACA,UACA,UAEA,OACA,UACA,UACA,SAGA,UACA,UAeA,aAGE,WAAmB1U,GAAA,KAAAA,QAAAA,EACjB9J,KAAKqgB,uBAAyB,IAAI7f,IAClCR,KAAKsgB,yBAA2B,IAAI9f,GACtC,CAsRF,OAjRE,YAAA+f,+BAAA,SAA+BnN,EAA0BoN,GACvD,OAAO,IAAAD,gCAA+BvgB,KAAK8J,QAAQ2W,eAAgBrN,EAAOoN,EAC5E,EAEA,YAAAE,eAAA,SAAeC,EAAwCC,GACrD,GAAIA,EAAOhhB,OAAS+gB,EAAQ5Y,WAAWnI,OACrC,MAAM,IAAIJ,MAAM,0CAAmCmhB,EAAQ5Y,WAAWnI,OAAM,MAE9E,GAAI+gB,EAAQ5Y,WAAWnI,SAAW+gB,EAAQE,WAAWjhB,OACnD,MAAM,IAAIJ,MAAM,+CAKlB,IADA,IAAMshB,EAAmC,GAChCrhB,EAAI,EAAGA,EAAIkhB,EAAQ5Y,WAAWnI,SAAUH,EAC/CqhB,EAAkBrhB,GAAKO,KAAK+gB,uBAAuBH,EAAOnhB,GAAIkhB,EAAQE,WAAWphB,IAGnF,IAAM0I,EAzCN,SAACoM,EAA4CuM,GAC3C,IAAMF,EACFE,EAAkBhY,KAAI,SAAAkY,GAAW,gBAAGA,EAAQjP,cAActI,KAAK,KAAI,YAAIuX,EAAQ/d,MAAK,YAAI+d,EAAQhe,OAA/D,IAC5ByG,KAAK,KACVtB,EAAMoM,EAAYvV,KAKtB,OAJIuV,EAAY0M,YACd9Y,GAAO,IAAMoM,EAAY0M,UAAY,KAEvC9Y,EAAO,IAAMyY,CAEf,CA+BYM,CAAwBP,EAASG,GACzCK,EAAWnhB,KAAK8J,QAAQsX,eAAeC,YAAYlZ,GACjDoM,EAAc4M,EAChBA,EAAS5M,YACsC,mBAAtCoM,EAA8Bve,IAAsBue,EAA8Bve,MAC9Bue,EAG3DjP,GAAsB,IAAA4P,oCACxBthB,KAAK8J,QAAQ2W,eAAgBlM,EAAY3B,OAAOnR,KAAM8S,EAAY3B,OAAO4N,aACvEe,EAAoBvhB,KAAKwhB,kBAAkB9P,EAAqB6C,EAAY3B,OAAOrR,MAQzF,OANK4f,IACHA,EAAWnhB,KAAK8J,QAAQsX,eAAeK,MAAMlN,EAAauM,EAAmBS,GAC7EvhB,KAAK8J,QAAQsX,eAAeM,YAAYvZ,EAAKgZ,IAG/CnhB,KAAK2hB,WAAWR,EAAUL,EAAmBS,GACtCA,CACT,EAEA,YAAAtZ,IAAA,SAAI0Y,EAA4BC,GAE9B,OAD0B5gB,KAAK0gB,eAAeC,EAASC,GAC9BgB,MAC3B,EAEQ,YAAAD,WAAR,SAAmBR,EAAoBP,EAAuBhO,GAE5D,IAAK,IAAInT,EAAI,EAAGA,EAAImhB,EAAOhhB,SAAUH,EACnC,KAAMmhB,EAAOnhB,GAAGkS,WAAcwP,EAAS5M,YAAYsM,WAAWphB,KAAO,EAAAoiB,YAAYC,QAC/E,MAAM,IAAItiB,MAAM,gBAASC,EAAC,mCAK9B,KAAMmT,EAAOjB,WAAcwP,EAAS5M,YAAY3B,OAAO4N,cAAgB,EAAAqB,YAAYC,QACjF,MAAM,IAAItiB,MAAM,uCAGlBQ,KAAK8J,QAAQsX,eAAenZ,IAAIkZ,EAAUP,EAAQhO,EACpD,EAaQ,YAAAmO,uBAAR,SAA+Ba,EAAgBpB,GAC7C,IAAIuB,EAAK/hB,KAAKgiB,eAAeJ,EAAOK,OAAQzB,IAAgB,EAAAqB,YAAYC,QAExE,IAAKC,IAEHA,EAAK/hB,KAAKgiB,eAAeJ,EAAOK,OAAQzB,IAAgB,EAAAqB,YAAYC,SAElE,OAAItB,IAAgB,EAAAqB,YAAYC,OACvB9hB,KAAKuQ,KAAKwR,GAEV/hB,KAAKkiB,OAAOH,GAKzB,IAAKA,EAAI,CACP,IAAMxI,GAAS,IAAA+H,oCAAmCthB,KAAK8J,QAAQ2W,eAAgBmB,EAAOngB,KAAM+e,GAE5F,GAAIA,IAAgB,EAAAqB,YAAYM,oBAAqB,CACnD,IAEM/O,EAAQwO,EAAOngB,KACrB,GAAqB,IAAjB2R,EAAMxT,OAAc,CAQtB,IAAMwiB,EAAsB,CAAChP,EAAM,GAAItI,KAAKE,KAAMoI,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAV/D,IAWTiP,GACF,IAAAf,oCAAmCthB,KAAK8J,QAAQ2W,eAAgB2B,EAAqB5B,GACrF1d,EAAS8e,EAAOU,WACpB,GAAIlP,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAdjB,GAcmC,EAAG,CACnD,IAAMmP,EAAiBnP,EAAM,GACvBoP,EAAapP,EAAM,GAAKA,EAAM,GAAKA,EAAM,GACzCqP,EAjBO,EAiBM3X,KAAKE,KAlBd,EAkBmBwX,EAjBhB,GAmBb1f,EAAS,IAAIrC,aADG8hB,EAAiBE,GAEjC,IAAK,IAAI9T,EAAI,EAAGA,EAAI4T,IAAkB5T,EAAG,CACvC,IAAM+T,EAAY/T,EAAI6T,EAChBG,EAAYhU,EAAI8T,EAAa9T,EAvB3B,EAuBuC6T,EAC/C1f,EAAOf,IAAI6f,EAAOU,WAAWM,SAASF,EAAWA,EAAYF,GAAaG,E,EAG9E,OAAO3iB,KAAKwhB,kBAAkBa,EAAgBT,EAAOrgB,KAAMuB,EAAQ8e,EAAQ,E,EAI/E,GAAIpB,IAAgB,EAAAqB,YAAYC,OAAQ,CACtC,IAAMe,GACF,IAAAC,8BAA6B9iB,KAAK8J,QAAQ2W,eAAgBmB,EAAOngB,KAAM,EAAG,GAAI,CAACshB,WAAW,IACxFC,EAAsBhjB,KAAKwhB,kBAC7BqB,EAAuBjB,EAAOrgB,KAAMqgB,EAAOU,WAAYV,EAAQ,GACnEG,EAAK/hB,KAAKuQ,KAAKyS,E,MAEfjB,EAAK/hB,KAAKwhB,kBAAkBjI,EAAQqI,EAAOrgB,KAAMqgB,EAAOU,WAAYV,EAAQ,E,CAGhF,OAAOG,CACT,EAWA,YAAAkB,sCAAA,SACI1J,EAAuB2J,EAA2B1hB,EAAyBogB,GAC7E,OAAO5hB,KAAKwhB,kBAAkBjI,EAAQ2J,EAAU1hB,EAAMogB,EAAQ,EAChE,EAEQ,YAAAJ,kBAAR,SACIjI,EAAuB2J,EAA2B1hB,EAA0BogB,EAC5EuB,GACF,EAAAzS,OAAOE,QAAQ,mBAAoB,wCAAiCiH,KAAKE,UAAUwB,GAAO,MAC1F,IAAMyH,EAAUhhB,KAAK8J,QAAQsZ,eAAeC,wBAAwBH,EAAU3J,EAAQ/X,EAAM2hB,GAC5F,OAAOnjB,KAAKsjB,6BAA6B/J,EAAQ2J,EAAUlC,EAASY,EACtE,EAEA,YAAA2B,gBAAA,SAAgBC,EAAeC,GAC7B,IAAMC,EAAU1jB,KAAK+gB,uBAAuByC,EAAO,EAAA3B,YAAY8B,UACzDC,EAAkC,CACtC5c,SAAU0c,EAAQ1c,SAClBhE,OAAQ0gB,EAAQ1gB,OAChBC,MAAOygB,EAAQzgB,MAEfmQ,MAA+B,IAAxBqQ,EAAa7jB,OAAe6jB,EAAe,CAAC,GACnDxP,QAAS,EAAAkC,UAAU0N,eAAeJ,GAClC1R,cAAe0R,GAGjB,OADuBzjB,KAAKsjB,6BAA6BM,EAAkBJ,EAAMjiB,KAAMmiB,EAAQ1C,SACzEY,MACxB,EAEA,YAAAkC,cAAA,SAAcN,EAAeC,GAC3B,IAAMC,EAAU1jB,KAAK+gB,uBAAuByC,EAAO,EAAA3B,YAAYC,QAG/D,IAAI,IAAAiC,gBAAeP,EAAM/hB,KAAMgiB,GAAe,CAC5C,IAAMG,EAAkC,CACtC5c,SAAU0c,EAAQ1c,SAClBhE,OAAQ0gB,EAAQ1gB,OAChBC,MAAOygB,EAAQzgB,MAEfmQ,MAA+B,IAAxBqQ,EAAa7jB,OAAe6jB,EAAe,CAAC,GACnDxP,QAAS,EAAAkC,UAAU0N,eAAeJ,GAClC1R,cAAe0R,EACf9R,UAAU,GAGZ,OADuB3R,KAAKsjB,6BAA6BM,EAAkBJ,EAAMjiB,KAAMmiB,EAAQ1C,SACzEY,M,CAGxB,IAAMoC,GAAqB,IAAAC,eAAcT,EAAM/hB,MACzCyiB,GAAsB,IAAAD,eAAcR,GAEpCU,EAAsBnkB,KAAK8jB,cAAcN,EAAOQ,GAChDI,EAAuBpkB,KAAKiI,KAC9B,IAAAoc,wCAAuCrkB,KAAMmkB,EAAqBD,GAAsB,CAACC,IAE7F,OADqBnkB,KAAK8jB,cAAcM,EAAsBX,EAEhE,EAEA,YAAAa,KAAA,SAAKd,EAAejiB,GAClB,IAAMmiB,EAAU1jB,KAAK+gB,uBAAuByC,EAAO,EAAA3B,YAAY8B,UAE/D,OADuB3jB,KAAKsjB,6BAA6BI,EAA0BniB,EAAMmiB,EAAQ1C,SAC3EY,MACxB,EAEQ,YAAA0B,6BAAR,SACI/J,EAAuB2J,EAA2BlC,EAAuBY,EAAiB2C,GAD9F,WAEQC,EAAW,OACZjL,GAAM,CACTqI,OAAQA,GACJ,IAAI,EAAAzgB,OACIoY,EAAOxH,cAAemR,GAAU,SAACuB,GAAmB,SAAKC,YAAYF,EAAjB,IACpD,SAAOC,GAAc,gEAAK,SAAAzkB,KAAK2kB,iBAAiBH,G,cAAcjlB,EAAWglB,GACrFvD,QAAO,IAGT,OADAhhB,KAAK4kB,eAAeJ,EAAY5C,OAAOK,OAAQuC,EAAajL,EAAO5H,UAC5D6S,CACT,EAEQ,YAAAxC,eAAR,SAAuBuC,EAAqB5S,GAC1C,YAD0C,IAAAA,IAAAA,GAAA,GACnC3R,KAAK8J,QAAQ+a,cAAcN,GAAYvkB,KAAK8J,QAAQkY,eAAeuC,EAAU5S,GAChFA,EAA0C3R,KAAKqgB,uBAAuBje,IAAImiB,GAChCvkB,KAAKsgB,yBAAyBle,IAAImiB,EAClF,EACA,YAAAK,eAAA,SAAeL,EAAqBxC,EAAiBpQ,QAAA,IAAAA,IAAAA,GAAA,GAC/C3R,KAAK8J,QAAQ+a,cAAcN,GAC7BvkB,KAAK8J,QAAQ8a,eAAeL,EAAUxC,EAAIpQ,IAEzCA,EAAW3R,KAAKqgB,uBAAyBrgB,KAAKsgB,0BAA0Bve,IAAIwiB,EAAUxC,EAE3F,EACA,YAAA+C,sBAAA,SAAsBlD,EAAgBjQ,GACpC,YADoC,IAAAA,IAAAA,GAAA,KAC3B3R,KAAKgiB,eAAeJ,EAAOK,OAAQtQ,EAC9C,EAEA,YAAA5B,QAAA,sBACE/P,KAAK8J,QAAQsZ,eAAe2B,sBAC5B/kB,KAAKqgB,uBAAuB7L,SAAQ,SAAAuN,GAAM,SAAKjY,QAAQsZ,eAAe4B,eAAejD,EAA3C,IAC1C/hB,KAAKqgB,uBAAyB,IAAI7f,IAClCR,KAAKsgB,yBAAyB9L,SAAQ,SAAAuN,GAAM,SAAKjY,QAAQsZ,eAAe4B,eAAejD,EAA3C,IAC5C/hB,KAAKsgB,yBAA2B,IAAI9f,GACtC,EAEA,YAAAkkB,YAAA,SAAYF,GACV,OAAIA,EAAY7S,SACP3R,KAAK0kB,YAAY1kB,KAAKkiB,OAAOsC,IAEjCxkB,KAAK8J,QAAQ7K,QAAQuR,UAAUyU,2BAG7BjlB,KAAK8J,QAAQsZ,eAAesB,YAAYF,EAAaA,EAAY5C,OAAOrgB,KAAMijB,EAAYxd,UAFxFhH,KAAK8J,QAAQsZ,eAAe8B,yBAAwB,IAAAC,eAAcnlB,KAAMwkB,GAGnF,EAEM,YAAAG,iBAAN,SAAuBH,G,mEACrB,OAAIA,EAAY7S,SACP,CAAP,EAAO3R,KAAK2kB,iBAAiB3kB,KAAKkiB,OAAOsC,KAEtCxkB,KAAK8J,QAAQ7K,QAAQuR,UAAUyU,2BAG7B,CAAP,EAAOjlB,KAAK8J,QAAQsZ,eAAeuB,iBAAiBH,EAAaA,EAAY5C,OAAOrgB,KAAMijB,EAAYxd,WAF7F,CAAP,EAAOhH,KAAK8J,QAAQsZ,eAAe8B,yBAAwB,IAAAC,eAAcnlB,KAAMwkB,I,QAKnF,YAAAjU,KAAA,SAAKiT,GAEH,OAD0BxjB,KAAK0gB,gBAAe,IAAA0E,6BAA4BplB,KAAMwjB,EAAM5B,QAAS,CAAC4B,EAAM5B,QAExG,EAEA,YAAAM,OAAA,SAAOsB,GAEL,OAD0BxjB,KAAK0gB,gBAAe,IAAA2E,+BAA8BrlB,KAAMwjB,EAAM5B,QAAS,CAAC4B,EAAM5B,QAE1G,EACF,EA5RA,GAAa,EAAA0D,sBAAAA,C,6vBCzBb,cACA,aACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,SACA,SACA,UACA,UACA,UACA,UACA,aACA,UACA,UAEa,EAAAC,uBAAuD,CAClE,CAAC,MAAO,GAAI,KAAMC,EAASC,KAC3B,CAAC,OAAQ,GAAI,KAAMD,EAASE,MAC5B,CAAC,MAAO,GAAI,KAAMC,EAAU/K,KAC5B,CAAC,MAAO,GAAI,KAAM+K,EAAUC,KAC5B,CAAC,OAAQ,GAAI,KAAMJ,EAASK,MAC5B,CAAC,OAAQ,GAAI,KAAML,EAASM,MAE5B,CAAC,cAAe,GAAI,KAAM,EAAAC,YAAa,EAAAC,4BACvC,CAAC,qBAAsB,GAAI,KAAM,EAAAC,mBAAoB,EAAAC,mCACrD,CAAC,OAAQ,GAAI,KAAM,EAAA5B,KAAM,EAAA6B,qBACzB,CAAC,OAAQ,GAAI,KAAMX,EAASxa,MAC5B,CAAC,OAAQ,GAAI,OAAQwa,EAASY,KAAMZ,EAASa,qBAC7C,CAAC,OAAQ,GAAI,MAAOb,EAASc,SAC7B,CAAC,SAAU,GAAI,KAAM,EAAAC,OAAQ,EAAAC,uBAC7B,CAAC,OAAQ,GAAI,KAAM,EAAAC,KAAM,EAAAC,qBACzB,CAAC,gBAAiB,GAAI,KAAM,EAAAC,cAAe,EAAAC,8BAC3C,CAAC,MAAO,GAAI,KAAMpB,EAASqB,KAC3B,CAAC,MAAO,GAAI,KAAMlB,EAAUzF,KAC5B,CAAC,UAAW,GAAI,KAAMsF,EAASsB,UAC/B,CAAC,eAAgB,GAAI,KAAM,EAAAC,aAAc,EAAAC,6BACzC,CAAC,QAAS,GAAI,KAAMrB,EAAUsB,OAC9B,CAAC,MAAO,GAAI,KAAMzB,EAAS0B,IAAK1B,EAAS2B,oBACzC,CAAC,MAAO,GAAI,KAAM3B,EAAS4B,KAC3B,CAAC,UAAW,GAAI,KAAM,EAAAC,QAAS,EAAAC,wBAC/B,CAAC,QAAS,GAAI,KAAM9B,EAAS+B,OAC7B,CAAC,YAAa,gBAAiB,KAAM,EAAAd,KAAM,EAAAC,qBAC3C,CAAC,SAAU,GAAI,KAAM,EAAAc,OAAQ,EAAAC,uBAC7B,CAAC,OAAQ,GAAI,OAAQ,EAAAC,KAAM,EAAAC,uBAC3B,CAAC,OAAQ,GAAI,MAAO,EAAAD,KAAM,EAAAE,wBAC1B,CAAC,oBAAqB,GAAI,KAAM,EAAAC,kBAAmB,EAAAC,kCACnD,CAAC,gBAAiB,GAAI,KAAM,EAAAC,eAC5B,CAAC,UAAW,GAAI,KAAMpC,EAAUqC,SAChC,CAAC,WAAY,GAAI,KAAMxC,EAASsB,UAChC,CAAC,cAAe,GAAI,KAAM,EAAAmB,YAAa,EAAAC,4BACvC,CAAC,wBAAyB,GAAI,KAAM,EAAAC,sBAAuB,EAAAC,sCAC3D,CAAC,YAAa,GAAI,KAAM5C,EAAS6C,UAAW7C,EAAS8C,0BACrD,CAAC,OAAQ,GAAI,KAAM3C,EAAU4C,MAC7B,CAAC,MAAO,GAAI,KAAM,EAAAC,IAAK,EAAAC,oBACvB,CAAC,MAAO,GAAI,KAAMjD,EAASkD,KAC3B,CAAC,SAAU,GAAI,KAAM,EAAAC,OAAQ,EAAAC,uBAE7B,CAAC,UAAW,GAAI,KAAM,EAAAC,QAAS,EAAAC,wBAC/B,CAAC,MAAO,GAAI,KAAMnD,EAAU1F,KAC5B,CAAC,MAAO,GAAI,KAAMuF,EAASuD,KAC3B,CAAC,MAAO,GAAI,KAAMvD,EAASwD,KAC3B,CAAC,KAAM,GAAI,KAAMrD,EAAUsD,IAC3B,CAAC,MAAO,GAAI,OAAQ,EAAAC,MAAO,EAAAC,sBAC3B,CAAC,MAAO,GAAI,MAAO,EAAAC,OAAQ,EAAAC,uBAC3B,CAAC,MAAO,GAAI,KAAM1D,EAAU2D,KAC5B,CAAC,QAAS,GAAI,KAAM3D,EAAU4D,OAC9B,CAAC,eAAgB,GAAI,KAAM,EAAAC,aAAc,EAAAC,uBACzC,CAAC,YAAa,GAAI,KAAM,EAAAC,UAAW,EAAAD,uBACnC,CAAC,aAAc,GAAI,KAAM,EAAAE,WAAY,EAAAF,uBACrC,CAAC,YAAa,GAAI,KAAM,EAAAG,UAAW,EAAAH,uBACnC,CAAC,aAAc,GAAI,KAAM,EAAAI,WAAY,EAAAJ,uBACrC,CAAC,YAAa,GAAI,OAAQ,EAAAK,UAAW,EAAAL,uBACrC,CAAC,kBAAmB,GAAI,KAAM,EAAAM,mBAAoB,EAAAN,uBAClD,CAAC,OAAQ,GAAI,KAAMjE,EAASwE,MAC5B,CAAC,UAAW,GAAI,KAAM,EAAA9iB,SACtB,CAAC,SAAU,GAAI,KAAM,EAAA+iB,OAAQ,EAAAC,0BAC7B,CAAC,SAAU,GAAI,MAAO,EAAAD,OAAQ,EAAAE,0BAC9B,CAAC,QAAS,GAAI,KAAM,EAAA/W,OACpB,CAAC,UAAW,GAAI,KAAMoS,EAAS4E,SAC/B,CAAC,MAAO,GAAI,KAAM5E,EAAS6E,KAC3B,CAAC,QAAS,GAAI,MAAO,EAAAC,UACrB,CAAC,QAAS,GAAI,MAAO,EAAA7S,MAAO,EAAA8S,sBAE5B,CAAC,UAAW,GAAI,OAAQ,EAAAC,QAAS,EAAAC,wBACjC,CAAC,UAAW,GAAI,MAAO,EAAAC,WAAY,EAAAC,2BAKnC,CAAC,QAAS,GAAI,OAAQ,EAAA1O,MAAO,EAAA2O,sBAC7B,CAAC,OAAQ,GAAI,KAAMpF,EAASqF,MAC5B,CAAC,UAAW,GAAI,OAAQ,EAAAC,QAAS,EAAAC,wBACjC,CAAC,UAAW,GAAI,MAAO,EAAAC,YACvB,CAAC,MAAO,GAAI,KAAMrF,EAAU3F,KAC5B,CAAC,MAAO,GAAI,KAAM,EAAAiL,KAClB,CAAC,MAAO,GAAI,KAAMzF,EAAS0F,KAC3B,CAAC,OAAQ,GAAI,KAAM1F,EAAS2F,MAC5B,CAAC,OAAQ,GAAI,KAAM,EAAAC,MACnB,CAAC,YAAa,GAAI,KAAM,EAAA1R,UAAW,EAAA2R,0BACnC,CAAC,WAAY,GAAI,MAAO,EAAAC,SAAU,EAAAC,2BAClC,CAAC,WAAY,GAAI,IAAK,EAAAD,SAAU,EAAAE,2BAChC,CAAC,YAAa,GAAI,OAAQ,EAAAC,UAAW,EAAAC,0BACrC,CAAC,YAAa,GAAI,MAAO,EAAAC,cACzB,CAAC,MAAO,GAAI,KAAMhG,EAAUiG,K,2qBCzH9B,cAIA,UAEA,UAQMC,EAAoC,CACxC7sB,KAAM,qBACN+I,WAAY,CAAC,IAAK,QAAS,IAAK,OAAQ,YACxC8Y,WACI,CAAC,EAAAgB,YAAY8B,SAAU,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAY8B,WAG9F,EAAAsC,mBACT,SAAC6F,EAAyClL,EAAkB7U,GAS1D,OARAggB,EAAenL,GAQR,CAPQkL,EAAiB7jB,IAAI,EAAD,KAE1B4jB,GAAiC,CACpC5K,UAAWlV,EAAWigB,SACtB5pB,IAAK,WAAM,OAAA6pB,EAAoCH,EAAkBlL,EAAQ7U,EAA9D,IAEb6U,GAEN,EAES,EAAAsF,kCACT,SAACjM,GACC,IAAMiS,EAAUjS,EAAKlO,WAAWS,SAAS,UAAW,MAC9C2f,EAAWlS,EAAKlO,WAAWS,SAAS,WAAY,IAChD4f,EAAUnS,EAAKlO,WAAWW,OAAO,UAAW,GAClD,OAAO,IAAAjB,6BAA4B,CAACygB,QAAO,EAAEC,SAAQ,EAAEC,QAAO,GAChE,EAEJ,IAAMH,EACF,SAACH,EAAyClL,EAAkB7U,GAEtD,IAAMyG,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ7K,QAAQuR,UAAUkC,SAC1DsB,EAAO4M,EAAO,GAAGnf,KAAK7B,OACtB,IACFksB,EAAiBvL,+BAA+BK,EAAO,GAAGnf,KAAM,EAAAogB,YAAY8B,UAAS,GADlF0I,EAAU,KAAEC,EAAW,KAExB/O,EAAe,gCACTvJ,EAAI,wEACuBqY,EAAU,aAAKC,EAAW,iDACvC9Z,EAAK8B,UAAS,iEACf9B,EAAK8B,UAAS,oEACV9B,EAAK8B,UAAS,iEACrB9B,EAAK8B,UAAS,gGAEsBvI,EAAWmgB,QAAO,kBAE5E,OAAO,EAAP,KACKL,GAAiC,CACpCjZ,OAAQ,CAACnR,KAAMmf,EAAO,GAAGnf,KAAMF,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC9EpG,aAAY,GAEhB,EAEFwO,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,yCAGlB,IAAM+sB,EAAI3L,EAAO,GACX4L,EAAQ5L,EAAO,GACfja,EAAIia,EAAO,GACXxd,EAAOwd,EAAO,GACd6L,EAAO7L,EAAO,GAIpB,GAAI2L,EAAE9qB,KAAK7B,OAAS,GAA2B,IAAtB4sB,EAAM/qB,KAAK7B,QAAkC,IAAlB+G,EAAElF,KAAK7B,QAAqC,IAArBwD,EAAK3B,KAAK7B,QAC5D,IAArB6sB,EAAKhrB,KAAK7B,OACZ,MAAM,IAAIJ,MAAM,wBAElB,GAAIgtB,EAAM/qB,KAAK,KAAO8qB,EAAE9qB,KAAK,IAAMkF,EAAElF,KAAK,KAAO8qB,EAAE9qB,KAAK,IAAM2B,EAAK3B,KAAK,KAAO8qB,EAAE9qB,KAAK,IAClFgrB,EAAKhrB,KAAK,KAAO8qB,EAAE9qB,KAAK,GAC1B,MAAM,IAAIjC,MAAM,wBAElB,GAAgB,YAAX+sB,EAAEhrB,MAAiC,YAAXgrB,EAAEhrB,MAAuC,YAAfirB,EAAMjrB,MAAqC,YAAfirB,EAAMjrB,MACzE,YAAXoF,EAAEpF,MAAiC,YAAXoF,EAAEpF,MAAsC,YAAd6B,EAAK7B,MAAoC,YAAd6B,EAAK7B,MACpE,YAAdkrB,EAAKlrB,MAAoC,YAAdkrB,EAAKlrB,KACnC,MAAM,IAAI/B,MAAM,8BAEpB,C,4SC3FA,cACA,UACA,UAEA,UAEA,SAAgBktB,IACd,IAAM1tB,EAAO,OASb,MAAO,CAACsa,KARK,oBACLta,EAAI,gEAGLA,EAAI,sDAIGA,KAAI,EAAEuC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgBC,IACd,IAAM5tB,EAAO,OASb,MAAO,CAACsa,KARK,oBACLta,EAAI,gEAGLA,EAAI,sDAIGA,KAAI,EAAEuC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgBE,IACd,IAAM7tB,EAAO,OASb,MAAO,CAACsa,KARK,oBACLta,EAAI,gEAGLA,EAAI,sDAIGA,KAAI,EAAEuC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgBG,IACd,IAAM9tB,EAAO,OASb,MAAO,CAACsa,KARK,oBACLta,EAAI,gEAGLA,EAAI,sDAIGA,KAAI,EAAEuC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgBI,IACd,IAAM/tB,EAAO,SASb,MAAO,CAACsa,KARK,oBACLta,EAAI,wEAGLA,EAAI,kEAIGA,KAAI,EAAEuC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgBK,IACd,IAAMhuB,EAAO,WAYb,MAAO,CAACsa,KAXK,oBACLta,EAAI,uEAGLA,EAAI,+HAOGA,KAAI,EAAEuC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgBM,IACd,IAAMjuB,EAAO,QAYb,MAAO,CAACsa,KAXK,oBACLta,EAAI,uEAGLA,EAAI,6JAOGA,KAAI,EAAEuC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgBO,IACd,IAAMluB,EAAO,OAcb,MAAO,CAACsa,KAbK,oBACLta,EAAI,sFAGLA,EAAI,uNASGA,KAAI,EAAEuC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgBQ,IACd,IAAMnuB,EAAO,MAcb,MAAO,CAACsa,KAbK,oBACLta,EAAI,sFAGLA,EAAI,uNASGA,KAAI,EAAEuC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgBS,IACd,IAAMpuB,EAAO,OAcb,MAAO,CAACsa,KAbK,oBACLta,EAAI,sFAGLA,EAAI,uNASGA,KAAI,EAAEuC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgBU,IACd,OAoBF,SAA2BlN,GACzB,IAAMnhB,EAAO,UAAGmhB,EAAK,KASrB,MAAO,CAAC7G,KARK,oBACLta,EAAI,4CACDmhB,EAAK,gCAETnhB,EAAI,4CACAmhB,EAAK,sBAGFnhB,KAAI,EAAEuC,KAAM,EAAAuY,aAAa6S,WACzC,CA/BSW,CAAkB,MAC3B,CACA,SAAgBC,IACd,IAAMvuB,EAAO,SAcb,MAAO,CAACsa,KAbK,oBACLta,EAAI,6EAGLA,EAAI,wNASGA,KAAI,EAAEuC,KAAM,EAAAuY,aAAa6S,WACzC,CAhKA,YAYA,YAYA,YAYA,YAYA,cAYA,gBAeA,aAeA,YAiBA,WAiBA,YAiBA,YAGA,cA+BA,IAAMa,EACF,SAACpmB,EAAgCwZ,EAAkB6M,EAClDC,EAAoD1B,QAApD,IAAA0B,IAAAA,EAAoC9M,EAAO,GAAGrf,MAC7C,IAAMif,EAAcpZ,EAAQ0C,QAAQyG,KAAO,EAAAsR,YAAYC,OAAS,EAAAD,YAAY8B,SAC5E,MAAO,CACL3kB,KAAMyuB,EAASzuB,KACf+I,WAAY,CAAC,IAAK,KAClB8Y,WAAY,CAACL,EAAaA,GAC1BS,UAAW+K,EACX5pB,IAAK,WAAM,OAAAurB,EAAwBvmB,EAASwZ,EAAQ6M,EAAUC,EAAnD,EAEf,EAEEC,EACF,SAACvmB,EAAgCwZ,EAAkB6M,EAClDC,QAAA,IAAAA,IAAAA,EAAoC9M,EAAO,GAAGrf,MAC7C,IAAMif,EAAcpZ,EAAQ0C,QAAQyG,KAAO,EAAAsR,YAAYC,OAAS,EAAAD,YAAY8B,SACtEiK,GAAe,EAAAzX,UAAU0X,SAASjN,EAAO,GAAGnf,KAAMmf,EAAO,GAAGnf,MAC9DqsB,EAAclN,EAAO,GAAGnf,KAEtBssB,EAAmB3mB,EAAQ0C,QAAQyG,KAEzC,GAAIqd,EAAa,CACf,IAAMI,EAAkB,EAAAtY,cAAcuY,UAAUrN,EAAO,GAAGnf,KAAMmf,EAAO,GAAGnf,MAAM,GAChF,IAAKusB,EACH,MAAM,IAAIxuB,MAAM,gDAGlB,IAAMuf,GADN+O,EAAcE,GACiBpuB,OACzBsuB,EAAkC,IAA1BtN,EAAO,GAAGnf,KAAK7B,OAAeghB,EAAO,GAAGnf,KAAK7B,OAAS,EAC9DuuB,EAAkC,IAA1BvN,EAAO,GAAGnf,KAAK7B,OAAeghB,EAAO,GAAGnf,KAAK7B,OAAS,EAC9DwuB,EAAmC,IAA1BxN,EAAO,GAAGnf,KAAK7B,OAAe,qCAAuC,mBAC9EyuB,EAAmC,IAA1BzN,EAAO,GAAGnf,KAAK7B,OAAe,qCAAuC,mBAE9E,GAAO,IAAA6S,SAAQrL,EAAQ0C,QAAQ7K,QAAQuR,UAAUkC,SACjD,EAAeqb,EAAmB,kBACxCN,EAASnU,KAAI,kIAIGmU,EAASzuB,KAAI,4BAC3B,EAAK4T,OAAM,uBAE2B,kBACxC6a,EAASnU,KAAI,6CACayF,EAAU,sCACrBmP,EAAK,oCACLC,EAAK,uBAClBC,EAAM,qBACNC,EAAM,4BACCZ,EAASzuB,KAAI,0CAGtB,MAAO,CACLA,KAAMyuB,EAASzuB,KACf+I,WAAY,CAAC,IAAK,KAClB8Y,WAAY,CAACL,EAAaA,GAC1B5N,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMmsB,EAAkBlN,YAAW,GAC/DjD,aAAY,EACZC,QAASuQ,E,CAGb,IAAMvb,GAAO,IAAAC,SAAQrL,EAAQ0C,QAAQ7K,QAAQuR,UAAUkC,SACjD6K,EAAe,gBACrBkQ,EAASnU,KAAI,gDAED9G,EAAK8B,UAAS,4CACd9B,EAAK8B,UAAS,gDACVmZ,EAASzuB,KAAI,4BAC3BwT,EAAKI,OAAM,2BAIb,MAAO,CACL5T,KAAMyuB,EAASzuB,KACf+I,WAAY,CAAC,IAAK,KAClB8Y,WAAY,CAACL,EAAaA,GAC1B5N,OAAQ,CAACnR,KAAMmf,EAAO,GAAGnf,KAAMF,KAAMmsB,EAAkBlN,YAAW,GAClEjD,aAAY,EACZC,SAAS,EAEb,EAES,EAAA5C,IAAM,SAACxT,EAAgCwZ,GACpC,OAACxZ,EAAQa,IAAIulB,EAA8BpmB,EAASwZ,EAAQ8L,KAAY9L,GAAxE,EAEH,EAAAgF,IAAM,SAACxe,EAAgCwZ,GACpC,OAACxZ,EAAQa,IAAIulB,EAA8BpmB,EAASwZ,EAAQsM,IAAW,QAAStM,GAAhF,EAEH,EAAAV,IAAM,SAAC9Y,EAAgCwZ,GACpC,OAACxZ,EAAQa,IAAIulB,EAA8BpmB,EAASwZ,EAAQgM,KAAYhM,GAAxE,EAEH,EAAAqG,MAAQ,SAAC7f,EAAgCwZ,GACtC,OAACxZ,EAAQa,IAAIulB,EAA8BpmB,EAASwZ,EAAQmM,IAAa,QAASnM,GAAlF,EAEH,EAAAoH,QAAU,SAAC5gB,EAAgCwZ,GACxC,OAACxZ,EAAQa,IAAIulB,EAA8BpmB,EAASwZ,EAAQoM,IAAe,QAASpM,GAApF,EAEH,EAAA2H,KAAO,SAACnhB,EAAgCwZ,GACrC,OAACxZ,EAAQa,IAAIulB,EAA8BpmB,EAASwZ,EAAQqM,IAAY,QAASrM,GAAjF,EAEH,EAAAX,IAAM,SAAC7Y,EAAgCwZ,GACpC,OAACxZ,EAAQa,IAAIulB,EAA8BpmB,EAASwZ,EAAQiM,KAAYjM,GAAxE,EAEH,EAAAqI,GAAK,SAAC7hB,EAAgCwZ,GACnC,OAACxZ,EAAQa,IAAIulB,EAA8BpmB,EAASwZ,EAAQuM,IAAU,QAASvM,GAA/E,EAEH,EAAA0I,IAAM,SAACliB,EAAgCwZ,GACpC,OAACxZ,EAAQa,IAAIulB,EAA8BpmB,EAASwZ,EAAQyM,KAAYzM,GAAxE,EAEH,EAAA2I,MAAQ,SAACniB,EAAgCwZ,GACtC,OAACxZ,EAAQa,IAAIulB,EAA8BpmB,EAASwZ,EAAQ2M,KAAc3M,GAA1E,EAEH,EAAAZ,IAAM,SAAC5Y,EAAgCwZ,GACpC,OAACxZ,EAAQa,IAAIulB,EAA8BpmB,EAASwZ,EAAQkM,KAAYlM,GAAxE,EAEH,EAAAgL,IAAM,SAACxkB,EAAgCwZ,GACpC,OAACxZ,EAAQa,IAAIulB,EAA8BpmB,EAASwZ,EAAQwM,IAAW,QAASxM,GAAhF,C,yHCxShB,cAGa,EAAA0D,KACT,SAACld,EAAgCwZ,EAAkB0N,GAEjD,OADAvC,EAAenL,GACR,CAACxZ,EAAQkd,KAAK1D,EAAO,GAAI0N,GAClC,EAES,EAAAnI,oBAA+D,SAAClM,GACzE,SAAAsU,UAAUC,wBAAwBvU,EAAKlO,WAAWW,OAAO,MAAzD,EAEJ,IAAMqf,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,0BAGlB,GAAuB,WAAnBohB,EAAO,GAAGrf,KACZ,MAAM,IAAI/B,MAAM,sBAEpB,C,2WCtBA,cAEA,UACA,SAGA,UAoHa,EAAAivB,oCACT,SAACrnB,EAAgCwZ,EAAkB7U,GACjD,IApHqC2iB,EAAoBzN,EAoHnD0N,GApH+BD,EAoHc9N,EAAOhhB,OApHDqhB,EAoHSlV,EAAWigB,SApHE,CACnFhtB,KAAM,kBACN+I,WAAY9F,MAAML,KAAK,CAAChC,OAAQ8uB,IAAa,SAAC5mB,EAAGrI,GAAM,iBAAIA,EAAJ,IACvDohB,WAAY5e,MAAMysB,GAAYE,KAAK,EAAA/M,YAAYC,QAC/Cb,UAAS,IAiHL,OAAO,EAAP,KAAW0N,GAAQ,CAAEvsB,IAAK,WAAM,OA7GlC,SAACgF,EAAgCunB,EAA2B/N,EAAkBiO,GAC5E,IAAMC,EAAalO,EAAO,GAAGnf,KAAKgW,QAClC,GAAIoX,GAAQC,EAAWlvB,QAAUivB,GAAS,EAAIC,EAAWlvB,OACvD,MAAM,IAAIJ,MAAM,gEAEdqvB,EAAO,IACTA,EAAOC,EAAWlvB,OAASivB,GAK7B,IADA,IAAMf,EAAcgB,EAAWrX,MAAM,GAC5BhY,EAAI,EAAGA,EAAImhB,EAAOhhB,OAAQH,IAEjC,IADA,IAAMsvB,EAAanO,EAAOnhB,GAAGgC,KAAKgW,QACzBuX,EAAY,EAAGA,EAAYF,EAAWlvB,OAAQovB,IAErD,GAAIA,IAAcH,EAChBf,EAAYe,IAASE,EAAWC,QAG7B,GAAIF,EAAWE,KAAeD,EAAWC,GAC5C,MAAM,IAAIxvB,MAAM,oCAKtB,IAAMwU,EAAO8Z,EAAYluB,OACnBkU,GAAS,IAAAmb,aAAY,SAAUjb,GAC/Bkb,GAAQ,IAAAtZ,mBAAkB5B,GAC1Bmb,GAAgB,IAAAC,qBAEhBC,EAASzO,EAAO9X,KAAI,SAAArJ,GAAK,OAAAA,EAAEgC,IAAF,IACzBuF,GAAW,IAAA+O,eAAc/B,GACzBsb,EAAoB,IAAIrtB,MAAMotB,EAAOzvB,OAAS,GAGpD,IADA0vB,EAAQ,GAAKD,EAAO,GAAGR,GACdpvB,EAAI,EAAGA,EAAI6vB,EAAQ1vB,OAAQH,IAClC6vB,EAAQ7vB,GAAK6vB,EAAQ7vB,EAAI,GAAK4vB,EAAO5vB,GAAGovB,GAG1C,IAAMU,EAAUvoB,EAAS6nB,GACnBW,EAAexoB,EAASyQ,OAAO,GAC/BgY,EAAczoB,EAASyC,OAEzBimB,EAAkB,cAAOH,EAAO,cAAMD,EAAQ,GAAE,8DAEtCG,EAAW,mBAAWD,EAAa/lB,OAAM,kBAEvD,IAAShK,EAAI,EAAGA,EAAI6vB,EAAQ1vB,OAAQH,IAAK,CACvC,IAAM,EAAQ6vB,EAAQ7vB,EAAI,GAC1BiwB,GAAmB,4BACTH,EAAO,cAAMD,EAAQ7vB,GAAE,gBAAQ8vB,EAAO,eAAOD,EAAQ7vB,EAAI,GAAE,sEAEvDA,EAAC,YAAIkwB,EAA0B3oB,EAAUuoB,EAAS,GAAM,oCACvDI,EAA0BH,EAAcD,EAAS,GAAM,qB,CAGxE,IAAMK,EAAYN,EAAQ1vB,OACpBiwB,EAAQP,EAAQA,EAAQ1vB,OAAS,GACvC8vB,GAAmB,8DAELE,EAAS,YAAID,EAA0B3oB,EAAUuoB,EAASM,GAAM,kCAC/DF,EAA0BH,EAAcD,EAASM,GAAM,OAEtE,IAAMrd,GAAO,IAAAC,SAAQrL,EAAQ0C,QAAQ7K,QAAQuR,UAAUkC,SAEjD6K,EAAe,sBACf4R,EAAa,sCACEnoB,EAAS8B,KAAI,SAAAgnB,GAAK,aAASA,CAAT,IAAW,4BAC1CJ,EAAe,iEAIfR,EAAK,0EACgBloB,EAASgN,EAAO,GAAE,iCAChChN,EAASgN,EAAO,GAAE,qBAAahN,EAASgN,EAAO,GAAE,iCACjDhN,EAASgN,EAAO,GAAE,kEAEGF,EAAM,0CAElCA,EAAOE,EAAO,GAAE,cAAMF,EAAOE,EAAO,GAAE,kCAClCF,EAAOE,EAAO,GAAE,cAAM8Z,EAAY9Z,EAAO,GAAE,kDACzBF,EAAM,4CAG5BA,EAAOE,EAAO,GAAE,cAAMF,EAAOE,EAAO,GAAE,kCAClCF,EAAOE,EAAO,GAAE,cAAM8Z,EAAY9Z,EAAO,GAAE,kDACzBF,EAAM,4CAG5BA,EAAOE,EAAO,GAAE,cAAMF,EAAOE,EAAO,GAAE,kCAClCF,EAAOE,EAAO,GAAE,cAAM8Z,EAAY9Z,EAAO,GAAE,gCAC3CF,EAAOE,EAAO,GAAE,cAAM8Z,EAAY9Z,EAAO,GAAE,kDACzBF,EAAM,0CAE5BtB,EAAKI,OAAM,qCAInB,OAAO,EAAP,KACK+b,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAYC,QAC3EvE,aAAY,EACZC,SAAS,GAEb,CAKkCuS,CAA8B3oB,EAASunB,EAAU/N,EAAQ7U,EAAW8iB,KAApE,GAClC,EAEJ,IAAMc,EAA4B,SAAC3oB,EAAoBuoB,EAAiBM,GACtE,IAAMG,EAAahpB,EAAStH,QAAQ6vB,GAQpC,OAPYvoB,EAAS8B,KAAI,SAAC0S,EAAGyU,GAC3B,OAAIA,IAAQD,EACH,UAAGxU,EAAC,cAAMqU,GAEVrU,CAEX,IACW/R,MACb,C,uqBC3IA,cAKA,UAEA,UAMa,EAAA8c,OACT,SAACuF,EAAyClL,EAAkB7U,GAE1D,OADAggB,EAAenL,GACXkL,EAAiBhiB,QAAQyG,MAAQqQ,EAAO,GAAGnf,KAAK7B,OAAS,EAGpD,CADHksB,EAAiB7jB,KAAI,IAAAwmB,qCAAoC3C,EAAkBlL,EAAQ7U,GAAa6U,IAK7F,CADHkL,EAAiB7jB,IAAIioB,EAAsCpE,EAAkBlL,EAAQ7U,GAAa6U,GAG1G,EAEJ,IAwEMsP,EACF,SAAC9oB,EAAgCwZ,EAAkB7U,GACjD,IA1EuC2iB,EAAoBzN,EA0ErD0N,GA1EiCD,EA0Ec9N,EAAOhhB,OA1EDqhB,EA0ESlV,EAAWigB,SA1EE,CACrFhtB,KAAM,SACN+I,WAAY9F,MAAML,KAAK,CAAChC,OAAQ8uB,IAAa,SAAC5mB,EAAGrI,GAAM,iBAAIA,EAAJ,IACvDohB,WAAY5e,MAAMysB,GAAYE,KAAK,EAAA/M,YAAY8B,UAC/C1C,UAAS,IAuEL,OAAO,EAAP,KAAW0N,GAAQ,CAAEvsB,IAAK,WAAM,OAnElC,SAACgF,EAAgCunB,EAA2B/N,EAAkBiO,GAC5E,IAAMC,EAAalO,EAAO,GAAGnf,KAAKgW,QAClC,GAAIoX,GAAQC,EAAWlvB,QAAUivB,GAAS,EAAIC,EAAWlvB,OACvD,MAAM,IAAIJ,MAAM,gEAEdqvB,EAAO,IACTA,EAAOC,EAAWlvB,OAASivB,GAK7B,IADA,IAAMf,EAAcgB,EAAWrX,MAAM,GAC5BhY,EAAI,EAAGA,EAAImhB,EAAOhhB,OAAQH,IAEjC,IADA,IAAMsvB,EAAanO,EAAOnhB,GAAGgC,KAAKgW,QACzBuX,EAAY,EAAGA,EAAYF,EAAWlvB,OAAQovB,IAErD,GAAIA,IAAcH,EAChBf,EAAYe,IAASE,EAAWC,QAG7B,GAAIF,EAAWE,KAAeD,EAAWC,GAC5C,MAAM,IAAIxvB,MAAM,oCAKtB,IAAMwU,EAAO8Z,EAAYluB,OAEnBuwB,EAAmB,IAAIluB,MAAc2e,EAAOhhB,QAC9CwwB,EAAc,EAClB,IAAS3wB,EAAI,EAAGA,EAAI0wB,EAAiBvwB,SAAUH,EAC7C2wB,GAAexP,EAAOnhB,GAAGgC,KAAKotB,GAC9BsB,EAAiB1wB,GAAK2wB,EAGxB,IAAIC,EAGFA,EADEzP,EAAOhhB,OAAS,EACsB0wB,EAA4CH,GAE5CI,EAA4CJ,GAGtF,IAAMK,EAAoCC,EAAqC7P,EAAOhhB,OAAQoU,GACxF0c,EAA0CC,EAA2CR,GACrF5S,EAAe,oBACjBiT,EAAiC,qBACjCE,EAAuC,qBACvCL,EAAqC,+CACXrc,EAAI,kFAC2B6a,EAAI,yEAGjDA,EAAI,uBAAeA,EAAI,oKAKvC,OAAO,EAAP,KACKF,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3EpG,aAAY,GAEhB,CAKkCqT,CAAgCxpB,EAASunB,EAAU/N,EAAQ7U,EAAW8iB,KAAtE,GAClC,EAEEyB,EAA8C,SAACH,GACnD,IAAMU,EAAaV,EAAiBrnB,KAAI,SAACvG,EAAM9C,GAAM,yBAAY8C,EAAI,qBAAa9C,EAAC,OAA9B,IAErD,MAAO,6DACDoxB,EAAWpnB,KAAK,IAAG,UAE3B,EAGM8mB,EAA8C,SAACJ,GACjD,OAAAG,EAA4CH,EAA5C,EAEEM,EAAuC,SAACK,EAAyBC,GAErE,IADA,IAAMC,EAAsB,CAAC,0EAAmED,EAAU,SACjGtxB,EAAI,EAAGA,EAAIqxB,IAAmBrxB,EAC3B,IAANA,EACFuxB,EAAUnxB,KACN,KACA,8BAAuBJ,EAAC,wBAAgBA,EAAC,iBACpCA,IAAMqxB,EAAkB,EACjCE,EAAUnxB,KACN,KACA,0BAAmBJ,EAAC,iBAExBuxB,EAAUnxB,KACN,KACA,mCAA4BJ,EAAC,wBAAgBA,EAAC,iBAMtD,OAHAuxB,EAAUnxB,KACN,OAEGmxB,EAAUvnB,KAAK,KACxB,EAEMknB,EAA6C,SAACR,GAElD,IADA,IAAMa,EAAsB,CAAC,sDACpBvxB,EAAI,EAAGA,EAAI0wB,EAAiBvwB,SAAUH,EACnC,IAANA,EACFuxB,EAAUnxB,KACN,KACA,uBAAgBJ,EAAC,sBAAc0wB,EAAiB1wB,GAAE,QAC7CA,IAAM0wB,EAAiBvwB,OAAS,EACzCoxB,EAAUnxB,KACN,KACA,wBAAiBswB,EAAiB1wB,GAAE,QAExCuxB,EAAUnxB,KACN,KACA,4BAAqBJ,EAAC,sBAAc0wB,EAAiB1wB,GAAE,QAO/D,OAJAuxB,EAAUnxB,KACN,OAGGmxB,EAAUvnB,KAAK,KACxB,EAEa,EAAA+c,sBAAkE,SAACvM,GAC5E,WAAAxO,6BAA4B,CAACojB,KAAM5U,EAAKlO,WAAWW,OAAO,SAA1D,EAEJ,IAAMqf,EAAiB,SAACnL,G,QACtB,IAAKA,GAAUA,EAAOhhB,OAAS,EAC7B,MAAM,IAAIJ,MAAM,kBAGlB,IAAMyxB,EAAYrQ,EAAO,GAAGrf,KACtB2vB,EAAsBtQ,EAAO,GAAGnf,KAAK7B,OAG3C,GAAkB,WAAdqxB,EACF,MAAM,IAAIzxB,MAAM,sC,IAGlB,IAAoB,QAAAohB,GAAM,8BAAE,CAAvB,IAAM4C,EAAK,QAEd,GAAIA,EAAMjiB,OAAS0vB,EACjB,MAAM,IAAIzxB,MAAM,oCAIlB,GAAIgkB,EAAM/hB,KAAK7B,SAAWsxB,EACxB,MAAM,IAAI1xB,MAAM,2C,mGAGtB,C,kXC/LA,cAEA,UAEA,UAEA,UACA,UAyEa,EAAA2xB,2CACT,SAACrF,EAAyClL,EAA2B7U,GAE/D,IA1EwCqlB,EAAkBnQ,EA0EpD0N,GA1EkCyC,EA0EkBxQ,EAAOhhB,OAAS,EA1EhBqhB,EA0EmBlV,EAAWigB,SA1ES,CACzGhtB,KAAM,cACN+I,WAAYqpB,EAAU,CAAC,IAAK,IAAK,QAAU,CAAC,IAAK,KACjDvQ,WAAYuQ,EAAU,CAAC,EAAAvP,YAAY8B,SAAU,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAY8B,UACzD,CAAC,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAY8B,UACzD1C,UAAS,IAsED,OAAO,EAAP,KACK0N,GAAQ,CACXvsB,IAAK,WAAM,OApEnB,SAAC0pB,EAAyClL,EAA2B+N,EACpE5iB,GACC,IACMslB,EADUzQ,EAAOhhB,OAAS,EACF,oCAAsC,GAC9D0xB,EAAS1Q,EAAO,GAAGnf,KAAKgW,QACxB8Z,EAAS3Q,EAAO,GAAGnf,KAAKgW,QACxB+Z,EAAyBD,EAAO,GAAKxlB,EAAW0lB,MACtD,EAAA/gB,OAAOE,QACH,cACA,kBAAW7E,EAAW2lB,QAAO,uBAAe3lB,EAAW4lB,UAAS,mBAAW5lB,EAAW0lB,MAAK,yBACvF1lB,EAAW6lB,YAAW,kBAAU7lB,EAAW8lB,KAAI,qBAAa9lB,EAAWkI,UAC/E,IAAM6Z,GACF,IAAAgE,sBAAqBR,EAAQC,EAAQxlB,EAAW4lB,UAAW5lB,EAAW8lB,KAAM9lB,EAAWkI,SACrFzB,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ7K,QAAQuR,UAAUkC,SAC1D,GAAwC,IAAAqf,sBAAqBhmB,GAA5DimB,EAAkB,qBAAEC,EAAe,kBAEpC1U,EAAe,0CACKxR,EAAWkI,QAAQ,GAAE,aAAKlI,EAAWkI,QAAQ,GAAE,0CAClDlI,EAAW8lB,KAAK,GAAE,aAAK9lB,EAAW8lB,KAAK,GAAE,iBAClEG,EAAkB,2NAMgBR,EAAsB,kFAGhBD,EAAO,GAAE,mEACdA,EAAO,GAAE,iEACRA,EAAO,GAAE,yEACDxlB,EAAW4lB,UAAU,GAAE,sDAE/BL,EAAO,GAAE,wFAITC,EAAO,GAAE,wEACDxlB,EAAW4lB,UAAU,GAAE,oDAC/BL,EAAO,GAAE,oQAU3CD,EAAW,iBACXY,EAAe,iBACfzf,EAAKI,OAAM,sCAGX,OAAO,EAAP,KACK+b,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3EpG,aAAY,EACZC,SAAS,GAEb,CAQmB0U,CAAqCpG,EAAkBlL,EAAQ+N,EAAU5iB,EAAzE,GAEf,C,mICrFR,cACA,UACA,UAEa,EAAAomB,sBACT,SAACrG,EAAyClL,EAA2B7U,GACnE,IAAMqmB,EAASxR,EAAO,GAAGnf,KACnB4wB,EAASzR,EAAO,GAAGnf,KACnBqsB,GACF,IAAAgE,sBAAqBM,EAAQC,EAAQtmB,EAAW4lB,UAAW5lB,EAAW8lB,KAAM9lB,EAAWkI,SACrFqe,EAAYxG,EAAiBhI,cAAclD,EAAO,GAAI,CAACwR,EAAO,GAAIA,EAAO,GAAKA,EAAO,KACrFG,EAAYzG,EAAiBhI,cAAclD,EAAO,GAAI,CAACyR,EAAO,GAAIA,EAAO,KAEzEG,EAAe5R,EAAOhhB,OAAS,EAAI,CAAC2yB,EAAWD,EAAW1R,EAAO,IAAM,CAAC2R,EAAWD,GACnFG,EAAe3G,EAAiB7jB,KAClC,IAAAyqB,qCAAoC5G,EAAkB0G,EAAczmB,GAAaymB,GACrF,OAAO1G,EAAiBhI,cAAc2O,EAAc3E,EACtD,EAES,EAAA6E,aACT,SAAC7G,EAAyClL,EAA2B7U,GACnE,IAAMqmB,EAASxR,EAAO,GAAGnf,KACnB4wB,EAASzR,EAAO,GAAGnf,KACnBqsB,GACF,IAAAgE,sBAAqBM,EAAQC,EAAQtmB,EAAW4lB,UAAW5lB,EAAW8lB,KAAM9lB,EAAWkI,SAGrF2e,EAAe9G,EAAiB7jB,KAClC,IAAA4qB,qCAAoC/G,EAAkBlL,EAAO,GAAIA,EAAO,GAAIkN,EAAa/hB,GACzF,CAAC6U,EAAO,KAGNkS,EAAiBhH,EAAiBhI,cAAclD,EAAO,GAAI,CAACyR,EAAO,GAAIA,EAAO,GAAKA,EAAO,GAAKA,EAAO,KAGtGG,EACiB,IAAlB5R,EAAOhhB,OAAgB,CAACkzB,EAAgBF,EAAchS,EAAO,IAAM,CAACkS,EAAgBF,GACnFH,EAAe3G,EAAiB7jB,KAClC,IAAAyqB,qCAAoC5G,EAAkB0G,EAAczmB,GAAaymB,GAIrF,OADuB1G,EAAiBhI,cAAc2O,EAAc3E,EAEtE,C,63BC9CJ,cAKA,UAEA,UAGA,UAEMiF,EACF,SAACC,EAAepvB,EAAgBqvB,EAAaC,EAAgBC,EAAkBC,GAC3E,OAACJ,EAAQ,GAAKpvB,EAASqvB,GAAOC,EAAS,GAAKC,EAAW,EAAIC,CAA3D,EAEFC,EAAoB,SAACC,EAAkB5B,EAAiBG,EAAgB0B,EAAcC,GAC1F,IAAMC,EAAW3oB,KAAKyc,MAAM+L,EAAW,GACvB,eAAZ5B,GACFG,EAAK0B,GAAQE,EACb5B,EAAK2B,GAAQF,EAAWG,GACH,eAAZ/B,IACTG,EAAK0B,GAAQD,EAAWG,EACxB5B,EAAK2B,GAAQC,EAEjB,EAwBa,EAAA9M,cACT,SAACmF,EAAoClL,EAAkB7U,GAErD,OADAggB,EAAenL,EAAQ7U,GAChB2nB,EAAgB5H,EAAkBlL,EAAQ7U,EACnD,EAEJ,IAAM2nB,EACF,SAAC5H,EAAyClL,EAAkB7U,GAC1D,IAAM4nB,EAAqBC,EAAmC7nB,EAAY6U,GAC1E,MAAO,CAACiT,EAAwB/H,EAAkBlL,EAAQ+S,GAC5D,EAgFEE,EACF,SAAC/H,EAAyClL,EAA2B7U,GAI/D,OAFe+f,EAAiB7jB,IAbtC,SAAC6jB,EAAyClL,EAA2B7U,GAE/D,IAtEkCqlB,EAAkBnQ,EAsE9C0N,GAtE4ByC,EAsEkBxQ,EAAOhhB,OAAS,EAtEhBqhB,EAsEmBlV,EAAWigB,SAtER,CAClFhtB,KAAM,gBACN+I,WAAYqpB,EAAU,CAAC,IAAK,IAAK,KAAO,CAAC,IAAK,KAC9CvQ,WAAYuQ,EAAU,CAAC,EAAAvP,YAAY8B,SAAU,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAY8B,UACzD,CAAC,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAY8B,UACzD1C,UAAS,IAkED,OAAO,EAAP,KACK0N,GAAQ,CACXvsB,IAAK,WAAM,OAhEnB,SAAC0pB,EAAyClL,EAA2B+N,EACpE5iB,GACC,IACM+nB,EADUlT,EAAOhhB,OAAS,EACJ,uBAAyB,MAC/C0xB,EAAS1Q,EAAO,GAAGnf,KACnB8vB,EAAS3Q,EAAO,GAAGnf,KACnB+vB,EAAyBD,EAAO,GAChCwC,EAAwBxC,EAAO,GAAKxlB,EAAW0lB,MAC/C3D,EAAc,EAAH,CAAIlN,EAAO,GAAGnf,KAAK,GAAImf,EAAO,GAAGnf,KAAK,GAAKsK,EAAW0lB,OAAK,EAAK1lB,EAAW+hB,cAAW,GACjGtb,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ7K,QAAQuR,UAAUkC,SAC1D,GAAwC,IAAAqf,sBAAqBhmB,GAA5DimB,EAAkB,qBAAEC,EAAe,kBAEpC1U,EAAe,0CACKxR,EAAWkI,QAAQ,GAAE,aAAKlI,EAAWkI,QAAQ,GAAE,0CAClDlI,EAAW8lB,KAAK,GAAE,aAAK9lB,EAAW8lB,KAAK,GAAE,iBAClEG,EAAkB,+MAQgBR,EAAsB,gEACRA,EAAsB,kCAEtDsC,EAAS,kEACyBC,EAAqB,wEACpCA,EAAqB,kEACxBxC,EAAO,GAAE,6DACPA,EAAO,GAAE,8DACRxlB,EAAW4lB,UAAU,GAAE,qBAAa5lB,EAAW4lB,UAAU,GAAE,8LAKxDL,EAAO,GAAE,wDACTA,EAAO,GAAE,+PAS7CW,EAAe,iBACfzf,EAAKI,OAAM,sCAGX,OAAO,EAAP,KACK+b,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3EpG,aAAY,EACZC,SAAS,GAEb,CAQmBwW,CAAuClI,EAAkBlL,EAAQ+N,EAAU5iB,EAA3E,GAEf,CAOMkoB,CAA6CnI,EAAkBlL,EAAQ7U,GAAa6U,EAE1F,EAEFgT,EAAqC,SAAoC7nB,EAAe6U,GAC5F,IAAMgR,EAAc7lB,EAAW6lB,YAAYna,QAE3C,GAAsC,IAAlC1L,EAAW6lB,YAAYhyB,OACzB,IAAK,IAAIH,EAAI,EAAGA,EAAImhB,EAAO,GAAGnf,KAAK7B,SAAUH,EAC3CmyB,EAAY/xB,KAAK+gB,EAAO,GAAGnf,KAAKhC,IAIpC,IAAMoyB,EAAO9lB,EAAW8lB,KAAKpa,QACvBqW,EAAc/hB,EAAW+hB,YAAYrW,SAjIzC,SAACqX,EAA+B8C,EAAgCD,EAA8BD,EAC7FG,EAAgB5d,EAA4BigB,EAAkCpG,GAG7E,IAFA,IAAMqG,EAAcrF,EAAWlvB,OAAS,EAClCw0B,EAAqC,IAAvBtG,EAAYluB,OACvBH,EAAI,EAAGA,EAAI00B,IAAe10B,EAAG,CACpC,IAAM2zB,EAAUgB,EAActF,EAAWrvB,EAAI,GAAKwU,EAAQxU,GAAKquB,EAAYruB,GACrE6zB,EAAWP,EAAgBjE,EAAWrvB,EAAI,GAAIwU,EAAQxU,GAAIoyB,EAAKpyB,GAAImyB,EAAYnyB,GAAIkyB,EAAUlyB,GAAI2zB,GACvGC,EAAkBC,EAAU5B,EAASG,EAAMpyB,EAAGA,EAAI00B,GAC9CC,GACFtG,EAAYjuB,KACRoU,EAAQxU,IAAMqvB,EAAWrvB,EAAI,GAAK,GAAKy0B,EAAcz0B,IAAMmyB,EAAYnyB,GAAK,GAAKkyB,EAAUlyB,GAAK,EAChGoyB,EAAKpyB,GAAKoyB,EAAKpyB,EAAI00B,G,CAG7B,CAuHFE,CAHmBzT,EAAO,GAAGnf,KAIbmwB,EAAa7lB,EAAW4lB,UAAW5lB,EAAW2lB,QAASG,EAAM9lB,EAAWkI,QACpFlI,EAAWmoB,cAAepG,GAG9B,IAAMwG,EAAmB1sB,OAAO0D,OAAO,CAAC,EAAGS,GAE3C,OADAnE,OAAO0D,OAAOgpB,EAAe,CAAC1C,YAAW,EAAEC,KAAI,EAAE/D,YAAW,EAAE9B,SAAUjgB,EAAWigB,WAC5EsI,CACT,EAEa,EAAA1N,6BACT,SAAC3M,GACC,IAAMlO,EAAakO,EAAKlO,WAClBwoB,GAAuB,IAAAC,mCAAkCzoB,GAEzD2lB,EAAU3lB,EAAWY,UAAU,WAAY,UAC3CglB,EAAY5lB,EAAWe,QAAQ,YAAa,CAAC,EAAG,IAChD2kB,EAAQ1lB,EAAWW,OAAO,QAAS,GACnCklB,EAAc7lB,EAAWe,QAAQ,eAAgB,IACjDonB,EAAgBnoB,EAAWe,QAAQ,iBAAkB,CAAC,EAAG,IACzDghB,EAAc/hB,EAAWe,QAAQ,eAAgB,IACjD+kB,EAAO9lB,EAAWe,QAAQ,OAAQ,CAAC,EAAG,EAAG,EAAG,IAC5CmH,EAAUlI,EAAWe,QAAQ,UAAW,CAAC,EAAG,IAElD,OAAO,IAAArB,6BAA2B,GAC7BimB,QAAO,EAAEC,UAAS,EAAEF,MAAK,EAAEG,YAAW,EAAEsC,cAAa,EAAEpG,YAAW,EAAE+D,KAAI,EAAE5d,QAAO,GAAKsgB,GAC7F,EAEJ,IAAMxI,EAAiB,SAACnL,EAAkB7U,GAGxC,IAAK6U,GAA6B,IAAlBA,EAAOhhB,QAAkC,IAAlBghB,EAAOhhB,OAC5C,MAAM,IAAIJ,MAAM,+BAIlB,GAA8B,IAA1BohB,EAAO,GAAGnf,KAAK7B,QAA0C,IAA1BghB,EAAO,GAAGnf,KAAK7B,OAChD,MAAM,IAAIJ,MAAM,6CAMlB,GAFoBohB,EAAO,GAAGnf,KAAK,KACXmf,EAAO,GAAGnf,KAAK,GAErC,MAAM,IAAIjC,MAAM,qDAGlB,IAAMi1B,EAAc7T,EAAO,GAAGnf,KAAK,GAAKsK,EAAW0lB,MAGnD,GAAsB,IAAlB7Q,EAAOhhB,SAA2C,IAA1BghB,EAAO,GAAGnf,KAAK7B,QAAgBghB,EAAO,GAAGnf,KAAK,KAAOgzB,GAC/E,MAAM,IAAIj1B,MAAM,gBAGlB,IAAM20B,EAAcvT,EAAO,GAAGnf,KAAK7B,OAAS,EAE5C,GAAImM,EAAW4lB,UAAU/xB,SAAWu0B,EAClC,MAAM,IAAI30B,MAAM,8BAAuB20B,EAAW,MAIpD,GAAIpoB,EAAWkI,QAAQrU,SAAWu0B,EAChC,MAAM,IAAI30B,MAAM,4BAAqB20B,EAAW,MAIlD,GAAIpoB,EAAW8lB,KAAKjyB,SAAyB,EAAdu0B,EAC7B,MAAM,IAAI30B,MAAM,yBAAgC,EAAd20B,EAAe,MAInD,GAAIpoB,EAAWmoB,cAAct0B,SAAWu0B,EACtC,MAAM,IAAI30B,MAAM,mCAA4B20B,EAAW,MAKzD,GAAsC,IAAlCpoB,EAAW6lB,YAAYhyB,QAAgBmM,EAAW6lB,YAAYhyB,SAAWghB,EAAO,GAAGnf,KAAK7B,OAAS,EACnG,MAAM,IAAIJ,MAAM,wBAIlB,GAAsC,IAAlCuM,EAAW+hB,YAAYluB,QAAgBmM,EAAW+hB,YAAYluB,SAAWghB,EAAO,GAAGnf,KAAK7B,OAAS,EACnG,MAAM,IAAIJ,MAAM,wBAIlB,GAAuB,YAAnBohB,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,KAC5C,MAAM,IAAI/B,MAAM,mDAGlB,GAAsB,IAAlBohB,EAAOhhB,QAAmC,YAAnBghB,EAAO,GAAGrf,KACnC,MAAM,IAAI/B,MAAM,mDAEpB,C,k4BC/PA,cAKA,UAGA,UACA,UACA,UACA,UACA,UACA,UAGa,EAAAsyB,qBACT,SAAChD,EAA+B8C,EAAgCD,EAC/D+C,EAA+BzgB,G,MACxB0gB,EAAY7F,EAAW,GACvB8F,EAAoB9F,EAAWrX,MAAM,GACrC0c,EAAcS,EAAkBh1B,OAChCi1B,EAAcjD,EAAY,GAE1BkD,EADqBlD,EAAYna,MAAM,GACC3O,KAAI,SAAChB,EAAGrI,GAAM,OAAAqI,GAAKA,EAAI,IAAM6pB,EAAUlyB,GAAK,EAA9B,IAEtDs1B,EAD2BH,EAAkB9rB,KAAI,SAAChB,EAAGrI,GAAM,OAAAqI,EAAI4sB,EAAWj1B,GAAKi1B,EAAWj1B,EAAI00B,EAAnC,IAEpCrrB,KAAI,SAAChB,EAAGrI,GAAM,OAAAqL,KAAKyc,OAAOzf,EAAIgtB,EAAmBr1B,GAAKwU,EAAQxU,IAAMwU,EAAQxU,GAA9D,IAE3C,OADoB,GAACk1B,EAAWE,IAAatO,OAAM,eAAIwO,IAAkB,GAE3E,EAWS,EAAAtO,KACT,SAACqF,EAAoClL,EAAkB7U,GAErD,OADAggB,EAAenL,EAAQ7U,GAChBipB,EAAOlJ,EAAkBlL,EAAQ7U,EAC1C,EAEJ,IAAMipB,EACF,SAAClJ,EAAyClL,EAAkB7U,GAC1D,IAAM4nB,EAAqBsB,EAA0BlpB,EAAY6U,GAC3DsU,EAAWpJ,EAAiBhiB,QAAQyG,KACpC4kB,EAAoD,IAAtCxB,EAAmB/B,YAAY,IAAkD,IAAtC+B,EAAmB/B,YAAY,GAC9F,OAAI+B,EAAmBlC,MAAQ,EAGtB,CAFQ3F,EAAiB7jB,KAC5B,IAAAkpB,4CAA2CrF,EAAkBlL,EAAQ+S,GAAqB/S,IAErFuU,GAAeD,EACjB,CAACE,EAAwBtJ,EAAkBlL,EAAQ+S,IACjDuB,GAAsC,IAA1BtU,EAAO,GAAGnf,KAAK7B,QAAsC,IAAtBghB,EAAO,GAAGnf,KAAK,KAAa0zB,EACzE,EAAC,IAAAxC,cAAa7G,EAAkBlL,EAAQ+S,IAExC,CAAC0B,EAAevJ,EAAkBlL,EAAQ+S,GAErD,EAEEyB,EACF,SAACtJ,EAAyClL,EAA2B7U,GACnE,IAAMqmB,EAASxR,EAAO,GAAGnf,KACnB4wB,EAASzR,EAAO,GAAGnf,KACnBqsB,GACF,IAAAgE,sBAAqBM,EAAQC,EAAQtmB,EAAW4lB,UAAW5lB,EAAW8lB,KAAM9lB,EAAWkI,SACrFqe,EAAYxG,EAAiBvI,gBAAgB3C,EAAO,GAAI,CAACwR,EAAO,GAAIA,EAAO,GAAKA,EAAO,KACvFG,EAAYzG,EAAiBvI,gBAAgB3C,EAAO,GAAI,CAACyR,EAAO,GAAIA,EAAO,KAE3EG,EAAe5R,EAAOhhB,OAAS,EAAI,CAAC2yB,EAAWD,EAAW1R,EAAO,IAAM,CAAC2R,EAAWD,GACnFG,EAAe3G,EAAiB7jB,KAAI,IAAAqtB,+BAA8B9C,EAAczmB,GAAaymB,GACnG,OAAO1G,EAAiBvI,gBAAgBkP,EAAc3E,EACxD,EAEEuH,EACF,SAACvJ,EAAyClL,EAA2B7U,GACnE,IAAMqmB,EAASxR,EAAO,GAAGnf,KACnB4wB,EAASzR,EAAO,GAAGnf,KACnBqsB,GACF,IAAAgE,sBAAqBM,EAAQC,EAAQtmB,EAAW4lB,UAAW5lB,EAAW8lB,KAAM9lB,EAAWkI,SACrFshB,EAAUzJ,EAAiB7jB,KAC7B,IAAAutB,+BAA8B1J,EAAkBlL,EAAO,GAAIA,EAAO,GAAIkN,EAAa/hB,GAAa,CAAC6U,EAAO,KAEtG6U,EAAqC,IAAlB7U,EAAOhhB,OAAe,CAAC21B,EAAS3U,EAAO,GAAIA,EAAO,IAAM,CAAC2U,EAAS3U,EAAO,IAGlG,OAFekL,EAAiB7jB,KAC5B,IAAAytB,mCAAkC5J,EAAkBlL,EAAQkN,EAAa/hB,GAAa0pB,EAE5F,EAEER,EAA4B,SAA2BlpB,EAAe6U,GAC1E,IAAMgR,EAAc7lB,EAAW6lB,YAAYna,QAE3C,GAAsC,IAAlC1L,EAAW6lB,YAAYhyB,OACzB,IAAK,IAAIH,EAAI,EAAGA,EAAImhB,EAAO,GAAGnf,KAAK7B,SAAUH,EAC3CmyB,EAAY/xB,KAAK+gB,EAAO,GAAGnf,KAAKhC,IAGpC,IAAMoyB,EAAO9lB,EAAW8lB,KAAKpa,QAC7B,EAAAke,aAAaC,yBACThV,EAAO,GAAGnf,KAAMsK,EAAWkI,QAASlI,EAAW4lB,UAAWC,EAAaC,EAAM9lB,EAAW2lB,SAG5F,IAAM4C,EAAmB1sB,OAAO0D,OAAO,CAAC,EAAGS,GAE3C,OADAnE,OAAO0D,OAAOgpB,EAAe,CAAC1C,YAAW,EAAEC,KAAI,EAAE7F,SAAUjgB,EAAWigB,WAC/DsI,CACT,EAEa,EAAA5N,oBAA8D,SAACzM,GAC1E,IAAMlO,EAAakO,EAAKlO,WAClBwoB,GAAuB,IAAAC,mCAAkCzoB,GAEzD2lB,EAAU3lB,EAAWY,UAAU,WAAY,UAC3CglB,EAAY5lB,EAAWe,QAAQ,YAAa,CAAC,EAAG,IAChD2kB,EAAQ1lB,EAAWW,OAAO,QAAS,GACnCklB,EAAc7lB,EAAWe,QAAQ,eAAgB,IACjD+kB,EAAO9lB,EAAWe,QAAQ,OAAQ,CAAC,EAAG,EAAG,EAAG,IAC5CmH,EAAUlI,EAAWe,QAAQ,UAAW,CAAC,EAAG,IAElD,OAAO,IAAArB,6BAA2B,GAAEimB,QAAO,EAAEC,UAAS,EAAEF,MAAK,EAAEG,YAAW,EAAEC,KAAI,EAAE5d,QAAO,GAAKsgB,GAChG,EAEA,IAAMxI,EAAiB,SAACnL,EAAkB7U,GAGxC,IAAK6U,GAA6B,IAAlBA,EAAOhhB,QAAkC,IAAlBghB,EAAOhhB,OAC5C,MAAM,IAAIJ,MAAM,+BAIlB,GAA8B,IAA1BohB,EAAO,GAAGnf,KAAK7B,QAA0C,IAA1BghB,EAAO,GAAGnf,KAAK7B,OAChD,MAAM,IAAIJ,MAAM,6CAMlB,GAFoBohB,EAAO,GAAGnf,KAAK,KACXmf,EAAO,GAAGnf,KAAK,GAAKsK,EAAW0lB,MAErD,MAAM,IAAIjyB,MAAM,qDAIlB,GAAsB,IAAlBohB,EAAOhhB,SAA2C,IAA1BghB,EAAO,GAAGnf,KAAK7B,QAAgBghB,EAAO,GAAGnf,KAAK,KAAOmf,EAAO,GAAGnf,KAAK,IAC9F,MAAM,IAAIjC,MAAM,gBAGlB,IAAM20B,EAAcvT,EAAO,GAAGnf,KAAK7B,OAAS,EAE5C,GAAImM,EAAW4lB,UAAU/xB,SAAWu0B,EAClC,MAAM,IAAI30B,MAAM,8BAAuB20B,EAAW,MAIpD,GAAIpoB,EAAWkI,QAAQrU,SAAWu0B,EAChC,MAAM,IAAI30B,MAAM,4BAAqB20B,EAAW,MAIlD,GAAIpoB,EAAW8lB,KAAKjyB,SAAyB,EAAdu0B,EAC7B,MAAM,IAAI30B,MAAM,yBAAgC,EAAd20B,EAAe,MAKnD,GAAsC,IAAlCpoB,EAAW6lB,YAAYhyB,QAAgBmM,EAAW6lB,YAAYhyB,SAAWghB,EAAO,GAAGnf,KAAK7B,OAAS,EACnG,MAAM,IAAIJ,MAAM,wBAIlB,GAAuB,YAAnBohB,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,KAC5C,MAAM,IAAI/B,MAAM,0CAGlB,GAAsB,IAAlBohB,EAAOhhB,QAAmC,YAAnBghB,EAAO,GAAGrf,KACnC,MAAM,IAAI/B,MAAM,0CAEpB,C,0bC/KA,cAOa,EAAAunB,aACT,SAAC+E,EAAyClL,EAAkB7U,GAC1DggB,EAAenL,GACf,IAAMiV,EAAY9pB,EAAW8pB,UACvBC,EAAeD,EAAYA,EAC3BE,EAAoC,QAApBhqB,EAAWiqB,KAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACjFC,EAAwC,QAApBlqB,EAAWiqB,KACjC,CACEpV,EAAO,GAAGnf,KAAK,GAAIo0B,EAAWA,EAAWjV,EAAO,GAAGnf,KAAK,GAAKq0B,EAAclV,EAAO,GAAGnf,KAAK,GAC1Fmf,EAAO,GAAGnf,KAAK,IAEjB,CACEmf,EAAO,GAAGnf,KAAK,GAAImf,EAAO,GAAGnf,KAAK,GAAKq0B,EAAcD,EAAWA,EAAWjV,EAAO,GAAGnf,KAAK,GAC1Fmf,EAAO,GAAGnf,KAAK,IASfy0B,EAAsBpK,EAAiBvI,gBAAgB3C,EAAO,GAAIqV,GAGlEE,EAA2C,CAACC,KAAML,EAAe/J,SAAU,UAAG+J,IAC7EM,EAAD,GAAoB,IAAA3c,WAAUoS,EAAkB,CAACoK,GAAsBC,GAAoB,GAA3E,GAGhBG,EAAqB,CACzB1V,EAAO,GAAGnf,KAAK,GAAImf,EAAO,GAAGnf,KAAK,GAAKq0B,EAAclV,EAAO,GAAGnf,KAAK,GAAKo0B,EACzEjV,EAAO,GAAGnf,KAAK,GAAKo0B,GAGtB,MAAO,CADQ/J,EAAiBvI,gBAAgB8S,EAAiBC,GAEnE,EAES,EAAAtP,4BACT,SAAC/M,GAEC,IAAM4b,EAAY5b,EAAKlO,WAAWW,OAAO,aACzC,GAAImpB,EAAY,EACd,MAAM,IAAIr2B,MAAM,4CAAqCq2B,EAAS,sBAEhE,IAAMG,EAAO/b,EAAKlO,WAAWY,UAAU,OAAQ,OAC/C,GAAa,QAATqpB,GAA2B,QAATA,EACpB,MAAM,IAAIx2B,MAAM,6BAAsBw2B,EAAI,sBAE5C,MAAO,CAACA,KAAI,EAAEH,UAAS,EACzB,EAEJ,IAAM9J,EAAiB,SAACnL,GACtB,GAAsB,IAAlBA,EAAOhhB,OACT,MAAM,IAAIJ,MAAM,gDAAyCohB,EAAOhhB,SAKlE,GAAuB,WAAnBghB,EAAO,GAAGrf,MAA+C,IAA1Bqf,EAAO,GAAGnf,KAAK7B,OAChD,MAAM,IAAIP,UAAU,oDAExB,C,spBCxEA,cACA,UAEA,UAEA,UACA,UA2Da,EAAAq2B,kCACT,SAAC5J,EAAyClL,EAA2BkN,EACpE/hB,GACC,IAAM4iB,EA5D4B,SAACyC,EAAkBrlB,GAA6C,OACtG/M,KAAM,iBACN+I,WAAYqpB,EAAU,CAAC,SAAU,IAAK,KAAO,CAAC,SAAU,KACxDvQ,WAAYuQ,EAAU,CAAC,EAAAvP,YAAY8B,SAAU,EAAA9B,YAAYM,oBAAqB,EAAAN,YAAY8B,UACpE,CAAC,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAYM,qBACzD6J,SAAUjgB,EAAWwqB,mBALiF,CA4DjFC,CAAgC5V,EAAOhhB,OAAS,EAAGmM,GACpE,OAAO,EAAP,KACK4iB,GAAQ,CACXvsB,IAAK,WAAM,OAtDf,SAAC0pB,EAAyC6C,EAA2B/N,EACpEkN,EAAuB/hB,GACtB,IAAMqmB,EAASxR,EAAO,GAAGnf,KACnB4wB,EAASzR,EAAO,GAAGnf,KACnB2gB,EAAsB,CAACiQ,EAAO,GAAIvnB,KAAKE,KAAMonB,EAAO,GAAKC,EAAO,GAAKA,EAAO,GAAM,IAClFoE,GAAc,IAAAC,qBAAoBtE,EAAQC,EAAQvE,GAClD,IACFhC,EAAiBvL,+BAA+B6B,EAAqB,EAAAP,YAAYM,qBAAoB,GADlGwU,EAAM,KAAEC,EAAO,KAGhBC,EAAgB,EAAA1gB,UAAU0N,eAAe4S,GACzC,IACF3K,EAAiBvL,+BAA+BkW,EAAa,EAAA5U,YAAYM,qBAAoB,GAD1F2U,EAAW,KAAEC,EAAY,KAE1B/iB,EAAO8Z,EAAYluB,OAEnBo3B,EAAapW,EAAOhhB,OAAS,EAAK,MAAQ,QAC1Cq3B,EAAYnsB,KAAKE,KAAKonB,EAAO,GAAKC,EAAO,GAAKA,EAAO,GAAK,GAC1D,GAAwC,IAAAN,sBAAqBhmB,GAA5DimB,EAAkB,qBAAEC,EAAe,kBACpCzf,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ7K,QAAQuR,UAAUkC,SAC1D6K,EAAe,YACzByU,EAAkB,uCACQhe,EAAI,wLAOG6iB,EAAc,GAAE,0BAAkBA,EAAc,GAAE,0BAC3EA,EAAc,GAAE,gDACUzU,EAAoB,GAAE,8BACxC4U,EAAS,oCACHC,EAAS,0EACsBH,EAAW,aAAKC,EAAY,oEAC5BJ,EAAM,aAAKC,EAAO,gCACtDpkB,EAAK8B,UAAS,mCAA2B9B,EAAK8B,UAAS,iFAItE2d,EAAe,wBAGb,OAAO,EAAP,KACKtD,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3EpG,aAAY,GAEhB,CAQe2Z,CAA4BpL,EAAkB6C,EAAU/N,EAAQkN,EAAa/hB,EAA7E,GAEf,C,+HCvEJ,cAGa,EAAAsb,QACT,SAACyE,EAAyClL,EAAkBiO,GAC1D9C,EAAenL,EAAQiO,GAEvB,IAAMsI,EAAa,EAAAhhB,UAAUihB,aAAaxW,EAAO,GAAGnf,KAAMotB,GAC1D,MAAO,CAAC/C,EAAiBvI,gBAAgB3C,EAAO,GAAIuW,GACtD,EAES,EAAA7P,uBAAyD,SAACrN,GACnE,OAAAA,EAAKlO,WAAWW,OAAO,OAAQ,EAA/B,EAEJ,IAAMqf,EAAiB,SAACnL,EAAkBiO,GACxC,IAAKjO,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,6BAGlB,IAAM63B,EAAIzW,EAAO,GAAGnf,KAAK7B,OACzB,GAAU,IAANy3B,EACF,MAAM,IAAI73B,MAAM,mCAGlB,GAAIqvB,GAAQwI,GAAKxI,EAAOwI,EACtB,MAAM,IAAI73B,MAAM,gBAIlB,GAAuB,WAAnBohB,EAAO,GAAGrf,KACZ,MAAM,IAAI/B,MAAM,kCAEpB,C,wcClCA,cAGA,UASA,gCAAqCuM,GACnC,IAAIurB,EACJ,OAAQvrB,EAAWwrB,YACjB,IAAK,OACHD,GAAO,IAAAE,YACP,MACF,IAAK,UACHF,GAAO,IAAAG,eACP,MACF,IAAK,OACHH,GAAO,IAAAI,UAAS3rB,EAAW4rB,QAAU5rB,EAAW6rB,SAChD,MAEF,QACE,MAAO,CAAC5F,mBAAoB,GAAIC,gBAAiB,IAGrD,IAAM4F,EAAiBP,EAAKt4B,KAG5B,MAAO,CAACgzB,mBAFmBsF,EAAKhe,KAEJ2Y,gBADJ,kBAAW4F,EAAc,aAEnD,EAEa,EAAArD,kCAAoC,SAACzoB,GAChD,IAAMwrB,EAAaxrB,EAAWY,UAAU,aAAc,IAEtD,GAAmB,SAAf4qB,EAAuB,CACnB,QAAqBxrB,EAAWc,UAAU,oBAAqB,CAAC,EAAAirB,SAAU,EAAAC,WAAU,GAAnFJ,EAAO,KAAEC,EAAO,KACvB,MAAO,CAACL,WAAU,EAAEK,QAAO,EAAED,QAAO,EAAEpB,mBAAoB,UAAGgB,EAAU,YAAII,EAAO,YAAIC,G,CAExF,MAAO,CAACL,WAAU,EAAEhB,mBAAoBgB,EAC1C,C,sWC5CA,cAEA,UAEA,UAEA,UAMa,EAAA/P,OACT,SAACsE,EAAyClL,EAAkB7U,GAG1D,OAFAggB,EAAenL,EAAQ7U,EAAW8iB,MAE3B,CADQ/C,EAAiB7jB,IAAI+vB,EAA8BlM,EAAkBlL,EAAQ7U,GAAa6U,GAE3G,EAES,EAAA6G,sBAAkE,SAACxN,GAC5E,WAAAxO,6BAA4B,CAACojB,KAAM5U,EAAKlO,WAAWW,OAAO,OAAQ,IAAlE,EAEJ,IAAMurB,EAAwB,CAC5Bj5B,KAAM,SACN+I,WAAY,CAAC,IAAK,KAClB8Y,WAAY,CAAC,EAAAgB,YAAY8B,SAAU,EAAA9B,YAAY8B,WAmD3CqU,EACF,SAAC5wB,EAAgCwZ,EAAkB7U,GACjD,IAAM4iB,EAAW,EAAH,KAAOsJ,GAAqB,CAAEhX,UAAWlV,EAAWigB,WAClE,OAAO,EAAP,KAAW2C,GAAQ,CAAEvsB,IAAK,WAAM,OAlDlC,SAACgF,EAAgCunB,EAA2B/N,EAAkBiO,GAC5E,IAAMC,EAAalO,EAAO,GAAGnf,KAAKgW,QAC5BygB,EAAiBtX,EAAO,GAAGnf,KAAKgW,QAChCqW,EAAc,IAAI7rB,MAAM6sB,EAAWlvB,OAASs4B,EAAet4B,OAAS,GAE1EivB,EAAO,EAAA1Y,UAAUgiB,cAActJ,EAAMC,EAAWlvB,QAEhD,IADA,IAAMw4B,EAAyB,GACtB34B,EAAI,EAAGA,EAAIquB,EAAYluB,OAAQH,IAMlCA,EAAIovB,GACNf,EAAYruB,GAAKqvB,EAAWrvB,GAC5B24B,EAAav4B,KAAK,mBAAYJ,EAAC,yBAAiBA,EAAC,QAE7CA,EAAIovB,EAAOqJ,EAAet4B,QAC5BkuB,EAAYruB,GAAKy4B,EAAez4B,EAAIovB,GACpCuJ,EAAav4B,KAAK,uBAAgBJ,EAAIovB,EAAI,yBAAiBpvB,EAAC,SAE5DquB,EAAYruB,GAAKqvB,EAAWrvB,EAAIy4B,EAAet4B,OAAS,GACxDw4B,EAAav4B,KAAK,mBAAYJ,EAAIy4B,EAAet4B,OAAS,EAAC,yBAAiBH,EAAC,QAKnF,IAAM44B,EAAQvK,EAAYluB,QAAU,EAC9B04B,EAAQxJ,EAAWlvB,OACnB24B,EAASL,EAAet4B,QAAU,EAClC2d,EAAe,8CACS8a,EAAK,sCAClBC,EAAK,wCACDC,EAAM,qDAEvBH,EAAa3uB,KAAK,cAAa,wEAEtBolB,EAAI,+BAAuBC,EAAWD,GAAK,kDAGxD,OAAO,EAAP,KACKF,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3EpG,aAAY,GAEhB,CAKkCib,CAAwBpxB,EAASunB,EAAU/N,EAAQ7U,EAAW8iB,KAA9D,GAClC,EAEE9C,EAAiB,SAACnL,EAAkBiO,GACxC,IAAKjO,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,6BAElB,IAAMuxB,EAAanQ,EAAO,GAAGnf,KAAK7B,OAClC,GAAImxB,EAAa,EACf,MAAM,IAAIvxB,MAAM,wBAElB,GAAIqvB,GAAQkC,GAAclC,EAAOkC,EAAa,EAC5C,MAAM,IAAIvxB,MAAM,iBAElB,IAA8C,IAA1C,EAAAi5B,aAAa/4B,QAAQkhB,EAAO,GAAGrf,MACjC,MAAM,IAAI/B,MAAM,sBAElB,GAAuB,UAAnBohB,EAAO,GAAGrf,MAAuC,UAAnBqf,EAAO,GAAGrf,KAC1C,MAAM,IAAI/B,MAAM,qBAEpB,C,0qBCnGA,cAIA,UAEA,UAUa,EAAAkoB,KACT,SAACoE,EAAyClL,EAAkB7U,GAG1D,OAFAggB,EAAenL,EAAQ7U,GAEhB,CADQ+f,EAAiB7jB,IAAIywB,EAA4B9X,EAAQ7U,GAAa6U,GAEvF,EAEJ,IAAM+X,EAAsB,SAAC1e,EAAkB2e,GAC7C,IAAMC,EAAiD,IAAxC5e,EAAKlO,WAAWW,OAAO,SAAU,GAC1CosB,EAAiD,IAAxC7e,EAAKlO,WAAWW,OAAO,SAAU,GAC1CqsB,EAAQ9e,EAAKlO,WAAWS,SAAS,QAAS,GAC1CwsB,EAAO/e,EAAKlO,WAAWS,SAAS,OAAQ,GAC9C,OAAO,IAAAf,6BAA4B,CAACotB,OAAM,EAAEC,OAAM,EAAEC,MAAK,EAAEC,KAAI,EAAEJ,YAAW,GAC9E,EAEa,EAAAjR,sBAAgE,SAAC1N,GAC1E,OAAA0e,EAAoB1e,GAAM,EAA1B,EAES,EAAA2N,uBAAiE,SAAC3N,GAC3E,OAAA0e,EAAoB1e,GAAM,EAA1B,EAEJ,IAAMye,EAA8B,SAAC9X,EAAkB7U,GACrD,IAAM4iB,EAAW,CACf3vB,KAAM,OACN+I,WAA8B,IAAlB6Y,EAAOhhB,OAAe,CAAC,IAAK,IAAK,KAAO,CAAC,IAAK,KAC1DihB,WAA8B,IAAlBD,EAAOhhB,OAAe,CAAC,EAAAiiB,YAAY8B,SAAU,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAY8B,UACzD,CAAC,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAY8B,UACrExb,IAAK4D,EAAWigB,UAGlB,OAAO,EAAP,KAAW2C,GAAQ,CAAEvsB,IAAK,WAAM,OAAA62B,EAAsBtK,EAAU/N,EAAQ7U,EAAxC,GAClC,EAEMktB,EACF,SAACtK,EAA2B/N,EAAkB7U,GAC5C,IAAMmtB,EAAStY,EAAO,GAAGnf,KAAKgW,QACxB0hB,EAASvY,EAAO,GAAGnf,KAAKgW,QACxB,IAAS,EAAA2hB,SAASC,qBACpBH,EAAQntB,EAAW8sB,OAAQM,EAAQptB,EAAW+sB,OAA0B,IAAlBlY,EAAOhhB,OAAeghB,EAAO,GAAGnf,UAAOlC,GAAU,GACrGuuB,EAAc,CAFZ,KAAG,MAGX,IAAKA,EACH,MAAM,IAAItuB,MAAM,uCAElB,IAAIy3B,EAAYiC,EAAOA,EAAOt5B,OAAS,GACnC05B,EAAO,GACPvtB,EAAW8sB,SACb5B,EAAYiC,EAAO,IAEjBntB,EAAW8sB,QAAU9sB,EAAW+sB,OAClCQ,EAAO,8BACEvtB,EAAW8sB,SAAW9sB,EAAW+sB,OAC1CQ,EAAO,6BACGvtB,EAAW8sB,QAAU9sB,EAAW+sB,OAC1CQ,EAAO,4BACGvtB,EAAW8sB,QAAW9sB,EAAW+sB,SAC3CQ,EAAO,2BAET,IAAMtlB,EAAO8Z,EAAYluB,OACnB25B,EAA6B,IAAlB3Y,EAAOhhB,OAAe,gBAASghB,EAAO,GAAGnf,KAAK7B,OAAM,MAAO,GACtE45B,EAA+B,IAAlB5Y,EAAOhhB,OAAe,8BAAgC,GACnE65B,EAA+B,IAAlB7Y,EAAOhhB,OAAe,yBAA2B,GAC9D2d,EAAe,4CACOvJ,EAAI,iCACpBA,EAAI,+BACJA,EAAI,yBACVulB,EAAQ,yFAIRC,EAAU,uEAGMvC,EAAS,qCACnBjjB,EAAO,EAAC,mCACRA,EAAO,EAAC,iCACVslB,EAAI,wEAIRG,EAAU,sCAGhB,OAAO,EAAP,KACK9K,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3E9F,UAAW,CACT,CAAC7e,KAAM,QAASuC,KAAM,QAASC,KAAMuK,EAAWgtB,OAAQ,CAAC/5B,KAAM,OAAQuC,KAAM,QAASC,KAAMuK,EAAWitB,OAEzGzb,aAAY,GAEhB,EAEEwO,EAAiB,SAACnL,EAAkB7U,GACxC,IAAK6U,EACH,MAAM,IAAIphB,MAAM,oBAElB,GAAIuM,EAAW6sB,cAAgBhY,EAAOhhB,OAAS,GAAKghB,EAAOhhB,OAAS,GAClE,MAAM,IAAIJ,MAAM,uBAElB,IAAKuM,EAAW6sB,aAAiC,IAAlBhY,EAAOhhB,OACpC,MAAM,IAAIJ,MAAM,0BAIlB,GAAsB,IAAlBohB,EAAOhhB,QAA0C,IAA1BghB,EAAO,GAAGnf,KAAK7B,QAA0C,IAA1BghB,EAAO,GAAGnf,KAAK7B,OACvE,MAAM,IAAIJ,MAAM,4BAGlB,GAAwB,YAAnBohB,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,MACvB,YAAnBqf,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,MACxB,IAAlBqf,EAAOhhB,QAAmC,YAAnBghB,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,KACpE,MAAM,IAAI/B,MAAM,uBAGlB,GAAKohB,EAAO,GAAGrf,OAASqf,EAAO,GAAGrf,MAA4B,IAAlBqf,EAAOhhB,QAAgBghB,EAAO,GAAGrf,OAASqf,EAAO,GAAGrf,KAC9F,MAAM,IAAI/B,MAAM,6BAEpB,C,2WCpIA,cAEA,UAGA,UA0Ea,EAAAqzB,oCACT,SAAC/G,EAAyCgE,EAAW4J,EAAW5L,EAC/D/hB,GACC,IA3EqCkV,EA2E/B0N,GA3E+B1N,EA2EclV,EAAWigB,SA3EH,CAC/DhtB,KAAM,kBACN+I,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAYC,QACzBb,UAAS,IAwEL,OAAO,EAAP,KACK0N,GAAQ,CACXvsB,IAAK,WAAM,OAtEf,SAAC0pB,EAAyC6C,EAA2BmB,EAAW4J,EAC/E5L,EAAgC/hB,GAY/B,IAXA,IAAMqmB,EAAStC,EAAEruB,KACXk4B,EAASD,EAAEj4B,KAGXuS,EAAO8Z,EAAYluB,OACnB62B,EAAc,CAACkD,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAAI7L,EAAY,GAAKA,EAAY,IAC/E8L,EAAaD,EAAO,GAAKA,EAAO,GAChCxK,GAAgB,IAAAC,qBAChB5c,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ7K,QAAQuR,UAAUkC,SAC5DmnB,EAAW,GAENC,EAAM,EAAGA,GAAO,EAAGA,IAC1B,IAAK,IAAIC,EAAM,EAAGA,GAAO,EAAGA,IAC1BF,GAAY,4CACYE,EAAG,uCACVD,EAAG,4CAEArD,EAAY,GAAE,qBAAaA,EAAY,GAAE,0DAC3B3I,EAAY9Z,EAAO,GAAE,gBAAQjI,EAAWkI,QAAQ,GAAE,+BAC5ElI,EAAW8lB,KAAK,GAAE,2CACL9lB,EAAW4lB,UAAU,GAAE,yBAAiBiI,EAAU,eAAOD,EAAO,GAAE,uCAEzEvH,EApBH,GAoBiB,sEACOtE,EAAY9Z,EAAO,GAAE,eAAOjI,EAAWkI,QAAQ,GAAE,iCAC1ElI,EAAW8lB,KAAK,GAAE,6CACL9lB,EAAW4lB,UAAU,GAAE,6BAAqBiI,EAAU,cAAMD,EAAO,GAAE,yCAE5EvH,EAxBL,GAwBmB,oEAECwH,EAAU,0FAEhB,EAANE,EAAUC,EAAG,+LAWpC,IAAMxc,EAAe,kBACnB4R,EAAa,kNAOT0K,EAAQ,uBACRrnB,EAAKI,OAAM,qCAGjB,OAAO,EAAP,KACK+b,GAAQ,CACX/b,OAAQ,CAACnR,KAAMg1B,EAAal1B,KAAMuuB,EAAEvuB,KAAMif,YAAa,EAAAqB,YAAYC,QACnEvE,aAAY,EACZC,SAAS,GAEb,CAQewc,CAA8BlO,EAAkB6C,EAAUmB,EAAG4J,EAAG5L,EAAa/hB,EAA7E,GAEf,C,2XCtFJ,cAwEa,EAAAypB,8BACT,SAAC1J,EAAyCgE,EAAW4J,EAAW5L,EAC/D/hB,GACC,IAvE+BkV,EAuEzB0N,GAvEyB1N,EAuEclV,EAAWigB,SAvEH,CACzDhtB,KAAM,SACN+I,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,UACzB1C,UAAS,IAoEL,OAAO,EAAP,KACK0N,GAAQ,CACXvsB,IAAK,WAAM,OAlEf,SAAC0pB,EAAyC6C,EAA2BmB,EAAW4J,EAC/E5L,EAAgC/hB,GAC/B,IAAMqmB,EAAStC,EAAEruB,KACXk4B,EAASD,EAAEj4B,KAEXuS,EAAO8Z,EAAYluB,OACnBq6B,GAAa,IAAAvD,qBAAoBtE,EAAQuH,EAAQ7L,EAAa,GAE9DvQ,EAAe,mCACF6U,EAAO,GAAE,qCACTA,EAAO,GAAE,qCACTA,EAAO,GAAE,qCACTrmB,EAAW6lB,YAAY,GAAE,qCACzB7lB,EAAW6lB,YAAY,GAAE,4CAClB7lB,EAAW4lB,UAAU,GAAE,4CACvB5lB,EAAW4lB,UAAU,GAAE,0CACzB5lB,EAAWkI,QAAQ,GAAE,0CACrBlI,EAAWkI,QAAQ,GAAE,uCACxBlI,EAAW8lB,KAAK,GAAE,uCAClB9lB,EAAW8lB,KAAK,GAAE,8JAIV7d,EAAI,2nBAajBoe,EAAOxyB,OAAM,8XAiB7B,OAAO,EAAP,KACK+uB,GAAQ,CACX/b,OAAQ,CAACnR,KAAMw4B,EAAY14B,KAAMuuB,EAAEvuB,KAAMif,YAAa,EAAAqB,YAAYM,qBAClE5E,aAAY,GAEhB,CAQe2c,CAAwBpO,EAAkB6C,EAAUmB,EAAG4J,EAAG5L,EAAa/hB,EAAvE,GAEf,EAGS,EAAA2qB,oBACT,SAAC5H,EAA+B8C,EAAgC9D,EAAgC9mB,GAExF,YAFwF,IAAAA,IAAAA,EAAA,GAExF,CAAC8mB,EAAY,GAAIA,EAAY,GAAIA,EAAY,GAC5ChjB,KAAKE,KAAK8jB,EAAW,GAAK8C,EAAY,GAAKA,EAAY,GAAK5qB,GAD7D,C,gXCxFZ,cAKA,UAOa,EAAAihB,YACT,SAAC6D,EAAyClL,EAAkB7U,GAI1D,OAHAggB,EAAenL,GAGR,CADHkL,EAAiB7jB,IAAIkyB,EAAmCrO,EAAkBlL,EAAQ7U,GAAa6U,GAErG,EAES,EAAAsH,2BACT,SAACjO,GACC,IAAMuS,EAAQvS,EAAKlO,WAAWS,SAAS,SACjCnJ,EAAO4W,EAAKlO,WAAWc,UAAU,QACvC,OAAO,IAAApB,6BAA4B,CAAC+gB,MAAK,EAAEnpB,KAAI,GACjD,EAEJ,IAAM+2B,EAA6B,CACjCp7B,KAAM,cACN+I,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,WAyBrBwW,EACF,SAAC/yB,EAAgCwZ,EAAkB7U,GACjD,IAAM4iB,EAAW,EAAH,KAAOyL,GAA0B,CAAEnZ,UAAWlV,EAAWigB,WACvE,OAAO,EAAP,KAAW2C,GAAQ,CAAEvsB,IAAK,WAAM,OAxBlC,SAACgF,EAAgCunB,EAA2B/N,EAAkB7U,GAExE,IAAM+hB,EAAclN,EAAO,GAAGnf,KAAKgW,QAC7BzD,EAAO8Z,EAAYluB,OACnBy6B,EAAgBC,EAAoBvuB,EAAW1I,KAAKzD,QACpD2d,EAAe,kBACvB8c,EAAa,6CACarmB,EAAI,kFAG5B,OAAO,EAAP,KACK2a,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3E9F,UAAW,CACT,CAAC7e,KAAM,OAAQuC,KAAM,QAAS+c,YAAavS,EAAW1I,KAAKzD,OAAQ4B,KAAMuK,EAAW1I,MACpF,CAACrE,KAAM,QAASuC,KAAM,QAASC,KAAMuK,EAAWygB,QAElDjP,aAAY,GAEhB,CAK8Bgd,CAA6BnzB,EAASunB,EAAU/N,EAAQ7U,EAAxD,GAClC,EAEEuuB,EAAsB,SAACE,GAE3B,IADA,IAAMxJ,EAAsB,CAAC,mCAA4BwJ,EAAW,sBAC3D/6B,EAAI,EAAGA,EAAI+6B,IAAe/6B,EACvB,IAANA,EACFuxB,EAAUnxB,KACN,KACA,yBAAkBJ,EAAC,2BAAmBA,EAAC,SAClCA,IAAM+6B,EAAc,EAC7BxJ,EAAUnxB,KACN,KACA,6BAAsBJ,EAAC,SAE3BuxB,EAAUnxB,KACN,KACA,8BAAuBJ,EAAC,2BAAmBA,EAAC,SAMpD,OAHAuxB,EAAUnxB,KACN,OAEGmxB,EAAUvnB,KAAK,KACxB,EAEMsiB,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,iCAElB,GAA8B,IAA1BohB,EAAO,GAAGnf,KAAK7B,OACjB,MAAM,IAAIJ,MAAM,wBAElB,GAAuB,YAAnBohB,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,KAC5C,MAAM,IAAI/B,MAAM,sBAEpB,C,irBC3FA,cAEA,UAEa,EAAA2oB,sBACT,SAAC2D,EAAyClL,EAAkBsL,GAC1DH,EAAenL,GAEf,IAAM6Z,EAAkB3O,EAAiB7jB,IAAIyyB,EAAuC9Z,EAAO,IAAKA,GAIhG,MAAO,CAHQkL,EAAiB7jB,IAC5B0yB,EAAqC7O,EAAkBlL,EAAO,GAAIsL,EAASuO,EAAgBh5B,MAC3F,CAACmf,EAAO,GAAI6Z,EAAiB7Z,EAAO,GAAIA,EAAO,KAErD,EAES,EAAAwH,qCAAuE,SAACnO,GACjF,OAAAA,EAAKlO,WAAWS,SAAS,UAAW,KAApC,EAEJ,IAAMouB,EAAiC,CACrC57B,KAAM,wCACN+I,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,WA8CrB+W,EAAyC,SAAClX,GAAqC,cAChFoX,GAA8B,CACjCx4B,IAAK,WAAM,OA7C4B,SAACusB,EAA2BnL,GACnE,IAAMqX,EAAQrX,EAAM/hB,KAAKgW,QACnB8X,EAAUsL,EAAM,GAChBC,EAAcD,EAAM,GAAKA,EAAM,GAC/B/M,EAAc,CAAC+M,EAAM,GAAItL,GAEzBhS,EAAe,8MAOIsd,EAAM,GAAE,uEAENA,EAAM,GAAE,8JAMDC,EAAW,6DAEpBD,EAAM,GAAE,uEAENA,EAAM,GAAE,kMAORC,EAAW,oCAItC,OAAO,EAAP,KACKnM,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMiiB,EAAMjiB,KAAMif,YAAa,EAAAqB,YAAYM,qBACvE5E,aAAY,GAEhB,CAIawd,CAAiCH,EAAgCpX,EAAjE,GAFwE,EAK/EwX,EAA+B,CACnCh8B,KAAM,sCACN+I,WAAY,CAAC,IAAK,kBAAmB,QAAS,KAC9C8Y,WAAY,CAAC,EAAAgB,YAAY8B,SAAU,EAAA9B,YAAYM,oBAAqB,EAAAN,YAAY8B,SAAU,EAAA9B,YAAY8B,WAwClGgX,EACF,SAAC7O,EAAyCtI,EAAe0I,EAAiB+O,GAEpE,IAAMtM,EAAW,EAAH,KAAOqM,GAA4B,CAAE/Z,UAAW,UAAGiL,KACjE,OAAO,EAAP,KACKyC,GAAQ,CACXvsB,IAAK,WAAM,OA1CnB,SAAC0pB,EAAyC6C,EAA2BnL,EAAe0I,EACnF+O,GACC,IAAMzoB,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ7K,QAAQuR,UAAUkC,SAC1D,IACFoZ,EAAiBvL,+BAA+B0a,EAAsB,EAAApZ,YAAYM,qBAAoB,GADnG+Y,EAAY,KAAEC,EAAa,KAE5B,IAAgD,CAACD,EAAe,EAAGC,GAAc,GAAhFC,EAAoB,KAAEC,EAAqB,KAC5C9d,EAAe,iKAGoB6d,EAAoB,aAAKC,EAAqB,8BAC5E7oB,EAAK8B,UAAS,4fAkBzB,OAAO,EAAP,KACKqa,GAAQ,CACX/b,OAAQ,CAACnR,KAAM+hB,EAAM/hB,KAAMF,KAAMiiB,EAAMjiB,KAAMif,YAAa,EAAAqB,YAAY8B,UACtE9F,UAAW,CAAC,CAAC7e,KAAM,UAAWuC,KAAM,QAASC,KAAM0qB,IACnD3O,aAAY,GAEhB,CAQmB+d,CAA+BxP,EAAkB6C,EAAUnL,EAAO0I,EAAS+O,EAA3E,GAEf,EAEFlP,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,4CAGlB,IAAM+sB,EAAI3L,EAAO,GACX4L,EAAQ5L,EAAO,GACfja,EAAIia,EAAO,GAIjB,GAAI2L,EAAE9qB,KAAK7B,OAAS,GAA2B,IAAtB4sB,EAAM/qB,KAAK7B,QAAkC,IAAlB+G,EAAElF,KAAK7B,OACzD,MAAM,IAAIJ,MAAM,wBAElB,GAAIgtB,EAAM/qB,KAAK,KAAO8qB,EAAE9qB,KAAK,IAAMkF,EAAElF,KAAK,KAAO8qB,EAAE9qB,KAAK,GACtD,MAAM,IAAIjC,MAAM,gCAElB,GAAgB,YAAX+sB,EAAEhrB,MAAiC,YAAXgrB,EAAEhrB,MAAuC,YAAfirB,EAAMjrB,MAAqC,YAAfirB,EAAMjrB,MACzE,YAAXoF,EAAEpF,MAAiC,YAAXoF,EAAEpF,KAC7B,MAAM,IAAI/B,MAAM,uBAElB,GAA8B,IAA1BohB,EAAO,GAAGnf,KAAK7B,OACjB,MAAM,IAAIJ,MAAM,gCAEpB,C,6XCxJA,cAKA,UASa,EAAAgpB,IACT,SAACsD,EAAyClL,EAAkB7U,GAO1D,OANAggB,EAAenL,GAMR,CAACkL,EAAiB7jB,IAAIszB,EAA2B3a,EAAQ7U,GAAa6U,GAE/E,EAES,EAAA6H,mBAA4D,SAACxO,GACxE,IAAM8e,EAAQ9e,EAAKlO,WAAWS,SAAS,QAAS,MAC1CwsB,EAAO/e,EAAKlO,WAAWS,SAAS,OAAQ,KACxCnJ,EAAO4W,EAAKlO,WAAWS,SAAS,OAAQ,GACxCjK,EAAO0X,EAAKlO,WAAWW,OAAO,QAEpC,OAAO,IAAAjB,6BAA4B,CAACstB,MAAK,EAAEC,KAAI,EAAE31B,KAAI,EAAEd,KAAI,GAC7D,EAEA,IAAMi5B,EAAqB,CACzBx8B,KAAM,MACN+I,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,WAoC3B,SAAgB4X,EAA2B3a,EAAkB7U,GAC3D,OAAO,EAAP,KAAWyvB,GAAkB,CAAEva,UAAWlV,EAAWigB,SAAU5pB,IAAK,WAAM,OAlC5E,SAA8Bwe,EAAkB7U,GAC9C,IAAM0vB,EAAI7a,EAAO,GAAGnf,KAAK,GACnBuS,EAAO4M,EAAO,GAAGnf,KAAK7B,OACtBgC,GAAQkJ,KAAKyc,OAAOxb,EAAWxJ,KAAO,GAAK,GAC3C+rB,EAAKxjB,KAAKE,MAAMe,EAAWxJ,KAAO,GAAK,GACvCw2B,EAAQ,gBAAShtB,EAAWgtB,MAAK,qBAAahtB,EAAWxJ,KAAI,KAC7Dc,EAAO,gBAAS0I,EAAW1I,KAAI,KAC/B21B,EAAO,gBAASjtB,EAAWitB,KAAI,KAE/Bzb,EAAe,0CACSvJ,EAAI,sIAKbpS,EAAI,kBAAU0sB,EAAE,6EAETmN,EAAC,oKAMNp4B,EAAI,cAAM01B,EAAK,0BAAkBC,EAAI,aAE5D,OAAO,EAAP,KACKwC,GAAkB,CACrBva,UAAWlV,EAAWigB,SACtBpZ,OAAQ,CAACnR,KAAMmf,EAAO,GAAGnf,KAAMF,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC9EpG,aAAY,GAEhB,CAG4Eme,CAAqB9a,EAAQ7U,EAA7B,GAC5E,CAFA,+BAIA,IAAMggB,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,yBAElB,GAA8B,IAA1BohB,EAAO,GAAGnf,KAAK7B,OACjB,MAAM,IAAIJ,MAAM,2DAElB,GAAuB,YAAnBohB,EAAO,GAAGrf,KACZ,MAAM,IAAI/B,MAAM,6BAEpB,C,2WCvFA,cACA,UAEA,UACA,SAEA,UACA,UAyEa,EAAAkzB,oCACT,SAAC5G,EAAyClL,EACzC2T,GACC,IA1EqCnD,EAAkBnQ,EA0EjD0N,GA1E+ByC,EA0EcxQ,EAAOhhB,OAAS,EA1EZqhB,EA0EesT,EAAqBgC,mBA1Ed,CACjFv3B,KAAM,kBACN+I,WAAYqpB,EAAU,CAAC,IAAK,IAAK,QAAU,CAAC,IAAK,KACjDvQ,WAAYuQ,EAAU,CAAC,EAAAvP,YAAYC,OAAQ,EAAAD,YAAYC,OAAQ,EAAAD,YAAYC,QACrD,CAAC,EAAAD,YAAYC,OAAQ,EAAAD,YAAYC,QACvDb,UAAS,IAsEL,OAAO,EAAP,KACK0N,GAAQ,CACXvsB,IAAK,WAAM,OApEf,SAAC0pB,EAAyC6C,EAA2B/N,EACpE2T,GACC,IAAMnD,EAAUxQ,EAAOhhB,OAAS,EAC1ByxB,EAAcD,EAAU,+BAAiC,GACzD8H,EAAStY,EAAO,GAAGnf,KACnB03B,EAASvY,EAAO,GAAGnf,KACnBqsB,EAAc,EAAApY,cAAcuY,UAAUiL,EAAQC,GAAQ,GACtDvL,GAAe,EAAAzX,UAAU0X,SAASjN,EAAO,GAAGnf,KAAMmf,EAAO,GAAGnf,MAElE,IAAKqsB,EACH,MAAM,IAAItuB,MAAM,yCAElB,IAAMy3B,EAAYiC,EAAOA,EAAOt5B,OAAS,GACnC+7B,EAAiB7wB,KAAKE,KAAKisB,EAAY,GACvC/I,EAAQgL,EAAOt5B,OACfuuB,EAAQgL,EAAOv5B,OAEf4S,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ7K,QAAQuR,UAAUkC,SAC1DkpB,GAAiB,IAAAhmB,mBAAkBkY,EAAYluB,QAC/C4V,EAAUsY,EAAYluB,OACtBi8B,GAAgB,IAAA9lB,iBAChB,GAAwC,IAAAgc,sBAAqBwC,GAA5DvC,EAAkB,qBAAEC,EAAe,kBAEpC6J,EACF1K,EAAU,WAAG,IAAA2K,kBAAiBH,EAAgBC,EAAejb,EAAO,GAAGnf,KAAMqsB,GAAa,IAAU,GAElGkO,EACFpO,EAAc,UA6CxB,SACIgO,EAAwBC,EAAkCjb,EAAkB9O,GAC9E,IAAImqB,EAAyB,GACzBC,EAAyB,GAEvBC,EAAWvb,EAAO,GAAGnf,KACrB26B,EAAWxb,EAAO,GAAGnf,KAErB46B,EAAUF,EAASv8B,OACnB08B,EAAUF,EAASx8B,OAEnB4V,EAAU1D,EAASlS,OACnB28B,EAAY/mB,EAAU6mB,EACtBG,EAAYhnB,EAAU8mB,GAE5BL,EAAyBE,EAASrzB,KAAI,SAAC8F,EAAGnP,GAAM,uBAAUo8B,EAAcp8B,EAAI88B,GAA5B,KACzBF,EAAU,GAAK,MACtCJ,EAAuBxyB,KAAK,OAC5ByyB,EAAyBE,EAAStzB,KAAI,SAAC8F,EAAGnP,GAAM,uBAAUo8B,EAAcp8B,EAAI+8B,GAA5B,KACzBF,EAAU,GAAK,MACtCJ,EAAuBzyB,KAAK,MAE5B,IAAMgzB,EAAiB,EAAA/mB,cAAcC,iBAAiBwmB,EAAUrqB,GAC1D4qB,EAAiB,EAAAhnB,cAAcC,iBAAiBymB,EAAUtqB,GAE1D6qB,EAAiBF,EAAe3zB,KAAI,SAAAkN,GAAK,uBAAU6lB,EAAc7lB,EAAIumB,GAAU,QAAtC,IAA+C9yB,KAAK,MAC7FmzB,EAAiBF,EAAe5zB,KAAI,SAAAkN,GAAK,uBAAU6lB,EAAc7lB,EAAIwmB,GAAU,QAAtC,IAA+C/yB,KAAK,MAC7FozB,EAAiB,+BAAwBhB,EAAcrmB,EAAU,GAAE,uBAChEqmB,EAAcrmB,EAAU,GAAE,qBAAaqmB,EAAcrmB,EAAU,GAAE,uBACjEqmB,EAAcrmB,EAAU,GAAE,eAmBnC,MAjBoC,mDAElComB,EAAc,2CACdiB,EAAc,eACdF,EAAc,uCACUV,EAAsB,kFAK9CL,EAAc,2CACdiB,EAAc,eACdD,EAAc,uCACUV,EAAsB,+BAKlD,CA9F2BY,CAAyBlB,EAAgBC,EAAejb,EAAQkN,IAAiB,GAEhGiP,EAA2BnP,EAAc,2BAA6B,eA8FlF,SAAciO,EAAyB7nB,GAErC,IADA,IAAIgpB,EAAM,GACDv9B,EAAI,EAAGA,EAAIuU,EAAO,EAAGvU,IAC5Bu9B,GAAO,aAAMnB,EAAcp8B,GAAE,MAI/B,OAFAu9B,GAAO,aAAMnB,EAAc7nB,EAAO,GAAE,MAChC,MAEN,CAtG0FipB,CAAKpB,EAAe3N,GAAM,KACxGgP,EAA2BtP,EAAc,2BAA6B,eAuGlF,SAAciO,EAAyB7nB,GAErC,IADA,IAAIgpB,EAAM,GACDv9B,EAAI,EAAGA,EAAIuU,EAAO,EAAGvU,IAC5Bu9B,GAAO,aAAMnB,EAAcp8B,GAAE,MAI/B,OAFAu9B,EAAO,QACH,aAAMnB,EAAc7nB,EAAO,GAEjC,CA/G0FmpB,CAAKtB,EAAe1N,GAAM,KACxGiP,EAAyBxP,EAAc,GAAK,UAAGgO,EAAc,gEACzBC,EAAcrmB,EAAU,GAAE,gBAAQqmB,EAAcrmB,EAAU,GAAE,4BAC7FqmB,EAAcrmB,EAAU,GAAE,gBAAQqmB,EAAcrmB,EAAU,GAAE,uBAE/D+H,EAAe,wBACbye,EAAiC,yBACjCF,EAAuB,yBACvB9J,EAAkB,sDAEhBoL,EAAsB,sFAGFzB,EAAc,8CACvBoB,EAAwB,uCACxBG,EAAwB,yIAKnC7L,EAAW,2BACXY,EAAe,2BACfzf,EAAKI,OAAM,4BAErB,OAAO,EAAP,KACK+b,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAYC,QAC3EvE,aAAY,EACZC,SAAS,GAEb,CAQe6f,CAA8BvR,EAAkB6C,EAAU/N,EAAQ2T,EAAlE,GAEf,C,yZCtFJ,cAEA,UACA,SAEA,UACA,UAEa,EAAA5L,OACT,SAACmD,EAAyClL,EAAkB7U,GAG1D,OAFAggB,EAAenL,GAEXkL,EAAiBhiB,QAAQyG,KACpB,CAACub,EAAiB7jB,KACrB,IAAAyqB,qCAAoC5G,EAAkBlL,EAAQ7U,GAAa6U,IAExE,CAACkL,EAAiB7jB,IAAIqtB,EAA8B1U,EAAQ7U,GAAa6U,GAEpF,EAES,EAAAgI,sBACT,SAAC3O,GAAmD,WAAAua,mCAAkCva,EAAKlO,WAAvC,EAExD,IAAMuxB,EAA8B,SAAClM,EAAkBnQ,GAAsB,OAC3EjiB,KAAM,SACN+I,WAAYqpB,EAAU,CAAC,IAAK,IAAK,QAAU,CAAC,IAAK,KACjDvQ,WAAYuQ,EAAU,CAAC,EAAAvP,YAAY8B,SAAU,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAY8B,UACzD,CAAC,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAY8B,UACzD1C,UAAS,EALkE,EAuD7E,SAAgBqU,EACZ1U,EAAkB2T,GACpB,IAAM5F,EAAW2O,EAA4B1c,EAAOhhB,OAAS,EAAG20B,EAAqBgC,oBACrF,OAAO,EAAP,KAAW5H,GAAQ,CAAEvsB,IAAK,WAAM,OAlDlC,SACIusB,EAA2B/N,EAAkB2T,GAC/C,IAAM2E,EAAStY,EAAO,GAAGnf,KACnB03B,EAASvY,EAAO,GAAGnf,KACnBqsB,EAAc,EAAApY,cAAcuY,UAAUiL,EAAQC,GAAQ,GAC5D,IAAKrL,EACH,MAAM,IAAItuB,MAAM,yCAElB,IAAMo8B,GAAiB,IAAAhmB,mBAAkBkY,EAAYluB,QAC/Ci8B,GAAgB,IAAA9lB,iBAChB,GAAwC,IAAAgc,sBAAqBwC,GAA5DvC,EAAkB,qBAAEC,EAAe,kBAEpCb,EAAUxQ,EAAOhhB,OAAS,EAC1ByxB,EAAcD,EAAU,+BAAiC,GACzD0K,EACF1K,EAAU,UAAG2K,EAAiBH,EAAgBC,EAAejb,EAAO,GAAGnf,KAAMqsB,GAAa,IAAW,GAEnG9Z,EAAO8Z,EAAYluB,OACnB29B,EAAQrE,EAAOt5B,OACf49B,EAAQrE,EAAOv5B,OACfq3B,EAAYiC,EAAOA,EAAOt5B,OAAS,GACnC2d,EAAe,gBACjByU,EAAkB,iBAClB8J,EAAuB,2CACG9nB,EAAI,+BACpBupB,EAAK,6BACLC,EAAK,qJAKKvG,EAAS,mCACnBsG,EAAQ,EAAC,iCACTC,EAAQ,EAAC,2EAGfnM,EAAW,qBACXY,EAAe,kCAGvB,OAAO,EAAP,KACKtD,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3EpG,aAAY,GAEhB,CAKkCkgB,CAAwB9O,EAAU/N,EAAQ2T,EAA1C,GAClC,CAJA,kCAMA,IAAMxI,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,6BAGlB,GAAIohB,EAAO,GAAGnf,KAAKmf,EAAO,GAAGnf,KAAK7B,OAAS,KAAOghB,EAAO,GAAGnf,KAAKmf,EAAO,GAAGnf,KAAK7B,OAAS,GACvF,MAAM,IAAIJ,MAAM,oCAGlB,GAAwB,YAAnBohB,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,MACvB,YAAnBqf,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,KAC7C,MAAM,IAAI/B,MAAM,+BAGlB,GAAIohB,EAAO,GAAGrf,OAASqf,EAAO,GAAGrf,KAC/B,MAAM,IAAI/B,MAAM,4BAEpB,EAEA,SAAgBu8B,EACZH,EAAwBC,EAAkCzmB,EAA4BtD,EACtFH,GACF,IAAIsE,EACEV,EAASH,EAAQxV,OACjB4V,EAAU1D,EAASlS,OACnBiW,EAAWL,EAAUD,EAEzBU,EADET,EAAU,GAAKD,EAAS,EACF,SAEAH,EAAQtM,KAAI,SAAC8F,EAAGnP,GAAM,uBAAUo8B,EAAcp8B,EAAIoW,GAA5B,IAAyCpM,KAAK,MAE9F,IACM0L,EADgB,EAAAO,cAAcC,iBAAiBP,EAAStD,GAC1BhJ,KAAI,SAAAkN,GAAK,uBAAU6lB,EAAc7lB,EAAIH,GAAS,QAArC,IAA8CpM,KAAK,MAG5FmJ,EAAS,uCAkBb,OAnBiC,IADlB,EAAAuD,UAAU5T,KAAK6S,KAI5BxC,EAAS,uBAEoBjB,EAAW,yCAExCiqB,EAAc,2CACdzmB,EAAa,0CACcc,EAAqB,wBACzCrD,EAAM,QAE2B,0CAExCgpB,EAAc,2CACdzmB,EAAa,mCAKjB,CAnCA,oB,gWCzGA,cAEA,UACA,SAEA,UAEMuoB,EAAsB,CAC1B1+B,KAAM,OACN+I,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8b,mBA+Cd,EAAAvY,4BAA8B,SAAChe,EAAgCoc,GACxE,cAAKka,GAAmB,CAAEt7B,IAAK,WAAM,OA7CX,SAACgF,EAAgCoc,GAC7D,IAuGgBxP,EAAcvS,EAAgB4U,EAAcC,EAvGtD9D,GAAO,IAAAC,SAAQrL,EAAQ0C,QAAQ7K,QAAQuR,UAAUkC,SACjDoc,EAAatL,EAAM/hB,KAEnBm8B,EAAY9O,EAAWlvB,OAEvBmf,EAAayE,EAAM/hB,KAAK7B,OAExBg8B,GAAiB,IAAAhmB,mBAAkBmJ,GACnC/X,GAAW,IAAAioB,aAAY,KAAMlQ,GAC7B8e,GA8FU7pB,EA9FO+K,EA8FOtd,EA9FKuF,EA8FWqP,EA9FDyY,EAAWA,EAAWlvB,OAAS,GA8FhB0W,EA9FoBwY,EAAWA,EAAWlvB,OAAS,GA+FlG,IAAToU,GAAuB,IAATA,EACT,GAIO,wBACJvS,EAAKuS,EAAO,GAAE,0BACdvS,EAAKuS,EAAO,GAAE,4BACZvS,EAAKuS,EAAO,GAAE,gCACdvS,EAAKuS,EAAO,GAAE,0CACJsC,EAAI,sCACJD,EAAI,YAhGtBynB,EA8BR,SAAiC9pB,EAAcZ,EAA0B3R,GACvE,GAAa,IAATuS,EACF,MAAO,QAET,GAAa,IAATA,EACF,MAAO,eAAQZ,EAAM,IAIvB,IADA,IAAI2qB,EAAO,GACFt+B,EAAIuU,EAAO,EAAGvU,EAAIuU,EAAMvU,IAC/Bs+B,GAAQ,UAAGt8B,EAAKhC,GAAE,eAAO2T,EAAM3T,EAAIuU,EAAO,IACtCvU,EAAIuU,EAAO,IACb+pB,GAAQ,MAIZ,OAAOA,CACT,CA/C+BC,CAAwBjf,EAPnC,IAAd6e,EACgB,CAAC,EAAG,GACC,IAAdA,EACS,CAAC9O,EAAW,GAAI,GAEhB,CAACA,EAAW/P,EAAa,GAAI+P,EAAW/P,EAAa,IAES/X,GAC5E4L,EAmDR,SAAmBQ,EAA0B3R,GAC3C,IAAMuS,EAAOZ,EAAMxT,OAEnB,GAAa,IAAToU,EACF,MAAO,kBAGT,GAAa,IAATA,EACF,MAAO,2CACaZ,EAAM,GAAE,2CAI9B,IAII6qB,EAAI,GACR,GAAIjqB,EAAO,EACT,IAAK,IAAIvU,EAAI,EAAGA,EAAIuU,EAAO,IAAKvU,EAC9Bw+B,GAAQ,UAAGx8B,EAAKhC,GAAE,KAGtB,MAAO,eAAQw+B,GAAC,OAVA,OAUU,2CACEA,GAAC,OATb,SASuB,2CACXA,GAAC,OAXb,SAWuB,oDACFA,GAAC,OAVtB,WAUgC,IAClD,CA9EiBC,CAAUpP,EAAY9nB,GAE/BuW,EAAe,6CAEXqe,EAAc,oDAEXkC,EAAoB,4BACrBtrB,EAAKI,OAAM,wDAEXirB,EAAK,2BAELrrB,EAAKI,OAAM,mBAAWA,EAAM,sCAIxC,OAAO,EAAP,KACK8qB,GAAmB,CACtBlgB,SAAS,EACT5K,OAAQ,CAACnR,KAAM+hB,EAAM/hB,KAAMF,KAAMiiB,EAAMjiB,KAAMif,YAAa,EAAAqB,YAAYC,QACtEvE,aAAY,GAEhB,CAGyC4gB,CAAsB/2B,EAASoc,EAA/B,GAArC,C,+IC3DJ,aAEA,SAAgB4a,EAAep/B,EAAcgV,GAC3C,OAAO,IAAA+B,eAAc/B,GAAMlL,KAAI,SAAAkN,GAAK,gBAAGhX,EAAI,YAAIgX,EAAX,GACtC,CAFA,mBAIA,uBAA4BhX,EAAcgV,GACxC,OAAa,IAATA,EACK,CAAChV,GAEHo/B,EAAep/B,EAAMgV,EAC9B,EAEA,+BACE,MAAO,mXAaT,C,krBC3BA,cAIA,UACA,UAEA,UAQMqqB,EAAqB,CACzBr/B,KAAM,MACN+I,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,WAGd,EAAAuF,MACT,SAAC4C,EAAyClL,EAAkB7U,GAS1D,OARAuyB,EAAiB1d,GAQV,CAPQkL,EAAiB7jB,IAAI,EAAD,KAE1Bo2B,GAAkB,CACrBpd,UAAWlV,EAAWigB,SACtB5pB,IAAK,WAAM,OAAAm8B,EAAqBzS,EAAkBlL,EAAO,GAAI7U,EAAlD,IAEb6U,GAEN,EAES,EAAAuI,qBAA8D,SAAClP,GAC1E,IAAM+b,EAAO/b,EAAKlO,WAAWY,UAAU,OAAQ,YACzCrM,EAAQ2Z,EAAKlO,WAAWS,SAAS,QAAS,GAC1CqlB,EAAO5X,EAAKlO,WAAWe,QAAQ,QACrC,OAAO,IAAArB,6BAA4B,CAACuqB,KAAI,EAAE11B,MAAK,EAAEuxB,KAAI,GACvD,EAEa,EAAAzI,OACT,SAAC0C,EAAyClL,EAAkBoV,GAC1DwI,EAAkB5d,GAClB,IAAM6d,EAAaC,EAAgC5S,EAAkBlL,EAAQoV,GAC7E,OAAO,IAAA9M,OAAM4C,EAAkB,CAAClL,EAAO,IAAK6d,EAC9C,EAES,EAAApV,sBAAwD,SAACpP,GAClE,OAAAA,EAAKlO,WAAWY,UAAU,OAAQ,WAAlC,EAEJ,IAAM+xB,EACF,SAAC5S,EAAyClL,EAAkBoV,GAC1D,IAAKlK,EAAiBhiB,QAAQ+a,cAAcjE,EAAO,GAAGqB,SACjDrB,EAAOhhB,QAAU,IAAMksB,EAAiBhiB,QAAQ+a,cAAcjE,EAAO,GAAGqB,QAC3E,MAAM,IAAIziB,MAAM,0CAGlB,IAAMqyB,EAAO5vB,MAAML,KAAKgf,EAAO,GAAG+d,aAC5Br+B,EAASsgB,EAAOhhB,QAAU,EAAKghB,EAAO,GAAGge,UAAU,GAAK,EAE9D,OAAO,IAAAnzB,6BAA4B,CAACuqB,KAAI,EAAEnE,KAAI,EAAEvxB,MAAK,GACvD,EAEEi+B,EACF,SAACzS,EAAyCtI,EAAezX,GACvD,IAAM+hB,EAAc,EAAA3X,UAAU0oB,SAASrb,EAAM/hB,KAAKgW,QAAS1L,EAAW8lB,MAChE7d,EAAO8Z,EAAYluB,OACnBk/B,EAAcC,EAAejT,EAAkBtI,EAAOzX,GACtDwR,EAAe,kBACnBuhB,EAAW,qCACO9qB,EAAI,0DAGxB,MAAO,CACLhV,KAAM,MACN+I,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,UACzB/Q,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMiiB,EAAMjiB,KAAMif,YAAa,EAAAqB,YAAY8B,UACvEpG,aAAY,EAEhB,EAEE+gB,EAAmB,SAAC1d,GACxB,IAAKA,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,wBAElB,GAAuB,YAAnBohB,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,KAC5C,MAAM,IAAI/B,MAAM,sBAEpB,EAEMg/B,EAAoB,SAAC5d,GACzB,IAAKA,GAA6B,IAAlBA,EAAOhhB,QAAkC,IAAlBghB,EAAOhhB,OAC5C,MAAM,IAAIJ,MAAM,8BAElB,GAAuB,UAAnBohB,EAAO,GAAGrf,KACZ,MAAM,IAAI/B,MAAM,uBAElB,GAAIohB,EAAOhhB,QAAU,GAAwB,WAAnBghB,EAAO,GAAGrf,KAClC,MAAM,IAAI/B,MAAM,sBAEpB,EAEMu/B,EAAiB,SAACjT,EAAyCtI,EAAezX,GAC9E,IAAMyG,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ7K,QAAQuR,UAAUkC,SAC1D,IAAkBoZ,EAAiBvL,+BAA+BiD,EAAM/hB,KAAM,EAAAogB,YAAY8B,UAAS,GAAlG1gB,EAAK,KAAED,EAAM,KACdiR,EAAU,EAAAkC,UAAU0N,eAAeL,EAAM/hB,MAE/C,OAAQsK,EAAWiqB,MACjB,IAAK,WACH,OAAOgJ,EAAexsB,EAAMgR,EAAM/hB,KAAMwS,EAAShR,EAAOD,EAAQ+I,EAAW8lB,KAAM9lB,EAAWzL,OAC9F,IAAK,UACH,OAAO2+B,EAAczsB,EAAMgR,EAAM/hB,KAAMwS,EAAShR,EAAOD,EAAQ+I,EAAW8lB,MAC5E,IAAK,OACH,OAAOqN,EAAW1sB,EAAMgR,EAAM/hB,KAAMwS,EAAShR,EAAOD,EAAQ+I,EAAW8lB,MACzE,QACE,MAAM,IAAIryB,MAAM,gBAEtB,EAEMw/B,EACF,SAACxsB,EAAYY,EAA0Ba,EAA4BhR,EAAeD,EAAgB6uB,EACjGvxB,GAGC,IAFA,IAAM0T,EAAOZ,EAAMxT,OACfqf,EAAQ,GACHxf,EAAIuU,EAAO,EAAGvU,GAAK,IAAKA,EAC/Bwf,GAAS,0BACDxf,EAAC,eAAOoyB,EAAKpyB,GAAE,qEAEZ2T,EAAM3T,GAAE,qDACHwU,EAAQxU,GAAE,eAG5B,MAAO,mCACYuU,EAAI,sDACU1T,EAAK,oEAGlC2e,EAAK,0DACgChc,EAAK,aAAKD,EAAM,qDACvBwP,EAAK8B,UAAS,wDAIlD,EAEE2qB,EACF,SAACzsB,EAAYY,EAA0Ba,EAA4BhR,EAAeD,EAAgB6uB,GAK5F,IAHA,IAAM7d,EAAOZ,EAAMxT,OAEfqf,EAAQ,GACHxf,EAAIuU,EAAO,EAAGvU,GAAK,IAAKA,EAC/Bwf,GAAS,0BACLxf,EAAC,eAAOoyB,EAAKpyB,GAAE,qFAGD,GAAK2T,EAAM3T,GAAK,GAAE,sFAE5B2T,EAAM3T,GAAE,kEAEJwU,EAAQxU,GAAE,eAGxB,MAAO,mCACQuU,EAAI,sEAGnBiL,EAAK,0DACgChc,EAAK,aAAKD,EAAM,qDACvBwP,EAAK8B,UAAS,wDAI9C,EAEF4qB,EACF,SAAC1sB,EAAYY,EAA0Ba,EAA4BhR,EAAeD,EAAgB6uB,GAK5F,IAHA,IAAM7d,EAAOZ,EAAMxT,OAEfqf,EAAQ,GACHxf,EAAIuU,EAAO,EAAGvU,GAAK,IAAKA,EAC/Bwf,GAAS,0BACLxf,EAAC,eAAOoyB,EAAKpyB,GAAE,2DAEZ2T,EAAM3T,GAAE,iBAAS2T,EAAM3T,GAAK,EAAC,oCACxBwU,EAAQxU,GAAE,aAGxB,MAAO,mCACQuU,EAAI,sEAGnBiL,EAAK,0DACgChc,EAAK,aAAKD,EAAM,qDACvBwP,EAAK8B,UAAS,wDAI9C,C,uwBCzMR,cAIA,UAEA,UAWa,EAAAyR,YACT,SAAC+F,EAAyClL,EAAkB7U,GAC1DggB,EAAenL,GACf,IAAM+N,EACF,CAAC3vB,KAAM,cAAe+I,WAAY,CAAC,KAAM8Y,WAAY,CAAC,EAAAgB,YAAY8B,UAAW1C,UAAWlV,EAAWigB,UAGvG,MAAO,CAFQF,EAAiB7jB,IAAI,EAAD,KAC3B0mB,GAAQ,CAAEvsB,IAAK,WAAM,OAAA+8B,EAA6Bve,EAAQ+N,GAAU,EAAO5iB,EAAtD,IAAoE6U,GAEnG,EAES,EAAAoF,2BACT,SAAC/L,GACC,IAAMyX,EAAUzX,EAAKlO,WAAWY,UAAU,WAAY,UAChDyyB,EAAWnlB,EAAKlO,WAAWW,OAAO,YAAa,GAC/C2yB,EAAsE,IAAnDplB,EAAKlO,WAAWW,OAAO,oBAAqB,GAC/DklB,EAAc3X,EAAKlO,WAAWe,QAAQ,gBACtCmH,EAAUgG,EAAKlO,WAAWe,QAAQ,UAAW,IAC7C+kB,EAAO5X,EAAKlO,WAAWe,QAAQ,OAAQ,IAG7C,GAAiB,IAAbsyB,EACF,MAAM,IAAI5/B,MAAM,0EAGlB,OAAO,IAAAiM,6BAA4B,CAACimB,QAAO,EAAE0N,SAAQ,EAAEC,gBAAe,EAAEzN,YAAW,EAAE3d,QAAO,EAAE4d,KAAI,GACpG,EAEJ,IAAMsN,EACF,SAACve,EAAkB+N,EAA2B2Q,EAA2BvzB,GAE7D,QACFwzB,EAAwC3e,EAAQ7U,EAAYuzB,GAAiB,GAD1E3L,EAAkB,KAAE7F,EAAW,KAEhC8L,EAAa,EAAAzjB,UAAU5T,KAAKoxB,EAAmB/B,aAEjD4N,EAAM,GACN7L,EAAmB0L,gBACrBG,GAAO,yBAAkB5F,EAAU,MAEnC4F,GAAO,yBAAkB5F,EAAU,YAErC,IAAM6F,EAAcC,EAAoB9e,EAAO,GAAGnf,KAAMkyB,EAP5C,kBAOqE6L,EAAK,OAChFjiB,EAAe,oBACrBkiB,EAAW,YAEX,OAAO,EAAP,KACK9Q,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3EpG,aAAY,GAEhB,EAEK,EAAAsK,kBACT,SAACiE,EAAyClL,EAAkB7U,GAC1DggB,EAAenL,GACf,IAAM+N,EAAW,CACf3vB,KAAM,oBACN+I,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,UACzB1C,UAAW,UAAGlV,EAAWszB,kBAI3B,MAAO,CAFQvT,EAAiB7jB,IAAI,EAAD,KAC3B0mB,GAAQ,CAAEvsB,IAAK,WAAM,OAAA+8B,EAA6Bve,EAAQ+N,GAAU,EAAM5iB,EAArD,IAAmE6U,GAElG,EAES,EAAAkH,iCACT,SAAC7N,GACC,IAAMolB,EAAsE,IAAnDplB,EAAKlO,WAAWW,OAAO,oBAAqB,GACrE,OAAO,IAAAjB,6BACH,CAACimB,QAAS,GAAI0N,SAAU,EAAGC,gBAAe,EAAEzN,YAAa,GAAI3d,QAAS,GAAI4d,KAAM,IACtF,EAOS,EAAAhJ,QACT,SAACiD,EAAyClL,EAAkB7U,GAC1DggB,EAAenL,GACf,IAAM+N,EACF,CAAC3vB,KAAM,UAAW+I,WAAY,CAAC,KAAM8Y,WAAY,CAAC,EAAAgB,YAAY8B,UAAW1C,UAAWlV,EAAWigB,UAGnG,MAAO,CAFQF,EAAiB7jB,IAAI,EAAD,KAC3B0mB,GAAQ,CAAEvsB,IAAK,WAAM,OAAAu9B,EAAyB/e,EAAQ+N,GAAU,EAAO5iB,EAAlD,IAAgE6U,GAE/F,EAES,EAAAkI,uBACT,SAAC7O,GACC,IAAMyX,EAAUzX,EAAKlO,WAAWY,UAAU,WAAY,UAChDyyB,EAAWnlB,EAAKlO,WAAWW,OAAO,YAAa,GAC/CklB,EAAc3X,EAAKlO,WAAWe,QAAQ,gBACtCmH,EAAUgG,EAAKlO,WAAWe,QAAQ,UAAW,IAC7C+kB,EAAO5X,EAAKlO,WAAWe,QAAQ,OAAQ,IACvC8yB,EAAe3lB,EAAKlO,WAAWW,OAAO,gBAAiB,GACvDilB,EAAY1X,EAAKlO,WAAWe,QAAQ,YAAa,IAGvD,GAAqB,IAAjB8yB,EACF,MAAM,IAAIpgC,MAAM,+DAElB,GAAiB,IAAb4/B,EACF,MAAM,IAAI5/B,MAAM,sEAGlB,OAAO,IAAAiM,6BACH,CAACimB,QAAO,EAAE0N,SAAQ,EAAEC,iBAAiB,EAAOzN,YAAW,EAAE3d,QAAO,EAAE4d,KAAI,EAAE+N,aAAY,EAAEjO,UAAS,GACrG,EAEJ,IAAMgO,EACF,SAAC/e,EAAkB+N,EAA2B2Q,EAA2BvzB,GAE7D,QACFwzB,EAAwC3e,EAAQ7U,EAAYuzB,GAAiB,GAD1E3L,EAAkB,KAAE7F,EAAW,KAMhC2R,EAAcC,EAAoB9e,EAAO,GAAGnf,KAAMkyB,EAJ5C,2CAGA,GAC0E,QAChFpW,EAAe,kBACvBkiB,EAAW,UAET,OAAO,EAAP,KACK9Q,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3EpG,aAAY,GAEhB,EAEFgiB,EACF,SAAC3e,EAAkB7U,EAAqDuzB,GAElE,IAAMxQ,EAAalO,EAAO,GAAGnf,KAAKgW,QAC5BooB,EAAej4B,OAAOQ,eAAeC,KAAK0D,EAAY,aACtD6lB,EAAc7lB,EAAW6lB,YAAYna,QACrCxD,EAAUlI,EAAWkI,QAAQwD,QAC7Bka,EAAsBkO,EAAgB9zB,EAAiC4lB,UAAUla,QAAU,GAC3Foa,EAAO9lB,EAAW8lB,KAAKpa,QAC7B,EAAAke,aAAamK,qBAAqBR,EAAkBxQ,EAAY8C,EAAa3d,EAAS0d,EAAWE,GAEjG,IAAM/D,EAAc,EAAA6H,aAAaoK,uBAC7BT,EAAkBxQ,EAAY7a,EAAS0d,EAAWC,EAAaC,EAAM9lB,EAAW2lB,SAE9E4C,EAAgB1sB,OAAO0D,OAAO,CAAC,EAAGS,GAMxC,OALI8zB,EACFj4B,OAAO0D,OAAOgpB,EAAe,CAAC1C,YAAW,EAAE3d,QAAO,EAAE4d,KAAI,EAAEF,UAAS,EAAE3F,SAAUjgB,EAAWigB,WAE1FpkB,OAAO0D,OAAOgpB,EAAe,CAAC1C,YAAW,EAAE3d,QAAO,EAAE4d,KAAI,EAAE7F,SAAUjgB,EAAWigB,WAE1E,CAACsI,EAAexG,EACzB,EAEFkS,EAA0B,CAC9BtO,QAAS,GACT0N,SAAU,EACVC,iBAAiB,EACjBzN,YAAa,GACb3d,QAAS,GACT4d,KAAM,GACN+N,aAAc,EACdjO,UAAW,GACX3F,SAAU,IAGNiU,EAAwB,CAC5BjhC,KAAM,gBACN+I,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,WAGd,EAAAoE,cAAgB,SAAC+D,EAAyClL,GAQrE,OAPAmL,EAAenL,GAOR,CANQkL,EAAiB7jB,IAAI,EAAD,KAE1Bg4B,GAAqB,CACxB79B,IAAK,WAAM,OAAAu9B,EAAyB/e,EAAQqf,GAAuB,EAAMD,EAA9D,IAEbpf,GAEN,EAEA,IAAMmL,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,8BAElB,GAAuB,YAAnBohB,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,KAC5C,MAAM,IAAI/B,MAAM,sBAEpB,EAEMkgC,EACF,SAACQ,EAA8Bn0B,EAAmCo0B,EAAaX,EAAaY,GAEtF,IAAMpsB,EAAOksB,EAAUtgC,OACvB,GAAImM,EAAW6lB,YAAYhyB,QAAU,EAAG,CACtC,IAKIygC,EALEC,EAAKv0B,EAAW6lB,YAAY7lB,EAAW6lB,YAAYhyB,OAAS,GAC5D2gC,EAAKx0B,EAAWkI,QAAQlI,EAAWkI,QAAQrU,OAAS,GACpD4gC,EAAUz0B,EAAW8lB,KAAK9lB,EAAW8lB,KAAKjyB,OAAS,EAAI,GACvD6gC,EAAQ10B,EAAW8lB,KAAK9lB,EAAW8lB,KAAKjyB,OAAS,GACjD8gC,EAAOR,EAAUlsB,EAAO,GAE1B2sB,EAAQ,GACRC,EAAW,GAmBf,GAjBEP,EADEG,EAAUC,IAAU,EACd,0CACUH,EAAE,mCAClBtsB,EAAI,2BAAmBA,EAAI,mBAAWusB,EAAE,cAAMC,EAAO,oCACjDxsB,EAAI,0BAAkBA,EAAI,oBAAY0sB,EAAI,0FAIhDP,EAAG,iBAGK,0CACUG,EAAE,mCAClBtsB,EAAI,2BAAmBA,EAAI,mBAAWusB,EAAE,cAAMC,EAAO,8BACvDL,EAAG,iBAIiC,IAAlCp0B,EAAW6lB,YAAYhyB,OAAc,CACvC,IAAMihC,EAAK90B,EAAW6lB,YAAY7lB,EAAW6lB,YAAYhyB,OAAS,GAC5DkhC,EAAK/0B,EAAWkI,QAAQlI,EAAWkI,QAAQrU,OAAS,GACpDmhC,EAAUh1B,EAAW8lB,KAAK9lB,EAAW8lB,KAAKjyB,OAAS,EAAI,GACvDohC,EAAQj1B,EAAW8lB,KAAK9lB,EAAW8lB,KAAKjyB,OAAS,GACjDqhC,EAAOf,EAAUlsB,EAAO,GAE5B2sB,EADEI,EAAUC,IAAU,EACd,4CACUH,EAAE,qCAClB7sB,EAAI,2BAAmBA,EAAI,mBAAW8sB,EAAE,cAAMC,EAAO,sCACjD/sB,EAAI,0BAAkBA,EAAI,oBAAYitB,EAAI,sCACxCX,EAAE,6DAKF,4CACUO,EAAE,qCAClB7sB,EAAI,2BAAmBA,EAAI,mBAAW8sB,EAAE,cAAMC,EAAO,uBAGzDH,EAAW,yB,CAmBb,MAdoB,8CACI5sB,EAAI,iCACtBA,EAAI,yEAGIosB,EAAK,gDAEnBO,EAAK,uBACLN,EAAK,uBACLO,EAAQ,uBACRpB,EAAG,+C,CAMH,IAUI0B,EAVEtH,EAAa,EAAAzjB,UAAU5T,KAAKwJ,EAAW6lB,aACvCuP,EAAgB,EAAAhrB,UAAU0N,eAAe9X,EAAW6lB,aACpDwP,EAAcD,EAAcvhC,OAC5ByhC,EAAWt1B,EAAW8lB,KAAKjyB,OAC3B0hC,EAA0B1iB,EAAgBwiB,GAC1CG,EAAgBC,EAAUtB,EAAW,aACrCuB,EAAWD,EAAUz1B,EAAW8lB,KAAM,QACtC6P,EAAoBF,EAAUL,EAAe,iBAC7CQ,EAAcH,EAAUz1B,EAAWkI,QAAS,WAmDlD,OA/CEitB,EAHcn1B,EAAW8lB,KAAK+P,QAAO,SAAC3W,EAAK4W,GAAQ,OAAA5W,EAAM4W,CAAN,IAGzC,2MAQV1B,EAAG,iBAGO,mCAEZA,EAAG,cAGiB,oBACtBmB,EAAuB,+CACGttB,EAAI,iCACtBA,EAAI,oEAECotB,EAAW,kCACbC,EAAQ,uCACHrtB,EAAI,2CACAotB,EAAW,qCACjBA,EAAW,yBACvBK,EAAQ,uBACRF,EAAa,uBACbI,EAAW,uBACXD,EAAiB,uCAEHtB,EAAK,mGAGCxG,EAAU,kIAGf5lB,EAAI,cAAMotB,EAAW,iBAASptB,EAAI,mEACbA,EAAI,cAAMotB,EAAW,2CACtCptB,EAAI,cAAMotB,EAAW,2CACpCF,EAAO,oCAEX1B,EAAG,iDAOP,EAEFgC,EAAY,SAACM,EAA0BC,GAE3C,IADA,IAAI9iB,EAAQ,GACHxf,EAAI,EAAGA,EAAIqiC,EAAMliC,OAAQH,IAChCwf,GAAS,kBACL8iB,EAAS,YAAItiC,EAAC,eAAOqiC,EAAMriC,GAAE,WAGnC,OAAOwf,CACT,EAEML,EAAkB,SAAC5K,GAAyB,yDACTA,EAAI,8BAAsBA,EAAI,iCAC7DA,EAAI,mEAGYA,EAAI,+HAIhBA,EAAI,uBATgC,C,+bCjWlD,cAEA,UAEA,UAEA,UAUM4tB,EACF,SAAC9V,EAAyClL,EAAkB7U,EAA8B/M,EACzFgjC,GACCjW,EAAenL,GAEf,IAAMqhB,EAAwB,CAC5BjjC,KAAI,EACJ+I,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,WAW3B,MAAO,CARQmI,EAAiB7jB,IAAI,EAAD,KAE1Bg6B,GAAqB,CACxBhhB,UAAWlV,EAAWigB,SACtB5pB,IAAK,WACD,OAAA8/B,EAAwBpW,EAAkBlL,EAAQ7U,EAAY/M,EAAMgjC,EAAUC,EAA9E,IAENrhB,GAEN,EAES,EAAA6I,sBAAkE,SAACxP,GAC9E,IAAMkoB,EAAOloB,EAAKlO,WAAWe,QAAQ,OAAQ,IACvCs1B,EAAqD,IAA1CnoB,EAAKlO,WAAWW,OAAO,WAAY,GACpD,OAAO,IAAAjB,6BAA4B,CAAC02B,KAAI,EAAEC,SAAQ,GACpD,EAEA,IAAMF,EACF,SAAC96B,EAAgCwZ,EAAkB7U,EAA8B/M,EAAcgjC,EAC9FC,GAUC,IATA,IAAMnU,EAAwB,GACxBuU,EAAQzhB,EAAO,GAAGnf,KAAK7B,QAAU,EAEjC0iC,EAAU,GAEVH,EAAO,EAAAhsB,UAAUosB,cAAcx2B,EAAWo2B,KAAMvhB,EAAO,GAAGnf,KAAK7B,QAC/D4iC,EAAMR,EAASphB,EAAQuhB,GACzBM,EAAYD,EAAI,GAEXE,EAAI,EAAGA,EAAI9hB,EAAO,GAAGnf,KAAK7B,OAAQ8iC,IAErCP,EAAKziC,QAAQgjC,IAAM,GAAqB,IAAhBP,EAAKviC,QAC3BmM,EAAWq2B,UACbtU,EAAYjuB,KAAK,GAInB4iC,EAAY,+BACDC,EAAC,kBAAUA,EAAC,cAAM9hB,EAAO,GAAGnf,KAAKihC,GAAE,cAAMA,EAAC,uCACxCA,EAAC,gBAAQA,EAAC,0BACnBD,EAAS,mBAGbH,EAAQziC,KAAK,mBAAY6iC,EAAC,yBAAiB5U,EAAYluB,OAAM,OAE7DkuB,EAAYjuB,KAAK+gB,EAAO,GAAGnf,KAAKihC,KAIpC,IAAMC,EAAQ7U,EAAYluB,QAAU,EAE9B2d,EAAe,8CACSolB,EAAK,4FAElBN,EAAK,qDAClBC,EAAQ74B,KAAK,MAAK,qBAClB+4B,EAAI,GAAE,0DACNC,EAAS,qBACTD,EAAI,GAAE,+EAIV,OAAO,EAAP,KACKP,GAAqB,CACxBrvB,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3EpG,aAAY,GAEhB,EAEEwO,EAAiB,SAACnL,GAEtB,IAAKA,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,+BAGlB,IAA8C,IAA1C,EAAAi5B,aAAa/4B,QAAQkhB,EAAO,GAAGrf,MACjC,MAAM,IAAI/B,MAAM,sBAEpB,EAEa,EAAAsqB,UACT,SAACgC,EAAyClL,EAAkB7U,GAE1D,OAAO61B,EAAO9V,EAAkBlL,EAAQ7U,EAAY,aADzB,WAAgB,OAAC,eAAgB,yBAA0B,GAA3C,GAE7C,EAES,EAAA4d,WACT,SAACmC,EAAyClL,EAAkB7U,GAW1D,OAAO61B,EAAO9V,EAAkBlL,EAAQ7U,EAAY,cAVzB,SAAC6U,EAAkBuhB,GAE5C,IADA,IAAI5/B,EAAO,EACFmgC,EAAI,EAAGA,EAAI9hB,EAAO,GAAGnf,KAAK7B,OAAQ8iC,KACrCP,EAAKziC,QAAQgjC,IAAM,GAAqB,IAAhBP,EAAKviC,UAC/B2C,GAAQqe,EAAO,GAAGnf,KAAKihC,IAI3B,MAAO,CAAC,eAAgB,yBAA0B,mBAAYngC,EAAI,MACpE,GAEF,EAES,EAAAmnB,UACT,SAACoC,EAAyClL,EAAkB7U,GAW1D,OAAO61B,EAAO9V,EAAkBlL,EAAQ7U,EAAY,aAVzB,SAAC6U,EAAkBuhB,GAE5C,IADA,IAAMS,EAAU,GACPF,EAAI,EAAGA,EAAI9hB,EAAO,GAAGnf,KAAK7B,OAAQ8iC,KACrCP,EAAKziC,QAAQgjC,IAAM,GAAqB,IAAhBP,EAAKviC,SAC/BgjC,EAAQ/iC,KAAK,mBAAY6iC,EAAC,WAI9B,MAAO,CAAC,UAAGE,EAAQn5B,KAAK,MAAK,2BAA2B,oCAAqC,GAC/F,GAEF,EAES,EAAAmgB,UACT,SAACkC,EAAyClL,EAAkB7U,GAW1D,OAAO61B,EAAO9V,EAAkBlL,EAAQ7U,EAAY,aAVzB,SAAC6U,EAAkBuhB,GAE5C,IADA,IAAMS,EAAU,GACPF,EAAI,EAAGA,EAAI9hB,EAAO,GAAGnf,KAAK7B,OAAQ8iC,KACrCP,EAAKziC,QAAQgjC,IAAM,GAAqB,IAAhBP,EAAKviC,SAC/BgjC,EAAQ/iC,KAAK,mBAAY6iC,EAAC,WAI9B,MAAO,CAAC,UAAGE,EAAQn5B,KAAK,MAAK,2BAA2B,oCAAqC,GAC/F,GAEF,EAES,EAAAogB,WACT,SAACiC,EAAyClL,EAAkB7U,GAE1D,OAAO61B,EAAO9V,EAAkBlL,EAAQ7U,EAAY,cADzB,WAAgB,OAAC,eAAgB,yBAA0B,GAA3C,GAE7C,EAES,EAAAyd,aACT,SAACsC,EAAyClL,EAAkB7U,GAE1D,OAAO61B,EAAO9V,EAAkBlL,EAAQ7U,EAAY,gBADzB,WAAgB,OAAC,eAAgB,yBAA0B,sBAA3C,GAE7C,EAES,EAAAge,mBACT,SAAC+B,EAAyClL,EAAkB7U,GAE1D,OAAO61B,EAAO9V,EAAkBlL,EAAQ7U,EAAY,sBADzB,WAAgB,OAAC,wBAAyB,oCAAqC,GAA/D,GAE7C,C,+YC7KJ,cACA,UAEA,UAEA,UAyEa,EAAAsY,uCACT,SAACjd,EAAgCy7B,EAAiBC,GAChD,IAAMnU,EAzEiC,SAACmU,GAC1C,OAAE9jC,KAAM,mBAAoB6hB,WAAY,CAAC,EAAAgB,YAAYC,QAAS/Z,WAAY,CAAC,KAAMkZ,UAAW,UAAG6hB,GAA/F,CAwEmBC,CAAqCD,GACtD,OAAO,EAAP,KAAWnU,GAAQ,CAAEvsB,IAAK,WAAM,OAtElC,SAACgF,EAAgCy7B,EAAiBlU,EAA2BmU,GAMvE,IAJA,IAAME,EAAeH,EAAQphC,KACvByiB,EAAsB4e,EAExBG,EAAW,GACNxjC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIyjC,EAAe,GACnB,OAAQzjC,GACN,KAAK,EACHyjC,EAAe,qBACf,MACF,KAAK,EACHA,EAAe,4CACf,MACF,KAAK,EACHA,EAAe,4CACf,MACF,KAAK,EACHA,EAAe,8CACf,MACF,QACE,MAAM,IAAI1jC,MAGdyjC,GAAY,oBACdC,EAAY,qBACZzjC,EAAI,EAAI,sDAAwD,GAAE,qPAMzDA,EAAC,wFAEVA,EAAI,EAAI,IAAM,GAAE,W,CAGhB,IAwEsB2T,EACxBa,EACAH,EACAuE,EACAlE,EA5EQ3B,GAAO,IAAAC,SAAQrL,EAAQ0C,QAAQ7K,QAAQuR,UAAUkC,SAEjD6K,EAAe,mBAsECnK,EArED4vB,EAsEvB/uB,EAAU,EAAAkC,UAAU0N,eAAezQ,GACnCU,EAAS,CAAC,IAAK,IAAK,KACpBuE,EAAQ,QACRlE,EAAyBF,EACKnL,KAAI,SAAClF,EAAQnE,GACZ,IAAM2U,EAAQ,cAAON,EAAOrU,GAAE,cAAM4Y,EAAK,cAAMzU,GACzCyQ,EAAQ5U,IAAMwU,EAAQrU,OAAS,EACjC,cAAOkU,EAAOrU,EAAI,GAAE,cAAM4Y,EAAK,cAAMvE,EAAOrU,GAAE,cAAMmE,GACpD,mBAAYkQ,EAAOrU,GAAE,cAAMmE,GAC/B,MAAO,UAAGwQ,EAAK,aAAKC,EAAK,IAC3B,IACC5K,KAAK,IAElC,2EAED0K,EAAsB,8CArFc,mBA2F5C,SAAiCf,GAC/B,IAAMa,EAAU,EAAAkC,UAAU0N,eAAezQ,GAEzC,MAAO,sGAGea,EAAQ,GAAE,yBAAiBA,EAAQ,GAAE,sBAG7D,CAnGQkvB,CAAwBjf,GAAoB,oBAC5C,IAAAkL,qBAAmB,iKAQNlL,EAAoB,GAAE,iCACtBA,EAAoB,GAAE,wBAEjC+e,EAAQ,qBACRzwB,EAAKI,OAAM,6BAIX,OAAO,EAAP,KACK+b,GAAQ,CACX/b,OAAQ,CAACnR,KAAMyiB,EAAqB3iB,KAAMshC,EAAQthC,KAAMif,YAAa,EAAAqB,YAAYC,QACjFvE,aAAY,EACZC,SAAS,GAEb,CAK8B4lB,CAAiCh8B,EAASy7B,EAASlU,EAAUmU,EAA7D,GAClC,EAEJ,yBAA8B1vB,GAC5B,GAAqB,IAAjBA,EAAMxT,OACR,MAAO,CAAC,EAAG,EAAG,GAIhB,IADA,IAAIyjC,EAAQ,EACH5jC,EAAI,EAAGA,EAAI2T,EAAMxT,OAAS,IAAKH,EACtC4jC,GAASjwB,EAAM3T,GAEjB,MAAO,CAAC4jC,EAAOjwB,EAAMxT,OAAS,EAAIwT,EAAMA,EAAMxT,OAAS,GAAK,EAAGwT,EAAMA,EAAMxT,OAAS,GACtF,EAaA,0BAA+B6B,EAAyBgiB,GAWtD,OAToB,IAAhBhiB,EAAK7B,QAAwC,IAAxB6jB,EAAa7jB,SAE3B6B,EAAK7B,OAAS,GAAK6jB,EAAa7jB,OAAS,EACjC6B,EAAKA,EAAK7B,OAAS,KAAO6jB,EAAaA,EAAa7jB,OAAS,GAE7D6B,EAAKA,EAAK7B,OAAS,KAAO6jB,EAAaA,EAAa7jB,OAAS,IAC1E6B,EAAKA,EAAK7B,OAAS,KAAO6jB,EAAaA,EAAa7jB,OAAS,GAIrE,C,sGCvHA,cAGa,EAAAsH,QAAU,SAACE,EAAgCwZ,GACtD,IAAM6C,EAAe,EAAAtN,UAAUmtB,sBAAsB1iB,EAAO,GAAGnf,KAAMmf,EAAO,GAAG+d,aAC/E,OAAIv3B,EAAQ0C,QAAQyG,KACX,CAACnJ,EAAQ0c,cAAclD,EAAO,GAAI6C,IAElC,CAACrc,EAAQmc,gBAAgB3C,EAAO,GAAI6C,GAE/C,C,irBCRA,cAEA,UACA,SAEA,UACA,UAEM8f,EAAwB,CAC5BvkC,KAAM,SACN+I,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAYC,SAGd,EAAAmI,OACT,SAAC6B,EAAyClL,EAAkB7U,GAS1D,OARA,IAAAggB,gBAAenL,EAAQ7U,GAQhB,CAPQ+f,EAAiB7jB,IAAI,EAAD,KAE1Bs7B,GAAqB,CACxBtiB,UAAWlV,EAAWigB,SACtB5pB,IAAK,WAAM,OAAAohC,EAA8B1X,EAAkBlL,EAAQ7U,EAAxD,IAEb6U,GAEN,EAES,EAAAsJ,yBACT,SAACjQ,GAAyC,WAAAwpB,yBAAwBxpB,EAAM,GAA9B,EAEjC,EAAAkQ,yBACT,SAAClQ,GAAyC,WAAAwpB,yBAAwBxpB,EAAM,GAA9B,EAE9C,IAAMupB,EACF,SAAC1X,EAAyClL,EAAkB7U,GAC1D,IAAMyG,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ7K,QAAQuR,UAAUkC,SAC1D,IAAwBgxB,EAAc9iB,EAAQ7U,GAAW,GAAxD43B,EAAM,KAAE7V,EAAW,KAI1B,GADI6V,EAAOC,OAAM,SAACh1B,GAAc,OAAM,IAANA,CAAA,KAAmD,uBAAvC7C,EAAW83B,wBAErD,OAAO,EAAP,KACKN,GAAqB,CACxB3wB,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAYC,QAC3EtE,SAAS,EACTD,aAAc,sDACO/K,EAAK8B,UAAS,gDACvB9B,EAAKI,OAAM,8BAK3B,IAAMpQ,EAAMsrB,EAAYluB,OACxB,GAAI4C,EAAM,EACR,MAAM,IAAIhD,MAAM,yDAAkDgD,IAGpE,IAAMshC,EAAehW,EAAYtrB,EAAM,GACjCuhC,EAAcjW,EAAYtrB,EAAM,GAEhCssB,EAAalO,EAAO,GAAGnf,KAC7B,GAAIe,IAAQssB,EAAWlvB,OACrB,MAAM,IAAIJ,MAAM,8CAAuCsvB,EAAWlvB,OAAM,qBAAa4C,IAEvF,IAAMwhC,EAAclV,EAAWtsB,EAAM,GAC/ByhC,EAAanV,EAAWtsB,EAAM,GAE9B0hC,EAAeP,EAAOnhC,EAAM,GAC5B2hC,EAAcR,EAAOnhC,EAAM,GAE7B4hC,EAAqB,GAEzB,GAAwB,WAApBr4B,EAAWiqB,KAEb,MAAM,IAAIx2B,MAAM,kDAA2CuM,EAAWiqB,KAAI,MAE5E,OAAQjqB,EAAW83B,yBACjB,IAAK,aACHO,EAAqB,mKAKrB,MACF,IAAK,aACHA,EAAqB,iLAKrB,MACF,IAAK,qBACHA,EAAqB,iMAIDL,EAAW,gGACXD,EAAY,gGACZC,EAAW,gGACXD,EAAY,iIAIhC,MACF,IAAK,gBACHM,EAAqB,qHAEeL,EAAW,qBAAaD,EAAY,qBAAaC,EAAW,kDAC5ED,EAAY,oEACKG,EAAU,qBAAaD,EAAW,qBAAaC,EAAU,kDAC1ED,EAAW,+KAK/B,MACF,QAEE,MAAM,IAAIxkC,MAAM,qGACSuM,EAAW83B,wBAAuB,MAG/D,IAAMjI,GAAiB,IAAAhmB,mBAAkBpT,GACnC2sB,GAAgB,IAAAC,qBAChB7R,EAAe,kDACaymB,EAAW,eAAOC,EAAU,+DACpBC,EAAY,oBAAYC,EAAW,oBAAYD,EAAY,oBACjGC,EAAW,4BACPhV,EAAa,yBACbiV,EAAkB,wMAKdxI,EAAc,68BAiBWkI,EAAe,EAAC,uDAChBC,EAAc,EAAC,8rEAsCxCvxB,EAAKI,OAAM,+CAGvB,OAAO,EAAP,KACK2wB,GAAqB,CACxB3wB,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAYC,QAC3EtE,SAAS,EACTD,aAAY,GAEhB,EAGEmmB,EAAgB,SAAC9iB,EAAkB7U,GACvC,IAIIs4B,EAHExJ,EADIja,EAAO,GACDnf,KAEZkiC,EAAS53B,EAAW43B,OAExB,GAAsB,IAAlBA,EAAO/jC,OAAc,CACvB,IAAM0kC,EAAe1jB,EAAO7U,EAAWw4B,gBACvC,GAAID,GAAsC,IAAtBA,EAAa/hC,KAAY,CAC3C,GAAIqe,EAAO7U,EAAWy4B,eACpB,MAAM,IAAIhlC,MAAM,0DAElBmkC,EAASc,EAAgBH,EAAcv4B,EAAWiqB,KAAMjqB,EAAW24B,S,KAC9D,CACL,IAAMC,EAAc/jB,EAAO7U,EAAWy4B,eACtC,IAAKG,GAAoC,IAArBA,EAAYpiC,KAC9B,MAAM,IAAI/C,MAAM,qDAGlB6kC,EAAcpiC,MAAML,KAAK+iC,EAAYhG,aACrCgF,EAASiB,EAA8BP,EAAaxJ,EAAO9uB,EAAWiqB,KAAMjqB,EAAW24B,S,OAGzF,GAAI9jB,EAAO7U,EAAWy4B,eACpB,MAAM,IAAIhlC,MAAM,0DAIpB,IAAMqlC,EAAQR,GAAgBxJ,EAAM/xB,KAAI,SAACtG,EAAK/C,GAAM,OAAAqL,KAAKyc,MAAM/kB,EAAMmhC,EAAOlkC,GAAxB,IAEpD,MAAO,CAACkkC,EAAQkB,EAClB,EAEMJ,EAAkB,SAACjY,EAAewJ,EAAc0O,GACpD,IAAMf,EAAS1hC,MAAML,KAAK4qB,EAAMoS,WAEhC,OADA,IAAAkG,kBAAiBnB,EAAQ3N,EAAM0O,GACxBf,CACT,EAEMiB,EACF,SAACC,EAA0BhK,EAA0B7E,EAAc0O,GAIjE,IAHA,IAAM9kC,EAASi7B,EAAMj7B,OACf+jC,EAAS,IAAI1hC,MAAcrC,GAExBH,EAAI,EAAGslC,EAAMnlC,EAAQH,EAAIslC,EAAKtlC,IACrC,GAAiB,IAAbo7B,EAAMp7B,GAAU,CAClB,GAAiB,IAAbolC,EAAMplC,GACR,MAAM,IAAID,MAAM,0DAElBmkC,EAAOlkC,GAAK,C,MAEZkkC,EAAOlkC,GAAKolC,EAAMplC,GAAKo7B,EAAMp7B,GAIjC,OADA,IAAAqlC,kBAAiBnB,EAAQ3N,EAAM0O,GACxBf,CACT,C,mGCrQJ,cAGa,EAAAvwB,MAAQ,SAAC0Y,EAAyClL,GAE7D,OADAmL,EAAenL,GACR,CAAC,IAAI,EAAAzf,OAAO,CAACyf,EAAO,GAAGnf,KAAK7B,QAAS,aAASL,OAAWA,EAAW,IAAIuB,WAAW8f,EAAO,GAAGnf,OACtG,EAEA,IAAMsqB,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,0BAEpB,C,+WCZA,cAEA,UAEA,UAEA,UAQMwlC,EAAuB,CAC3BhmC,KAAM,QACN+I,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,WAGd,EAAAlM,MACT,SAACqU,EAAyClL,EAAkB7U,GAS1D,OARAggB,EAAenL,GAQR,CAPQkL,EAAiB7jB,IAAI,EAAD,KAE1B+8B,GAAoB,CACvB/jB,UAAWlV,EAAWigB,SACtB5pB,IAAK,WAAM,OAAA6iC,EAAuBnZ,EAAkBlL,EAAO,GAAI7U,EAApD,IAEb6U,GAEN,EAES,EAAA2J,qBAAgE,SAACtQ,GAC5E,IAAMirB,EAASjrB,EAAKlO,WAAWe,QAAQ,UACjCq4B,EAAOlrB,EAAKlO,WAAWe,QAAQ,QAC/Bq1B,EAAOloB,EAAKlO,WAAWe,QAAQ,OAAQ,IAC7C,OAAO,IAAArB,6BAA4B,CAACy5B,OAAM,EAAEC,KAAI,EAAEhD,KAAI,GACxD,EAEA,IAAM8C,EACF,SAACnZ,EAAyCtI,EAAezX,GAmBvD,IAlBA,IAAMo2B,EAAmC,IAA3Bp2B,EAAWo2B,KAAKviC,OAAgB4jB,EAAM/hB,KAAKgW,MAAM,GAAG3O,KAAI,SAACs8B,EAAK3lC,GAAM,OAAAA,CAAA,IAAKsM,EAAWo2B,KAC5FkD,EAAiB,EAAAlvB,UAAUosB,cAAcJ,EAAM3e,EAAM/hB,KAAK7B,QAC1DslC,EAASn5B,EAAWm5B,OAAOp8B,KAAI,SAACs3B,EAAO3gC,GAC3C,OAAI2gC,EAAQ5c,EAAM/hB,KAAK4jC,EAAe5lC,IAAM,EACnC+jB,EAAM/hB,KAAK4jC,EAAe5lC,IAE5B,EAAA0W,UAAUgiB,cAAciI,EAAO5c,EAAM/hB,KAAK4jC,EAAe5lC,IAClE,IACM0lC,EAAOp5B,EAAWo5B,KAAKr8B,KAAI,SAACi8B,EAAKtlC,GACrC,OAAIslC,EAAMvhB,EAAM/hB,KAAK4jC,EAAe5lC,IAAM,EACjC+jB,EAAM/hB,KAAK4jC,EAAe5lC,IAE5B,EAAA0W,UAAUgiB,cAAc4M,EAAKvhB,EAAM/hB,KAAK4jC,EAAe5lC,IAChE,IAEMquB,EAActK,EAAM/hB,KAAKgW,QAEzB6tB,EAAqB,GAClB7lC,EAAI,EAAGA,EAAI4lC,EAAezlC,OAAQH,IACzCquB,EAAYuX,EAAe5lC,IAAM0lC,EAAK1lC,GAAKylC,EAAOzlC,GAC9CylC,EAAOzlC,GAAK,GACd6lC,EAASzlC,KAAK,oBAAawlC,EAAe5lC,GAAE,gBAAQylC,EAAOzlC,GAAE,MAIjE,IAAMuU,EAAO8Z,EAAYluB,OACnB2d,EAAe,8CACSvJ,EAAI,yBAC9BsxB,EAAS77B,KAAK,YAAW,4CAG7B,OAAO,EAAP,KACKu7B,GAAoB,CACvBpyB,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMiiB,EAAMjiB,KAAMif,YAAa,EAAAqB,YAAY8B,UACvEpG,aAAY,GAEhB,EAEEwO,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,2BAElB,IAA8C,IAA1C,EAAAi5B,aAAa/4B,QAAQkhB,EAAO,GAAGrf,MACjC,MAAM,IAAI/B,MAAM,sBAEpB,EAEa,EAAA8qB,SAAW,SAACwB,EAAyClL,GAChE2kB,EAAkB3kB,GAClB,IAAM7U,EAAay5B,EAAkC1Z,EAAkBlL,GAQvE,MAAO,CAPQkL,EAAiB7jB,IAAI,EAAD,KAE1B+8B,GAAoB,CACvB/jB,UAAWlV,EAAWigB,SACtB5pB,IAAK,WAAM,OAAA6iC,EAAuBnZ,EAAkBlL,EAAO,GAAI7U,EAApD,IAEb,CAAC6U,EAAO,KAEd,EAEA,IAAM4kB,EACF,SAAC1Z,EAAyClL,GACxC,IAAKkL,EAAiBhiB,QAAQ+a,cAAcjE,EAAO,GAAGqB,UACjD6J,EAAiBhiB,QAAQ+a,cAAcjE,EAAO,GAAGqB,SACjDrB,EAAOhhB,QAAU,IAAMksB,EAAiBhiB,QAAQ+a,cAAcjE,EAAO,GAAGqB,SACxErB,EAAOhhB,QAAU,IAAMksB,EAAiBhiB,QAAQ+a,cAAcjE,EAAO,GAAGqB,QAC3E,MAAM,IAAIziB,MAAM,4CAGlB,GAAIohB,EAAOhhB,QAAU,GAAKghB,EAAO,GAAG+d,YAAY8G,MAAK,SAAChmC,GAAc,OAAM,IAANA,CAAA,IAClE,MAAM,IAAID,MAAM,oDAGlB,IAAM0lC,EAASjjC,MAAML,KAAKgf,EAAO,GAAG+d,aAC9BwG,EAAOljC,MAAML,KAAKgf,EAAO,GAAG+d,aAC5BwD,EAAOvhB,EAAOhhB,QAAU,EAAIqC,MAAML,KAAKgf,EAAO,GAAG+d,aAAe,GAEtE,MAAO,CAACuG,OAAM,EAAEC,KAAI,EAAEhD,KAAI,EAAEnW,SADX,UAAGmW,EAAI,YAAI+C,EAAM,YAAIC,GAExC,EAEEI,EAAoB,SAAC3kB,GACzB,IAAKA,GAAUA,EAAOhhB,OAAS,GAAKghB,EAAOhhB,OAAS,EAClD,MAAM,IAAIJ,MAAM,yBAElB,GAAuB,UAAnBohB,EAAO,GAAGrf,MAA8C,IAA1Bqf,EAAO,GAAGnf,KAAK7B,OAC/C,MAAM,IAAIJ,MAAM,uBAElB,GAAuB,UAAnBohB,EAAO,GAAGrf,MAA8C,IAA1Bqf,EAAO,GAAGnf,KAAK7B,OAC/C,MAAM,IAAIJ,MAAM,uBAElB,GAAIohB,EAAOhhB,QAAU,IAAyB,UAAnBghB,EAAO,GAAGrf,MAA8C,IAA1Bqf,EAAO,GAAGnf,KAAK7B,QACtE,MAAM,IAAIJ,MAAM,uBAElB,GAAIohB,EAAOhhB,QAAU,IAAyB,UAAnBghB,EAAO,GAAGrf,MAA8C,IAA1Bqf,EAAO,GAAGnf,KAAK7B,QACtE,MAAM,IAAIJ,MAAM,sBAEpB,C,6rBC1IA,cAIA,UACA,UAEA,UAEA,UAMMkmC,EAAmC,CACvC1mC,KAAM,oBACN+I,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,WAGrBgiB,EAAqC,CACzC3mC,KAAM,sBACN+I,WAAY,CAAC,IAAK,OAClB8Y,WAAY,CAAC,EAAAgB,YAAY8B,SAAU,EAAA9B,YAAY8B,WAG3CiiB,EAAyB,CAC7B5mC,KAAM,UACN+I,WAAY,CAAC,IAAK,MAAO,QACzB8Y,WAAY,CAAC,EAAAgB,YAAY8B,SAAU,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAY8B,WAG1D,EAAA6G,QACT,SAACsB,EAAyClL,EAAkB7U,GAC1DggB,EAAenL,GAEf,IAAMkO,EAAalO,EAAO,GAAGnf,KAAKgW,QAC5BoX,EAAO,EAAA1Y,UAAUgiB,cAAcpsB,EAAW8iB,KAAMC,EAAWlvB,QAC3DimC,EAAkB,EAAA1vB,UAAU2vB,gBAAgBhX,EAAYD,GACxDkX,EAAe,EAAA5vB,UAAU6vB,kBAAkBlX,EAAYD,GAG7D,OADeoX,EAAena,EAAkBlL,EAAQ7U,EAAY85B,EAAiBE,EAEvF,EAES,EAAAtb,uBACT,SAACxQ,GAAwC,WAAAxO,6BAA4B,CAACojB,KAAM5U,EAAKlO,WAAWW,OAAO,OAAQ,IAAlE,EAEhC,EAAAie,0BACT,SAAC1Q,GAAwC,WAAAxO,6BAA4B,CAACojB,KAAM5U,EAAKlO,WAAWW,OAAO,QAAS,IAAnE,EAQhC,EAAAge,WACT,SAACoB,EAAyClL,EAAkB7U,GAC1DggB,EAAenL,GAEf,IAQIslB,EAREpX,EAAalO,EAAO,GAAGnf,KAAKgW,QAC5BoX,EAAO,EAAA1Y,UAAUgiB,cAAcpsB,EAAW8iB,KAAMC,EAAWlvB,QAC3DoU,EAAO8a,EAAWlvB,OAElBumC,EAAuBtX,IAAS7a,EAAO,EACvCoyB,EAAiC,GACnChQ,EAAiB,GACjBiQ,EAA6B,GAG7BF,KACF/P,EAAOn0B,MAAML,KAAK,CAAChC,OAAQoU,IAAOlL,KAAI,SAACw9B,EAAG7mC,GAAM,OAAAA,CAAA,KAG3CovB,GAAQ7a,EAAO,EACpBoiB,EAAKpiB,EAAO,GAAK6a,EAEjBuH,EAAKttB,KAAI,SAAAy9B,GAAK,OAAAH,EAAqBvmC,KAAKivB,EAAWyX,GAArC,IAEdL,GAAqB,IAAAz6B,6BAA4B,CAAC2qB,KAAI,IACtDiQ,GAAmB,IAAA3sB,WAAUoS,EAAkBlL,EAAQslB,IAGzD,IAAML,EAAkBM,EAAsB,EAAAhwB,UAAU2vB,gBAAgBM,EAAsBpyB,EAAO,GACvD,EAAAmC,UAAU2vB,gBAAgBhX,EAAY9a,EAAO,GACrF+xB,EAAeI,EAAsB,EAAAhwB,UAAU6vB,kBAAkBI,EAAsBpyB,EAAO,GACzD,EAAAmC,UAAU6vB,kBAAkBlX,EAAY9a,EAAO,GAEpFpB,EAASqzB,EACXna,EAAkBqa,EAAsBE,EAAmBzlB,EAAQ7U,EAAY85B,EAAiBE,GAEpG,OAAII,GACqB,IAAAzsB,WAAUoS,EAAkBlZ,EAAQszB,GAGpDtzB,CAEX,EAEJ,IAAMqzB,EACF,SAACna,EAAyClL,EAAkB7U,EAA+B85B,EAC1FE,GACC,IAAMS,EACFC,EAA4B3a,EAAkBlL,EAAO,GAAIilB,EAAiBE,EAAc,CAACF,IACvFa,EAAM5a,EAAiB7jB,IAAI,EAAD,KACxBy9B,GAAgC,CAAEzkB,UAAWlV,EAAWigB,SAAU5pB,IAAK,WAAM,OAAAokC,CAAA,IACjF5lB,GAEE+lB,EAA0BC,EAC5B9a,EAAkBlL,EAAO,GAAIilB,EAAiBE,EAAcS,EAAsB5zB,OAAOnR,KACzF,CAACokC,IACCrZ,EAAQV,EAAiB7jB,IAAI,EAAD,KAC1B09B,GAAkC,CAAE1kB,UAAWlV,EAAWigB,SAAU5pB,IAAK,WAAM,OAAAukC,CAAA,IACnF,CAAC/lB,EAAO,GAAI8lB,IAEVG,EAAqBC,EACvBhb,EAAkBlL,EAAO,GAAIilB,EAAiBE,EAAcS,EAAsB5zB,OAAOnR,KACzFklC,EAAwB/zB,OAAOnR,MAInC,MAAO,CAHQqqB,EAAiB7jB,IAAI,EAAD,KAC3B29B,GAAsB,CAAE3kB,UAAWlV,EAAWigB,SAAU5pB,IAAK,WAAM,OAAAykC,CAAA,IACvE,CAACjmB,EAAO,GAAI8lB,EAAKla,IAEvB,EAKEia,EACF,SAAC3a,EAAyCtI,EAAeqiB,EAAyBE,EACjFjY,GACO,QACFhC,EAAiBvL,+BAA+BiD,EAAM/hB,KAAM,EAAAogB,YAAY8B,UAAS,GAD9EuX,EAAY,KAAEC,EAAa,KAE5BnnB,EAAO8Z,EAAYluB,OAEzB,GAAIimC,EAAkB,GAAKE,EAAe,EACxC,MAAM,IAAIvmC,MAAM,8EAGlB,GAA2B,IAAvBsuB,EAAYluB,OACd,MAAM,IAAIJ,MAAM,4CAGlB,GAAIsuB,EAAY,KAAO+X,EACrB,MAAM,IAAIrmC,MAAM,4DAGlB,IAAMgT,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ7K,QAAQuR,UAAUkC,SAC1D6K,EAAe,oCACDvJ,EAAI,6EACwB+xB,EAAY,oDAE5BvzB,EAAK8B,UAAS,wDAAgD4mB,EAAY,sBACtGC,EAAa,yCACE4K,EAAY,wEAEOvzB,EAAK8B,UAAS,yEAC5C4mB,EAAY,aAAKC,EAAa,0GAOtC,OAAO,EAAP,KACKuK,GAAgC,CACnC9yB,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMiiB,EAAMjiB,KAAMif,YAAa,EAAAqB,YAAY8B,UACvEpG,aAAY,GAEhB,EAKEqpB,EACF,SAAC9a,EAAyCtI,EAAeqiB,EAAyBE,EACjFgB,EAA4CjZ,GACrC,QACFhC,EAAiBvL,+BAA+BiD,EAAM/hB,KAAM,EAAAogB,YAAY8B,UAAS,GAD9EuX,EAAY,KAAEC,EAAa,KAE5BnnB,EAAO8Z,EAAYluB,OAEzB,GAAIimC,EAAkB,GAAKE,EAAe,EACxC,MAAM,IAAIvmC,MAAM,8EAGlB,GAA2B,IAAvBsuB,EAAYluB,OACd,MAAM,IAAIJ,MAAM,4CAGlB,GAAIsuB,EAAY,KAAO+X,EACrB,MAAM,IAAIrmC,MAAM,4DAGlB,GAAuC,IAAnCunC,EAAwBnnC,OAC1B,MAAM,IAAIJ,MAAM,0DAGlB,GAAIunC,EAAwB,KAAOlB,EACjC,MAAM,IAAIrmC,MAAM,0EAGlB,IAAMgT,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ7K,QAAQuR,UAAUkC,SAC1D6K,EAAe,oCACDvJ,EAAI,6EACwB+xB,EAAY,6GAIzCA,EAAY,2EAEUvzB,EAAK8B,UAAS,yEAC/C4mB,EAAY,aAAKC,EAAa,kEAKtC,OAAO,EAAP,KACKwK,GAAkC,CACrC/yB,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMiiB,EAAMjiB,KAAMif,YAAa,EAAAqB,YAAY8B,UACvEpG,aAAY,GAEhB,EAEEupB,EACF,SAAChb,EAAyCtI,EAAeqiB,EAAyBE,EACjFgB,EAA4CC,GACrC,QACFlb,EAAiBvL,+BAA+BiD,EAAM/hB,KAAM,EAAAogB,YAAY8B,UAAS,GAD9EuX,EAAY,KAAEC,EAAa,KAE5BnnB,EAAOwP,EAAM/hB,KAAK7B,OAExB,GAAIimC,EAAkB,GAAKE,EAAe,EACxC,MAAM,IAAIvmC,MAAM,8EAGlB,GAAuC,IAAnCunC,EAAwBnnC,QAAsD,IAAtConC,EAA2BpnC,OACrE,MAAM,IAAIJ,MAAM,0DAGlB,GAAIunC,EAAwB,KAAOlB,GAAmBmB,EAA2B,KAAOnB,EACtF,MAAM,IAAIrmC,MAAM,0EAGlB,IAAM+d,EAAe,oCACDvJ,EAAI,0KAGiBknB,EAAY,aAAKC,EAAa,0IAIrC4K,EAAY,uTAY9C,OAAO,EAAP,KACKH,GAAsB,CACzBhzB,OAAQ,CAACnR,KAAM+hB,EAAM/hB,KAAMF,KAAMiiB,EAAMjiB,KAAMif,YAAa,EAAAqB,YAAY8B,UACtEpG,aAAY,GAEhB,EAEEwO,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,6BAGlB,GAAuB,YAAnBohB,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,KAC5C,MAAM,IAAI/B,MAAM,qBAEpB,C,gpBCtRA,cAIA,UAEA,UAQMynC,EAAuB,CAC3BjoC,KAAM,QACN+I,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,WAGd,EAAA1H,MACT,SAAC6P,EAAyClL,EAAkB7U,GAC1DggB,EAAenL,GAKf,IAHA,IAAMiO,EAAO,EAAA1Y,UAAUgiB,cAAcpsB,EAAW8iB,KAAMjO,EAAO,GAAGnf,KAAK7B,QAC/DsnC,EAAQC,EAAgBrb,EAAkBlL,EAAQiO,EAAM9iB,GACxD6G,EAAmB,G,WAChBnT,GACPmT,EAAO/S,KAAKisB,EAAiB7jB,IAAI,EAAD,KAEvBg/B,GAAoB,CACvBhmB,UAAW,UAAGlV,EAAWigB,SAAQ,YAAIvsB,GACrC2C,IAAK,WAAM,OAAAglC,EAAuBtb,EAAkBlL,EAAO,GAAI7U,EAAY8iB,EAAMpvB,EAAtE,IAEbmhB,G,EAPGnhB,EAAI,EAAGA,EAAIynC,IAASznC,E,EAApBA,GAUT,OAAOmT,CACT,EAES,EAAAgY,qBAAgE,SAAC3Q,GAC5E,IAAM4U,EAAO5U,EAAKlO,WAAWW,OAAO,OAAQ,GACtCuP,EAAQhC,EAAKlO,WAAWe,QAAQ,QAAS,IACzCu6B,EAAaptB,EAAKqtB,QAAQ1nC,OAChC,OAAO,IAAA6L,6BAA4B,CAACojB,KAAI,EAAE5S,MAAK,EAAEorB,WAAU,GAC7D,EAEA,IAAMF,EACF,SAACrb,EAAyClL,EAAkBiO,EAAc9iB,GAExE,OADM,EAAc,EAAAw7B,UAAUC,WAAW5mB,EAAO,GAAGnf,KAAMotB,EAAM9iB,EAAWkQ,MAAOlQ,EAAWs7B,YAAW,GAAvF,GACDznC,MACjB,EAEEwnC,EACF,SAACtb,EAAyCtI,EAAezX,EAA6B8iB,EAAcxW,GAExF,QAAoB,EAAAkvB,UAAUC,WAAWhkB,EAAM/hB,KAAMotB,EAAM9iB,EAAWkQ,MAAOlQ,EAAWs7B,YAAW,GAAlGhY,EAAM,KACPoY,EADgB,KACCpvB,GACjByV,EAAcuB,EAAOhX,GACrBrE,EAAO8Z,EAAYluB,OACnB2d,EAAe,4CACGvJ,EAAI,iCACpB6a,EAAI,gBAAQ4Y,EAAM,iDAI1B,OAAO,EAAP,KACKR,GAAoB,CACvBhmB,UAAW,UAAGlV,EAAWigB,SAAQ,YAAI3T,GACrCzF,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMiiB,EAAMjiB,KAAMif,YAAa,EAAAqB,YAAY8B,UACvEpG,aAAY,GAEhB,EAEFwO,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,6BAGlB,GAAuB,SAAnBohB,EAAO,GAAGrf,MAAsC,UAAnBqf,EAAO,GAAGrf,MAAuC,UAAnBqf,EAAO,GAAGrf,MAClD,WAAnBqf,EAAO,GAAGrf,MAAwC,UAAnBqf,EAAO,GAAGrf,MAAuC,WAAnBqf,EAAO,GAAGrf,MACpD,YAAnBqf,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,MAAyC,SAAnBqf,EAAO,GAAGrf,KAC5E,MAAM,IAAI/B,MAAM,sBAEpB,C,4ICjFA,cAGa,EAAAsrB,QACT,SAACgB,EAAyClL,EAAkBuhB,GAC1DpW,EAAenL,GACf,IAAMkN,EAAc,EAAA3X,UAAUqC,aAAaoI,EAAO,GAAGnf,KAAM0gC,GAE3D,MAAO,CADQrW,EAAiBvI,gBAAgB3C,EAAO,GAAIkN,GAE7D,EAES,EAAA9C,WAAa,SAACc,EAAyClL,GAElE,OADA8mB,EAAkB9mB,IACX,IAAAkK,SAAQgB,EAAkB,CAAClL,EAAO,IAAK3e,MAAML,KAAKgf,EAAO,GAAG+d,aACrE,EAEa,EAAA5T,uBAA2D,SAAC9Q,GACrE,OAAAA,EAAKlO,WAAWe,QAAQ,OAAxB,EAEJ,IAAMif,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,6BAGlB,GAAuB,WAAnBohB,EAAO,GAAGrf,KACZ,MAAM,IAAI/B,MAAM,8BAEpB,EAEMkoC,EAAoB,SAAC9mB,GACzB,IAAKA,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,8BAGlB,GAAuB,UAAnBohB,EAAO,GAAGrf,KACZ,MAAM,IAAI/B,MAAM,sBAEpB,C,2UCvCA,cAEA,UAEa,EAAAyrB,IAAM,SAACa,EAAyClL,GAC3DmL,EAAenL,GAEf,IAAM+mB,EAAqB,CACzB3oC,KAAM,MACN+I,WAAY6Y,EAAO9X,KAAI,SAAChB,EAAGrI,GAAM,iBAAIA,EAAJ,IACjCohB,WAAY,IAAI5e,MAAM2e,EAAOhhB,QAAQgvB,KAAK,EAAA/M,YAAY8B,WAKxD,MAAO,CAFQmI,EAAiB7jB,IAAI,EAAD,KAC3B0/B,GAAkB,CAAEvlC,IAAK,WAAM,OAAAwlC,EAAqB9b,EAAkBlL,EAAQ+mB,EAA/C,IAAqE/mB,GAE9G,EAEA,IAAMgnB,EACF,SAAC9b,EAAyClL,EAAkB+mB,GAC1D,IAAMn1B,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ7K,QAAQuR,UAAUkC,SAC1Dob,EAAclN,EAAO,GAAGnf,KAAKgW,QAC7BowB,EAAUjnB,EAAO9X,KAAI,SAAChB,EAAGrI,GAAM,gBAAG+S,EAAK8B,UAAS,aAAK7U,EAAC,cAAvB,IAAsCgK,KAAK,OAC1E8T,EAAe,uDAEHsqB,EAAO,sBACrBr1B,EAAKI,OAAM,6BAGf,OAAO,EAAP,KACK+0B,GAAkB,CACrB/0B,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3EnG,SAAS,EACTD,aAAY,GAEhB,EAEEwO,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,wBAIlB,IADA,IAAMI,EAASghB,EAAO,GAAGnf,KAAK7B,OACrBH,EAAI,EAAGA,EAAImhB,EAAOhhB,OAAQH,IAAK,CACtC,GAAIG,IAAWghB,EAAOnhB,GAAGgC,KAAK7B,OAC5B,MAAM,IAAIJ,MAAM,gCAGlB,IAAK,IAAIgH,EAAI,EAAGA,EAAI5G,EAAQ4G,IAC1B,GAAIoa,EAAO,GAAGnf,KAAK+E,KAAOoa,EAAOnhB,GAAGgC,KAAK+E,GACvC,MAAM,IAAIhH,MAAM,gC,CAKtB,GAAuB,YAAnBohB,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,KAC5C,MAAM,IAAI/B,MAAM,uBAElB,IAASC,EAAI,EAAGA,EAAImhB,EAAOhhB,OAAQH,IACjC,GAAImhB,EAAO,GAAGrf,OAASqf,EAAOnhB,GAAG8B,KAC/B,MAAM,IAAI/B,MAAM,+BAGtB,C,4UChEA,cAGA,UAEa,EAAA4rB,KAAO,SAACU,EAAyClL,GAC5DmL,EAAenL,GAEf,IAAMknB,EAAsB,CAC1B9oC,KAAM,OACN+I,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,WAM3B,MAAO,CAHQmI,EAAiB7jB,IAAI,EAAD,KAC3B6/B,GAAmB,CAAE1lC,IAAK,WAAM,OAAA2lC,EAAsBjc,EAAkBlL,EAAQknB,EAAhD,IACpClnB,GAEN,EAEA,IAAMmnB,EACF,SAAC3gC,EAAgCwZ,EAAkBknB,GAKjD,IAJA,IAAMhZ,EAAalO,EAAO,GAAGnf,KAAKgW,QAC5BqW,EAAc,IAAI7rB,MAAM6sB,EAAWlvB,QAEnCooC,EAAoB,GACjBvoC,EAAI,EAAGA,EAAIqvB,EAAWlvB,OAAQH,IACrCquB,EAAYruB,GAAKqvB,EAAWrvB,GAAKmhB,EAAO,GAAG0B,WAAW7iB,GACtDuoC,EAAQnoC,KAAK,mBAAYJ,EAAC,uCAA+BA,EAAC,eAAOqvB,EAAWrvB,GAAE,SAGhF,IAAMuU,EAAO8Z,EAAYluB,OACnB2d,EAAe,8CACSvJ,EAAI,sCACjBA,EAAI,uBACjBg0B,EAAQv+B,KAAK,MAAK,iDAItB,OAAO,EAAP,KACKq+B,GAAmB,CACtBl1B,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3EpG,aAAY,GAEhB,EAEEwO,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,0BAElB,GAA8B,IAA1BohB,EAAO,GAAGnf,KAAK7B,OACjB,MAAM,IAAIJ,MAAM,4CAElB,GAAIohB,EAAO,GAAGnf,KAAK,KAAOmf,EAAO,GAAGnf,KAAK7B,OACvC,MAAM,IAAIJ,MAAM,wBAElB,IAA8C,IAA1C,EAAAi5B,aAAa/4B,QAAQkhB,EAAO,GAAGrf,MACjC,MAAM,IAAI/B,MAAM,uBAElB,GAAuB,UAAnBohB,EAAO,GAAGrf,MAAuC,UAAnBqf,EAAO,GAAGrf,KAC1C,MAAM,IAAI/B,MAAM,uBAEpB,C,q3BC9DA,cAIA,UAEA,UAMMyoC,EAA2B,CAC/BjpC,KAAM,YACN+I,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,WAGd,EAAAjK,UACT,SAACoS,EAAyClL,EAAkB7U,GAS1D,OARAggB,EAAenL,GAQR,CAPQkL,EAAiB7jB,IAAI,EAAD,KAE1BggC,GAAwB,CAC3BhnB,UAAWlV,EAAWigB,SACtB5pB,IAAK,WAAM,OAAA8lC,EAA2Bpc,EAAkBlL,EAAO,GAAI7U,EAAWqqB,KAAnE,IAEbxV,GAEN,EAES,EAAAyK,yBACT,SAACpR,GAA0C,WAAAxO,6BAA4B,CAAC2qB,KAAMnc,EAAKlO,WAAWe,QAAQ,OAAQ,KAAnE,EAE/C,IAAMo7B,EACF,SAACpc,EAAyCtI,EAAe4S,GACvD,IAAMtH,EAAatL,EAAM/hB,KACzB20B,EAAO+R,EAAgBrZ,EAAYsH,GACnC,IAAMgS,EAAsBC,EAAevZ,EAAYsH,GACjDpiB,EAAO8a,EAAWlvB,OAIlB2d,EAAe,kBACnB+qB,EAAoB,OAAQlS,EAAMpiB,GAAK,6CACbA,EAAI,+BACtBA,EAAI,iEAId,OAAO,EAAP,KACKi0B,GAAwB,CAC3Br1B,OAAQ,CAACnR,KAAM2mC,EAAqB7mC,KAAMiiB,EAAMjiB,KAAMif,YAAa,EAAAqB,YAAY8B,UAC/EpG,aAAY,GAEhB,EAEE4qB,EAAkB,SAACrZ,EAA+BsH,GAItD,OAHIA,GAAQA,EAAKx2B,SAAWkvB,EAAWlvB,SACrCw2B,EAAO,OAAKtH,EAAW9R,SAAO,GAAEjE,WAE3Bqd,CACT,EAEMiS,EAAiB,SAACvZ,EAA+BsH,GAErD,OADAA,EAAO+R,EAAgBrZ,EAAYsH,GAC5B,EAAAjgB,UAAUoyB,gBAAgBzZ,EAAYsH,EAC/C,EAEMkS,EAAsB,SAACtpC,EAAco3B,EAAgBpiB,GACzD,IAAMw0B,EAAc,GACpBA,EAAY3oC,KAAK,eAAQb,EAAI,sBAAcgV,EAAI,sBAAcA,EAAI,SACjE,IAAK,IAAIvU,EAAI,EAAGA,EAAIuU,IAAQvU,EAC1B+oC,EAAY3oC,KAAK,cAAOu2B,EAAK32B,GAAE,iBAASA,EAAC,OAG3C,OADA+oC,EAAY3oC,KAAK,OACV2oC,EAAY/+B,KAAK,KAC1B,EAEMsiB,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,+BAGlB,GAAuB,YAAnBohB,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,KAC5C,MAAM,IAAI/B,MAAM,+BAEpB,C,4GCvFA,cAEA,UAEa,EAAA2lB,cAAgB,SAAC2G,EAAyCtI,GACrE,IAAMsK,EAActK,EAAMpQ,MACpBZ,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ7K,QAAQuR,UAAUkC,SAI1D6K,EAAe,ipCA6CD/K,EAAK8B,UAAS,mCAC5B9B,EAAKI,OAAM,mCAEX2B,EAAc,CAClBvV,KAAM,cACN6hB,WAAY,CAAC,EAAAgB,YAAY8B,UACzB5b,WAAY,CAAC,KACb6K,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMiiB,EAAM5B,OAAOrgB,KAAMif,YAAa,EAAAqB,YAAY4mB,sBAC9ElrB,aAAY,EACZC,SAAS,GAEX,OAAOsO,EAAiBpL,eAAenM,EAAa,CAACiP,EAAM5B,QAC7D,C,uxBCnEA,cAGA,UACA,UACA,UAEA,UAEA,SAAgB8mB,IACd,OAAOC,EAAiB,MAC1B,CACA,SAAgBC,IACd,OAAOD,EAAiB,OAC1B,CACA,SAAgBE,IACd,OAAOF,EAAiB,OAC1B,CACA,SAAgBG,IACd,OAAOH,EAAiB,OAC1B,CACA,SAAgBI,IACd,OAAOJ,EAAiB,OAC1B,CACA,SAAgBK,IACd,OAAOL,EAAiB,MAC1B,CACA,SAAgBM,EAAQlQ,GACtB,IAAM/5B,EAAO,MAWb,MAAO,CAACsa,KAVK,wCACeyf,EAAK,yBAEzB/5B,EAAI,uFAGLA,EAAI,wCACKA,EAAI,mBAAWA,EAAI,mBAAWA,EAAI,mBAAWA,EAAI,qBAGnDA,KAAI,EAAEuC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgBuc,IACd,OAAOP,EAAiB,MAC1B,CACA,SAAgBQ,IACd,OAAOR,EAAiB,QAC1B,CACA,SAAgBjR,EAAS3sB,EAAa27B,GACpC,IAAM1nC,EAAO,OAYb,MAAO,CAACsa,KAXK,sCACavO,EAAG,yCACH27B,EAAG,yBAErB1nC,EAAI,qEAGLA,EAAI,wDAIGA,KAAI,EAAEuC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgByc,IACd,IAAMpqC,EAAO,YASb,MAAO,CAACsa,KARK,oBACLta,EAAI,oDAGLA,EAAI,uCAIGA,KAAI,EAAEuC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgB0c,EAActQ,GAC5B,IAAM/5B,EAAO,YAWb,MAAO,CAACsa,KAVK,wCACeyf,EAAK,yBAEzB/5B,EAAI,0EAGLA,EAAI,wCACKA,EAAI,mBAAWA,EAAI,mBAAWA,EAAI,mBAAWA,EAAI,qBAGnDA,KAAI,EAAEuC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgB2c,IACd,OAAOX,EAAiB,MAC1B,CACA,SAAgBY,IACd,IAAMvqC,EAAO,MASb,MAAO,CAACsa,KARK,oBACLta,EAAI,qDAGLA,EAAI,wCAIGA,KAAI,EAAEuC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgB6c,IACd,IAAMxqC,EAAO,MAeb,MAAO,CAACsa,KAdK,oBACLta,EAAI,qEAGLA,EAAI,oDAGJA,EAAI,uGAGHA,EAAI,oEAIEA,KAAI,EAAEuC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgB8c,IACd,OAAOd,EAAiB,MAC1B,CACA,SAAgBnR,IACd,IAAMx4B,EAAO,OASb,MAAO,CAACsa,KARK,oBACLta,EAAI,gEAGLA,EAAI,mDAIGA,KAAI,EAAEuC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgB8K,IACd,IAAMz4B,EAAO,UASb,MAAO,CAACsa,KARK,oBACLta,EAAI,wEAGLA,EAAI,2DAIGA,KAAI,EAAEuC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgB+c,IACd,OAAOf,EAAiB,OAC1B,CACA,SAAgBgB,IACd,OAAOhB,EAAiB,MAC1B,CACA,SAAgBiB,IACd,IAAM5qC,EAAO,OAab,MAAO,CAACsa,KAZK,oBACLta,EAAI,wHAKLA,EAAI,2GAMGA,KAAI,EAAEuC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAASgc,EAAiB3pC,GASxB,MAAO,CAACsa,KARK,oBACLta,EAAI,oCACDA,EAAI,6BAERA,EAAI,mCACAA,EAAI,iBAGDA,KAAI,EAAEuC,KAAM,EAAAuY,aAAa6S,WACzC,CA3KA,YAGA,aAGA,aAGA,aAGA,aAGA,YAGA,YAcA,YAGA,cAGA,aAeA,iBAYA,kBAcA,YAGA,YAYA,YAkBA,YAGA,aAYA,gBAYA,aAGA,YAGA,aAgCA,IAoBMkd,EACF,SAACziC,EAAgCoc,EAAeiK,EAA6BzB,GAEvE,IAAMxL,EAAcpZ,EAAQ0C,QAAQyG,KAAO,EAAAsR,YAAYC,OAAS,EAAAD,YAAY8B,SACtEgL,EAAW,CAAC3vB,KAAMyuB,EAASzuB,KAAM6hB,WAAY,CAACL,GAAczY,WAAY,CAAC,KAAMkZ,UAAW+K,GAChG,OAAO,EAAP,KAAW2C,GAAQ,CAAEvsB,IAAK,WAAM,OAxBtC,SAACgF,EAAgCunB,EAA2BnL,EAAeiK,GAErE,IAAMjN,EAAcpZ,EAAQ0C,QAAQyG,KAAO,EAAAsR,YAAYC,OAAS,EAAAD,YAAY8B,SACtEnR,GAAO,IAAAC,SAAQrL,EAAQ0C,QAAQ7K,QAAQuR,UAAUkC,SACvD,OAAO,EAAP,KACKic,GAAQ,CACX/b,OAAQ,CAACnR,KAAM+hB,EAAM/hB,KAAMF,KAAMiiB,EAAMjiB,KAAMif,YAAW,GACxDjD,aAAc,iBACnBkQ,EAASnU,KAAI,iDAEF9G,EAAK8B,UAAS,uCACnBmZ,EAASzuB,KAAI,yBACjBwT,EAAKI,OAAM,wBAGR4K,SAAS,GAEb,CAOkCssB,CAA6B1iC,EAASunB,EAAUnL,EAAOiK,EAAvD,GAClC,EAEK,EAAAhI,IAAM,SAACre,EAAgCwZ,GACpC,OAACxZ,EAAQa,IAAI4hC,EAAmCziC,EAASwZ,EAAO,GAAI8nB,KAAY9nB,GAAhF,EAEH,EAAA8E,KAAO,SAACte,EAAgCwZ,GACrC,OAACxZ,EAAQa,IAAI4hC,EAAmCziC,EAASwZ,EAAO,GAAIgoB,KAAahoB,GAAjF,EAEH,EAAAiF,KAAO,SAACze,EAAgCwZ,GACrC,OAACxZ,EAAQa,IAAI4hC,EAAmCziC,EAASwZ,EAAO,GAAIioB,KAAajoB,GAAjF,EAEH,EAAAkF,KAAO,SAAC1e,EAAgCwZ,GACrC,OAACxZ,EAAQa,IAAI4hC,EAAmCziC,EAASwZ,EAAO,GAAIkoB,KAAaloB,GAAjF,EAOH,EAAAwF,KACT,SAAChf,EAAgCwZ,EAAkB7U,GAAyC,OAAC3E,EAAQa,IACjG4hC,EACIziC,EAASwZ,EAAO,GAAI8W,EAAS3rB,EAAWhB,IAAKgB,EAAW26B,KAAM36B,EAAWigB,UAC7EpL,GAHwF,EAKnF,EAAAyF,oBAAsB,SAACpM,GAAqC,WAAAxO,6BACrE,CAACV,IAAKkP,EAAKlO,WAAWS,SAAS,MAAO,EAAAsrB,UAAW4O,IAAKzsB,EAAKlO,WAAWS,SAAS,MAAO,EAAAurB,WADjB,EAG5D,EAAAzR,QAAU,SAAClf,EAAgCwZ,GACtD,IAAM7U,EAAag+B,EAAiC3iC,EAASwZ,GAC7D,OAAO,IAAAwF,MAAKhf,EAAS,CAACwZ,EAAO,IAAK7U,EACpC,EAEA,IAAMg+B,EAAmC,SAAC3iC,EAAgCwZ,GACxE,GAAIA,EAAOhhB,QAAU,KACfwH,EAAQ0C,QAAQ+a,cAAcjE,EAAO,GAAGqB,UAAY7a,EAAQ0C,QAAQ+a,cAAcjE,EAAO,GAAGqB,SAChG,MAAM,IAAIziB,MAAM,2CAGlB,IAAMuL,EAAO6V,EAAOhhB,QAAU,EAAKghB,EAAO,GAAG0B,WAAW,GAAK,EAAAwV,SACvD4O,EAAO9lB,EAAOhhB,QAAU,EAAKghB,EAAO,GAAG0B,WAAW,GAAK,EAAAyV,SAC7D,OAAO,IAAAtsB,6BAA4B,CAACV,IAAG,EAAE27B,IAAG,GAC9C,EAEa,EAAA17B,KAAO,SAAC5D,EAAgCwZ,GACrC,OAACxZ,EAAQa,IAAI4hC,EAAmCziC,EAASwZ,EAAO,GAAImoB,KAAanoB,GAAjF,EAEH,EAAAiG,IAAM,SAACzf,EAAgCwZ,GACpC,OAACxZ,EAAQa,IAAI4hC,EAAmCziC,EAASwZ,EAAO,GAAIooB,KAAYpoB,GAAhF,EAMH,EAAAsG,IACT,SAAC9f,EAAgCwZ,EAAkB7U,GAAwC,OAAC3E,EAAQa,IAChG4hC,EAAmCziC,EAASwZ,EAAO,GAAIqoB,EAAQl9B,EAAWgtB,OAAQhtB,EAAWigB,UAC7FpL,GAFuF,EAIlF,EAAAuG,mBAAqB,SAAClN,GAC/B,WAAAxO,6BAA4B,CAACstB,MAAO9e,EAAKlO,WAAWS,SAAS,QAAS,IAAtE,EAES,EAAA4a,IAAM,SAAChgB,EAAgCwZ,GACpC,OAACxZ,EAAQa,IAAI4hC,EAAmCziC,EAASwZ,EAAO,GAAIsoB,KAAYtoB,GAAhF,EAEH,EAAA2G,MAAQ,SAACngB,EAAgCwZ,GACtC,OAACxZ,EAAQa,IAAI4hC,EAAmCziC,EAASwZ,EAAO,GAAIuoB,KAAcvoB,GAAlF,EAEH,EAAAkG,SAAW,SAAC1f,EAAgCwZ,GACzC,OAACxZ,EAAQa,IAAI4hC,EAAmCziC,EAASwZ,EAAO,GAAIwoB,KAAiBxoB,GAArF,EAMH,EAAAyH,UACT,SAACjhB,EAAgCwZ,EAAkB7U,GAA8C,OAAC3E,EAAQa,IACtG4hC,EAAmCziC,EAASwZ,EAAO,GAAIyoB,EAAct9B,EAAWgtB,OAAQhtB,EAAWigB,UACnGpL,GAF6F,EAIxF,EAAA0H,yBAA2B,SAACrO,GACrC,WAAAxO,6BAA4B,CAACstB,MAAO9e,EAAKlO,WAAWS,SAAS,QAAS,MAAtE,EAES,EAAAkc,IAAM,SAACthB,EAAgCwZ,GACpC,OAACxZ,EAAQa,IAAI4hC,EAAmCziC,EAASwZ,EAAO,GAAI0oB,KAAY1oB,GAAhF,EAEH,EAAAmI,IAAM,SAAC3hB,EAAgCwZ,GACpC,OAACxZ,EAAQa,IAAI4hC,EAAmCziC,EAASwZ,EAAO,GAAI2oB,KAAY3oB,GAAhF,EAEH,EAAAoI,IAAM,SAAC5hB,EAAgCwZ,GACpC,OAACxZ,EAAQa,IAAI4hC,EAAmCziC,EAASwZ,EAAO,GAAI4oB,KAAY5oB,GAAhF,EAEH,EAAAoJ,KAAO,SAAC5iB,EAAgCwZ,GACrC,OAACxZ,EAAQa,IAAI4hC,EAAmCziC,EAASwZ,EAAO,GAAI4W,KAAa5W,GAAjF,EAEH,EAAAwJ,QAAU,SAAChjB,EAAgCwZ,GACxC,OAACxZ,EAAQa,IAAI4hC,EAAmCziC,EAASwZ,EAAO,GAAI6W,KAAgB7W,GAApF,EAEH,EAAAyJ,IAAM,SAACjjB,EAAgCwZ,GACpC,OAACxZ,EAAQa,IAAI4hC,EAAmCziC,EAASwZ,EAAO,GAAI6oB,KAAY7oB,GAAhF,EAEH,EAAAiK,KAAO,SAACzjB,EAAgCwZ,GACrC,OAACxZ,EAAQa,IAAI4hC,EAAmCziC,EAASwZ,EAAO,GAAI8oB,KAAa9oB,GAAjF,EAEH,EAAAsK,IAAM,SAAC9jB,EAAgCwZ,GACpC,OAACxZ,EAAQa,IAAI4hC,EAAmCziC,EAASwZ,EAAO,GAAI+oB,KAAY/oB,GAAhF,EAEH,EAAAuK,KAAO,SAAC/jB,EAAgCwZ,GACrC,OAACxZ,EAAQa,IAAI4hC,EAAmCziC,EAASwZ,EAAO,GAAIgpB,KAAahpB,GAAjF,C,8XC/ThB,cAEA,UACA,SAEA,UAEMopB,EAAwB,CAC5BhrC,KAAM,SACN+I,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAYC,SAGd,EAAAmoB,wBAA0B,SAAC7iC,EAAgCoc,GACtE,IAAMxP,EAAOwP,EAAM/hB,KAAK7B,OAElBoH,GAAW,IAAAioB,aAAY,KAAMjb,GAC7Bk2B,EAAYljC,EAASyQ,OAAO,GAC5BmkB,GAAiB,IAAAhmB,mBAAkB5B,GACnCmb,GAAgB,IAAAC,qBAEhB+a,EADkC,IAAtB3mB,EAAM/hB,KAAK7B,OACG,GA0BlC,SAAyBoU,EAAcvS,GACrC,GAAa,IAATuS,EACF,MAAO,KAIT,IADA,IAAIF,EAAS,GACJrU,EAAI,EAAGA,EAAIuU,EAAMvU,IACxBqU,GAAUrS,EAAKhC,GACXA,EAAIuU,EAAO,IACbF,GAAU,KAGd,OAAOA,CACT,CAvCuCs2B,CAAgBp2B,EAAMhN,GACrD8M,EAASE,GAAQ,EAAI,KAAO,eAAQk2B,EAAUzgC,KAAK,KAAI,KACvD+I,GAAO,IAAAC,SAAQrL,EAAQ0C,QAAQ7K,QAAQuR,UAAUkC,SACjD6K,EAAe,gBACjB4R,EAAa,sCAEXyM,EAAc,mJAGWuO,EAAY,wBAEpC33B,EAAKI,OAAM,2CAAmCkB,EAAM,6BAI3D,OAAO,EAAP,KACKk2B,GAAqB,CACxBxsB,SAAS,EACT5K,OAAQ,CAACnR,KAAM+hB,EAAM/hB,KAAMF,KAAMiiB,EAAMjiB,KAAMif,YAAa,EAAAqB,YAAY8B,UACtEpG,aAAY,GAEhB,EAEa,EAAA8H,8BAAgC,SAACje,EAAgCoc,GAC1E,cAAKwmB,GAAqB,CAAE5nC,IAAK,WAAM,WAAA6nC,yBAAwB7iC,EAASoc,EAAjC,GAAvC,C,kJC3CJ,cAGa,EAAAiI,UACT,SAACK,EAAyClL,EAAkBuhB,GAC1DpW,EAAenL,GACf,IAAMkN,EAAc,EAAA3X,UAAUk0B,eAAezpB,EAAO,GAAGnf,KAAM0gC,GAE7D,MAAO,CADQrW,EAAiBvI,gBAAgB3C,EAAO,GAAIkN,GAE7D,EAES,EAAAnC,aAAe,SAACG,EAAyClL,GAEpE,OADA8mB,EAAkB9mB,IACX,IAAA6K,WAAUK,EAAkB,CAAClL,EAAO,IAAK3e,MAAML,KAAKgf,EAAO,GAAG+d,aACvE,EAEa,EAAAjT,yBAA6D,SAACzR,GACvE,OAAAA,EAAKlO,WAAWe,QAAQ,OAAxB,EAEJ,IAAMif,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,+BAGlB,GAAuB,WAAnBohB,EAAO,GAAGrf,KACZ,MAAM,IAAI/B,MAAM,8BAEpB,EAEMkoC,EAAoB,SAAC9mB,GACzB,IAAKA,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,gCAGlB,GAAuB,UAAnBohB,EAAO,GAAGrf,KACZ,MAAM,IAAI/B,MAAM,sBAEpB,C,ojCCxCA,cAIA,UAEA,UAoBM8qC,EAA0B,CAC9BtrC,KAAM,WACN+I,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,WAGd,EAAA2H,SACT,SAACQ,EAAyClL,EAAkB7U,GAS1D,OARA,IAAAggB,gBAAenL,EAAQ7U,GAQhB,CAPQ+f,EAAiB7jB,IAAI,EAAD,KAE1BqiC,GAAuB,CAC1BrpB,UAAWlV,EAAWigB,SACtB5pB,IAAK,WAAM,OAAAmoC,EAA0Bze,EAAkBlL,EAAQ7U,EAApD,IAEb6U,GAEN,EAES,EAAA2K,0BACT,SAACtR,GAAyC,WAAAwpB,yBAAwBxpB,EAAM,EAA9B,EAEjC,EAAAuR,0BACT,SAACvR,GAAyC,WAAAwpB,yBAAwBxpB,EAAM,EAA9B,EAEjC,EAAAwpB,wBAA0B,SAACxpB,EAAkBuwB,GACxD,IAAM9F,EAAY8F,GAAS,GAGrBxU,EAAO/b,EAAKlO,WAAWY,UAAU,OAAQ,WAC/C,GAAa,YAATqpB,GAA+B,WAATA,IAAsBwU,EAAQ,IAAe,UAATxU,GAC5D,MAAM,IAAIx2B,MAAM,6BAAsBw2B,IAGxC,IAAI2N,EAAmB,GACnB6G,EAAQ,IACV7G,EAAS1pB,EAAKlO,WAAWc,UAAU,WACnC,IAAAi4B,kBAAiBnB,EAAQ3N,EAAM0O,IAGjC,IAAM+F,EAAqBxwB,EAAKlO,WAAWS,SAAS,sBAAuB,GAErEq3B,EACF2G,EAAQ,GAAKvwB,EAAKlO,WAAWY,UAAU,iCAAkC,cAAgB,aAC7F,IAE4C,IAFxC,CACE,aAAc,qBAAsB,uBAAwB,gBAAiB,qBAAsB,cACnGjN,QAAQmkC,GACZ,MAAM,IAAIrkC,MAAM,qCAA8BqkC,EAAuB,uBAEvE,IAAM6G,EAA4C,uBAA5B7G,EAChB8G,EAAmBD,EAEnBE,EACQ,YAAT5U,GAAsBwU,GAAS,GAAMvwB,EAAKlO,WAAWY,UAAU,eAAgB,sBAAwB,GAC5G,IAA+F,IAA3F,CAAC,qBAAsB,oBAAqB,QAAS,OAAQ,IAAIjN,QAAQkrC,GAC3E,MAAM,IAAIprC,MAAM,wBAAiBorC,EAAW,uBAG9C,IAAMC,EAAoB5wB,EAAKlO,WAAWS,SAAS,iBAAkB,KAC/Ds+B,EAAkE,IAAjD7wB,EAAKlO,WAAWW,OAAO,kBAAmB,GACjE,GAAIo+B,GAA2B,UAAT9U,EACpB,MAAM,IAAIx2B,MAAM,4DAGlB,IAAMurC,EACDP,EAAQ,IAAuB,YAATxU,GAAkD,eAA5B6N,GAA4D,UAAhB+G,EAEzFI,EAAc,EACdzG,EAAiB,EACjBC,EAAgB,EAgBpB,OAdIgG,EAAQ,GAENvwB,EAAK2G,OAAOhhB,OAAS,GACvBorC,EAAc,EACdzG,EAAiB,EACjBC,EAAgB,IAEhBD,EAAiB,EACjBC,EAAgB,GAEC,IAAVgG,IACTjG,EAAiB,IAGZ,IAAA94B,6BAA4B,CACjC++B,MAAK,EACL9F,SAAQ,EACR1O,KAAI,EACJ2N,OAAM,EACN8G,mBAAkB,EAClB5G,wBAAuB,EACvB8G,iBAAgB,EAChBD,aAAY,EACZE,YAAW,EACXC,kBAAiB,EACjBC,eAAc,EACdC,yBAAwB,EACxBC,YAAW,EACXzG,eAAc,EACdC,cAAa,GAEjB,EAEA,IAAM+F,EACF,SAACze,EAAyClL,EAAkB7U,GAgB1D,IAfA,IAAMyG,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ7K,QAAQuR,UAAUkC,SAC1D,IACFoZ,EAAiBvL,+BAA+BK,EAAO,GAAGnf,KAAM,EAAAogB,YAAY8B,UAAS,GADlFsgB,EAAU,KAAED,EAAW,KAGxBlW,EAAclN,EAAO,GAAGnf,KAAKqH,KAAI,SAACtG,EAAK/C,GAAM,OAAAqL,KAAKyc,MAAM/kB,EAAMuJ,EAAW43B,OAAOlkC,GAAnC,IAC7C,IACFqsB,EAAiBvL,+BAA+BuN,EAAa,EAAAjM,YAAY8B,UAAS,GAD/EogB,EAAW,KAAED,EAAY,KAE1BthC,EAAMsrB,EAAYluB,OAElBqrC,EAAgB,IAAIhpC,MAAcO,GAClC0oC,EAAe,IAAIjpC,MAAcO,GACnC2oC,EAAuB,qCACN3oC,EAAG,uCACJA,EAAG,cAEdwT,EAAIxT,EAAM,EAAGwT,GAAK,EAAGA,IAC5Bi1B,EAAcj1B,GAAMA,IAAMxT,EAAM,EAAK,EAAIyoC,EAAcj1B,EAAI,GAAK8X,EAAY9X,EAAI,GAChFk1B,EAAal1B,GAAMA,IAAMxT,EAAM,EAAK,EAAI0oC,EAAal1B,EAAI,GAAK4K,EAAO,GAAGnf,KAAKuU,EAAI,GAEjFm1B,GAAwB,mCACPn1B,EAAC,eAAOi1B,EAAcj1B,GAAE,oCACzBA,EAAC,eAAOk1B,EAAal1B,GAAE,eAGzC,IAAMo1B,EAAwB,gGAEUnH,EAAU,aAAKD,EAAW,qDAChCxxB,EAAK8B,UAAS,yDAK1CiJ,EAAmC,YAApBxR,EAAWiqB,KAE5B,gBACJoV,EAAqB,2CACK5oC,EAAG,gGAEkBuhC,EAAW,aAAKD,EAAY,uBAEzEqH,EAAoB,8DAGI3oC,EAAG,+YAejB,IAARA,EAEI,gBACR4oC,EAAqB,iIAG0BrH,EAAW,aAAKD,EAAY,uBAEzEqH,EAAoB,ykCA2BQvqB,EAAO,GAAGnf,KAAK,GAAE,+sBAuBvC,gBACR2pC,EAAqB,iIAG0BrH,EAAW,aAAKD,EAAY,uBAEzEqH,EAAoB,8vBAoBQvqB,EAAO,GAAGnf,KAAK,GAAE,+sBAsB/C,OAAO,EAAP,KACK6oC,GAAuB,CAC1B13B,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3EpG,aAAY,EACZM,UAAW,CAAC,CACV7e,KAAM,SACNuC,KAAM,MACN+c,YAAavS,EAAW43B,OAAO/jC,OAC/B4B,KAAMuK,EAAW43B,OAAO76B,KAAI,SAAAgnB,GAAK,OAAAhlB,KAAKE,KAAK8kB,EAAV,OAGvC,EAES,EAAA/D,eAAiB,SAACnL,EAAkBvV,GAC/C,IAAKuV,GAAWvV,EAAUm/B,MAAQ,GAAuB,IAAlB5pB,EAAOhhB,QACzCyL,EAAUm/B,OAAS,GAAKn/B,EAAUm/B,MAAQ,IAAwB,IAAlB5pB,EAAOhhB,QACvDyL,EAAUm/B,OAAS,IAAM5pB,EAAOhhB,OAAS,EAC5C,MAAM,IAAIJ,MAAM,mBAGlB,GAAI6L,EAAUs4B,OAAO/jC,OAAS,GAAKghB,EAAO,GAAGnf,KAAK7B,SAAWyL,EAAUs4B,OAAO/jC,OAC5E,MAAM,IAAIJ,MAAM,wBAGlB,GAAuB,WAAnBohB,EAAO,GAAGrf,KACZ,MAAM,IAAI/B,MAAM,8BAEpB,EAEa,EAAAslC,iBAAmB,SAACnB,EAAkB3N,EAAc0O,G,YAC/D,GAAKA,E,IAOH,IAAoB,QAAAf,GAAM,8BACxB,GADc,SACD,EACX,MAAM,IAAInkC,MAAM,wC,2GARpB,IAAoB,QAAAmkC,GAAM,8BACxB,GADc,QACF,EACV,MAAM,IAAInkC,MAAM,oD,kGAUtB,KAAa,WAATw2B,GAA8B,UAATA,GACD,IAAlB2N,EAAO/jC,QAAmC,IAAlB+jC,EAAO/jC,QAA8B,IAAd+jC,EAAO,IAA0B,IAAdA,EAAO,IAC3E,MAAM,IAAInkC,MAAM,sLAELklC,EAAW,SAAW,WAAU,cAGjD,C,upBC1VA,cAEA,UAEA,UACA,UAcA,aAKE,WACW2G,EAAqC76B,EACrC86B,GADA,KAAAD,SAAAA,EAAqC,KAAA76B,UAAAA,EACrC,KAAA86B,sBAAAA,EACTtrC,KAAKurC,KAAO,IAAI/qC,IAChBR,KAAKwrC,iBAAkB,CACzB,CAoJF,OAnJE,YAAAnqB,YAAA,SAAYlZ,GACV,OAAOnI,KAAKurC,KAAKnpC,IAAI+F,EACvB,EACA,YAAAuZ,YAAA,SAAYvZ,EAAcgZ,GACxBnhB,KAAKurC,KAAKxpC,IAAIoG,EAAKgZ,EACrB,EACA,YAAAlZ,IAAA,SAAIwjC,EAAyB7qB,EAAuBhO,GAApD,I,EAAA,OACE5S,KAAKqrC,SAASK,MAAM,KAAM,6BAAoD,QAA9B,EAAAD,EAAcl3B,YAAYvV,YAAI,QAAI,mBAAoB,W,MAC9F2sC,EAAK,EAAKn7B,UAAUm7B,GACpBhrB,EAAU8qB,EAAc9qB,QAC9BgrB,EAAGC,WAAWjrB,GACd,IACE,EAAKkrB,WAAWj5B,GACX,EAAK44B,iBACR,EAAKM,eAAeL,EAAcM,iBAEpC,EAAKC,aAAaP,EAAcQ,iBAAqD,QAAnC,EAAAR,EAAcl3B,YAAYsJ,iBAAS,QAAI,GAAI+C,E,CAC7F,MAAOpX,GAEP,MADA,EAAAkH,OAAOw7B,MAAM,iBAAkBT,EAAcl3B,YAAYgJ,cACnD/T,C,CAER,EAAK6hC,SAASK,MAAM,UAAW,oBAAoB,WACjD,EAAKl7B,UAAU27B,MACjB,GACF,GAAGnsC,KAAKwQ,UACV,EACA,YAAAT,QAAA,sBACM/P,KAAKosC,cACPpsC,KAAKwQ,UAAU67B,aAAarsC,KAAKosC,cAEnCpsC,KAAKurC,KAAK/2B,SAAQ,SAAA+G,GAAK,SAAK/K,UAAU87B,cAAc/wB,EAAEoF,QAA/B,GACzB,EACA,YAAAc,MAAA,SAAMlN,EAA0BI,EAAsCjD,GAAtE,WACE,OAAO1R,KAAKqrC,SAASK,MAAM,UAAW,wBAAwB,WAC5D,IAAMa,EAAe,IAAI,EAAAhuB,iBAAiB,EAAK/N,UAAW+D,EAAaI,EAAqBjD,GACtF86B,EAAaD,EAAajvB,aAC1BqD,EAAU,EAAK8rB,QAAQD,GAQ7B,MAPiB,CACfj4B,YAAW,EACXoM,QAAO,EACPsrB,iBAAkB,EAAKS,oBACnB/rB,EAAS4rB,EAAa1mC,QAAQ0O,YAAYxM,WAAYwkC,EAAa1mC,QAAQ0O,YAAYsJ,WAC3FkuB,gBAAiB,EAAKY,mBAAmBhsB,GAG7C,GACF,EACU,YAAA8rB,QAAV,SAAkBG,GAChB,IAAK5sC,KAAKosC,aAAc,CACtB,EAAA17B,OAAOE,QAAQ,kBAAmB,0DAClC,IAAMi8B,GAAqB,IAAAC,uBAAsB9sC,KAAKwQ,UAAUkC,SAChE1S,KAAKosC,aAAepsC,KAAKwQ,UAAUu8B,cAAcF,EAAoB7sC,KAAKwQ,UAAUm7B,GAAGqB,c,CAErF,EAAAltC,IAAImtC,OACN,EAAAv8B,OAAOE,QAAQ,kBAAmB,uBACtCg8B,EAAgB,OAGd,IAAMM,EAAaltC,KAAKwQ,UAAUu8B,cAAcH,EAAkB5sC,KAAKwQ,UAAUm7B,GAAGwB,iBAC9ExsB,EAAU3gB,KAAKwQ,UAAU48B,cAAcptC,KAAKosC,aAAcc,GAEhE,OADAltC,KAAKwQ,UAAU67B,aAAaa,GACrBvsB,CACT,EACA,YAAAkrB,WAAA,SAAW9pB,GACT,IAAM9e,EAAQ8e,EAAG9e,MACXD,EAAS+e,EAAG/e,OAClB,EAAA0N,OAAOE,QACH,kBACA,qDAA8C3N,EAAK,YAAID,EAAM,mBAAW+e,EAAG3O,MAAK,kBAAU2O,EAAGH,OAAOrgB,OACxGvB,KAAKwQ,UAAU68B,kBAAkBtrB,EAAGf,QAAS/d,EAAOD,EACtD,EACA,YAAA8oC,eAAA,SAAeC,GACb,IAAMuB,EAAiBvB,EAAgBwB,SACjCC,EAAqBzB,EAAgB0B,aAC3CztC,KAAKwQ,UAAUk9B,oBAAoBJ,EAAgBE,GACnDxtC,KAAKwrC,iBAAkB,CACzB,EACA,YAAAQ,aAAA,SAAaC,EAA6CpuB,EAA8B8vB,G,UAEhFhC,EAAK3rC,KAAKwQ,UAAUm7B,GACtBiC,EAAkB,E,WACV,EAAMrsC,EAAM,EAAU+c,GAChC,IAAMhe,EAA4C,QAApC,EAAAud,EAAUgwB,MAAK,SAAA/lC,GAAK,OAAAA,EAAE9I,OAAS,CAAX,WAAgB,eAAEwC,KACpD,GAAa,cAATD,IAAyBjB,EAC3B,MAAM,IAAId,MAAM,oBAAa,EAAI,iDAEnC,OAAQ+B,GACN,IAAK,YACH,EAAKusC,YAAYH,EAASC,GAAkB,EAAUA,GACtDA,IACA,MACF,IAAK,QACCtvB,EACFqtB,EAAGoC,WAAW,EAAUztC,GAExBqrC,EAAGqC,UAAU,EAAU1tC,GAEzB,MACF,IAAK,MACCge,EACFqtB,EAAGsC,WAAW,EAAU3tC,GAExBqrC,EAAGuC,UAAU,EAAU5tC,GAEzB,MACF,QACE,MAAM,IAAId,MAAM,mCAA4B+B,I,aAzBlD,IAAkD,QAAA0qC,GAAgB,+BAAvD,c,EAAK,OAAM,OAAU,WAAa,c,mGA4B/C,EACA,YAAA6B,YAAA,SAAY/rB,EAAiBosB,EAAqCZ,GAChEvtC,KAAKwQ,UAAU49B,qBAAqBrsB,EAAGf,QAASusB,EAAUY,EAC5D,EACA,YAAAxB,mBAAA,SAAmBhsB,GACjB,MAAO,CACL4sB,SAAUvtC,KAAKquC,kBAAkB1tB,EAAS,YAC1C8sB,aAAcztC,KAAKquC,kBAAkB1tB,EAAS,gBAElD,EACA,YAAA+rB,oBAAA,SAAoB/rB,EAAuBxC,EAAqBN,G,YAExDouB,EAA8C,GACpD,GAAI9tB,E,IACF,IAAsB,QAAAA,GAAQ,8BAAE,CAA3B,IAAME,EAAO,QAChB4tB,EAAiBpsC,KAAK,CAACb,KAAMqf,EAAS9c,KAAM,YAAa+sC,SAAUtuC,KAAKuuC,mBAAmB5tB,EAAStC,I,mGAGxG,GAAIR,E,IACF,IAAuB,QAAAA,GAAS,8BAAE,CAA7B,IAAMpB,EAAQ,QACjBwvB,EAAiBpsC,KAAK,EAAD,KAAK4c,GAAQ,CAAE6xB,SAAUtuC,KAAKuuC,mBAAmB5tB,EAASlE,EAASzd,Q,mGAG5F,OAAOitC,CACT,EACA,YAAAsC,mBAAA,SAAmB5tB,EAAuB3hB,GACxC,IACMwvC,EADKxuC,KAAKwQ,UAAUm7B,GACL4C,mBAAmB5tB,EAAS3hB,GACjD,GAAkB,OAAdwvC,EACF,MAAM,IAAIhvC,MAAM,kBAAWR,EAAI,gBAEjC,OAAOwvC,CACT,EACA,YAAAH,kBAAA,SAAkB1tB,EAAuB3hB,GAGvC,OAFWgB,KAAKwQ,UAAUm7B,GACW0C,kBAAkB1tB,EAAS3hB,EAElE,EACF,EA9JA,GAAa,EAAAyvC,eAAAA,C,kHCjBb,cAEA,UAKA,UACA,UACA,UACA,UACA,UAGA,aAWE,WAA4BxvC,EAAuC4G,GAAvC,KAAA5G,QAAAA,EAAuC,KAAA4G,QAAAA,EACjE7F,KAAKygB,eAAiB,IAAI,EAAAiuB,sBAAsBzvC,EAAQuR,UAAUm+B,gBAClE3uC,KAAKohB,eAAiB,IAAI,EAAAqtB,eAAezuC,KAAK6F,QAAQwlC,SAAUpsC,EAAQuR,UAAWxQ,KAAKygB,gBACxFzgB,KAAKojB,eAAiB,IAAI,EAAAwrB,eACtB3vC,EAAQuR,UAAWxQ,KAAKygB,eAAgBzgB,KAAK6F,QAAQwlC,SACrD,CAACwD,cAA4C,SAA7B5vC,EAAQqR,mBAC5BtQ,KAAKqgB,uBAAyB,IAAI7f,IAClCR,KAAKsgB,yBAA2B,IAAI9f,IACpCR,KAAKuQ,KAAOtR,EAAQsR,KACpBvQ,KAAK8uC,eAAiB,IAAItuC,IAC1BR,KAAK+uC,eAAiB,IAAIvuC,GAC5B,CA0CF,OAxCE,YAAAwuC,uBAAA,WACE,OAAO,IAAI,EAAA1pB,sBAAsBtlB,KACnC,EACA,YAAAivC,mBAAA,SAAmBC,GACjB,IAAMC,EAAeD,EAAME,YAAYhzB,QAAO,SAAAtU,GAAK,OAAY,IAAZA,EAAElG,MAAekG,EAAE8Z,MAAnB,IAA2B9Y,KAAI,SAAAhB,GAAK,OAAAA,EAAE8Z,OAAQK,MAAV,IACvFjiB,KAAKmvC,aAAe,IAAI70B,IAAI60B,EAC9B,EACA,YAAAtqB,cAAA,SAAcN,GACZ,QAAOvkB,KAAKmvC,cAAenvC,KAAKmvC,aAAax0B,IAAI4J,EACnD,EACA,YAAA8qB,eAAA,SAAe9qB,GACbvkB,KAAKmvC,aAAav0B,IAAI2J,EACxB,EACA,YAAAvC,eAAA,SAAeuC,EAAqB5S,GAClC,OAAIA,EACK3R,KAAKqgB,uBAAuBje,IAAImiB,GAEhCvkB,KAAKsgB,yBAAyBle,IAAImiB,EAE7C,EACA,YAAAK,eAAA,SAAeL,EAAqBC,EAA0B7S,QAAA,IAAAA,IAAAA,GAAA,GAC5D,EAAAjB,OAAOE,QAAQ,sBAAuB,iCAClCe,EACF3R,KAAKqgB,uBAAuBte,IAAIwiB,EAAUC,GAE1CxkB,KAAKsgB,yBAAyBve,IAAIwiB,EAAUC,EAEhD,EACA,YAAAzU,QAAA,sBACE/P,KAAKohB,eAAerR,UACpB/P,KAAKojB,eAAe2B,sBACpB/kB,KAAKqgB,uBAAuB7L,SAAQ,SAAAuN,GAAM,SAAKqB,eAAe4B,eAAejD,GAAI,EAAvC,IAC1C/hB,KAAKqgB,uBAAyB,IAAI7f,IAClCR,KAAKsgB,yBAAyB9L,SAAQ,SAAAuN,GAAM,SAAKqB,eAAe4B,eAAejD,GAAI,EAAvC,IAC5C/hB,KAAKsgB,yBAA2B,IAAI9f,GACtC,EACA,YAAAmF,QAAA,SAAQsU,EAAkBq1B,EAA0BJ,GAClD,IAAMK,GAAK,IAAAC,iBAAgBv1B,EAAMq1B,EAAQ,EAAA/pB,wBACzC,MAAO,CAACkqB,KAAMF,EAAGG,OAAQ7pC,QAAS0pC,EAAGI,OAASJ,EAAGI,OAAO11B,EAAMi1B,GAASj1B,EACzE,EACF,EAhEA,GAAa,EAAAnJ,oBAAAA,C,8JChBb,cAqCA,aAKE,WAAY66B,EAA4B3kC,GACtC,QADsC,IAAAA,IAAAA,EAAA,GACrB,IAAbA,EACFhH,KAAK4vC,eAAiBjE,EAAGkE,KACzB7vC,KAAKoG,OAASulC,EAAGmE,IACjB9vC,KAAKwgB,YAAcmrB,EAAGx+B,MACtBnN,KAAK86B,YAAc9zB,MACd,IAAiB,IAAbA,EAMT,MAAM,IAAIxH,MAAM,sCAA+BwH,IAL/ChH,KAAK4vC,eAAiBjE,EAAGoE,QACzB/vC,KAAKoG,OAASulC,EAAGqE,KACjBhwC,KAAKwgB,YAAcmrB,EAAGx+B,MACtBnN,KAAK86B,YAAc9zB,C,CAIvB,CA6BF,OA5BE,YAAAgU,OAAA,SAAO/U,EAA4BgqC,GACjC,IAAIh+B,EACAsB,EAcJ,OAbItN,EAAIlG,cAAgBU,eACtB,EAAAiQ,OAAOG,QAAQ,UAAW,2DAC1B0C,EAAS,IAAI9S,aAAawF,IAExBgqC,EAAcjwC,KAAK86B,YAAc70B,EAAIrG,QACvC,EAAA8Q,OAAOG,QAAQ,UAAW,kDAC1B0C,EAAStN,EACTgM,EAASjS,KAAKkwC,SAASD,EAAcjwC,KAAK86B,aAC1CvnB,EAAOiB,SAAQ,SAAC1M,EAAGrI,GAAM,OAAAwS,EAAOxS,GAAKqI,CAAZ,KAGzBmK,EADAsB,EAAStN,EAGJgM,CACT,EACA,YAAAi+B,SAAA,SAAS3tC,GACP,OAAO,IAAI9B,aAAoB,EAAP8B,EAC1B,EACA,YAAA0Y,OAAA,SAAOnY,EAA+BqtC,GACpC,OAAyB,IAArBnwC,KAAK86B,YACeh4B,EAAwBsZ,QAAO,SAAC9b,EAAO+X,GAAU,OAAAA,EAAQ,GAAM,CAAd,IAAiBuK,SAAS,EAAGutB,GAG/FrtC,EAAO8f,SAAS,EAAGutB,EAC5B,EACF,EAhDA,GAAa,EAAAC,sBAAAA,EAoDb,iBAKE,WAAYzE,EAA2B3kC,EAAcwZ,GACnD,QADqC,IAAAxZ,IAAAA,EAAA,GACpB,IAAbA,GAA+B,IAAbA,EACpB,MAAM,IAAIxH,MAAM,sCAA+BwH,IAEjDhH,KAAK4vC,eAAiBjE,EAAGqE,KACzBhwC,KAAKoG,OAASulC,EAAGqE,KACjBhwC,KAAK86B,YAAc9zB,EACnBhH,KAAKwgB,YAAcA,GAAemrB,EAAGx+B,KACvC,CAoBF,OAnBE,YAAA6N,OAAA,SAAO/U,EAAmBgqC,GACxB,IAAII,EAAOpqC,EAMX,OALyB,IAArBjG,KAAK86B,cACP,EAAApqB,OAAOE,QAAQ,UAAW,iCAC1By/B,EAAOrwC,KAAKkwC,SAASD,GACrBhqC,EAAIuO,SAAQ,SAAC1M,EAAGrI,GAAM,OAAA4wC,EAAS,EAAJ5wC,GAASqI,CAAd,KAEjBuoC,CACT,EACA,YAAAH,SAAA,SAAS3tC,GACP,OAAO,IAAI9B,aAAoB,EAAP8B,EAC1B,EACA,YAAA0Y,OAAA,SAAOnY,EAA+BqtC,GACpC,OAAyB,IAArBnwC,KAAK86B,YACeh4B,EAAwBsZ,QAAO,SAAC9b,EAAO+X,GAAU,OAAAA,EAAQ,GAAM,CAAd,IAAiBuK,SAAS,EAAGutB,GAG/FrtC,EAAO8f,SAAS,EAAGutB,EAC5B,EACF,EAjCA,GAAa,EAAAG,qBAAAA,EAmCb,iBAKE,WAAY3E,EAA2B3kC,GACrC,QADqC,IAAAA,IAAAA,EAAA,GADvC,KAAA8zB,YAAc,EAEK,IAAb9zB,EACFhH,KAAK4vC,eAAiBjE,EAAG4E,MACzBvwC,KAAKoG,OAASulC,EAAG4E,MACjBvwC,KAAKwgB,YAAcmrB,EAAG6E,cACtBxwC,KAAK86B,YAAc9zB,MACd,IAAiB,IAAbA,EAMT,MAAM,IAAIxH,MAAM,sCAA+BwH,IAL/ChH,KAAK4vC,eAAiBjE,EAAGqE,KACzBhwC,KAAKoG,OAASulC,EAAGqE,KACjBhwC,KAAKwgB,YAAcmrB,EAAG6E,cACtBxwC,KAAK86B,YAAc9zB,C,CAIvB,CAaF,OAZE,YAAAgU,OAAA,SAAO/U,EAAiBwqC,GACtB,OAAO,IAAI/vC,WAAWuF,EAAInD,OAAQmD,EAAIyC,WAAYzC,EAAI0C,WACxD,EACA,YAAAunC,SAAA,SAAS3tC,GACP,OAAO,IAAI7B,WAAW6B,EAAOvC,KAAK86B,YACpC,EACA,YAAA7f,OAAA,SAAOnY,EAA+BqtC,GACpC,GAAIrtC,aAAkBpC,WACpB,OAAOoC,EAAO8f,SAAS,EAAGutB,GAE5B,MAAM,IAAI3wC,MAAM,8BAAuBsD,EAAO/C,aAChD,EACF,EAhCA,GAAa,EAAA2wC,iBAAAA,C,+PC5Hb,cACA,UAmBA,aACE,WAAmB/B,GAAA,KAAAA,eAAAA,CAAyB,CAoC9C,OAnCE,YAAAgC,iBAAA,SAAiBv9B,EAA0Bw9B,GAEzC,GAAqB,IAAjBx9B,EAAMxT,OACR,MAAO,CAAC,EAAG,GAEb,IAAM+uC,EAAiB3uC,KAAK2uC,eAC5B,GAAIiC,QAA6BrxC,IAApBqxC,EAAMC,UAAyB,CAE1C,IAAMC,EAAQF,EAAMC,WAAaz9B,EAAMxT,OAAS,EAAIwT,EAAMqE,MAAMm5B,EAAMC,WAAWjP,QAAO,SAACrmB,EAAGxH,GAAM,OAAAwH,EAAIxH,CAAJ,IAC5Fg9B,EAAQH,EAAMC,WAAa,EAAI,EAAIz9B,EAAMqE,MAAM,EAAGm5B,EAAMC,WAAWjP,QAAO,SAACrmB,EAAGxH,GAAM,OAAAwH,EAAIxH,CAAJ,IAC1F,KAAI+8B,EAAQnC,GAAkBoC,EAAQpC,GAOpC,MAAO,CAACmC,EAAOC,GAJf,EAAArgC,OAAOE,QACH,gBACA,kEAA2DwC,EAAK,uBAAew9B,EAAMC,W,CAS7F,IAJA,IAAMG,EAAY59B,EAAMwuB,QAAO,SAACrmB,EAAGxH,GAAM,OAAAwH,EAAIxH,CAAJ,IAErC9Q,EAAQ6H,KAAKyc,MAAMzc,KAAK+f,KAAKmmB,IAE1B/tC,EAAQ0rC,GAAkB1rC,EAAQ+tC,GACnCA,EAAY/tC,GAAU,EADwBA,KAMpD,GAAIA,GAAS0rC,GAAkBqC,EAAY/tC,GAAU,EACnD,MAAM,IAAIzD,MAAM,kEAA2D4T,IAE7E,MAAO,CAACnQ,EAAO+tC,EAAY/tC,EAC7B,EACF,EArCA,GAAa,EAAAguC,+BAAAA,EAuCb,iBACE,WAAmBtC,GAAA,KAAAA,eAAAA,CAAyB,CAwF9C,OAvFE,YAAAgC,iBAAA,SAAiBv9B,EAA0Bw9B,GACzC,IAAMM,EAAKlxC,KAAKmxC,eAAe/9B,EAAOw9B,GAKtC,OAJIA,GAASA,EAAMj/B,WACjBu/B,EAAG,IAAM,EACTA,EAAG,IAAM,GAEPN,GAASA,EAAM7tB,UACV,CAACmuB,EAAG,GAAIA,EAAG,IAEbA,CACT,EAEA,YAAAC,eAAA,SAAe/9B,EAA0Bw9B,GACvC,IAAMj/B,EAAWi/B,GAASA,EAAMj/B,SAEhC,GAAqB,IAAjByB,EAAMxT,OACR,OAAO+R,EAAW,CAAC,EAAG,GAAK,CAAC,EAAG,GAEjC,IAAIg9B,EAAiB3uC,KAAK2uC,eAC1B,GAAIiC,QAA6BrxC,IAApBqxC,EAAMC,UAAyB,CAE1C,IAAMC,EAAQF,EAAMC,WAAaz9B,EAAMxT,OAAS,EAAIwT,EAAMqE,MAAMm5B,EAAMC,WAAWjP,QAAO,SAACrmB,EAAGxH,GAAM,OAAAwH,EAAIxH,CAAJ,IAC5Fg9B,EAAQH,EAAMC,WAAa,EAAI,EAAIz9B,EAAMqE,MAAM,EAAGm5B,EAAMC,WAAWjP,QAAO,SAACrmB,EAAGxH,GAAM,OAAAwH,EAAIxH,CAAJ,IAC1F,KAAI+8B,EAAQnC,GAAkBoC,EAAQpC,GAOpC,MAAO,CAACmC,EAAOC,GAJf,EAAArgC,OAAOE,QACH,gBACA,kEAA2DwC,EAAK,uBAAew9B,EAAMC,W,CAK7F,IAAIO,EAAWh+B,EAAMqE,MAAM,GAoB3B,GAnBI9F,IACFg9B,GAAkC,EAYV,KALxByC,EAAWA,EAAStoC,KAChB,SAACkN,EAAGvW,GAAM,OAAAA,GAAK2xC,EAASxxC,OAAS,EAAKwxC,EAAS3xC,GAAK,GAAM,EAAI2xC,EAAS3xC,GAAK2xC,EAAS3xC,GAAK,EAAK2xC,EAAS3xC,EAA9F,KAIDG,SACXwxC,EAAW,CAAC,EAAGA,EAAS,MAKJ,IAApBA,EAASxxC,OAAc,CACzB,IAAMyxC,EAAgB74B,EAAa44B,GACnCA,EAAWC,EAAc54B,Q,CAG3B,IAAMlW,EAAO+uC,EAAcF,GAC3B,OAAIA,EAASxxC,QAAU,GAAK2C,GAAQosC,EAC3B,CAAC,EAAGpsC,GACkB,IAApB6uC,EAASxxC,QAAgBwxC,EAAS,IAAMzC,GAAkByC,EAAS,IAAMzC,EAC3EyC,EACsB,IAApBA,EAASxxC,QAAgBwxC,EAAS,GAAKA,EAAS,IAAMzC,GAAkByC,EAAS,IAAMzC,EACzF,CAACyC,EAAS,GAAKA,EAAS,GAAIA,EAAS,IACf,IAApBA,EAASxxC,QAAgBwxC,EAAS,IAAMzC,GAAkByC,EAAS,GAAKA,EAAS,IAAMzC,EACzF,CAACyC,EAAS,GAAIA,EAAS,GAAKA,EAAS,IAEtB,IAApBA,EAASxxC,QAAgBwxC,EAAS,GAAKA,EAAS,GAAKA,EAAS,IAAMzC,GACpEyC,EAAS,IAAMzC,EACV,CAACyC,EAAS,GAAKA,EAAS,GAAKA,EAAS,GAAIA,EAAS,IAEpC,IAApBA,EAASxxC,QAAgBwxC,EAAS,IAAMzC,GACxCyC,EAAS,GAAKA,EAAS,GAAKA,EAAS,IAAMzC,EACtC,CAACyC,EAAS,GAAIA,EAAS,GAAKA,EAAS,GAAKA,EAAS,IAEtDz/B,EAMK4/B,EAAoBhvC,EAAO,GAAGuG,KAAI,SAAAkN,GAAK,OAAI,EAAJA,CAAA,IAEzCu7B,EAAoBhvC,EAE/B,EACF,EAzFA,GA2FA,SAAgBiW,EAAapF,EAAiByb,GAM5C,IALA,IAAMpW,EAAqB,GACrBC,EAAqB,GACrB84B,EAAuB,MAAR3iB,GAAgB5sB,MAAMC,QAAQ2sB,IAAyB,IAAhBA,EAAKjvB,OAC3DuiC,EAAgB,MAARtT,GAAgB2iB,EAAgB,KAAOC,EAAe5iB,EAAMzb,GAAO5H,OAC7EhF,EAAI,EACC/G,EAAI,EAAGA,EAAI2T,EAAMxT,SAAUH,EAAG,CACrC,GAAY,MAAR0iC,EAAc,CAChB,GAAIA,EAAK37B,KAAO/G,GAAkB,IAAb2T,EAAM3T,GACzB,MAAM,IAAID,MAAM,6BAAsBC,EAAC,2BAAmB2T,EAAM3T,GAAE,gBAEpD,MAAX0iC,EAAK37B,IAAc27B,EAAK37B,GAAK/G,IAAmB,IAAb2T,EAAM3T,KAC5CgZ,EAAS5Y,KAAKuT,EAAM3T,IACpBiZ,EAAS7Y,KAAKJ,IAEZ0iC,EAAK37B,IAAM/G,GACb+G,G,CAGa,IAAb4M,EAAM3T,KACRgZ,EAAS5Y,KAAKuT,EAAM3T,IACpBiZ,EAAS7Y,KAAKJ,G,CAGlB,MAAO,CAACgZ,SAAQ,EAAEC,SAAQ,EAC5B,CAEA,SAAgB+4B,EAAe5iB,EAAuBzb,GACpD,IAAMY,EAAOZ,EAAMxT,OAkBnB,OAfAivB,EAAe,MAARA,EAAezb,EAAMtK,KAAI,SAAC8F,EAAGnP,GAAM,OAAAA,CAAA,IAAM,GAAgB8mB,OAAOsI,IAGvE,IAAA6iB,QACI7iB,EAAK+U,OAAM,SAAA+N,GAAM,OAAAA,IAAO39B,GAAQ29B,EAAK39B,CAApB,KACjB,WAAM,4DAA+CA,EAAI,aAAKA,EAAI,UAC9D,mBAAY6a,EADV,KAIV,IAAA6iB,QACI7iB,EAAK+U,MAAMgO,IACX,WAAM,uDACF,mBAAY/iB,EADV,IAIHA,EAAK/lB,KAAI,SAAAyS,GAAK,OAAAA,EAAI,EAAIvH,EAAOuH,EAAIA,CAAnB,GACvB,CACA,SAAgBq2B,EAAMr2B,GACpB,OAAOA,EAAI,GAAM,CACnB,CACA,SAAgB+1B,EAAcl+B,GAC5B,GAAqB,IAAjBA,EAAMxT,OAER,OAAO,EAGT,IADA,IAAI2C,EAAO6Q,EAAM,GACR3T,EAAI,EAAGA,EAAI2T,EAAMxT,OAAQH,IAChC8C,GAAQ6Q,EAAM3T,GAEhB,OAAO8C,CACT,CAQA,SAAgBgvC,EAAoBhvC,GAClC,IAAMU,EAAQ6H,KAAKE,KAAKF,KAAK+f,KAAKtoB,IAClC,MAAO,CAACU,EAAO6H,KAAKE,KAAKzI,EAAOU,GAClC,CAnKa,EAAAyrC,sBAAAA,EA2Fb,iBA2BA,mBAqBA,UAGA,kBAWA,uBAA4Bt7B,GAC1B,GAAqB,IAAjBA,EAAMxT,OACR,MAAMJ,MAAM,wDAGd,MAAO,CAAC4T,EAAMxT,OAAS,EAAIwT,EAAMA,EAAMxT,OAAS,GAAK,EAAGwT,EAAMA,EAAMxT,OAAS,GAC/E,EACA,wBAIA,uBAA4BwT,EAAiBy+B,GAC3C,YAD2C,IAAAA,IAAAA,EAAA,GACpCP,EAAcl+B,EAAMqE,MAAM,EAAGrE,EAAMxT,OAASiyC,GACrD,C,kfCjOA,cAGA,UAEa,EAAAvwB,mCACT,SAACgqB,EAA8Cl4B,EAC9CoN,GACC,IAAM+O,EAAW/O,IAAgB,EAAAqB,YAAY8B,UAAYnD,IAAgB,EAAAqB,YAAY8b,iBAAoB,EAAI,EACvGhsB,EAAW6O,IAAgB,EAAAqB,YAAYC,OACvCiB,EAAavC,IAAgB,EAAAqB,YAAY8b,kBAAoBnd,IAAgB,EAAAqB,YAAYC,OACzF+uB,EAAYrwB,IAAgB,EAAAqB,YAAYM,oBAAsB/O,EAAMxT,OAAS,OAAIL,EACjFwS,EAAgByO,IAAgB,EAAAqB,YAAYM,oBAC9C/O,EAAMtK,KAAI,SAACkN,EAAGvW,GAAM,OAAAA,IAAM2T,EAAMxT,OAAS,EAAQ,EAAJoW,EAAQA,CAAjC,SACpBzW,EACJ,OAAO,IAAAujB,8BACHwoB,EAAuBl4B,EAAOmc,EAASxd,EAAe,CAACJ,SAAQ,EAAEoR,UAAS,EAAE8tB,UAAS,GAC3F,EAES,EAAAtwB,+BACT,SAAC+qB,EAA8Cl4B,EAA0BoN,GAEnE,IAAMjH,GAAS,IAAA+H,oCAAmCgqB,EAAuBl4B,EAAOoN,GAChF,MAAO,CAACjH,EAAOtW,MAAOsW,EAAOvW,OAC/B,EAKK,EAAA8f,6BACT,SAACwoB,EAA8Cl4B,EAA0BpM,EACxE+K,EAAmC6+B,QADqC,IAAA5pC,IAAAA,EAAA,GAEvE,IAAM2K,KAAci/B,IAASA,EAAMj/B,UAC7B,IAAkB25B,EAAsBqF,iBAAiBh/B,GAAWI,GAAyBqB,EAAOw9B,GAAM,GAAzG3tC,EAAK,KAAED,EAAM,KACdgR,EAAOZ,EAAMxT,OACfkyC,EAAe1+B,EAAMqE,MAAM,GAI/B,GAHa,IAATzD,IACF89B,EAAe,CAAC,IAED,IAAb9qC,EAEF+K,EAAgBqB,OACX,GAAIzB,EAAU,CACnB,GAAiB,IAAb3K,EACF,MAAM,IAAIxH,MAAM,sCAElBuS,EAAgBqB,EACZY,EAAO,IACT89B,EAAa99B,EAAO,GAAKlJ,KAAKE,KAAK8mC,EAAa99B,EAAO,GAAK,IAE1DA,EAAO,IACT89B,EAAa99B,EAAO,GAAKlJ,KAAKE,KAAK8mC,EAAa99B,EAAO,GAAK,G,MAEzD,IAAKjC,EACV,MAAM,IAAIvS,MAAM,oDAElB,MAAO,CACLyD,MAAK,EACLD,OAAM,EACNgE,SAAQ,EACR2K,SAAQ,EACRyB,MAAO0+B,EACP79B,QAAS,EAAAkC,UAAU0N,eAAeiuB,GAClC//B,cAAa,EACbggC,WAAanB,GAASA,EAAM7tB,UAEhC,C,igDClEJ,cAsBA,aAME,WACWvS,EAAgCiQ,EAA8C4qB,EAC7E2G,GADD,KAAAxhC,UAAAA,EAAgC,KAAAiQ,eAAAA,EAA8C,KAAA4qB,SAAAA,EAC7E,KAAA2G,OAAAA,EAJK,KAAAC,YAAuE,IAAIzxC,IAKtFwxC,EAAOnD,gBACT7uC,KAAKkyC,cAAgB,IAAI1xC,IACzBR,KAAKmyC,aAAe,IAAI3xC,IACxBR,KAAKoyC,cAAgB,IAAI5xC,IAE7B,CAoLF,OAnLE,YAAA6iB,wBAAA,SACIH,EAA2B3J,EAAuB/X,EAA0B2hB,GAC9E,IAAMkvB,EAAkBryC,KAAKsyC,cAAcpvB,GAErCqvB,EAAUvyC,KAAKwQ,UAAUgiC,WAAWH,EAAiB94B,EAAOvS,UAAY,EAAGmc,GACjF,GAAI5J,EAAO5H,UAAsB,IAAVwR,EACrB,MAAM,IAAI3jB,MAAM,mBAElB,IAGI2I,EACA+pC,EAJEjvC,EAAQsW,EAAOtW,MACfD,EAASuW,EAAOvW,OAItB,GAAIhD,KAAKgyC,OAAOnD,cAAe,CAC7B1mC,EAAM,UAAGlF,EAAK,YAAID,EAAM,YAAIuvC,EAAQnsC,OAAM,YAAImsC,EAAQ3C,eAAc,YAAI2C,EAAQ/xB,cAChF0xB,EAAgBlyC,KAAKkyC,cAAc9vC,IAAI+F,MAErC+pC,EAAgB,GAChBlyC,KAAKkyC,cAAcnwC,IAAIoG,EAAK+pC,IAG9B,IAAMC,EAAenyC,KAAKmyC,aAAa/vC,IAAI+F,GAC3C,GAAIgqC,GAAgBA,EAAavyC,OAAS,EAAG,CAC3C,IAAM,EAAUuyC,EAAaM,MAK7B,OAJAP,EAAcryC,KAAK,GACL,IAAVsjB,GACFnjB,KAAKwQ,UAAUkiC,cAAc,EAASzvC,EAAOD,EAAQuvC,EAASvyC,KAAK2yC,cAAczvB,EAAU1hB,IAEtF,C,EAIX,EAAAkP,OAAOE,QAAQ,iBAAkB,uCAAgC2I,EAAOtW,MAAK,YAAIsW,EAAOvW,SACxF,IAAMge,EAAUhhB,KAAKwQ,UAAUoiC,gBAAgB3vC,EAAOD,EAAQuvC,EAASvyC,KAAK2yC,cAAczvB,EAAU1hB,IAMpG,OAJIxB,KAAKgyC,OAAOnD,gBACdqD,EAAeryC,KAAKmhB,GACpBhhB,KAAKoyC,cAAcrwC,IAAIif,EAAS7Y,IAE3B6Y,CACT,EACA,YAAA0D,YAAA,SAAY3C,EAAiBmB,EAA2Blc,GAAxD,WAIE,OAHKA,IACHA,EAAW,GAENhH,KAAKqrC,SAASK,MAAM,UAAW,8BAA8B,WAClE,IAAMyE,EAAWpuB,EAAG3O,MAAMwuB,QAAO,SAACrmB,EAAGxH,GAAM,OAAAwH,EAAIxH,CAAJ,IAAS/M,EAC9CxF,EAAO,EAAKgP,UAAUkU,YACxB3C,EAAGf,QAASe,EAAG9e,MAAO8e,EAAG/e,OAAQmtC,EAAU,EAAKmC,cAAcpvB,GAAWlc,GAC7E,OAAO,EAAK6rC,aAAa3vB,EAAU1hB,EACrC,GACF,EACM,YAAAmjB,iBAAN,SAAuB5C,EAAiBmB,EAA2Blc,G,kFAKjE,OAJMib,EAASF,EAAGH,OAAOK,OACpBjb,IACHA,EAAW,GAEThH,KAAKiyC,YAAYt3B,IAAIsH,IACjB,EAAcjiB,KAAKiyC,YAAY7vC,IAAI6f,GAClC,CAAP,EAAO,IAAIvc,SAA2B,SAAAC,GAAW,oBAAW,EAAX,EAAa9F,KAAK8F,EAAlB,MAE5C,CAAP,EAAO3F,KAAKqrC,SAASK,MAAM,UAAW,mCAAmC,gD,8DAIvE,OAHA1rC,KAAKiyC,YAAYlwC,IAAIkgB,EAAQ,IACvBkuB,EAAWpuB,EAAG3O,MAAMwuB,QAAO,SAACrmB,EAAGxH,GAAM,OAAAwH,EAAIxH,CAAJ,IAAS/M,EAEpD,GAAMhH,KAAKwQ,UAAUsiC,yB,OAOrB,OAPA,SACMtxC,EAAOxB,KAAKwQ,UAAUkU,YACxB3C,EAAGf,QAASe,EAAG9e,MAAO8e,EAAG/e,OAAQmtC,EAAUnwC,KAAKsyC,cAAcpvB,GAAWlc,GACvE+rC,EAAa/yC,KAAK6yC,aAAa3vB,EAAU1hB,GACzCwxC,EAAchzC,KAAKiyC,YAAY7vC,IAAI6f,GACzCjiB,KAAKiyC,YAAY1lC,OAAO0V,GACxB+wB,SAAAA,EAAax+B,SAAQ,SAAA7O,GAAW,OAAAA,EAAQotC,EAAR,IACzB,CAAP,EAAOA,G,kBAGX,YAAA7tB,wBAAA,SAAwBnD,GAAxB,WACE,OAAO/hB,KAAKqrC,SAASK,MAAM,UAAW,0CAA0C,WAC9E,IAAMyE,EAAWpuB,EAAG3O,MAAMwuB,QAAO,SAACrmB,EAAGxH,GAAM,OAAAwH,EAAIxH,CAAJ,IACrCvS,EAAO,EAAKgP,UAAUkU,YAAY3C,EAAGf,QAASe,EAAG9e,MAAO8e,EAAG/e,OAAmB,EAAXmtC,EAAc,OAAQ,GAC/F,OAAO,IAAI1vC,aAAae,EAAKsB,OAAQtB,EAAKkH,WAAYynC,EACxD,GACF,EACA,YAAAnrB,eAAA,SAAeR,EAA0ByuB,GACvC,IAAI9qC,EACJ,GAAInI,KAAKgyC,OAAOnD,gBACd1mC,EAAMnI,KAAKoyC,cAAchwC,IAAIoiB,EAAYxD,UAChC,CACHiyB,GACFjzC,KAAKoyC,cAAc7lC,OAAOpE,GAE5B,IAAM+pC,EAAgBlyC,KAAKkyC,cAAc9vC,IAAI+F,GAC7C,GAAI+pC,EAAe,CACjB,IAAM75B,EAAQ65B,EAAcxyC,QAAQ8kB,EAAYxD,SAChD,IAAe,IAAX3I,EAAc,CAChB65B,EAAcvyC,OAAO0Y,EAAO,GAC5B,IAAI85B,EAAenyC,KAAKmyC,aAAa/vC,IAAI+F,GACpCgqC,IACHA,EAAe,GACfnyC,KAAKmyC,aAAapwC,IAAIoG,EAAKgqC,IAE7BA,EAAatyC,KAAK2kB,EAAYxD,Q,GAMjC7Y,IAAO8qC,IACV,EAAAviC,OAAOE,QAAQ,iBAAkB,mCAA4B4T,EAAYvhB,MAAK,YAAIuhB,EAAYxhB,SAC9FhD,KAAKwQ,UAAUyiC,cAAczuB,EAAYxD,SAE7C,EACA,YAAA6xB,aAAA,SAAa3vB,EAA2B1hB,GACtC,OAAQ0hB,GACN,IAAK,QACH,OAAO1hB,aAAgBX,WAAaW,EAAOX,WAAWe,KAAKJ,GAC7D,IAAK,QACH,OAAOA,aAAgBV,WAAaU,EAAOV,WAAWc,KAAKJ,GAC7D,IAAK,OACH,OAAOA,aAAgBb,UAAYa,EAAOb,UAAUiB,KAAKJ,GAC3D,IAAK,SACH,OAAOA,aAAgBZ,YAAcY,EAAOZ,YAAYgB,KAAKJ,GAC/D,IAAK,SACH,OAAOA,aAAgBR,YAAcQ,EAAOR,YAAYY,KAAKJ,GAC/D,IAAK,QACL,IAAK,OACH,OAAOA,aAAgBd,WAAac,EAAOd,WAAWkB,KAAKJ,GAC7D,IAAK,UACH,OAAOA,aAAgBf,aAAee,EAAOf,aAAamB,KAAKJ,GACjE,IAAK,UACH,OAAOA,aAAgBT,aAAeS,EAAOT,aAAaa,KAAKJ,GACjE,QACE,MAAM,IAAIhC,MAAM,0BAAmB0jB,EAAQ,sBAEjD,EACA,YAAAyvB,cAAA,SAAczvB,EAA2B1hB,GACvC,GAAKA,EAGL,OAAQA,aAAgBf,aAAgBe,EAAO,IAAIf,aAAae,EAmBlE,EACA,YAAA8wC,cAAA,SAAcY,GACZ,MAAO,OAgBT,EACA,YAAAnuB,oBAAA,WACE/kB,KAAKwQ,UAAUuU,qBACjB,EACF,EAlMA,GAAa,EAAA6pB,eAAAA,C,kCCgBb,IAAY/sB,E,uEAAAA,EAAA,EAAAA,cAAA,EAAAA,YAAW,KACrB,yBACA,2CACA,uBACA,mDACA,gD,+rDC3CF,cAOA,0BAA+B9P,GAC7B,IAAMohC,EAAMphC,EAAcnS,OAC1B,OAAOmS,EAAc0F,MAAM,EAAG07B,EAAM,GAAG5sB,OAAOxU,EAAcohC,EAAM,GAAK,EACzE,EAEA,uBACIC,EAAwBC,EAAmCC,G,YAAnC,IAAAD,IAAAA,EAAA,SAAWE,GAAqB,W,4DAC1D,MAAO,CAAP,EAAO,IAAI7tC,SAAc,SAACC,EAASC,GACjC,IAAI4tC,EAAW,EAETC,EAAQ,WACZ,GAAIL,IACFztC,QADF,CAKA6tC,IAEA,IAAME,EAAcL,EAAQG,GAEV,MAAdF,GAAsBE,GAAYF,EACpC1tC,IAGF+tC,WAAWF,EAAOC,E,CACpB,EAEAD,GACF,I,QAOF,sDAA2Dh/B,GAEzD,OADA,IAAAi9B,aAA8B,IAAhBj9B,GAAsD,IAAvBA,EAAY7U,QAAc,WAAM,+CACtE,MAAQ6U,EAAYm/B,OAAO,GAAGC,cAAgBp/B,EAAYgD,MAAM,EACzE,EAMA,iEAAsEhD,GAEpE,OADA,IAAAi9B,aAA8B,IAAhBj9B,GAAsD,IAAvBA,EAAY7U,QAAc,WAAM,+CACtE,MAAQ6U,EAAYm/B,OAAO,GAAGC,cAAgBp/B,EAAYgD,MAAM,GAAK,aAC9E,EAGA,6BAAkCqX,EAA+BtX,GAI/D,OAF8BK,KAAKC,MAAMD,KAAKE,UAAU+W,IACxCtX,CAElB,EAGA,6BAAkCY,EAAkBM,GAClD,OAAOA,EAAS5P,KAAI,SAAAkN,GAAK,OAAAoC,EAAOpC,EAAP,IAAWvM,KAAK,KAC3C,EAGA,6BAAkCuK,GAChC,GAAIA,GAAQ,EACV,MAAO,MACF,GAAa,IAATA,EACT,MAAO,QACF,GAAa,IAATA,EACT,MAAO,QACF,GAAa,IAATA,EACT,MAAO,QACF,GAAa,IAATA,EACT,MAAO,QACF,GAAa,IAATA,EACT,MAAO,QAEP,MAAMxU,MAAM,uBAAgBwU,EAAI,yBAEpC,EAEA,yBAA8BA,GAC5B,YAD4B,IAAAA,IAAAA,EAAA,GACrB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAKyD,MAAM,EAAGzD,EACjD,C,yIC1FA,cAEA,UAEM7D,EAA6C,CAAC,EAuCpD,SAAgB2jC,EAAsB1jC,GACpC,IAUIu7B,EAVE3mC,EAyCR,WACE,GAAwB,oBAAbC,SAA0B,CACnC,GAA+B,oBAApB8uC,gBACT,MAAM,IAAI10C,UAAU,6DAEtB,OAAO,IAAI00C,gBAAgB,EAAG,E,CAEhC,IAAM/uC,EAA4BC,SAASC,cAAc,UAGzD,OAFAF,EAAO/B,MAAQ,EACf+B,EAAOhC,OAAS,EACTgC,CACT,CApDiBgvC,GAWTC,EAV4C,CAChDlb,OAAO,EACPmb,OAAO,EACPC,WAAW,EACXC,SAAS,EACTC,uBAAuB,EACvBC,oBAAoB,EACpBC,8BAA8B,GAIhC,KAAKnkC,GAA2B,WAAdA,KAChBu7B,EAAK3mC,EAAOI,WAAW,SAAU6uC,IAE/B,IACE,OAAO,IAAI,EAAAO,aAAa7I,EAAI,E,CAC5B,MAAOniC,GACP,EAAAkH,OAAOG,QAAQ,mBAAoB,yEAAkErH,G,CAI3G,KAAK4G,GAA2B,UAAdA,KAChBu7B,EAAK3mC,EAAOI,WAAW,QAAS6uC,IAAOjvC,EAAOI,WAAW,qBAAsB6uC,IAE7E,IACE,OAAO,IAAI,EAAAO,aAAa7I,EAAI,E,CAC5B,MAAOniC,GACP,EAAAkH,OAAOG,QACH,mBACA,gGAAyFrH,G,CAKnG,MAAM,IAAIhK,MAAM,yBAClB,CArEA,8BAAgBiR,EAAmBL,GACjC,IAAIvK,EACEuK,GAA2B,WAAdA,KAA2B,WAAYD,GAE7CC,GAA2B,UAAdA,KAA0B,UAAWD,KAC7DtK,EAAUsK,EAAMjQ,OAFhB2F,EAAUsK,EAAMskC,OAKlB5uC,EAAUA,GAAWiuC,EAAsB1jC,GAC3CA,EAAYA,GAAiC,IAApBvK,EAAQ6M,QAAgB,QAAU,SAC3D,IAAMi5B,EAAK9lC,EAAQ8lC,GAInB,OAFAx7B,EAAMC,GAAavK,EAEf8lC,EAAG+I,wBACEvkC,EAAMC,GACNK,EAAmBL,KAG5Bu7B,EAAGgJ,QAAQhJ,EAAGiJ,YACdjJ,EAAGgJ,QAAQhJ,EAAGkJ,cACdlJ,EAAGgJ,QAAQhJ,EAAGmJ,OACdnJ,EAAGgJ,QAAQhJ,EAAGoJ,QACdpJ,EAAGgJ,QAAQhJ,EAAGqJ,qBACdrJ,EAAGgJ,QAAQhJ,EAAGsJ,iBACdtJ,EAAGuJ,OAAOvJ,EAAGwJ,cACbxJ,EAAGuJ,OAAOvJ,EAAGyJ,WACbzJ,EAAG0J,SAAS1J,EAAG2J,MAERzvC,EACT,EAEA,yB,0pEC3CA,cAEA,aAEA,SAWA,SAAgB0vC,EAAqBrnC,GAEnC,IADA,IAAIzO,EAAI,EACDA,EAAIyO,EAAItO,QACEsO,EAAIzO,OADIA,GAMzB,OAAOA,EAAI,CACb,CATA,yBAcA,iBAwCE,WAAYksC,EAA2Bj5B,GAF/B,KAAA8iC,kBAAmB,EAogBnB,KAAAC,YAA0B,GAjgBhCz1C,KAAK2rC,GAAKA,EACV3rC,KAAK0S,QAAUA,EAEf1S,KAAK01C,gBACL11C,KAAK21C,aAAe31C,KAAK41C,qBACzB51C,KAAK61C,YAAc71C,KAAK81C,oBACxB91C,KAAK+1C,sBACP,CAmhBF,OAjhBE,YAAAnD,gBAAA,SAAgB3vC,EAAeD,EAAgBuvC,EAAsB/wC,GACnE,IAAMmqC,EAAK3rC,KAAK2rC,GAEV3qB,EAAU2qB,EAAGqK,gBAEnBrK,EAAGmC,YAAYnC,EAAGsK,WAAYj1B,GAC9B2qB,EAAGuK,cAAcvK,EAAGsK,WAAYtK,EAAGwK,mBAAoBxK,EAAGyK,SAC1DzK,EAAGuK,cAAcvK,EAAGsK,WAAYtK,EAAG0K,mBAAoB1K,EAAGyK,SAC1DzK,EAAGuK,cAAcvK,EAAGsK,WAAYtK,EAAG2K,eAAgB3K,EAAG4K,eACtD5K,EAAGuK,cAAcvK,EAAGsK,WAAYtK,EAAG6K,eAAgB7K,EAAG4K,eACtD,IAAMzzC,EAAStB,EAAO+wC,EAAQv3B,OAAOxZ,EAAMyB,EAAQD,GAAU,KAQ7D,OAPA2oC,EAAG8K,WACC9K,EAAGsK,WACH,EACA1D,EAAQ3C,eAAgB3sC,EAAOD,EAC/B,EACAuvC,EAAQnsC,OAAQmsC,EAAQ/xB,YAAa1d,GACzC9C,KAAK02C,aACE11B,CACT,EACA,YAAA0xB,cAAA,SACI1xB,EAAuB/d,EAAeD,EAAgBuvC,EAAsB/wC,GAC9E,IAAMmqC,EAAK3rC,KAAK2rC,GAChBA,EAAGmC,YAAYnC,EAAGsK,WAAYj1B,GAC9B,IAAMle,EAASyvC,EAAQv3B,OAAOxZ,EAAMyB,EAAQD,GAC5C2oC,EAAGgL,cACChL,EAAGsK,WACH,EACA,EACA,EACAhzC,EAAOD,EAAQuvC,EAAQnsC,OAAQmsC,EAAQ/xB,YAAa1d,GACxD9C,KAAK02C,YACP,EACA,YAAArJ,kBAAA,SAAkBrsB,EAAuB/d,EAAeD,GACtD,IAAM2oC,EAAK3rC,KAAK2rC,GAEhBA,EAAGmC,YAAYnC,EAAGsK,WAAYj1B,GAC9B2qB,EAAGiL,gBAAgBjL,EAAGkL,YAAa72C,KAAK61C,aACxClK,EAAGmL,qBACCnL,EAAGkL,YAAalL,EAAGoL,kBAAmBpL,EAAGsK,WAAYj1B,EACrD,GACJhhB,KAAK02C,aACL/K,EAAGqL,SAAS,EAAG,EAAG/zC,EAAOD,GACzB2oC,EAAGsL,QAAQ,EAAG,EAAGh0C,EAAOD,EAC1B,EACA,YAAA0hB,YAAA,SACI1D,EAAuB/d,EAAeD,EAAgBmtC,EAAkBjtB,EACxElc,GACF,IAAM2kC,EAAK3rC,KAAK2rC,GACX3kC,IACHA,EAAW,GAERhH,KAAKw1C,kBACRx1C,KAAKqtC,kBAAkBrsB,EAAS/d,EAAOD,GAEzC,IAAMuvC,EAAUvyC,KAAKwyC,WAAWtvB,EAAUlc,GACpClE,EAASyvC,EAAQrC,SAASjtC,EAAQD,GAUxC,OARA2oC,EAAGmC,YAAYnC,EAAGsK,WAAYj1B,GAC9B2qB,EAAGmL,qBACCnL,EAAGkL,YAAalL,EAAGoL,kBAAmBpL,EAAGsK,WAAYj1B,EACrD,GAEJ2qB,EAAGuL,WAAW,EAAG,EAAGj0C,EAAOD,EAAQ2oC,EAAGqE,KAAMuC,EAAQ/xB,YAAa1d,GACjE9C,KAAK02C,aAEEnE,EAAQt3B,OAAOnY,EAAQqtC,EAChC,EAEA,YAAAgH,mBAAA,WAEE,OAAO,CACT,EACA,YAAAC,iBAAA,WACE,IAAMzL,EAAK3rC,KAAK2rC,GACV0L,EAAI1L,EAAG2L,aAAat3C,KAAK2rC,GAAG4L,gBAClC,MAAO,iBAAWF,EAAI1L,EAAG6L,SAC3B,EACA,YAAAC,kBAAA,WACE,OAAOz3C,KAAK2rC,GAAG2L,aAAat3C,KAAK2rC,GAAG+L,mBACtC,EACA,YAAAC,sBAAA,WACE,OAAO33C,KAAK2rC,GAAG2L,aAAat3C,KAAK2rC,GAAGiM,oBACtC,EACA,YAAAlK,oBAAA,SAAoBJ,EAAwBE,GAC1C,IAAM7B,EAAK3rC,KAAK2rC,GAChBA,EAAGkM,oBAAoBvK,EAAgB,EAAG3B,EAAGx+B,OAAO,EAAO,GAAI,GAC/Dw+B,EAAGmM,wBAAwBxK,IACC,IAAxBE,IACF7B,EAAGkM,oBAAoBrK,EAAoB,EAAG7B,EAAGx+B,OAAO,EAAO,GAAI,IACnEw+B,EAAGmM,wBAAwBtK,IAE7BxtC,KAAK02C,YACP,EACA,YAAAtJ,cAAA,SACIhB,EACAc,GAEF,IAAMvB,EAAK3rC,KAAK2rC,GACVhrB,EAAUgrB,EAAGyB,gBAMnB,OAHAzB,EAAGoM,aAAap3B,EAASyrB,GACzBT,EAAGoM,aAAap3B,EAASusB,GACzBvB,EAAGqM,YAAYr3B,GACRA,CACT,EACA,YAAAosB,cAAA,SAAcxvB,EAAsB06B,GAClC,IAAMtM,EAAK3rC,KAAK2rC,GACVuM,EAASvM,EAAGwM,aAAaF,GAC/B,IAAKC,EACH,MAAM,IAAI14C,MAAM,iDAA0Cy4C,IAK5D,GAFAtM,EAAGpuB,aAAa26B,EAAQ36B,GACxBouB,EAAGoB,cAAcmL,IACwC,IAArDvM,EAAGyM,mBAAmBF,EAAQvM,EAAG0M,gBACnC,MAAM,IAAI74C,MAAM,oCAA6BmsC,EAAG2M,iBAAiBJ,GAAO,6BAE5E36B,IAEE,OAAO26B,CACT,EACA,YAAA7L,aAAA,SAAa6L,GACXl4C,KAAK2rC,GAAGU,aAAa6L,EACvB,EACA,YAAA9J,qBAAA,SAAqBptB,EAAuBusB,EAAkBY,GAC5D,IAAMxC,EAAK3rC,KAAK2rC,GAChBA,EAAG4M,cAAc5M,EAAG6L,SAAWjK,GAC/BvtC,KAAK02C,aACL/K,EAAGmC,YAAYnC,EAAGsK,WAAYj1B,GAC9BhhB,KAAK02C,aACL/K,EAAGuC,UAAUC,EAAeZ,GAC5BvtC,KAAK02C,YACP,EACA,YAAAvK,KAAA,WACEnsC,KAAK2rC,GAAG6M,WAAWx4C,KAAK2rC,GAAG8M,eAAgB,EAAG,GAC9Cz4C,KAAK02C,YACP,EACA,YAAAA,WAAA,WACE,GAAI,EAAA52C,IAAImtC,MAAO,CACb,IAAMtB,EAAK3rC,KAAK2rC,GACVO,EAAQP,EAAG+M,WACbC,EAAQ,GACZ,OAAQzM,GACN,KAAMP,EAAW,SACf,OACF,KAAMA,EAAe,aACnBgN,EAAQ,eACR,MACF,KAAMhN,EAAgB,cACpBgN,EAAQ,gBACR,MACF,KAAMhN,EAAoB,kBACxBgN,EAAQ,oBACR,MACF,KAAMhN,EAAgC,8BACpCgN,EAAQ,gCACR,MACF,KAAMhN,EAAgB,cACpBgN,EAAQ,gBACR,MACF,KAAMhN,EAAqB,mBACzBgN,EAAQ,qBACR,MACF,QACEA,EAAQ,+BAAwBzM,EAAM0M,SAAS,KAEnD,MAAM,IAAIp5C,MAAMm5C,E,CAEpB,EACA,YAAA1F,cAAA,SAAcjyB,GACZhhB,KAAK2rC,GAAGsH,cAAcjyB,EACxB,EACA,YAAAsrB,cAAA,SAAc3rB,GACZ3gB,KAAK2rC,GAAGW,cAAc3rB,EACxB,EACA,YAAA6xB,WAAA,SAAWtvB,EAA4Blc,EAAkBmc,GACvD,QADuD,IAAAA,IAAAA,EAAA,GAClC,IAAjBnjB,KAAK0S,QACP,OAAO,IAAImmC,EAAazI,sBAAsBpwC,KAAK2rC,GAA8B3kC,GAGnF,OAAQkc,GACN,IAAK,QACH,OAAc,IAAVC,GAAsCnjB,KAAK84C,yBACtC,IAAID,EAAavI,qBAAqBtwC,KAAK2rC,GAAI3kC,GAE/C,IAAI6xC,EAAavI,qBACpBtwC,KAAK2rC,GAAI3kC,EAAUhH,KAAK+4C,0BAA2BC,gBAE3D,IAAK,MACH,MAAM,IAAIx5C,MAAM,mBAClB,IAAK,OACH,OAAO,IAAIq5C,EAAanI,iBAAiB1wC,KAAK2rC,GAAI3kC,GACpD,QACE,MAAM,IAAIxH,MAAM,4BAAqB0jB,IAE3C,EACA,YAAA6B,oBAAA,WAEE,IADA,IAAM4mB,EAAK3rC,KAAK2rC,GACPsN,EAAO,EAAGA,EAAOj5C,KAAKk5C,uBAAwBD,EACrDtN,EAAG4M,cAAc5M,EAAG6L,SAAWyB,GAC/BtN,EAAGmC,YAAYnC,EAAGsK,WAAY,KAElC,EACA,YAAAlmC,QAAA,WACE,IAAI/P,KAAKm5C,SAAT,CAGA,IAAMxN,EAAK3rC,KAAK2rC,GAChBA,EAAGiL,gBAAgBjL,EAAGkL,YAAa,MACnClL,EAAGyN,kBAAkBp5C,KAAK61C,aAC1BlK,EAAG0N,WAAW1N,EAAG2N,aAAc,MAC/B3N,EAAG4N,aAAav5C,KAAK21C,cACrBhK,EAAG0N,WAAW1N,EAAG6N,qBAAsB,MACvC7N,EAAG8N,SACHz5C,KAAKm5C,UAAW,C,CAClB,EAEQ,YAAAO,sBAAR,WAEE,OAAO,IAAIj5C,aAAa,EACrB,EAAK,EAAM,EAAK,EAAK,GACrB,GAAM,EAAK,EAAK,EAAK,EACtB,EAAM,EAAM,EAAK,EAAK,EACtB,GAAO,EAAK,EAAK,EAAK,GAE1B,EACQ,YAAAm1C,mBAAR,WACE,IAAMjK,EAAK3rC,KAAK2rC,GACV7oC,EAAS6oC,EAAGgO,eAClB,IAAK72C,EACH,MAAM,IAAItD,MAAM,gCAElB,IAAMo6C,EAAW55C,KAAK05C,wBAItB,OAHA/N,EAAG0N,WAAW1N,EAAG2N,aAAcx2C,GAC/B6oC,EAAGkO,WAAWlO,EAAG2N,aAAcM,EAAUjO,EAAGmO,aAC5C95C,KAAK02C,aACE5zC,CACT,EACQ,YAAAgzC,kBAAR,WACE,IAAMiE,EAAK/5C,KAAK2rC,GAAGmK,oBACnB,IAAKiE,EACH,MAAM,IAAIv6C,MAAM,mCAElB,OAAOu6C,CACT,EAEQ,YAAAhE,qBAAR,WACE,IAAMpK,EAAK3rC,KAAK2rC,GAMhB,GAJA3rC,KAAKg6C,sCAAwCh6C,KAAKi6C,2CAClDj6C,KAAK84C,yBAA2B94C,KAAKk6C,qBACrCl6C,KAAKilB,2BAA6BjlB,KAAKm6C,uBAElB,IAAjBn6C,KAAK0S,UAAkB1S,KAAK+4C,4BAA8B/4C,KAAK84C,yBACjE,MAAM,IAAIt5C,MAAM,0DAGlBQ,KAAKo6C,kBAAoBp6C,KAAK84C,0BAA4B94C,KAAKq6C,oBAG/Dr6C,KAAK2uC,eAAiBhD,EAAG2L,aAAa3L,EAAG2O,kBACzCt6C,KAAKk5C,qBAAuBvN,EAAG2L,aAAa3L,EAAG4O,yBAM3Cv6C,KAAK0S,OAMX,EACQ,YAAAgjC,cAAR,WACuB,IAAjB11C,KAAK0S,SACP1S,KAAKw6C,0BAA4Bx6C,KAAK2rC,GAAG8O,aAAa,0BACtDz6C,KAAK06C,kCAAoC16C,KAAK2rC,GAAG8O,aAAa,qCAE9Dz6C,KAAK26C,sBAAwB36C,KAAK2rC,GAAG8O,aAAa,qBAClDz6C,KAAK+4C,0BAA4B/4C,KAAK2rC,GAAG8O,aAAa,0BAE1D,EAEQ,YAAAR,yCAAR,WAGE,IAAMtO,EAAK3rC,KAAK2rC,GACV3qB,EAAU2qB,EAAGqK,gBACnBrK,EAAGmC,YAAYnC,EAAGsK,WAAYj1B,GAE9B,IAAM4uB,EAAkC,IAAjB5vC,KAAK0S,QAAiBi5B,EAAoCoE,QAAUpE,EAAGqE,KAC9FrE,EAAG8K,WAAW9K,EAAGsK,WAAY,EAAGrG,EAAgB,EAAG,EAAG,EAAGjE,EAAGqE,KAAMrE,EAAGx+B,MAAO,MAE5E,IAAMytC,EAAcjP,EAAGmK,oBACvBnK,EAAGiL,gBAAgBjL,EAAGkL,YAAa+D,GAEnCjP,EAAGmL,qBAAqBnL,EAAGkL,YAAalL,EAAGoL,kBAAmBpL,EAAGsK,WAAYj1B,EAAS,GAEtF,IAAM65B,EAAalP,EAAGmP,uBAAuBnP,EAAGkL,eAAiBlL,EAAGoP,qBAKpE,OAJApP,EAAGmC,YAAYnC,EAAGsK,WAAY,MAC9BtK,EAAGiL,gBAAgBjL,EAAGkL,YAAa,MACnClL,EAAGsH,cAAcjyB,GACjB2qB,EAAGyN,kBAAkBwB,GACdC,CACT,EAEQ,YAAAX,mBAAR,WACE,GAAqB,IAAjBl6C,KAAK0S,SACP,IAAK1S,KAAKw6C,0BACR,OAAO,OAGT,IAAKx6C,KAAK26C,sBACR,OAAO,EAGX,OAAO36C,KAAKg6C,qCACd,EAEQ,YAAAG,qBAAR,WACE,GAAqB,IAAjBn6C,KAAK0S,SACP,IAAK1S,KAAKw6C,0BACR,OAAO,MAEJ,CACL,IAAKx6C,KAAK26C,sBACR,OAAO,EAET,IAAK36C,KAAK2rC,GAAG8O,aAAa,4BACxB,OAAO,C,CAGX,OAAOz6C,KAAKg6C,qCACd,EAKQ,YAAAK,kBAAR,WAIE,IAEIr5B,EACA45B,EACAxO,EACA4O,EACAr6B,EANEgrB,EAAK3rC,KAAK2rC,GAQhB,IACE3qB,EAAU2qB,EAAGqK,gBACb4E,EAAcjP,EAAGmK,oBACjBnK,EAAGmC,YAAYnC,EAAGsK,WAAYj1B,GAG9B,IAAM4uB,EAAkC,IAAjB5vC,KAAK0S,QAAiBi5B,EAAoCoE,QAAUpE,EAAGqE,KAS9F,OARArE,EAAG8K,WAAW9K,EAAGsK,WAAY,EAAGrG,EAAgB,EAAG,EAAG,EAAGjE,EAAGqE,KAAMrE,EAAGx+B,MAAO,MAE5Ew+B,EAAGiL,gBAAgBjL,EAAGkL,YAAa+D,GACnCjP,EAAGmL,qBAAqBnL,EAAGkL,YAAalL,EAAGoL,kBAAmBpL,EAAGsK,WAAYj1B,EAAS,GAEtF2qB,EAAGuJ,OAAOvJ,EAAGmJ,UAEb1I,EAAeT,EAAGwM,aAAaxM,EAAGqB,kBAIlCrB,EAAGpuB,aAAa6uB,EAAc,iBAC9BT,EAAGoB,cAAcX,MAEjB4O,EAAiBrP,EAAGwM,aAAaxM,EAAGwB,oBAIpCxB,EAAGpuB,aAAay9B,EAAgB,8DAChCrP,EAAGoB,cAAciO,MAEjBr6B,EAAUgrB,EAAGyB,mBAIbzB,EAAGoM,aAAap3B,EAASyrB,GACzBT,EAAGoM,aAAap3B,EAASq6B,GACzBrP,EAAGqM,YAAYr3B,GACfgrB,EAAGC,WAAWjrB,GAEdgrB,EAAG6M,WAAW7M,EAAGsP,OAAQ,EAAG,GACrBtP,EAAG+M,aAAe/M,EAAGuP,W,SAG5BvP,EAAGgJ,QAAQhJ,EAAGmJ,OAEVn0B,GACFgrB,EAAGW,cAAc3rB,GAEfyrB,GACFT,EAAGU,aAAaD,GAEd4O,GACFrP,EAAGU,aAAa2O,GAEdJ,IACFjP,EAAGiL,gBAAgBjL,EAAGkL,YAAa,MACnClL,EAAGyN,kBAAkBwB,IAEnB55B,IACF2qB,EAAGmC,YAAYnC,EAAGsK,WAAY,MAC9BtK,EAAGsH,cAAcjyB,G,CAGvB,EAEA,YAAAm6B,WAAA,WACE,GAAqB,IAAjBn7C,KAAK0S,SAAiB1S,KAAK06C,kCAAmC,CAChE,IAAMU,EAAMp7C,KAAK2rC,GACX0P,EAAMr7C,KAAK06C,kCAEXY,EAAQF,EAAIG,cAElB,OADAH,EAAII,WAAWH,EAAII,iBAAkBH,GAC9BA,C,CAGP,MAAM,IAAI97C,MAAM,4CAEpB,EAEA,YAAAk8C,SAAA,WACE,GAAqB,IAAjB17C,KAAK0S,UAAiB1S,KAAK06C,kCAO7B,MAAM,IAAIl7C,MAAM,4CANhB,IAAM47C,EAAMp7C,KAAK2rC,GACX0P,EAAMr7C,KAAK06C,kCACjBU,EAAIO,SAASN,EAAII,iBAMrB,EAEA,YAAAG,uBAAA,SAAuBN,GACrB,IAAIO,EAAmBC,EACvB,GAAqB,IAAjB97C,KAAK0S,UAAiB1S,KAAK06C,kCAQ7B,MAAM,IAAIl7C,MAAM,4CAPhB,IAAM47C,EAAMp7C,KAAK2rC,GACX0P,EAAMr7C,KAAK06C,kCASnB,OAPEmB,EAAYT,EAAIW,kBAAkBT,EAAOF,EAAIY,wBAC7CF,EAAWV,EAAI9D,aAAa+D,EAAIY,kBAM3BJ,IAAcC,CACvB,EAEA,YAAAI,eAAA,SAAeZ,GACb,IAAIa,EACJ,GAAqB,IAAjBn8C,KAAK0S,QAMP,MAAM,IAAIlT,MAAM,4CALhB,IAAM47C,EAAMp7C,KAAK2rC,GAQnB,OAPEwQ,EAAcf,EAAIW,kBAAkBT,EAAOF,EAAIgB,cAC/ChB,EAAIiB,YAAYf,GAMXa,EAAc,GACvB,EAEM,YAAAG,uBAAN,SAA6BhB,G,qGAC3B,UAAM,IAAAiB,cAAY,WAAM,SAAKX,uBAAuBN,EAA5B,K,OACxB,OADA,SACO,CAAP,EAAOt7C,KAAKk8C,eAAeZ,I,QAGhB,YAAAxI,sBAAb,W,yEAEE,OADM0J,EAAex8C,KAAKy8C,YAAYz8C,KAAK2rC,IACpC,CAAP,EAAO3rC,KAAK08C,UAAUF,G,QAGhB,YAAAC,YAAR,SAAoB9Q,GAClB,IACMyP,EAAMzP,EACN2P,EAAQF,EAAIuB,UAAUvB,EAAIwB,2BAA4B,GAU5D,OATAjR,EAAGkR,QASI,CAACvB,MAAK,EAAEwB,cARD,OAAVxB,EACc,WAAM,UAEN,WACd,IAAMyB,EAAS3B,EAAI4B,eAAe1B,EAAO,EAAG,GAC5C,OAAOyB,IAAW3B,EAAI6B,kBAAoBF,IAAW3B,EAAI8B,mBAC3D,EAGJ,EAEM,YAAAR,UAAN,SAAgBF,G,8EACd,MAAO,CAAP,EAAO,IAAI92C,SAAc,SAAAC,GAClB,EAAKw3C,eAAc,WAAM,OAAAX,EAAaM,eAAb,IAA8B,WAAM,OAAAn3C,GAAA,GACpE,I,QAKF,YAAAy3C,UAAA,WAGE,IADA,IAAM/kC,EAAQk9B,EAAqBv1C,KAAKy1C,YAAY3sC,KAAI,SAAAgnB,GAAK,OAAAA,EAAEutB,QAAF,KACpD59C,EAAI,EAAGA,GAAK4Y,IAAS5Y,GAE5B69C,EADoBt9C,KAAKy1C,YAAYh2C,GAAE,aAGzCO,KAAKy1C,YAAcz1C,KAAKy1C,YAAYh+B,MAAMY,EAAQ,EACpD,EAEc,YAAA8kC,cAAd,SAA4BE,EAAyBC,G,qGAEnD,OADAt9C,KAAKy1C,YAAY51C,KAAK,CAACw9C,SAAQ,EAAEC,UAAS,IACtCt9C,KAAKy1C,YAAY71C,OAAS,EAE5B,IAGF,IAAM,IAAA28C,cAAY,WAGhB,OAFA,EAAKa,YAE8B,IAA5B,EAAK3H,YAAY71C,MAC1B,K,cAJA,S,YAMJ,EAnkBA,GAAa,EAAA40C,aAAAA,C,00EC3Bb,cAIA,EACE,SAAmBjF,EAAqBt1B,GAArB,KAAAs1B,GAAAA,EAAqB,KAAAt1B,KAAAA,CAAmB,EAG7D,aACE,WAAoBi1B,EAAc1M,EAAyB6I,GAAvC,KAAA6D,MAAAA,EAAuC,KAAA7D,SAAAA,EACzDrrC,KAAK8P,WAAW0yB,EAClB,CA+IF,OA7IE,YAAA1yB,WAAA,SAAW0yB,GAAX,WACExiC,KAAKqrC,SAASK,MAAM,UAAW,4BAA4B,WACzD,IAAMjxB,EAAa,EAAKy0B,MAAMqO,WAC9B,GAAI9iC,EAAW7a,SAAW4iC,EAAI5iC,OAC5B,MAAM,IAAIJ,MAAM,2CAGlB,EAAKg+C,KAAOhb,EAAI15B,KAAI,SAACymC,EAAI9vC,GAAM,WAAIg+C,EAASlO,EAAI90B,EAAWhb,GAA5B,IAC/B,EAAKi+C,QAGL,EAAKC,SAAW,GAChB,EAAKH,KAAKhpC,SAAQ,SAAC+6B,EAAI9vC,G,QACjBm+C,GAAW,E,IACf,IAAoB,QAAArO,EAAGt1B,KAAK2G,QAAM,8BAAE,CAA/B,IAAM4C,EAAK,QACd,IACK,EAAKq6B,QAAQr6B,KACsC,IAAjD,EAAK0rB,MAAM4O,kBAAkBp+C,QAAQ8jB,GAC1C,CACAo6B,GAAW,EACX,K,oGAGAA,GACF,EAAKD,SAAS99C,KAAKJ,EAEvB,GACF,GACF,EAEA,YAAAi+C,MAAA,WACE19C,KAAK69C,QAAU79C,KAAKkvC,MAAME,YAAYtmC,KAAI,SAAArJ,GAAK,OAAAA,EAAEmiB,MAAF,GACjD,EAEM,YAAAm8B,QAAN,SAAcC,EAAgCC,G,8EAC5C,MAAO,CAAP,EAAOj+C,KAAKqrC,SAASK,MAAM,UAAW,yBAAyB,gD,qFAS7D,GAPA1rC,KAAK09C,QAGC5xB,EAAmBkyB,EAAehP,yBAGlCkP,EAAcl+C,KAAKkvC,MAAM4O,kBAC3BG,EAAYr+C,SAAWs+C,EAAYt+C,OACrC,MAAM,IAAIJ,MAAM,yFACZy+C,EAAYr+C,OAAM,sBAAcs+C,EAAYt+C,SAGlDq+C,EAAYzpC,SAAQ,SAACgP,EAAO/jB,GAC1B,IAAM4Y,EAAQ6lC,EAAYz+C,GAC1B,EAAKo+C,QAAQxlC,GAASmL,CACxB,IAGM26B,EAAqBn+C,KAAK29C,SAASlmC,MAAM,GAGzC2mC,EAAcp+C,KAAKkvC,MAAME,YACzB30B,EAAaza,KAAKkvC,MAAMqO,WAE1Bc,EAAO,E,+EAOT,GALMC,EAAcH,EAASE,KACvBE,EAAS,EAAKf,KAAKc,GAGnBE,EAAYD,EAAOtkC,KAAK2G,OAAO9X,KAAI,SAAArJ,GAAK,SAAKo+C,QAAQp+C,EAAb,KACR,IAAlC++C,EAAU9+C,aAAQH,GACpB,MAAM,IAAIC,MAAM,yCAAkC++C,EAAOtkC,OAUxC,OANbwkC,EAAeD,EACrB,EAAA9tC,OAAOE,QACH,WACA,oBAAa2tC,EAAOtkC,KAAKjb,KAAI,aACzBy/C,EAAa31C,KAAI,SAAC+F,EAAGpP,GAAM,iBAAI8+C,EAAOtkC,KAAK2G,OAAOnhB,GAAE,cAAMoP,EAAEtN,KAAI,YAAIsN,EAAEpN,KAAKgI,KAAK,KAAI,IAAzD,IAA8DA,KAAK,MAAK,MAExF,GAAM,EAAK4hC,SAASK,MACnC,OAAQ6S,EAAOtkC,KAAKjb,MAAM,2EAAY,SAAAu/C,EAAOhP,GAAGE,KAAK3jB,EAAkB2yB,EAAcF,EAAOhP,GAAG1pC,S,kBAGnG,IAJM64C,EAAa,UAIJ9+C,SAAW2+C,EAAOtkC,KAAKqtB,QAAQ1nC,OAC5C,MAAM,IAAIJ,MAAM,uD,OAIlBk/C,EAAWlqC,SAAQ,SAAC5B,EAAQnT,GAC1B,IAAM+G,EAAI+3C,EAAOtkC,KAAKqtB,QAAQ7nC,GAC9B,GAAI,EAAKo+C,QAAQr3C,GACf,MAAM,IAAIhH,MAAM,kBAAWgH,EAAC,mCAA2B+3C,EAAOtkC,KAAKjb,OAErE,EAAK6+C,QAAQr3C,GAAKoM,CACpB,IAGM+rC,EAAkB,IAAIrkC,IAC5BokC,EAAWlqC,SAAQ,SAAC5B,EAAQnT,G,YACpB+G,EAAI+3C,EAAOtkC,KAAKqtB,QAAQ7nC,G,IAC9B,IAAyC,kBAAA2+C,EAAY53C,GAAG8nB,KAAE,8BAAE,CAAvD,IAAMswB,EAA0B,QAC7BC,EAAwBpkC,EAAWmkC,GACrChB,GAAW,E,IACf,IAAgB,kBAAAiB,EAAsBj+B,SAAM,8BAAE,CAAzC,IAAM8hB,EAAC,QACV,IAAK,EAAKmb,QAAQnb,GAAI,CACpBkb,GAAW,EACX,K,oGAGAA,GACFe,EAAgB/jC,IAAIgkC,E,mGAG1B,IACAT,EAASt+C,KAAI,MAAbs+C,EAAQ,OAASQ,IAAe,I,wCApD3BN,EAAOF,EAASv+C,O,QAAM,M,oCAuDvBgT,EAAmB,GAChBnT,EAAI,E,sBAAGA,EAAIO,KAAKkvC,MAAM4P,mBAAmBl/C,QAAM,YAGtD,GAFMm/C,EAAc/+C,KAAKkvC,MAAM4P,mBAAmBr/C,QAE7BF,KADfy/C,EAAeh/C,KAAK69C,QAAQkB,IAEhC,MAAM,IAAIv/C,MAAM,2BAAoBu/C,EAAW,0B,OAE7B,IAAhBA,EAAA,MACF,GAAMC,EAAaC,W,cAAnB,S,aAGAD,EAAax9C,K,iBAEfoR,EAAO/S,KAAKm/C,G,wBAZ4Cv/C,I,aAgB1D,OAFA,EAAAiR,OAAOE,QAAQ,WAAY,iCAC3Bkb,EAAiB/b,UACV,CAAP,EAAO6C,G,kBAOb,EAlJA,GAAa,EAAAssC,cAAAA,C,yaCVb,cAEA,UACA,UACA,UACA,UAEOvzC,EAAS,EAAAC,YAAYC,aAAaC,IAmE5B,EAAAqzC,MAAQ,CAInBv9C,KAAM,SAACw9C,EAA2CC,GAC9C,WAAIC,EAAUF,EAAYC,EAA1B,GAGN,iBACE,WAAYE,GACVv/C,KAAKw/C,WAAQjgD,EACbS,KAAKy/C,IAAM,GACXz/C,KAAK4hB,YAASriB,EACdS,KAAKuB,UAAOhC,EAERggD,IACFv/C,KAAKuB,KAAO,EAAAgtB,UAAUmxB,yBAAyBH,EAAUh+C,KAAMo+C,YAEnE,CAYF,OATE,sBAAI,mBAAI,C,IAAR,WACE,OAAO3/C,KAAKw/C,KACd,E,gCAEA,sBAAI,iBAAE,C,IAAN,WACE,OAAOx/C,KAAKy/C,GACd,E,gCAGF,EAtBA,GAwBA,EACE,SAAYG,EAAyC5gD,GAC/C4gD,aAAsB,EAAA1zC,KAAK2zC,WAC7B7/C,KAAKhB,KAAO4gD,EAAW5gD,KACvBgB,KAAK8/C,OAASF,EAAWE,OACzB9/C,KAAK+L,WAAa,IAAI,EAAAK,UAAUwzC,EAAWv0C,YAClCu0C,aAAsBj0C,EAAOo0C,OACtC//C,KAAKhB,KAAOA,QAAAA,EAAQ4gD,EAAW5gD,OAC/BgB,KAAK8/C,OAASF,EAAWE,SACzB9/C,KAAK+L,WAAa,IAAI,EAAAK,UAAU,EAAAmiB,UAAUyxB,8BAA8BJ,KAG1E5/C,KAAK4gB,OAAS,GACd5gB,KAAKsnC,QAAU,GACftnC,KAAKigD,aAAc,CACrB,EAUF,aAWE,WAAY/Q,EAAsCgR,GAChD,IAAKhR,EACH,MAAM,IAAI7vC,UAAU,kBAItBW,KAAKmgD,WAAWjR,GAGhBlvC,KAAKogD,eAAeF,GAGpBlgD,KAAKqgD,gBACP,CAwoBF,OAtoBE,YAAAvC,gBAAA,WACE,OAAO99C,KAAKsgD,gBACd,EAEA,YAAAC,cAAA,WACE,OAAOvgD,KAAKwgD,cACd,EAEA,YAAA1B,iBAAA,WACE,OAAO9+C,KAAKygD,iBACd,EAEA,YAAAC,eAAA,WACE,OAAO1gD,KAAK2gD,eACd,EAEA,YAAAvR,UAAA,WACE,OAAOpvC,KAAK4gD,QACd,EAEA,YAAArD,SAAA,WACE,OAAOv9C,KAAK6gD,MACd,EAEQ,YAAAV,WAAR,SAAmBjR,GAEjB,GAAIA,aAAiB,EAAAhjC,KAAK40C,WACxB9gD,KAAK+gD,yBAAyB7R,OACzB,MAAIA,aAAiBvjC,EAAOwzC,OAGjC,MAAM,IAAI9/C,UAAU,gCAFpBW,KAAKghD,wBAAwB9R,E,CAIjC,EACQ,YAAA6R,yBAAR,SAAiC7R,G,4BACzB+R,EAAc,IAAIzgD,IACxBR,KAAK4gD,SAAW,GAEhB5gD,KAAKsgD,iBAAmB,GACxBtgD,KAAKwgD,eAAiB,GAEtBxgD,KAAKygD,kBAAoB,GACzBzgD,KAAK2gD,gBAAkB,GAEvB3gD,KAAK6gD,OAAS,GAEd,IAAMK,EAAe,IAAI1gD,IAGzB,IAAK0uC,EAAM1rB,MACT,MAAM,IAAIhkB,MAAM,uCAElB,IAAM2hD,EAAkB,G,IACxB,IAAgB,QAAAjS,EAAM1rB,OAAK,8BAAE,CAAxB,IAAM/jB,EAAC,QACV,GAAIwhD,EAAYtmC,IAAIlb,EAAET,MACpB,MAAM,IAAIQ,MAAM,iCAA0BC,EAAET,OAE9C,IAAMoiD,EAAephD,KAAK4gD,SAAS/gD,KAAK,IAAIwhD,EAAM5hD,IAAM,EACxDwhD,EAAYl/C,IAAItC,EAAET,KAAOoiD,GACzBD,EAAgBthD,KAAKJ,EAAET,K,mGAIzB,IAAKkwC,EAAMmQ,YACT,MAAM,IAAI7/C,MAAM,6C,IAElB,IAAgB,QAAA0vC,EAAMmQ,aAAW,8BAAE,CAAxB5/C,EAAC,QAAP,IACC4Y,EAAQ4oC,EAAY7+C,IAAI3C,EAAET,MAC9B,QAAcO,IAAV8Y,EAAqB,CACvB,IAAM/X,EAAQ,IAAI+gD,EAClB/gD,EAAMiB,KAAO,CACX6R,MAAO,CAAC3R,KAAM,EAAA8sB,UAAU+yB,oBAAoB7hD,EAAEgC,OAC9Ck+C,WAAY,EAAApxB,UAAUC,wBAAwB/uB,EAAEyjB,WAElD7K,EAAQrY,KAAK4gD,SAAS/gD,KAAKS,GAAS,EACpC2gD,EAAYl/C,IAAItC,EAAET,KAAOqZ,E,CAE3BrY,KAAK4gD,SAASvoC,GAAOmnC,OAAS,EAC9Bx/C,KAAK4gD,SAASvoC,GAAOuJ,OAAS,EAAAzgB,OAAOkN,UAAU5O,E,mGAIjD,IAASA,EAAI,EAAGA,EAAIO,KAAK4gD,SAAShhD,OAAQH,IACnCO,KAAK4gD,SAASnhD,GAAGmiB,SACpB5hB,KAAKsgD,iBAAiBzgD,KAAKJ,GAC3BO,KAAKwgD,eAAe3gD,KAAKshD,EAAgB1hD,KAK7C,IAAKyvC,EAAMt8B,OACT,MAAM,IAAIpT,MAAM,wC,IAElB,IAAgB,QAAA0vC,EAAMt8B,QAAM,8BAAE,CAC5B,GADSnT,EAAC,QACNwhD,EAAYtmC,IAAIlb,EAAET,MACpB,MAAM,IAAIQ,MAAM,kCAA2BC,EAAET,OAEzCoiD,EAAephD,KAAK4gD,SAAS/gD,KAAK,IAAIwhD,EAAM5hD,IAAM,EACxDwhD,EAAYl/C,IAAItC,EAAET,KAAOoiD,GACzBphD,KAAKygD,kBAAkB5gD,KAAKuhD,GAC5BphD,KAAK2gD,gBAAgB9gD,KAAKJ,EAAET,K,mGAI9B,IAAKkwC,EAAMj1B,KACT,MAAM,IAAIza,MAAM,sC,IAElB,IAAwB,QAAA0vC,EAAMj1B,MAAI,8BAAE,CAClC,KADSsnC,EAAS,SACHviD,KAEb,IAAK,IAAIwiD,EAAO,GAAIA,IAAQ,CAC1B,IAAM,EAAO,kBAAWD,EAAUzB,OAAM,YAAI0B,GAC5C,IAAKN,EAAavmC,IAAI,GAAO,CAC3B4mC,EAAUviD,KAAO,EACjB,K,EAKN,GAAIkiD,EAAavmC,IAAI4mC,EAAUviD,MAC7B,MAAM,IAAIQ,MAAM,gCAAyB+hD,EAAUviD,OAE/CoiD,EAAephD,KAAK6gD,OAAOhhD,KAAK,IAAIkgD,EAAKwB,IAAc,EAC7DL,EAAan/C,IAAIw/C,EAAUviD,KAAMoiD,E,mGAInC,IAAS3hD,EAAI,EAAGA,EAAIO,KAAK6gD,OAAOjhD,OAAQH,IAAK,CAC3C,IAAMwa,EAAOja,KAAK6gD,OAAOphD,GAEzB,KADM8hD,EAAYrS,EAAMj1B,KAAKxa,IACdmT,OACb,MAAM,IAAIpT,MAAM,mCAA4B+hD,EAAUviD,O,IAExD,IAAqB,kBAAAuiD,EAAU3uC,SAAM,8BAAE,CAAlC,IAAMA,EAAM,QAQf,QANyB,KADrB6uC,EAAYR,EAAY7+C,IAAIwQ,MAE9B6uC,EAAYzhD,KAAK4gD,SAAS/gD,KAAK,IAAIwhD,GAAW,EAC9CJ,EAAYl/C,IAAI6Q,EAAQ6uC,IAE1BxnC,EAAKqtB,QAAQznC,KAAK4hD,QAEqBliD,IAAnCS,KAAK4gD,SAASa,GAAWjC,MAC3B,MAAM,IAAIhgD,MAAM,mDAA4CiiD,IAM9D,GAJAzhD,KAAK4gD,SAASa,GAAWjC,MAAQ//C,EAIR,aAArB8hD,EAAUzB,OAAuB,CACnC,IAAKyB,EAAUl2C,WAA4C,IAA/Bk2C,EAAUl2C,UAAUzL,SAAiB2hD,EAAUl2C,UAAU,GAAGwD,EACtF,MAAM,IAAIrP,MAAM,uFAElB,IAAK+hD,EAAU3uC,QAAsC,IAA5B2uC,EAAU3uC,OAAOhT,OACxC,MAAM,IAAIJ,MAAM,4EAElBya,EAAKqtB,QAAQmL,MACbx4B,EAAKgmC,aAAc,EAEnBjgD,KAAK4gD,SAASa,GAAWjC,OAAS,EAClCx/C,KAAK4gD,SAASa,GAAW7/B,OAAS,EAAAzgB,OAAOkN,UAAUkzC,EAAUl2C,UAAU,GAAGwD,E,qGAMhF,IAASpP,EAAI,EAAGA,EAAIO,KAAK6gD,OAAOjhD,OAAQH,IAAK,CAC3C,IACM8hD,EAEN,GAHMtnC,EAAOja,KAAK6gD,OAAOphD,KACnB8hD,EAAYrS,EAAMj1B,KAAKxa,IAEd+jB,MACb,MAAM,IAAIhkB,MAAM,kCAA2B+hD,EAAUviD,O,IAEvD,IAAoB,kBAAAuiD,EAAU/9B,QAAK,8BAAE,CAAhC,IACGi+B,EADGj+B,EAAK,QAEd,QAAyB,KADnBi+B,EAAYR,EAAY7+C,IAAIohB,IACI,CAEpC,GAAc,KAAVA,GAA2C,IAA3B+9B,EAAU/9B,MAAM5jB,QAAqC,WAArB2hD,EAAUzB,OAC5D,SAEF,MAAM,IAAItgD,MAAM,8BAAuBgkB,EAAK,uBAAe+9B,EAAUviD,M,CAEvEib,EAAK2G,OAAO/gB,KAAK4hD,GAEjBzhD,KAAK4gD,SAASa,GAAWhC,IAAI5/C,KAAKJ,E,oGAItC,OAAO,CACT,EAEQ,YAAAuhD,wBAAR,SAAgC9R,G,UACxB+R,EAAc,IAAIzgD,IACxBR,KAAK4gD,SAAW,GAEhB5gD,KAAKsgD,iBAAmB,GACxBtgD,KAAKwgD,eAAiB,GAEtBxgD,KAAKygD,kBAAoB,GACzBzgD,KAAK2gD,gBAAkB,GAEvB3gD,KAAK6gD,OAAS,GAMd,IAJA,IAAMK,EAAe,IAAI1gD,IAGnB2gD,EAAkB,GACf1hD,EAAI,EAAGA,EAAIyvC,EAAMwS,eAAgBjiD,IAAK,CAC7C,IAAMkiD,EAAYzS,EAAMtuB,OAAOnhB,GAC/B,GAAIwhD,EAAYtmC,IAAIgnC,GAClB,MAAM,IAAIniD,MAAM,iCAA0BmiD,IAG5C,IAAK,IAAIn7C,EAAI,EAAGA,EAAI0oC,EAAM0S,iBAAkBp7C,IAC1C,IAAqB,QAAjB,EAAA0oC,EAAM2S,SAASr7C,UAAE,eAAExH,UAAW2iD,EAAW,CAC3C,IAAMrhD,EAAQ,IAAI+gD,EAElB,IAD2C,QAAzB,EAAiB,QAAjB,EAAAnS,EAAM2S,SAASr7C,UAAE,eAAEjF,cAAM,eAAEugD,eAC3Bn2C,EAAOo2C,cAAcC,YACrC,MAAM,IAAIxiD,MAAM,0CAMlB,IAJA,IAAM+/C,EAAYrQ,EAAM2S,SAASr7C,GAAIjF,OAAQjB,MAAM,IAAIqL,EAAOs2C,oBACxD1gD,EAAO,EAAAgtB,UAAUC,wBAAwB+wB,EAAU2C,YACnD9uC,EAAQmsC,EAAUnsC,QAClB3R,EAAO,GACJihC,EAAI,EAAGA,EAAItvB,EAAM+uC,YAAczf,IACtCjhC,EAAK5B,KAAK,EAAAkO,SAASE,aAAamF,EAAM5Q,IAAIkgC,GAAIpiC,QAAS8hD,aAEzD9hD,EAAMiB,KAAO,CAAC6R,MAAO,CAAC3R,KAAI,GAAGk+C,WAAYp+C,GACzC,IAAM6/C,EAAephD,KAAK4gD,SAAS/gD,KAAKS,GAAS,EACjD2gD,EAAYl/C,IAAI4/C,EAAWP,GAC3BD,EAAgBthD,KAAK8hD,E,EAK3B,IAASliD,EAAI,EAAGA,EAAIyvC,EAAMmT,qBAAsB5iD,IAAK,CACnD,IAAM4/C,EAAcnQ,EAAMC,aAAa1vC,GACnC4Y,EAAQ4oC,EAAY7+C,IAAIi9C,EAAYrgD,aAC1BO,IAAV8Y,IACI/X,EAAQ,IAAI+gD,EACZ5/C,EAAO,EAAA8sB,UAAU+zB,wBAAwBjD,GACzC99C,EAAO,EAAAgtB,UAAUC,wBAAwB6wB,EAAYn8B,YAC3D5iB,EAAMiB,KAAO,CAAC6R,MAAO,CAAC3R,KAAI,GAAGk+C,WAAYp+C,GACzC8W,EAAQrY,KAAK4gD,SAAS/gD,KAAKS,GAAS,EACpC2gD,EAAYl/C,IAAIs9C,EAAYrgD,OAASqZ,IAEvCrY,KAAK4gD,SAASvoC,GAAOmnC,OAAS,EAC9Bx/C,KAAK4gD,SAASvoC,GAAOuJ,OAAS,EAAAzgB,OAAOmN,cAAc+wC,E,CAIrD,IAAS5/C,EAAI,EAAGA,EAAIO,KAAK4gD,SAAShhD,OAAQH,IACnCO,KAAK4gD,SAASnhD,GAAGmiB,SACpB5hB,KAAKsgD,iBAAiBzgD,KAAKJ,GAC3BO,KAAKwgD,eAAe3gD,KAAKshD,EAAgB1hD,KAK7C,IAASA,EAAI,EAAGA,EAAIyvC,EAAMqT,gBAAiB9iD,IAAK,CAC9C,IAAM+iD,EAAatT,EAAM5H,QAAQ7nC,GACjC,GAAIwhD,EAAYtmC,IAAI6nC,GAClB,MAAM,IAAIhjD,MAAM,kCAA2BgjD,IAEvCpB,EAAephD,KAAK4gD,SAAS/gD,KAAK,IAAIwhD,GAAW,EACvDJ,EAAYl/C,IAAIygD,EAAYpB,GAC5BphD,KAAKygD,kBAAkB5gD,KAAKuhD,GAC5BphD,KAAK2gD,gBAAgB9gD,KAAK2iD,E,CAI5B,IAAKtT,EAAM90B,MACT,MAAM,IAAI5a,MAAM,sCAElB,IAASC,EAAI,EAAGA,EAAIyvC,EAAMuT,cAAehjD,IAAK,CAC5C,IACI,GADE8hD,EAAYrS,EAAM90B,MAAM3a,IACRT,OACtB,IAAK,EAEH,IAAK,IAAIwiD,EAAO,EACd,EAAO,kBAAWD,EAAWzB,SAAQ,YAAI0B,GACpCN,EAAavmC,IAAI,GAFJ6mC,KAStB,GAAIN,EAAavmC,IAAI,GACnB,MAAM,IAAInb,MAAM,gCAAyB,IAErC4hD,EAAephD,KAAK6gD,OAAOhhD,KAAK,IAAIkgD,EAAKwB,EAAY,IAAS,EACpEL,EAAan/C,IAAI,EAAMq/C,E,CAIzB,IAAS3hD,EAAI,EAAGA,EAAIO,KAAK6gD,OAAOjhD,OAAQH,IAAK,CAC3C,IAAMwa,EAAOja,KAAK6gD,OAAOphD,GAEzB,GAAiB,OADX8hD,EAAYrS,EAAM90B,MAAM3a,IAE5B,MAAM,IAAID,MAAM,kCAA2BC,IAE7C,GAAmC,KAA/B8hD,aAAS,EAATA,EAAWgB,iBACb,MAAM,IAAI/iD,MAAM,mCAA4B+hD,EAAUviD,OAExD,IAASwH,EAAI,EAAGA,GAAI+6C,aAAS,EAATA,EAAWgB,iBAAiB/7C,IAAK,CACnD,IAAMoM,EAAS2uC,aAAS,EAATA,EAAWja,QAAQ9gC,GAQlC,QANyB,KADrBi7C,EAAYR,EAAY7+C,IAAIwQ,MAE9B6uC,EAAYzhD,KAAK4gD,SAAS/gD,KAAK,IAAIwhD,GAAW,EAC9CJ,EAAYl/C,IAAI6Q,EAAQ6uC,IAE1BxnC,EAAKqtB,QAAQznC,KAAK4hD,QAEqBliD,IAAnCS,KAAK4gD,SAASa,GAAWjC,MAC3B,MAAM,IAAIhgD,MAAM,mDAA4CiiD,IAM9D,GAJAzhD,KAAK4gD,SAASa,GAAWjC,MAAQ//C,EAIN,aAAvB8hD,EAAUzB,SAAyB,CACrC,GAAqC,IAAjCyB,EAAUmB,qBAA6BnB,EAAUx1C,WAAW,GAAI8C,IAClE,MAAM,IAAIrP,MAAM,uFAElB,GAAkC,IAA9B+hD,EAAUgB,gBACZ,MAAM,IAAI/iD,MAAM,4EAElBya,EAAKqtB,QAAQmL,MACbx4B,EAAKgmC,aAAc,EAEnBjgD,KAAK4gD,SAASa,GAAWjC,OAAS,EAClCx/C,KAAK4gD,SAASa,GAAW7/B,OAAS,EAAAzgB,OAAOmN,cAAcizC,EAAUx1C,WAAW,GAAI8C,I,GAMtF,IAASpP,EAAI,EAAGA,EAAIO,KAAK6gD,OAAOjhD,OAAQH,IAAK,CAC3C,IACM8hD,EAEN,GAHMtnC,EAAOja,KAAK6gD,OAAOphD,GAGQ,KAF3B8hD,EAAYrS,EAAM90B,MAAM3a,IAEhBiiD,eACZ,MAAM,IAAIliD,MAAM,kCAA2B+hD,EAAUviD,OAEvD,IAASwH,EAAI,EAAGA,EAAI+6C,EAAUG,eAAiBl7C,IAAK,CAClD,IACMi7C,EADAj+B,EAAQ+9B,EAAU3gC,OAAOpa,GAE/B,QAAyB,KADnBi7C,EAAYR,EAAY7+C,IAAIohB,IAEhC,MAAM,IAAIhkB,MAAM,8BAAuBgkB,EAAK,uBAAe+9B,EAAWviD,SAExEib,EAAK2G,OAAO/gB,KAAK4hD,GAEjBzhD,KAAK4gD,SAASa,GAAWhC,IAAI5/C,KAAKJ,E,EAGxC,EAEQ,YAAA4gD,eAAR,sBAEQsC,EAAwB,IAAIroC,IAClCta,KAAKsgD,iBAAiB9rC,SAAQ,SAAA/U,GACf,EAAKmhD,SAASnhD,GACtBggD,IAAIjrC,SAAQ,SAAAhO,GACfm8C,EAAS/nC,IAAIpU,EACf,GACF,IAMA,IAHA,IAAMo8C,EAAa3gD,MAAML,KAAK+gD,GACxBE,EAAa,IAAI5gD,MAAcjC,KAAK6gD,OAAOjhD,QAAQgvB,KAAK,S,aAG5D,IAAMk0B,EAAYF,EAAWnQ,MAEC,SAA1BoQ,EAAWC,GACbD,EAAWC,GAAa,SAGxBF,EAAW/iD,KAAKijD,GAChBD,EAAWC,GAAa,OAExB,EAAKjC,OAAOiC,GAAWxb,QAAQ9yB,SAAQ,SAACuuC,GACtC,IAAMvhD,EAAO,EAAKo/C,SAASmC,GAC3B,QAA2B,IAAhBvhD,EAAKogB,OACd,MAAM,IAAIpiB,MAAM,0CAElB,GAAIgC,EAAKg+C,QAAUsD,EACjB,MAAM,IAAItjD,MAAM,iFAElBgC,EAAKi+C,IAAIjrC,SAAQ,SAACwuC,GAEhB,GAAwC,SAApCH,EAAWG,GACb,MAAM,IAAIxjD,MAAM,yBAG2B,UAApCqjD,EAAWG,IAClBJ,EAAW/iD,KAAKmjD,EAEpB,GACF,I,SA5BGJ,EAAWhjD,OAAS,G,GA+B7B,EAEQ,YAAAwgD,eAAR,SAAuBF,GAErBlgD,KAAKijD,yBACLjjD,KAAKkjD,wBACLljD,KAAKmjD,0BAEDjD,GACFA,EAAiBE,eAAepgD,MAIlCA,KAAKojD,eACP,EAQA,YAAAA,cAAA,WAUE,IAVF,WACM3b,EAAS,EAMP4b,EAAa,IAAIphD,MAAcjC,KAAK6gD,OAAOjhD,OAAQ,GACrD0jD,EAAgB,EAEX7jD,EAAI,EAAGA,EAAIO,KAAK6gD,OAAOjhD,OAAQH,IAEtC4jD,EAAW5jD,GAAK6jD,EACZtjD,KAAK6gD,OAAOphD,GAAGwgD,aACbqD,IAAkB7jD,IACpBO,KAAK6gD,OAAOyC,GAAiBtjD,KAAK6gD,OAAOphD,IAE3C6jD,KAIAtjD,KAAK6gD,OAAOphD,GAAG6nC,QAAQ9yB,SAAQ,SAAA+uC,GAC7B,EAAK3C,SAAS2C,GAAK/D,OAAS,CAC9B,IAQJ,IAHAx/C,KAAK6gD,OAAOlhD,OAAO2jD,EAAetjD,KAAK6gD,OAAOjhD,OAAS0jD,GAG9C7jD,EAAI,EAAGA,EAAIO,KAAK4gD,SAAShhD,OAAQH,IAAK,CAC7C,IAAM+jD,EAAcxjD,KAAK4gD,SAASnhD,QACRF,IAAtBikD,EAAYhE,QAA8C,IAAvBgE,EAAYhE,QAAuC,IAAvBgE,EAAYhE,QAC7EgE,EAAYhE,MAAQ6D,EAAWG,EAAYhE,QAG7C,IAAK,IAAIh5C,EAAI,EAAGA,EAAIg9C,EAAY/D,IAAI7/C,OAAQ4G,IAAK,CAC/C,KAAIg9C,EAAY/D,IAAIj5C,IAAM,GAGxB,MAAM,IAAIhH,MAAM,mCAFhBgkD,EAAY/D,IAAIj5C,GAAK68C,EAAWG,EAAY/D,IAAIj5C,G,EAOtDihC,EAAS,E,iBAEAhoC,GAEP,IAA+B,IAA3B,EAAKmhD,SAASnhD,GAAGmC,OAA+D,IAAhD,EAAK6+C,kBAAkB/gD,QAAQD,EAAIgoC,G,OACrEA,IACA,EAAKmZ,SAASjhD,OAAOF,EAAG,GACxBA,I,EALKA,EAAC,WAQR,GAAIgoC,EAAS,EAAG,CACd,IAAI,GAAO,OAGmBloC,IAA1B,EAAKqhD,SAASnhD,GAAGmC,OAAiD,IAA3B,EAAKg/C,SAASnhD,GAAGmC,MAE7C,KADb,EAAM,EAAKi/C,OAAO,EAAKD,SAASnhD,GAAGmC,MAAM0lC,QAAQ5nC,QAAQD,EAAIgoC,MAE3D,EAAKoZ,OAAO,EAAKD,SAASnhD,GAAGmC,MAAM0lC,QAAQ,GAAO7nC,IAKvC,KADb,EAAM,EAAK6gD,iBAAiB5gD,QAAQD,EAAIgoC,MAEtC,EAAK6Y,iBAAiB,GAAO7gD,GAKjC,EAAKmhD,SAASnhD,GAAG6uB,GAAG9Z,SAAQ,SAAAyF,IAEb,KADb,EAAM,EAAK4mC,OAAO5mC,GAAM2G,OAAOlhB,QAAQD,EAAIgoC,MAEzC,EAAKoZ,OAAO5mC,GAAM2G,OAAO,GAAOnhB,EAEpC,IACmC,IAA/B,EAAKmhD,SAASnhD,GAAG6uB,GAAG1uB,SAGT,KADb,EAAM,EAAK6gD,kBAAkB/gD,QAAQD,EAAIgoC,MAEvC,EAAKgZ,kBAAkB,GAAOhhD,E,GApC7BA,C,SAAT,IAASA,EAAI,EAAGA,EAAIO,KAAK4gD,SAAShhD,OAAQH,I,EAAjCA,GAAAA,EAAI,CAyCf,EAOQ,YAAAgkD,WAAR,SAAmBX,G,QACX7oC,EAAOja,KAAK6gD,OAAOiC,GACzB,GAAI7oC,EAAKqtB,QAAQ1nC,OAAS,EACxB,IAAK,IAAIH,EAAI,EAAGA,EAAIwa,EAAKqtB,QAAQ1nC,OAAQH,IACvC,GAAIO,KAAK4gD,SAAS3mC,EAAKqtB,QAAQ7nC,IAAI6uB,GAAG1uB,OAAS,EAC7C,MAAM,IAAIJ,MAAM,uFAMtBya,EAAKgmC,aAAc,EACnB,IAAMyD,EAAkBzpC,EAAK2G,OAAO,GAC9B+iC,EAAmB1pC,EAAKqtB,QAAQ,GAChCsc,EAAuB5jD,KAAK4gD,SAAS+C,GAAkBr1B,GAG7D,IAAS7uB,EAAI,EAAGA,EAAIwa,EAAK2G,OAAOhhB,OAAQH,IAAK,CAC3C,IAAMokD,EAAW7jD,KAAK4gD,SAAS3mC,EAAK2G,OAAOnhB,IAAI6uB,GAAG5uB,QAAQojD,GAE1D,IAAkB,IAAde,EACF,MAAM,IAAIrkD,MAAM,yEAElBQ,KAAK4gD,SAAS3mC,EAAK2G,OAAOnhB,IAAI6uB,GAAG3uB,OAAOkkD,EAAU,E,CAIpD7jD,KAAK4gD,SAAS+C,GAAkBlE,IAAM,GAGtC,IAAMpnC,EAAQrY,KAAKygD,kBAAkB/gD,QAAQikD,GAM7C,IALe,IAAXtrC,IACFrY,KAAKygD,kBAAkBpoC,GAASqrC,GAI9BE,GAAwBA,EAAqBhkD,OAAS,E,IACxD,IAAwB,QAAAgkD,GAAoB,8BAAE,CAAzC,IAAM,EAAS,QACZE,EAAe9jD,KAAK6gD,OAAO,GAAWjgC,OAAOlhB,QAAQikD,GAE3D,IAAsB,IAAlBG,EACF,MAAM,IAAItkD,MAAM,4EAElBQ,KAAK6gD,OAAO,GAAWjgC,OAAOkjC,GAAgBJ,EAC9C1jD,KAAK4gD,SAAS8C,GAAiBp1B,GAAGzuB,KAAK,E,mGAG7C,EAEA,YAAAqjD,sBAAA,W,QACMJ,EAAY,E,IAChB,IAAmB,QAAA9iD,KAAK6gD,QAAM,8BAAE,CAA3B,IAAM5mC,EAAI,QAEb,GAAoB,YAAhBA,EAAK6lC,OAAsB,CAE7B,GAA2B,IAAvB7lC,EAAK2G,OAAOhhB,OACd,MAAM,IAAIJ,MAAM,iDAElB,GAA4B,IAAxBya,EAAKqtB,QAAQ1nC,QAAwC,IAAxBqa,EAAKqtB,QAAQ1nC,OAC5C,MAAM,IAAIJ,MAAM,wDAGlB,GAA4B,IAAxBya,EAAKqtB,QAAQ1nC,QAA8D,IAA9CI,KAAK4gD,SAAS3mC,EAAKqtB,QAAQ,IAAImY,IAAI7/C,OAClE,MAAM,IAAIJ,MAAM,yEAElBQ,KAAKyjD,WAAWX,E,CAElBA,G,mGAEJ,EAEA,YAAAG,uBAAA,W,QACMH,EAAY,E,IAChB,IAAmB,QAAA9iD,KAAK6gD,QAAM,8BAER,aAFP,QAEJf,QACP9/C,KAAKyjD,WAAWX,GAElBA,G,kGAEJ,EAEA,YAAAiB,aAAA,SAAa1M,GACX,OAAQA,EAAEyI,QAER,IAAK,OACL,IAAK,UACL,IAAK,OACH,OAAO,EACT,QACE,OAAO,EAEb,EAEA,YAAAqD,wBAAA,W,YACE,IAAmB,QAAAnjD,KAAK6gD,QAAM,8BAAE,CAA3B,IAAM5mC,EAAI,QACb,GAAoB,SAAhBA,EAAK6lC,OAAmB,CAC1B,IAAMkE,EAAOhkD,KAAK4gD,SAAS3mC,EAAKqtB,QAAQ,IAAImY,IAC5C,GAAoB,IAAhBuE,EAAKpkD,QAAgBI,KAAK+jD,aAAa/jD,KAAK6gD,OAAOmD,EAAK,KAAM,CAChE,IAAMC,EAAQjkD,KAAK6gD,OAAOmD,EAAK,IAC/B,GAAqB,SAAjBC,EAAMnE,OACR,GAA4B,IAAxBmE,EAAMrjC,OAAOhhB,OACf,IACEqa,EAAKlO,WAAWhK,IACZ,oBAAqB,SACrB,CAACkiD,EAAMl4C,WAAWS,SAAS,OAAQy3C,EAAMl4C,WAAWS,SAAS,Q,CACjE,MAAOjD,GACP0Q,EAAKlO,WAAWhK,IAAI,oBAAqB,SAAU,CAAC,EAAA+1B,SAAU,EAAAC,U,KAE3D,MACHksB,EAAMrjC,OAAOhhB,QAAU,QAA+CL,IAA1CS,KAAK4gD,SAASqD,EAAMrjC,OAAO,IAAIgB,aACjBriB,IAA1CS,KAAK4gD,SAASqD,EAAMrjC,OAAO,IAAIgB,QAMjC,SALA3H,EAAKlO,WAAWhK,IAAI,oBAAqB,SAAU,CACjD/B,KAAK4gD,SAASqD,EAAMrjC,OAAO,IAAIgB,OAAQgd,UAAU,GAAI5+B,KAAK4gD,SAASqD,EAAMrjC,OAAO,IAAIgB,OAAQgd,UAAU,I,CAO5G3kB,EAAKlO,WAAWhK,IAAI,aAAc,SAAWkiD,EAAY,QACzDjkD,KAAKyjD,WAAWO,EAAK,G,qGAI7B,EACF,EAhqBA,E,4gDC7CA,8BAIA,QAHE,YAAAt7B,IAAA,SAAIw7B,EAA4BC,EAAkBC,GAElD,EACF,EAJA,GAKA,0BAsBA,QArBE,YAAA17B,IAAA,SAAI27B,EAA2BC,EAAiBC,GAE9CC,QAAQ97B,IAAI,UAAG1oB,KAAKykD,MAAMJ,GAAS,YAAIE,EAAW,QAAaA,EAAW,QAAa,IAAE,OAAGD,GAC9F,EAEQ,YAAAG,MAAR,SAAcJ,GACZ,OAAQA,GACN,IAAK,UACH,MAAO,gBACT,IAAK,OACH,MAAO,aACT,IAAK,UACH,MAAO,gBACT,IAAK,QACH,MAAO,gBACT,IAAK,QACH,MAAO,cACT,QACE,MAAM,IAAI7kD,MAAM,gCAAyB6kD,IAE/C,EACF,EAtBA,GAwBMK,EAAiB,CACrB9zC,QAAS,IACT+zC,KAAM,IACN9zC,QAAS,IACTq7B,MAAO,IACP0Y,MAAO,KAGHC,IAAmB,MAChB,KAAG,IAAIC,EACd,EAAU,QAAG,IAAIC,E,GAEbC,EAAwB,CAC5BC,SAAU,UACVC,gBAAiB,UACjBC,aAAa,EACbC,mBAAmB,GAEjBC,IAAiB,MAC2C,IAAKL,EAAgD,GAMrH,SAASt8B,EACLtnB,EAA8BC,EAAeC,EAAsBgH,GACrE,QAAa/I,IAAT8B,EAEF,OAkB6BkjD,EAlBEnjD,EAmB1B,CACLwP,QAAS8X,EAAI9X,QAAQ00C,KAAK,KAAMf,GAChCI,KAAMj8B,EAAIi8B,KAAKW,KAAK,KAAMf,GAC1B1zC,QAAS6X,EAAI7X,QAAQy0C,KAAK,KAAMf,GAChCrY,MAAOxjB,EAAIwjB,MAAMoZ,KAAK,KAAMf,GAC5BK,MAAOl8B,EAAIk8B,MAAMU,KAAK,KAAMf,IAvBvB,QAAahlD,IAAT+B,EAETikD,EAAYnkD,EAAyBC,QAChC,GAAoB,iBAATC,QAA8B/B,IAAT+I,EAErCi9C,EAAYnkD,EAAyBC,QAChC,GAAoB,iBAATC,QAA8B/B,IAAT+I,EAErCi9C,EAAYnkD,EAAyBE,EAAM,EAAGD,OACzC,IAAoB,iBAATC,GAAqC,iBAATgH,EAI5C,MAAM,IAAIjJ,UAAU,kBAFpBkmD,EAAYnkD,EAAyBE,EAAMgH,EAAMjH,E,CAMrD,IAAiCkjD,CAFjC,CAeA,SAASgB,EAAYlB,EAA2BC,EAAiBkB,EAAejB,GAC9E,IAAMvS,EAASqT,EAAkBd,GAAY,KAAOc,EAAkB,IAClEX,EAAeL,GAAYK,EAAe1S,EAAOkT,mBAIjDlT,EAAOmT,cACTb,EAAU,WAAG,IAAImB,MAAOC,cAAa,YAAIpB,IAGvCtS,EAAOoT,kBAIXP,EAAoB7S,EAAOiT,UAAUv8B,IAAI27B,EAAUC,EAASC,GAC9D,EAGA,SAAU77B,GA2BR,SAAgBg1B,EAAM1L,GACpBqT,EAAoB,CAAC,EACrBtjD,EAAI,GAAIiwC,GAAU,CAAC,EACrB,CACA,SAAgBjwC,EAAIwiD,EAAkBvS,GACpC,GAAiB,MAAbuS,EACF7G,EAAM1L,OACD,CACL,IAAM2T,EAAiBN,EAAkBd,IAAaS,EACtDK,EAAkBd,GAAY,CAC5BU,SAAUjT,EAAOiT,UAAYU,EAAeV,SAC5CC,gBAAiBlT,EAAOkT,iBAAmBS,EAAeT,gBAC1DC,iBAAqC5lD,IAAvByyC,EAAOmT,YAA6BQ,EAAeR,YAAcnT,EAAOmT,YACtFC,uBAAiD7lD,IAA7ByyC,EAAOoT,kBAAmCO,EAAeP,kBACfpT,EAAOoT,kB,CAK3E,CA3CgB,EAAAx0C,QAAhB,SAAwBxP,EAAcC,GACpCqnB,EAAI,UAAWtnB,EAAMC,EACvB,EAGgB,EAAAsjD,KAAhB,SAAqBvjD,EAAcC,GACjCqnB,EAAI,OAAQtnB,EAAMC,EACpB,EAGgB,EAAAwP,QAAhB,SAAwBzP,EAAcC,GACpCqnB,EAAI,UAAWtnB,EAAMC,EACvB,EAGgB,EAAA6qC,MAAhB,SAAsB9qC,EAAcC,GAClCqnB,EAAI,QAAStnB,EAAMC,EACrB,EAGgB,EAAAujD,MAAhB,SAAsBxjD,EAAcC,GAClCqnB,EAAI,QAAStnB,EAAMC,EACrB,EAEgB,EAAAq8C,MAAK,EAIL,EAAA37C,IAAG,EAiBH,EAAA4O,WAAhB,SAA2B7Q,GACzB,IAAMkyC,EAAwB,CAAC,EAC3BlyC,EAAIO,WACN2xC,EAAOkT,gBAAkBplD,EAAIO,UAE/B0B,EAAI,GAAIiwC,EACV,CACD,CAvDD,CAAUtpB,IAAAA,EAAG,KA0DA,EAAAhY,OAAiBgY,EAkB9B,iBACE,WACW67B,EAAyCvlD,EAAqB4mD,EAC7DC,EAAsDC,EAA2BC,GADlF,KAAAxB,SAAAA,EAAyC,KAAAvlD,KAAAA,EAAqB,KAAA4mD,UAAAA,EAC7D,KAAAC,YAAAA,EAAsD,KAAAC,MAAAA,EAA2B,KAAAC,IAAAA,CAAqB,CAcpH,OAZQ,YAAAhhB,IAAN,W,mEACE,MAAO,CAAP,EAAO/kC,KAAK6lD,YAAY7lD,M,QAGpB,YAAAgmD,WAAN,W,mEACE,QAAiBzmD,IAAbS,KAAK+lD,UAAoCxmD,IAAfS,KAAK8lD,MACjC,MAAM,IAAItmD,MAAM,wBAGhB,OADAQ,KAAK+lD,IAAIrK,WACF,CAAP,EAAO17C,KAAK+lD,IAAIzJ,uBAAuBt8C,KAAK8lD,O,QAGlD,EAjBA,GAmBA,EACE,SACWvB,EAAyCvlD,EAAqB4mD,EAA0BK,GAAxF,KAAA1B,SAAAA,EAAyC,KAAAvlD,KAAAA,EAAqB,KAAA4mD,UAAAA,EAA0B,KAAAK,QAAAA,CAAkB,EAGvH,aAQE,WAAoBC,EAA0BC,EAAyBC,GA+H/D,KAAAC,UAAW,EASX,KAAAC,cAAgB,EAvItBtmD,KAAKqmD,UAAW,EAChBrmD,KAAKumD,sBAAuChnD,IAApB2mD,EAAgC,IAAQA,EAChElmD,KAAKwmD,qBAAqCjnD,IAAnB4mD,EAA+B,GAAKA,EAC3DnmD,KAAKymD,kCAA+DlnD,IAAhC6mD,EAA4C,IAAOA,CACzF,CAoIF,OAhJS,EAAAM,OAAP,SAAc1U,GACZ,YAAezyC,IAAXyyC,EACK,IAAIhyC,KAEN,IAAIA,KAAKgyC,EAAOkU,gBAAiBlU,EAAOmU,eAAgBnU,EAAOoU,4BACxE,EAUA,YAAAhmB,MAAA,WACEpgC,KAAKqmD,UAAW,EAChBrmD,KAAK2mD,cAAgB,GACrB3mD,KAAK4mD,YAAa,IAAAC,OAClB7mD,KAAKsmD,cAAgB,CACvB,EAGA,YAAAQ,KAAA,WAEE,IADA9mD,KAAKqmD,UAAW,EACTrmD,KAAKsmD,cAAgBtmD,KAAK2mD,cAAc/mD,OAAQI,KAAKsmD,gBAC1DtmD,KAAK+mD,YAAY/mD,KAAK2mD,cAAc3mD,KAAKsmD,eAE7C,EAMA,YAAA5a,MAAA,SAAS6Y,EAAkCvlD,EAAcs4B,EAA4ByuB,GAArF,WAEQra,EAAQ1rC,KAAKqmD,SAAWrmD,KAAKgnD,MAAMzC,EAAUvlD,EAAM+mD,QAAOxmD,EAC5D0nD,GAAY,EAEVjqB,EAAM1F,IAGZ,GAAI0F,GAA2C,mBAA5BA,EAAmBkqB,KAEpC,OADAD,GAAY,EACL,IAAIvhD,SAAW,SAACC,EAASC,GAC7Bo3B,EACIkqB,MACG,SAAM5mD,GAAK,qC,yDACLorC,EACF,GAAMA,EAAM3G,OADV,M,OACF,S,wBAEFp/B,EAAQrF,G,cAEV,SAAM6mD,GAAM,qC,yDACNzb,EACF,GAAMA,EAAM3G,OADV,M,OACF,S,wBAEFn/B,EAAOuhD,G,aAEnB,IAEF,IAAKF,GAAavb,EAAO,CACvB,IAAM,EAAWA,EAAM3G,MACvB,GAAI,GAAqC,mBAAlB,EAASmiB,KAC9B,OAAO,IAAIxhD,SAAW,SAACC,EAASC,GAC9B,EAAWshD,MACP,WACEvhD,EAAQq3B,EACV,IACA,SAACmqB,GACCvhD,EAAOuhD,EACT,GACN,G,CAGJ,OAAOnqB,CACT,EAGA,YAAAgqB,MAAA,SAAMzC,EAAkCvlD,EAAc+mD,GAAtD,WACE,IAAK/lD,KAAKqmD,SACR,MAAM,IAAI7mD,MAAM,+BAElB,QAAYD,IAARwmD,EAAmB,CACrB,IAAMH,GAAY,IAAAiB,OAElB,OADA7mD,KAAK68C,MAAM+I,GACJ,IAAIwB,EAAM7C,EAAUvlD,EAAM4mD,GAAW,SAAAr8C,GAAK,SAAK89C,QAAQ99C,EAAb,G,CAEjD,IAAMu8C,EAAoBC,EAAI5K,aAC9B,OAAO,IAAIiM,EAAM7C,EAAUvlD,EAAM,GAAG,SAAMuK,GAAC,gEAAI,SAAAvJ,KAAK+kC,IAAIx7B,G,SAAIu8C,EAAOC,EAEvE,EAGc,YAAAhhB,IAAd,SAAkB2G,G,gGACQ,SAAMA,EAAMsa,c,cAA9BC,EAAkB,SACpBjmD,KAAK2mD,cAAc/mD,OAASI,KAAKumD,mBACnCvmD,KAAK2mD,cAAc9mD,KAAK,IAAIynD,EAAY5b,EAAM6Y,SAAU7Y,EAAM1sC,KAAM0sC,EAAMka,UAAWK,IACrFjmD,KAAK68C,MAAMoJ,I,YAIP,YAAAoB,QAAR,SAAgB3b,GACd,IAAMua,GAAkB,IAAAY,OACpB7mD,KAAK2mD,cAAc/mD,OAASI,KAAKumD,mBACnCvmD,KAAK2mD,cAAc9mD,KAAK,IAAIynD,EAAY5b,EAAM6Y,SAAU7Y,EAAM1sC,KAAM0sC,EAAMka,UAAWK,IACrFjmD,KAAK68C,MAAMoJ,GAEf,EAEQ,YAAAc,YAAR,SAAoBrb,GAClB,EAAAh7B,OAAOE,QACH,mBAAY86B,EAAM6Y,UAClB,WAAI7Y,EAAMua,QAAUva,EAAMka,WAAW2B,QAAQ,GAAE,wBAAgB7b,EAAM1sC,KAAI,gBAAQ0sC,EAAMua,QAAQsB,QAAQ,IAC7G,EAEQ,YAAA1K,MAAR,SAAc2K,GACZ,GAAIxnD,KAAK2mD,cAAc/mD,OAASI,KAAKsmD,eAAiBtmD,KAAKwmD,iBACvDgB,EAAcxnD,KAAK4mD,YAAc5mD,KAAKymD,6BAA8B,CAGtE,IAAK,IAAMgB,EAAkBznD,KAAKsmD,cAAetmD,KAAKsmD,cAAgBmB,EAAkBznD,KAAKwmD,iBACxFxmD,KAAKsmD,cAAgBtmD,KAAK2mD,cAAc/mD,OACxCI,KAAKsmD,gBACRtmD,KAAK+mD,YAAY/mD,KAAK2mD,cAAc3mD,KAAKsmD,gBAG3CtmD,KAAK4mD,YAAa,IAAAC,M,CAEtB,EAEA,sBAAI,sBAAO,C,IAAX,WACE,OAAO7mD,KAAKqmD,QACd,E,gCAWF,EAjJA,GAAa,EAAAqB,SAAAA,EAsJA,EAAAb,IAA8B,oBAAhBc,aAA+BA,YAAYd,IAAO,WAAM,OAAAc,YAAYd,KAAZ,EAAoBpB,KAAKoB,G,oGC3b5G,cACA,UAEA,UAEA,UACA,UAEOl7C,EAAS,EAAAC,YAAYC,aAAaC,IAEzC,aAEE,aAAe,CAwDjB,OAtDE,YAAA87C,KAAA,SAAKC,EAAiB3H,EAAsC4H,GAC1D,IAAKA,EAEH,IAEE,YADA9nD,KAAK+nD,mBAAmBF,EAAK3H,E,CAE7B,MAAO32C,GACP,QAAoBhK,IAAhBuoD,EACF,MAAMv+C,C,CAKZvJ,KAAKgoD,kBAAkBH,EAAK3H,EAC9B,EAEQ,YAAA6H,mBAAR,SAA2BF,EAAiB3H,GAC1C,IAAM+H,EAAa,EAAA/7C,KAAKg8C,WAAWjtC,OAAO4sC,GAE1C,GADkB,EAAA95C,SAASE,aAAag6C,EAAWE,WACnC,EACd,MAAM,IAAI3oD,MAAM,8CAGlBQ,KAAKooD,QACDH,EAAWI,YAAYv/C,KAAI,SAAArJ,GAAK,OAAE6oD,OAAQ7oD,EAAE6oD,OAAkB51C,QAAS,EAAA3E,SAASE,aAAaxO,EAAEiT,SAA/D,IAEpC1S,KAAKuoD,OAAS,EAAApJ,MAAMv9C,KAAKqmD,EAAW/Y,MAAQgR,EAC9C,EAEQ,YAAA8H,kBAAR,SAA0BH,EAAiB3H,GACzC,IAAMnG,EAAK,IAAI,EAAAyO,YAAYC,WAAWZ,GAChCa,EAAW/8C,EAAOxE,iBAAiBwhD,0BAA0B5O,GAAI6O,QAEvE,GADkB,EAAA76C,SAASE,aAAay6C,EAASP,aACjC,EACd,MAAM,IAAI3oD,MAAM,8CAElBQ,KAAKooD,QAAU,GACf,IAAK,IAAI3oD,EAAI,EAAGA,EAAIipD,EAASG,oBAAqBppD,IAAK,CACrD,IAAMqpD,EAAUJ,EAASL,YAAY5oD,GACrCO,KAAKooD,QAAQvoD,KAAK,CAACyoD,OAAQQ,aAAO,EAAPA,EAASR,SAAoB51C,QAAS,EAAA3E,SAASE,aAAa66C,EAAQp2C,Y,CAGjG1S,KAAKuoD,OAAS,EAAApJ,MAAMv9C,KAAK8mD,EAASxZ,QAAUgR,EAC9C,EAGA,sBAAI,oBAAK,C,IAAT,WACE,OAAOlgD,KAAKuoD,MACd,E,gCAGA,sBAAI,qBAAM,C,IAAV,WACE,OAAOvoD,KAAKooD,OACd,E,gCACF,EA1DA,GAAa,EAAAW,MAAAA,C,mICEA,EAAAtwB,aACT,CAAC,UAAW,UAAW,QAAS,QAAS,OAAQ,SAAU,SAAU,SAC5D,EAAAuwB,UAAwC,CAAC,QAAS,QAAS,OAAQ,SAAU,SAAU,SACvF,EAAAC,YAA0C,CAAC,UAAW,U,uWC8BnE,SAASC,EAAcx2C,EAAiBy2C,GACtC,GAAIA,EAASC,SAAS,KAAM,CAE1B,IAAMC,EAAa5mD,OAAO6mD,SAASH,EAASI,UAAU,EAAGJ,EAASvpD,OAAS,GAAI,IAC/E,OAAQ4pD,MAAMH,IAAeA,GAAc32C,C,CACtC,GAAmC,IAA/By2C,EAASltC,MAAM,KAAKrc,OAAc,CAE3C,IAAM6pD,EAAON,EAASltC,MAAM,KAEtBytC,GADAL,EAAa5mD,OAAO6mD,SAASG,EAAK,GAAI,IAC3BhnD,OAAO6mD,SAASG,EAAK,GAAI,KAC1C,OAAQD,MAAMH,KAAgBG,MAAME,IAAaL,GAAc32C,GAAWA,GAAWg3C,C,CAGrF,OAAOjnD,OAAO6mD,SAASH,EAAU,MAAQz2C,CAE7C,C,0EAvCA,2BAAgCuH,EAAkBq1B,EAA0Bqa,G,gBAC1E,IAAmB,QAAAA,GAAK,8BAAE,CAArB,IAAMC,EAAI,QACP9J,EAAS8J,EAAK,GACdtB,EAASsB,EAAK,GACdC,EAAkBD,EAAK,GACvBla,EAASka,EAAK,GACdja,EAASia,EAAK,GAEpB,GAAI3vC,EAAK6lC,SAAWA,E,IAClB,IAAoB,kBAAAxQ,IAAM,8BAAE,CAAvB,IAAM9E,EAAK,QAEd,IAAIA,EAAM8d,SAAWA,GAA4B,YAAjB9d,EAAM8d,QAAmC,KAAXA,IACxDY,EAAc1e,EAAM93B,QAASm3C,GAC/B,MAAO,CAACna,OAAM,EAAEC,OAAM,E,sMAOhC,MAAM,IAAItwC,UAAU,mCAA4B4a,EAAK6lC,OAAM,0BACvDxQ,EAAOxmC,KAAI,SAAA/G,GAAO,gBAAGA,EAAIumD,QAAU,UAAS,aAAKvmD,EAAI2Q,QAAnC,IAA8CjJ,KAAK,OAC3E,C,0GC3CA,IAKiBmC,EAAYC,EAAaC,EAC5BoB,EANd,UAKiBtB,EAAA,EAAAA,cAAA,EAAAA,YAAW,IAACC,EAAA,EAAAA,eAAA,EAAAA,aAAY,IAACC,EAAA,EAAAA,MAAA,EAAAA,IAAG,KAC/BoB,EAAA,EAAAA,gBAAA,EAAAA,cAAa,KACvB,2BACA,qBACA,iBACA,uBACA,uBACA,qBACA,uBACA,mBACA,yBACA,yBACA,wBACA,sCACA,wCAOJ,SAAiBtB,IAAY,SAAAC,IAAa,SAAAC,GACxC,IAAYg+C,KAAA,EAAAA,qBAAA,EAAAA,mBAAkB,KAAE,uBAAa,qBAAW,oBACzD,CAFyC,GAAAh+C,MAAA,EAAAA,IAAG,IAE5C,CAF4B,GAAAD,eAAA,EAAAA,aAAY,IAExC,CAFD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAO5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,IAAYi+C,KAAA,EAAAA,iBAAA,EAAAA,eAAc,KACxB,2BACA,qBACA,qBACA,mBACA,uBACA,qBACA,qBACA,qBACA,uBACA,mBACA,0BACA,wBACA,wBACA,wBACA,8BACA,gCACA,2BAEH,CApByC,GAAAj+C,MAAA,EAAAA,IAAG,IAoB5C,CApB4B,GAAAD,eAAA,EAAAA,aAAY,IAoBxC,CApBD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAyB5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,IAAYk+C,KAAA,EAAAA,WAAA,EAAAA,SAAQ,KAAE,2BAAe,oBACtC,CAFyC,GAAAl+C,MAAA,EAAAA,IAAG,IAE5C,CAF4B,GAAAD,eAAA,EAAAA,aAAY,IAExC,CAFD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAO5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,IAAYi2C,KAAA,EAAAA,gBAAA,EAAAA,cAAa,KAAE,iBAAU,iCAAiB,qCAAmB,0BAC1E,CAFyC,GAAAj2C,MAAA,EAAAA,IAAG,IAE5C,CAF4B,GAAAD,eAAA,EAAAA,aAAY,IAExC,CAFD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAO5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CAqGX,QA/FE,YAAAC,OAAA,SAAO1qD,EAAWwqD,GAGhB,OAFAjqD,KAAKkqD,OAASzqD,EACdO,KAAKiqD,GAAKA,EACHjqD,IACT,EAOO,EAAAoqD,eAAP,SAAsBH,EAA4Br6C,GAChD,OAAQA,GAAO,IAAIy6C,GAASF,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAClF,EAOO,EAAAM,2BAAP,SAAkCN,EAA4Br6C,GAE5D,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIy6C,GAASF,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAClF,EAOA,YAAAznD,IAAA,SAAI6V,EAAezI,GACjB,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAI6+C,WACpCR,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,GAAYrY,KAAKiqD,IAC3F,IAClB,EAKA,YAAA9H,UAAA,WACE,IAAI1a,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EAKO,EAAAsjB,WAAP,SAAkBC,GAChBA,EAAQC,YAAY,EACtB,EAMO,EAAAC,OAAP,SAAcF,EAA8BhsC,GAC1CgsC,EAAQG,eAAe,EAAGnsC,EAAW,EACvC,EAOO,EAAAosC,gBAAP,SAAuBJ,EAA8BxpD,GACnDwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQM,UAAU9pD,EAAK/B,IAEzB,OAAOurD,EAAQO,WACjB,EAMO,EAAAC,eAAP,SAAsBR,EAA8BS,GAClDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAC,SAAP,SAAgBV,GAEd,OADaA,EAAQW,WAEvB,EAEO,EAAAC,YAAP,SAAmBZ,EAA8BhsC,GAG/C,OAFAqrC,EAAMU,WAAWC,GACjBX,EAAMa,OAAOF,EAAShsC,GACfqrC,EAAMqB,SAASV,EACxB,EACF,EAxGA,GAAa,EAAAX,MAAK,CAyGnB,CA1GyC,GAAAv+C,MAAA,EAAAA,IAAG,IA0G5C,CA1G4B,GAAAD,eAAA,EAAAA,aAAY,IA0GxC,CA1GD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA8G5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CA6FX,QAvFE,YAAAC,OAAA,SAAO1qD,EAAWwqD,GAGhB,OAFAjqD,KAAKkqD,OAASzqD,EACdO,KAAKiqD,GAAKA,EACHjqD,IACT,EAOO,EAAA6rD,mBAAP,SAA0B5B,EAA4Br6C,GACpD,OAAQA,GAAO,IAAI+6C,GAAaR,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACtF,EAOO,EAAA6B,+BAAP,SAAsC7B,EAA4Br6C,GAEhE,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAI+6C,GAAaR,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACtF,EAMA,YAAA3pD,MAAA,SAAMsP,GACJ,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIigD,gBACpC5B,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKkqD,OAASziB,GAASznC,KAAKiqD,IAC5D,IAClB,EAQA,YAAA+B,WAAA,SAAWC,GACT,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKkqD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAKO,EAAAE,eAAP,SAAsBnB,GACpBA,EAAQC,YAAY,EACtB,EAMO,EAAAmB,SAAP,SAAgBpB,EAA8BqB,GAC5CrB,EAAQG,eAAe,EAAGkB,EAAa,EACzC,EAMO,EAAAC,cAAP,SAAqBtB,EAA8BuB,GACjDvB,EAAQG,eAAe,EAAGoB,EAAkB,EAC9C,EAMO,EAAAC,aAAP,SAAoBxB,GAElB,OADaA,EAAQW,WAEvB,EAEO,EAAAc,gBAAP,SACIzB,EAA8BqB,EAC9BE,GAIF,OAHA5B,EAAUwB,eAAenB,GACzBL,EAAUyB,SAASpB,EAASqB,GAC5B1B,EAAU2B,cAActB,EAASuB,GAC1B5B,EAAU6B,aAAaxB,EAChC,EACF,EAhGA,GAAa,EAAAL,UAAS,CAiGvB,CAlGyC,GAAA7+C,MAAA,EAAAA,IAAG,IAkG5C,CAlG4B,GAAAD,eAAA,EAAAA,aAAY,IAkGxC,CAlGD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAsG5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CA4GX,QAtGE,YAAAC,OAAA,SAAO1qD,EAAWwqD,GAGhB,OAFAjqD,KAAKkqD,OAASzqD,EACdO,KAAKiqD,GAAKA,EACHjqD,IACT,EAOO,EAAA0sD,wBAAP,SAA+BzC,EAA4Br6C,GACzD,OAAQA,GAAO,IAAIm8C,GAAkB5B,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAC3F,EAOO,EAAA0C,oCAAP,SAA2C1C,EAA4Br6C,GAErE,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIm8C,GAAkB5B,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAC3F,EAKA,YAAA2C,QAAA,WACE,IAAInlB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAAkBznC,KAAKiqD,GAAI4C,SAAS7sD,KAAKkqD,OAASziB,GACzC77B,EAAYC,aAAaC,IAAIg+C,mBAAmBgD,OAClE,EAKA,YAAA1K,SAAA,WACE,IAAI3a,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAI8C,UAAU/sD,KAAKkqD,OAASziB,GAAUznC,KAAKiqD,GAAI+C,WAAW,EAAG,EACpF,EAQA,YAAAC,SAAA,SAAShB,GACP,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKkqD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAKO,EAAAiB,oBAAP,SAA2BlC,GACzBA,EAAQC,YAAY,EACtB,EAMO,EAAAkC,WAAP,SAAkBnC,EAA8B4B,GAC9C5B,EAAQoC,aAAa,EAAGR,EAAShhD,EAAYC,aAAaC,IAAIg+C,mBAAmBgD,QACnF,EAMO,EAAAO,YAAP,SAAmBrC,EAA8B5I,GAC/C4I,EAAQsC,cAAc,EAAGlL,EAAU4I,EAAQgC,WAAW,EAAG,GAC3D,EAMO,EAAAO,YAAP,SAAmBvC,EAA8BwC,GAC/CxC,EAAQG,eAAe,EAAGqC,EAAgB,EAC5C,EAMO,EAAAC,kBAAP,SAAyBzC,GAEvB,OADaA,EAAQW,WAEvB,EAEO,EAAA+B,qBAAP,SACI1C,EAA8B4B,EAC9BxK,EAA4BoL,GAK9B,OAJAzB,EAAemB,oBAAoBlC,GACnCe,EAAeoB,WAAWnC,EAAS4B,GACnCb,EAAesB,YAAYrC,EAAS5I,GACpC2J,EAAewB,YAAYvC,EAASwC,GAC7BzB,EAAe0B,kBAAkBzC,EAC1C,EACF,EA/GA,GAAa,EAAAe,eAAc,CAgH5B,CAjHyC,GAAAjgD,MAAA,EAAAA,IAAG,IAiH5C,CAjH4B,GAAAD,eAAA,EAAAA,aAAY,IAiHxC,CAjHD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAqH5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CA4FX,QAtFE,YAAAC,OAAA,SAAO1qD,EAAWwqD,GAGhB,OAFAjqD,KAAKkqD,OAASzqD,EACdO,KAAKiqD,GAAKA,EACHjqD,IACT,EAOO,EAAA2tD,4BAAP,SAAmC1D,EAA4Br6C,GAC7D,OAAQA,GAAO,IAAIqyC,GAAsBkI,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAC/F,EAOO,EAAA2D,wCAAP,SAA+C3D,EAA4Br6C,GAGzE,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIqyC,GAAsBkI,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAC/F,EAKA,YAAA/H,SAAA,WACE,IAAIza,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAAkBznC,KAAKiqD,GAAIK,UAAUtqD,KAAKkqD,OAASziB,GAC1C77B,EAAYC,aAAaC,IAAIi+C,eAAe8D,SAC9D,EAMA,YAAAz6C,MAAA,SAAMxD,GACJ,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIu+C,OACpCF,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKkqD,OAASziB,GAASznC,KAAKiqD,IAC5D,IAClB,EAKO,EAAA6D,wBAAP,SAA+B9C,GAC7BA,EAAQC,YAAY,EACtB,EAMO,EAAA8C,YAAP,SAAmB/C,EAA8B9I,GAC/C8I,EAAQgD,cAAc,EAAG9L,EAAUt2C,EAAYC,aAAaC,IAAIi+C,eAAe8D,UACjF,EAMO,EAAAI,SAAP,SAAgBjD,EAA8BkD,GAC5ClD,EAAQG,eAAe,EAAG+C,EAAa,EACzC,EAMO,EAAAC,sBAAP,SAA6BnD,GAE3B,OADaA,EAAQW,WAEvB,EAEO,EAAAyC,yBAAP,SACIpD,EAA8B9I,EAC9BgM,GAIF,OAHAjM,EAAmB6L,wBAAwB9C,GAC3C/I,EAAmB8L,YAAY/C,EAAS9I,GACxCD,EAAmBgM,SAASjD,EAASkD,GAC9BjM,EAAmBkM,sBAAsBnD,EAClD,EACF,EA/FA,GAAa,EAAA/I,mBAAkB,CAgGhC,CAjGyC,GAAAn2C,MAAA,EAAAA,IAAG,IAiG5C,CAjG4B,GAAAD,eAAA,EAAAA,aAAY,IAiGxC,CAjGD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAqG5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CA2FX,QArFE,YAAAC,OAAA,SAAO1qD,EAAWwqD,GAGhB,OAFAjqD,KAAKkqD,OAASzqD,EACdO,KAAKiqD,GAAKA,EACHjqD,IACT,EAOO,EAAAquD,iBAAP,SAAwBpE,EAA4Br6C,GAClD,OAAQA,GAAO,IAAI0+C,GAAWnE,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACpF,EAOO,EAAAsE,6BAAP,SAAoCtE,EAA4Br6C,GAE9D,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAI0+C,GAAWnE,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACpF,EAKA,YAAAuE,QAAA,WACE,IAAI/mB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAAkBznC,KAAKiqD,GAAIK,UAAUtqD,KAAKkqD,OAASziB,GAC1C77B,EAAYC,aAAaC,IAAIi+C,eAAe8D,SAC9D,EAMA,YAAA/L,UAAA,SAAUlyC,GACR,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAI2iD,UACpCtE,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKkqD,OAASziB,GAASznC,KAAKiqD,IAC5D,IAClB,EAKO,EAAAyE,aAAP,SAAoB1D,GAClBA,EAAQC,YAAY,EACtB,EAMO,EAAA0D,WAAP,SAAkB3D,EAA8BwD,GAC9CxD,EAAQgD,cAAc,EAAGQ,EAAS5iD,EAAYC,aAAaC,IAAIi+C,eAAe8D,UAChF,EAMO,EAAAe,aAAP,SAAoB5D,EAA8B6D,GAChD7D,EAAQG,eAAe,EAAG0D,EAAiB,EAC7C,EAMO,EAAAC,WAAP,SAAkB9D,GAEhB,OADaA,EAAQW,WAEvB,EAEO,EAAAoD,cAAP,SACI/D,EAA8BwD,EAC9BK,GAIF,OAHAP,EAAQI,aAAa1D,GACrBsD,EAAQK,WAAW3D,EAASwD,GAC5BF,EAAQM,aAAa5D,EAAS6D,GACvBP,EAAQQ,WAAW9D,EAC5B,EACF,EA9FA,GAAa,EAAAsD,QAAO,CA+FrB,CAhGyC,GAAAxiD,MAAA,EAAAA,IAAG,IAgG5C,CAhG4B,GAAAD,eAAA,EAAAA,aAAY,IAgGxC,CAhGD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAoG5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CAuEX,QAjEE,YAAAC,OAAA,SAAO1qD,EAAWwqD,GAGhB,OAFAjqD,KAAKkqD,OAASzqD,EACdO,KAAKiqD,GAAKA,EACHjqD,IACT,EAOO,EAAAgvD,sBAAP,SAA6B/E,EAA4Br6C,GACvD,OAAQA,GAAO,IAAIq/C,GAAgB9E,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACzF,EAOO,EAAAiF,kCAAP,SAAyCjF,EAA4Br6C,GAEnE,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIq/C,GAAgB9E,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACzF,EAMA,YAAA/H,SAAA,SAAStyC,GACP,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAI2iD,UACpCtE,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKkqD,OAASziB,GAASznC,KAAKiqD,IAC5D,IAClB,EAKO,EAAAkF,kBAAP,SAAyBnE,GACvBA,EAAQC,YAAY,EACtB,EAMO,EAAA8C,YAAP,SAAmB/C,EAA8BoE,GAC/CpE,EAAQG,eAAe,EAAGiE,EAAgB,EAC5C,EAMO,EAAAC,gBAAP,SAAuBrE,GAErB,OADaA,EAAQW,WAEvB,EAEO,EAAA2D,mBAAP,SAA0BtE,EAA8BoE,GAGtD,OAFAH,EAAaE,kBAAkBnE,GAC/BiE,EAAalB,YAAY/C,EAASoE,GAC3BH,EAAaI,gBAAgBrE,EACtC,EACF,EA1EA,GAAa,EAAAiE,aAAY,CA2E1B,CA5EyC,GAAAnjD,MAAA,EAAAA,IAAG,IA4E5C,CA5E4B,GAAAD,eAAA,EAAAA,aAAY,IA4ExC,CA5ED,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAgF5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CAiDX,QA3CE,YAAAC,OAAA,SAAO1qD,EAAWwqD,GAGhB,OAFAjqD,KAAKkqD,OAASzqD,EACdO,KAAKiqD,GAAKA,EACHjqD,IACT,EAKA,YAAA8iD,UAAA,WACE,OAAO9iD,KAAKiqD,GAAIsF,WAAWvvD,KAAKkqD,OAClC,EAKA,YAAAsF,YAAA,WACE,OAAOxvD,KAAKiqD,GAAIK,UAAUtqD,KAAKkqD,OAAS,EAC1C,EAKA,YAAAuF,YAAA,WACE,OAAOzvD,KAAKiqD,GAAIK,UAAUtqD,KAAKkqD,OAAS,EAC1C,EASO,EAAAwF,cAAP,SACI1E,EAA8B2E,EAAoBC,EAClDC,GAKF,OAJA7E,EAAQ8E,KAAK,EAAG,IAChB9E,EAAQ+E,WAAWF,GACnB7E,EAAQ+E,WAAWH,GACnB5E,EAAQ+E,WAAWJ,GACZ3E,EAAQvjB,QACjB,EACF,EApDA,GAAa,EAAAuoB,QAAO,CAqDrB,CAtDyC,GAAAlkD,MAAA,EAAAA,IAAG,IAsD5C,CAtD4B,GAAAD,eAAA,EAAAA,aAAY,IAsDxC,CAtDD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA0D5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CAgJX,QA1IE,YAAAC,OAAA,SAAO1qD,EAAWwqD,GAGhB,OAFAjqD,KAAKkqD,OAASzqD,EACdO,KAAKiqD,GAAKA,EACHjqD,IACT,EAOO,EAAAiwD,kBAAP,SAAyBhG,EAA4Br6C,GACnD,OAAQA,GAAO,IAAIsgD,GAAY/F,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACrF,EAOO,EAAAkG,8BAAP,SAAqClG,EAA4Br6C,GAE/D,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIsgD,GAAY/F,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACrF,EAKA,YAAAnH,UAAA,WACE,IAAIrb,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIsF,WAAWvvD,KAAKkqD,OAASziB,GAAU,CAC9D,EAOA,YAAA2oB,WAAA,SAAW/3C,EAAezI,GACxB,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIkkD,SACpC7F,OAAOnqD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,GAARpvB,EAAYrY,KAAKiqD,IACvE,IAClB,EAKA,YAAAoG,iBAAA,WACE,IAAI5oB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EAOA,YAAA6oB,YAAA,SAAYj4C,EAAezI,GACzB,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIkkD,SACpC7F,OAAOnqD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,GAARpvB,EAAYrY,KAAKiqD,IACvE,IAClB,EAKA,YAAAsG,kBAAA,WACE,IAAI9oB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EAKO,EAAA+oB,cAAP,SAAqBxF,GACnBA,EAAQC,YAAY,EACtB,EAMO,EAAAwF,aAAP,SAAoBzF,EAA8BlI,GAChDkI,EAAQgD,cAAc,EAAGlL,EAAW,EACtC,EAMO,EAAA4N,cAAP,SAAqB1F,EAA8B2F,GACjD3F,EAAQG,eAAe,EAAGwF,EAAkB,EAC9C,EAMO,EAAAC,sBAAP,SAA6B5F,EAA8BS,GACzDT,EAAQK,YAAY,GAAII,EAAU,EACpC,EAMO,EAAAoF,eAAP,SAAsB7F,EAA8B8F,GAClD9F,EAAQG,eAAe,EAAG2F,EAAmB,EAC/C,EAMO,EAAAC,uBAAP,SAA8B/F,EAA8BS,GAC1DT,EAAQK,YAAY,GAAII,EAAU,EACpC,EAMO,EAAAuF,YAAP,SAAmBhG,GAEjB,OADaA,EAAQW,WAEvB,EAEO,EAAAsF,eAAP,SACIjG,EAA8BlI,EAAmB6N,EACjDG,GAKF,OAJAZ,EAASM,cAAcxF,GACvBkF,EAASO,aAAazF,EAASlI,GAC/BoN,EAASQ,cAAc1F,EAAS2F,GAChCT,EAASW,eAAe7F,EAAS8F,GAC1BZ,EAASc,YAAYhG,EAC9B,EACF,EAnJA,GAAa,EAAAkF,SAAQ,CAoJtB,CArJyC,GAAApkD,MAAA,EAAAA,IAAG,IAqJ5C,CArJ4B,GAAAD,eAAA,EAAAA,aAAY,IAqJxC,CArJD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAyJ5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CAodX,QA9cE,YAAAC,OAAA,SAAO1qD,EAAWwqD,GAGhB,OAFAjqD,KAAKkqD,OAASzqD,EACdO,KAAKiqD,GAAKA,EACHjqD,IACT,EAOO,EAAAkxD,cAAP,SAAqBjH,EAA4Br6C,GAC/C,OAAQA,GAAO,IAAImwC,GAAQoK,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACjF,EAOO,EAAAkH,0BAAP,SAAiClH,EAA4Br6C,GAE3D,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAImwC,GAAQoK,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACjF,EAQA,YAAAjrD,KAAA,SAAKitD,GACH,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKkqD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAQA,YAAAmF,UAAA,SAAUnF,GACR,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKkqD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAQA,YAAA3D,OAAA,SAAO2D,GACL,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKkqD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAKA,YAAAoF,aAAA,WACE,IAAI5pB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIK,UAAUtqD,KAAKkqD,OAASziB,GAAU,CAC7D,EAKA,YAAApvB,MAAA,WACE,IAAIovB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIsF,WAAWvvD,KAAKkqD,OAASziB,GAAU,CAC9D,EAQA,YAAAqY,OAAA,SAAOmM,GACL,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKkqD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAKA,YAAA1qD,KAAA,WACE,IAAIkmC,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAAkBznC,KAAKiqD,GAAIK,UAAUtqD,KAAKkqD,OAASziB,GAC1C77B,EAAYC,aAAaC,IAAIk+C,SAASsH,SACxD,EAQA,YAAAC,sBAAA,SAAsBtF,GACpB,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKkqD,OAASziB,EAAQwkB,GAAoB,IAC9E,EASA,YAAArrC,OAAA,SAAOvI,EAAe4zC,GACpB,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,EAAW4zC,GAAoB,IAC7G,EAKA,YAAAvK,aAAA,WACE,IAAIja,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EASA,YAAAH,QAAA,SAAQjvB,EAAe4zC,GACrB,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,EAAW4zC,GAAoB,IAC7G,EAKA,YAAA1J,cAAA,WACE,IAAI9a,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EAOA,YAAA17B,WAAA,SAAWsM,EAAezI,GAExB,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIM,WACpC+9C,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,GAAYrY,KAAKiqD,IAC3F,IAClB,EAKA,YAAAvH,iBAAA,WACE,IAAIjb,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EAMA,YAAA+pB,eAAA,SAAen5C,GACb,IAAIovB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIK,UAAUtqD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,GAAa,CAC5F,EAKA,YAAAo5C,qBAAA,WACE,IAAIhqB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EAKA,YAAAiqB,oBAAA,WACE,IAAIjqB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EACH,IAAI3mC,WACAd,KAAKiqD,GAAI0H,QAAQ7uD,OAAQ9C,KAAKiqD,GAAI0H,QAAQjpD,WAAa1I,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GACvFznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,IACxC,IACN,EASA,YAAAmqB,eAAA,SAAev5C,EAAe4zC,GAC5B,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,EAAW4zC,GAAoB,IAC7G,EAKA,YAAA4F,qBAAA,WACE,IAAIpqB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EAKO,EAAAqqB,UAAP,SAAiB9G,GACfA,EAAQC,YAAY,GACtB,EAMO,EAAA8G,QAAP,SAAe/G,EAA8BgH,GAC3ChH,EAAQG,eAAe,EAAG6G,EAAY,EACxC,EAMO,EAAAC,aAAP,SAAoBjH,EAA8BkH,GAChDlH,EAAQG,eAAe,EAAG+G,EAAiB,EAC7C,EAMO,EAAAC,UAAP,SAAiBnH,EAA8BoH,GAC7CpH,EAAQG,eAAe,EAAGiH,EAAc,EAC1C,EAMO,EAAAC,gBAAP,SAAuBrH,EAA8BqG,GACnDrG,EAAQgD,cAAc,EAAGqD,EAAc,EACzC,EAMO,EAAAiB,SAAP,SAAgBtH,EAA8B3yC,GAC5C2yC,EAAQgD,cAAc,EAAG31C,EAAO,EAClC,EAMO,EAAAk6C,UAAP,SAAiBvH,EAA8BwH,GAC7CxH,EAAQG,eAAe,EAAGqH,EAAc,EAC1C,EAMO,EAAAC,QAAP,SAAezH,EAA8BzpD,GAC3CypD,EAAQgD,cAAc,EAAGzsD,EAAMqK,EAAYC,aAAaC,IAAIk+C,SAASsH,UACvE,EAMO,EAAAoB,yBAAP,SAAgC1H,EAA8B2H,GAC5D3H,EAAQG,eAAe,EAAGwH,EAA6B,EACzD,EAMO,EAAAC,UAAP,SAAiB5H,EAA8B6H,GAC7C7H,EAAQG,eAAe,EAAG0H,EAAc,EAC1C,EAOO,EAAAC,mBAAP,SAA0B9H,EAA8BxpD,GACtDwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQM,UAAU9pD,EAAK/B,IAEzB,OAAOurD,EAAQO,WACjB,EAMO,EAAAwH,kBAAP,SAAyB/H,EAA8BS,GACrDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAuH,WAAP,SAAkBhI,EAA8BiI,GAC9CjI,EAAQG,eAAe,EAAG8H,EAAe,EAC3C,EAOO,EAAAC,oBAAP,SAA2BlI,EAA8BxpD,GACvDwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQM,UAAU9pD,EAAK/B,IAEzB,OAAOurD,EAAQO,WACjB,EAMO,EAAA4H,mBAAP,SAA0BnI,EAA8BS,GACtDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAA2H,cAAP,SAAqBpI,EAA8BqI,GACjDrI,EAAQG,eAAe,GAAIkI,EAAkB,EAC/C,EAOO,EAAAC,uBAAP,SAA8BtI,EAA8BxpD,GAC1DwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQM,UAAU9pD,EAAK/B,IAEzB,OAAOurD,EAAQO,WACjB,EAMO,EAAAgI,sBAAP,SAA6BvI,EAA8BS,GACzDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAA+H,kBAAP,SAAyBxI,EAA8ByI,GACrDzI,EAAQG,eAAe,GAAIsI,EAAsB,EACnD,EAOO,EAAAC,2BAAP,SAAkC1I,EAA8BxpD,GAC9DwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQ2I,SAASnyD,EAAK/B,IAExB,OAAOurD,EAAQO,WACjB,EAMO,EAAAqI,0BAAP,SAAiC5I,EAA8BS,GAC7DT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAoI,kBAAP,SAAyB7I,EAA8B8I,GACrD9I,EAAQG,eAAe,GAAI2I,EAAsB,EACnD,EAOO,EAAAC,2BAAP,SAAkC/I,EAA8BxpD,GAC9DwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQM,UAAU9pD,EAAK/B,IAEzB,OAAOurD,EAAQO,WACjB,EAMO,EAAAyI,0BAAP,SAAiChJ,EAA8BS,GAC7DT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAwI,QAAP,SAAejJ,GAEb,OADaA,EAAQW,WAEvB,EAEO,EAAAuI,WAAP,SACIlJ,EAA8BgH,EAAgCE,EAC9DE,EAAkCf,EAAsBh5C,EAAem6C,EACvEjxD,EAA6CoxD,EAC7CE,EAAkCI,EAAmCI,EACrEI,EAA0CK,GAe5C,OAdA/T,EAAK+R,UAAU9G,GACfjL,EAAKgS,QAAQ/G,EAASgH,GACtBjS,EAAKkS,aAAajH,EAASkH,GAC3BnS,EAAKoS,UAAUnH,EAASoH,GACxBrS,EAAKsS,gBAAgBrH,EAASqG,GAC9BtR,EAAKuS,SAAStH,EAAS3yC,GACvB0nC,EAAKwS,UAAUvH,EAASwH,GACxBzS,EAAK0S,QAAQzH,EAASzpD,GACtBw+C,EAAK2S,yBAAyB1H,EAAS2H,GACvC5S,EAAK6S,UAAU5H,EAAS6H,GACxB9S,EAAKiT,WAAWhI,EAASiI,GACzBlT,EAAKqT,cAAcpI,EAASqI,GAC5BtT,EAAKyT,kBAAkBxI,EAASyI,GAChC1T,EAAK8T,kBAAkB7I,EAAS8I,GACzB/T,EAAKkU,QAAQjJ,EACtB,EACF,EAvdA,GAAa,EAAAjL,KAAI,CAwdlB,CAzdyC,GAAAj0C,MAAA,EAAAA,IAAG,IAyd5C,CAzd4B,GAAAD,eAAA,EAAAA,aAAY,IAydxC,CAzdD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA6d5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CAiHX,QA3GE,YAAAC,OAAA,SAAO1qD,EAAWwqD,GAGhB,OAFAjqD,KAAKkqD,OAASzqD,EACdO,KAAKiqD,GAAKA,EACHjqD,IACT,EAOO,EAAAm0D,mBAAP,SAA0BlK,EAA4Br6C,GACpD,OAAQA,GAAO,IAAIwkD,GAAajK,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACtF,EAOO,EAAAoK,+BAAP,SAAsCpK,EAA4Br6C,GAEhE,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIwkD,GAAajK,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACtF,EAQA,YAAAjrD,KAAA,SAAKitD,GACH,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKkqD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAQA,YAAAmF,UAAA,SAAUnF,GACR,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKkqD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAMA,YAAA1qD,KAAA,SAAKqO,GACH,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAI2iD,UACpCtE,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKkqD,OAASziB,GAASznC,KAAKiqD,IAC5D,IAClB,EAKO,EAAAqK,eAAP,SAAsBtJ,GACpBA,EAAQC,YAAY,EACtB,EAMO,EAAA8G,QAAP,SAAe/G,EAA8BgH,GAC3ChH,EAAQG,eAAe,EAAG6G,EAAY,EACxC,EAMO,EAAAC,aAAP,SAAoBjH,EAA8BkH,GAChDlH,EAAQG,eAAe,EAAG+G,EAAiB,EAC7C,EAMO,EAAAO,QAAP,SAAezH,EAA8BuJ,GAC3CvJ,EAAQG,eAAe,EAAGoJ,EAAY,EACxC,EAMO,EAAAC,aAAP,SAAoBxJ,GAElB,OADaA,EAAQW,WAEvB,EAEO,EAAA8I,gBAAP,SACIzJ,EAA8BgH,EAAgCE,EAC9DqC,GAKF,OAJAH,EAAUE,eAAetJ,GACzBoJ,EAAUrC,QAAQ/G,EAASgH,GAC3BoC,EAAUnC,aAAajH,EAASkH,GAChCkC,EAAU3B,QAAQzH,EAASuJ,GACpBH,EAAUI,aAAaxJ,EAChC,EACF,EApHA,GAAa,EAAAoJ,UAAS,CAqHvB,CAtHyC,GAAAtoD,MAAA,EAAAA,IAAG,IAsH5C,CAtH4B,GAAAD,eAAA,EAAAA,aAAY,IAsHxC,CAtHD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA0H5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CA6GX,QAvGE,YAAAC,OAAA,SAAO1qD,EAAWwqD,GAGhB,OAFAjqD,KAAKkqD,OAASzqD,EACdO,KAAKiqD,GAAKA,EACHjqD,IACT,EAOO,EAAA00D,kBAAP,SAAyBzK,EAA4Br6C,GACnD,OAAQA,GAAO,IAAI6+C,GAAYtE,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACrF,EAOO,EAAA0K,8BAAP,SAAqC1K,EAA4Br6C,GAE/D,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAI6+C,GAAYtE,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACrF,EAQA,YAAA+B,WAAA,SAAWC,GACT,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKkqD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAKA,YAAAnK,UAAA,WACE,IAAIra,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAAkBznC,KAAKiqD,GAAI2K,UAAU50D,KAAKkqD,OAASziB,GAC1C77B,EAAYC,aAAaC,IAAIi2C,cAAc8S,IAC7D,EAMA,YAAAv0D,MAAA,SAAmCsP,GACjC,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAI6K,QAAQllD,EAAK5P,KAAKkqD,OAASziB,GAAU,IAChE,EAKO,EAAAstB,cAAP,SAAqB/J,GACnBA,EAAQC,YAAY,EACtB,EAMO,EAAAqB,cAAP,SAAqBtB,EAA8BuB,GACjDvB,EAAQG,eAAe,EAAGoB,EAAkB,EAC9C,EAMO,EAAAqC,aAAP,SAAoB5D,EAA8BlJ,GAChDkJ,EAAQoC,aAAa,EAAGtL,EAAWl2C,EAAYC,aAAaC,IAAIi2C,cAAc8S,KAChF,EAMO,EAAAzI,SAAP,SAAgBpB,EAA8BqB,GAC5CrB,EAAQG,eAAe,EAAGkB,EAAa,EACzC,EAMO,EAAA2I,YAAP,SAAmBhK,GAEjB,OADaA,EAAQW,WAEvB,EAEO,EAAAsJ,eAAP,SACIjK,EAA8BuB,EAC9BzK,EAAuDuK,GAKzD,OAJAoC,EAASsG,cAAc/J,GACvByD,EAASnC,cAActB,EAASuB,GAChCkC,EAASG,aAAa5D,EAASlJ,GAC/B2M,EAASrC,SAASpB,EAASqB,GACpBoC,EAASuG,YAAYhK,EAC9B,EACF,EAhHA,GAAa,EAAAyD,SAAQ,CAiHtB,CAlHyC,GAAA3iD,MAAA,EAAAA,IAAG,IAkH5C,CAlH4B,GAAAD,eAAA,EAAAA,aAAY,IAkHxC,CAlHD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAsH5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CAyFX,QAnFE,YAAAC,OAAA,SAAO1qD,EAAWwqD,GAGhB,OAFAjqD,KAAKkqD,OAASzqD,EACdO,KAAKiqD,GAAKA,EACHjqD,IACT,EAOO,EAAAk1D,uBAAP,SAA8BjL,EAA4Br6C,GACxD,OAAQA,GAAO,IAAIulD,GAAiBhL,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAC1F,EAOO,EAAAmL,mCAAP,SAA0CnL,EAA4Br6C,GAEpE,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIulD,GAAiBhL,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAC1F,EAQA,YAAA3B,OAAA,SAAO2D,GACL,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKkqD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAKA,YAAAv5C,QAAA,WACE,IAAI+0B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAI8C,UAAU/sD,KAAKkqD,OAASziB,GAAUznC,KAAKiqD,GAAI+C,WAAW,EAAG,EACpF,EAKO,EAAAqI,mBAAP,SAA0BrK,GACxBA,EAAQC,YAAY,EACtB,EAMO,EAAAkH,UAAP,SAAiBnH,EAA8BoH,GAC7CpH,EAAQG,eAAe,EAAGiH,EAAc,EAC1C,EAMO,EAAAkD,WAAP,SAAkBtK,EAA8Bt4C,GAC9Cs4C,EAAQsC,cAAc,EAAG56C,EAASs4C,EAAQgC,WAAW,EAAG,GAC1D,EAMO,EAAAuI,iBAAP,SAAwBvK,GAEtB,OADaA,EAAQW,WAEvB,EAEO,EAAA6J,oBAAP,SACIxK,EAA8BoH,EAAkC1/C,GAIlE,OAHAyiD,EAAcE,mBAAmBrK,GACjCmK,EAAchD,UAAUnH,EAASoH,GACjC+C,EAAcG,WAAWtK,EAASt4C,GAC3ByiD,EAAcI,iBAAiBvK,EACxC,EACF,EA5FA,GAAa,EAAAmK,cAAa,CA6F3B,CA9FyC,GAAArpD,MAAA,EAAAA,IAAG,IA8F5C,CA9F4B,GAAAD,eAAA,EAAAA,aAAY,IA8FxC,CA9FD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAkG5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CA6QX,QAvQE,YAAAC,OAAA,SAAO1qD,EAAWwqD,GAGhB,OAFAjqD,KAAKkqD,OAASzqD,EACdO,KAAKiqD,GAAKA,EACHjqD,IACT,EAOO,EAAAy1D,gBAAP,SAAuBxL,EAA4Br6C,GACjD,OAAQA,GAAO,IAAIzO,GAAUgpD,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACnF,EAOO,EAAAyL,4BAAP,SAAmCzL,EAA4Br6C,GAE7D,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIzO,GAAUgpD,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACnF,EAQA,YAAAjrD,KAAA,SAAKitD,GACH,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKkqD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAQA,YAAAmF,UAAA,SAAUnF,GACR,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKkqD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAMA,YAAAxqD,KAAA,SAAK4W,GACH,IAAIovB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAI8C,UAAU/sD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,GAC7DrY,KAAKiqD,GAAI+C,WAAW,EAAG,EACzC,EAKA,YAAA2I,WAAA,WACE,IAAIluB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EAKA,YAAAvkB,SAAA,WACE,IAAIukB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAAkBznC,KAAKiqD,GAAIK,UAAUtqD,KAAKkqD,OAASziB,GAC1C77B,EAAYC,aAAaC,IAAIi+C,eAAe8D,SAC9D,EAMA,YAAA+H,QAAA,SAAQv9C,GACN,IAAIovB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAI2K,UAAU50D,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAUpvB,GAAS,CACxF,EAKA,YAAAw9C,cAAA,WACE,IAAIpuB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EAKA,YAAAquB,aAAA,WACE,IAAIruB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EACH,IAAI/mC,WACAV,KAAKiqD,GAAI0H,QAAQ7uD,OAAQ9C,KAAKiqD,GAAI0H,QAAQjpD,WAAa1I,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GACvFznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,IACxC,IACN,EASA,YAAAsuB,WAAA,SAAW19C,EAAe4zC,GACxB,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,EAAW4zC,GAAoB,IAC7G,EAKA,YAAA+J,iBAAA,WACE,IAAIvuB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EAKO,EAAAwuB,YAAP,SAAmBjL,GACjBA,EAAQC,YAAY,EACtB,EAMO,EAAA8G,QAAP,SAAe/G,EAA8BgH,GAC3ChH,EAAQG,eAAe,EAAG6G,EAAY,EACxC,EAMO,EAAAC,aAAP,SAAoBjH,EAA8BkH,GAChDlH,EAAQG,eAAe,EAAG+G,EAAiB,EAC7C,EAMO,EAAAgE,QAAP,SAAelL,EAA8BmL,GAC3CnL,EAAQG,eAAe,EAAGgL,EAAY,EACxC,EAOO,EAAAC,iBAAP,SAAwBpL,EAA8BxpD,GACpDwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQqL,SAAS70D,EAAK/B,IAExB,OAAOurD,EAAQO,WACjB,EAMO,EAAA+K,gBAAP,SAAuBtL,EAA8BS,GACnDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAA8K,YAAP,SAAmBvL,EAA8B9nC,GAC/C8nC,EAAQgD,cAAc,EAAG9qC,EAAUtX,EAAYC,aAAaC,IAAIi+C,eAAe8D,UACjF,EAMO,EAAA2I,WAAP,SAAkBxL,EAA8ByL,GAC9CzL,EAAQG,eAAe,EAAGsL,EAAe,EAC3C,EAOO,EAAAC,oBAAP,SAA2B1L,EAA8BxpD,GACvDwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQ2L,QAAQn1D,EAAK/B,IAEvB,OAAOurD,EAAQO,WACjB,EAMO,EAAAqL,mBAAP,SAA0B5L,EAA8BS,GACtDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAoL,cAAP,SAAqB7L,EAA8B8L,GACjD9L,EAAQG,eAAe,EAAG2L,EAAkB,EAC9C,EAOO,EAAAC,uBAAP,SAA8B/L,EAA8BxpD,GAC1DwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQM,UAAU9pD,EAAK/B,IAEzB,OAAOurD,EAAQO,WACjB,EAMO,EAAAyL,sBAAP,SAA6BhM,EAA8BS,GACzDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAwL,UAAP,SAAiBjM,GAEf,OADaA,EAAQW,WAEvB,EAEO,EAAAuL,aAAP,SACIlM,EAA8BgH,EAAgCE,EAC9DiE,EAAgCjzC,EAChCuzC,EAAmCK,GAQrC,OAPA31D,EAAO80D,YAAYjL,GACnB7pD,EAAO4wD,QAAQ/G,EAASgH,GACxB7wD,EAAO8wD,aAAajH,EAASkH,GAC7B/wD,EAAO+0D,QAAQlL,EAASmL,GACxBh1D,EAAOo1D,YAAYvL,EAAS9nC,GAC5B/hB,EAAOq1D,WAAWxL,EAASyL,GAC3Bt1D,EAAO01D,cAAc7L,EAAS8L,GACvB31D,EAAO81D,UAAUjM,EAC1B,EACF,EAhRA,GAAa,EAAA7pD,OAAM,CAiRpB,CAlRyC,GAAA2K,MAAA,EAAAA,IAAG,IAkR5C,CAlR4B,GAAAD,eAAA,EAAAA,aAAY,IAkRxC,CAlRD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAsR5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CA6IX,QAvIE,YAAAC,OAAA,SAAO1qD,EAAWwqD,GAGhB,OAFAjqD,KAAKkqD,OAASzqD,EACdO,KAAKiqD,GAAKA,EACHjqD,IACT,EAOO,EAAAm3D,sBAAP,SAA6BlN,EAA4Br6C,GACvD,OAAQA,GAAO,IAAIwnD,GAAgBjN,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACzF,EAOO,EAAAoN,kCAAP,SAAyCpN,EAA4Br6C,GAEnE,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIwnD,GAAgBjN,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACzF,EAMA,YAAAqN,OAAA,SAAO1nD,GACL,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAI3K,QACpCgpD,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKkqD,OAASziB,GAASznC,KAAKiqD,IAC5D,IAClB,EAMA,YAAAsN,QAAA,SAAQ3nD,GACN,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAI3K,QACpCgpD,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKkqD,OAASziB,GAASznC,KAAKiqD,IAC5D,IAClB,EAMA,YAAAxoD,KAAA,SAAK4W,GACH,IAAIovB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAI8C,UAAU/sD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,GAC7DrY,KAAKiqD,GAAI+C,WAAW,EAAG,EACzC,EAKA,YAAA2I,WAAA,WACE,IAAIluB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EAKO,EAAA+vB,kBAAP,SAAyBxM,GACvBA,EAAQC,YAAY,EACtB,EAMO,EAAAwM,UAAP,SAAiBzM,EAA8B0M,GAC7C1M,EAAQG,eAAe,EAAGuM,EAAc,EAC1C,EAMO,EAAAC,WAAP,SAAkB3M,EAA8B4M,GAC9C5M,EAAQG,eAAe,EAAGyM,EAAe,EAC3C,EAMO,EAAA1B,QAAP,SAAelL,EAA8BmL,GAC3CnL,EAAQG,eAAe,EAAGgL,EAAY,EACxC,EAOO,EAAAC,iBAAP,SAAwBpL,EAA8BxpD,GACpDwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQqL,SAAS70D,EAAK/B,IAExB,OAAOurD,EAAQO,WACjB,EAMO,EAAA+K,gBAAP,SAAuBtL,EAA8BS,GACnDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAoM,gBAAP,SAAuB7M,GAErB,OADaA,EAAQW,WAEvB,EAEO,EAAAmM,mBAAP,SACI9M,EAA8B0M,EAAkCE,EAChEzB,GAKF,OAJAiB,EAAaI,kBAAkBxM,GAC/BoM,EAAaK,UAAUzM,EAAS0M,GAChCN,EAAaO,WAAW3M,EAAS4M,GACjCR,EAAalB,QAAQlL,EAASmL,GACvBiB,EAAaS,gBAAgB7M,EACtC,EACF,EAhJA,GAAa,EAAAoM,aAAY,CAiJ1B,CAlJyC,GAAAtrD,MAAA,EAAAA,IAAG,IAkJ5C,CAlJ4B,GAAAD,eAAA,EAAAA,aAAY,IAkJxC,CAlJD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAsJ5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CAidX,QA3cE,YAAAC,OAAA,SAAO1qD,EAAWwqD,GAGhB,OAFAjqD,KAAKkqD,OAASzqD,EACdO,KAAKiqD,GAAKA,EACHjqD,IACT,EAOO,EAAA+3D,mBAAP,SAA0B9N,EAA4Br6C,GACpD,OAAQA,GAAO,IAAIxD,GAAa+9C,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACtF,EAOO,EAAA+N,+BAAP,SAAsC/N,EAA4Br6C,GAEhE,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIxD,GAAa+9C,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACtF,EAQA,YAAAjrD,KAAA,SAAKitD,GACH,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKkqD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAQA,YAAAmF,UAAA,SAAUnF,GACR,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKkqD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAKA,YAAA1qD,KAAA,WACE,IAAIkmC,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAAkBznC,KAAKiqD,GAAIK,UAAUtqD,KAAKkqD,OAASziB,GAC1C77B,EAAYC,aAAaC,IAAIoB,cAAc2gD,SAC7D,EAKA,YAAAl/C,EAAA,WACE,IAAI84B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIgO,YAAYj4D,KAAKkqD,OAASziB,GAAU,CAC/D,EAKA,YAAAhoC,EAAA,WACE,IAAIgoC,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAI8C,UAAU/sD,KAAKkqD,OAASziB,GAAUznC,KAAKiqD,GAAI+C,WAAW,EAAG,EACpF,EAQA,YAAAp+C,EAAA,SAAEq9C,GACA,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKkqD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAMA,YAAAp9C,EAAA,SAAEe,GACA,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAI3K,QACpCgpD,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKkqD,OAASziB,GAASznC,KAAKiqD,IAC5D,IAClB,EAMA,YAAAn7C,EAAA,SAAEc,GACA,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIqzC,OACpCgL,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKkqD,OAASziB,GAASznC,KAAKiqD,IAC5D,IAClB,EAMA,YAAAl7C,OAAA,SAAOsJ,GACL,IAAIovB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIgO,YAAYj4D,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,GAAa,CAC9F,EAKA,YAAA6/C,aAAA,WACE,IAAIzwB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EAKA,YAAAr4B,YAAA,WACE,IAAIq4B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EACH,IAAIhnC,aACAT,KAAKiqD,GAAI0H,QAAQ7uD,OAAQ9C,KAAKiqD,GAAI0H,QAAQjpD,WAAa1I,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GACvFznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,IACxC,IACN,EAMA,YAAAz4B,KAAA,SAAKqJ,GACH,IAAIovB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAI8C,UAAU/sD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,GAC7DrY,KAAKiqD,GAAI+C,WAAW,EAAG,EACzC,EAKA,YAAA39C,WAAA,WACE,IAAIo4B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EASA,YAAAx4B,QAAA,SAAQoJ,EAAe4zC,GACrB,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,EAAW4zC,GAAoB,IAC7G,EAKA,YAAA38C,cAAA,WACE,IAAIm4B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EAOA,YAAAv4B,QAAA,SAAQmJ,EAAezI,GACrB,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAI3K,QACpCgpD,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,GAAYrY,KAAKiqD,IAC3F,IAClB,EAKA,YAAA16C,cAAA,WACE,IAAIk4B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EAOA,YAAAt4B,OAAA,SAAOkJ,EAAezI,GACpB,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIqzC,OACpCgL,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,GAAYrY,KAAKiqD,IAC3F,IAClB,EAKA,YAAAkO,aAAA,WACE,IAAI1wB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EAKO,EAAA2wB,eAAP,SAAsBpN,GACpBA,EAAQC,YAAY,GACtB,EAMO,EAAA8G,QAAP,SAAe/G,EAA8BgH,GAC3ChH,EAAQG,eAAe,EAAG6G,EAAY,EACxC,EAMO,EAAAC,aAAP,SAAoBjH,EAA8BkH,GAChDlH,EAAQG,eAAe,EAAG+G,EAAiB,EAC7C,EAMO,EAAAO,QAAP,SAAezH,EAA8BzpD,GAC3CypD,EAAQgD,cAAc,EAAGzsD,EAAMqK,EAAYC,aAAaC,IAAIoB,cAAc2gD,UAC5E,EAMO,EAAAwK,KAAP,SAAYrN,EAA8Br8C,GACxCq8C,EAAQsN,gBAAgB,EAAG3pD,EAAG,EAChC,EAMO,EAAA4pD,KAAP,SAAYvN,EAA8BvrD,GACxCurD,EAAQsC,cAAc,EAAG7tD,EAAGurD,EAAQgC,WAAW,EAAG,GACpD,EAMO,EAAAwL,KAAP,SAAYxN,EAA8ByN,GACxCzN,EAAQG,eAAe,EAAGsN,EAAS,EACrC,EAMO,EAAAC,KAAP,SAAY1N,EAA8B2N,GACxC3N,EAAQG,eAAe,EAAGwN,EAAS,EACrC,EAMO,EAAAC,KAAP,SAAY5N,EAA8B6N,GACxC7N,EAAQG,eAAe,EAAG0N,EAAS,EACrC,EAMO,EAAAC,UAAP,SAAiB9N,EAA8B+N,GAC7C/N,EAAQG,eAAe,EAAG4N,EAAc,EAC1C,EAOO,EAAAC,mBAAP,SAA0BhO,EAA8BxpD,GACtDwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQiO,WAAWz3D,EAAK/B,IAE1B,OAAOurD,EAAQO,WACjB,EAMO,EAAA2N,kBAAP,SAAyBlO,EAA8BS,GACrDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAA0N,QAAP,SAAenO,EAA8BoO,GAC3CpO,EAAQG,eAAe,EAAGiO,EAAY,EACxC,EAOO,EAAAC,iBAAP,SAAwBrO,EAA8BxpD,GACpDwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQqL,SAAS70D,EAAK/B,IAExB,OAAOurD,EAAQO,WACjB,EAMO,EAAA+N,gBAAP,SAAuBtO,EAA8BS,GACnDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAA8N,WAAP,SAAkBvO,EAA8BwO,GAC9CxO,EAAQG,eAAe,GAAIqO,EAAe,EAC5C,EAOO,EAAAC,oBAAP,SAA2BzO,EAA8BxpD,GACvDwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQM,UAAU9pD,EAAK/B,IAEzB,OAAOurD,EAAQO,WACjB,EAMO,EAAAmO,mBAAP,SAA0B1O,EAA8BS,GACtDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAkO,WAAP,SAAkB3O,EAA8B4O,GAC9C5O,EAAQG,eAAe,GAAIyO,EAAe,EAC5C,EAOO,EAAAC,oBAAP,SAA2B7O,EAA8BxpD,GACvDwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQM,UAAU9pD,EAAK/B,IAEzB,OAAOurD,EAAQO,WACjB,EAMO,EAAAuO,mBAAP,SAA0B9O,EAA8BS,GACtDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAsO,UAAP,SAAiB/O,EAA8BgP,GAC7ChP,EAAQG,eAAe,GAAI6O,EAAc,EAC3C,EAOO,EAAAC,mBAAP,SAA0BjP,EAA8BxpD,GACtDwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQM,UAAU9pD,EAAK/B,IAEzB,OAAOurD,EAAQO,WACjB,EAMO,EAAA2O,kBAAP,SAAyBlP,EAA8BS,GACrDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAA0O,aAAP,SAAoBnP,GAElB,OADaA,EAAQW,WAEvB,EAEO,EAAAyO,gBAAP,SACIpP,EAA8BgH,EAAgCE,EAC9D3wD,EAAkDoN,EAAWlP,EAAqBg5D,EAClFE,EAA6BE,EAA6BE,EAC1DK,EAAgCI,EAAmCI,EACnEI,GAeF,OAdA5tD,EAAUgsD,eAAepN,GACzB5+C,EAAU2lD,QAAQ/G,EAASgH,GAC3B5lD,EAAU6lD,aAAajH,EAASkH,GAChC9lD,EAAUqmD,QAAQzH,EAASzpD,GAC3B6K,EAAUisD,KAAKrN,EAASr8C,GACxBvC,EAAUmsD,KAAKvN,EAASvrD,GACxB2M,EAAUosD,KAAKxN,EAASyN,GACxBrsD,EAAUssD,KAAK1N,EAAS2N,GACxBvsD,EAAUwsD,KAAK5N,EAAS6N,GACxBzsD,EAAU0sD,UAAU9N,EAAS+N,GAC7B3sD,EAAU+sD,QAAQnO,EAASoO,GAC3BhtD,EAAUmtD,WAAWvO,EAASwO,GAC9BptD,EAAUutD,WAAW3O,EAAS4O,GAC9BxtD,EAAU2tD,UAAU/O,EAASgP,GACtB5tD,EAAU+tD,aAAanP,EAChC,EACF,EApdA,GAAa,EAAA5+C,UAAS,CAqdvB,CAtdyC,GAAAN,MAAA,EAAAA,IAAG,IAsd5C,CAtd4B,GAAAD,eAAA,EAAAA,aAAY,IAsdxC,CAtdD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA0d5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CAwaX,QAlaE,YAAAC,OAAA,SAAO1qD,EAAWwqD,GAGhB,OAFAjqD,KAAKkqD,OAASzqD,EACdO,KAAKiqD,GAAKA,EACHjqD,IACT,EAOO,EAAAq6D,eAAP,SAAsBpQ,EAA4Br6C,GAChD,OAAQA,GAAO,IAAIuvC,GAASgL,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAClF,EAOO,EAAAqQ,2BAAP,SAAkCrQ,EAA4Br6C,GAE5D,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIuvC,GAASgL,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAClF,EAOA,YAAA9a,aAAA,SAAa92B,EAAezI,GAC1B,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAI3K,QACpCgpD,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,GAAYrY,KAAKiqD,IAC3F,IAClB,EAKA,YAAA5H,mBAAA,WACE,IAAI5a,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EAOA,YAAAoa,SAAA,SAASxpC,EAAezI,GACtB,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIsoD,WACpCjK,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,GAAYrY,KAAKiqD,IAC3F,IAClB,EAKA,YAAArI,eAAA,WACE,IAAIna,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EAOA,YAAArtB,MAAA,SAAM/B,EAAezI,GACnB,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIi0C,MACpCoK,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,GAAYrY,KAAKiqD,IAC3F,IAClB,EAKA,YAAAxH,YAAA,WACE,IAAIhb,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EAKA,YAAA8yB,aAAA,WACE,IAAI9yB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIsF,WAAWvvD,KAAKkqD,OAASziB,GAAU,CAC9D,EAOA,YAAA+yB,UAAA,SAAUniD,EAAezI,GACvB,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIokD,UACpC/F,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,GAAYrY,KAAKiqD,IAC3F,IAClB,EAKA,YAAAwQ,gBAAA,WACE,IAAIhzB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EASA,YAAA7mB,OAAA,SAAOvI,EAAe4zC,GACpB,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,EAAW4zC,GAAoB,IAC7G,EAKA,YAAAvK,aAAA,WACE,IAAIja,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EASA,YAAAH,QAAA,SAAQjvB,EAAe4zC,GACrB,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,EAAW4zC,GAAoB,IAC7G,EAKA,YAAA1J,cAAA,WACE,IAAI9a,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EAOA,YAAAizB,mBAAA,SAAmBriD,EAAezI,GAEhC,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIsrD,cACpCjN,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,GAAYrY,KAAKiqD,IAC3F,IAClB,EAKA,YAAA0Q,yBAAA,WACE,IAAIlzB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EAKO,EAAAmzB,WAAP,SAAkB5P,GAChBA,EAAQC,YAAY,EACtB,EAMO,EAAA4P,gBAAP,SAAuB7P,EAA8B8P,GACnD9P,EAAQG,eAAe,EAAG2P,EAAoB,EAChD,EAOO,EAAAC,yBAAP,SAAgC/P,EAA8BxpD,GAC5DwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQM,UAAU9pD,EAAK/B,IAEzB,OAAOurD,EAAQO,WACjB,EAMO,EAAAyP,wBAAP,SAA+BhQ,EAA8BS,GAC3DT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAwP,YAAP,SAAmBjQ,EAA8BkQ,GAC/ClQ,EAAQG,eAAe,EAAG+P,EAAgB,EAC5C,EAOO,EAAAC,qBAAP,SAA4BnQ,EAA8BxpD,GACxDwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQM,UAAU9pD,EAAK/B,IAEzB,OAAOurD,EAAQO,WACjB,EAMO,EAAA6P,oBAAP,SAA2BpQ,EAA8BS,GACvDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAA4P,SAAP,SAAgBrQ,EAA8BsQ,GAC5CtQ,EAAQG,eAAe,EAAGmQ,EAAa,EACzC,EAOO,EAAAC,kBAAP,SAAyBvQ,EAA8BxpD,GACrDwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQM,UAAU9pD,EAAK/B,IAEzB,OAAOurD,EAAQO,WACjB,EAMO,EAAAiQ,iBAAP,SAAwBxQ,EAA8BS,GACpDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAgQ,gBAAP,SAAuBzQ,EAA8BuP,GACnDvP,EAAQgD,cAAc,EAAGuM,EAAc,EACzC,EAMO,EAAAmB,aAAP,SAAoB1Q,EAA8B2Q,GAChD3Q,EAAQG,eAAe,EAAGwQ,EAAiB,EAC7C,EAOO,EAAAC,sBAAP,SAA6B5Q,EAA8BxpD,GACzDwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQM,UAAU9pD,EAAK/B,IAEzB,OAAOurD,EAAQO,WACjB,EAMO,EAAAsQ,qBAAP,SAA4B7Q,EAA8BS,GACxDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAmH,UAAP,SAAiB5H,EAA8B6H,GAC7C7H,EAAQG,eAAe,EAAG0H,EAAc,EAC1C,EAOO,EAAAC,mBAAP,SAA0B9H,EAA8BxpD,GACtDwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQM,UAAU9pD,EAAK/B,IAEzB,OAAOurD,EAAQO,WACjB,EAMO,EAAAwH,kBAAP,SAAyB/H,EAA8BS,GACrDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAuH,WAAP,SAAkBhI,EAA8BiI,GAC9CjI,EAAQG,eAAe,EAAG8H,EAAe,EAC3C,EAOO,EAAAC,oBAAP,SAA2BlI,EAA8BxpD,GACvDwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQM,UAAU9pD,EAAK/B,IAEzB,OAAOurD,EAAQO,WACjB,EAMO,EAAA4H,mBAAP,SAA0BnI,EAA8BS,GACtDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAqQ,sBAAP,SAA6B9Q,EAA8B+Q,GACzD/Q,EAAQG,eAAe,EAAG4Q,EAA0B,EACtD,EAOO,EAAAC,+BAAP,SAAsChR,EAA8BxpD,GAElEwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQM,UAAU9pD,EAAK/B,IAEzB,OAAOurD,EAAQO,WACjB,EAMO,EAAA0Q,8BAAP,SAAqCjR,EAA8BS,GACjET,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAyQ,SAAP,SAAgBlR,GAEd,OADaA,EAAQW,WAEvB,EAEO,EAAAwQ,YAAP,SACInR,EAA8B8P,EAAwCI,EACtEI,EAAiCf,EAAsBoB,EACvD9I,EAAkCI,EAClC8I,GAUF,OATA5c,EAAMyb,WAAW5P,GACjB7L,EAAM0b,gBAAgB7P,EAAS8P,GAC/B3b,EAAM8b,YAAYjQ,EAASkQ,GAC3B/b,EAAMkc,SAASrQ,EAASsQ,GACxBnc,EAAMsc,gBAAgBzQ,EAASuP,GAC/Bpb,EAAMuc,aAAa1Q,EAAS2Q,GAC5Bxc,EAAMyT,UAAU5H,EAAS6H,GACzB1T,EAAM6T,WAAWhI,EAASiI,GAC1B9T,EAAM2c,sBAAsB9Q,EAAS+Q,GAC9B5c,EAAM+c,SAASlR,EACxB,EACF,EA3aA,GAAa,EAAA7L,MAAK,CA4anB,CA7ayC,GAAArzC,MAAA,EAAAA,IAAG,IA6a5C,CA7a4B,GAAAD,eAAA,EAAAA,aAAY,IA6axC,CA7aD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAib5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CAoQX,QA9PE,YAAAC,OAAA,SAAO1qD,EAAWwqD,GAGhB,OAFAjqD,KAAKkqD,OAASzqD,EACdO,KAAKiqD,GAAKA,EACHjqD,IACT,EAOO,EAAAo8D,eAAP,SAAsBnS,EAA4Br6C,GAChD,OAAQA,GAAO,IAAIm5C,GAASoB,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAClF,EAOO,EAAAoS,2BAAP,SAAkCpS,EAA4Br6C,GAE5D,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIm5C,GAASoB,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAClF,EAKA,YAAA9B,UAAA,WACE,IAAI1gB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAI8C,UAAU/sD,KAAKkqD,OAASziB,GAAUznC,KAAKiqD,GAAI+C,WAAW,EAAG,EACpF,EAOA,YAAA3E,YAAA,SAAYhwC,EAAezI,GAEzB,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIqpD,eACpChL,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,GAAYrY,KAAKiqD,IAC3F,IAClB,EAKA,YAAApB,kBAAA,WACE,IAAIphB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EAQA,YAAA60B,aAAA,SAAarQ,GACX,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKkqD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAQA,YAAAsQ,gBAAA,SAAgBtQ,GACd,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKkqD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAQA,YAAA3D,OAAA,SAAO2D,GACL,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKkqD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAKA,YAAAuQ,aAAA,WACE,IAAI/0B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAI8C,UAAU/sD,KAAKkqD,OAASziB,GAAUznC,KAAKiqD,GAAI+C,WAAW,EAAG,EACpF,EAQA,YAAAoE,UAAA,SAAUnF,GACR,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKkqD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAMA,YAAA/c,MAAA,SAAMt/B,GACJ,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIqzC,OACpCgL,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKkqD,OAASziB,GAASznC,KAAKiqD,IAC5D,IAClB,EAQA,YAAAwS,eAAA,SAAexQ,GACb,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,IAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKkqD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAKO,EAAAyQ,WAAP,SAAkB1R,GAChBA,EAAQC,YAAY,EACtB,EAMO,EAAA0R,aAAP,SAAoB3R,EAA8B7C,GAChD6C,EAAQsC,cAAc,EAAGnF,EAAW6C,EAAQgC,WAAW,EAAG,GAC5D,EAMO,EAAA4P,eAAP,SAAsB5R,EAA8B6R,GAClD7R,EAAQG,eAAe,EAAG0R,EAAmB,EAC/C,EAOO,EAAAC,wBAAP,SAA+B9R,EAA8BxpD,GAC3DwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQM,UAAU9pD,EAAK/B,IAEzB,OAAOurD,EAAQO,WACjB,EAMO,EAAAwR,uBAAP,SAA8B/R,EAA8BS,GAC1DT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAuR,gBAAP,SAAuBhS,EAA8BiS,GACnDjS,EAAQG,eAAe,EAAG8R,EAAoB,EAChD,EAMO,EAAAC,mBAAP,SAA0BlS,EAA8BmS,GACtDnS,EAAQG,eAAe,EAAGgS,EAAuB,EACnD,EAMO,EAAAhL,UAAP,SAAiBnH,EAA8BoH,GAC7CpH,EAAQG,eAAe,EAAGiH,EAAc,EAC1C,EAMO,EAAAgL,gBAAP,SAAuBpS,EAA8BwR,GACnDxR,EAAQsC,cAAc,EAAGkP,EAAcxR,EAAQgC,WAAW,EAAG,GAC/D,EAMO,EAAAiF,aAAP,SAAoBjH,EAA8BkH,GAChDlH,EAAQG,eAAe,EAAG+G,EAAiB,EAC7C,EAMO,EAAAmL,SAAP,SAAgBrS,EAA8BsS,GAC5CtS,EAAQG,eAAe,EAAGmS,EAAa,EACzC,EAMO,EAAAC,kBAAP,SAAyBvS,EAA8BwS,GACrDxS,EAAQG,eAAe,EAAGqS,EAAsB,EAClD,EAMO,EAAAC,SAAP,SAAgBzS,GAEd,OADaA,EAAQW,WAEvB,EAEO,EAAA+R,YAAP,SACI1S,EAA8B7C,EAA6B0U,EAC3DI,EAAwCE,EACxC/K,EAAkCoK,EAAgCtK,EAClEoL,EAAiCE,GAWnC,OAVAzU,EAAM2T,WAAW1R,GACjBjC,EAAM4T,aAAa3R,EAAS7C,GAC5BY,EAAM6T,eAAe5R,EAAS6R,GAC9B9T,EAAMiU,gBAAgBhS,EAASiS,GAC/BlU,EAAMmU,mBAAmBlS,EAASmS,GAClCpU,EAAMoJ,UAAUnH,EAASoH,GACzBrJ,EAAMqU,gBAAgBpS,EAASwR,GAC/BzT,EAAMkJ,aAAajH,EAASkH,GAC5BnJ,EAAMsU,SAASrS,EAASsS,GACxBvU,EAAMwU,kBAAkBvS,EAASwS,GAC1BzU,EAAM0U,SAASzS,EACxB,EACF,EAvQA,GAAa,EAAAjC,MAAK,CAwQnB,CAzQyC,GAAAj9C,MAAA,EAAAA,IAAG,IAyQ5C,CAzQ4B,GAAAD,eAAA,EAAAA,aAAY,IAyQxC,CAzQD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA6Q5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CAiKX,QA3JE,YAAAC,OAAA,SAAO1qD,EAAWwqD,GAGhB,OAFAjqD,KAAKkqD,OAASzqD,EACdO,KAAKiqD,GAAKA,EACHjqD,IACT,EAOO,EAAA29D,2BAAP,SAAkC1T,EAA4Br6C,GAC5D,OAAQA,GAAO,IAAIguD,GAAqBzT,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAC9F,EAOO,EAAA4T,uCAAP,SAA8C5T,EAA4Br6C,GAGxE,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIguD,GAAqBzT,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAC9F,EAMA,YAAA6T,YAAA,SAAYzlD,GACV,IAAIovB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIsF,WAAWvvD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,GAAa,CAC7F,EAKA,YAAA0lD,kBAAA,WACE,IAAIt2B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EAKA,YAAAu2B,iBAAA,WACE,IAAIv2B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EACH,IAAIzmC,YACAhB,KAAKiqD,GAAI0H,QAAQ7uD,OAAQ9C,KAAKiqD,GAAI0H,QAAQjpD,WAAa1I,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GACvFznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,IACxC,IACN,EAMA,YAAAw2B,gBAAA,SAAgB5lD,GACd,IAAIovB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiU,WAAWl+D,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,GAC9DrY,KAAKiqD,GAAI+C,WAAW,EAAG,EACzC,EAKA,YAAAmR,sBAAA,WACE,IAAI12B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EAKO,EAAA22B,uBAAP,SAA8BpT,GAC5BA,EAAQC,YAAY,EACtB,EAMO,EAAAoT,eAAP,SAAsBrT,EAA8BsT,GAClDtT,EAAQG,eAAe,EAAGmT,EAAmB,EAC/C,EAOO,EAAAC,wBAAP,SAA+BvT,EAA8BxpD,GAC3DwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQ2I,SAASnyD,EAAK/B,IAExB,OAAOurD,EAAQO,WACjB,EAMO,EAAAiT,uBAAP,SAA8BxT,EAA8BS,GAC1DT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAgT,mBAAP,SAA0BzT,EAA8B0T,GACtD1T,EAAQG,eAAe,EAAGuT,EAAuB,EACnD,EAOO,EAAAC,4BAAP,SAAmC3T,EAA8BxpD,GAC/DwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQqL,SAAS70D,EAAK/B,IAExB,OAAOurD,EAAQO,WACjB,EAMO,EAAAqT,2BAAP,SAAkC5T,EAA8BS,GAC9DT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAoT,qBAAP,SAA4B7T,GAE1B,OADaA,EAAQW,WAEvB,EAEO,EAAAmT,wBAAP,SACI9T,EAA8BsT,EAC9BI,GAIF,OAHAd,EAAkBQ,uBAAuBpT,GACzC4S,EAAkBS,eAAerT,EAASsT,GAC1CV,EAAkBa,mBAAmBzT,EAAS0T,GACvCd,EAAkBiB,qBAAqB7T,EAChD,EACF,EApKA,GAAa,EAAA4S,kBAAiB,CAqK/B,CAtKyC,GAAA9xD,MAAA,EAAAA,IAAG,IAsK5C,CAtK4B,GAAAD,eAAA,EAAAA,aAAY,IAsKxC,CAtKD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA0K5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CA+FX,QAzFE,YAAAC,OAAA,SAAO1qD,EAAWwqD,GAGhB,OAFAjqD,KAAKkqD,OAASzqD,EACdO,KAAKiqD,GAAKA,EACHjqD,IACT,EAOO,EAAA++D,8BAAP,SAAqC9U,EAA4Br6C,GAC/D,OAAQA,GAAO,IAAIovD,GAAwB7U,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACjG,EAOO,EAAAgV,0CAAP,SAAiDhV,EAA4Br6C,GAG3E,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIovD,GAAwB7U,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACjG,EAQA,YAAAiV,QAAA,SAAQjT,GACN,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKkqD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAMA,YAAAkT,aAAA,SAAavvD,GACX,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIszD,cACpCjV,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKkqD,OAASziB,GAASznC,KAAKiqD,IAC5D,IAClB,EAKO,EAAAoV,0BAAP,SAAiCrU,GAC/BA,EAAQC,YAAY,EACtB,EAMO,EAAAqU,WAAP,SAAkBtU,EAA8BuU,GAC9CvU,EAAQG,eAAe,EAAGoU,EAAe,EAC3C,EAMO,EAAAC,gBAAP,SAAuBxU,EAA8ByU,GACnDzU,EAAQG,eAAe,EAAGsU,EAAoB,EAChD,EAMO,EAAAC,wBAAP,SAA+B1U,GAC7B,IAAIvjB,EAASujB,EAAQW,YAErB,OADAX,EAAQ2U,cAAcl4B,EAAQ,GACvBA,CACT,EAEO,EAAAm4B,2BAAP,SACI5U,EAA8BuU,EAC9BE,GAIF,OAHAT,EAAqBK,0BAA0BrU,GAC/CgU,EAAqBM,WAAWtU,EAASuU,GACzCP,EAAqBQ,gBAAgBxU,EAASyU,GACvCT,EAAqBU,wBAAwB1U,EACtD,EACF,EAlGA,GAAa,EAAAgU,qBAAoB,CAmGlC,CApGyC,GAAAlzD,MAAA,EAAAA,IAAG,IAoG5C,CApG4B,GAAAD,eAAA,EAAAA,aAAY,IAoGxC,CApGD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAwG5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CA6HX,QAvHE,YAAAC,OAAA,SAAO1qD,EAAWwqD,GAGhB,OAFAjqD,KAAKkqD,OAASzqD,EACdO,KAAKiqD,GAAKA,EACHjqD,IACT,EAOO,EAAA6/D,sBAAP,SAA6B5V,EAA4Br6C,GACvD,OAAQA,GAAO,IAAIwvD,GAAgBjV,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACzF,EAOO,EAAA6V,kCAAP,SAAyC7V,EAA4Br6C,GAEnE,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIwvD,GAAgBjV,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACzF,EAMA,YAAA8V,QAAA,SAAQnwD,GACN,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAI8xD,mBACpCzT,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKkqD,OAASziB,GAASznC,KAAKiqD,IAC5D,IAClB,EAOA,YAAA+V,sBAAA,SAAsB3nD,EAAezI,GAEnC,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIkzD,sBACpC7U,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKiqD,GAAIY,SAAS7qD,KAAKkqD,OAASziB,GAAkB,EAARpvB,GAAYrY,KAAKiqD,IAC3F,IAClB,EAKA,YAAAgW,4BAAA,WACE,IAAIx4B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIa,aAAa9qD,KAAKkqD,OAASziB,GAAU,CAChE,EAKO,EAAAy4B,kBAAP,SAAyBlV,GACvBA,EAAQC,YAAY,EACtB,EAMO,EAAAkV,WAAP,SAAkBnV,EAA8BoV,GAC9CpV,EAAQG,eAAe,EAAGiV,EAAe,EAC3C,EAMO,EAAAC,yBAAP,SAAgCrV,EAA8BsV,GAC5DtV,EAAQG,eAAe,EAAGmV,EAA6B,EACzD,EAOO,EAAAC,kCAAP,SAAyCvV,EAA8BxpD,GAErEwpD,EAAQK,YAAY,EAAG7pD,EAAK5B,OAAQ,GACpC,IAAK,IAAIH,EAAI+B,EAAK5B,OAAS,EAAGH,GAAK,EAAGA,IACpCurD,EAAQM,UAAU9pD,EAAK/B,IAEzB,OAAOurD,EAAQO,WACjB,EAMO,EAAAiV,iCAAP,SAAwCxV,EAA8BS,GACpET,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAgV,gBAAP,SAAuBzV,GAErB,OADaA,EAAQW,WAEvB,EAEO,EAAA+U,mBAAP,SACI1V,EAA8BoV,EAC9BE,GAIF,OAHAlB,EAAac,kBAAkBlV,GAC/BoU,EAAae,WAAWnV,EAASoV,GACjChB,EAAaiB,yBAAyBrV,EAASsV,GACxClB,EAAaqB,gBAAgBzV,EACtC,EACF,EAhIA,GAAa,EAAAoU,aAAY,CAiI1B,CAlIyC,GAAAtzD,MAAA,EAAAA,IAAG,IAkI5C,CAlI4B,GAAAD,eAAA,EAAAA,aAAY,IAkIxC,CAlID,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAsI5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CAyIX,QAnIE,YAAAC,OAAA,SAAO1qD,EAAWwqD,GAGhB,OAFAjqD,KAAKkqD,OAASzqD,EACdO,KAAKiqD,GAAKA,EACHjqD,IACT,EAOO,EAAA2oD,0BAAP,SAAiCsB,EAA4Br6C,GAC3D,OAAQA,GAAO,IAAIzI,GAAoBgjD,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAC7F,EAOO,EAAA0W,sCAAP,SAA6C1W,EAA4Br6C,GAEvE,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIzI,GAAoBgjD,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAC7F,EAMO,EAAA2W,oBAAP,SAA2B3W,GACzB,OAAOA,EAAG4W,iBAAiB,OAC7B,EAQA,YAAAC,WAAA,SAAW7U,GACT,IAAIxkB,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,EAASznC,KAAKiqD,GAAIiC,SAASlsD,KAAKkqD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAMA,YAAArD,MAAA,SAAMh5C,GACJ,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIi9C,OACpCoB,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKkqD,OAASziB,GAASznC,KAAKiqD,IAC5D,IAClB,EAMA,YAAAkV,aAAA,SAAavvD,GACX,IAAI63B,EAASznC,KAAKiqD,GAAIS,SAAS1qD,KAAKkqD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIszD,cACpCjV,OAAOnqD,KAAKiqD,GAAIW,WAAW5qD,KAAKkqD,OAASziB,GAASznC,KAAKiqD,IAC5D,IAClB,EAKO,EAAA8W,sBAAP,SAA6B/V,GAC3BA,EAAQC,YAAY,EACtB,EAMO,EAAA+V,cAAP,SAAqBhW,EAA8BiW,GACjDjW,EAAQG,eAAe,EAAG8V,EAAkB,EAC9C,EAMO,EAAAC,SAAP,SAAgBlW,EAA8BmW,GAC5CnW,EAAQG,eAAe,EAAGgW,EAAa,EACzC,EAMO,EAAA3B,gBAAP,SAAuBxU,EAA8ByU,GACnDzU,EAAQG,eAAe,EAAGsU,EAAoB,EAChD,EAMO,EAAA2B,oBAAP,SAA2BpW,GAEzB,OADaA,EAAQW,WAEvB,EAMO,EAAA0V,6BAAP,SAAoCrW,EAA8BvjB,GAChEujB,EAAQvR,OAAOhS,EAAQ,OACzB,EAMO,EAAA65B,yCAAP,SAAgDtW,EAA8BvjB,GAC5EujB,EAAQvR,OAAOhS,EAAQ,QAAQ,EACjC,EAEO,EAAA85B,uBAAP,SACIvW,EAA8BiW,EAAsCE,EACpE1B,GAKF,OAJAt4D,EAAiB45D,sBAAsB/V,GACvC7jD,EAAiB65D,cAAchW,EAASiW,GACxC95D,EAAiB+5D,SAASlW,EAASmW,GACnCh6D,EAAiBq4D,gBAAgBxU,EAASyU,GACnCt4D,EAAiBi6D,oBAAoBpW,EAC9C,EACF,EA5IA,GAAa,EAAA7jD,iBAAgB,CA6I9B,CA9IyC,GAAA2E,MAAA,EAAAA,IAAG,IA8I5C,CA9I4B,GAAAD,eAAA,EAAAA,aAAY,IA8IxC,CA9ID,CAAiB,EAAAD,cAAA,EAAAA,YAAW,I,ugDCxoH5B,cAGA,UAEA,aACE,WAAoB9B,GAAA,KAAAA,QAAAA,EAClB9J,KAAK+H,WAAa/H,KAAK8J,QAAQ/B,WAC/B/H,KAAKyH,YAAczH,KAAK8J,QAAQrC,WAClC,CAgCF,OA9BQ,YAAAsI,QAAN,W,oFAGM,YAAA9H,IAAN,SACIX,EAAiCk6D,EACjCC,G,wGAEF,IAAW,KADLC,EAAW,IAAIlhE,IACF8G,EACbM,OAAOQ,eAAeC,KAAKf,EAAO,KAC9Bq6D,EAAOr6D,EAAM,GACnBo6D,EAAS3/D,IACL,EACA,IAAI,SACA4/D,EAAKlgE,KAAMkgE,EAAKpgE,UAA+BhC,OAAWA,EAC1DoiE,EAAKngE,QAGC,SAAMxB,KAAK8J,QAAQ7B,IAAIy5D,I,OAKzC,OALME,EAAY,SACZhvD,EAAoC,CAAC,EAC3CgvD,EAAUptD,SAAQ,SAACoN,EAAQ5iB,GACzB4T,EAAO5T,GAAQ,IAAI,EAAAmC,OAAOygB,EAAOrgB,KAAMqgB,EAAOpgB,KAAMogB,EAAOngB,KAC7D,IACO,CAAP,EAAOmR,G,QAET,YAAAjJ,eAAA,WACE3J,KAAK8J,QAAQH,gBACf,EACA,YAAAC,aAAA,WACE5J,KAAK8J,QAAQF,cACf,EACF,EApCA,GAAa,EAAAK,qBAAAA,C,0/CCLb,cACA,UAEA,UACA,UAEA,UACA,UAiBA,aACE,WAAY+nC,QAAA,IAAAA,IAAAA,EAAA,IACVhyC,KAAK6hE,cAAe,EACpB7hE,KAAK0P,YAAcsiC,EAAOtiC,YAC1B1P,KAAKqrC,SAAW,EAAAqc,SAAShB,OAAO1U,EAAO3G,UACvCrrC,KAAK6F,QAAU,CAACwlC,SAAUrrC,KAAKqrC,SAAUy2B,gBAAiB,GAAIC,eAAgB,GAChF,CAgOF,OA9NE,sBAAI,yBAAU,C,IAAd,WACE,OAAO/hE,KAAKgiE,OAAO9yB,MAAMqR,eAC3B,E,gCACA,sBAAI,0BAAW,C,IAAf,WACE,OAAOvgD,KAAKgiE,OAAO9yB,MAAMwR,gBAC3B,E,gCAEA,YAAA/2C,eAAA,WACE3J,KAAKqrC,SAASjL,OAChB,EAEA,YAAAx2B,aAAA,WACE5J,KAAKqrC,SAASyb,MAChB,EAKM,YAAA98C,UAAN,SAAgBi4D,EAAoCv5D,EAAqB9I,G,qGACvE,SAAMI,KAAKqrC,SAASK,MAAM,UAAW,qBAAqB,gD,8DAExC,UAAM,IAAAhiC,gBAAe1J,KAAK0P,c,cAApCzQ,EAAU,SAChBe,KAAKg+C,eAAiB/+C,EAAQG,qBAAqBY,KAAK6F,SAExD7F,KAAKgiE,OAAS,IAAI,EAAAjZ,MACC,iBAARkZ,EAAP,OACIna,EAAcma,EAAI7Y,SAAS,QACZ,oBAAV8Y,MAAP,MAEU,IAAM,IAAAC,WAAU,EAAAC,SAAV,CAAoBH,K,cAAhCpa,EAAM,SACZ7nD,KAAK8P,WAAW+3C,EAAKC,G,aAGJ,SAAMoa,MAAMD,I,OACjB,SADK,SACUI,e,OAArBxa,EAAM,SACZ7nD,KAAK8P,WAAW,IAAIpP,WAAWmnD,GAAMC,G,oCAE7Bt/C,YAAY85D,OAAOL,GAM7BjiE,KAAK8P,WAAWmyD,IAJV/zD,EAAM,IAAIxN,WAAWuhE,EAAKv5D,GAAc,EAAG9I,GAAUqiE,EAAIt5D,YAC/D3I,KAAK8P,WAAW5B,I,oDArBpB,S,YA6BM,YAAA4B,WAAR,SAAmByyD,EAA4Bza,GAA/C,WACE,GAAI9nD,KAAK6hE,aACP,MAAM,IAAIriE,MAAM,uBAGlBQ,KAAKqrC,SAASK,MAAM,UAAW,sBAAsB,WAEnD,IAAMwU,EACF,EAAKlC,eAAeoC,eAAiB,EAAKpC,oBAAsCz+C,EACpF,EAAKyiE,OAAOpa,KAAK2a,EAAgBriB,EAAkB4H,GAG/C,EAAK9J,eAAe/O,oBACtB,EAAK+O,eAAe/O,mBAAmB,EAAK+yB,OAAO9yB,OAGrD,EAAKszB,cAAc,EAAKR,OAAO9yB,OAG/B,EAAKuzB,eAAiB,IAAI,EAAAvjB,cAAc,EAAK8iB,OAAO9yB,MAAO,EAAKsO,KAAM,EAAKnS,SAC7E,IAEArrC,KAAK6hE,cAAe,CACtB,EAEM,YAAA55D,IAAN,SAAU2Y,G,8EACR,IAAK5gB,KAAK6hE,aACR,MAAM,IAAIriE,MAAM,+BAGlB,MAAO,CAAP,EAAOQ,KAAKqrC,SAASK,MAAM,UAAW,eAAe,gD,0DAG7B,OAFhB+S,EAAez+C,KAAK0iE,2BAA2B9hD,GAE/B,GAAM5gB,KAAKyiE,eAAe1kB,QAAQ/9C,KAAKg+C,eAAgBS,I,OAE7E,OAFMkkB,EAAgB,SAEf,CAAP,EAAO3iE,KAAK4iE,aAAaD,I,kBAIrB,YAAAD,2BAAR,SAAmC9hD,GACjC,IAAMiiD,EAAkB7iE,KAAKgiE,OAAO9yB,MAAMqR,gBAI1C,GAAIt+C,MAAMC,QAAQ0e,IAChB,GAAIA,EAAOhhB,SAAWijE,EAAgBjjE,OACpC,MAAM,IAAIJ,MAAM,iDAA0CqjE,EAAgBjjE,OAAM,oBAAYghB,EAAOhhB,aAKlG,CACH,GAAIghB,EAAOre,OAASsgE,EAAgBjjE,OAClC,MAAM,IAAIJ,MAAM,6CAAsCqjE,EAAgBjjE,OAAM,oBAAYghB,EAAOre,OAKjG,IAFA,IAAMugE,EAAe,IAAI7gE,MAAc2e,EAAOre,MAC1CwgE,EAAoB,EACftjE,EAAI,EAAGA,EAAIojE,EAAgBjjE,SAAUH,EAAG,CAC/C,IAAMmiB,EAAShB,EAAOxe,IAAIygE,EAAgBpjE,IAC1C,IAAKmiB,EACH,MAAM,IAAIpiB,MAAM,qCAA8BR,KAAI,MAEpD8jE,EAAaC,KAAuBnhD,C,CAGtChB,EAASkiD,C,CAKX,GAAK9iE,KAAK6F,QAAQi8D,iBAA2D,IAAxC9hE,KAAK6F,QAAQi8D,gBAAgBliE,QAAiBI,KAAK6F,QAAQk8D,gBACrD,IAAvC/hE,KAAK6F,QAAQk8D,eAAeniE,OAqB9BI,KAAKgjE,wBAAwBhjE,KAAK6F,QAAQk8D,eAAgBnhD,GAAQ,OArBtB,CAC5C,IAAMqiD,EAAoBjjE,KAAKgiE,OAAO9yB,MAAM4O,kBACtColB,EAAcljE,KAAKgiE,OAAO9yB,MAAME,YAEhC2yB,EAAiB,IAAI9/D,MAAyBghE,EAAkBrjE,QAEtE,IAASH,EAAI,EAAGA,EAAIwjE,EAAkBrjE,SAAUH,EAAG,CACjD,IAAM0jE,EAAaD,EAAYD,EAAkBxjE,IACjDsiE,EAAetiE,GAAK0jE,EAAW5hE,KAAM6R,MAAM3R,KAI3CzB,KAAK6F,QAAQi8D,gBAAiBjiE,KAAKsjE,EAAW5hE,KAAMo+C,YACpD3/C,KAAK6F,QAAQk8D,eAAgBliE,KAAK+gB,EAAOnhB,GAAGgC,K,CAG9CzB,KAAKgjE,wBAAwBjB,EAAgBnhD,GAAQ,E,CAWvD,OAFA5gB,KAAKojE,yBAAyBpjE,KAAK6F,QAAQi8D,gBAAkBlhD,GAEtDA,CACT,EAEQ,YAAAwiD,yBAAR,SAAiCtB,EAAoCuB,GACnE,IAAK,IAAI5jE,EAAI,EAAGA,EAAI4jE,EAAYzjE,OAAQH,IAAK,CAC3C,IAAM6jE,EAAexB,EAAgBriE,GAC/B8jE,EAAaF,EAAY5jE,GAAG8B,KAClC,GAAI+hE,IAAiBC,EACnB,MAAM,IAAI/jE,MAAM,uBAAgBC,EAAC,0CAAkC6jE,EAAY,qBAAaC,G,CAGlG,EAEQ,YAAAP,wBAAR,SACIjB,EAA0CsB,EAAuBG,GACnE,IAAK,IAAI/jE,EAAI,EAAGA,EAAI4jE,EAAYzjE,OAAQH,IAAK,CAC3C,IAAMgkE,EAAe1B,EAAetiE,GAC9BikE,EAAaL,EAAY5jE,GAAGgC,KAClC,IAAKzB,KAAK2jE,kBAAkBF,EAAcC,EAAYF,GACpD,MAAM,IAAIhkE,MAAM,uBAAgBC,EAAC,4CAAoCgkE,EAAah6D,KAAK,KAAI,uBACvFi6D,EAAWj6D,KAAK,KAAI,K,CAG9B,EAEQ,YAAAk6D,kBAAR,SAA0BF,EAAiCC,EAA+BF,GAExF,GAAIC,EAAa7jE,SAAW8jE,EAAW9jE,OACrC,OAAO,EAGT,IAAK,IAAIH,EAAI,EAAGA,EAAIgkE,EAAa7jE,SAAUH,EACzC,GAAIgkE,EAAahkE,KAAOikE,EAAWjkE,MAAQ+jE,GAAwC,IAApBC,EAAahkE,IAE1E,OAAO,EAIX,OAAO,CACT,EAEQ,YAAAmjE,aAAR,SAAqBD,GACnB,IAAMiB,EAAmB5jE,KAAKgiE,OAAO9yB,MAAMwR,iBAC3C,GAAIiiB,EAAc/iE,SAAWgkE,EAAiBhkE,OAC5C,MAAM,IAAIJ,MAAM,uEAIlB,IADA,IAAMoT,EAAS,IAAIpS,IACVf,EAAI,EAAGA,EAAImkE,EAAiBhkE,SAAUH,EAC7CmT,EAAO7Q,IAAI6hE,EAAiBnkE,GAAIkjE,EAAcljE,IAGhD,OAAOmT,CACT,EAEQ,YAAA4vD,cAAR,SAAsBtzB,GACpB,IAAM90B,EAAQ80B,EAAMqO,WACpBv9C,KAAKw9C,KAAO,IAAIv7C,MAAMmY,EAAMxa,QAE5B,IAAK,IAAIH,EAAI,EAAGA,EAAI2a,EAAMxa,OAAQH,IAChCO,KAAKw9C,KAAK/9C,GAAKO,KAAKg+C,eAAer4C,QAAQyU,EAAM3a,GAAIO,KAAKgiE,OAAO1yB,OAAQJ,EAE7E,EAaF,EAtOA,GAAa,EAAAnlC,QAAAA,C,ykDCxBb,cACA,aACA,UAEA,UACA,UAEO4B,EAAS,EAAAC,YAAYC,aAAaC,IAiCzC,aA+GE,WAIoBrK,EAIAF,EAA+BsiE,EACvCC,EAA+C3zD,EAIvC8R,QAAA,IAAAA,IAAAA,EAAe,EAAA8hD,KAAKrd,UATpB,KAAAjlD,KAAAA,EAIA,KAAAF,KAAAA,EAA+B,KAAAsiE,aAAAA,EACvC,KAAAC,kBAAAA,EAA+C,KAAA3zD,MAAAA,EAIvC,KAAA8R,OAAAA,EAClBjiB,KAAKuC,KAAO,EAAA4T,UAAU6tD,wBAAwBviE,GAC9C,IAAMc,EAAOvC,KAAKuC,KACZ0hE,OAA0B1kE,IAAjBskE,QAAoDtkE,IAAtBukE,QAA6CvkE,IAAV4Q,EAEhF,QAAc5Q,IAAV4Q,GACEA,EAAMvQ,SAAW2C,EACnB,MAAM,IAAII,WAAW,yCAIzB,GAAa,WAATpB,EAAmB,CACrB,UAAchC,IAAV4Q,GAAyBlO,MAAMC,QAAQiO,IAAWA,EAAMyzB,OAAM,SAAAnkC,GAAK,MAAa,iBAANA,CAAP,KACrE,MAAM,IAAIJ,UAAU,kCAGlB4kE,IACFjkE,KAAKmQ,MAAQ,IAAIlO,MAAcM,G,KAE5B,CACL,QAAchD,IAAV4Q,EAAqB,CACvB,IAAMpQ,EAAcmkE,EAAoB3iE,GACxC,KAAM4O,aAAiBpQ,GACrB,MAAM,IAAIV,UAAU,+BAAwBU,EAAYf,M,CAI5D,GAAIilE,EAAO,CACT,IAAMpc,EAAM,IAAIr/C,YAAYjG,EA2JpC,SAAgBhB,GACd,OAAQA,GACN,IAAK,OACL,IAAK,OACL,IAAK,QACH,OAAO,EACT,IAAK,QACL,IAAK,SACH,OAAO,EACT,IAAK,QACL,IAAK,SACL,IAAK,UACH,OAAO,EACT,IAAK,UACH,OAAO,EACT,QACE,MAAM,IAAI/B,MAAM,4CAAqC+B,IAE3D,CA7K2C4iE,CAAO5iE,IAC1CvB,KAAKmQ,MAoMb,SAAoBi0D,EAAyB7iE,GAC3C,OAAO,IAAK2iE,EAAoB3iE,GAAzB,CAAgC6iE,EACzC,CAtMqBC,CAAWxc,EAAKtmD,E,EAGnC,CAqJF,OA7SE,sBAAI,mBAAI,C,IAAR,WACE,QAAmBhC,IAAfS,KAAKmQ,MAAqB,CAC5B,IAAM3O,EAAOxB,KAAK6jE,aAAc7jE,KAAKiiB,QACrC,GAAIzgB,EAAK5B,SAAWI,KAAKuC,KACvB,MAAM,IAAI/C,MAAM,8FAElBQ,KAAKmQ,MAAQ3O,C,CAEf,OAAOxB,KAAKmQ,KACd,E,gCAKA,sBAAI,yBAAU,C,IAAd,WACE,GAAkB,WAAdnQ,KAAKuB,KACP,MAAM,IAAIlC,UAAU,2BAGtB,OAAOW,KAAKwB,IACd,E,gCAMA,sBAAI,0BAAW,C,IAAf,WACE,OAAQxB,KAAKuB,MACX,IAAK,QACL,IAAK,OACL,IAAK,SACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,OACH,OAAOvB,KAAKwB,KAEd,QACE,MAAM,IAAInC,UAAU,8EAE1B,E,gCAKA,sBAAI,wBAAS,C,IAAb,WACE,OAAQW,KAAKuB,MACX,IAAK,UACL,IAAK,UACH,OAAOvB,KAAKwB,KAEd,QACE,MAAM,IAAInC,UAAU,6CAE1B,E,gCAMA,sBAAI,yBAAU,C,IAAd,WACE,GAAkB,WAAdW,KAAKuB,KACP,OAAOvB,KAAKwB,KAEd,MAAM,IAAInC,UAAU,qCACtB,E,gCAKA,YAAA+C,IAAA,SAAIm1D,GACF,OAAOv3D,KAAKwB,KAAK,EAAA2U,UAAU0I,gBAAgB04C,EAASv3D,KAAKiU,SAC3D,EAKA,YAAAlS,IAAA,SAAIw1D,EAA4Bj3D,GAC9BN,KAAKwB,KAAK,EAAA2U,UAAU0I,gBAAgB04C,EAASv3D,KAAKiU,UAAY3T,CAChE,EAKM,YAAA2+C,QAAN,W,4GACqB1/C,IAAfS,KAAKmQ,MAAL,OACF,EAAAnQ,KAAa,GAAMA,KAAK8jE,kBAAmB9jE,KAAKiiB,U,OAAhD,EAAK9R,MAAQ,S,iBAEf,MAAO,CAAP,EAAOnQ,KAAKmQ,O,QAYd,sBAAI,sBAAO,C,IAAX,WAIE,OAHKnQ,KAAKskE,WACRtkE,KAAKskE,SAAW,EAAAnuD,UAAU0N,eAAe7jB,KAAKyB,OAEzCzB,KAAKskE,QACd,E,gCAqDO,EAAAj2D,UAAP,SAAiBk2D,GACf,IAAKA,EACH,MAAM,IAAI/kE,MAAM,+CAElB,IAAM+B,EAAO,EAAAgtB,UAAUC,wBAAwB+1C,EAAYrhD,UAGrD5iB,EAAQ,IAAIa,EAFL,EAAAotB,UAAU+yB,oBAAoBijB,EAAY9iE,MAExBF,GAE/B,GAAa,WAATA,EAGFgjE,EAAYxO,WAAYvhD,SAAQ,SAACgwD,EAAK/kE,GACpCa,EAAMkB,KAAK/B,IAAK,IAAA+O,kBAAiBg2D,EACnC,SAEK,GACHD,EAAY3O,SAAqD,iBAAnC2O,EAAY3O,QAAQjtD,YAClD47D,EAAY3O,QAAQjtD,WAAa,EAAG,CAItC,IAAM87D,EAAWnkE,EAAMkB,KACjBkjE,EACF,IAAIC,SAASJ,EAAY3O,QAAQ9yD,OAAQyhE,EAAY3O,QAAQltD,WAAY67D,EAAY3O,QAAQjtD,YAC3Fi8D,EAAcC,EAAYN,EAAYrhD,UACtC,EAASqhD,EAAY3O,QAAQjtD,WAAai8D,EAEhD,GAAIL,EAAY3O,QAAQjtD,WAAai8D,GAAgB,EACnD,MAAM,IAAIplE,MAAM,yBAElB,GAAIilE,EAAS7kE,SAAW,EACtB,MAAM,IAAIJ,MAAM,0BAGlB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAQA,IAAK,CAC/B,IAAM43C,EAAIytB,EAAUJ,EAAYH,EAAYrhD,SAAWzjB,EAAImlE,GAC3DH,EAAShlE,GAAK43C,C,MAEX,CAEL,IAAIvV,OAAK,EACT,OAAQyiC,EAAYrhD,UAClB,KAAK,EAAAhX,KAAK64D,YAAYC,SAAS73D,MAC7B20B,EAAQyiC,EAAY3lC,UACpB,MACF,KAAK,EAAA1yB,KAAK64D,YAAYC,SAASC,MAC/B,KAAK,EAAA/4D,KAAK64D,YAAYC,SAASE,MAC/B,KAAK,EAAAh5D,KAAK64D,YAAYC,SAASG,OAC/B,KAAK,EAAAj5D,KAAK64D,YAAYC,SAASI,KAC/B,KAAK,EAAAl5D,KAAK64D,YAAYC,SAASK,MAC/B,KAAK,EAAAn5D,KAAK64D,YAAYC,SAASM,KAC7BxjC,EAAQyiC,EAAYgB,UACpB,MACF,KAAK,EAAAr5D,KAAK64D,YAAYC,SAASQ,MAC7B1jC,EAAQyiC,EAAYkB,UACpB,MACF,KAAK,EAAAv5D,KAAK64D,YAAYC,SAASU,OAC7B5jC,EAAQyiC,EAAYoB,WACpB,MACF,KAAK,EAAAz5D,KAAK64D,YAAYC,SAASY,OAC/B,KAAK,EAAA15D,KAAK64D,YAAYC,SAASa,OAC7B/jC,EAAQyiC,EAAYuB,WACpB,MACF,QAEE,MAAM,IAAItmE,MAAM,oBAGpB,GAAIsiC,QACF,MAAM,IAAItiC,MAAM,oDAGlB,IAAMgC,EAAOlB,EAAMkB,KACnB,GAAIA,EAAK5B,SAAWkiC,EAAMliC,OACxB,MAAM,IAAIJ,MAAM,yBAGlB,IAASC,EAAI,EAAGA,EAAIqiC,EAAMliC,OAAQH,IAAK,CACrC,IAAMsmE,EAAUjkC,EAAMriC,GAClB,UAAKuO,OAAO+3D,GACdvkE,EAAK/B,GAAKwO,EAAa83D,EAASxB,EAAYrhD,UAE5C1hB,EAAK/B,GAAKsmE,C,EAKhB,OAAOzlE,CACT,EASO,EAAA0lE,SAAP,SAAgBxkE,EAA2CC,EAAyBF,GAClF,OAAO,IAAIJ,EAAOM,EAAMF,OAAMhC,OAAWA,EAAWiC,EACtD,EAEO,EAAA8M,cAAP,SAAqB23D,GACnB,IAAKA,EACH,MAAM,IAAIzmE,MAAM,+CAElB,IAAMiC,EAAO,EAAA8sB,UAAU+zB,wBAAwB2jB,GACzC1kE,EAAO,EAAAgtB,UAAUC,wBAAwBy3C,EAAU/iD,YAEnD5iB,EAAQ,IAAIa,EAAOM,EAAMF,GAE/B,GAAa,WAATA,EAGF,IAAK,IAAI9B,EAAI,EAAGA,EAAIwmE,EAAUjQ,mBAAoBv2D,IAChDa,EAAMkB,KAAK/B,GAAKwmE,EAAUlQ,WAAWt2D,QAGlC,GACHwmE,EAAUnQ,gBAAuD,iBAA9BmQ,EAAUpQ,iBAAgCoQ,EAAUpQ,gBAAkB,EAAG,CAI9G,IAAM4O,EAAWnkE,EAAMkB,KACjBkjE,EAAa,IAAIC,SACnBsB,EAAUnQ,eAAgBhzD,OAAQmjE,EAAUnQ,eAAgBptD,WAAYu9D,EAAUpQ,iBAChF+O,EAAcC,EAAYoB,EAAU/iD,YACpC,EAAS+iD,EAAUpQ,gBAAkB+O,EAE3C,GAAIqB,EAAUpQ,gBAAkB+O,GAAgB,EAC9C,MAAM,IAAIplE,MAAM,yBAElB,GAAIilE,EAAS7kE,SAAW,EACtB,MAAM,IAAIJ,MAAM,0BAGlB,IAASC,EAAI,EAAGA,EAAI,EAAQA,IAAK,CAC/B,IAAM43C,EAAIytB,EAAUJ,EAAYuB,EAAU/iD,WAAYzjB,EAAImlE,GAC1DH,EAAShlE,GAAK43C,C,EAGlB,OAAO/2C,CACT,EACF,EAjTA,GAuUA,SAASukE,EAAYtjE,GACnB,OAAQA,GACN,KAAK,EAAA2K,KAAK64D,YAAYC,SAASK,MAC/B,KAAK,EAAAn5D,KAAK64D,YAAYC,SAASI,KAC/B,KAAK,EAAAl5D,KAAK64D,YAAYC,SAASM,KAC7B,OAAO,EACT,KAAK,EAAAp5D,KAAK64D,YAAYC,SAASG,OAC/B,KAAK,EAAAj5D,KAAK64D,YAAYC,SAASE,MAC7B,OAAO,EACT,KAAK,EAAAh5D,KAAK64D,YAAYC,SAAS73D,MAC/B,KAAK,EAAAjB,KAAK64D,YAAYC,SAASC,MAC/B,KAAK,EAAA/4D,KAAK64D,YAAYC,SAASY,OAC7B,OAAO,EACT,KAAK,EAAA15D,KAAK64D,YAAYC,SAASQ,MAC/B,KAAK,EAAAt5D,KAAK64D,YAAYC,SAASU,OAC/B,KAAK,EAAAx5D,KAAK64D,YAAYC,SAASa,OAC7B,OAAO,EACT,QACE,MAAM,IAAIrmE,MAAM,4CAAqC,EAAA0M,KAAK64D,YAAYC,SAASzjE,KAErF,CAMA,SAAS2iE,EAAoB3iE,GAC3B,OAAQA,GACN,IAAK,OACL,IAAK,QACH,OAAOb,WACT,IAAK,OACH,OAAOC,UACT,IAAK,QACH,OAAOE,WACT,IAAK,SACH,OAAOD,YACT,IAAK,QACH,OAAOE,WACT,IAAK,SACH,OAAOE,YACT,IAAK,UACH,OAAOP,aACT,IAAK,UACH,OAAOM,aACT,QAEE,MAAM,IAAIvB,MAAM,qBAEtB,CAGA,SAASyO,EAAaxO,EAAS8B,GAE7B,GAAIA,IAAS,EAAA2K,KAAK64D,YAAYC,SAASQ,OAASjkE,IAASoK,EAAOo+C,eAAeyb,OAC7E,GAAI/lE,EAAEymE,mBAAmB,aAAezmE,EAAE0mE,UAAU,YAClD,MAAM,IAAI9mE,UAAU,8BAEjB,IACHkC,IAAS,EAAA2K,KAAK64D,YAAYC,SAASY,QAAUrkE,IAASoK,EAAOo+C,eAAe6b,QAC5ErkE,IAAS,EAAA2K,KAAK64D,YAAYC,SAASa,QAAUtkE,IAASoK,EAAOo+C,eAAe8b,OAK9E,MAAM,IAAIxmE,UAAU,2BAAoB,EAAA6M,KAAK64D,YAAYC,SAASzjE,KAJlE,GAAI9B,EAAEymE,mBAAmB,aAAezmE,EAAE0mE,SAAS,GACjD,MAAM,IAAI9mE,UAAU,0B,CAMxB,OAAOI,EAAE2mE,UACX,CAGA,SAAStB,EAAUuB,EAAgB9kE,EAAuDmH,GACxF,OAAQnH,GACN,KAAK,EAAA2K,KAAK64D,YAAYC,SAASM,KAC/B,KAAK,EAAAp5D,KAAK64D,YAAYC,SAASK,MAC7B,OAAOgB,EAAKC,SAAS59D,GACvB,KAAK,EAAAwD,KAAK64D,YAAYC,SAASI,KAC7B,OAAOiB,EAAKE,QAAQ79D,GACtB,KAAK,EAAAwD,KAAK64D,YAAYC,SAASG,OAC7B,OAAOkB,EAAKG,UAAU99D,GAAY,GACpC,KAAK,EAAAwD,KAAK64D,YAAYC,SAASE,MAC7B,OAAOmB,EAAKI,SAAS/9D,GAAY,GACnC,KAAK,EAAAwD,KAAK64D,YAAYC,SAAS73D,MAC7B,OAAOk5D,EAAKK,WAAWh+D,GAAY,GACrC,KAAK,EAAAwD,KAAK64D,YAAYC,SAASC,MAC7B,OAAOoB,EAAKM,SAASj+D,GAAY,GACnC,KAAK,EAAAwD,KAAK64D,YAAYC,SAASY,OAC7B,OAAOS,EAAKO,UAAUl+D,GAAY,GACpC,KAAK,EAAAwD,KAAK64D,YAAYC,SAASQ,MAC7B,OAAOv3D,EACH,UAAK44D,SAASR,EAAKO,UAAUl+D,GAAY,GAAO29D,EAAKO,UAAUl+D,EAAa,GAAG,IAAO,GAAQnH,GACpG,KAAK,EAAA2K,KAAK64D,YAAYC,SAASU,OAC7B,OAAOW,EAAKS,WAAWp+D,GAAY,GACrC,KAAK,EAAAwD,KAAK64D,YAAYC,SAASa,OAC7B,OAAO53D,EACH,UAAK44D,SAASR,EAAKO,UAAUl+D,GAAY,GAAO29D,EAAKO,UAAUl+D,EAAa,GAAG,IAAO,GAAOnH,GACnG,QACE,MAAM,IAAI/B,MAAM,6CAAsC,EAAA0M,KAAK64D,YAAYC,SAASzjE,KAEtF,CA3aa,EAAAJ,OAAAA,C,+/BCxCb,cACA,aACA,UAIA,UAMA,4BAAiCyf,G,IAAkB,wDACjD,IAAKA,GAAUA,EAAOhhB,SAAWmnE,EAAmBnnE,OAClD,OAAO,EAET,IAAK,IAAIH,EAAI,EAAGA,EAAImhB,EAAOhhB,OAAQH,IACjC,IAAKmhB,EAAOnhB,GAAGgC,MAAQmf,EAAOnhB,GAAGgC,KAAK7B,SAAWmnE,EAAmBtnE,GAClE,OAAO,EAGX,OAAO,CACT,EAGA,kBAAuBunE,EAAeC,GACpC,IAAKD,EACH,MAAM,IAAIxnE,MAAqB,iBAARynE,EAAmBA,EAAMA,IAEpD,EAEA,8BAsBA,QAfS,EAAAxzD,YAAP,SACIyzD,EAEAC,GAEF,GAAID,EAAGtnE,SAAWunE,EAAGvnE,OACnB,OAAO,EAET,IAAK,IAAIH,EAAI,EAAGA,EAAIynE,EAAGtnE,OAAQH,IAC7B,GAAIynE,EAAGznE,KAAO0nE,EAAG1nE,GACf,OAAO,EAGX,OAAO,CACT,EACF,EAtBA,GAAa,EAAA+T,UAAAA,EAwBb,8BAkDA,QA3CS,EAAA4zD,sBAAP,SAA6BC,EAA0BC,GAYrD,MAAO,CAPqB,IAAjBD,EAAMznE,OAAgB,CAAC,EAAGynE,EAAM,IAAMA,EAKrB,IAAjBC,EAAM1nE,OAAgB,CAAC0nE,EAAM,GAAI,GAAKA,EAGnD,EASO,EAAAC,uBAAP,SAA8Bz5C,EAAuBI,EAAeC,GAEpD,IAAVD,GAEFJ,EAAYnuB,OAAOmuB,EAAYluB,OAAS,EAAG,GAG/B,IAAVuuB,GACFL,EAAY2kB,KAEhB,EAQO,EAAA+0B,gBAAP,SAAuBjsD,EAAqBxH,GAC1C,OAAQwH,EAAE,KAAOxH,EAAE,QAAMxU,EAAY,CAACgc,EAAE,GAAIxH,EAAE,GAChD,EACF,EAlDA,GAAa,EAAA0zD,WAAAA,EAoDb,8BA+LA,QAvLS,EAAAx5C,UAAP,SAAiBy5C,EAA0BC,EAA0BC,G,WAAA,IAAAA,IAAAA,GAAA,GACnE,IAAMrqC,EAAQmqC,EAAM9nE,OACd49B,EAAQmqC,EAAM/nE,OACpB,GAAc,IAAV29B,EACF,OAAOoqC,EAET,GAAc,IAAVnqC,EACF,OAAOkqC,EAET,IAAMG,EAAQ/8D,KAAK47B,IAAIghC,EAAM9nE,OAAQ+nE,EAAM/nE,QACrCkoE,EAAQ,IAAI7lE,MAAc4lE,GAGhC,GAAID,EAAU,CACZ,GAAIrqC,EAAQ,GAAKC,EAAQ,EACvB,OAEF,IAAMuqC,EACFN,EAAWD,gBAAgB,CAACE,EAAMnqC,EAAQ,GAAImqC,EAAMnqC,EAAQ,IAAK,CAACoqC,EAAMnqC,EAAQ,GAAImqC,EAAMnqC,EAAQ,KACtG,QAAqBj+B,IAAjBwoE,EACF,OAEF,IAAuCA,EAAY,GAAlDD,EAAMD,EAAQ,GAAE,KAAEC,EAAMD,EAAQ,GAAE,I,CAGrC,IAAK,IAAIpoE,EAAImoE,EAAW,EAAI,EAAGnoE,GAAKooE,EAAOpoE,IAAK,CAC9C,IAAMuoE,EAAOzqC,EAAQ99B,EAAI,EAAI,EAAIioE,EAAMnqC,EAAQ99B,GACzCwoE,EAAOzqC,EAAQ/9B,EAAI,EAAI,EAAIkoE,EAAMnqC,EAAQ/9B,GAE/C,GAAIuoE,IAASC,GAAQD,EAAO,GAAKC,EAAO,EACtC,OAEFH,EAAMD,EAAQpoE,GAAKqL,KAAK47B,IAAIshC,EAAMC,E,CAGpC,OAAOH,CACT,EAQO,EAAAzvD,MAAP,SAAa6vD,EAAuCC,GAIlD,IAAMC,EAAkB,IAAInmE,MAAMkmE,EAAcvoE,QAEhD,OADA8V,EAAc2yD,UAAUH,EAAoBC,EAAeC,GACpDA,CACT,EASO,EAAAC,UAAP,SAAiBH,EAAuCC,EAAkCC,GAKxF,IADA,IAAMppD,EAAYkpD,EAAmBtoE,OAASuoE,EAAcvoE,OACnDH,EAAI,EAAGA,EAAI0oE,EAAcvoE,OAAQH,IACxC2oE,EAAgB3oE,GAAKyoE,EAAmBlpD,EAAYvf,GAAK0oE,EAAc1oE,EAE3E,EAUO,EAAA6oE,KAAP,SACI/sD,EAAWxH,EAAWw7B,EAA+Dg5B,EACrFC,GACF,IAAM16C,EAAcpY,EAAcuY,UAAU1S,EAAE9Z,KAAMsS,EAAEtS,MAEtD,GAAIqsB,EAAa,CACf,GAAIy6C,IAAYpyD,EAAU0X,SAASC,EAAavS,EAAE9Z,MAEhD,OAGF,IAAMc,EAAO4T,EAAU5T,KAAKurB,GACtBtS,EAAI+sD,EAAUhtD,EAAI,IAAI,EAAApa,OAAO2sB,EAAa06C,GAAcjtD,EAAEha,MAGhE,GAA2B,IAAvBusB,EAAYluB,OACd4b,EAAEzZ,IAAI,GAAIwtC,EAAGh0B,EAAEnZ,IAAI,IAAK2R,EAAE3R,IAAI,UAI3B,CACH,IAAMqmE,EAAgB,IAAIxmE,MAAc6rB,EAAYluB,QAC9C8oE,EAAmB,IAAIzmE,MAAMsZ,EAAE9Z,KAAK7B,QACpC+oE,EAAmB,IAAI1mE,MAAM8R,EAAEtS,KAAK7B,QACtCgpE,EAAsB,EACtBC,EAAsB,EACtBC,GAAY,EACZC,GAAY,EACM,IAAlBxtD,EAAE9Z,KAAK7B,SACTgpE,EAAOrtD,EAAEnZ,IAAI,IACb0mE,GAAY,GAEQ,IAAlB/0D,EAAEtS,KAAK7B,SACTipE,EAAO90D,EAAE3R,IAAI,IACb2mE,GAAY,GAGd,IADA,IAAIC,OAAI,EACCvpE,EAAI,EAAGA,EAAI8C,EAAM9C,IAAK,CAE7BupE,EAAOvpE,EACP,IAAK,IAAI+G,EAAIsnB,EAAYluB,OAAS,EAAG4G,GAAK,EAAGA,IAC3CiiE,EAAcjiE,GAAKwiE,EAAOl7C,EAAYtnB,GACtCwiE,EAAOl+D,KAAKyc,MAAMyhD,EAAOl7C,EAAYtnB,IAGlCsiE,IAEHpzD,EAAc2yD,UAAUI,EAAeltD,EAAE9Z,KAAMinE,GAC/CE,EAAOrtD,EAAEnZ,IAAIsmE,IAEVK,IACHrzD,EAAc2yD,UAAUI,EAAe10D,EAAEtS,KAAMknE,GAC/CE,EAAO90D,EAAE3R,IAAIumE,IAGfntD,EAAEzZ,IAAI0mE,EAAel5B,EAAGq5B,EAAMC,G,EAIlC,OAAOrtD,C,CAIX,EAOO,EAAAytD,iBAAP,SAAwB71D,EAA0B81D,GAEhD,IAAMtrC,EAAYxqB,EAAMxT,OAClBupE,EAAYD,EAAWtpE,OAC7B,GAAIg+B,EAAYurC,EACd,OAAO,EAET,IAAK,IAAI1pE,EAAI,EAAGA,GAAKm+B,EAAWn+B,IAC9B,GAA6B,IAAzB2T,EAAMwqB,EAAYn+B,IAAY2T,EAAMwqB,EAAYn+B,KAAOypE,EAAWC,EAAY1pE,GAChF,OAAO,EAGX,OAAO,CACT,EASO,EAAAkW,iBAAP,SAAwBmZ,EAA+BhB,GAGrD,IAFA,IAAMvY,EAASuZ,EAAWlvB,OACpB6B,EAAiB,GACdhC,EAAI,EAAGA,EAAI8V,EAAQ9V,IAAK,CAC/B,IAAM+C,EAAM+S,EAAS,EAAI9V,EACnB8b,EAAIuT,EAAWtsB,IAAQ,GACnBsrB,EAAYA,EAAYluB,OAAS,EAAIH,IAAM,GAC7C,GAAW,IAAN8b,GACX9Z,EAAK2nE,QAAQ5mE,E,CAGjB,OAAOf,CACT,EACF,EA/LA,GAAa,EAAAiU,cAAAA,EAmMb,2BACI2zD,EAAoC91D,EAAoC+1D,EAAqBC,EAC7FC,GACF,GAAID,EAAc,GAAKA,GAAeh2D,EAAO3T,OAC3C,MAAM,IAAIJ,MAAM,6BAElB,GAAI8pE,EAAc,GAAKA,GAAeD,EAAOzpE,OAC3C,MAAM,IAAIJ,MAAM,6BAElB,GAAI+pE,EAAcC,EAAYj2D,EAAO3T,OACnC,MAAM,IAAIJ,MAAM,kDAElB,GAAI8pE,EAAcE,EAAYH,EAAOzpE,OACnC,MAAM,IAAIJ,MAAM,4CAGlB,IAAK,IAAIioC,EAAS,EAAGA,EAAS+hC,EAAW/hC,IACvC4hC,EAAOC,EAAc7hC,GAAUl0B,EAAOg2D,EAAc9hC,EAExD,EAEA,8BA+CA,QA3CS,EAAApO,qBAAP,SACIowC,EAA8BC,EAAoBC,EAA+BC,EACjFC,GACF,GAAyB,IAArBJ,EAAU7pE,QAAsC,IAAtB+pE,EAAW/pE,OACvC,MAAM,IAAIJ,MAAM,8BAGlB,IAAIsqE,EACAC,EACAC,EAEAN,GACFI,EAAIL,EAAU,GACdM,EAAIN,EAAU,KAEdK,EAAIL,EAAU,GACdM,EAAIN,EAAU,IAGhB,IAAIQ,GAAQ,EAUZ,GARIL,GACFI,EAAIL,EAAW,GACfM,EAAO,IAEPD,EAAIL,EAAW,GACfM,EAAO,GAGLN,EAAWM,KAAUF,EACvB,MAAM,IAAIvqE,MAAM,sBAGlB,GAAIsqE,GAAK,GAAKE,GAAK,GAAKD,GAAK,EAC3B,MAAM,IAAIvqE,MAAM,2BAGlB,GAAIqqE,IAAcn0D,EAAcuzD,iBAAiBY,EAAW,CAACC,EAAGE,IAC9D,MAAM,IAAIxqE,MAAM,0CAGlB,MAAO,CAACsqE,EAAGE,EAAGD,EAChB,EACF,EA/CA,GAAa,EAAA3wC,SAAAA,EAiDb,8BAgGA,QA/FS,EAAA5K,wBAAP,SAA+B07C,GAE7B,OAAQA,GACN,KAAK,EAAAh+D,KAAK64D,YAAYC,SAASI,KAC7B,MAAO,OACT,KAAK,EAAAl5D,KAAK64D,YAAYC,SAASK,MAC7B,MAAO,QACT,KAAK,EAAAn5D,KAAK64D,YAAYC,SAASM,KAC7B,MAAO,OACT,KAAK,EAAAp5D,KAAK64D,YAAYC,SAASE,MAC7B,MAAO,QACT,KAAK,EAAAh5D,KAAK64D,YAAYC,SAASG,OAC7B,MAAO,SACT,KAAK,EAAAj5D,KAAK64D,YAAYC,SAASC,MAC7B,MAAO,QACT,KAAK,EAAA/4D,KAAK64D,YAAYC,SAASY,OAC7B,MAAO,SACT,KAAK,EAAA15D,KAAK64D,YAAYC,SAAS73D,MAC7B,MAAO,UACT,KAAK,EAAAjB,KAAK64D,YAAYC,SAASU,OAC7B,MAAO,UACT,KAAK,EAAAx5D,KAAK64D,YAAYC,SAAS33D,OAC7B,MAAO,SAIT,KAAK,EAAAnB,KAAK64D,YAAYC,SAASQ,MAC7B,MAAO,QACT,KAAK,EAAAt5D,KAAK64D,YAAYC,SAASa,OAC7B,MAAO,SAET,QACE,MAAM,IAAIrmE,MAAM,iCAA0B,EAAA0M,KAAK64D,YAAYC,SAASkF,KAE1E,EAEO,EAAAC,2BAAP,SAAkC5oE,GAChC,OAAQA,GACN,IAAK,OACH,OAAO,EAAA2K,KAAK64D,YAAYC,SAASI,KACnC,IAAK,QACH,OAAO,EAAAl5D,KAAK64D,YAAYC,SAASK,MACnC,IAAK,OACH,OAAO,EAAAn5D,KAAK64D,YAAYC,SAASM,KACnC,IAAK,QACH,OAAO,EAAAp5D,KAAK64D,YAAYC,SAASE,MACnC,IAAK,SACH,OAAO,EAAAh5D,KAAK64D,YAAYC,SAASG,OACnC,IAAK,QACH,OAAO,EAAAj5D,KAAK64D,YAAYC,SAASC,MACnC,IAAK,SACH,OAAO,EAAA/4D,KAAK64D,YAAYC,SAASY,OACnC,IAAK,UACH,OAAO,EAAA15D,KAAK64D,YAAYC,SAAS73D,MACnC,IAAK,UACH,OAAO,EAAAjB,KAAK64D,YAAYC,SAASU,OACnC,IAAK,SACH,OAAO,EAAAx5D,KAAK64D,YAAYC,SAAS33D,OACnC,IAAK,QACH,OAAO,EAAAnB,KAAK64D,YAAYC,SAASQ,MACnC,IAAK,SACH,OAAO,EAAAt5D,KAAK64D,YAAYC,SAASa,OAEnC,QACE,MAAM,IAAIrmE,MAAM,iCAA0B+B,IAEhD,EAEO,EAAA+/C,oBAAP,SAA2B7/C,GAEzB,OAAOA,EAAKqH,KAAI,SAAAkN,GAAK,iBAAKhI,OAAOgI,GAAKA,EAAEowD,WAAapwD,CAAhC,GACvB,EAEO,EAAA0pC,yBAAP,SAAgCoC,GAC9B,MAAO,CACLnC,WAAYpxB,EAAUC,wBAAwBszB,EAAUI,UACxD9uC,MAAO,CAAC3R,KAAM8sB,EAAU+yB,oBAAoBQ,EAAU1uC,MAAO5Q,IAAKsG,KAAI,SAAAkN,GAAK,OAAAA,EAAEosC,QAAF,MAE/E,EAEO,EAAAE,wBAAP,SAA+B1gC,GAE7B,IADA,IAAMngB,EAAO,GACJhC,EAAI,EAAGA,EAAImiB,EAAO+zC,aAAcl2D,IACvCgC,EAAK5B,KAAKkO,EAASE,aAAa2T,EAAOngB,KAAKhC,KAE9C,OAAOgC,CACT,EAEO,EAAAu+C,8BAAP,SAAqC/lC,GAEnC,IADA,IAAMlO,EAAa,GACVtM,EAAI,EAAGA,EAAIwa,EAAKyoC,mBAAoBjjD,IAC3CsM,EAAWlM,KAAKoa,EAAKlO,WAAWtM,IAElC,OAAOsM,CACT,EACF,EAhGA,GAAa,EAAAwiB,UAAAA,EAkGb,8BAeA,QAXS,EAAAtgB,aAAP,SAAoBopC,EAAiC+yB,GACnD,OAAI,UAAKp8D,OAAOqpC,GACPA,EAAE+uB,WACA/uB,aAAa,EAAAmR,YAAY6hB,KAC3B,UAAKC,UAAU,CAACC,IAAKlzB,EAAEkzB,IAAKC,KAAMnzB,EAAEmzB,KAAMJ,SAAUA,SAAAA,IAAoBhE,WAE1E/uB,CACT,EACO,EAAArpC,OAAP,SAAcqpC,GACZ,OAAO,UAAKrpC,OAAOqpC,IAAMA,aAAa,EAAAmR,YAAY6hB,IACpD,EACF,EAfA,GAAa,EAAAt8D,SAAAA,EAiBb,8BA0UA,QAzUS,EAAAxL,KAAP,SAAYd,GACV,OAAO0U,EAAUs0D,0BAA0BhpE,EAAM,EAAGA,EAAK7B,OAC3D,EAGO,EAAAomC,kBAAP,SAAyBvkC,EAAyBotB,GAChD,GAAIA,EAAO,GAAKA,EAAOptB,EAAK7B,OAC1B,MAAM,IAAIJ,MAAM,+BAAwBqvB,EAAI,gDAAwCptB,EAAK7B,OAAM,iBAEjG,OAAOuW,EAAUs0D,0BAA0BhpE,EAAMotB,EAAMptB,EAAK7B,OAC9D,EAGO,EAAAkmC,gBAAP,SAAuBrkC,EAAyBotB,GAC9C,GAAIA,EAAO,GAAKA,EAAOptB,EAAK7B,OAC1B,MAAM,IAAIJ,MAAM,+BAAwBqvB,EAAI,8CAAsCptB,EAAK7B,OAAM,iBAE/F,OAAOuW,EAAUs0D,0BAA0BhpE,EAAM,EAAGotB,EACtD,EAEO,EAAA47C,0BAAP,SAAiChpE,EAAyB2+B,EAAe2E,GAEvE,IADA,IAAIxiC,EAAO,EACF9C,EAAI2gC,EAAO3gC,EAAIslC,EAAKtlC,IAAK,CAGhC,GAAIgC,EAAKhC,IAAM,EACb,MAAM,IAAID,MAEN,sHAEN+C,GAAQd,EAAKhC,E,CAEf,OAAO8C,CACT,EAEO,EAAAshB,eAAP,SAAsBpiB,GACpB,IAAMuS,EAAOvS,EAAK7B,OAClB,GAAa,IAAToU,EACF,MAAO,GACF,GAAa,IAATA,EACT,MAAO,CAAC,GAEV,IAAMC,EAAU,IAAIhS,MAAM+R,GAC1BC,EAAQD,EAAO,GAAK,EACpBC,EAAQD,EAAO,GAAKvS,EAAKuS,EAAO,GAChC,IAAK,IAAIvU,EAAIuU,EAAO,EAAGvU,GAAK,IAAKA,EAC/BwU,EAAQxU,GAAKwU,EAAQxU,EAAI,GAAKgC,EAAKhC,EAAI,GAEzC,OAAOwU,CACT,EAEO,EAAAyF,UAAP,SAAiBjY,GAEf,OADaA,EAAKgW,QACNsB,SACd,EAEO,EAAA8F,gBAAP,SAAuB04C,EAA4BtjD,EAA4B4a,QAChEtvB,IAATsvB,IACFA,EAAO0oC,EAAQ33D,QAGjB,IADA,IAAI6nC,EAAS,EACJhoC,EAAI,EAAGA,EAAIovB,IAAQpvB,EAC1BgoC,GAAUxzB,EAAQxU,GAAK83D,EAAQ93D,GAEjC,OAAOgoC,CACT,EAEO,EAAA7oB,gBAAP,SAAuB6oB,EAAgBxzB,GACrC,IAAMD,EAAOC,EAAQrU,OACrB,GAAa,IAAToU,EACF,MAAO,GACF,GAAa,IAATA,EACT,MAAO,CAACyzB,EAASxzB,EAAQ,IAG3B,IADA,IAAMsjD,EAAoB,IAAIt1D,MAAMgS,EAAQrU,QACnCH,EAAI,EAAGA,EAAI83D,EAAQ33D,OAAS,IAAKH,EACxC83D,EAAQ93D,GAAKqL,KAAKyc,MAAMkgB,EAASxzB,EAAQxU,IACzCgoC,GAAU8vB,EAAQ93D,GAAKwU,EAAQxU,GAGjC,OADA83D,EAAQA,EAAQ33D,OAAS,GAAK6nC,EACvB8vB,CACT,EAKO,EAAAp/B,cAAP,SAAqBtJ,EAAckC,GACjC,GAAIlC,GAAQkC,GAAclC,GAAQkC,EAChC,MAAM,IAAIvxB,MAAM,wCAElB,OAAOqvB,EAAO,EAAIA,EAAOkC,EAAalC,CACxC,EAEO,EAAA0T,cAAP,SAAqBJ,EAAyBpR,GAA9C,WACE,OAAOoR,EAAKr5B,KAAI,SAAAgnB,GAAK,SAAKqI,cAAcrI,EAAGiB,EAAtB,GACvB,EAUO,EAAA25C,eAAP,SAAsBryD,EAAiB5W,EAAyBkpE,GAC9D,GAAoB,IAAhBlpE,EAAK7B,QAAiC,IAAjByY,EAAMzY,OAC7B,MAAM,IAAIJ,MAAM,oDAElB,QAA0BD,IAAtBorE,EACFA,EAAoBlpE,EAAK7B,YAEzB,GAAI+qE,GAAqB,GAAKA,EAAoBlpE,EAAK7B,OACrD,MAAM,IAAIJ,MAAM,kCAIpB,IAAK,IAAIkjC,EAAIioC,EAAoB,EAAGjoC,GAAK,IACvCrqB,EAAMqqB,OACFrqB,EAAMqqB,GAAKjhC,EAAKihC,OAFwBA,EAK5CrqB,EAAMqqB,GAAK,CAEf,EAcO,EAAAY,sBAAP,SAA6BsnC,EAAiCC,GAE5D,GAA0B,IAAtBA,EAAWjrE,OAAc,CAC3B,GAA4B,IAAxBgrE,EAAahrE,QAAiD,IAAjCuW,EAAU5T,KAAKqoE,GAC9C,MAAO,GAEP,MAAM,IAAIprE,MAAM,oC,CAQpB,IAJA,IAAMsrE,EAAQD,EAAWjrE,OACnB6jB,EAAe,IAAIxhB,MAAc6oE,GACnCC,GAAoB,EACpBC,EAAgB,EACXvrE,EAAI,EAAGA,EAAIqrE,EAAOrrE,IAAK,CAC9B,GAAIorE,EAAWprE,IAAM,EACnB,MAAM,IAAID,MAAM,qDAElB,IAAuB,IAAnBqrE,EAAWprE,GAAW,CACxB,IAA0B,IAAtBsrE,EACF,MAAM,IAAIvrE,MAAM,kDAElBurE,EAAmBtrE,C,KACd,CACL,GAAsB,IAAlBorE,EAAWprE,GAAU,CACvB,GAAIA,GAAKmrE,EAAahrE,OACpB,MAAM,IAAIJ,MAAM,gFAElBikB,EAAahkB,GAAKmrE,EAAanrE,E,MAE/BgkB,EAAahkB,GAAKorE,EAAWprE,GAE/BurE,GAAiBvnD,EAAahkB,E,EAIlC,IAAMwrE,EAAgB90D,EAAU5T,KAAKqoE,GACrC,IAA0B,IAAtBG,EAAyB,CAC3B,GAAIE,EAAgBD,GAAkB,EACpC,MAAM,IAAIxrE,MAAM,oFACZorE,EAAY,4BAAoBC,EAAU,MAEhDpnD,EAAasnD,GAAoBE,EAAgBD,C,MAIjD,GAAIA,IAAkBC,EACpB,MAAM,IAAIzrE,MAAM,2DAGpB,OAAOikB,CACT,EAQO,EAAA8kB,gBAAP,SAAuBhtB,EAAsB6a,GAC3C,OAAIA,EACKA,EAAKttB,KAAI,SAAChB,GAAM,OAAAyT,EAAEzT,EAAF,IAEhByT,EAAE9D,QAAQsB,SAErB,EAOO,EAAA8lB,SAAP,SAAgBp9B,EAAyBypE,GACvC,IAAMl3D,EAAOvS,EAAK7B,OAClB,OAAO6B,EAAKqH,KAAI,SAAChB,EAAGrI,GAAM,OAAAqI,EAAIojE,EAAIzrE,GAAKyrE,EAAIzrE,EAAIuU,EAArB,GAC5B,EAOO,EAAA6Z,SAAP,SAAgBs9C,EAA2BC,GACzC,OAAID,EAAOvrE,SAAWwrE,EAAOxrE,QAGtBurE,EAAOvnC,OAAM,SAAC97B,EAAGrI,GAAM,OAAAqI,IAAMsjE,EAAO3rE,EAAb,GAChC,EAMO,EAAAukE,wBAAP,SAA+BviE,G,QAC7B,GAAIA,EAAK7B,OAAS,EAChB,MAAM,IAAIP,UAAU,mDAEtB,IAAIkD,EAAO,E,IACX,IAAgB,QAAAd,GAAI,8BAAE,CAAjB,IAAM41C,EAAC,QACV,IAAK50C,OAAOgI,UAAU4sC,GACpB,MAAM,IAAIh4C,UAAU,yBAAkBg4C,EAAC,uBAEzC,GAAIA,EAAI,GAAKA,EAAI,WACf,MAAM,IAAIh4C,UAAU,gCAAyBg4C,EAAC,oBAEhD90C,GAAQ80C,C,mGAEV,OAAO90C,CACT,EAOO,EAAA60B,aAAP,SAAoB31B,EAAyBotB,GACvCA,EAAO,IACTA,GAAQptB,EAAK7B,QAEf,IAAMyrE,EAAQ5pE,EAAKmgC,QAAO,SAAC9R,EAAGw7C,GAAM,OAAAx7C,EAAIw7C,CAAJ,GAAO,GACrCC,EAAQ9pE,EAAKgW,MAAMoX,GAAM+S,QAAO,SAAC9R,EAAGw7C,GAAM,OAAAx7C,EAAIw7C,CAAJ,GAAO,GAGvD,MAFmB,CAACD,EAAQE,EAAOA,EAGrC,EAOO,EAAA/yD,aAAP,SAAoB/W,EAAyB0gC,GAC3C,IAAMhL,EAAa,IAAIl1B,MAGvBkgC,EAAOhsB,EAAUosB,cAAcJ,EAAM1gC,EAAK7B,QAE1C,IAAK,IAAIH,EAAI,EAAGA,EAAIgC,EAAK7B,OAAQH,IAAK,CACpC,IAAM+rE,EAAgBrpC,EAAKziC,QAAQD,IAAM,EACzC,GAAI+rE,GAA6B,IAAZ/pE,EAAKhC,GACxB,MAAM,IAAID,MAAM,6CAGG,IAAhB2iC,EAAKviC,QAAgB6B,EAAKhC,GAAK,GAAO0iC,EAAKviC,OAAS,IAAM4rE,IAC7Dr0C,EAAWt3B,KAAK4B,EAAKhC,G,CAIzB,OAAO03B,CACT,EAOO,EAAAkT,eAAP,SAAsB5oC,EAAyB0gC,GAC7C,IAAMhL,EAAa,IAAIl1B,MAAcR,EAAK7B,OAASuiC,EAAKviC,QAGxDu3B,EAAWvI,KAAK,GAGhB,IAAK,IAAInvB,EAAI,EAAGA,EAAI0iC,EAAKviC,OAAQH,IAAK,CACpC,IAAMovB,EAAO1Y,EAAUgiB,cAAcgK,EAAK1iC,GAAI03B,EAAWv3B,QACzD,GAAIivB,GAAQsI,EAAWv3B,OACrB,MAAM,IAAIJ,MAAM,mCAElB,GAAyB,IAArB23B,EAAWtI,GACb,MAAM,IAAIrvB,MAAM,+BAGlB23B,EAAWtI,GAAQ,C,CAIrB,IAAI48C,EAAoB,EACxB,IAAShsE,EAAI,EAAGA,EAAI03B,EAAWv3B,OAAQH,IACf,IAAlB03B,EAAW13B,KACb03B,EAAW13B,GAAKgC,EAAKgqE,MAMzB,GAAIA,IAAsBhqE,EAAK7B,OAC7B,MAAM,IAAIJ,MAAM,qDAGlB,OAAO23B,CACT,EACF,EA1UA,GAAa,EAAAhhB,UAAAA,EA6Ub,8BAwFA,QAtFS,EAAAu1D,IAAP,SACIrC,EAAoC91D,EAAoC+1D,EAAqBC,EAC7FC,GACF,GAAID,EAAc,GAAKA,GAAeh2D,EAAO3T,OAC3C,MAAM,IAAIJ,MAAM,6BAElB,GAAI8pE,EAAc,GAAKA,GAAeD,EAAOzpE,OAC3C,MAAM,IAAIJ,MAAM,6BAElB,GAAI+pE,EAAcC,EAAYj2D,EAAO3T,OACnC,MAAM,IAAIJ,MAAM,kDAElB,GAAI8pE,EAAcE,EAAYH,EAAOzpE,OACnC,MAAM,IAAIJ,MAAM,4CAGlB,IAAK,IAAIioC,EAAS,EAAGA,EAAS+hC,EAAW/hC,IACvC4hC,EAAOC,EAAc7hC,IAAW38B,KAAKwe,IAAI/V,EAAOg2D,EAAc9hC,GAAS,EAE3E,EAGO,EAAAkkC,KAAP,SACItC,EAAoC91D,EAAoC+1D,EAAqBC,EAC7FC,EAAmBzwC,GACrB,GAAIwwC,EAAc,GAAKA,GAAeh2D,EAAO3T,OAC3C,MAAM,IAAIJ,MAAM,6BAElB,GAAI8pE,EAAc,GAAKA,GAAeD,EAAOzpE,OAC3C,MAAM,IAAIJ,MAAM,6BAElB,GAAI+pE,EAAcC,EAAYj2D,EAAO3T,OACnC,MAAM,IAAIJ,MAAM,kDAElB,GAAI8pE,EAAcE,EAAYH,EAAOzpE,OACnC,MAAM,IAAIJ,MAAM,4CAGlB,IAAK,IAAIioC,EAAS,EAAGA,EAAS+hC,EAAW/hC,IACvC4hC,EAAOC,EAAc7hC,IAAY1O,EAAQxlB,EAAOg2D,EAAc9hC,EAElE,EAGO,EAAAmkC,KAAP,SACIvC,EAAoC91D,EAAoC+1D,EAAqBC,EAC7FC,EAAmBz1D,GACrB,GAAIw1D,EAAc,GAAKA,GAAeh2D,EAAO3T,OAC3C,MAAM,IAAIJ,MAAM,6BAElB,GAAI8pE,EAAc,GAAKA,GAAeD,EAAOzpE,OAC3C,MAAM,IAAIJ,MAAM,6BAElB,GAAI+pE,EAAcC,EAAYj2D,EAAO3T,OACnC,MAAM,IAAIJ,MAAM,kDAElB,GAAI8pE,EAAcE,EAAYH,EAAOzpE,OACnC,MAAM,IAAIJ,MAAM,4CAGlB,IAAK,IAAIioC,EAAS,EAAGA,EAAS+hC,EAAW/hC,IACvC4hC,EAAOC,EAAc7hC,GAAU38B,KAAKwe,IAAI/V,EAAOg2D,EAAc9hC,GAAS1zB,EAE1E,EAGO,EAAAkM,IAAP,SACIopD,EAAoC91D,EAAoC+1D,EAAqBC,EAC7FC,GACF,GAAID,EAAc,GAAKA,GAAeh2D,EAAO3T,OAC3C,MAAM,IAAIJ,MAAM,6BAElB,GAAI8pE,EAAc,GAAKA,GAAeD,EAAOzpE,OAC3C,MAAM,IAAIJ,MAAM,6BAElB,GAAI+pE,EAAcC,EAAYj2D,EAAO3T,OACnC,MAAM,IAAIJ,MAAM,kDAElB,GAAI8pE,EAAcE,EAAYH,EAAOzpE,OACnC,MAAM,IAAIJ,MAAM,4CAGlB,IAAK,IAAIioC,EAAS,EAAGA,EAAS+hC,EAAW/hC,IACvC4hC,EAAOC,EAAc7hC,GAAWl0B,EAAOg2D,EAAc9hC,GAAU4hC,EAAOC,EAAc7hC,EAExF,EACF,EAxFA,GAAa,EAAAokC,SAAAA,EA0Fb,8BAsCA,QA/BS,EAAArkC,WAAP,SAAkB/lC,EAAyBotB,EAAc5S,EAAiBorB,GAExE,GAAqB,IAAjBprB,EAAMrc,OAAc,CACtB,IAAKynC,EACH,MAAM,IAAI7nC,MAAM,8EAElB+nC,EAAUukC,eAAerqE,EAAKotB,GAAOwY,EAAYprB,E,CAKnD,IAFA,IAAMoT,EAAqB,GACrBC,EAAU,CAAC,GACR7vB,EAAI,EAAGA,EAAIwc,EAAMrc,SAAUH,EAAG,CAC3B,IAANA,GACF6vB,EAAQzvB,KAAKyvB,EAAQ7vB,EAAI,GAAKwc,EAAMxc,EAAI,IAE1C,IAAM2T,EAAQ3R,EAAKgW,QACnBrE,EAAMyb,GAAQ5S,EAAMxc,GACpB4vB,EAAOxvB,KAAKuT,E,CAEd,MAAO,CAACic,EAAQC,EAClB,EAEO,EAAAw8C,eAAP,SAAsBC,EAA8B1kC,EAAoBprB,GAEtE,GAAI8vD,EAAuB1kC,GAAe,EACxC,MAAM,IAAI7nC,MAAM,4CAElB,IAAK,IAAIC,EAAI,EAAGA,EAAI4nC,IAAc5nC,EAChCwc,EAAMpc,KAAKksE,EAAuB1kC,EAEtC,EACF,EAtCA,GAAa,EAAAE,UAAAA,EAwCb,8BA4FA,QAlFS,EAAAykC,WAAP,SACIzwD,EAAW4mB,EAAgB8pC,EAAmB9rC,EAC9CX,GACF,IAAM/9B,EAAO8Z,EAAE9Z,KAAKgW,MAAM,GAEN,IAAhB0qB,EAAKviC,QACP6B,EAAK+S,SAAQ,SAACwB,EAAGutC,GAAQ,OAAAphB,EAAKtiC,KAAK0jD,EAAV,IAW3B,IARA,IAAMpsB,EAAa+0C,EAAWC,gBAAgB1qE,EAAM0gC,GAAM,GAGpD5/B,EAAO4T,EAAU5T,KAAK40B,GACtBm0C,EAAI,IAAI,EAAAnqE,OAAOg2B,EAAY5b,EAAEha,MAC7B0S,EAAUkC,EAAU0N,eAAesT,GACnCi1C,EAAej2D,EAAU0N,eAAepiB,GACxC4qE,EAAW,IAAIpqE,MAAMR,EAAK7B,QACvBH,EAAI,EAAGA,EAAI8C,EAAM9C,IAAK,CAC7B,IAAM83D,EAAUphD,EAAUyI,gBAAgBnf,EAAGwU,GAE7CyB,EAAc2yD,UAAU9Q,EAAS91D,EAAM4qE,GACvCf,EAAEvpE,IACEw1D,EACA2U,EAAWI,iBACP/wD,EAAE+G,WAAY6f,EAAM1gC,EAAM,EAAG0U,EAAU0I,gBAAgBwtD,EAAUD,GAAejsC,EAAKX,G,CAG/F,OAAIysC,EACKX,EAGA,IAAI,EAAAnqE,OACP+qE,EAAWC,gBAAgB1qE,EAAM0gC,EAAM8pC,GAAWX,EAAE/pE,UAAMhC,OAAWA,EAAW+rE,EAAE9pE,KAAM8pE,EAAErpD,OAElG,EAaO,EAAAqqD,iBAAP,SACI9oD,EAA0B2e,EAAgB1gC,EAAgB8qE,EAAoBC,EAC9ErsC,EAA4BX,GAC9B,IAAIxC,EAAM,EACV,GAAIuvC,GAAcpqC,EAAKviC,OACrB,OAAOugC,EAAI3c,EAAMgpD,IAInB,IAFA,IAAM39C,EAAOsT,EAAKoqC,GACZzoE,EAAO+qB,GAAQptB,EAAK7B,OAAS,EAAIuW,EAAU5T,KAAKd,EAAKgW,MAAMoX,EAAO,IAC/DpvB,EAAI,EAAGA,EAAIgC,EAAKotB,GAAOpvB,IAC9Bu9B,EAAY,IAANv9B,EAAUysE,EAAWI,iBAAiB9oD,EAAO2e,EAAM1gC,EAAM8qE,EAAa,EAAGC,EAAKrsC,EAAKX,GACzEA,EAAIxC,EAAKkvC,EAAWI,iBAAiB9oD,EAAO2e,EAAM1gC,EAAM8qE,EAAa,EAAGC,EAAKrsC,EAAKX,IAClGgtC,GAAO1oE,EAET,OAAOk5B,CACT,EASO,EAAAmvC,gBAAP,SAAuB1qE,EAAyB0gC,EAAyBC,GAEvE,IADA,IAAMjL,EAAa11B,EAAKgW,QACfhY,EAAI,EAAGA,EAAI0iC,EAAKviC,OAAQH,IAE7B03B,EAAWgL,EAAK1iC,IADd2iC,EACoB,EAEA,EAG1B,OAAOjL,EAAW/a,QAAO,SAAA5Z,GAAO,OAAQ,IAARA,CAAA,GAClC,EACF,EA5FA,GAAa,EAAA0pE,WAAAA,EA8Fb,8BAwMA,QA9LS,EAAApsC,qBAAP,SACIR,EAA2BY,EAA8BtO,EAAuB3d,EAChF0d,EAAqBE,GACvB,IAAKyN,GAAoB1N,EAAYhyB,SAAWsgC,EAAUtgC,OAAS,EACjE,MAAM,IAAIJ,MAAM,sFAGlB,GAAI8/B,EAEF,IAAK,IAAI98B,EAAM,EAAGA,EAAM09B,EAAUtgC,OAAS,EAAG4C,IACxCA,GAAOovB,EAAYhyB,OACrBgyB,EAAY/xB,KAAKqgC,EAAU19B,EAAM,IAEjCovB,EAAYpvB,GAAO09B,EAAU19B,EAAM,GAMzC,IAASA,EAAM,EAAGA,EAAMovB,EAAYhyB,OAAQ4C,IAC1C,GAAIA,EAAMyR,EAAQrU,QAChB,GAAIqU,EAAQzR,GAAO,EACjB,MAAM,IAAIhD,MAAM,qDAGlByU,EAAQpU,KAAK,GAKjB,IAAS2C,EAAM,EAAGA,EAAMovB,EAAYhyB,OAAQ4C,IAC1C,GAAIA,EAAMmvB,EAAU/xB,QAClB,GAAI+xB,EAAUnvB,GAAO,EACnB,MAAM,IAAIhD,MAAM,uDAGlBmyB,EAAU9xB,KAAK,GAKnB,IAAS2C,EAAM,EAAGA,EAA2B,EAArBovB,EAAYhyB,OAAY4C,IAC9C,GAAIA,EAAMqvB,EAAKjyB,QACb,GAAIiyB,EAAKrvB,GAAO,EACd,MAAM,IAAIhD,MAAM,iDAGlBqyB,EAAKhyB,KAAK,GAKd,IAAS2C,EAAM,EAAGA,EAAMovB,EAAYhyB,OAAQ4C,IAAO,CACjD,GAAIovB,EAAYpvB,IAAQ,EACtB,MAAM,IAAIhD,MAAM,2CAGlB,GAAIqyB,EAAKrvB,IAAQovB,EAAYpvB,IAAQqvB,EAAKrvB,EAAMovB,EAAYhyB,SAAWgyB,EAAYpvB,GACjF,MAAM,IAAIhD,MAAM,qC,CAGtB,EAGO,EAAAo2B,yBAAP,SACIsK,EAA8BjsB,EAA4B0d,EAC1DC,EAAgCC,EAAgBH,GAClD,GAAKA,EAAL,CAIA,GAAIG,EAAKjyB,SAAW,GAAKsgC,EAAUtgC,OAAS,GAC1C,MAAM,IAAIJ,MAAM,gEAGlB,GAAIyU,EAAQrU,SAAYsgC,EAAUtgC,OAAS,EACzC,MAAM,IAAIJ,MAAM,6DAGlB,GAAIoyB,EAAYhyB,SAAYsgC,EAAUtgC,OAAS,EAC7C,MAAM,IAAIJ,MAAM,mEAGlB,IAAK,IAAIgD,EAAM,EAAGA,EAAM09B,EAAUtgC,OAAS,EAAG4C,IAC5CmzB,EAAa82C,wBACTvsC,EAAU19B,EAAM,GAAIyR,EAAQzR,GAAMmvB,EAAUnvB,GAAMovB,EAAYpvB,GAAMqvB,EAAMrvB,EAAKA,EAAM09B,EAAUtgC,OAAS,EACxG8xB,E,CAER,EAaO,EAAAqO,uBAAP,SACIT,EAA2BY,EAA8BjsB,EAAmB0d,EAC5EC,EAAuBC,EAAgBH,GACzC,GAAIwO,EAAUtgC,QAAU,EACtB,MAAM,IAAIJ,MAAM,8CAIlB,IAAM23B,EAAa,CAAC+I,EAAU,GAAIA,EAAU,IAI5C,OAFAvK,EAAa+2C,mBACTptC,EAAkBY,EAAW/I,EAAYljB,EAAS0d,EAAWC,EAAaC,EAAMH,GAC7EyF,CACT,EAYO,EAAAw1C,uBAAP,SACIzsC,EAA8B0sC,EAA+B34D,EAAmB0d,EAChFC,EAAuBC,EAAgBH,GACzC,GAAIwO,EAAUtgC,QAAU,GAAKgtE,EAAWhtE,QAAU,EAChD,MAAM,IAAIJ,MAAM,2DAIlB,IAAM23B,EAAa,CAAC+I,EAAU,GAAI0sC,EAAW,IAG7C,OADAj3C,EAAa+2C,oBAAmB,EAAOxsC,EAAW/I,EAAYljB,EAAS0d,EAAWC,EAAaC,EAAMH,GAC9FyF,CACT,EAKe,EAAAu1C,mBAAf,SACIptC,EAA2BY,EAA8B/I,EAAsBljB,EAC/E0d,EAA8BC,EAAgCC,EAAgBH,GAChF,GAAI4N,EACF,IAAK,IAAI98B,EAAM,EAAGA,EAAM09B,EAAUtgC,OAAS,EAAG4C,IAC5C20B,EAAWt3B,KAAK,QAGlB,IAAS2C,EAAM,EAAGA,EAAM09B,EAAUtgC,OAAS,EAAG4C,IAC5C20B,EAAWt3B,KAAK81B,EAAa82C,wBACzBvsC,EAAU19B,EAAM,GAAIyR,EAAQzR,GAAMmvB,EAAUnvB,GAAMovB,EAAYpvB,GAAMqvB,EAAMrvB,EAAKA,EAAM09B,EAAUtgC,OAAS,EACxG8xB,GAGV,EAIe,EAAA+6C,wBAAf,SACII,EAAgBjpE,EAAgBuvB,EAAkBD,EAAgBrB,EAAgBi7C,EAClFC,EAAsBr7C,GACxB,IAAMs7C,EAAU75C,GAAYD,EAAS,GAAK,EAC1C,IAAIxB,GAAuB,WAAZA,EAsBb,OAAO5mB,KAAKyc,OAAQslD,EAASh7C,EAAKi7C,GAAgBj7C,EAAKk7C,GAAgBC,GAAWppE,EAAU,GArB5F,OAAQ8tB,GACN,IAAK,QAGH,OAFAG,EAAKi7C,GAAgB,EACrBj7C,EAAKk7C,GAAgB,EACdjiE,KAAKyc,OAAQslD,EAASG,GAAWppE,EAAU,GACpD,IAAK,aACL,IAAK,aACH,GAAiB,IAAbuvB,EACF,MAAM,IAAI3zB,MAAM,uDAEhB,IACMytE,IADoBJ,EAASjpE,EAAS,GAAKA,EACX,GAAKA,EAASsvB,EAAS25C,EAI7D,OAHAh7C,EAAKi7C,GACY,eAAZp7C,EAA4B5mB,KAAKyc,OAAO0lD,EAAY,GAAK,GAAKniE,KAAKyc,MAAM0lD,EAAY,GAC1Fp7C,EAAKk7C,GAAgBE,EAAYp7C,EAAKi7C,GAC/BhiE,KAAKyc,OAAQslD,EAASI,EAAY/5C,GAAUtvB,EAAU,GAEjE,QACE,MAAM,IAAIpE,MAAM,4BAKxB,EACF,EAxMA,GAAa,EAAAm2B,aAAAA,EA0MA,EAAAmC,UAAY,qBACZ,EAAAC,SAAW,qBAExB,4BAAiCj1B,GAC/B,OAAO,IAAIoqE,aAAcjyD,OAAOnY,EAClC,C,8mECnuCA,cAEA,UAEA,UACA,UACA,UA2BA,0BAiBE,KAAAqqE,gBAA+B,KAmC/B,KAAAC,eAAyC,KACzC,KAAAC,mBAAiD,KACjD,KAAAC,sBAAwB,EAExB,KAAAC,kBAAmB,CAsQrB,QA7RE,sBAAI,sCAAuB,C,IAA3B,WACE,GAA6B,OAAzBvtE,KAAKmtE,gBACP,MAAM,IAAI3tE,MAAM,2EAGlB,IAAIgC,EAAOxB,KAAKwtE,iBAAiBprE,IAAIpC,KAAKmtE,iBAM1C,OALK3rE,IACHA,EAAO,CAAC,EACRxB,KAAKwtE,iBAAiBzrE,IAAI/B,KAAKmtE,gBAAiB3rE,IAG3CA,CACT,E,gCAeM,YAAAsO,WAAN,W,oGACE,IAAKnF,UAAU8iE,IAEb,MAAM,IAAIjuE,MAAM,2CAGF,SAAMmL,UAAU8iE,IAAIC,kB,OACpC,KADMC,EAAU,UAEd,MAAM,IAAInuE,MAAM,6CAkBJ,OAfRouE,EAAwC,CAC5CC,eAAgB,CACdC,+BAAgCH,EAAQI,OAAOD,+BAC/CE,iCAAkCL,EAAQI,OAAOC,iCACjDC,4BAA6BN,EAAQI,OAAOE,8BAK5CN,EAAQO,SAASvzD,IAAI,kCAAiE,YAA7B,EAAA7a,IAAIK,OAAOguE,gBACtEnuE,KAAKutE,kBAAmB,EAExBK,EAAiBQ,iBAAmB,CAAC,kCAGvC,EAAApuE,KAAc,GAAM2tE,EAAQU,cAAcT,I,cAA1C,EAAKU,OAAS,SACdtuE,KAAKuuE,gBAAiB,IAAAC,sBAAqBxuE,MAC3CA,KAAKohB,eAAiB,IAAI,EAAAqtB,eAAezuC,MACzCA,KAAK+/D,QAAU,IAAIv/D,IACnBR,KAAKyuE,qBAAuB,IAAIjuE,IAChCR,KAAKwtE,iBAAmB,IAAIhtE,IAG5BR,KAAKsuE,OAAOI,kBAAoB,SAAAC,GAC1BA,EAAGziC,iBAAiB0iC,oBAEtBpqB,QAAQtY,MAAM,0DAAmDyiC,EAAGziC,MAAM2iC,SAE9E,EAEI7uE,KAAKutE,mBACPvtE,KAAK8uE,kBAAoB9uE,KAAKsuE,OAAOS,eAAe,CAClDxtE,KAAM,YACN2lC,MAAO,K,YAKb,YAAAn3B,QAAA,WAKA,EAEA,YAAAi/D,kBAAA,WAIE,OAHKhvE,KAAKotE,iBACRptE,KAAKotE,eAAiBptE,KAAKsuE,OAAOW,wBAE7BjvE,KAAKotE,cACd,EAEA,YAAA8B,sBAAA,WAIE,OAHKlvE,KAAKqtE,qBACRrtE,KAAKqtE,mBAAqBrtE,KAAKgvE,oBAAoBG,oBAE9CnvE,KAAKqtE,kBACd,EAEA,YAAA+B,eAAA,WACMpvE,KAAKqtE,qBACPrtE,KAAKqtE,mBAAmBtoC,MACxB/kC,KAAKqtE,mBAAqB,KAE9B,EAEA,YAAAxwB,MAAA,WACE78C,KAAKovE,iBACLpvE,KAAKsuE,OAAOe,MAAMC,OAAO,CAACtvE,KAAKgvE,oBAAoBv1B,WACnDz5C,KAAKuuE,eAAegB,wBACpBvvE,KAAKotE,eAAiB,KACtBptE,KAAKstE,sBAAwB,CAC/B,EAcA,YAAArlE,IAAA,SAAI0Y,EAAwCC,EAA+B6nD,EACvE+G,EACAC,GACF,GAAI7uD,EAAOhhB,SAAW+gB,EAAQE,WAAWjhB,OACvC,MAAM,IAAIJ,MAAM,sCAA+BmhB,EAAQE,WAAWjhB,OAAM,MAK1E,IADA,IAAM8vE,EAAwB,GACrBjwE,EAAI,EAAGA,EAAImhB,EAAOhhB,SAAUH,EAAG,CAEtC,KADMkwE,EAAU3vE,KAAKuuE,eAAensE,IAAIwe,EAAOnhB,GAAG+B,OAEhD,MAAM,IAAIhC,MAAM,iCAA0BohB,EAAOnhB,GAAG+B,OAEtDkuE,EAAWjwE,GAAKkwE,C,CAGlB,IAAMxnE,EA9LN,SAACoM,EAA4Cq7D,EAC5CC,GACC,IAAMC,EAA4BF,EAAkB9mE,KAAI,SAAAkN,GAAK,gBAAGA,EAAEvM,KAAK,KAAV,IAAkBA,KAAK,KAC9EsmE,EAA4BF,EAAkBpmE,KAAK,KACrDtB,EAAMoM,EAAYvV,KAKtB,OAJIuV,EAAY0M,YACd9Y,GAAO,IAAMoM,EAAY0M,UAAY,KAEvC9Y,EAAO,IAAM2nE,EAA4B,IAAMC,CAEjD,CAoLY7uD,CAAwBP,EAASC,EAAO9X,KAAI,SAAArJ,GAAK,OAAAA,EAAEgC,IAAF,IAASiuE,EAAW5mE,KAAI,SAAArJ,GAAK,OAAAA,EAAE8B,IAAF,KACtF4f,EAAWnhB,KAAKohB,eAAeC,YAAYlZ,GACzCoM,EAAc4M,EAChBA,EAAS5M,YACsC,mBAAtCoM,EAA8Bve,IAAsBue,EAA8Bve,MAC9Bue,EAG3DqvD,EAAkD,IAAzBvH,EAAc7oE,OAAe2U,EAAY+yB,QAAQx+B,KAAI,SAACw9B,EAAG7mC,GAAM,OAAAA,CAAA,IAAKgpE,EACnG,GAAIuH,EAAuBpwE,SAAW2U,EAAY+yB,QAAQ1nC,OACxD,MAAM,IAAIJ,MAAM,sBAAewwE,EAAuBpwE,OAAM,6BAAqB2U,EAAY+yB,QAAQ1nC,OAAM,MAI7G,IAAMqwE,EAAkC,GAClCC,EAAyB,GAC/B,IAASzwE,EAAI,EAAGA,EAAI8U,EAAY+yB,QAAQ1nC,SAAUH,EAAG,CAGnD,IAAKgD,OAAOgI,UAAUulE,EAAuBvwE,KAAOuwE,EAAuBvwE,IAAM,GAC7EuwE,EAAuBvwE,IAAM8U,EAAY+yB,QAAQ1nC,OACnD,MAAM,IAAIJ,MAAM,gCAAyBwwE,EAAuBvwE,KAElE,IAKMkwE,EALAQ,GAA6C,IAA/BH,EAAuBvwE,GACrC2wE,GAA8C,IAA/BJ,EAAuBvwE,GACtC4wE,EAAcF,GAAeC,EAC/BX,EAAyBl7D,EAAY+yB,QAAQ7nC,GAAGyjB,SAAU3O,EAAY+yB,QAAQ7nC,GAAGgC,MACjF+tE,EAAmBQ,EAAuBvwE,GAAI8U,EAAY+yB,QAAQ7nC,GAAGyjB,SAAU3O,EAAY+yB,QAAQ7nC,GAAGgC,MAE1G,KADMkuE,EAAU3vE,KAAKuuE,eAAensE,IAAIiuE,EAAW7uE,OAEjD,MAAM,IAAIhC,MAAM,kCAA2B6wE,EAAW7uE,OAKxD,GAHI2uE,GACFnwE,KAAKswE,cAAczwE,KAAK8vE,GAEtBS,EAAc,CAChB,IAAIG,EAAiBvwE,KAAKyuE,qBAAqBrsE,IAAIpC,KAAKmtE,iBACnDoD,IACHA,EAAiB,GACjBvwE,KAAKyuE,qBAAqB1sE,IAAI/B,KAAKmtE,gBAAkBoD,IAEvDA,EAAe1wE,KAAK8vE,E,CAEtBM,EAAkBpwE,KAAKwwE,GACvBH,EAAYrwE,KAAK8vE,E,CAGnB,IAAMa,EAA0BxwE,KAAKohB,eAAeqvD,2BAA2Bl8D,EAAYm8D,cAAc9vD,IAazG,OAXKO,IACHA,EAAWnhB,KAAKohB,eAAeK,MAAMlN,EAAai8D,GAClDxwE,KAAKohB,eAAeM,YAAYvZ,EAAKgZ,KAGvC,IAAAwvD,WACI,QACA,WAAM,sCAAyBp8D,EAAYvV,KAAI,kBAAUmJ,EAAG,kBAAUqoE,EAAwB,GAAE,YAC5FA,EAAwB,GAAE,YAAIA,EAAwB,GADpD,IAEVxwE,KAAKohB,eAAenZ,IAAIkZ,EAAUuuD,EAAYQ,EAAaM,GAEpDP,CACT,EAEA,YAAAW,OAAA,SAAOC,EAAmBrvE,GACxBxB,KAAKuuE,eAAeqC,OAAOC,EAAWrvE,EACxC,EAEA,YAAAsvE,OAAA,SAAO7qE,EAAa8qE,GAClB/wE,KAAKuuE,eAAeuC,OAAO7qE,EAAK8qE,EAClC,EAEM,YAAAC,SAAN,SAAeH,EAAmBI,G,gGACZ,SAAMjxE,KAAKuuE,eAAeyC,SAASH,I,cAAjDxO,EAAc,SAIP4O,IACRlvE,IAAI,IAAIrB,WAAW2hE,I,YAG1B,YAAA6O,MAAA,SAAM3uE,GACJ,OAAOvC,KAAKuuE,eAAe7nB,OAAOnkD,GAAM4uE,EAC1C,EAEA,YAAAC,KAAA,SAAKC,GACH,OAAOrxE,KAAKuuE,eAAe+C,QAAQD,EACrC,EAEA,YAAAE,aAAA,SAAavyE,EAAcwyE,EAAkBnmE,GAC3C,IAAMkkC,EAAK,EAAAkiC,wBAAwBrvE,IAAIpD,GACvC,IAAKuwC,EACH,MAAM,IAAI/vC,MAAM,kCAA2BR,IAG7CgB,KAAK+/D,QAAQh+D,IAAIyvE,EAAU,CAACxyE,EAAMuwC,EAAG,GAAI,CAACA,EAAG,GAAIlkC,IACnD,EAEA,YAAAqmE,cAAA,SAAcF,G,QACNjB,EAAiBvwE,KAAKyuE,qBAAqBrsE,IAAIovE,GACrD,GAAIjB,EAAgB,C,IAClB,IAAmB,QAAAA,GAAc,8BAAE,CAA9B,IAAM/uE,EAAI,QACbxB,KAAKuuE,eAAe+C,QAAQ9vE,EAAK2vE,G,mGAEnCnxE,KAAKyuE,qBAAqBliE,OAAOilE,E,CAGnCxxE,KAAKwtE,iBAAiBjhE,OAAOilE,GAC7BxxE,KAAK+/D,QAAQxzD,OAAOilE,EACtB,EAEA,YAAAG,cAAA,SAAcH,EAAkB3rE,G,QACxBqtB,EAASlzB,KAAK+/D,QAAQ39D,IAAIovE,GAChC,IAAKt+C,EACH,MAAM,IAAI1zB,MAAM,8BAAuBgyE,IAEnC,QAAkCt+C,EAAM,GAAvCl0B,EAAI,KAAE4yE,EAAW,KAAE7lE,EAAU,KACpC,GAA6B,OAAzB/L,KAAKmtE,gBACP,MAAM,IAAI3tE,MAAM,kBAAWR,EAAI,8CAEjCgB,KAAKmtE,gBAAkBqE,EAGnBzlE,EAAW,KACbA,EAAW,GAAKA,EAAW,GAAGA,EAAW,IACzCA,EAAW,QAAKxM,IAGlB,IAAAoxE,WAAU,QAAQ,WAAM,8CAAiC3xE,EAAI,OAArC,IAExBgB,KAAKswE,cAAgB,GACrB,IAEE,OADAsB,EAAY/rE,EAASkG,EAAW,IACzB,C,CACP,MAAOxC,GAEP,OADA,IAAAonE,WAAU,UAAW,2BAAoB3xE,EAAI,4BAAoBuK,IAC1D,C,aAEP,IAAmB,QAAAvJ,KAAKswE,eAAa,8BAAE,CAAlC,IAAM9uE,EAAI,QACbxB,KAAKuuE,eAAe+C,QAAQ9vE,EAAK2vE,G,mGAEnCnxE,KAAKswE,cAAgB,GACrBtwE,KAAKmtE,gBAAkB,I,CAE3B,EACF,EA9TA,GAAa,EAAA0E,cAAAA,C,u/CChCb,cAEA,UACA,UAEA,UAKA,aACE,WACYpzE,EAAuCykB,EAAkC1hB,EACjEC,GADR,KAAAhD,OAAAA,EAAuC,KAAAykB,SAAAA,EAAkC,KAAA1hB,KAAAA,EACjE,KAAAC,KAAAA,CAA0B,CAYhD,OAVE,YAAAqwE,gBAAA,WACE,OAAO,IAAIrxE,aAAaT,KAAKvB,OAAOszE,MAAMjvE,OAAQ9C,KAAKwB,KAAM,EAAA2U,UAAU5T,KAAKvC,KAAKyB,MACnF,EAEA,YAAAyF,QAAA,SAAQ8qE,GACN,GAAI,EAAA77D,UAAU5T,KAAKyvE,KAAa,EAAA77D,UAAU5T,KAAKvC,KAAKyB,MAClD,MAAM,IAAIjC,MAAM,qBAElB,OAAO,IAAIyyE,EAAejyE,KAAKvB,OAAQuB,KAAKkjB,SAAUljB,KAAKwB,KAAMwwE,EACnE,EACF,EAfA,GAiBA,aAME,WAAoBvzE,EAA+BQ,EAAwBizE,GAAvD,KAAAzzE,OAAAA,EAA+B,KAAAQ,QAAAA,EACjD,IAAMkzE,EAAU1zE,EAAO2zE,QAGnB3wB,EAAaywB,GAAqB,EACtClyE,KAAKqyE,gBAAkBF,EAAQ1wB,KAI/B,IAHA,IAAM/yB,EAAayjD,EAAQ1wB,KAErB7gC,EAAuB,GACpBnhB,EAAI,EAAGA,EAAIivB,EAAYjvB,IAAK,CAKnC,IAJA,IAAMyjB,EAAWivD,EAAQ1wB,KACnBjgD,EAAO2wE,EAAQ1wB,KACfj/C,EAAM2vE,EAAQ1wB,KACdhgD,EAAiB,GACduU,EAAI,EAAGA,EAAIxT,EAAKwT,IACvBvU,EAAK5B,KAAKsyE,EAAQ1wB,MAEpB7gC,EAAO/gB,KAAK,IAAIoyE,EAAexzE,EAAQykB,EAAU1hB,EAAMC,G,CAEzDzB,KAAK4gB,OAASA,CAChB,CAoCF,OA3DE,sBAAI,yBAAU,C,IAAd,WACE,OAAO5gB,KAAKf,QAAQqzE,uBACtB,E,gCAuBA,YAAAC,QAAA,SAAQ5xD,EAAwC6xD,GAAhD,I,MAAA,OAGQC,EACgF,QAAlF,EAA4B,QAA5B,EAAAD,aAAoB,EAApBA,EAAsB5xD,cAAM,eAAE9X,KAAI,SAAArJ,GAAK,MAAa,iBAANA,EAAiB,EAAKmhB,OAAOnhB,GAAKA,CAAzC,WAA2C,QAAIO,KAAK4gB,OAEzF6nD,EAA6C,QAA7B,EAAA+J,aAAoB,EAApBA,EAAsBlrC,eAAO,QAAI,GAWvD,OAAOtnC,KAAKf,QAAQgJ,IAAI0Y,EAAS8xD,EAAchK,GAVpB,SAACpwD,EAAe6K,EAAkBzhB,GACzD,WAAIwwE,EAAe,EAAKxzE,OAAQykB,EAAU,EAAKtQ,OAAOyF,EAAO5W,GAAOA,EAApE,IAC0B,SAACyhB,EAAkBzhB,GAC/C,IAAMmjE,GAAc,IAAA8N,sBAAqBxvD,GACzC,IAAK0hD,EACH,MAAM,IAAIplE,MAAM,iCAA0B0jB,IAE5C,IAAMyvD,EAAa/N,EAAc,EAAAzuD,UAAU5T,KAAKd,GAChD,OAAO,IAAIwwE,EAAe,EAAKxzE,OAAQykB,EAAU,EAAKjkB,QAAQsvE,eAAe7nB,OAAOisB,GAAYxB,GAAI1vE,EACtG,GAEF,EAEA,YAAAmR,OAAA,SAAOyF,EAAe5W,GACpB,IAAM+jD,EAAQxlD,KAAKvB,OAAOm0E,YAC1B,IACE,IAAMpxE,EAAOxB,KAAKvB,OAAOo0E,WAA+B,GAAnB,EAAIpxE,EAAK7B,SAC1C6nC,EAASjmC,GAAQ,EACrBxB,KAAKvB,OAAO2zE,QAAQ3qC,KAAYhmC,EAAK7B,OACrC,IAAK,IAAIH,EAAI,EAAGA,EAAIgC,EAAK7B,OAAQH,IAC/BO,KAAKvB,OAAO2zE,QAAQ3qC,KAAYhmC,EAAKhC,GAEvC,OAAOO,KAAKvB,OAAOq0E,YAAY9yE,KAAKqyE,gBAAiBh6D,EAAO7W,E,SAE5DxB,KAAKvB,OAAOs0E,aAAavtB,E,CAE7B,EACF,EA9DA,GAgEa,EAAArmD,KAAO,SAAMV,GAAqB,0C,iEACvCU,EAAOV,EAAOu0E,WACRroE,UAAU8iE,IAEpB,IADM,EAAU,IAAI,EAAAoE,eACN/hE,cAFZ,M,OAEF,SAEA3Q,EAEI,CAACF,QAAO,IAGR,SAACsD,GAAiB,SAAQ2uE,MAAM3uE,EAAd,IAGlB,SAAC8uE,GAAgB,SAAQD,KAAKC,EAAb,IAGjB,SAACprE,EAAa8qE,EAAaxuE,EAAc0wE,GACvC,QADuC,IAAAA,IAAAA,GAAA,GACnCA,GACF,IAAAtC,WAAU,WAAW,WAAM,+CAAkC1qE,EAAG,iBAAS8qE,EAAG,kBAAUxuE,EAA3D,IAC3B,EAAQuuE,OAAO7qE,EAAK8qE,OACf,EACL,IAAAJ,WAAU,WAAW,WAAM,sDAAyC1qE,EAAG,uBAAe8qE,EAAG,kBAAUxuE,EAAxE,IAC3B,IAAMf,EAAO/C,EAAOy0E,OAAOtwD,SAAS3c,EAAKA,EAAM1D,GAC/C,EAAQquE,OAAOG,EAAKvvE,E,CAExB,IAGA,SAAMqvE,EAAmBsC,EAAoB5wE,GAAY,0C,kDAMnD,OAJA,IAAAouE,WACI,WACA,WAAM,qDAAwCE,EAAS,wBAAgBsC,EAAU,kBAAU5wE,EAArF,IAEV,GAAM,EAAQyuE,SAASH,GAAW,WAAM,OAAApyE,EAAOy0E,OAAOtwD,SAASuwD,EAAYA,EAAa5wE,EAAhD,K,cAAxC,S,cAIN,SAACvD,EAAck0B,EAAgB7nB,GAAuB,SAAQkmE,aAAavyE,EAAMk0B,EAAQ7nB,EAAnC,IAGtD,SAAC6nB,GAAmB,SAAQw+C,cAAcx+C,EAAtB,IAGpB,SAACA,EAAgBg/C,IACf,IAAAvB,WAAU,WAAW,WAAM,yCAA4Bz9C,EAAM,+BAAuBg/C,EAAzD,IAC3B,IAAMrsE,EAAU,IAAIutE,EAAmB30E,EAAQ,EAASyzE,GACxD,OAAO,EAAQP,cAAcz+C,EAAQrtB,EACvC,I,6pBC7IR,cAEA,UAOMwtE,EAAiB,CAAC,IAAK,IAAK,IAAK,IAAK,KAU/B,EAAAC,IAAM,SAACjzE,EAAoB4mE,GACtC,IATasM,EAAe1E,EAStB2E,GAAe,IAAAC,sBAAqBpzE,GAEtCmzE,IADgB,IAAAC,sBAAqB,EAAA3zE,IAAIO,YAVhCkzE,EAYLC,EAZoB3E,EAYS,mBAAR5H,EAAqBA,IAAQA,EAV1DziB,QAAQ97B,IAAI,WAAI2qD,EAAeE,GAAM,aAAI,IAAI9tB,MAAOC,cAAa,YAAImpB,IAYvE,EAKa,EAAA8B,UAAwB,W,IAAC,sDAChC,EAAA7wE,IAAImtC,OACN,EAAAqmC,IAAG,oBAAII,IAAI,GAEf,C,oeChCA,8BAUA,QAHS,EAAAlM,gBAAP,SAAuBjsD,EAAqBxH,GAC1C,OAAQwH,EAAE,KAAOxH,EAAE,QAAMxU,EAAY,CAACgc,EAAE,GAAIxH,EAAE,GAChD,EACF,EAVA,GAAa,EAAA0zD,WAAAA,EAab,8BAiEA,QAzDS,EAAAx5C,UAAP,SAAiBy5C,EAA0BC,EAA0BC,G,WAAA,IAAAA,IAAAA,GAAA,GACnE,IAAMrqC,EAAQmqC,EAAM9nE,OACd49B,EAAQmqC,EAAM/nE,OACpB,GAAc,IAAV29B,EACF,OAAOoqC,EAET,GAAc,IAAVnqC,EACF,OAAOkqC,EAET,IAAMG,EAAQ/8D,KAAK47B,IAAIghC,EAAM9nE,OAAQ+nE,EAAM/nE,QACrCkoE,EAAQ,IAAI7lE,MAAc4lE,GAGhC,GAAID,EAAU,CACZ,GAAIrqC,EAAQ,GAAKC,EAAQ,EACvB,OAEF,IAAMuqC,EACFN,EAAWD,gBAAgB,CAACE,EAAMnqC,EAAQ,GAAImqC,EAAMnqC,EAAQ,IAAK,CAACoqC,EAAMnqC,EAAQ,GAAImqC,EAAMnqC,EAAQ,KACtG,QAAqBj+B,IAAjBwoE,EACF,OAEF,IAAuCA,EAAY,GAAlDD,EAAMD,EAAQ,GAAE,KAAEC,EAAMD,EAAQ,GAAE,I,CAGrC,IAAK,IAAIpoE,EAAImoE,EAAW,EAAI,EAAGnoE,GAAKooE,EAAOpoE,IAAK,CAC9C,IAAMuoE,EAAOzqC,EAAQ99B,EAAI,EAAI,EAAIioE,EAAMnqC,EAAQ99B,GACzCwoE,EAAOzqC,EAAQ/9B,EAAI,EAAI,EAAIkoE,EAAMnqC,EAAQ/9B,GAE/C,GAAIuoE,IAASC,GAAQD,EAAO,GAAKC,EAAO,EACtC,OAEFH,EAAMD,EAAQpoE,GAAKqL,KAAK47B,IAAIshC,EAAMC,E,CAGpC,OAAOH,CACT,EAOO,EAAAmB,iBAAP,SAAwB71D,EAA0B81D,GAEhD,IAAMtrC,EAAYxqB,EAAMxT,OAClBupE,EAAYD,EAAWtpE,OAC7B,GAAIg+B,EAAYurC,EACd,OAAO,EAET,IAAK,IAAI1pE,EAAI,EAAGA,GAAKm+B,EAAWn+B,IAC9B,GAA6B,IAAzB2T,EAAMwqB,EAAYn+B,IAAY2T,EAAMwqB,EAAYn+B,KAAOypE,EAAWC,EAAY1pE,GAChF,OAAO,EAGX,OAAO,CACT,EACF,EAjEA,GAAa,EAAAiW,cAAAA,EAoEb,8BA+GA,QA3GS,EAAAnT,KAAP,SAAYd,GACV,OAAO0U,EAAUs0D,0BAA0BhpE,EAAM,EAAGA,EAAK7B,OAC3D,EAKO,EAAAomC,kBAAP,SAAyBvkC,EAAyBotB,GAChD,GAAIA,EAAO,GAAKA,EAAOptB,EAAK7B,OAC1B,MAAM,IAAIJ,MAAM,+BAAwBqvB,EAAI,gDAAwCptB,EAAK7B,OAAM,iBAEjG,OAAOuW,EAAUs0D,0BAA0BhpE,EAAMotB,EAAMptB,EAAK7B,OAC9D,EAKO,EAAAkmC,gBAAP,SAAuBrkC,EAAyBotB,GAC9C,GAAIA,EAAO,GAAKA,EAAOptB,EAAK7B,OAC1B,MAAM,IAAIJ,MAAM,+BAAwBqvB,EAAI,8CAAsCptB,EAAK7B,OAAM,iBAE/F,OAAOuW,EAAUs0D,0BAA0BhpE,EAAM,EAAGotB,EACtD,EAKO,EAAA47C,0BAAP,SAAiChpE,EAAyB2+B,EAAe2E,GAEvE,IADA,IAAIxiC,EAAO,EACF9C,EAAI2gC,EAAO3gC,EAAIslC,EAAKtlC,IAAK,CAGhC,GAAIgC,EAAKhC,IAAM,EACb,MAAM,IAAID,MAEN,sHAEN+C,GAAQd,EAAKhC,E,CAEf,OAAO8C,CACT,EAEO,EAAAshB,eAAP,SAAsBpiB,GACpB,IAAMuS,EAAOvS,EAAK7B,OAClB,GAAa,IAAToU,EACF,MAAO,GACF,GAAa,IAATA,EACT,MAAO,CAAC,GAEV,IAAMC,EAAU,IAAIhS,MAAM+R,GAC1BC,EAAQD,EAAO,GAAK,EACpBC,EAAQD,EAAO,GAAKvS,EAAKuS,EAAO,GAChC,IAAK,IAAIvU,EAAIuU,EAAO,EAAGvU,GAAK,IAAKA,EAC/BwU,EAAQxU,GAAKwU,EAAQxU,EAAI,GAAKgC,EAAKhC,EAAI,GAEzC,OAAOwU,CACT,EAKO,EAAAkkB,cAAP,SAAqBtJ,EAAckC,GACjC,GAAIlC,GAAQkC,GAAclC,GAAQkC,EAChC,MAAM,IAAIvxB,MAAM,wCAElB,OAAOqvB,EAAO,EAAIA,EAAOkC,EAAalC,CACxC,EAEO,EAAA0T,cAAP,SAAqBJ,EAAyBpR,GAA9C,WACE,OAAOoR,EAAKr5B,KAAI,SAAAgnB,GAAK,SAAKqI,cAAcrI,EAAGiB,QAAAA,EAAcoR,EAAKviC,OAAzC,GACvB,EAQO,EAAA2oC,gBAAP,SAAuBhtB,EAAsB6a,GAC3C,OAAIA,EACKA,EAAKttB,KAAI,SAAChB,GAAM,OAAAyT,EAAEzT,EAAF,IAEhByT,EAAE9D,QAAQsB,SAErB,EAOO,EAAA8lB,SAAP,SAAgBp9B,EAAyBypE,GACvC,IAAMl3D,EAAOvS,EAAK7B,OAClB,OAAO6B,EAAKqH,KAAI,SAAChB,EAAGrI,GAAM,OAAAqI,EAAIojE,EAAIzrE,GAAKyrE,EAAIzrE,EAAIuU,EAArB,GAC5B,EAOO,EAAA6Z,SAAP,SAAgBs9C,EAA2BC,GACzC,OAAID,EAAOvrE,SAAWwrE,EAAOxrE,QAGtBurE,EAAOvnC,OAAM,SAAC97B,EAAGrI,GAAM,OAAAqI,IAAMsjE,EAAO3rE,EAAb,GAChC,EACF,EA/GA,GAAa,EAAA0W,UAAAA,EAiHb,8BAwMA,QA9LS,EAAA2pB,qBAAP,SACIR,EAA2BY,EAA8BtO,EAAuB3d,EAChF0d,EAAqBE,GACvB,IAAKyN,GAAoB1N,EAAYhyB,SAAWsgC,EAAUtgC,OAAS,EACjE,MAAM,IAAIJ,MAAM,sFAGlB,GAAI8/B,EAEF,IAAK,IAAI98B,EAAM,EAAGA,EAAM09B,EAAUtgC,OAAS,EAAG4C,IACxCA,GAAOovB,EAAYhyB,OACrBgyB,EAAY/xB,KAAKqgC,EAAU19B,EAAM,IAEjCovB,EAAYpvB,GAAO09B,EAAU19B,EAAM,GAMzC,IAASA,EAAM,EAAGA,EAAMovB,EAAYhyB,OAAQ4C,IAC1C,GAAIA,EAAMyR,EAAQrU,QAChB,GAAIqU,EAAQzR,GAAO,EACjB,MAAM,IAAIhD,MAAM,qDAGlByU,EAAQpU,KAAK,GAKjB,IAAS2C,EAAM,EAAGA,EAAMovB,EAAYhyB,OAAQ4C,IAC1C,GAAIA,EAAMmvB,EAAU/xB,QAClB,GAAI+xB,EAAUnvB,GAAO,EACnB,MAAM,IAAIhD,MAAM,uDAGlBmyB,EAAU9xB,KAAK,GAKnB,IAAS2C,EAAM,EAAGA,EAA2B,EAArBovB,EAAYhyB,OAAY4C,IAC9C,GAAIA,EAAMqvB,EAAKjyB,QACb,GAAIiyB,EAAKrvB,GAAO,EACd,MAAM,IAAIhD,MAAM,iDAGlBqyB,EAAKhyB,KAAK,GAKd,IAAS2C,EAAM,EAAGA,EAAMovB,EAAYhyB,OAAQ4C,IAAO,CACjD,GAAIovB,EAAYpvB,IAAQ,EACtB,MAAM,IAAIhD,MAAM,2CAGlB,GAAIqyB,EAAKrvB,IAAQovB,EAAYpvB,IAAQqvB,EAAKrvB,EAAMovB,EAAYhyB,SAAWgyB,EAAYpvB,GACjF,MAAM,IAAIhD,MAAM,qC,CAGtB,EAGO,EAAAo2B,yBAAP,SACIsK,EAA8BjsB,EAA4B0d,EAC1DC,EAAgCC,EAAgB8hD,EAAwBjiD,GAC1E,GAAKA,EAAL,CAIA,GAAIG,EAAKjyB,SAAW,GAAKsgC,EAAUtgC,OAAS,GAC1C,MAAM,IAAIJ,MAAM,gEAGlB,GAAIyU,EAAQrU,SAAYsgC,EAAUtgC,OAAS,EACzC,MAAM,IAAIJ,MAAM,6DAGlB,GAAIoyB,EAAYhyB,SAAYsgC,EAAUtgC,OAAS,EAC7C,MAAM,IAAIJ,MAAM,mEAGlB,IAAK,IAAIgD,EAAM,EAAGA,EAAM09B,EAAUtgC,OAAS,EAAG4C,IAC5CmzB,EAAa82C,wBACTvsC,EAAU19B,GAAOmxE,EAAgB,EAAI,IAAK1/D,EAAQzR,GAAMmvB,EAAUnvB,GAAMovB,EAAYpvB,GAAMqvB,EAAMrvB,EAChGA,EAAM09B,EAAUtgC,OAAS,EAAG8xB,E,CAEpC,EAaO,EAAAqO,uBAAP,SACIT,EAA2BY,EAA8BjsB,EAAmB0d,EAC5EC,EAAuBC,EAAgBH,GACzC,GAAIwO,EAAUtgC,QAAU,EACtB,MAAM,IAAIJ,MAAM,8CAIlB,IAAM23B,EAAa,CAAC+I,EAAU,GAAIA,EAAU,IAI5C,OAFAvK,EAAa+2C,mBACTptC,EAAkBY,EAAW/I,EAAYljB,EAAS0d,EAAWC,EAAaC,EAAMH,GAC7EyF,CACT,EAYO,EAAAw1C,uBAAP,SACIzsC,EAA8B0sC,EAA+B34D,EAAmB0d,EAChFC,EAAuBC,EAAgBH,GACzC,GAAIwO,EAAUtgC,QAAU,GAAKgtE,EAAWhtE,QAAU,EAChD,MAAM,IAAIJ,MAAM,2DAIlB,IAAM23B,EAAa,CAAC+I,EAAU,GAAI0sC,EAAW,IAG7C,OADAj3C,EAAa+2C,oBAAmB,EAAOxsC,EAAW/I,EAAYljB,EAAS0d,EAAWC,EAAaC,EAAMH,GAC9FyF,CACT,EAKe,EAAAu1C,mBAAf,SACIptC,EAA2BY,EAA8B/I,EAAsBljB,EAC/E0d,EAA8BC,EAAgCC,EAAgBH,GAChF,GAAI4N,EACF,IAAK,IAAI98B,EAAM,EAAGA,EAAM09B,EAAUtgC,OAAS,EAAG4C,IAC5C20B,EAAWt3B,KAAK,QAGlB,IAAS2C,EAAM,EAAGA,EAAM09B,EAAUtgC,OAAS,EAAG4C,IAC5C20B,EAAWt3B,KAAK81B,EAAa82C,wBACzBvsC,EAAU19B,EAAM,GAAIyR,EAAQzR,GAAMmvB,EAAUnvB,GAAMovB,EAAYpvB,GAAMqvB,EAAMrvB,EAAKA,EAAM09B,EAAUtgC,OAAS,EACxG8xB,GAGV,EAIe,EAAA+6C,wBAAf,SACII,EAAgBjpE,EAAgBuvB,EAAkBD,EAAgBrB,EAAgBi7C,EAClFC,EAAsBr7C,GACxB,IAAMs7C,EAAU75C,GAAYD,EAAS,GAAK,EAC1C,IAAIxB,GAAuB,WAAZA,EAsBb,OAAO5mB,KAAKyc,OAAQslD,EAASh7C,EAAKi7C,GAAgBj7C,EAAKk7C,GAAgBC,GAAWppE,EAAU,GArB5F,OAAQ8tB,GACN,IAAK,QAGH,OAFAG,EAAKi7C,GAAgB,EACrBj7C,EAAKk7C,GAAgB,EACdjiE,KAAKyc,OAAQslD,EAASG,GAAWppE,EAAU,GACpD,IAAK,aACL,IAAK,aACH,GAAiB,IAAbuvB,EACF,MAAM,IAAI3zB,MAAM,uDAEhB,IACMytE,IADoBJ,EAASjpE,EAAS,GAAKA,EACX,GAAKA,EAASsvB,EAAS25C,EAI7D,OAHAh7C,EAAKi7C,GACY,eAAZp7C,EAA4B5mB,KAAKyc,OAAO0lD,EAAY,GAAK,GAAKniE,KAAKyc,MAAM0lD,EAAY,GAC1Fp7C,EAAKk7C,GAAgBE,EAAYp7C,EAAKi7C,GAC/BhiE,KAAKyc,OAAQslD,EAASI,EAAY/5C,GAAUtvB,EAAU,GAEjE,QACE,MAAM,IAAIpE,MAAM,4BAKxB,EACF,EAxMA,GAAa,EAAAm2B,aAAAA,EA0Mb,8BA+CA,QA3CS,EAAA0D,qBAAP,SACIowC,EAA8BC,EAAoBC,EAA+BC,EACjFC,GACF,GAAyB,IAArBJ,EAAU7pE,QAAsC,IAAtB+pE,EAAW/pE,OACvC,MAAM,IAAIJ,MAAM,8BAGlB,IAAIsqE,EACAC,EACAC,EAEAN,GACFI,EAAIL,EAAU,GACdM,EAAIN,EAAU,KAEdK,EAAIL,EAAU,GACdM,EAAIN,EAAU,IAGhB,IAAIQ,GAAQ,EAUZ,GARIL,GACFI,EAAIL,EAAW,GACfM,EAAO,IAEPD,EAAIL,EAAW,GACfM,EAAO,GAGLN,EAAWM,KAAUF,EACvB,MAAM,IAAIvqE,MAAM,sBAGlB,GAAIsqE,GAAK,GAAKE,GAAK,GAAKD,GAAK,EAC3B,MAAM,IAAIvqE,MAAM,2BAGlB,GAAIqqE,IAAcn0D,EAAcuzD,iBAAiBY,EAAW,CAACC,EAAGE,IAC9D,MAAM,IAAIxqE,MAAM,0CAGlB,MAAO,CAACsqE,EAAGE,EAAGD,EAChB,EACF,EA/CA,GAAa,EAAA3wC,SAAAA,EAkDA,EAAAtB,UAAY,qBACZ,EAAAC,SAAW,oB,uHCjcxB,iBACE,WAAY1sB,GACVzD,OAAO0D,OAAOtL,KAAMqL,EACtB,CAUF,OAPE,sBAAW,uBAAQ,C,IAAnB,sBAKE,OAJKrL,KAAKuL,YACRvL,KAAKuL,UACD3D,OAAOC,oBAAoB7H,MAAMwL,OAAO1C,KAAI,SAAA9J,GAAQ,gBAAI,EAAiCA,GAArC,IAA8CyK,KAAK,MAEtGzJ,KAAKuL,SACd,E,gCACF,EAbA,GAsBa,EAAAE,4BAA8B,SAAoCJ,GAC3E,WAAIK,EAA0BL,EAA9B,C,i1ECtBJ,cAEA,UAuDMuoE,EAA2B,SAACrxE,GAAiB,OAAuB,GAAvBuI,KAAKE,KAAKzI,EAAO,GAAjB,EAE/CsxE,EAAO,EAGX,aAYE,WAAoB50E,GAAA,KAAAA,QAAAA,EAClBe,KAAK8zE,aAAe,IAAItzE,IACxBR,KAAK+zE,cAAgB,IAAIvzE,IACzBR,KAAKg0E,2BAA6B,GAClCh0E,KAAKi0E,eAAiB,EACxB,CAgJF,OA9IE,YAAArD,OAAA,SAAOO,EAAe3vE,GACpB,IAAM0yE,EAAiB1yE,EAAKsB,OACtBqxE,EAAY3yE,EAAKkH,WACjB0rE,EAAY5yE,EAAKmH,WACjBpG,EAAOqxE,EAAyBQ,GAGhCC,EAAer0E,KAAK8zE,aAAa1xE,IAAI+uE,GAC3C,IAAKkD,EACH,MAAM,IAAI70E,MAAM,yCAElB,GAAI60E,EAAaC,eAAiBF,EAChC,MAAM,IAAI50E,MAAM,gDAAyC60E,EAAaC,aAAY,uBAAeF,IAInG,IAAMG,EAAwBv0E,KAAKf,QAAQqvE,OAAO30B,aAE9C,CAAC66B,kBAAkB,EAAMjyE,KAAI,EAAE4gB,MAAOsxD,eAAeC,UAAYD,eAAeE,WAG9EtS,EAAckS,EAAsBK,iBAC1C,IAAIl0E,WAAW2hE,GAAatgE,IAAI,IAAIrB,WAAWwzE,EAAgBC,EAAWC,IAC1EG,EAAsBM,QAItB,IAAMzH,EAAiBptE,KAAKf,QAAQ+vE,oBACpChvE,KAAKf,QAAQmwE,iBACbhC,EAAe0H,mBAAmBP,EAAuB,EAAGF,EAAa1E,QAAQ7sE,OAAQ,EAAGP,IAE5F,IAAAouE,WAAU,WAAW,WAAM,kDAAqCQ,EAAE,IAAvC,IAE3BnxE,KAAKg0E,2BAA2Bn0E,KAAK00E,EACvC,EAEA,YAAAzD,OAAA,SAAOiE,EAAqBC,GAE1B,IAAMC,EAAqBj1E,KAAK8zE,aAAa1xE,IAAI2yE,GACjD,IAAKE,EACH,MAAM,IAAIz1E,MAAM,6CAGlB,IAAM01E,EAA0Bl1E,KAAK8zE,aAAa1xE,IAAI4yE,GACtD,IAAKE,EACH,MAAM,IAAI11E,MAAM,kDAElB,GAAIy1E,EAAmBX,eAAiBY,EAAwBZ,aAC9D,MAAM,IAAI90E,MAAM,qDAElB,IAAM+C,EAAOqxE,EAAyBqB,EAAmBX,cAEzDt0E,KAAKf,QAAQ+vE,oBAAoB8F,mBAC7BG,EAAmBtF,QAAQ7sE,OAAQ,EAAGoyE,EAAwBvF,QAAQ7sE,OAAQ,EAAGP,EACvF,EAGA,YAAAmkD,OAAA,SAAOnkD,EAAc4gB,QAAA,IAAAA,IAAAA,EAAQsxD,eAAeU,QAAUV,eAAeE,SAAWF,eAAeW,UAM7F,IAAMzC,EAAaiB,EAAyBrxE,GAGtC8yE,EAAYr1E,KAAKf,QAAQqvE,OAAO30B,aAAa,CAACp3C,KAAMowE,EAAYxvD,MAAK,IAErEwsD,EAAU,CAACwB,GAzFY0C,IAyFctyE,KAAM,EAAA+zE,YAAYC,QAASzyE,OAAQuyE,GAI9E,OAHAr1E,KAAK8zE,aAAa/xE,IAAI4tE,EAAQwB,GAAI,CAACxB,QAAO,EAAE2E,aAAc/xE,KAE1D,IAAAouE,WAAU,WAAW,WAAM,oDAAuCpuE,EAAI,mBAAWotE,EAAQwB,GAA9D,IACpBxB,CACT,EAEA,YAAAvtE,IAAA,SAAI+uE,G,MACF,OAAgC,QAAzB,EAAAnxE,KAAK8zE,aAAa1xE,IAAI+uE,UAAG,eAAExB,OACpC,EAEA,YAAA2B,QAAA,SAAQH,GACN,IAAMqE,EAAax1E,KAAK8zE,aAAa1xE,IAAI+uE,GACzC,IAAKqE,EACH,MAAM,IAAIh2E,MAAM,iCAclB,OAXA,IAAAmxE,WAAU,WAAW,WAAM,mDAAsCQ,EAAE,wBAAgBqE,EAAW7F,QAAQwB,GAA3E,IAE3BnxE,KAAK8zE,aAAavnE,OAAO4kE,GACzBnxE,KAAKi0E,eAAep0E,KAAK21E,EAAW7F,QAAQ7sE,QAGpB9C,KAAK+zE,cAAc3xE,IAAI+uE,IAE7CnxE,KAAK+zE,cAAcxnE,OAAO4kE,GAGrBqE,EAAWlB,YACpB,EAEM,YAAAtD,SAAN,SAAeG,G,iFAEb,GADMsE,EAAez1E,KAAK+zE,cAAc3xE,IAAI+uE,GAE1C,MAAO,CAAP,EAAOsE,EAAaj0E,MAItB,KADMg0E,EAAax1E,KAAK8zE,aAAa1xE,IAAI+uE,IAEvC,MAAM,IAAI3xE,MAAM,uBAwBlB,OArBM4tE,EAAiBptE,KAAKf,QAAQ+vE,oBACpChvE,KAAKf,QAAQmwE,iBACPsG,EAAgB11E,KAAKf,QAAQqvE,OAAO30B,aAEtC,CAACp3C,KAAMizE,EAAWlB,aAAcnxD,MAAOsxD,eAAeW,SAAWX,eAAekB,WACpFvI,EAAe0H,mBACXU,EAAW7F,QAAQ7sE,OAA4B,EAAuB4yE,EACtE,EAA4BF,EAAWlB,cAE3Ct0E,KAAKf,QAAQ49C,QAEP+4B,EAAkB,IAAIlwE,SAAqB,SAACC,GAChD+vE,EAAcG,SAASC,WAAWC,MAAM7uB,MAAK,WAC3C,IAAM1lD,EAAOk0E,EAAcd,iBAAiBn9D,MAAM,GAClDi+D,EAAcM,UACdrwE,EAAQnE,EACV,GACF,IAEAxB,KAAK+zE,cAAchyE,IAAIovE,EAAI,CAAC3vE,KAAMo0E,IAE3B,CAAP,EAAOA,E,QAGT,YAAArG,sBAAA,W,gBACE,IAAqB,QAAAvvE,KAAKg0E,4BAA0B,8BAAnC,QACRgC,S,sGAET,IAAqB,QAAAh2E,KAAKi0E,gBAAc,8BAAvB,QACR+B,S,kGAEX,EACF,EAjKA,GAmKa,EAAAxH,qBAAuB,W,IAAC,sDACjC,WAAIyH,EAAkB,WAAlBA,EAAkB,aAAIvC,IAAI,IAA9B,C,8vBCnOJ,gBACA,UACA,UACA,UACA,aACA,UACA,aAOa,EAAAjC,wBAA+D,IAAIjxE,IAAI,CAClF,CAAC,MAAO,CAACglB,EAASC,MAClB,CAAC,OAAQ,CAACD,EAASE,OACnB,CAAC,QAAS,CAACF,EAAS0wD,QACpB,CAAC,MAAO,CAACvwD,EAAU/K,MACnB,CAAC,OAAQ,CAAC4K,EAASK,OACnB,CAAC,QAAS,CAACL,EAAS2wD,QACpB,CAAC,OAAQ,CAAC3wD,EAASM,OACnB,CAAC,QAAS,CAACN,EAAS4wD,QAEpB,CAAC,cAAe,CAACC,EAAKtwD,YAAaswD,EAAKrwD,6BACxC,CAAC,OAAQ,CAACR,EAASxa,OACnB,CAAC,UAAW,CAACwa,EAAS8wD,UACtB,CAAC,OAAQ,CAAC9wD,EAASY,OACnB,CAAC,OAAQ,CAAC,EAAAK,KAAM,EAAAC,sBAChB,CAAC,MAAO,CAAClB,EAASqB,MAClB,CAAC,OAAQ,CAACrB,EAAS+wD,OACnB,CAAC,MAAO,CAAC5wD,EAAUzF,MACnB,CAAC,MAAO,CAACsF,EAAS0B,IAAK1B,EAASgxD,uBAChC,CAAC,MAAO,CAAChxD,EAASixD,MAClB,CAAC,MAAO,CAACjxD,EAAS4B,MAClB,CAAC,QAAS,CAAC5B,EAAS+B,QACpB,CAAC,OAAQ,CAAC,EAAAG,KAAM,EAAAiR,sBAChB,CAAC,oBAAqB,CAAC09C,EAAKxuD,kBAAmBwuD,EAAKvuD,mCACpD,CAAC,gBAAiB,CAACuuD,EAAKtuD,cAAesuD,EAAKK,+BAC5C,CAAC,YAAa,CAAClxD,EAAS6C,UAAW7C,EAASgxD,uBAC5C,CAAC,SAAU,CAAC,EAAA7tD,SAEZ,CAAC,UAAW,CAAC0tD,EAAKxtD,QAASwtD,EAAKvtD,yBAChC,CAAC,MAAO,CAACnD,EAAU1F,MACnB,CAAC,MAAO,CAACuF,EAASuD,MAClB,CAAC,MAAO,CAACpD,EAAU2D,MACnB,CAAC,aAAc,CAAC9D,EAASmxD,aACzB,CAAC,OAAQ,CAACnxD,EAASwE,OACnB,CAAC,UAAW,CAACxE,EAAS4E,UACtB,CAAC,MAAO,CAAC5E,EAAS6E,MAClB,CAAC,OAAQ,CAAC7E,EAASoxD,OACnB,CAAC,OAAQ,CAACpxD,EAASqF,OACnB,CAAC,MAAO,CAAClF,EAAU3F,MACnB,CAAC,MAAO,CAACwF,EAAS0F,MAClB,CAAC,OAAQ,CAAC1F,EAAS2F,OACnB,CAAC,kBAAmB,CAAC3F,EAASqxD,gBAAiBrxD,EAASgxD,uBACxD,CAAC,YAAa,CAAC,EAAA98D,UAAW,EAAA2R,4B,sJCnCf,EAAAyrD,YAAc,SAACC,GAC1B,OAAQA,GACN,KAAK,EACH,MAAO,MACT,KAAK,EACH,MAAO,YACT,KAAK,EACH,MAAO,YACT,KAAK,EACH,MAAO,YACT,QACE,MAAM,IAAIv3E,MAAM,UAAGu3E,EAAS,iCAElC,EAEa,EAAAC,oBACT,SAACz/C,EAAyB0/C,EAAoCC,EAAiBC,GAC7E,YADwB,IAAAF,IAAAA,GAAA,QAAoC,IAAAC,IAAAA,GAAA,QAAiB,IAAAC,IAAAA,EAAA,GAMtE,EACT,EAES,EAAAC,sBAAwB,SAAChmD,EAAkBmG,GAAoC,wBACpFnG,EAAU,iDAAmD,GAAE,mBAC/DmG,EAAa,qCAAuC,GAAE,WAF8B,C,qWC3B5F,cAEA,UACA,UAGA,UACA,UACA,SA2Ha,EAAA8/C,8BACT,SAACz2D,EAA+B+N,EAA2B5iB,EAC1D+hB,EAAgCwpD,EAAmBC,EAAmBC,EAAkBpmD,EACxFqmD,GACC,IAAMC,EAAuC,SAAtB3rE,EAAW3F,OAC5BuxE,EAAaD,EAAiB92D,EAAO,GAAGnf,KAAK,GAAKmf,EAAO,GAAGnf,KAAK,GACjEkzB,EAAY7G,EAAY,GACxB8pD,EAAWF,EAAiB5pD,EAAY,GAAKA,EAAY,GACzD+pD,EAAYH,EAAiB5pD,EAAY,GAAKA,EAAY,GAC1D+G,EAAc6iD,EAAiB5pD,EAAY,GAAKA,EAAY,GAC5DgqD,IAAYH,EAAa,GAAM,GAAKA,EAAa,GAAM,IAAMD,GAClDE,EAAW,GAAM,IAAMF,IACpC7iD,EAAc,GAAM,EAGlBkjD,EAAYL,EAAiB7iD,EAAc+iD,EAAWC,EACtDG,EAAYN,EAAiBE,EAAWC,EAAYhjD,EACpDojD,EACFH,EAAS,CAAC,EAAG,EAAG,GAAK,CAACC,GAAa,EAAI,EAAI,GAAIA,EAAY,GAAKC,GAAa,EAAI,EAAI,GAAI,GACvFE,EACFJ,EAAS,CAAC,EAAG,EAAG,GAAK,CAACC,GAAa,EAAI,EAAI,EAAGA,EAAY,GAAKC,GAAa,EAAI,EAAI,EAAG,GACrFG,EAAW,CACfrtE,KAAKE,KAAK+sE,EAAYE,EAAc,GAAKC,EAAkB,IAC3DptE,KAAKE,KAAKgtE,EAAYC,EAAc,GAAKC,EAAkB,IAC3DptE,KAAKE,KAAK2pB,EAAYsjD,EAAc,GAAKC,EAAkB,MAG7D,IAAAvH,WAAU,WAAW,WAAM,8CAAiCwH,EAAjC,IAE3B,IAAMC,EAAmBN,EAAUJ,GAAkBC,EAAa,GAAM,EAAI,EAAI,EAAKO,EAAkB,GAEjGG,EAAaJ,EAAc,GAAKC,EAAkB,GAClDI,EAAaL,EAAc,GAAKC,EAAkB,GAClDK,EAAYztE,KAAK47B,IAAIuxC,EAAc,GAAKG,EAAkBH,EAAc,IAExEO,EAAYlB,EAAYe,GAAe,EACvCI,EAAYlB,EAAYe,GAAe,EACvCI,EAAWlB,EAAWe,GAAc,EAEpCI,EAAeb,EAAS,CAACM,EAAkB,EAAG,GAAK,CAAC,EAAG,EAAG,GAE1DQ,EAAgB,CACpB,4DAAqDd,GAA+B,IAArBM,EAAyB,YAAc,MAAK,MAC3G,4DAAqDN,EAAS,YAAc,MAAK,OAE/Ee,EAAmB,+DACwBf,EAAS,YAAc,MAAK,4CACnDA,EAAS,YAAc,MAAK,yGAEmBA,EAAS,YAAc,MAAK,iIAEpEA,EAAS,MAAQ,GAAE,sBAUlD,OARI1mD,IACFwnD,EAAc/4E,KAAK,+DAAwDi4E,EAAS,YAAc,MAAK,OACvGe,GAAoB,oEAC8Bf,EAAS,YAAc,MAAK,4CACvDJ,EAAiB,IAAM,KAAG,OAAGI,EAAS,MAAQ,GAAE,kBAIlE,EAAP,KACKnpD,GAAQ,CACX2Y,QAAS,CAAC,CAAC7lC,KAAMqsB,EAAa5K,SAAUtC,EAAO,GAAGsC,SAAU41D,YAAa,EAAAxD,YAAYC,UACrF7E,cAAe,WAAM,OAAE5gD,EAAGqoD,EAAS,GAAI7M,EAAG6M,EAAS,GAAIY,EAAGZ,EAAS,GAA9C,EACrBa,gBAAiB,WAAM,0BACrB,EAAAC,cAAa,6SAIbL,EAAcnvE,KAAK,IAAG,wCACHmvE,EAAch5E,OAAM,oDACrCk4E,EAAS,YAAc,MAAK,4CACTc,EAAch5E,OAAS,EAAC,8FAERghB,EAAO,GAAGnf,KAAKgI,KAAK,KAAI,4DACxBmX,EAAO,GAAGnf,KAAKgI,KAAK,KAAI,8DACtBqkB,EAAYrkB,KAAK,KAAI,qEACd,EAAA0M,UAAU0N,eAAeiK,GAAarW,MAAM,EAAG,GAAGhO,KAAK,KAAI,gEAChEsC,EAAW6lB,YAAY,GAAE,aAAK7lB,EAAW6lB,YAAY,GAAE,yDAC9D7lB,EAAW8lB,KAAK,GAAE,aAAK9lB,EAAW8lB,KAAK,GAAE,4DACtC9lB,EAAWkI,QAAQ,GAAE,aAAKlI,EAAWkI,QAAQ,GAAE,8DAC7ClI,EAAW4lB,UAAU,GAAE,aAAK5lB,EAAW4lB,UAAU,GAAE,+CAClE2lD,EAAS,8CACTC,EAAS,6CACVC,EAAQ,sBAC/BqB,EAAgB,qBA9MtB,SAACnB,EAAyBc,EAAoBC,EAAoBC,EAAmBQ,EACpF3hD,EAAyB4hD,EAAmCC,EAAuBC,EACnFjB,QAFoF,IAAAc,IAAAA,GAAA,QAC3D,IAAAC,IAAAA,GAAA,QAAmC,IAAAC,IAAAA,EAAA,QAAuB,IAAAC,IAAAA,EAAA,QACnF,IAAAjB,IAAAA,EAAA,GACC,IAsBMkB,EAAgB5B,EAAiB,6DAGA,6DAIjC6B,EAAkB7B,EAAiB,+GAOA,+GAQnC8B,EAAU9B,EAAiB,YAAc,YACzC+B,EAAS/B,EAAiB,YAAc,YACxC59C,EAAM49C,EAAiB,MAAQ,MAC/B39C,EAAM29C,EAAiB,MAAQ,MAC/BgC,EAAe,gEAENhC,EAAiB,cAAgB,cAAa,+BAChD59C,EAAG,0CACHA,EAAG,0CAELC,EAAG,4DACHA,EAAG,6LAGJA,EAAG,8CACC,IAAA+8C,aAAYsC,GAAkB,6JAGpBI,EAAO,mCAA2BC,EAAM,sBAC9DH,EAAa,4EA/DK,SAAClB,GACnB,OAAQA,GACN,KAAK,EACH,MAAO,uBACT,KAAK,EACH,MAAO,gEACT,KAAK,EACH,MAAO,2BACT,QACE,MAAM,IAAI54E,MAAM,2BAAoB44E,EAAgB,uBAE1D,CAsDEuB,CAAYP,GAAkB,gCAI1BQ,EAAUlC,EAAkBc,GAAaE,EAAW,kCACxCU,EAAiB,kBACnCM,GAC0D,kCACxCN,EAAiB,kEAEjCM,EAAY,gCAEP,IAAA5C,aAAYsC,GAAkB,UACHV,GAAYD,EAAY,kCACxCW,EAAiB,kBACnCM,GAC0D,kCACxCN,EAAiB,kEAEjCM,EAAY,gCAEP,IAAA5C,aAAYsC,GAAkB,UAE/BS,EAAU,UA5EI,SAACzB,GACnB,OAAQA,GACN,KAAK,EACH,MAAO,qCACT,KAAK,EACH,MAAO,yCACT,QACE,MAAM,IAAI54E,MAAM,2BAAoB44E,EAAgB,uBAE1D,CAmEmB0B,CAAYT,IAEzBU,GAAU,IAAAjD,aAAYsB,GACtB4B,EAAQtC,GAAiB,IAAAZ,aAAYsC,IAAqB,IAAAtC,aAAYuC,GACtEY,EAAQvC,GAAiB,IAAAZ,aAAYuC,IAAqB,IAAAvC,aAAYsC,GAsB5E,MArBiB,iBACjB,IAAApC,qBAAoBz/C,EAAY4hD,EAAgD,IAArBf,EAAwB,GAAE,oEAClC4B,EAAK,qBACtDtC,EAAiBkC,EAAUC,EAAO,6EAGeI,EAAK,qBACtDvC,EAAiBmC,EAAUD,EAAO,oFAGsBG,EAAO,wCAC7C3B,EAAgB,uHAInBV,EAAiB,cAAgB,cAAa,oBAC7D6B,EAAe,oBACf,IAAAnC,uBAAsB8B,EAAS3hD,GAAW,gGAK9C,CA0FQ2iD,CACIxC,EAAgBc,EAAWC,EAAWC,EAAUtnD,OAAS7xB,GAAW,EAAOo5E,EAAa,GACxFA,EAAa,GAAIA,EAAa,IAAG,yBAErCb,GAAS,IAAAqC,4BAA2BjC,EAAmBD,GAAgBP,EAAgBa,IAC9E,IAAA6B,wBACIlC,EAAmBD,GAAgBP,EAAgBa,GAAW,OAAOh5E,EACrEk4E,GA9BM,GAgC3B,C,0GCpOS,EAAAwB,cAAgB,uV,+IC0ChB,EAAAkB,2BACT,SAACE,EAAyBC,EAAyCC,EAAoBhC,EACtFiC,EAAgBC,EAAsBC,QAD4B,IAAAH,IAAAA,GAAA,QAAoB,IAAAhC,IAAAA,EAAA,SACtF,IAAAiC,IAAAA,GAAA,QAAgB,IAAAC,IAAAA,EAAA,SAAsB,IAAAC,IAAAA,GAAA,GACrC,IA7C8BhhE,EA6CxB2+D,EAAaiC,EAAc,GAAKD,EAAc,GAC9C/B,EAAagC,EAAc,GAAKD,EAAc,GAC9CM,EAAaJ,EAAalC,EAAaE,EACvCqC,EAAaL,EAAahC,EAAYF,EACtCD,EAAmBuC,EAAaL,EAAc,GAC9CO,EAAgBtC,EAAY+B,EAAc,GAEhD,KAAQC,GAAmC,IAArBnC,GAA+C,IAArBiC,EAAc,MACrDE,GAAoC,IAArBnC,GAA+C,IAArBA,IAC5CuC,EAAaL,EAAc,IAAO,GAAK/B,EAAY+B,EAAc,IAAO,GAA0B,IAArBD,EAAc,GAC/F,MAAM,IAAI76E,MAAM,wBAAiB+6E,EAAU,sCACvCnC,EAAgB,iCAAyBiC,EAAc,GAAE,0DACjCjC,EAAgB,0CACrCuC,EAAU,iDAAyCL,EAAc,GAAE,uBACtE/B,EAAS,kDAA0C+B,EAAc,GAAE,0BACnED,EAAc,GAAE,gBAEtB,MAAO,oDAC6BjC,EAAgB,kBAAUuC,EAAavC,EAAgB,cAAMwC,EAAU,+DAC/DtC,EAAa+B,EAAc,GAAE,cAAM9B,EAAS,sCAEvE8B,EAAc,GAAE,mCAChBA,EAAc,GAAE,uCACZjC,EAAgB,gCACvBG,EAAS,yCAEF+B,EAAc,GAAE,aAAKA,EAAc,GAAE,aAAKA,EAAc,GAAE,qPAKnEI,EAAY,IAAM,0BAAyB,mEAGzCA,EAAY,IAAM,iCAAgC,gEAEtDF,EAAS,IAAM,kBAAiB,0DACFnC,EAAU,iCAErCmC,EAAS,UAAG1vE,KAAKE,KAAKyvE,EAAkBlC,IAAe,iCAAgC,6BACzFiC,EAAS,4BAAqBC,GAAoB,IAAG,4HAKxCI,EAAa,0RA1FPnhE,EAgGG6gE,EA/FjC7gE,EACK,4JAOA,wJAuFuC,gHAIRmhE,EAAa,6mBAatB,IAArBzC,EAAyB,GAAK,6DAA4D,yBAhGvE,SAACmC,EAAqBnC,GACnD,OAAImC,EACK,+NAIoB,IAArBnC,EAAyB,GAAK,8DAA6D,8OAKpE,IAArBA,EAAyB,GAAK,4CAA2C,eAG1E,yRAMsB,IAArBA,EAAyB,GAAK,0CAAyC,cAGnF,CA2EY0C,CAAuBP,EAAYnC,GAAiB,8MAU5D,EAEJ,IAAM2C,EAAyB,SAACrhE,GAC9B,OAAIA,EACK,yJAOA,wJAMX,EAOa,EAAA0gE,uBACT,SAACC,EAAyBC,EAAyCC,EAAoBhC,EACtFiC,EAAgBC,EAAsBhD,QAD4B,IAAA8C,IAAAA,GAAA,QAAoB,IAAAhC,IAAAA,EAAA,SACtF,IAAAiC,IAAAA,GAAA,QAAgB,IAAAC,IAAAA,EAAA,SAAsB,IAAAhD,IAAAA,GAAA,GACrC,IAAMY,EAAagC,EAAc,GAAKC,EAAc,GAC9ChC,EAAa+B,EAAc,GAAKC,EAAc,GAC9CK,EAAaJ,EAAalC,EAAaE,EACvCqC,EAAaL,EAAahC,EAAYF,EAE5C,GAAMuC,EAAaN,EAAc,IAAO,GAAKK,EAAaL,EAAc,IAAO,GACzE/B,EAAY+B,EAAc,IAAO,EACrC,MAAM,IAAI96E,MAAM,qBAAco7E,EAAU,iDACpCN,EAAc,GAAE,wBAAgBK,EAAU,iDAC1CL,EAAc,GAAE,uBAAe/B,EAAS,iDAAyC+B,EAAc,KAErG,IAAMU,EAAgBJ,EAAaN,EAAc,GAC3CW,EAAgBN,EAAaL,EAAc,GAC3CO,EAAgBtC,EAAY+B,EAAc,GAC1CY,EAAgBzD,EAClB,kIAGsCY,EAAU,4DACVC,EAAU,mMAKTsC,EAAU,mCAA2BN,EAAc,GAAE,iEACnDK,EAAU,mCAA2BL,EAAc,GAAE,0BAC5FS,EAAuBR,GAAW,gIAIGhC,EAAS,mCAA2B+B,EAAc,GAAE,qEAC9ChC,EAAU,mCAA2BgC,EAAc,GAAE,4fAajDA,EAAc,GAAE,sIAI7DC,EAAa,2CAAoCD,EAAc,GAAE,MACpD,wCAAiCA,EAAc,GAAE,SAAO,6ZAUzBA,EAAc,GAAE,0JAEdA,EAAc,GAAE,0FAKlE,sPAMkCjC,EAAU,gDAEpB2C,EAAa,8CACbC,EAAa,8CACbJ,EAAa,0KAITG,EAAa,+EACXC,EAAa,qIAG7CF,EAAuBR,GAAW,2GAKJM,EAAa,ouBAjGnB,SAACN,GAC7B,OAAAA,EAAa,gDAAkD,+CAA/D,CAoHIY,CAAwBZ,GAAW,2eAkBrC,MAAO,wDACiCI,EAAU,cAAMC,EAAU,2DAC1BtC,EAAU,cAAMC,EAAS,sCAC9C8B,EAAc,GAAE,qCAChBA,EAAc,GAAE,kCACnB9B,EAAS,yCAEJ+B,EAAc,GAAE,aAAKA,EAAc,GAAE,aAAKA,EAAc,GAAE,mNAInEE,EAAS,IAAM,kBAAiB,iCAC7BA,EAAS,UAAG1vE,KAAKE,KAAKyvE,EAAkBlC,IAAe,iCAAgC,+BACzFiC,EAAS,4BAAqBC,GAAoB,IAAG,iXAUlES,EAAa,UAGf,C,kWClUJ,cACA,UAEA,UA6JME,EACF,SAACx6D,EAA+B5hB,EAAcq8E,EAA8BC,EAC3EtvD,GACC,IAAM2C,EACgB,CAAC3vB,KAAI,EAAE6hB,WAAY,CAAC,EAAAy0D,YAAYC,QAAS,EAAAD,YAAYC,SAAUt0D,UAAW+K,GAChG,OAAO,EAAP,KACK2C,GAAQ,CACXvsB,IAAK,WAAM,OAxDf,SAACusB,EAA2BpT,EAAexH,EAAesnE,EACzDC,EAAmCC,G,aAAA,IAAAA,IAAAA,EAAyBhgE,EAAE2H,UAC7D,IAAM0K,GAAe,EAAAzX,UAAU0X,SAAStS,EAAE9Z,KAAMsS,EAAEtS,MAC9CqsB,EAAcvS,EAAE9Z,KAChB+5E,EAAa,EAAArlE,UAAU5T,KAAKgZ,EAAE9Z,MAE9Bg6E,GAAY,EAIhB,GAAI7tD,EAAa,CACf,IAAMI,EAAkB,EAAAtY,cAAcuY,UAAU1S,EAAE9Z,KAAMsS,EAAEtS,MAAM,GAChE,IAAKusB,EACH,MAAM,IAAIxuB,MAAM,gDAElBsuB,EAAcE,EACdwtD,EAAa,EAAArlE,UAAU5T,KAAKurB,GAI5B,IADA,IAAI4tD,EAAkB,EACbj8E,EAAI,EAAGA,EAAIquB,EAAYluB,OAAQH,IAAK,CAC3C,IAAMk8E,EAAgC,QAAzB,EAAApgE,EAAE9Z,KAAK8Z,EAAE9Z,KAAK7B,OAASH,UAAE,QAAI,EAE1C,GAAIk8E,KADkC,QAAzB,EAAA5nE,EAAEtS,KAAKsS,EAAEtS,KAAK7B,OAASH,UAAE,QAAI,GAIxC,MAFAi8E,GAAmBC,C,CAKnBD,EAAkB,GAAM,IAC1BD,GAAY,E,MAMdA,GAAY,EAGd,OAAO,EAAP,KACK9sD,GAAQ,CACXqqD,gBAAiB,SAAC4C,GAAiB,OA3IvC,SAACA,EAA4BvU,EAA0BC,EAA0BuU,EAChFJ,EAAoBK,EAAsBT,EAA8BC,EACxES,EAAeC,EAAeC,QAA9B,IAAAF,IAAAA,EAAA,YAAe,IAAAC,IAAAA,EAAA,YAAe,IAAAC,IAAAA,EAAA,OAC7B,IAGIC,EACAC,EAJEX,EAAa,EAAArlE,UAAU5T,KAAKs5E,GAC5BO,EAAUtxE,KAAKE,KAAKwwE,EAAa,GAIf,iBAAbH,EACTa,EAAmBC,EAAmB,SAAC5gE,EAAGxH,GAAM,gBAAGsnE,EAAQ,aAAK9/D,EAAC,cAAMxH,EAAC,KAAxB,EACnB,mBAAbsnE,EAChBa,EAAmBC,EAAmBd,GAEtCa,EAAmBb,EAASgB,OAC5BF,EAAmBd,EAASiB,QAG9B,IA4BIC,EA5BAC,EAAgB,GACdC,GAAsB,IAAAC,qBAAoB,SAAUb,GAC1D,GAAIC,EAAa,CACf,IAAMa,EAAiB,SAACl7E,GAGtB,IAFA,IAAMwS,EAAU,EAAAkC,UAAU0N,eAAepiB,GACnC6tB,EAAoB,GACjB7vB,EAAIgC,EAAK7B,OAAS,EAAGH,GAAK,EAAGA,IAAK,CACzC,IAAMwwB,EAA4B,IAAtB4rD,EAAWj8E,OAAe,KACX,IAAtBi8E,EAAWj8E,OAAsB,mBACA,2BAAoBH,EAAIo8E,EAAWj8E,OAAS6B,EAAK7B,OAAM,KAC7F0vB,EAAQzvB,KAAK,UAAGoU,EAAQxU,GAAE,gBAAQwwB,EAAG,cAAMxuB,EAAKhC,GAAE,M,CAEpD,OAAO6vB,EAAQ1vB,OAAS,EAAI0vB,EAAQ7lB,KAAK,KAAO,IAClD,EAEA+yE,EAAgB,cACpBC,EAAoBG,QAAO,6DAEiBH,EAAoBI,MAAK,mCAC5DF,EAAetV,GAAM,mEAGcoV,EAAoBI,MAAK,mCAC5DF,EAAerV,GAAM,a,CAM5B,GAAImU,EAEAc,EADET,EACW,kBACfW,EAAoBK,2BAA2B,iBAAgB,mBAC/DL,EAAoBM,QAAQ,kBAAmB,iBAAgB,gJAGtCZ,EAAiB,sBAAuB,uBAAsB,KAExE,mCAA4BA,EAAiB,oBAAqB,qBAAoB,SAEhG,CACL,IAAKL,EACH,MAAM,IAAIt8E,MAAM,wFAElB,IAAMw9E,EAAmB,SAACltD,GACxB,IAAMmtD,EAAc,sBAAentD,EAAC,uBAAeA,EAAC,KAC9CotD,EAAc,sBAAeptD,EAAC,uBAAeA,EAAC,KACpD,MAAO,kBACT2sD,EAAoBM,QAAQ,4BAAqBjtD,EAAC,KAAK,iBAAgB,8BAC5DA,EAAC,6DACDA,EAAC,4DACFA,EAAC,qBAAaA,EAAC,mCACfA,EAAC,qBAAaA,EAAC,uCACXA,EAAC,qBAAaA,EAAC,uCACfA,EAAC,qBAAaA,EAAC,gDACNA,EAAC,eAAOosD,EAAiBe,EAAaC,GAAY,IACzE,EAEAX,EAAa,kBACbE,EAAoBK,2BAA2B,iBAAgB,mBAC/DE,EAAiB,GAAE,mBACnBA,EAAiB,GAAE,mBACnBA,EAAiB,GAAE,mBACnBA,EAAiB,G,CAGnB,MAAO,0EACmDjB,EAAK,8EACLC,EAAK,yFACMC,EAAU,oBAEjFX,QAAAA,EAA4B,GAAE,eAC9BkB,EAAa,iBAEbZ,EAAauB,YAAW,iBACtBvB,EAAawB,sCAAsChB,GAAQ,iBAC3DG,EAAU,QAEZ,CA4CuCc,CAC/BzB,EAAcrgE,EAAE9Z,KAAMsS,EAAEtS,KAAMqsB,EAAa2tD,EAAW7tD,EAAaytD,EAAUC,EAD9C,EAEnCh0C,QAAS,CAAC,CAAC7lC,KAAMqsB,EAAa5K,SAAUq4D,EAAgBzC,YAAa,EAAAxD,YAAYC,UACjF7E,cAAe,WACX,OAAE5gD,EAAGhlB,KAAKE,KAAKwwE,EAAa,IAA2BC,EAAY,EAAI,IAAvE,GAER,CASe6B,CAA0B3uD,EAAU/N,EAAO,GAAIA,EAAO,GAAIy6D,EAAUC,EAApE,GAEf,EAES,EAAA1gE,IAAM,SAAC/U,GAClBA,EAAQ0sE,QAAQ6I,EAAgCv1E,EAAQ+a,OAAQ,OAAO,SAACrF,EAAGxH,GAAM,gBAAGwH,EAAC,YAAIxH,EAAR,IACnF,EAEa,EAAAmM,IAAM,SAACra,GAClBA,EAAQ0sE,QAAQ6I,EAAgCv1E,EAAQ+a,OAAQ,OAAO,SAACrF,EAAGxH,GAAM,gBAAGwH,EAAC,YAAIxH,EAAR,IACnF,EAEa,EAAAkM,IAAM,SAACpa,GAClBA,EAAQ0sE,QAAQ6I,EAAgCv1E,EAAQ+a,OAAQ,OAAO,SAACrF,EAAGxH,GAAM,gBAAGwH,EAAC,YAAIxH,EAAR,IACnF,EAEa,EAAAuV,IAAM,SAACzjB,GAClBA,EAAQ0sE,QAAQ6I,EACZv1E,EAAQ+a,OAAQ,MAAO,CAAEy7D,OAAQ,SAAC9gE,EAAGxH,GAAM,wBAAWwH,EAAC,YAAIxH,EAAC,IAAjB,EAAsBuoE,OAAQ,SAAC/gE,EAAGxH,GAAM,yBAAYwH,EAAC,YAAIxH,EAAC,IAAlB,GAAyB,ueAclH,EAEa,EAAAiM,IAAM,SAACna,GAClBA,EAAQ0sE,QAAQ6I,EAAgCv1E,EAAQ+a,OAAQ,OAAO,SAACrF,EAAGxH,GAAM,gBAAGwH,EAAC,YAAIxH,EAAR,IACnF,C,wJC5MA,cAYa,EAAAwpE,eAAiB,GAkCjB,EAAAb,oBAAsB,SAAC19E,EAAcoU,GAKhD,IAJA,IAAMypE,EAAQzpE,EAAMxT,OAAS,EAAI,MAAQ,qBAAcwT,EAAMxT,OAAM,KAE7DqU,EAAU,EAAAkC,UAAU0N,eAAezQ,GACrCoqE,EAAa,GACR/9E,EAAI,EAAGA,EAAI2T,EAAMxT,OAAS,EAAGH,IACpC+9E,GAAc,uBACL/9E,EAAC,wBAAgBwU,EAAQxU,GAAE,2BAC1BA,EAAC,wBAAgBwU,EAAQxU,GAAE,8BACxBA,EAAC,kBAAUA,EAAC,gCACTA,EAAC,WAGnB+9E,GAAc,qBAAcpqE,EAAMxT,OAAS,EAAC,gBAE5C,IAAMg9E,EAAUxpE,EAAMxT,OAAS,EAAI,GAAK,wBAC5BZ,EAAI,gDAAwC69E,EAAK,gDAEzDW,EAAU,SAMRluD,EAAoB,GAC1B,GAAqB,IAAjBlc,EAAMxT,OACR0vB,EAAQzvB,KAAK,WACR,GAAIuT,EAAMxT,OAAS,EACxB0vB,EAAQzvB,KAAK,mBAEb,IAASJ,EAAI2T,EAAMxT,OAAS,EAAGH,GAAK,EAAGA,IACrC6vB,EAAQzvB,KAAK,UAAGoU,EAAQxU,GAAE,2BAAmBA,EAAC,OAelD,MAAO,CAACm9E,QAAO,EAAEG,QAzBD,SAACU,EAAmBC,GAChC,OAAAtqE,EAAMxT,OAAS,EAAI,UAAG89E,EAAU,YAAID,EAAS,KAAM,iBAAUz+E,EAAI,YAAIy+E,EAAS,cAAMC,EAAU,KAA9F,EAwBsBC,QAXVvqE,EAAMxT,OAAS,EAAI,GAAK,wBAC5BZ,EAAI,mCAA2B69E,EAAK,mCACrCvtD,EAAQ7lB,KAAK,KAAI,UASOm0E,cANb,SAACF,EAAoBG,GACvC,OAAAzqE,EAAMxT,OAAS,EAAI,WAAIi+E,EAAQ,IAAM,IAAE,OAAGH,EAAU,KAAM,iBAAU1+E,EAAI,YAAI6+E,EAAQ,GAAK,KAAG,OAAGH,EAAU,IAAzG,EAK8CZ,2BAHf,SAACh1E,EAAW3I,GAC3C,oBAAO2I,EAAC,YAAI+0E,GAAK,OAAG19E,EAAO,WAAI09E,EAAK,YAAI19E,EAAKsK,KAAK,KAAI,KAAM,GAAE,IAA9D,EAE0EozE,MAAK,EACrF,EAUA,iBACE,WAAoBrM,GAAA,KAAAA,wBAAAA,CAAoD,CA0B1E,OAzBE,YAAA4M,sCAAA,SAAsC76E,GAEpC,IAAMu7E,EAA6B,iBAATv7E,EAAoB,UAAGA,EAAI,KAAMA,EAC3D,MAAO,4BAAqBu7E,EAAU,gBACxC,EACA,YAAAX,UAAA,SAAU7C,QAAA,IAAAA,IAAAA,EAAiD,EAAAiD,gBACzD,IAAMQ,EAA0C,iBAAlBzD,EAA6BA,EAAgBA,EAAc,GACnF0D,EAA0C,iBAAlB1D,EAA6B,EAAIA,EAAc,GACvE2D,EAA0C,iBAAlB3D,EAA6B,EAAIA,EAAc,GAEvE4D,EAA2D,IAApCl+E,KAAKwwE,wBAAwB,IAAgD,IAApCxwE,KAAKwwE,wBAAwB,GAC7F2N,EAAYD,EAAuB,uDACA,2GAEnCE,EAAsBF,EACxB,gCACA,6CAAsCl+E,KAAKwwE,wBAAwB,GAAKxwE,KAAKwwE,wBAAwB,GAAE,2CAClFxwE,KAAKwwE,wBAAwB,GAAE,iCAChDuN,EAAiBC,EAAiBC,EAAc,oBAExD,MAAO,mCAA4BF,EAAc,aAAKC,EAAc,aAAKC,EAAc,wBAC/EE,EAAS,oBACfC,EAAmB,OAEvB,EACF,EA3BA,GA6Ba,EAAAC,mBAAqB,SAAC3N,GAC/B,WAAI4N,EAAiB5N,EAArB,C,0WCpIJ,cACA,UAEA,UACA,UACA,UAgHa,EAAA6N,mCACT,SAAC39D,EAA+B7U,EAC/ByyE,GACC,IAjHoCptD,EAAkBnQ,EAiHhD0N,GAjH8ByC,EAiHcxQ,EAAOhhB,OAAS,EAjHZqhB,EAiHelV,EAAWigB,SAjHa,CACjGhtB,KAAM,cACN6hB,WAAYuQ,EAAU,CAAC,EAAAkkD,YAAYC,QAAS,EAAAD,YAAYC,QAAS,EAAAD,YAAYC,SACvD,CAAC,EAAAD,YAAYC,QAAS,EAAAD,YAAYC,SACxDt0D,UAAS,IA8GL,OAAO,EAAP,KACK0N,GAAQ,CACXvsB,IAAK,WAAM,OA5Gf,SAACwe,EAA+B+N,EAA2B5iB,EAC1DyyE,GACC,IAAMptD,EAAUxQ,EAAOhhB,OAAS,EAC1ByxB,EAAcD,EAAU,8BAAgC,GACxDE,EAAS1Q,EAAO,GAAGnf,KACnB8vB,EAAS3Q,EAAO,GAAGnf,KACnB+vB,EAAyBD,EAAO,GAAKxlB,EAAW0lB,MAEhDvO,EAAW,MACX,GAAwC,IAAAu7D,sBAAqB1yE,GAA5DimB,EAAkB,qBAAEC,EAAe,kBACpCysD,EAAkC,CACtC,6DAAsDx7D,EAAQ,MAC9D,6DAAsDA,EAAQ,OAE5DkO,GACFstD,EAAgC7+E,KAAK,6DAAsDqjB,EAAQ,OAGrG,IAAMywD,EAAsC,SAAtB5nE,EAAW3F,OAC3B0nB,GAAc,IAAAgE,sBAChBR,EAAQC,EAAQxlB,EAAW4lB,UAAW5lB,EAAW8lB,KAAM9lB,EAAWkI,QAAS0/D,GACzE6H,EAAa,EAAArlE,UAAU5T,KAAKurB,GAC5B2uD,GAAsB,IAAAC,qBAAoB,SAAU5uD,GACpD6wD,GAAiB,IAAAjC,qBAAoB,IAAKprD,GAC1CstD,GAAiB,IAAAlC,qBAAoB,IAAKnrD,GA8DhD,OAAO,EAAP,KACK5C,GAAQ,CACX2Y,QAAS,CAAC,CACR7lC,KAAM+8E,EAA6BA,EAA2B1wD,GAAeA,EAC7E5K,SAAUtC,EAAO,GAAGsC,SACpB41D,YAAa,EAAAxD,YAAYC,UAE3ByD,gBAnEsB,SAAC4C,GAA+B,oDAC1B7vE,EAAWkI,QAAQ,GAAE,cAAMlI,EAAWkI,QAAQ,GAAE,+CACnDlI,EAAW8lB,KAAK,GAAE,cAAM9lB,EAAW8lB,KAAK,GAAE,oBAEvE6sD,EAAgCj1E,KAAK,MAAK,kCACvBi1E,EAAgC9+E,OAAM,qDAA6CsjB,EAAQ,mBAE9G8O,EAAkB,eAClByqD,EAAoBG,QAAO,eAC3B+B,EAAehB,QAAO,eACtBiB,EAAejB,QAAO,iBAEtB/B,EAAauB,YAAW,iBACtBvB,EAAawB,sCAAsC5B,GAAW,mBAE9DiB,EAAoBK,2BAA2B,iBAAgB,iBAC/DL,EAAoBM,QAAQ,aAAc,iBAAgB,iGAElBpJ,EAAgB,EAAI,EAAC,sEACVA,EAAgB,EAAI,EAAC,4BACpEA,EAAgB,EAAI,EAAC,0EACYniD,EAAsB,gCAEhDtO,EAAQ,cAAMA,EAAQ,iEACWqO,EAAO,GAAE,oEACpBA,EAAO,GAAE,wEACFA,EAAO,GAAE,0EACPxlB,EAAW4lB,UAAU,GAAE,wDAE9BL,EAAOqiD,EAAgB,EAAI,GAAE,+FAIxBpiD,EAAO,GAAE,yEACPxlB,EAAW4lB,UAAU,GAAE,sDAC9BL,EAAOqiD,EAAgB,EAAI,GAAE,iEAK5DgL,EAAe7B,2BACX,WACAnJ,EAAgB,CAAC,QAAS,UAAW,SAAU,iBAC/B,CACE,QAAS,gBAAiB,UAAW,WACrC,oCACPgL,EAAef,cAAc,YAAW,yBAEvDgB,EAAe9B,2BAA2B,WAAY,CACpD,iBAAkB,aAAc,UAAW,WAC3C,oCACa8B,EAAehB,cAAc,YAAW,6EAK3DvsD,EAAW,iBACXY,EAAe,yCAzDyC,EAoEtDy+C,cAAe,WAAM,OAAE5gD,EAAGhlB,KAAKE,KAAKwwE,EAAa,IAA5B,GAEzB,CAYeqD,CAA6Bj+D,EAAQ+N,EAAU5iB,EAAYyyE,EAA3D,GAEf,C,yXC5HJ,cACA,SAGA,UACA,UACA,UACA,UAEa,EAAA1sD,qBACT,SAAChD,EAA+B8C,EAAgCD,EAC/D+C,EAA+BzgB,EAA4B0/D,GAC1D,IAAMh/C,EAAY7F,EAAW,GACvB8F,EAAoB9F,EAAWrX,MAAMk8D,EAAgB,EAAI,EAAGA,EAAgB,EAAI,GAChFx/C,EAAcS,EAAkBh1B,OAChCi1B,EAAcjD,EAAY,GAE1BkD,EADqBlD,EAAYna,MAAM,GACC3O,KAAI,SAAChB,EAAGrI,GAAM,OAAAqI,GAAKA,EAAI,IAAM6pB,EAAUlyB,GAAK,EAA9B,IAEtDquB,EAD2B8G,EAAkB9rB,KAAI,SAAChB,EAAGrI,GAAM,OAAAqI,EAAI4sB,EAAWj1B,GAAKi1B,EAAWj1B,EAAI00B,EAAnC,IAEpCrrB,KAAI,SAAChB,EAAGrI,GAAM,OAAAqL,KAAKyc,OAAOzf,EAAIgtB,EAAmBr1B,GAAKwU,EAAQxU,IAAMwU,EAAQxU,GAA9D,IAG3C,OAFAquB,EAAYnuB,OAAO,EAAG,EAAGg1B,GACzB7G,EAAYnuB,OAAOg0E,EAAgB,EAAI,EAAG,EAAG9+C,GACtC/G,CACT,EAcJ,IAAMgxD,GAAgD,IAAArzE,6BAA4B,CAAC2qB,KAAM,CAAC,EAAG,EAAG,EAAG,KA8D7FnB,EAA4B,SAA2BlpB,EAAe6U,GAG1E,IAFA,IAAMgR,EAAc7lB,EAAW6lB,YAAYna,QAElChY,EAAI,EAAGA,EAAImhB,EAAO,GAAGnf,KAAK7B,SAAUH,EAChB,IAAvBmyB,EAAYnyB,EAAI,KAClBmyB,EAAYnyB,EAAI,GAAKmhB,EAAO,GAAGnf,KAAKhC,IAGxC,IAAMoyB,EAAO9lB,EAAW8lB,KAAKpa,QAC7B,EAAAke,aAAaC,yBACThV,EAAO,GAAGnf,KAAMsK,EAAWkI,QAASlI,EAAW4lB,UAAWC,EAAaC,EAA4B,SAAtB9lB,EAAW3F,OACxF2F,EAAW2lB,SAGf,IAAM4C,EAAmB1sB,OAAO0D,OAAO,CAAC,EAAGS,GAE3C,OADAnE,OAAO0D,OAAOgpB,EAAe,CAAC1C,YAAW,EAAEC,KAAI,EAAE7F,SAAUjgB,EAAWigB,WAC/DsI,CACT,EAEa,EAAA5N,oBAAsB,SAAC3a,GAClC,IAAMwoB,GAAuB,IAAAC,mCAAkCzoB,GAEzD3F,EAAS2F,EAAW3F,OACpBsrB,EAAU,CAAC,SAAU,QAAS,aAAc,cAAc3lB,EAAWgzE,UACrEptD,EAAY5lB,EAAW4lB,UACvBF,EAAQ1lB,EAAW0lB,MACnBG,EAAc7lB,EAAWizE,aACzBntD,EAAO9lB,EAAW8lB,KAClB5d,EAAUlI,EAAWkI,QACrBgrE,EAAYlzE,EAAWmzE,aAE7B,OAAO,IAAAzzE,6BAA2B,GAC7BimB,QAAO,EAAEtrB,OAAM,EAAEurB,UAAS,EAAEF,MAAK,EAAEG,YAAW,EAAEC,KAAI,EAAE5d,QAAO,EAAEgrE,SAAQ,GAAK1qD,GACnF,EA2Ga,EAAA9N,KAAO,SAAC5gB,EAAyBkG,IAxMvB,SAAC6U,EAA+B7U,GAGrD,IAAK6U,GAA6B,IAAlBA,EAAOhhB,QAAkC,IAAlBghB,EAAOhhB,OAC5C,MAAM,IAAIJ,MAAM,+BAIlB,GAA8B,IAA1BohB,EAAO,GAAGnf,KAAK7B,QAA0C,IAA1BghB,EAAO,GAAGnf,KAAK7B,OAChD,MAAM,IAAIJ,MAAM,yCAGlB,GAAIohB,EAAO,GAAGnf,KAAK7B,SAAWghB,EAAO,GAAGnf,KAAK7B,OAC3C,MAAM,IAAIJ,MAAM,gDAMlB,GAFoBohB,EAAO,GAAGnf,KAA2B,SAAtBsK,EAAW3F,OAAoBwa,EAAO,GAAGnf,KAAK7B,OAAS,EAAI,KACtEghB,EAAO,GAAGnf,KAAK,GAAKsK,EAAW0lB,MAErD,MAAM,IAAIjyB,MAAM,qDAIlB,GAAsB,IAAlBohB,EAAOhhB,SAA2C,IAA1BghB,EAAO,GAAGnf,KAAK7B,QAAgBghB,EAAO,GAAGnf,KAAK,KAAOmf,EAAO,GAAGnf,KAAK,IAC9F,MAAM,IAAIjC,MAAM,gBAGlB,IAAM20B,EAAcvT,EAAO,GAAGnf,KAAK7B,OAAS,EAE5C,GAAImM,EAAW4lB,UAAU/xB,SAAWu0B,EAClC,MAAM,IAAI30B,MAAM,8BAAuB20B,EAAW,MAIpD,GAAIpoB,EAAWkI,QAAQrU,SAAWu0B,EAChC,MAAM,IAAI30B,MAAM,4BAAqB20B,EAAW,MAIlD,GAAIpoB,EAAW8lB,KAAKjyB,SAAyB,EAAdu0B,EAC7B,MAAM,IAAI30B,MAAM,yBAAgC,EAAd20B,EAAe,MAKnD,GAAsC,IAAlCpoB,EAAW6lB,YAAYhyB,QAAgBmM,EAAW6lB,YAAYhyB,SAAWghB,EAAO,GAAGnf,KAAK7B,OAAS,EACnG,MAAM,IAAIJ,MAAM,wBAIlB,GAA2B,IAAvBohB,EAAO,GAAGsC,UAAsD,IAAvBtC,EAAO,GAAGsC,SACrD,MAAM,IAAI1jB,MAAM,0CAGlB,GAAsB,IAAlBohB,EAAOhhB,QAAuC,IAAvBghB,EAAO,GAAGsC,SACnC,MAAM,IAAI1jB,MAAM,0CAEpB,CA+IEusB,CAAelmB,EAAQ+a,OAAQ7U,GACO,IAAlClG,EAAQ+a,OAAO,GAAGnf,KAAK7B,OA5Bd,SAACiG,EAAyBkG,GAEvC,IAAM4nE,EAAsC,SAAtB5nE,EAAW3F,OAC3Bwa,EAAS,CACb/a,EAAQ+a,OAAO,GAAG1Z,QACdysE,EAEI,CAAC9tE,EAAQ+a,OAAO,GAAGnf,KAAK,GAAI,EAAGoE,EAAQ+a,OAAO,GAAGnf,KAAK,GAAIoE,EAAQ+a,OAAO,GAAGnf,KAAK,IAEjF,CAACoE,EAAQ+a,OAAO,GAAGnf,KAAK,GAAIoE,EAAQ+a,OAAO,GAAGnf,KAAK,GAAI,EAAGoE,EAAQ+a,OAAO,GAAGnf,KAAK,KAEzFoE,EAAQ+a,OAAO,GAAG1Z,QAAQ,CAACrB,EAAQ+a,OAAO,GAAGnf,KAAK,GAAIoE,EAAQ+a,OAAO,GAAGnf,KAAK,GAAI,EAAGoE,EAAQ+a,OAAO,GAAGnf,KAAK,MAE/E,IAA1BoE,EAAQ+a,OAAOhhB,QACjBghB,EAAO/gB,KAAKgG,EAAQ+a,OAAO,IAE7B,IAAMiR,EAAO,CAAC,EAAG9lB,EAAW8lB,KAAK,GAAI,EAAG9lB,EAAW8lB,KAAK,IAClD5d,EAAU,CAAC,GAAGsS,OAAOxa,EAAWkI,SAChC0d,EAAY,CAAC,GAAGpL,OAAOxa,EAAW4lB,WAClCC,EAAc,CAAC,GAAGrL,OAAOxa,EAAW6lB,aACpC+B,EAAqBsB,EAA0B,EAAD,KAAKlpB,GAAU,CAAE8lB,KAAI,EAAE5d,QAAO,EAAE0d,UAAS,EAAEC,YAAW,IAAGhR,GAC7G/a,EAAQ0sE,SAAQ,IAAAgM,oCACZ39D,EAAQ+S,GACR,SAAA7F,GAAe,OAAA6lD,EAAgB,CAAC7lD,EAAY,GAAIA,EAAY,GAAIA,EAAY,IAAM,EAAnE,IACrB,CAKIqxD,CAAOt5E,EAASkG,GA5GL,SAAClG,EAAyB+a,EAA+B7U,G,MAChE4nB,EAAqBsB,EAA0BlpB,EAAY6U,GAI3DwQ,EAA4B,IAAlBxQ,EAAOhhB,OAEjB83E,EAAuC,SAAtB3rE,EAAW3F,OAG5B49B,EAAcpjB,EAAO,GAAGnf,KAAKi2E,EAAiB,EAAI,GAClDzzC,EAAarjB,EAAO,GAAGnf,KAAKi2E,EAAiB,EAAI,GACjD0H,EAAgBx+D,EAAO,GAAGnf,KAAKi2E,EAAiB,EAAI,GACpD2H,EAAez+D,EAAO,GAAGnf,KAAK,GAC9B69E,EAAc1+D,EAAO,GAAGnf,KAAK,GAE7BqsB,GAAc,IAAAgE,sBAChBlR,EAAO,GAAGnf,KAAMmf,EAAO,GAAGnf,KAAMsK,EAAW4lB,UAAWgC,EAAmB9B,KAAM9lB,EAAWkI,QAC1FyjE,GACEG,EAAY/pD,EAAY4pD,EAAiB,EAAI,GAC7CE,EAAW9pD,EAAY4pD,EAAiB,EAAI,GAC5C7iD,EAAc/G,EAAY4pD,EAAiB,EAAI,GAIrD,GADIA,GAAkB2H,IAAiBr7C,GAAes7C,IAAgBr7C,GAAqC,UAAvBl4B,EAAW2lB,SAEzE,IAAjB2tD,GAAsC,IAAhBC,GAAiD,IAA5BvzE,EAAW4lB,UAAU,IAAwC,IAA5B5lB,EAAW4lB,UAAU,IACvE,IAA1B5lB,EAAWkI,QAAQ,IAAsC,IAA1BlI,EAAWkI,QAAQ,KAC1B,eAAvBlI,EAAW2lB,SAAmD,eAAvB3lB,EAAW2lB,SAC3B,UAAvB3lB,EAAW2lB,SAEf7rB,EAAQ0sE,SAAQ,IAAAgM,oCAAmC39D,EAAQ+S,SAI7D,GAAK+jD,GAAuC,IAArB3rE,EAAW0lB,MAAlC,CAOA,IAAM6lD,EAAYI,EAAiBG,EAAYD,EAAW/iD,EACpD0iD,EAAYG,EAAiB7iD,EAAcgjD,EAAYD,EACvDJ,EAAW6H,EAAeC,EAAcF,EAKxCG,EAAoE,QAAhD,EAAA15E,EAAQ25E,WAAWC,UAA6B,QACtE55E,EAAQ0sE,QAAQ,EAAD,KAEN,EAAAtqC,0BAAwB,CAC3BhnB,UAAW69D,EAAyB9yD,SACpC5pB,IAAK,WAAM,WAAA8lC,4BAA2BtnB,EAAO,GAAIk+D,EAAyB1oD,KAA/D,IAEb,CAACxV,OAAQ,CAAC,GAAI0mB,QAAS,CAACv7B,EAAWkzE,UAAY,GAAK,KAAK,GAC7DlzE,EAAWkzE,WAAap5E,EAAQ25E,WAAWC,KAC7C55E,EAAQ25E,WAAWC,GAAKF,GAI1B,IAAMG,EAAa,CAAC9+D,EAAO,GAAI2+D,GAC3BnuD,IACGsmD,GAA4C,IAA1B92D,EAAO,GAAGnf,KAAK7B,OAGpC8/E,EAAW7/E,KAAK+gB,EAAO,IAFvB8+D,EAAW7/E,KAAK+gB,EAAO,GAAG1Z,QAAQ,CAAC0Z,EAAO,GAAGnf,KAAK,GAAI,EAAG,MAO7DoE,EAAQ0sE,SACJ,IAAAoN,qCACID,EAAY/rD,EAAoB7F,EAAawpD,EAAWC,EAAWC,EAAUpmD,GA5Bf,GA8BlE,CAACxQ,OAAQ8+D,G,MAxCX75E,EAAQ0sE,SAAQ,IAAAgM,oCAAmC39D,EAAQ+S,GAyC/D,CAiCIqB,CAAOnvB,EAASA,EAAQ+a,OAAQ7U,EAEpC,C,2WCxPA,cAEA,UAWa,EAAA4zE,oCACT,SAAC/+D,EAA+B7U,EAA4B+hB,EAAgCwpD,EAC3FC,EAAmBC,EAAkBpmD,EAAkBqmD,GACtD,IAAM9oD,EAV8B,SAACyC,EAAkBnQ,GAAuC,OAClGjiB,KAAM,eACN6hB,WAAYuQ,EAAU,CAAC,EAAAkkD,YAAYC,QAAS,EAAAD,YAAYC,QAAS,EAAAD,YAAYC,SACvD,CAAC,EAAAD,YAAYC,QAAS,EAAAD,YAAYC,SACxDt0D,UAAS,EAJyF,CAU7E2+D,CAAkCxuD,EAASrlB,EAAWigB,UACvE,OAAO,EAAP,KACK2C,GAAQ,CACXvsB,IAAK,WAAM,WAAAi1E,+BACPz2D,EAAQ+N,EAAU5iB,EAAY+hB,EAAawpD,EAAWC,EAAWC,EAAUpmD,EAC3EqmD,EAFO,GAIf,C,wcCxBJ,cASa,EAAAgH,qBACT,SAAC1yE,GACC,OAAQA,EAAWwrB,YACjB,IAAK,OACH,MAAO,CAACvF,mBAAoB,GAAIC,gBAAiB,4BACnD,IAAK,UACH,MAAO,CAACD,mBAAoB,GAAIC,gBAAiB,wCACnD,IAAK,OACH,MAAO,CACLD,mBACI,8BAAuBjmB,EAAW4rB,QAAQ,iCAAyB5rB,EAAW6rB,QAAQ,MAC1F3F,gBAAiB,+CAGrB,QACE,MAAO,CAACD,mBAAoB,GAAIC,gBAAiB,IAEvD,EAES,EAAAuC,kCACT,SAACzoB,GACC,IAAMwrB,GAAaxrB,aAAU,EAAVA,EAAYwrB,aAAwB,GAEvD,GAAmB,SAAfA,EAAuB,CACnB,SAAqBxrB,aAAU,EAAVA,EAAY8zE,oBAAyC,CAAC,EAAA/nD,SAAU,EAAAC,UAAS,GAA7FJ,EAAO,KAAEC,EAAO,KACvB,MAAO,CAACL,WAAU,EAAEK,QAAO,EAAED,QAAO,EAAEpB,mBAAoB,UAAGgB,EAAU,YAAII,EAAO,YAAIC,G,CAExF,MAAO,CAACL,WAAU,EAAEhB,mBAAoBgB,EAC1C,C,+oBCnCJ,cACA,SACA,UAmIa,EAAA7P,KAAO,SAAC7hB,EAAyBkG,IA/HvB,SAAC6U,GACtB,IAAKA,EACH,MAAM,IAAIphB,MAAM,oBAElB,GAAIohB,EAAOhhB,OAAS,GAAKghB,EAAOhhB,OAAS,EACvC,MAAM,IAAIJ,MAAM,wBAIlB,GAAsB,IAAlBohB,EAAOhhB,QAAgBghB,EAAO,GAAGnf,KAAK7B,OAAS,EACjD,MAAM,IAAIJ,MAAM,4BAGlB,GAA4B,IAAvBohB,EAAO,GAAGsC,UAAwD,IAAvBtC,EAAO,GAAGsC,UACnC,IAAlBtC,EAAOhhB,QAAuC,IAAvBghB,EAAO,GAAGsC,SACpC,MAAM,IAAI1jB,MAAM,uBAGlB,GAAKohB,EAAO,GAAGsC,WAAatC,EAAO,GAAGsC,UACf,IAAlBtC,EAAOhhB,QAAgBghB,EAAO,GAAGsC,WAAatC,EAAO,GAAGsC,SAC3D,MAAM,IAAI1jB,MAAM,6BAEpB,CA0GEusB,CAAelmB,EAAQ+a,QACvB/a,EAAQ0sE,QAb0B,SAAC3xD,EAA+B7U,GAClE,IAAM4iB,EAAW,CACf3vB,KAAM,OACN6hB,WAA8B,IAAlBD,EAAOhhB,OAAe,CAAC,EAAA01E,YAAYC,QAAS,EAAAD,YAAYC,QAAS,EAAAD,YAAYC,SACvD,CAAC,EAAAD,YAAYC,QAAS,EAAAD,YAAYC,SACpEt0D,UAAWlV,EAAWigB,UAGxB,OAAO,EAAP,KAAW2C,GAAQ,CAAEvsB,IAAK,WAAM,OAzE9B,SAACusB,EAA2B/N,EAA+B7U,GACzD,IAAMmtB,EAAStY,EAAO,GAAGnf,KAAKgW,QACxB0hB,EAASvY,EAAO,GAAGnf,KAAKgW,QACxB,IAAY,EAAA2hB,SAASC,qBACvBH,EAAQntB,EAAW8sB,OAAQM,EAAQptB,EAAW+sB,OAA0B,IAAlBlY,EAAOhhB,OAAeghB,EAAO,GAAGnf,UAAOlC,GAAU,GADpGuqE,EAAC,KAAEE,EAAC,KAAED,EAAC,KAERj8C,EAAc,CAACg8C,EAAGE,GACxB,IAAKl8C,EACH,MAAM,IAAItuB,MAAM,uCAElB,IAAMg8E,EAAa,EAAArlE,UAAU5T,KAAKurB,GAC9BwL,EAAO,GACPvtB,EAAW8sB,QAAU9sB,EAAW+sB,OAClCQ,EAAO,wCACEvtB,EAAW8sB,SAAW9sB,EAAW+sB,OAC1CQ,EAAO,yCACGvtB,EAAW8sB,QAAU9sB,EAAW+sB,OAC1CQ,EAAO,wCACGvtB,EAAW8sB,QAAW9sB,EAAW+sB,SAC3CQ,EAAO,yCAGT,IAAMpW,EAAW,MACX48D,EAAsC,IAArB/zE,EAAWgtB,MAAc,GAAK,kBAC/CU,EAA+B,IAAlB7Y,EAAOhhB,OAAe,4BA3C/B,SAACmgF,EAAW1oC,EAAW51C,GACrC,GAAoB,IAAhBA,EAAK7B,OACP,MAAO,KAGT,IAAMogF,EAA8B,IAAhBv+E,EAAK7B,QAAsB,IAANmgF,GAA6B,IAAhBt+E,EAAK7B,QAAgB6B,EAAK,KAAOs+E,EACjFE,EAAax+E,EAAKA,EAAK7B,OAAS,KAAOy3C,EAEzC5P,EAAS,KAQb,OAPKu4C,IACHv4C,GAAU,gBAAShmC,EAAKA,EAAK7B,OAAS,GAAE,MAErCqgF,IACHx4C,GAAU,MAGLA,CACT,CA0BoEy4C,CAAQpW,EAAGE,EAAGppD,EAAO,GAAGnf,MAAK,MAAO,GAC5Fi9E,EAAkC,CACtC,6DAAsDx7D,EAAQ,MAC9D,6DAAsDA,EAAQ,OA+BhE,OA7BsB,IAAlBtC,EAAOhhB,QACT8+E,EAAgC7+E,KAAK,6DAAsDqjB,EAAQ,OA4B9F,EAAP,KACKyL,GAAQ,CACX2Y,QAAS,CAAC,CAAC7lC,KAAMqsB,EAAa5K,SAAUtC,EAAO,GAAGsC,SAAU41D,YAAa,EAAAxD,YAAYC,UACrFyD,gBA7BsB,SAAC4C,GAA+B,mCAC3C9R,EAAC,gCACDE,EAAC,gCACDD,EAAC,+BACF7mD,EAAQ,YAAInX,EAAWgtB,MAAK,8BAC7B7V,EAAQ,YAAInX,EAAWitB,KAAI,mBAExC0lD,EAAgCj1E,KAAK,MAAK,kCACvBmX,EAAOhhB,OAAM,qDAA6CsjB,EAAQ,mBAErF04D,EAAauB,YAAW,iBACtBvB,EAAawB,sCAAsC5B,GAAW,6FAKlDt4D,EAAQ,6CACI6mD,EAAC,4BACvBzwC,EAAI,0BAGNwmD,EAAc,iBACdrmD,EAAU,4CAtB8C,EA8BtDi3C,cAAe,WAAM,OAAE5gD,EAAGhlB,KAAKE,KAAKwwE,EAAa,IAA5B,GAEzB,CAU8BviD,CAAsBtK,EAAU/N,EAAQ7U,EAAxC,GAClC,CAIkB2sB,CAA4B7yB,EAAQ+a,OAAQ7U,GAC9D,EAEa,EAAA4sB,oBAAsB,SAAC5sB,GAChC,WAAAN,6BAA4BM,EAA5B,C,8WC3IJ,cACA,UAGA,UAiEa,EAAAupB,8BACT,SAAC1U,EAA+B2T,GAC9B,IAhE+BnD,EAAkBnQ,EAgE3C0N,GAhEyByC,EAgEcxQ,EAAOhhB,OAAS,EAhEZqhB,EAgEesT,EAAqBgC,mBAhEd,CAC3Ev3B,KAAM,SACN6hB,WAAYuQ,EAAU,CAAC,EAAAkkD,YAAYC,QAAS,EAAAD,YAAYC,QAAS,EAAAD,YAAYC,SACvD,CAAC,EAAAD,YAAYC,QAAS,EAAAD,YAAYC,SACxDt0D,UAAS,IA6DL,OAAO,EAAP,KAAW0N,GAAQ,CAAEvsB,IAAK,WAAM,OAzDlC,SAACusB,EAA2B/N,EAA+B2T,GAErD,IAAM2E,EAAStY,EAAO,GAAGnf,KACnB03B,EAASvY,EAAO,GAAGnf,KACnBqsB,EAAc,EAAApY,cAAcuY,UAAUiL,EAAQC,GAAQ,GAC5D,IAAKrL,EACH,MAAM,IAAItuB,MAAM,yCAElB,IAAMg8E,EAAa,EAAArlE,UAAU5T,KAAKurB,GAG5B5K,EAAW,MACX,GAAwC,IAAAu7D,sBAAqBlqD,GAA5DvC,EAAkB,qBAAEC,EAAe,kBAEpC63C,EAAIh8C,EAAYA,EAAYluB,OAAS,GACrCmqE,EAAI7wC,EAAOA,EAAOt5B,OAAS,GAC3BoqE,EAAIl8C,EAAYA,EAAYluB,OAAS,GA8B3C,OAAO,EAAP,KACK+uB,GAAQ,CACX2Y,QAAS,CAAC,CAAC7lC,KAAMqsB,EAAa5K,SAAUtC,EAAO,GAAGsC,SAAU41D,YAAa,EAAAxD,YAAYC,UACrFyD,gBAhCsB,SAAC4C,GAA+B,mCAC/C9R,EAAC,gCACDE,EAAC,gCACDD,EAAC,sEAEmC7mD,EAAQ,oEACRA,EAAQ,+EACGA,EAAQ,mBAEtE8O,EAAkB,iBAElB4pD,EAAauB,YAAW,iBACtBvB,EAAawB,sCAAsC5B,GAAW,wOAUlDt4D,EAAQ,6CACI6mD,EAAC,kGAGzB93C,EAAe,yCA1B6C,EAiCtDy+C,cAAe,WAAM,OAAE5gD,EAAGhlB,KAAKE,KAAKwwE,EAAa,IAA5B,GAEzB,CAK8B/9C,CAAwB9O,EAAU/N,EAAQ2T,EAA1C,GAClC,EAgBS,EAAA5L,OAAS,SAAC9iB,IAdA,SAAC+a,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,6BAGlB,GAAIohB,EAAO,GAAGnf,KAAKmf,EAAO,GAAGnf,KAAK7B,OAAS,KAAOghB,EAAO,GAAGnf,KAAKmf,EAAO,GAAGnf,KAAK7B,OAAS,GACvF,MAAM,IAAIJ,MAAM,oCAGlB,GAA2B,IAAvBohB,EAAO,GAAGsC,UAAsD,IAAvBtC,EAAO,GAAGsC,SACrD,MAAM,IAAI1jB,MAAM,8BAEpB,CAGEusB,CAAelmB,EAAQ+a,QAEvB/a,EAAQ0sE,SAAQ,IAAAj9C,+BAA8BzvB,EAAQ+a,OAAQ,CAAC2W,WAAY,GAAIhB,mBAAoB,KACrG,C,syBC7FA,cACA,SACA,UAEA,UAQMxK,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,8BAElB,GAA8B,IAA1BohB,EAAO,GAAGnf,KAAK7B,OACjB,MAAM,IAAIJ,MAAM,8CAElB,GAA2B,IAAvBohB,EAAO,GAAGsC,SACZ,MAAM,IAAI1jB,MAAM,sBAEpB,EAEM+/B,EAA0C,SAC5C3e,EAA+B7U,EAA2BuzB,GAC5D,IAAMo4C,EAAuC,SAAtB3rE,EAAW3F,OAC5B+5E,EAA2BzI,EAC7B,CAAC92D,EAAO,GAAGnf,KAAK,GAAImf,EAAO,GAAGnf,KAAK,GAAImf,EAAO,GAAGnf,KAAK,GAAImf,EAAO,GAAGnf,KAAK,IACzEmf,EAAO,GAAGnf,KAAKgW,QACbooB,EAAej4B,OAAOQ,eAAeC,KAAK0D,EAAY,aACtD6lB,EAAc7lB,EAAW6lB,YAAYna,QACrCxD,EAAUlI,EAAWkI,QAAQwD,QAC7Bka,EAAsBkO,EAAgB9zB,EAAiC4lB,UAAUla,QAAU,GAC3Foa,EAAO9lB,EAAW8lB,KAAKpa,QAC7B,EAAAke,aAAamK,qBAAqBR,EAAkB6gD,EAA0BvuD,EAAa3d,EAAS0d,EAAWE,GAE/G,IAAMuuD,EAA4B,EAAAzqD,aAAaoK,uBAC3CT,EAAkB6gD,EAA0BlsE,EAAS0d,EAAWC,EAAaC,EAAM9lB,EAAW2lB,SAE5F4C,EAAgB1sB,OAAO0D,OAAO,CAAC,EAAGS,GAMxC,OALI8zB,EACFj4B,OAAO0D,OAAOgpB,EAAe,CAAC1C,YAAW,EAAE3d,QAAO,EAAE4d,KAAI,EAAEF,UAAS,EAAE3F,SAAUjgB,EAAWigB,WAE1FpkB,OAAO0D,OAAOgpB,EAAe,CAAC1C,YAAW,EAAE3d,QAAO,EAAE4d,KAAI,EAAE7F,SAAUjgB,EAAWigB,WAE1E,CACLsI,EACAojD,EACI,CACE0I,EAA0B,GAAIA,EAA0B,GAAIA,EAA0B,GACtFA,EAA0B,IAE5BA,EAER,EAEM1gD,EAAsB,SACxBk8C,EAA4B17C,EAA8BpS,EAAgC/hB,EAC1Fo0B,EAAaX,EAAatc,EAAkBkd,GAC9C,IAAMs3C,EAAuC,SAAtB3rE,EAAW3F,OAC5B4N,EAAOksB,EAAUtgC,OACjB47E,EAAa,EAAArlE,UAAU5T,KAAKurB,GAC5B2uD,GAAsB,IAAAC,qBAAoB,SAAU5uD,GACpD6wD,GAAiB,IAAAjC,qBAAoB,IAAKx8C,GAEhD,GAAIn0B,EAAW6lB,YAAYhyB,QAAU,EAAG,CACtC,IAKIygC,EALEC,EAAKv0B,EAAW6lB,YAAY7lB,EAAW6lB,YAAYhyB,OAAS,GAC5D2gC,EAAKx0B,EAAWkI,QAAQlI,EAAWkI,QAAQrU,OAAS,GACpD4gC,EAAUz0B,EAAW8lB,KAAK9lB,EAAW8lB,KAAKjyB,OAAS,EAAI,GAEvDygF,EAAUrsE,GAAQ0jE,EAAiB,EAAI,GAEzC/2C,EAAQ,GACRC,EAAW,GAqBf,GAnBEP,EADEG,EALUz0B,EAAW8lB,KAAK9lB,EAAW8lB,KAAKjyB,OAAS,KAK/B,EACd,oDAC4B0gC,EAAE,+CACjB+/C,EAAO,uBAAeA,EAAO,eAAO9/C,EAAE,cAAMC,EAAO,+CAC/C6/C,EAAO,6BAAqBA,EAAO,gBAAQngD,EAAUmgD,GAAQ,wHAI5D1B,EAAef,cAAc,YAAW,+BACtDz9C,EAAG,qBAGP,oDAC4BG,EAAE,+CACjB+/C,EAAO,uBAAeA,EAAO,eAAO9/C,EAAE,cAAMC,EAAO,gDAC9Cm+C,EAAef,cAAc,YAAW,+BACtDz9C,EAAG,qBAIqB,IAAlCp0B,EAAW6lB,YAAYhyB,OAAc,CACvC,IAAMihC,EAAK90B,EAAW6lB,YAAY7lB,EAAW6lB,YAAYhyB,OAAS,GAC5DkhC,EAAK/0B,EAAWkI,QAAQlI,EAAWkI,QAAQrU,OAAS,GACpDmhC,EAAUh1B,EAAW8lB,KAAK9lB,EAAW8lB,KAAKjyB,OAAS,EAAI,GACvDohC,EAAQj1B,EAAW8lB,KAAK9lB,EAAW8lB,KAAKjyB,OAAS,GACjD0gF,EAAUtsE,GAAQ0jE,EAAiB,EAAI,GACvCz2C,EAAOf,EAAUogD,GAErB3/C,EADEI,EAAUC,IAAU,EACd,sDAC4BH,EAAE,iDACjBy/C,EAAO,uBAAeA,EAAO,eAAOx/C,EAAE,cAAMC,EAAO,iDAC/Cu/C,EAAO,6BAAqBA,EAAO,gBAAQr/C,EAAI,0CACpDX,EAAE,yEAKd,sDAC4BO,EAAE,iDACjBy/C,EAAO,uBAAeA,EAAO,eAAOx/C,EAAE,cAAMC,EAAO,2BAG1EH,EAAW,iC,CA6Bb,MAxBoB,2EACyC1d,EAAQ,yFACGA,EAAQ,6BAEtEu5D,EAAoBG,QAAO,yBAC3B+B,EAAehB,QAAO,2BAEtB/B,EAAauB,YAAW,2BACtBvB,EAAawB,sCAAsC5B,GAAW,6BAE9DiB,EAAoBK,2BAA2B,WAAU,2BACzDL,EAAoBM,QAAQ,aAAc,WAAU,2BACpDN,EAAoBK,2BAA2B,YAAW,2BAC1DL,EAAoBM,QAAQ,aAAc,YAAW,wCAE1C75D,EAAQ,cAAMA,EAAQ,YAAIkd,EAAK,yDAE1CO,EAAK,2BACLN,EAAK,2BACLO,EAAQ,2BACRpB,EAAG,+D,CAMf,GAAIk4C,EACF,MAAM,IAAIl4E,MAAM,yEAElB,IAKI0hC,EALEtH,EAAa,EAAAzjB,UAAU5T,KAAKwJ,EAAW6lB,aACvCuP,EAAgB,EAAAhrB,UAAU0N,eAAe9X,EAAW6lB,aACpDwP,EAAcD,EAAcvhC,OAC5ByhC,EAAWt1B,EAAW8lB,KAAKjyB,OAkEjC,OA9DEshC,EAHcn1B,EAAW8lB,KAAK+P,QAAO,SAAC3W,EAAK4W,GAAQ,OAAA5W,EAAM4W,CAAN,IAGzC,oPAQgB88C,EAAef,cAAc,YAAW,+BACtDz9C,EAAG,qBAGL,yDAEcw+C,EAAef,cAAc,YAAW,6BACtDz9C,EAAG,kBAGK,2EACyCjd,EAAQ,yFACGA,EAAQ,6BAEtEu5D,EAAoBG,QAAO,yBAC3B+B,EAAehB,QAAO,mDAEEt8C,EAAQ,aAAKt1B,EAAW8lB,KAAK/oB,KAAI,SAAArJ,GAAK,gBAAGA,EAAC,IAAJ,IAASgK,KAAK,KAAI,wDACnDuK,EAAI,aAAKksB,EAAUp3B,KAAI,SAAArJ,GAAK,gBAAGA,EAAC,IAAJ,IAASgK,KAAK,KAAI,4DAC1C23B,EAAW,aAAKD,EAAcr4B,KAAI,SAAArJ,GAAK,gBAAGA,EAAC,IAAJ,IAASgK,KAAK,KAAI,sDAC/D23B,EAAW,aAAKr1B,EAAWkI,QAAQnL,KAAI,SAAArJ,GAAK,gBAAGA,EAAC,IAAJ,IAASgK,KAAK,KAAI,6BAEzFmyE,EAAauB,YAAW,2BACtBvB,EAAawB,sCAAsC5B,GAAW,6BAE9DiB,EAAoBK,2BAA2B,WAAU,2BACzDL,EAAoBM,QAAQ,aAAc,WAAU,2BACpDN,EAAoBK,2BAA2B,YAAW,2BAC1DL,EAAoBM,QAAQ,aAAc,YAAW,qDAE7B37C,EAAW,2CAEvBle,EAAQ,YAAIkd,EAAK,uHAIHxG,EAAU,4FAEbwH,EAAc,EAAC,wLAI5BA,EAAc,EAAC,uFAGVptB,EAAOotB,EAAW,kBAAUptB,EAAI,+EACJA,EAAOotB,EAAW,iDACzCptB,EAAOotB,EAAW,iDAClCF,EAAO,4CAEX1B,EAAG,+DAMnB,EAcM+gD,EAA4B,SAACx0E,GAA8D,OAC/F3F,OAAQ2F,EAAW3F,OACnBsrB,QAAS,CAAC,SAAU,QAAS,aAAc,cAAc3lB,EAAWgzE,UACpE3/C,SAAUrzB,EAAWy0E,UACrB5uD,YAAa7lB,EAAWizE,aACxB/qE,QAASlI,EAAWkI,QACpB4d,KAAM9lB,EAAW8lB,KAN8E,EAa3FsN,EACF,SAACve,EAA+B+N,EAA2B2Q,EAC1DvzB,GACO,QACFwzB,EAAwC3e,EAAQ7U,EAAYuzB,GAAiB,GAD1E3L,EAAkB,KAAE7F,EAAW,KAEhC8L,EAAa,EAAAzjB,UAAU5T,KAAKoxB,EAAmB/B,aAE/C1O,EAAW,MAGbsc,EAAM,GAMV,OALI7L,EAAmB0L,gBACrBG,GAAO,mBAAYtc,EAAQ,YAAI0W,EAAU,MAEzC4F,GAAO,mBAAYtc,EAAQ,YAAI0W,EAAU,YAEpC,EAAP,KACKjL,GAAQ,CACX2Y,QAAS,CAAC,CAAC7lC,KAAMqsB,EAAa5K,SAAUtC,EAAO,GAAGsC,SAAU41D,YAAa,EAAAxD,YAAYC,UACrFyD,gBAAiB,SAAA4C,GAAgB,OAAAl8C,EAC7Bk8C,EAAch7D,EAAO,GAAGnf,KAAMqsB,EAAa6F,EAXrC,kBAW8D6L,EAAKtc,EAAU,MADtD,EAEjCwtD,cAAe,WAAM,OAAE5gD,EAAGhlB,KAAKE,KAAK,EAAAmL,UAAU5T,KAAKurB,GAAe,IAA7C,GAEzB,EAES,EAAA9H,2BAA6B,SAACja,GACzC,IAAMszB,EAA+D,IAA5CtzB,EAAW00E,kBAE9Bx0E,EAAOs0E,EAA0Bx0E,GAEvC,GAAsB,IAAlBE,EAAKmzB,SACP,MAAM,IAAI5/B,MAAM,0EAGlB,OAAO,IAAAiM,6BAA2B,GAAE4zB,gBAAe,GAAKpzB,GAC1D,EAEa,EAAA8Z,YAAc,SAAClgB,EAAyBkG,GACnDggB,EAAelmB,EAAQ+a,QACvB,IAAM+N,EAAW,CAAC3vB,KAAM,cAAe6hB,WAAY,CAAC,EAAAy0D,YAAYC,SAAUt0D,UAAWlV,EAAWigB,UAChGnmB,EAAQ0sE,QAAQ,EAAD,KAAK5jD,GAAQ,CAAEvsB,IAAK,WAAM,OAAA+8B,EAA6Bt5B,EAAQ+a,OAAQ+N,GAAU,EAAO5iB,EAA9D,IAC3C,EAEA,IAAM20E,EAAuB,CAC3BhvD,QAAS,GACT0N,SAAU,EACVC,iBAAiB,EACjBzN,YAAa,GACb3d,QAAS,GACT4d,KAAM,GACN+N,aAAc,EACdjO,UAAW,GACX3F,SAAU,IAGC,EAAAlE,iCAAmC,SAAC/b,GAC/C,IAAM3F,EAAS2F,EAAW3F,OAC1B,OAAO,EAAP,GAAQA,OAAM,GAAKs6E,GAAoB,CAAE10D,SAAU5lB,GACrD,EAEa,EAAAyhB,kBAAoB,SAAChiB,EAAyBkG,GACzDggB,EAAelmB,EAAQ+a,QACvB,IAAM+N,EAAW,CAAC3vB,KAAM,oBAAqB6hB,WAAY,CAAC,EAAAy0D,YAAYC,SAAUt0D,UAAWlV,EAAWigB,UACtGnmB,EAAQ0sE,QAAQ,EAAD,KAAK5jD,GAAQ,CAAEvsB,IAAK,WAAM,OAAA+8B,EAA6Bt5B,EAAQ+a,OAAQ+N,GAAU,EAAM5iB,EAA7D,IAC3C,EAOA,IAAM4zB,EACF,SAAC/e,EAA+B+N,EAA2B2Q,EAC1DvzB,GACO,QACFwzB,EAAwC3e,EAAQ7U,EAAYuzB,GAAiB,GAD1E3L,EAAkB,KAAE7F,EAAW,KAMtC,OAAO,EAAP,KACKa,GAAQ,CACX2Y,QAAS,CAAC,CAAC7lC,KAAMqsB,EAAa5K,SAAUtC,EAAO,GAAGsC,SAAU41D,YAAa,EAAAxD,YAAYC,UACrFyD,gBAAiB,SAAA4C,GACb,OAAAl8C,EAAoBk8C,EAAch7D,EAAO,GAAGnf,KAAMqsB,EAAa6F,EARzD,2CAGA,GAKuF,MAAO,OAApG,EACJ+8C,cAAe,WAAM,OAAE5gD,EAAGhlB,KAAKE,KAAK,EAAAmL,UAAU5T,KAAKurB,GAAe,IAA7C,GAEzB,EAES,EAAAjF,QAAU,SAAChjB,EAAyBkG,GAC/CggB,EAAelmB,EAAQ+a,QACvB,IAAM+N,EAAW,CAAC3vB,KAAM,UAAW6hB,WAAY,CAAC,EAAAy0D,YAAYC,SAAUt0D,UAAWlV,EAAWigB,UAC5FnmB,EAAQ0sE,QAAQ,EAAD,KAAK5jD,GAAQ,CAAEvsB,IAAK,WAAM,OAAAu9B,EAAyB95B,EAAQ+a,OAAQ+N,GAAU,EAAO5iB,EAA1D,IAC3C,EAEa,EAAA+c,uBAAyB,SAAC/c,GACrC,IAAM6zB,EAAe7zB,EAAW40E,cAC1BhvD,EAAY5lB,EAAW4lB,UAEvB1lB,EAAOs0E,EAA0Bx0E,GAEvC,GAAqB,IAAjB6zB,EACF,MAAM,IAAIpgC,MAAM,+DAElB,GAAsB,IAAlByM,EAAKmzB,SACP,MAAM,IAAI5/B,MAAM,sEAGlB,OAAO,IAAAiM,6BAA2B,GAAEm0B,aAAY,EAAEjO,UAAS,GAAK1lB,GAClE,EAEa,EAAAyqE,6BAA+B,SAAC3qE,GAC3C,IAAM3F,EAAS2F,EAAW3F,OAC1B,OAAO,EAAP,GAAQA,OAAM,GAAKs6E,GAAoB,CAAE10D,SAAU5lB,GACrD,EAEa,EAAA2hB,cAAgB,SAACliB,EAAyBkG,GACrDggB,EAAelmB,EAAQ+a,QACvB,IAAM+N,EAAW,CAAC3vB,KAAM,gBAAiB6hB,WAAY,CAAC,EAAAy0D,YAAYC,SAAUt0D,UAAWlV,EAAWigB,UAClGnmB,EAAQ0sE,QAAQ,EAAD,KAAK5jD,GAAQ,CAAEvsB,IAAK,WAAM,OAAAu9B,EAAyB95B,EAAQ+a,OAAQ+N,GAAU,EAAM5iB,EAAzD,IAC3C,C,66BCjXA,cACA,SACA,UAEA,UAMa,EAAAk8B,yBAA2B,CACtCjpC,KAAM,YACN6hB,WAAY,CAAC,EAAAy0D,YAAYC,UAG3B,IAUMptC,EAAkB,SAACrZ,EAA+BsH,GACpD,OAACA,GAAQA,EAAKx2B,SAAWkvB,EAAWlvB,OAAU,OAAKkvB,EAAW9R,SAAO,GAAEjE,UAAYqd,CAAnF,EAeS,EAAA8R,2BAA6B,SAAC1kB,EAAmBo9D,GAC5D,IACM9xD,EAAatL,EAAM/hB,KACnB20B,EAAO+R,EAAgBrZ,EAAY8xD,GACnC9yD,EAjBe,SAACgB,EAA+BsH,GACnD,SAAAjgB,UAAUoyB,gBAAgBzZ,EAAYqZ,EAAgBrZ,EAAYsH,GAAlE,CAgBkBiS,CAAevZ,EAAYsH,GACzCpiB,EAAO8a,EAAWlvB,OAClB47E,EAAa,EAAArlE,UAAU5T,KAAKurB,GAK5B2uD,GAAsB,IAAAC,qBAAoB,SAAU5uD,GACpD+yD,GAAqB,IAAAnE,qBAAoB,IAAK5tD,GAoBpD,OAAO,EAAP,KACK,EAAAmZ,0BAAwB,CAC3BX,QAAS,CAAC,CAAC7lC,KAAMqsB,EAAa5K,SAAUM,EAAMN,SAAU41D,YAAa,EAAAxD,YAAYC,UACjFyD,gBArBsB,SAAC4C,GAA+B,uEAbvC,MAc4C,+EAd5C,MAeuD,mBA1BjD,SAACxlD,EAAgBpiB,GACxC,IAAMw0B,EAAc,GACpBA,EAAY3oC,KAAK,8CAAuCmU,EAAI,2CAAmCA,EAAI,UACnG,IAAK,IAAIvU,EAAI,EAAGA,EAAIuU,IAAQvU,EAC1B+oC,EAAY3oC,KAAK,iBAAUu2B,EAAK32B,GAAE,kBAAUA,EAAC,OAG/C,OADA+oC,EAAY3oC,KAAK,OACV2oC,EAAY/+B,KAAK,KAC1B,CAoBIq3E,CAAiB1qD,EAAMpiB,GAAK,eAC5ByoE,EAAoBG,QAAO,eAC3BiE,EAAmBlD,QAAO,iBAE1B/B,EAAauB,YAAW,iBACtBvB,EAAawB,sCAAsC5B,GAAW,mBAE9DiB,EAAoBK,2BAA2B,WAAU,iBACzDL,EAAoBM,QAAQ,aAAc,WAAU,iBACpD8D,EAAmB/D,2BAA2B,YAAW,0EAGlC+D,EAAmBjD,cAAc,YAAW,UAhBf,EAsBtDlN,cAAe,WAAM,OAAE5gD,EAAGhlB,KAAKE,KAAKwwE,EAAa,IAA5B,GAEzB,EAEa,EAAA9hE,UAAY,SAAC7T,EAAyBkG,IAlE5B,SAAC6U,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhhB,OACpB,MAAM,IAAIJ,MAAM,+BAGlB,GAA2B,IAAvBohB,EAAO,GAAGsC,SACZ,MAAM,IAAI1jB,MAAM,+BAEpB,CA2DEusB,CAAelmB,EAAQ+a,QACvB/a,EAAQ0sE,QAAQ,EAAD,KACV,EAAAtqC,0BAAwB,CAC3BhnB,UAAWlV,EAAWigB,SACtB5pB,IAAK,WAAM,WAAA8lC,4BAA2BriC,EAAQ+a,OAAO,GAAI7U,EAAWqqB,KAAzD,IAEf,EAEa,EAAA/K,yBAA2B,SAACtf,GACrC,WAAAN,6BAA4B,CAAC2qB,KAAMrqB,EAAWqqB,MAA9C,C,ijBC5FJ,cACA,SACA,UA4CMyT,EACF,SAACrmB,EAAmBxkB,EAAcq8E,EAAmCC,EACpEtvD,GACC,IAAM2C,EAA4B,CAAC3vB,KAAI,EAAE6hB,WAAY,CAAC,EAAAy0D,YAAYC,SAAUt0D,UAAW+K,GACvF,OAAO,EAAP,KACK2C,GAAQ,CACXvsB,IAAK,WAAM,OAhBf,SAACusB,EAA2BnL,EAAmB63D,EAC9CC,GAAmD,cAC/C3sD,GAAQ,CACXqqD,gBAAiB,SAAA4C,GACb,OA7BN,SAACA,EAA4BmF,EAAkB1F,EAC9CC,GACC,IAEI0F,EAFE5E,EAAUtxE,KAAKE,KAAK+1E,EAAW,GAQrC,OAJEC,EADsB,iBAAb3F,EACI,UAAGA,EAAQ,OAEXA,EAAS,KAEjB,2KAITC,QAAAA,EAA4B,GAAE,iBAE9BM,EAAauB,YAAW,iBACtBvB,EAAawB,sCAAsChB,GAAQ,gFAGlC4E,EAAU,SAErC,CAOMC,CAA+BrF,EAAc,EAAAzlE,UAAU5T,KAAKihB,EAAM/hB,MAAO45E,EAAUC,EAAnF,EACJh0C,QAAS,CAAC,CAAC7lC,KAAM+hB,EAAM/hB,KAAMyhB,SAAUM,EAAMN,SAAU41D,YAAa,EAAAxD,YAAYC,UAChF7E,cAAe,SAACjyB,GACZ,OAAE3uB,EAAGhlB,KAAKE,KAAK,EAAAmL,UAAU5T,KAAKk8C,EAAa,GAAGh9C,MAAQ,GAA0B,GAAhF,GAN8C,CAerCqoC,CAA6Bnb,EAAUnL,EAAO63D,EAAUC,EAAxD,GAEf,EAES,EAAA71D,IAAM,SAAC5f,GAClBA,EAAQ0sE,QAAQ1oC,EAAmChkC,EAAQ+a,OAAO,GAAI,MAAO,OAC/E,EAEa,EAAA8E,KAAO,SAAC7f,GACnBA,EAAQ0sE,QAAQ1oC,EAAmChkC,EAAQ+a,OAAO,GAAI,OAAQ,QAChF,EAEa,EAAAs1D,MAAQ,SAACrwE,GACpBA,EAAQ0sE,QAAQ1oC,EAAmChkC,EAAQ+a,OAAO,GAAI,QAAS,SACjF,EAEa,EAAAiF,KAAO,SAAChgB,GACnBA,EAAQ0sE,QAAQ1oC,EAAmChkC,EAAQ+a,OAAO,GAAI,OAAQ,QAChF,EAEa,EAAAu1D,MAAQ,SAACtwE,GACpBA,EAAQ0sE,QAAQ1oC,EAAmChkC,EAAQ+a,OAAO,GAAI,QAAS,SACjF,EAEa,EAAAkF,KAAO,SAACjgB,GACnBA,EAAQ0sE,QAAQ1oC,EAAmChkC,EAAQ+a,OAAO,GAAI,OAAQ,QAChF,EACa,EAAAw1D,MAAQ,SAACvwE,GACpBA,EAAQ0sE,QAAQ1oC,EAAmChkC,EAAQ+a,OAAO,GAAI,QAAS,SACjF,EAOa,EAAA01D,QAAU,SAACzwE,EAAyBkG,GAC/ClG,EAAQ0sE,QACJ1oC,EACIhkC,EAAQ+a,OAAO,GAAI,QAAQ,SAAArF,GAAK,sBAASA,EAAC,0BAAV,GAAqC,sDACnCxP,EAAWhB,IAAG,0DACdgB,EAAW26B,IAAG,SAEhD36B,EAAWigB,UACf,CAACpL,OAAQ,CAAC,IAChB,EAOa,EAAAwF,KAAO,SAACvgB,GACnB,IAPwC+a,EAClC7V,EACA27B,EAKA36B,GANAhB,GADkC6V,EAOY/a,EAAQ+a,QANxChhB,QAAU,EAAKghB,EAAO,GAAGkxD,kBAAkB,GAAK,EAAAh6C,SAC9D4O,EAAO9lB,EAAOhhB,QAAU,EAAKghB,EAAO,GAAGkxD,kBAAkB,GAAK,EAAA/5C,UAC7D,IAAAtsB,6BAA4B,CAACV,IAAG,EAAE27B,IAAG,MAK5C,IAAA4vC,SAAQzwE,EAASkG,EACnB,EAEa,EAAAf,KAAO,SAACnF,GACnBA,EAAQ0sE,QAAQ1oC,EAAmChkC,EAAQ+a,OAAO,GAAI,OAAQ,QAChF,EAEa,EAAAiG,IAAM,SAAChhB,GAClBA,EAAQ0sE,QAAQ1oC,EAAmChkC,EAAQ+a,OAAO,GAAI,MAAO,OAC/E,EAEa,EAAA21D,KAAO,SAAC1wE,GACnBA,EAAQ0sE,QAAQ1oC,EAAmChkC,EAAQ+a,OAAO,GAAI,OAAQ,QAChF,EAMa,EAAA41D,qBAAuB,SAACzqE,GACjC,WAAAN,6BAA4BM,EAA5B,EAES,EAAAmb,IAAM,SAACrhB,EAAyBkG,GAC3ClG,EAAQ0sE,QAAQ1oC,EACZhkC,EAAQ+a,OAAO,GAAI,OAAO,SAAArF,GAAK,yBAAYA,EAAC,IAAb,GAAkB,0CACvBxP,EAAWgtB,MAAK,mOAS1ChtB,EAAWigB,UACjB,EAEa,EAAAyqD,IAAM,SAAC5wE,GAClBA,EAAQ0sE,QAAQ1oC,EAAmChkC,EAAQ+a,OAAO,GAAI,OAAO,SAAArF,GAAK,yBAAYA,EAAC,IAAb,GAAkB,2ZAatG,EAEa,EAAA6L,IAAM,SAACvhB,GAClBA,EAAQ0sE,QAAQ1oC,EAAmChkC,EAAQ+a,OAAO,GAAI,MAAO,OAC/E,EAEa,EAAA2G,MAAQ,SAAC1hB,GACpBA,EAAQ0sE,QAAQ1oC,EAAmChkC,EAAQ+a,OAAO,GAAI,QAAS,SACjF,EAEa,EAAAyH,UAAY,SAACxiB,EAAyBkG,GACjDlG,EAAQ0sE,QAAQ1oC,EACZhkC,EAAQ+a,OAAO,GAAI,aAAa,SAAArF,GAAK,2CAA8BA,EAAC,aAAKA,EAAC,aAAKA,EAAC,sBAA3C,GACrC,6CAAsCxP,EAAWgtB,MAAK,MAAMhtB,EAAWigB,UAC7E,EAEa,EAAAjD,IAAM,SAACljB,GAClBA,EAAQ0sE,QAAQ1oC,EAAmChkC,EAAQ+a,OAAO,GAAI,OAAO,SAAArF,GAAK,iBAAIA,EAAJ,IACpF,EAEa,EAAAo7D,WAAa,SAAC9wE,GACzBA,EAAQ0sE,QAAQ1oC,EAAmChkC,EAAQ+a,OAAO,GAAI,cAAc,SAAArF,GAAK,oBAAOA,EAAP,IAC3F,EAEa,EAAAyO,KAAO,SAACnkB,GACnBA,EAAQ0sE,QAAQ1oC,EACZhkC,EAAQ+a,OAAO,GAAI,QAAQ,SAAArF,GAAK,uCAA0BA,EAAC,aAAKA,EAAC,qBAAjC,IACtC,EAEa,EAAA6O,QAAU,SAACvkB,GACtBA,EAAQ0sE,QAAQ1oC,EAAmChkC,EAAQ+a,OAAO,GAAI,WAAW,SAAArF,GAAK,mCAAsBA,EAAC,MAAvB,IACxF,EAEa,EAAA8O,IAAM,SAACxkB,GAClBA,EAAQ0sE,QAAQ1oC,EAAmChkC,EAAQ+a,OAAO,GAAI,MAAO,OAC/E,EAEa,EAAAg2D,KAAO,SAAC/wE,GACnBA,EAAQ0sE,QAAQ1oC,EAAmChkC,EAAQ+a,OAAO,GAAI,OAAQ,QAChF,EAEa,EAAAiK,KAAO,SAAChlB,GACnBA,EAAQ0sE,QAAQ1oC,EAAmChkC,EAAQ+a,OAAO,GAAI,OAAQ,QAChF,EAEa,EAAAsK,IAAM,SAACrlB,GAClBA,EAAQ0sE,QAAQ1oC,EAAmChkC,EAAQ+a,OAAO,GAAI,MAAO,OAC/E,EAEa,EAAAuK,KAAO,SAACtlB,GACnBA,EAAQ0sE,QAAQ1oC,EAAmChkC,EAAQ+a,OAAO,GAAI,OAAQ,QAChF,EAEa,EAAAi2D,gBAAkB,SAAChxE,EAAyBkG,GAIvD,OAHAlG,EAAQ0sE,QAAQ1oC,EACZhkC,EAAQ+a,OAAO,GAAI,mBAAmB,SAAArF,GAAK,uCAA0BA,EAAC,aAAKA,EAAC,8BAAjC,GAC3C,+DAAwDxP,EAAWgtB,MAAK,MAAMhtB,EAAWigB,WACtF,CACT,C,27BCvNA,cAEA,UAYA,aAIE,WAAoB/sB,GAAA,KAAAA,QAAAA,EAClBe,KAAKurC,KAAO,IAAI/qC,IAChBR,KAAKwrC,iBAAkB,CACzB,CAqHF,OApHE,YAAAnqB,YAAA,SAAYlZ,GACV,OAAOnI,KAAKurC,KAAKnpC,IAAI+F,EACvB,EACA,YAAAuZ,YAAA,SAAYvZ,EAAcgZ,GACxBnhB,KAAKurC,KAAKxpC,IAAIoG,EAAKgZ,EACrB,EACA,YAAAlZ,IAAA,SAAIwjC,EAAyB7qB,EAAmB0mB,EAAoBopC,G,YAApE,OACQpC,EAAStuE,KAAKf,QAAQqvE,OACtBjB,EAAqBrtE,KAAKf,QAAQiwE,wBAEpClvE,KAAKf,QAAQsuE,kBAIdF,EAA2B6T,eAAelhF,KAAKf,QAAQ6vE,kBAAmB,GAG7EzB,EAAmB8T,YAAY11C,EAAc21C,iBAC7C,IAAMC,EAAU,G,IAChB,IAAoB,QAAAzgE,GAAM,8BAAE,CAAvB,IAAM4C,EAAK,QACd69D,EAAQxhF,KAAK,CAACyhF,QAASD,EAAQzhF,OAAQ2hF,SAAU,CAACz+E,OAAQ0gB,EAAM1gB,S,uGAElE,IAAqB,QAAAwkC,GAAO,8BAAE,CAAzB,IAAM10B,EAAM,QACfyuE,EAAQxhF,KAAK,CAACyhF,QAASD,EAAQzhF,OAAQ2hF,SAAU,CAACz+E,OAAQ8P,EAAO9P,S,mGAEnE,IAAM0+E,EAAYlT,EAAOmT,gBAAgB,CAACloE,OAAQkyB,EAAc21C,gBAAgBM,mBAAmB,GAAIL,QAAO,IAO9G,GANAhU,EAAmBsU,aAAa,EAAGH,GAEnCnU,EAAmBuU,mBAAkB,MAArCvU,EAAkB,OAAuBqD,IAAa,IAEtD1wE,KAAKf,QAAQquE,wBAETttE,KAAKf,QAAQsuE,iBAAkB,CAIhCF,EAA2B6T,eAAelhF,KAAKf,QAAQ6vE,kBAAmB,GAE3E,IAAM,EAAY9uE,KAAKf,QAAQsvE,eAAe7nB,OAAO,GAAI+tB,eAAeE,SAAWF,eAAeoN,eAE5F,EAAW7hF,KAAKf,QAAQsvE,eAAe7nB,OAAO,GAAI+tB,eAAekB,SAAWlB,eAAeW,UAEjGp1E,KAAKf,QAAQmwE,iBACbpvE,KAAKf,QAAQ+vE,oBAAoB8S,gBAAgB9hF,KAAKf,QAAQ6vE,kBAAmB,EAAG,EAAG,EAAUhsE,OAAQ,GACzG9C,KAAKf,QAAQ+vE,oBAAoB8F,mBAAmB,EAAUhyE,OAAQ,EAAG,EAASA,OAAQ,EAAG,IAC7F9C,KAAKf,QAAQ49C,QAEb,IAAM,EAAW78C,KAAKf,QAAQkuE,gBACxB,EAAantE,KAAKf,QAAQ8gE,QAAQ39D,IAAI,GAAW,GAEvD,EAASU,OAAO+yE,SAASC,WAAWC,MAAM7uB,MAAK,WAC7C,IAAM66B,EAAa,IAAIjgF,eAAe,EAASgB,OAAO8xE,kBAChDoN,EAAeD,EAAW,GAC1BE,EAAaF,EAAW,GAE9B,EAASj/E,OAAO+xE,aAE8B,IAAnC,EAAK51E,QAAQijF,oBACtB,EAAKjjF,QAAQijF,kBAAoBF,GAGnC,IAAMp8B,EAAYnjD,OAAOu/E,EAAe,EAAK/iF,QAAQijF,mBAC/Cj8B,EAAUxjD,OAAOw/E,EAAa,EAAKhjF,QAAQijF,mBAEjD,IAAKz/E,OAAOC,cAAckjD,KAAenjD,OAAOC,cAAcujD,GAC5D,MAAM,IAAItjD,WAAW,6BAGvB,EAAK1D,QAAQsvE,eAAe+C,QAAQ,EAAUH,IAC9C,EAAKlyE,QAAQsvE,eAAe+C,QAAQ,EAASH,IAG7C3sB,QAAQ97B,IAAI,8BAAuB,EAAQ,YAAI,EAAU,6BAAqBu9B,EAAUL,EAAS,OACnG,G,CAGE5lD,KAAKf,QAAQquE,uBAAyB,IACxCttE,KAAKf,QAAQ49C,OAEjB,EACA,YAAA9sC,QAAA,WAEA,EACA,YAAA0R,MAAA,SAAMlN,EAA0B4tE,GAC9B,IAAM7T,EAAStuE,KAAKf,QAAQqvE,OAEtB8T,EAAO7tE,EAAYykE,iBAAgB,IAAAqF,oBAAmB8D,IACtDE,EAAe/T,EAAOgU,mBAAmB,CAACF,KAAI,IAMpD,OALA,IAAAzR,WAAU,WAAW,WAAM,sCAAyByR,EAAzB,IAKpB,CAAC7tE,YAAW,EAAE6sE,gBAFjB9S,EAAOiU,sBAAsB,CAAChQ,QAAS,CAAC9zE,OAAQ4jF,EAAcG,WAAY,QAASjpE,OAAQ,SAGjG,EAEA,YAAAk3D,2BAAA,SAA2BC,GACzB,IAAM5gD,EAA6B,iBAAlB4gD,EAA6BA,EAAgBA,EAAc5gD,EACtEw7C,EAA6B,iBAAlBoF,EAA6B,EAAKA,EAAcpF,GAAK,EAChEyN,EAA6B,iBAAlBrI,EAA6B,EAAKA,EAAcqI,GAAK,EAChE0J,EAAoBziF,KAAKf,QAAQqvE,OAAOP,OAAOC,iCACrD,GAAIl+C,GAAK2yD,GAAqBnX,GAAKmX,GAAqB1J,GAAK0J,EAC3D,MAAO,CAAC3yD,EAAGw7C,EAAGyN,GAEhB,IAAMx2E,EAAOutB,EAAIw7C,EAAIyN,EACjB2J,EAAkB53E,KAAKE,KAAKF,KAAK+f,KAAKtoB,IAC1C,GAAImgF,EAAkBD,EAAmB,CAEvC,IADAC,EAAkB53E,KAAKE,KAAKF,KAAK63E,KAAKpgF,KAChBkgF,EACpB,MAAM,IAAIjjF,MAAM,+CAElB,MAAO,CAACkjF,EAAiBA,EAAiBA,E,CAE1C,MAAO,CAACA,EAAiBA,EAAiB,EAE9C,EACF,EA5HA,GAAa,EAAAj0C,eAAAA,C,kCCXb,IAAY6mC,E,uEAAAA,EAAA,EAAAA,cAAA,EAAAA,YAAW,KACrB,uBACA,uBACA,wB,iaCHW,EAAAsN,oBACT,SAAC7/E,EAAkC8/E,EAAgBC,EAClD17E,GACC,GAAsB,iBAAXrE,GAAmC,OAAZA,EAAkB,CAClD,GAAI+/E,EAAKnoE,IAAI5X,GACX,MAAM,IAAIvD,MAAM,iCAEhBsjF,EAAKloE,IAAI7X,E,CAIb6E,OAAOy5E,QAAQt+E,GAASyR,SAAQ,SAAC,G,IAAA,SAACrM,EAAG,KAAE7H,EAAK,KACpCtB,EAAO,EAAW6jF,EAAS16E,EAAMA,EACvC,GAAqB,iBAAV7H,GACT,IAAAsiF,qBAAoBtiF,EAAkCtB,EAAO,IAAK8jF,EAAM17E,QACnE,GAAqB,iBAAV9G,GAAuC,iBAAVA,EAC7C8G,EAAQpI,EAAMsB,EAAMs4C,gBACf,IAAqB,kBAAVt4C,EAGhB,MAAM,IAAId,MAAM,iDAA0Cc,IAF1D8G,EAAQpI,EAAM,EAAU,IAAM,I,CAIlC,GACF,C,ivEC3BJ,IAQI+jF,EAQAC,EACAC,EAjBJ,UAEA,UAEA,aACA,SAEMC,EAAU,WAAe,QAAE,EAAApjF,IAAIG,KAAKsK,OAA6B,oBAAbtF,QAA3B,EAE3Bk+E,GAAe,EACfh6E,GAAc,EACdC,GAAU,EAORg6E,EAAiF,GACjFC,EAAuF,GACvFC,EAA+E,GAC/EC,EAAyD,GACzDC,EAA8D,GAC9DC,EAAuD,GAEvDC,EAAe,WACnB,GAAIP,IAAiBh6E,GAAeC,IAAY25E,EAC9C,MAAM,IAAIvjF,MAAM,mBAEpB,EAEMmkF,EAAuB,SAAChV,GAC5B,OAAQA,EAAGntE,KAAKD,MACd,IAAK,YACH4hF,GAAe,EACXxU,EAAGntE,KAAKgI,KACVJ,GAAU,EACV45E,EAAkB,GAAGrU,EAAGntE,KAAKgI,OAE7BL,GAAc,EACd65E,EAAkB,MAEpB,MACF,IAAK,WACCrU,EAAGntE,KAAKgI,IACVy5E,EAAiB,GAAGtU,EAAGntE,KAAKgI,KAE5By5E,EAAiB,KAEnB,MACF,IAAK,kBACCtU,EAAGntE,KAAKgI,IACV45E,EAA+BvzD,QAAS,GAAG8+C,EAAGntE,KAAKgI,KAEnD45E,EAA+BvzD,QAAS,GAAG8+C,EAAGntE,KAAKoiF,KAErD,MACF,IAAK,kBACCjV,EAAGntE,KAAKgI,IACV65E,EAA+BxzD,QAAS,GAAG8+C,EAAGntE,KAAKgI,KAEnD65E,EAA+BxzD,QAAS,GAAG8+C,EAAGntE,KAAKoiF,KAErD,MACF,IAAK,SACCjV,EAAGntE,KAAKgI,IACV85E,EAAuBzzD,QAAS,GAAG8+C,EAAGntE,KAAKgI,KAE3C85E,EAAuBzzD,QAAS,GAAG8+C,EAAGntE,KAAKoiF,KAE7C,MACF,IAAK,UACCjV,EAAGntE,KAAKgI,IACV+5E,EAAwB1zD,QAAS,GAAG8+C,EAAGntE,KAAKgI,KAE5C+5E,EAAwB1zD,QAAS,KAEnC,MACF,IAAK,MACC8+C,EAAGntE,KAAKgI,IACVg6E,EAAa3zD,QAAS,GAAG8+C,EAAGntE,KAAKgI,KAEjCg6E,EAAa3zD,QAAS,GAAG8+C,EAAGntE,KAAKoiF,KAEnC,MACF,IAAK,gBACCjV,EAAGntE,KAAKgI,IACVi6E,EAAsB5zD,QAAS,GAAG8+C,EAAGntE,KAAKgI,KAE1Ci6E,EAAsB5zD,QAAS,KAKvC,EAEMg0D,EAAgC,oBAAb5+E,SAAyE,QAA7C,EAAQ,OAARA,eAAQ,IAARA,cAAQ,EAARA,SAAU6+E,qBAAmC,eAAE79E,SAAM1G,EAE7F,EAAA0L,SAAW,qD,2BACtB,GAAsCi4E,IAAW,CAC/C,GAAI/5E,EACF,UAEF,GAAIg6E,EACF,MAAM,IAAI3jF,MAAM,4CAElB,GAAI4J,EACF,MAAM,IAAI5J,MAAM,yCAYlB,OATA2jF,GAAe,OAGY5jF,IAAvB,EAAAO,IAAIG,KAAK8jF,WACPF,GAA4C,IAA/BA,EAAUnkF,QAAQ,WACjC,EAAAI,IAAIG,KAAK8jF,UAAYF,EAAUG,OAAO,GAAI,EAAYC,YAAY,KAAO,IAItE,CAAP,EAAO,IAAIv+E,SAAc,SAACC,EAASC,GACjCm9E,SAAAA,EAAamB,aAEbnB,EAAc,aACFoB,UAAYR,EACxBX,EAAoB,CAACr9E,EAASC,GAC9B,IAAMipE,EAA0B,CAACttE,KAAM,YAAa6iF,GAAK,EAAAtkF,IAAIG,MAC7D8iF,EAAYsB,YAAYxV,EAC1B,I,CAGA,MAAO,CAAP,GAAO,IAAAyV,uBAAsB,EAAAxkF,IAAIG,M,QAIxB,EAAAskF,QAAU,SAAM/5E,EAAoBg6E,GAAoB,0C,yDAC7BtB,KACpCQ,IACO,CAAP,EAAO,IAAIh+E,SAAc,SAACC,EAASC,GACjCq9E,EAAmB,CAACt9E,EAASC,GAC7B,IAAMipE,EAA0B,CAACttE,KAAM,WAAY6iF,GAAK,CAAC55E,WAAU,EAAEg6E,aAAY,IACjFzB,EAAasB,YAAYxV,EAG3B,MARE,M,OAaF,OAHA4V,EAAKF,QAAQ/5E,EAAYg6E,GAGzB,IAAM,IAAArlF,OAAS,IAAAulF,iB,OAAf,S,mCAIS,EAAAC,sBAAwB,SAAM/7B,GAAiB,0C,2BAC1D,OAAsCs6B,KACpCQ,IACO,CAAP,EAAO,IAAIh+E,SAA+B,SAACC,EAASC,GAClDw9E,EAA+BvjF,KAAK,CAAC8F,EAASC,IAC9C,IAAMipE,EAA0B,CAACttE,KAAM,kBAAmB6iF,GAAK,CAACx7B,MAAK,IACrEm6B,EAAasB,YAAYxV,EAAS,CAACjmB,EAAM9lD,QAC3C,MAEO,CAAP,EAAO2hF,EAAKE,sBAAsB/7B,G,QAIzB,EAAAg8B,sBAAwB,SAAMC,EAAkC9hF,GAAyC,0C,2BAEhH,OAAsCmgF,KACpCQ,IACO,CAAP,EAAO,IAAIh+E,SAAqC,SAACC,EAASC,GACxDy9E,EAA+BxjF,KAAK,CAAC8F,EAASC,IAC9C,IAAMipE,EAA0B,CAACttE,KAAM,kBAAmB6iF,GAAK,CAACS,UAAS,EAAE9hF,QAAO,IAClFggF,EAAasB,YAAYxV,EAC3B,MAEO,CAAP,EAAO4V,EAAKG,sBAAsBC,EAAW9hF,G,QAIxC,EAAA+hF,cACT,SAAMl8B,EAAmB7lD,GAAyC,0C,2BACpE,OAAsCmgF,KACpCQ,IACO,CAAP,EAAO,IAAIh+E,SAAqC,SAACC,EAASC,GACxD09E,EAAuBzjF,KAAK,CAAC8F,EAASC,IACtC,IAAMipE,EAA0B,CAACttE,KAAM,SAAU6iF,GAAK,CAACx7B,MAAK,EAAE7lD,QAAO,IACrEggF,EAAasB,YAAYxV,EAAS,CAACjmB,EAAM9lD,QAC3C,MAEO,CAAP,EAAO2hF,EAAKK,cAAcl8B,EAAO7lD,G,QAIxB,EAAAgiF,eAAiB,SAAMC,GAAiB,0C,2BACnD,OAAsC9B,KACpCQ,IACO,CAAP,EAAO,IAAIh+E,SAAc,SAACC,EAASC,GACjC29E,EAAwB1jF,KAAK,CAAC8F,EAASC,IACvC,IAAMipE,EAA0B,CAACttE,KAAM,UAAW6iF,GAAKY,GACvDjC,EAAasB,YAAYxV,EAC3B,OAEA4V,EAAKM,eAAeC,G,YAIX,EAAA/8E,IAAM,SACf+8E,EAAmBC,EAAwBrkE,EAA8B6nD,EACzE1lE,GAAoC,0C,2BACtC,OAAsCmgF,KACpCQ,IACO,CAAP,EAAO,IAAIh+E,SAA8B,SAACC,EAASC,GACjD49E,EAAa3jF,KAAK,CAAC8F,EAASC,IAC5B,IAAMipE,EAA0B,CAACttE,KAAM,MAAO6iF,GAAK,CAACY,UAAS,EAAEC,aAAY,EAAErkE,OAAM,EAAE6nD,cAAa,EAAE1lE,QAAO,IAC3GggF,EAAasB,YAAYxV,EAAS4V,EAAKS,2BAA2BtkE,GACpE,MAEO,CAAP,EAAO6jE,EAAKx8E,IAAI+8E,EAAWC,EAAcrkE,EAAQ6nD,EAAe1lE,G,QAIvD,EAAA6G,aAAe,SAAMo7E,GAAiB,0C,2BACjD,OAAsC9B,KACpCQ,IACO,CAAP,EAAO,IAAIh+E,SAAc,SAACC,EAASC,GACjC69E,EAAsB5jF,KAAK,CAAC8F,EAASC,IACrC,IAAMipE,EAA0B,CAACttE,KAAM,gBAAiB6iF,GAAKY,GAC7DjC,EAAasB,YAAYxV,EAC3B,OAEA4V,EAAK76E,aAAao7E,G,uHCpOtB,cACA,UACA,SAEa,EAAAG,cAAgB,SAACpiF,GAC5B,IAAM9C,GAAO,IAAAykF,eACTU,EAAmB,EACjBC,EAAmB,GAEnBC,EAA0CviF,GAAW,CAAC,EAE5D,IACE,QAAkCxD,KAA9BwD,aAAO,EAAPA,EAASwiF,kBACXD,EAAWC,iBAAmB,OACzB,GACiC,iBAA7BxiF,EAAQwiF,mBAAkC9iF,OAAOgI,UAAU1H,EAAQwiF,mBAC1ExiF,EAAQwiF,iBAAmB,GAAKxiF,EAAQwiF,iBAAmB,EAC7D,MAAM,IAAI/lF,MAAM,4CAAqCuD,EAAQwiF,mBAG/D,QAAmChmF,KAA/BwD,aAAO,EAAPA,EAASyiF,mBACXF,EAAWE,kBAAoB,OAC1B,GAAyC,iBAA9BziF,EAAQyiF,oBAAmC/iF,OAAOgI,UAAU1H,EAAQyiF,mBACpF,MAAM,IAAIhmF,MAAM,4CAAqCuD,EAAQyiF,yBAGpCjmF,KAAvBwD,aAAO,EAAPA,EAASmhF,aACXoB,EAAWpB,WAAY,GAGzB,IAAIuB,EAAgB,EAOpB,QANqBlmF,KAAjBwD,aAAO,EAAPA,EAAS2iF,OACXD,GAAgB,IAAAE,iBAAgB5iF,EAAQ2iF,IAAKL,IAKtB,KAFzBD,EAAmBnlF,EAAK2lF,qBACpBN,EAAWC,iBAAmBD,EAAWE,oBAAsBF,EAAWpB,UAAYuB,IAExF,MAAM,IAAIjmF,MAAM,4BAclB,YAXuBD,KAAnBwD,aAAO,EAAPA,EAAS8iF,SACX,IAAAjD,qBAAoB7/E,EAAQ8iF,MAAO,GAAI,IAAIC,SAAoC,SAAC39E,EAAK7H,GACnF,IAAMylF,GAAgB,IAAAJ,iBAAgBx9E,EAAKk9E,GACrCW,GAAkB,IAAAL,iBAAgBrlF,EAAO+kF,GAE/C,GAAqF,IAAjFplF,EAAKgmF,sBAAsBb,EAAkBW,EAAeC,GAC9D,MAAM,IAAIxmF,MAAM,wCAAiC2I,EAAG,cAAM7H,GAE9D,IAGK,CAAC8kF,EAAkBC,E,CAC1B,MAAO97E,GAKP,MAJyB,IAArB67E,GACFnlF,EAAKimF,sBAAsBd,GAE7BC,EAAO7wE,QAAQvU,EAAKkmF,OACd58E,C,CAEV,C,o0DC9DA,IAQI68E,EARJ,UACA,UACA,UAGA,UACA,UAIA,0BAoFA,QA9EQ,YAAAzB,sBAAN,SAA4B0B,G,gGAGT,SAAMnkB,MAAMmkB,I,OACT,SADH,SACkBhkB,e,OACnC,OADMA,EAAc,SACb,CAAP,GAAO,IAAAsiB,uBAAsB,IAAIjkF,WAAW2hE,K,QAGxC,YAAAr4D,UAAN,SAAgBH,EAAiC9G,G,+GAC1CqjF,EAAD,MACF,IAAM,IAAA7B,SAAQ,EAAAzkF,IAAIG,KAAKuK,YAAa,IAAAipE,sBAAqB,EAAA3zE,IAAIO,Y,OAA7D,SACA+lF,GAAU,E,uBAGgB,iBAAjBv8E,EAAP,MACmB,oBAAVq4D,MAAP,MAEY,IAAM,IAAAC,WAAU,EAAAC,SAAV,CAAoBv4D,I,OACc,OADhD++C,EAAQ,SACwC,IAAM,IAAAk8B,eAAcl8B,EAAO7lD,I,cAAjF,kBAAsD,SAAmC,IAAxF/C,KAAKglF,UAAS,KAAEhlF,KAAK+H,WAAU,KAAE/H,KAAKyH,YAAW,K,aAIT,SAAMzH,KAAK2kF,sBAAsB96E,I,OAEpB,OAFhDy8E,EAAmC,SAEa,IAAM,IAAA1B,uBAAsB0B,EAAWvjF,I,OAA7F,kBAAsD,SAA+C,IAApG/C,KAAKglF,UAAS,KAAEhlF,KAAK+H,WAAU,KAAE/H,KAAKyH,YAAW,K,qCAGE,UAAM,IAAAq9E,eAAcj7E,EAAc9G,I,QAAxF,kBAAsD,SAA0C,IAA/F/C,KAAKglF,UAAS,KAAEhlF,KAAK+H,WAAU,KAAE/H,KAAKyH,YAAW,K,qCAIhD,YAAAsI,QAAN,W,mEACE,MAAO,CAAP,GAAO,IAAAg1E,gBAAe/kF,KAAKglF,W,QAGvB,YAAA/8E,IAAN,SAAUX,EAAiCC,EAAqCxE,G,iHA2B1E,OAzBEwjF,EAAuB,GACvBtB,EAAyB,GAC/Br9E,OAAOy5E,QAAQ/5E,GAAOkN,SAAQ,SAAAgyE,GAC5B,IAAMxnF,EAAOwnF,EAAI,GACX5kE,EAAS4kE,EAAI,GACbnuE,EAAQ,EAAKtQ,WAAWrI,QAAQV,GACtC,IAAe,IAAXqZ,EACF,MAAM,IAAI7Y,MAAM,yBAAkBR,EAAI,MAExCunF,EAAW1mF,KAAK+hB,GAChBqjE,EAAaplF,KAAKwY,EACpB,IAEMowD,EAA0B,GAChC7gE,OAAOy5E,QAAQ95E,GAASiN,SAAQ,SAAAgyE,GAC9B,IAAMxnF,EAAOwnF,EAAI,GAEXnuE,EAAQ,EAAK5Q,YAAY/H,QAAQV,GACvC,IAAe,IAAXqZ,EACF,MAAM,IAAI7Y,MAAM,0BAAmBR,EAAI,MAEzCypE,EAAc5oE,KAAKwY,EACrB,IAGI,IAAM,IAAApQ,KAAIjI,KAAKglF,UAAWC,EAAcsB,EAAWz9E,KAAI,SAAA+F,GAAK,OAACA,EAAEtN,KAAMsN,EAAEpN,KAAMoN,EAAErN,KAAnB,IAA2BinE,EAAe1lE,I,OAG1G,IAJMukC,EACF,SAEEr1B,EAAoC,CAAC,EAClCxS,EAAI,EAAGA,EAAI6nC,EAAQ1nC,OAAQH,IAClCwS,EAAOjS,KAAKyH,YAAYghE,EAAchpE,KAAO,IAAI,EAAA0B,OAAOmmC,EAAQ7nC,GAAG,GAAI6nC,EAAQ7nC,GAAG,GAAI6nC,EAAQ7nC,GAAG,IAEnG,MAAO,CAAP,EAAOwS,G,QAGT,YAAAtI,eAAA,WAEA,EAEA,YAAAC,aAAA,YACO,IAAAA,cAAa5J,KAAKglF,UACzB,EACF,EApFA,GAAa,EAAA95E,qCAAAA,C,qbCRb,cACA,UACA,SA4Ea,EAAAu7E,kBAAoB,SAAC1jF,G,YAC1B9C,GAAO,IAAAykF,eACTgC,EAAuB,EACrBrB,EAAmB,GAEnBsB,EAAkD5jF,GAAW,CAAC,GArDzC,SAACA,GACvBA,EAAQ8iF,QACX9iF,EAAQ8iF,MAAQ,CAAC,GAEd9iF,EAAQ8iF,MAAM/7E,UACjB/G,EAAQ8iF,MAAM/7E,QAAU,CAAC,GAE3B,IAAMA,EAAU/G,EAAQ8iF,MAAM/7E,QACzBA,EAAQ88E,+BAEX98E,EAAQ88E,6BAA+B,KAIrC7jF,EAAQ8F,oBACR9F,EAAQ8F,mBAAmB48B,MAAK,SAAAohD,GAAM,MAA4C,YAA7B,iBAAPA,EAAkBA,EAAKA,EAAG7nF,KAAlC,MACxC+D,EAAQ+jF,kBAAmB,EAE/B,CAoCEC,CAAqBJ,GAErB,IACE,IAAMK,EAnFuB,SAACA,GAChC,OAAQA,GACN,IAAK,WACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,WACH,OAAO,EACT,IAAK,MACH,OAAO,GACT,QACE,MAAM,IAAIxnF,MAAM,gDAAyCwnF,IAE/D,CAsEmCC,CAA8D,QAArC,EAAAN,EAAeK,8BAAsB,QAAI,OAC3FE,EArEe,SAACA,GACxB,OAAQA,GACN,IAAK,aACH,OAAO,EACT,IAAK,WACH,OAAO,EACT,QACE,MAAM,IAAI1nF,MAAM,sCAA+B0nF,IAErD,CA4D0BC,CAA6C,QAA5B,EAAAR,EAAeO,qBAAa,QAAI,cACjEE,EAC8B,iBAAzBT,EAAeU,OAAqB,IAAA1B,iBAAgBgB,EAAeU,MAAOhC,GAAU,EAEzFE,EAAkD,QAA/B,EAAAoB,EAAepB,wBAAgB,QAAI,EAC5D,IAAK9iF,OAAOgI,UAAU86E,IAAqBA,EAAmB,GAAKA,EAAmB,EACpF,MAAM,IAAI/lF,MAAM,4CAAqC+lF,IAGvD,IAAMC,EAAoD,QAAhC,EAAAmB,EAAenB,yBAAiB,QAAI,EAC9D,IAAK/iF,OAAOgI,UAAU+6E,IAAsBA,EAAoB,GAAKA,EAAoB,EACvF,MAAM,IAAIhmF,MAAM,4CAAqCgmF,IAGvD,IAAM8B,EAAgF,iBAA1CX,EAAeY,wBACvD,IAAA5B,iBAAgBgB,EAAeY,uBAAwBlC,GACvD,EAMJ,GAA6B,KAJ7BqB,EAAuBzmF,EAAKunF,yBACxBR,IAA0BL,EAAec,oBAAqBd,EAAeG,iBAAkBI,IAC7FP,EAAee,gBAAiB,EAAGN,EAAiB7B,EAAkBC,EACxE8B,IAEF,MAAM,IAAI9nF,MAAM,gCAkBlB,OAfImnF,EAAe99E,oBA/DnB,SAAC69E,EAA8B79E,EAC9Bw8E,G,YACC,IAAiB,QAAAx8E,GAAkB,8BAAE,CAAhC,IAAMg+E,EAAE,QACPc,EAAuB,iBAAPd,EAAkBA,EAAKA,EAAG7nF,KAG9C,OAAQ2oF,GACN,IAAK,UACHA,EAAS,UACT,MACF,IAAK,SACHA,EAAS,KACT,MACF,IAAK,OACL,IAAK,MACH,SACF,QACE,MAAM,IAAInoF,MAAM,4BAAqBmoF,IAGzC,IAAMC,GAAmB,IAAAjC,iBAAgBgC,EAAQtC,GACjD,GAA0F,KAAtF,IAAAX,eAAcmD,4BAA4BnB,EAAsBkB,GAClE,MAAM,IAAIpoF,MAAM,2CAAoCmoF,G,mGAG1D,CAuCEG,CAAsBpB,EAAsBC,EAAe99E,mBAAoBw8E,QAGpD9lF,IAAzBonF,EAAed,QACjB,IAAAjD,qBAAoB+D,EAAed,MAAO,GAAI,IAAIC,SAAoC,SAAC39E,EAAK7H,GAC1F,IAAMylF,GAAgB,IAAAJ,iBAAgBx9E,EAAKk9E,GACrCW,GAAkB,IAAAL,iBAAgBrlF,EAAO+kF,GAE/C,GAA6F,IAAzFplF,EAAK8nF,0BAA0BrB,EAAsBX,EAAeC,GACtE,MAAM,IAAIxmF,MAAM,4CAAqC2I,EAAG,cAAM7H,GAElE,IAGK,CAAComF,EAAsBrB,E,CAC9B,MAAO97E,GAKP,MAJ6B,IAAzBm9E,GACFzmF,EAAK+nF,0BAA0BtB,GAEjCrB,EAAO7wE,QAAQvU,EAAKkmF,OACd58E,C,CAEV,C,8GC3IA,aAEa,EAAAo8E,gBAAkB,SAACnkF,EAAc6jF,GAC5C,IAAMplF,GAAO,IAAAykF,eAEPuD,EAAahoF,EAAKioF,gBAAgB1mF,GAAQ,EAC1C2xE,EAAalzE,EAAKkoF,QAAQF,GAIhC,OAHAhoF,EAAKmoF,aAAa5mF,EAAM2xE,EAAY8U,GACpC5C,EAAOxlF,KAAKszE,GAELA,CACT,C,sOCiBa,EAAAhJ,2BAA6B,SAAC5oE,GACzC,OAAQA,GACN,IAAK,OACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,OACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,SACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,SACH,OAAO,GACT,IAAK,UACH,OAAO,EACT,IAAK,UACH,OAAO,GACT,IAAK,SACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,SACH,OAAO,GAET,QACE,MAAM,IAAI/B,MAAM,iCAA0B+B,IAEhD,EAKa,EAAA8mF,2BAA6B,SAACne,GACzC,OAAQA,GACN,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,QACT,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,QACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,QACT,KAAK,GACH,MAAO,SACT,KAAK,EACH,MAAO,UACT,KAAK,GACH,MAAO,UACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,QACT,KAAK,GACH,MAAO,SAET,QACE,MAAM,IAAI1qE,MAAM,iCAA0B0qE,IAEhD,EAMa,EAAAwI,qBAAuB,SAAC4V,GACpB,YAAC/oF,EAAW,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,OAAGA,EAAW,EAAG,EAAG,EAAG,EAAG,OAAGA,OAAWA,OAAWA,GAAW+oF,EAA5F,EAKJ,EAAAC,kCAAoC,SAAChnF,GAG5C,OAAQA,GACN,IAAK,UACH,OAAOd,aACT,IAAK,QAUL,IAAK,OACH,OAAOC,WATT,IAAK,OACH,OAAOC,UACT,IAAK,SACH,OAAOC,YACT,IAAK,QACH,OAAOC,WACT,IAAK,QACH,OAAOC,WAGT,IAAK,UACH,OAAOC,aACT,IAAK,SACH,OAAOC,YACT,IAAK,QACH,OAAOW,cACT,IAAK,SACH,OAAOG,eACT,QACE,MAAM,IAAItC,MAAM,4BAAqB+B,IAE3C,EAKS,EAAAkyE,qBAAuB,SAACpzE,GACnC,OAAQA,GACN,IAAK,UACH,OAAO,EACT,IAAK,OACH,OAAO,EACT,IAAK,UACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,QACE,MAAM,IAAIb,MAAM,qCAA8Ba,IAEpD,C,2uECvJA,cACA,UACA,UACA,UACA,SAOa,EAAAkkF,QAAU,SAAC/5E,EAAoBg6E,GAC1C,IAAMgE,GAAY,IAAA9D,eAAc+D,SAASj+E,EAAYg6E,GACrD,GAAkB,IAAdgE,EACF,MAAM,IAAIhpF,MAAM,qDAA8CgpF,GAElE,EAOA,IAAME,EAAiB,IAAIloF,IAMd,EAAAmkF,sBAAwB,SAAC/7B,GACpC,IAAM3oD,GAAO,IAAAykF,eACPiE,EAAkB1oF,EAAKkoF,QAAQv/B,EAAMjgD,YAE3C,OADA1I,EAAKizE,OAAOnxE,IAAI6mD,EAAO+/B,GAChB,CAACA,EAAiB//B,EAAMjgD,WACjC,EAEa,EAAAi8E,sBACT,SAAC0B,EAAkCvjF,G,MAC3B9C,GAAO,IAAAykF,eAETkE,EAAgB,EAChBlC,EAAuB,EACvBrB,EAAmB,GAEvB,IAIE,GAHCqB,GAAD,KAAiC,IAAAD,mBAAkB1jF,GAAQ,IAAtC,GAAEsiF,EAAM,KAGP,KADtBuD,EAAgB3oF,EAAK4oF,kBAAkBvC,EAAU,GAAIA,EAAU,GAAII,IAEjE,MAAM,IAAIlnF,MAAM,yB,SAGlBS,EAAKkmF,MAAMG,EAAU,IACQ,IAAzBI,GACFzmF,EAAK+nF,0BAA0BtB,GAEjCrB,EAAO7wE,QAAQvU,EAAKkmF,M,CAUtB,IAPA,IAAMz3D,EAAazuB,EAAK6oF,kBAAkBF,GACpCG,EAAc9oF,EAAK+oF,mBAAmBJ,GAEtC7gF,EAAa,GACbkhF,EAAwB,GACxBxhF,EAAc,GACdyhF,EAAyB,GACtBzpF,EAAI,EAAGA,EAAIivB,EAAYjvB,IAAK,CACnC,IAAM,EAAOQ,EAAKkpF,iBAAiBP,EAAenpF,GAClD,GAAa,IAAT,EACF,MAAM,IAAID,MAAM,2BAElBypF,EAAsBppF,KAAK,GAC3BkI,EAAWlI,KAAKI,EAAKmpF,aAAa,G,CAEpC,IAAS3pF,EAAI,EAAGA,EAAIspF,EAAatpF,IAAK,CACpC,IAAM,EAAOQ,EAAKopF,kBAAkBT,EAAenpF,GACnD,GAAa,IAAT,EACF,MAAM,IAAID,MAAM,4BAElB0pF,EAAuBrpF,KAAK,GAC5B4H,EAAY5H,KAAKI,EAAKmpF,aAAa,G,CAIrC,OADAV,EAAe3mF,IAAI6mF,EAAe,CAACA,EAAeK,EAAuBC,IAClE,CAACN,EAAe7gF,EAAYN,EACrC,EAOS,EAAAq9E,cACT,SAACl8B,EAAmB7lD,GAClB,IAAMujF,GAAmC,IAAA3B,uBAAsB/7B,GAC/D,OAAO,IAAAg8B,uBAAsB0B,EAAWvjF,EAC1C,EAES,EAAAgiF,eAAiB,SAACC,GAC7B,IAAM/kF,GAAO,IAAAykF,eACP56E,EAAU4+E,EAAetmF,IAAI4iF,GACnC,IAAKl7E,EACH,MAAM,IAAItK,MAAM,sBAElB,IAAMopF,EAAgB9+E,EAAQ,GACxBm/E,EAAwBn/E,EAAQ,GAChCo/E,EAAyBp/E,EAAQ,GAEvCm/E,EAAsBz0E,QAAQvU,EAAKqpF,UACnCJ,EAAuB10E,QAAQvU,EAAKqpF,UACpCrpF,EAAKspF,mBAAmBX,GACxBF,EAAen8E,OAAOy4E,EACxB,EAKa,EAAA/8E,IAAM,SACf+8E,EAAmBC,EAAwBrkE,EAA8B6nD,EACzE1lE,GAAoC,0C,mJAGtC,GAFM9C,GAAO,IAAAykF,iBACP56E,EAAU4+E,EAAetmF,IAAI4iF,IAEjC,MAAM,IAAIxlF,MAAM,sBAEZopF,EAAgB9+E,EAAQ,GACxBm/E,EAAwBn/E,EAAQ,GAChCo/E,EAAyBp/E,EAAQ,GAEjC4kB,EAAau2D,EAAarlF,OAC1BmpF,EAActgB,EAAc7oE,OAE9BwlF,EAAmB,EACnBoE,EAA6B,GAE3BC,EAAwB,GACxBC,EAAwB,G,iBAM5B,I,sBAHA,MAAuC,IAAAvE,eAAcpiF,GAAQ,GAA5DqiF,EAAgB,MAAEoE,EAAgB,M,WAG1B/pF,GACP,IAAMyjB,EAAWtC,EAAOnhB,GAAG,GACrBgC,EAAOmf,EAAOnhB,GAAG,GACjB+B,EAAOof,EAAOnhB,GAAG,GAEnB0zE,OAAU,EACVwW,OAAc,EAElB,GAAI1nF,MAAMC,QAAQV,GAAO,CAEvBmoF,EAAiB,EAAInoF,EAAK5B,OAC1BuzE,EAAalzE,EAAKkoF,QAAQwB,GAC1BD,EAAY7pF,KAAKszE,GAEjB,IADA,IAAI1xB,EAAY0xB,EAAa,EACpB,EAAI,EAAG,EAAI3xE,EAAK5B,OAAQ,IAAK,CACpC,GAAuB,iBAAZ4B,EAAK,GACd,MAAM,IAAInC,UAAU,+BAAwB,EAAC,qBAE/CY,EAAKmyE,QAAQ3wB,MAAe,IAAAkkC,iBAAgBnkF,EAAK,GAAIkoF,E,OAGvDC,EAAiBnoF,EAAKmH,WACtBwqE,EAAalzE,EAAKkoF,QAAQwB,GAC1BD,EAAY7pF,KAAKszE,GACjBlzE,EAAKizE,OAAOnxE,IAAI,IAAIrB,WAAWc,EAAKsB,OAAQtB,EAAKkH,WAAYihF,GAAiBxW,GAGhF,IAAM3tB,EAAQvlD,EAAK2yE,YACbzc,EAAal2D,EAAK4yE,WAAW,EAAIpxE,EAAK7B,QAC5C,IACE,IAAI,EAAWu2D,EAAa,EAC5B10D,EAAK+S,SAAQ,SAAAwB,GAAK,OAAA/V,EAAK2pF,OAAO,KAAc5zE,CAA1B,IAClB,IAAM4L,EAAS3hB,EAAK4pF,kBAChB,IAAA1f,4BAA2BjnD,GAAWiwD,EAAYwW,EAAgBxzB,EAAY10D,EAAK7B,QACvF,GAAe,IAAXgiB,EACF,MAAM,IAAIpiB,MAAM,yBAElBiqF,EAAY5pF,KAAK+hB,E,SAEjB3hB,EAAK8yE,aAAavtB,E,GAvCb/lD,EAAI,EAAGA,EAAIivB,EAAYjvB,I,EAAvBA,GA2CHqqF,EAAiB7pF,EAAK2yE,YACtBmX,EAAoB9pF,EAAK4yE,WAAwB,EAAbnkD,GACpCs7D,EAAmB/pF,EAAK4yE,WAAwB,EAAbnkD,GACnCu7D,EAAqBhqF,EAAK4yE,WAAyB,EAAdkW,GACrCmB,EAAoBjqF,EAAK4yE,WAAyB,EAAdkW,G,iBAOxC,I,sBAJIoB,EAAmBJ,EAAoB,EACvCK,EAAkBJ,EAAmB,EACrCK,EAAoBJ,EAAqB,EACzCK,EAAmBJ,EAAoB,EAClCzqF,EAAI,EAAGA,EAAIivB,EAAYjvB,IAC9BQ,EAAKmyE,QAAQ+X,KAAsBV,EAAYhqF,GAC/CQ,EAAKmyE,QAAQgY,KAAqBnB,EAAsBhE,EAAaxlF,IAEvE,IAASA,EAAI,EAAGA,EAAIspF,EAAatpF,IAC/BQ,EAAKmyE,QAAQiY,KAAuB,EACpCpqF,EAAKmyE,QAAQkY,KAAsBpB,EAAuBzgB,EAAchpE,I,OAItE+oF,EAAYvoF,EAAKsqF,QACjB3B,EAAeoB,EAAkBD,EAAmBr7D,EAAYw7D,EAAmBnB,EACnFkB,EAAoB7E,IAGlBoF,EAAavqF,EAAKwqF,sBACqB,IAApBD,EAAWtjC,KACtB,GAAMsjC,GADhB,M,OACFhC,EAAY,S,iBAKd,GAFM51E,EAA+B,GAEnB,IAAd41E,EACF,IAAS/oF,EAAI,EAAGA,EAAIspF,EAAatpF,IAAK,CAC9BmiB,EAAS3hB,EAAKmyE,QAAQ6X,EAAqB,EAAIxqF,GAE/CirF,EAA2BzqF,EAAK2yE,YAEhC+X,EAAmB1qF,EAAK4yE,WAAW,IAErCtxE,OAAI,EAAyB4xE,EAAa,EAC9C,IAGE,GAAkB,KAFlBqV,EAAYvoF,EAAK2qF,kBACbhpE,EAAQ+oE,EAAkBA,EAAmB,EAAGA,EAAmB,EAAGA,EAAmB,KAE3F,MAAM,IAAInrF,MAAM,wDAAiDgpF,IAQnE,IANIqC,EAAkBF,EAAmB,EACnCznE,EAAWjjB,EAAKmyE,QAAQyY,KAC9B1X,EAAalzE,EAAKmyE,QAAQyY,KACpB10B,EAAal2D,EAAKmyE,QAAQyY,KAC1Bl1B,EAAa11D,EAAKmyE,QAAQyY,KAC1BppF,EAAO,GACJ,EAAI,EAAG,EAAIk0D,EAAY,IAC9Bl0D,EAAK5B,KAAKI,EAAKmyE,QAAQjc,EAAa,EAAI,IAM1C,GAJAl2D,EAAKqpF,SAASnzB,GAER5zD,EAAuB,IAAhBd,EAAK7B,OAAe,EAAI6B,EAAKmgC,QAAO,SAACrmB,EAAGxH,GAAM,OAAAwH,EAAIxH,CAAJ,IAE9C,YADbxS,GAAO,IAAA8mF,4BAA2BnlE,IACX,CAGrB,IAFM6yC,EAAuB,GACzBtU,EAAY0xB,EAAa,EACpB,EAAI,EAAG,EAAI5wE,EAAM,IAClBklC,EAASxnC,EAAKmyE,QAAQ3wB,KACtBqpC,EAAiB,IAAMvoF,EAAO,OAAIhD,EAAYU,EAAKmyE,QAAQ3wB,GAAaha,EAC9EsuB,EAAWl2D,KAAKI,EAAKmpF,aAAa3hD,EAAQqjD,IAE5Cl4E,EAAO/S,KAAK,CAAC0B,EAAME,EAAMs0D,G,MAEnB5zD,IAAwB,IAAAomF,mCAAkChnF,GAC1DC,GAAO,IAAIW,GAAsBI,GACvC,IAAI7B,WAAWc,GAAKsB,OAAQtB,GAAKkH,WAAYlH,GAAKmH,YAC7C5G,IAAI9B,EAAKizE,OAAOtwD,SAASuwD,EAAYA,EAAa3xE,GAAKmH,aAC5DiK,EAAO/S,KAAK,CAAC0B,EAAME,EAAMD,I,SAG3BvB,EAAK8yE,aAAa2X,GACL,WAATnpF,GAAqB4xE,GACvBlzE,EAAKkmF,MAAMhT,GAEblzE,EAAK8qF,kBAAkBnpE,E,EAK7B,GAAkB,IAAd4mE,EACF,MAAO,CAAP,EAAO51E,GAEP,MAAM,IAAIpT,MAAM,gDAAyCgpF,EAAS,M,cAGpEvoF,EAAK8yE,aAAa+W,G,qCAGpBL,EAAYj1E,QAAQvU,EAAK8qF,mBACzBrB,EAAYl1E,QAAQvU,EAAKkmF,OAEzBlmF,EAAKimF,sBAAsBd,GAC3BoE,EAAiBh1E,QAAQvU,EAAKkmF,O,6BAOrB,EAAAv8E,aAAe,SAACo7E,GAC3B,IAAM/kF,GAAO,IAAAykF,eACP56E,EAAU4+E,EAAetmF,IAAI4iF,GACnC,IAAKl7E,EACH,MAAM,IAAItK,MAAM,sBAElB,IAAMopF,EAAgB9+E,EAAQ,GAGxBkhF,EAAkB/qF,EAAKgrF,iBAAiBrC,GAC9C,GAAwB,IAApBoC,EACF,MAAM,IAAIxrF,MAAM,kCAElBS,EAAKqpF,SAAS0B,EAChB,EAEa,EAAA9F,2BAA6B,SAACh2E,G,QACnCg8E,EAA6B,G,IACnC,IAAqB,QAAAh8E,GAAO,8BAAE,CAAzB,IACG1N,EADS,QACK,IACfS,MAAMC,QAAQV,IAASA,EAAKsB,QAC/BooF,EAAQrrF,KAAK2B,EAAKsB,O,mGAGtB,OAAOooF,CACT,C,mqEC/TA,IAeIjrF,EAfJ,aAMMkrF,EAC0B,EAAQ,KAElCC,EAC2B,EAAQ,MAMrCjiF,GAAc,EACdg6E,GAAe,EACf/5E,GAAU,EA2DD,EAAAk7E,sBAAwB,SAAM+G,GAA2B,0C,4EACpE,GAAIliF,EACF,MAAO,CAAP,EAAOzD,QAAQC,WAEjB,GAAIw9E,EACF,MAAM,IAAI3jF,MAAM,yDAElB,GAAI4J,EACF,MAAM,IAAI5J,MAAM,sDA+FlB,OA5FA2jF,GAAe,EAGTmI,EAAUD,EAAMhhF,YAChBG,EAAa6gF,EAAM7gF,WACnBF,EAAO+gF,EAAM/gF,KAEbihF,EAAa/gF,EAAa,GA3EH,WAC7B,IAEE,MAAiC,oBAAtB/B,oBAMmB,oBAAnB+iF,iBACT,IAAIA,gBAAiBC,MAAMpH,YAAY,IAAI57E,kBAAkB,IAKxDijF,YAAYC,SAAS,IAAIjrF,WAAW,CACzC,EAAG,GAAI,IAAK,IAAK,EAAG,EAAI,EAAI,EAAG,EAAG,EAAG,EAAI,GAAI,EAAK,EAAI,EAAG,EAAG,EAAI,EAAG,EACnE,EAAG,EAAI,EAAK,EAAK,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAI,IAAK,GAAI,EAAG,EAAG,GAAI,M,CAElE,MAAO6I,GACP,OAAO,C,CAEX,CAqDuCqiF,GAC/BC,EAAUvhF,GApDM,WACtB,IAeE,OAAOohF,YAAYC,SAAS,IAAIjrF,WAAW,CACzC,EAAK,GAAI,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAK,GAAK,EAAG,GAAI,EACvF,IAAK,GAAI,IAAK,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAI,EAAI,IAAK,IAAK,EAAG,GAAI,K,CAEzF,MAAO6I,GACP,OAAO,C,CAEX,CA6B0BuiF,GAElB/H,EAAYsH,EAAMtH,UAClBgI,EAA0C,iBAAdhI,EAAyBA,OAAYxkF,EACjEysF,EA/BgB,SAACH,EAAkBN,GACzC,OAAIA,EACKM,EAAU,8BAAgC,yBAE1CA,EAAU,qBAAuB,eAE5C,CAyBuBI,CAAgBJ,EAASN,GACxCW,EAAwC,iBAAdnI,EAAyBA,EAAUiI,QAAgBzsF,EAE/E4sF,GAAY,EAEVC,EAA8B,GAGhCd,EAAU,GACZc,EAAMvsF,KAAK,IAAI6F,SAAQ,SAACC,GACtBguC,YAAW,WACTw4C,GAAY,EACZxmF,GACF,GAAG2lF,EACL,KAIFc,EAAMvsF,KAAK,IAAI6F,SAAQ,SAACC,EAASC,GAC/B,IAAMrH,EAAUgtF,EAAaH,EAAyBD,EAChDn5C,EAAiC,CACrCq6C,WAAY,SAACC,EAAkBC,GAC7B,OAAuChB,GAAce,EAASljC,SAAS,eACnD,oBAATojC,KACFC,IAAIC,gBAAgB,IAAIF,KAC3B,CAGE,EAAQ,OAEV,CAACjrF,KAAM,qBAGT+qF,EAASljC,SAAS,SAChB8iC,IAIWH,QAAAA,EAAsBQ,GAUrBP,EAGXO,EAAkBD,CAC3B,GAGF,GAAuCf,EACrC,GAAoB,oBAATiB,KACTx6C,EAAO26C,oBAAsBtG,EAAK58E,K,IAAgB,4BAC7C,CACL,IAAMmjF,EAAmB,gEAAyDruF,EAAQq6C,WAAU,SACpG5G,EAAO26C,oBAAsB,IAAIH,KAAK,CAACI,GAAmB,CAACrrF,KAAM,mB,CAIrEhD,EAAQyzC,GAAQkV,MAEZ,SAAAzoD,GACE0kF,GAAe,EACfh6E,GAAc,EACdlJ,EAAOxB,EACPkH,GACF,IAEA,SAACknF,GACC1J,GAAe,EACf/5E,GAAU,EACVxD,EAAOinF,EACT,GACN,KAEA,GAAMnnF,QAAQonF,KAAKV,I,OAEnB,GAFA,SAEID,EACF,MAAM,IAAI3sF,MAAM,kEAA2D8rF,EAAO,O,kBAIzE,EAAA5G,YAAc,WACzB,GAAIv7E,GAAelJ,EACjB,OAAOA,EAGT,MAAM,IAAIT,MAAM,sCAClB,EAEa,EAAAuQ,QAAU,W,OACjB5G,GAAgBg6E,GAAiB/5E,IACnC+5E,GAAe,EAEwB,QAAtC,EAAAljF,EAA+B8sF,eAAO,SAAEC,sBACzC/sF,OAAOV,EAEP4jF,GAAe,EACfh6E,GAAc,EACdC,GAAU,EAEd,C,2FC/Me,SAAS6jF,IACtB,OAAO,IAAO,8s0FAAs52F,cAAU1tF,OAAWA,EAC372F,C,gCCAAd,EAAOD,QAAU,SAAU8lD,EAAS4oC,EAAmBC,EAAeC,GACpE,IAAIC,EAAczuF,MAAQ0uF,OAE1B,IACE,IACE,IAAIC,EAEJ,IAEEA,EAAO,IAAIF,EAAYb,KAAK,CAACloC,GAC/B,CAAE,MAAO/6C,IAGPgkF,EAAO,IADWF,EAAYG,aAAeH,EAAYI,mBAAqBJ,EAAYK,gBAAkBL,EAAYM,gBAEnHC,OAAOtpC,GACZipC,EAAOA,EAAKM,SACd,CAEA,IAAIpB,EAAMY,EAAYZ,KAAOY,EAAYS,UACrCC,EAAYtB,EAAIC,gBAAgBa,GAChCS,EAAS,IAAIX,EAAYH,GAAmBa,EAAWZ,GAE3D,OADAV,EAAIwB,gBAAgBF,GACbC,CACT,CAAE,MAAOzkF,GACP,OAAO,IAAI8jF,EAAYH,GAAmB,+BAA+B3mE,OAAO2nE,mBAAmB5pC,IAAW6oC,EAChH,CACF,CAAE,MAAO5jF,GACP,IAAK6jF,EACH,MAAM5tF,MAAM,kCAGd,OAAO,IAAI6tF,EAAYH,GAAmBE,EAAKD,EACjD,CACF,C,2BCtCIgB,WAAWt/E,GAAsIs/E,YAAnIA,WAAW,oBAAoBlpF,UAAUA,SAAS6+E,cAAc7+E,SAAS6+E,cAAc79E,SAAI,I,YAA2E,SAAS4I,GAAG,SAASwoC,IAAI,OAAO3U,EAAE5/B,QAAQ2D,GAAGE,EAAE+7B,EAAE5/B,QAAQm7B,CAAC,CAAC,SAAS5G,IAAI,OAAOqL,EAAE5/B,QAAQ2D,GAAGE,EAAE+7B,EAAE5/B,QAAQsrF,CAAC,CAAC,SAAS7kF,IAAI,OAAOm5B,EAAE5/B,QAAQ2D,GAAGE,EAAE+7B,EAAE5/B,QAAQurF,CAAC,CAAC,SAAS5uF,IAAI,OAAOijC,EAAE5/B,QAAQ2D,GAAGE,EAAE+7B,EAAE5/B,QAAQwrF,CAAC,CAAC,SAAS/yE,IAAI,OAAOmnB,EAAE5/B,QAAQ2D,GAAGE,EAAE+7B,EAAE5/B,QAAQyrF,CAAC,CAAC,IAAIC,EAAE3+E,EAAE2L,EAAE3M,EAAEA,GAAG,CAAC,EAAE2/E,IAAIA,OAAE,IAAS3/E,EAAEA,EAAE,CAAC,GAAG2/E,EAAEC,MAAM,IAAI/oF,SAAQ,SAAUmJ,EAAEwoC,GAAGxnC,EAAEhB,EAAE2M,EAAE67B,CAAE,IAAG,IAAI1oC,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,EAAE+kC,EAAE1jE,OAAO0D,OAAO,CAAC,EAAEkjF,GAAGzO,EAAE,iBAAiBj4E,EAAE,CAAC+G,EAAEwoC,KAAK,MAAMA,GAAG/Q,EAAE,iBAAiBgnD,OAAOx+E,EAAE,mBAAmB8/E,cAAcl1D,EAAE,iBAAiBm1D,SAAS,iBAAiBA,QAAQC,UAAU,iBAAiBD,QAAQC,SAAS70E,KAAKzT,EAAEgoF,EAAEO,yBAAwB,EAAGh7E,EAAE,GAAG,SAAS0nB,EAAE5sB,GAAG,OAAO2/E,EAAEnC,WAAWmC,EAAEnC,WAAWx9E,EAAEkF,GAAGA,EAAElF,CAAC,CAAC,GAAG6qB,EAAE,CAAC,IAAI7qB,EAAEkF,EAAEjF,EAAE,eAAwBiF,GAAG,IAAIi7E,KAAczoD,EAAE,KAAKooD,IAAI34E,EAAE,EAAQ,MAAM24E,EAAE,EAAQ,KAAO,EAAGhgF,EAAE,SAASE,EAAEwoC,GAAG,OAAO9Q,IAAI13B,EAAE8/E,EAAEM,UAAUpgF,GAAGmH,EAAEk5E,aAAargF,EAAEwoC,OAAE,EAAO,OAAO,EAAEzoC,EAAEC,KAAKA,EAAEF,EAAEE,GAAE,IAAK/L,SAAS+L,EAAE,IAAInO,WAAWmO,IAAIA,GAAG6/E,EAAE,CAAC7/E,EAAEwoC,EAAEhgB,KAAKkP,IAAI13B,EAAE8/E,EAAEM,UAAUpgF,GAAGmH,EAAEosD,SAASvzD,GAAE,SAAUA,EAAEtF,GAAGsF,EAAEwoB,EAAExoB,GAAGwoC,EAAE9tC,EAAEzG,OAAQ,GAAC,EAAG,EAAE+rF,QAAQM,KAAKvvF,SAASmgF,EAAE8O,QAAQM,KAAK,GAAG7yE,QAAQ,MAAM,MAAMuyE,QAAQM,KAAK13E,MAAM,GAAGo3E,QAAQO,GAAG,qBAAoB,SAAUvgF,GAAG,KAAKA,aAAawgF,IAAI,MAAMxgF,CAAE,IAAGggF,QAAQO,GAAG,sBAAqB,SAAUvgF,GAAG,MAAMA,CAAE,IAAG/G,EAAE,CAAC+G,EAAEwoC,KAAK,GAAGvnB,EAAE,MAAM++D,QAAQS,SAASzgF,EAAEwoC,EAAEA,aAAag4C,IAAIE,EAAE,6BAA6Bl4C,GAAGw3C,QAAQW,KAAK3gF,EAAC,EAAG2/E,EAAEiB,QAAQ,WAAW,MAAM,4BAA4B,EAAE,IAAI5gF,EAAE,EAAQ,KAAiB,CAAC,MAAMA,GAAG,MAAM21C,QAAQtY,MAAM,2GAA2Gr9B,CAAC,CAAC,EAAAC,EAAO4gF,OAAO7gF,EAAE6gF,MAAM,MAAMppD,GAAGx3B,KAAKA,EAAEiF,EAAEnV,KAAK0vC,SAASqhD,KAAK,oBAAoB1qF,UAAUA,SAAS6+E,gBAAgB/vE,EAAE9O,SAAS6+E,cAAc79E,KAAKkoF,aAAap6E,EAAEo6E,YAAYp6E,EAAE,IAAIA,EAAErU,QAAQ,SAASqU,EAAEiwE,OAAO,EAAEjwE,EAAEuI,QAAQ,SAAS,IAAI2nE,YAAY,KAAK,GAAG,GAAGvqD,IAAI/qB,EAAEE,IAAI,IAAIwoC,EAAE,IAAIu4C,eAAe,OAAOv4C,EAAEw4C,KAAK,MAAMhhF,GAAE,GAAIwoC,EAAEy4C,KAAK,MAAMz4C,EAAE04C,cAAcjhF,IAAIF,EAAEC,IAAI,IAAIwoC,EAAE,IAAIu4C,eAAe,OAAOv4C,EAAEw4C,KAAK,MAAMhhF,GAAE,GAAIwoC,EAAE24C,aAAa,cAAc34C,EAAEy4C,KAAK,MAAM,IAAIpvF,WAAW22C,EAAE44C,SAAQ,GAAIvB,EAAE,CAAC7/E,EAAEwoC,EAAEhgB,KAAK,IAAI9tB,EAAE,IAAIqmF,eAAermF,EAAEsmF,KAAK,MAAMhhF,GAAE,GAAItF,EAAEymF,aAAa,cAAczmF,EAAErD,OAAO,KAAK,KAAKqD,EAAEwzC,QAAQ,GAAGxzC,EAAEwzC,QAAQxzC,EAAE0mF,SAAS54C,EAAE9tC,EAAE0mF,UAAU54D,GAAE,EAAG9tB,EAAE2mF,QAAQ74D,EAAE9tB,EAAEumF,KAAK,KAAI,IAAKp2D,GAAG,oBAAoBiuB,cAAc,EAAA74C,EAAO64C,YAAY,qBAAmC,IAAIwoC,EAAE3rC,QAAQ97B,IAAI48B,KAAKd,SAAS4rC,EAAE5rC,QAAQ6rC,KAAK/qC,KAAKd,SAAS9qB,IAAI6M,IAAI4pD,EAAEthF,GAAGmH,EAAEs6E,UAAU,EAAEzhF,EAAE,MAAMuhF,EAAEvhF,GAAGmH,EAAEs6E,UAAU,EAAEzhF,EAAE,OAAO,IAAIjI,EAAEkjE,EAAE0kB,EAAE+B,OAAOJ,EAAEZ,EAAEf,EAAEgC,UAAUJ,EAAExoF,OAAO0D,OAAOkjF,EAAEljB,GAAGA,EAAE,KAAKkjB,EAAEiC,cAAc1Q,EAAEyO,EAAEiC,aAAajC,EAAEkC,OAAO5oF,EAAE0mF,EAAEkC,MAAMlC,EAAEmC,aAAa/pF,EAAE4nF,EAAEmC,YAAY,IAAI7gE,EAAE0+D,EAAEoC,gBAAe,EAAG,iBAAiBlF,aAAamF,GAAG,mCAAmC,IAAInuD,EAAEouD,EAAErqF,EAAEw3B,EAAEmwD,EAAEC,EAAEC,EAAEC,EAAEwC,GAAE,EAAGC,EAAE,oBAAoB9jB,YAAY,IAAIA,YAAY,aAAQ,EAAO,SAAS+jB,EAAEpiF,EAAEwoC,EAAEhgB,GAAG,IAAI9tB,GAAG8tC,KAAK,GAAGhgB,EAAE,IAAIA,EAAEggB,EAAExoC,EAAEwoB,MAAMA,GAAG9tB,MAAM8tB,EAAE,GAAG,GAAGA,EAAEggB,GAAGxoC,EAAE/L,QAAQkuF,EAAE,OAAOA,EAAE/1E,OAAOpM,EAAE/L,kBAAkB2F,kBAAkBoG,EAAE4I,MAAM4/B,EAAEhgB,GAAGxoB,EAAE+T,SAASy0B,EAAEhgB,IAAI,IAAI9tB,EAAE,GAAG8tC,EAAEhgB,GAAG,CAAC,IAAI53B,EAAEoP,EAAEwoC,KAAK,GAAG,IAAI53C,EAAE,CAAC,IAAI8b,EAAE,GAAG1M,EAAEwoC,KAAK,GAAG,MAAM,IAAI53C,GAAG8J,GAAG2nF,OAAOC,cAAc,GAAG1xF,IAAI,EAAE8b,OAAO,CAAC,IAAIizE,EAAE,GAAG3/E,EAAEwoC,KAAK,OAAO53C,EAAE,MAAM,IAAIA,IAAI,GAAGA,IAAI,GAAG8b,GAAG,EAAEizE,GAAG,EAAE/uF,IAAI,GAAG8b,GAAG,GAAGizE,GAAG,EAAE,GAAG3/E,EAAEwoC,MAAM9tC,GAAG2nF,OAAOC,aAAa1xF,IAAIA,GAAG,MAAM8J,GAAG2nF,OAAOC,aAAa,MAAM1xF,GAAG,GAAG,MAAM,KAAKA,GAAG,CAAC,MAAM8J,GAAG2nF,OAAOC,aAAa1xF,EAAE,CAAC,OAAO8J,CAAC,CAAC,SAAS6nF,EAAEviF,EAAEwoC,GAAG,OAAOxoC,KAAK,GAAGoiF,EAAE55D,IAAIxoB,EAAEwoC,GAAG,EAAE,CAAC,SAASg6C,EAAExiF,EAAEwoC,EAAEhgB,EAAE9tB,GAAG,KAAK,EAAEA,GAAG,OAAO,EAAE,IAAI9J,EAAE43B,KAAK,EAAE9tB,EAAE8tB,EAAE9tB,EAAE,EAAE,IAAI,IAAIgS,EAAE,EAAEA,EAAE1M,EAAEjP,SAAS2b,EAAE,CAAC,IAAIizE,EAAE3/E,EAAEyiF,WAAW/1E,GAAG,GAAG,OAAOizE,GAAG,OAAOA,IAAIA,EAAE,QAAQ,KAAKA,IAAI,IAAI,KAAK3/E,EAAEyiF,aAAa/1E,IAAI,KAAKizE,EAAE,CAAC,GAAGn3D,GAAG9tB,EAAE,MAAM8tC,EAAEhgB,MAAM,GAAGm3D,CAAC,KAAK,CAAC,GAAG,MAAMA,EAAE,CAAC,GAAGn3D,EAAE,GAAG9tB,EAAE,MAAM8tC,EAAEhgB,MAAM,GAAG,IAAIm3D,GAAG,CAAC,KAAK,CAAC,GAAG,OAAOA,EAAE,CAAC,GAAGn3D,EAAE,GAAG9tB,EAAE,MAAM8tC,EAAEhgB,MAAM,GAAG,IAAIm3D,GAAG,EAAE,KAAK,CAAC,GAAGn3D,EAAE,GAAG9tB,EAAE,MAAM8tC,EAAEhgB,MAAM,GAAG,IAAIm3D,GAAG,GAAGn3C,EAAEhgB,MAAM,GAAG,IAAIm3D,GAAG,GAAG,EAAE,CAACn3C,EAAEhgB,MAAM,GAAG,IAAIm3D,GAAG,EAAE,EAAE,CAACn3C,EAAEhgB,MAAM,GAAG,IAAI,GAAGm3D,CAAC,CAAC,CAAC,OAAOn3C,EAAEhgB,IAAI,GAAG,EAAEA,EAAE53B,CAAC,CAAC,SAASiH,EAAEmI,GAAG,IAAI,IAAIwoC,EAAE,EAAEhgB,EAAE,EAAEA,EAAExoB,EAAEjP,SAASy3B,EAAE,CAAC,IAAI9tB,EAAEsF,EAAEyiF,WAAWj6D,GAAG,KAAK9tB,EAAE8tC,IAAI,MAAM9tC,EAAE8tC,GAAG,EAAE,OAAO9tC,GAAG,OAAOA,GAAG8tC,GAAG,IAAIhgB,GAAGggB,GAAG,CAAC,CAAC,OAAOA,CAAC,CAAC,SAAS1wC,EAAEkI,GAAGpI,EAAEoI,EAAE2/E,EAAEzc,MAAM9zC,EAAE,IAAIt9B,UAAUkO,GAAG2/E,EAAE+C,OAAO,IAAI1wF,WAAWgO,GAAG2/E,EAAE5E,OAAOyE,EAAE,IAAIvtF,WAAW+N,GAAG2/E,EAAEtb,OAAOkb,EAAE,IAAI1tF,WAAWmO,GAAG2/E,EAAEgD,QAAQ,IAAI5wF,YAAYiO,GAAG2/E,EAAEpc,QAAQkc,EAAE,IAAIttF,YAAY6N,GAAG2/E,EAAEiD,QAAQ,IAAIhxF,aAAaoO,GAAG2/E,EAAEkD,QAAQnD,EAAE,IAAIxtF,aAAa8N,EAAE,CAACrI,IAAIC,EAAE+nF,EAAE1rF,QAAQ,IAAIi2E,EAAEyV,EAAEmD,gBAAgB,SAAS,GAAGnrF,EAAEk8B,EAAE8rD,EAAEoD,WAAWnrF,EAAE+nF,EAAE1rF,YAAY,GAAG0rF,EAAEoD,WAAWlvD,EAAE8rD,EAAEoD,gBAAgB,MAAMlvD,EAAE,IAAIgpD,YAAYmG,OAAO,CAACC,QAAQ/Y,EAAE,MAAMgZ,QAAQ,MAAMC,QAAO,KAAMlvF,kBAAkB2F,mBAAmB,MAAM8mF,EAAE,+NAA+N71D,GAAG8qB,QAAQ97B,IAAI,qHAAqHlpB,MAAM,cAAckjC,IAAIj8B,EAAEi8B,EAAE5/B,QAAQi2E,EAAEtyE,EAAEkC,WAAWhC,EAAEF,GAAG,IAAIujE,EAAEioB,EAAE,GAAG1lE,EAAE,GAAG2lE,EAAE,GAAG,SAASC,IAAI,IAAItjF,EAAE2/E,EAAE4D,OAAOviE,QAAQoiE,EAAE7oB,QAAQv6D,EAAE,CAAC,IAAIwjF,EAAEC,EAAE,EAAEvoB,GAAE,KAAKwoB,GAAG,KAAK,SAAS1B,GAAGhiF,GAAG,MAAMrI,EAAE69E,YAAY,CAACmO,IAAI,UAAUvwB,IAAIpzD,IAAI2/E,EAAEiE,SAASjE,EAAEiE,QAAQ5jF,GAAG0gF,EAAE1gF,EAAE,WAAWA,EAAE,KAAKkiF,GAAE,EAAGliF,EAAE,IAAI68E,YAAYgH,aAAa7jF,EAAE,4CAA4C2M,EAAE3M,GAAGA,CAAC,CAAC,SAAS8jF,KAAK,OAAON,EAAEO,WAAW,wCAAwC,CAAC,SAASC,KAAK,IAAIhkF,EAAEwjF,EAAE,IAAI,GAAGxjF,GAAGwjF,GAAGzrF,EAAE,OAAO,IAAIlG,WAAWkG,GAAG,GAAGgI,EAAE,OAAOA,EAAEC,GAAG,KAAK,iDAAiD,CAAC,MAAMA,GAAGgiF,GAAGhiF,EAAE,CAAC,CAACwjF,EAAE,yBAAyBM,OAAON,EAAE52D,EAAE42D,IAAI,IAAIS,GAAG,CAAC,EAAE,SAASzD,GAAGxgF,GAAG7O,KAAKhB,KAAK,aAAagB,KAAK6uE,QAAQ,gCAAgChgE,EAAE,IAAI7O,KAAK+8C,OAAOluC,CAAC,CAAC,SAASkkF,GAAGlkF,IAAIA,EAAEmkF,GAAGC,GAAGpkF,KAAKgiF,KAAKmC,GAAGE,GAAGrkF,EAAE,CAAC,SAASskF,GAAGtkF,GAAG,IAAIwoC,EAAE27C,GAAGI,KAAK,IAAI/7C,EAAE,OAAO,EAAE27C,GAAGK,GAAGxzF,KAAKw3C,GAAG27C,GAAGC,GAAGpkF,EAAEykF,IAAIj8C,EAAEA,EAAEi8C,GAAGzkF,EAAEykF,GAAG,IAAIj8D,EAAE,CAACm7D,IAAI,MAAMe,cAAc1kF,EAAE2kF,GAAGvxB,IAAIpzD,EAAE4kF,GAAGC,YAAY7kF,EAAEykF,IAAI,OAAOj8C,EAAEs8C,GAAG,KAAKt8D,EAAEu8D,KAAKjsC,YAAYd,MAAMxP,EAAEgtC,YAAYhtD,EAAExoB,EAAEglF,GAAE,EAAGx8C,EAAEy8C,SAASz8C,EAAEs8C,YAAYt8C,EAAEs8C,IAAI,CAAC,CAAC,SAASI,GAAGllF,GAAG,GAAGrI,EAAE,OAAOwtF,GAAG,EAAE,EAAEnlF,GAAGihB,IAAIkjE,GAAGiB,KAAKzF,EAAE0F,QAAQ1F,EAAE0F,OAAOrlF,GAAGkiF,GAAE,GAAIjpF,EAAE+G,EAAE,IAAIwgF,GAAGxgF,GAAG,CAAC,SAASslF,GAAGtlF,EAAEwoC,GAAG,IAAIA,GAAG7wC,EAAE,MAAM4tF,GAAGvlF,GAAG,SAASklF,GAAGllF,EAAE,CAAC,IAAImkF,GAAG,CAACqB,GAAG,GAAGhB,GAAG,GAAGiB,GAAG,GAAGrB,GAAG,CAAC,EAAEsB,GAAG,WAAW/tF,GAAGwsF,GAAGwB,IAAI,EAAEC,GAAG,WAAW,EAAED,GAAG,WAAWxB,GAAG0B,sBAAsB1B,GAAG2B,GAAG3B,GAAG4B,cAAc5B,GAAG6B,GAAG7B,GAAG8B,cAAc9B,GAAG+B,GAAGjlE,GAAE,CAAE,EAAEilE,GAAG,WAAW,EAAEd,GAAG,WAAW,IAAI,IAAIplF,KAAKjH,OAAO0vD,OAAO07B,GAAGC,IAAID,GAAGE,GAAGrkF,GAAG,IAAIA,KAAKmkF,GAAGqB,GAAGxlF,EAAEq1E,YAAY8O,GAAGqB,GAAG,EAAE,EAAEnB,GAAG,SAASrkF,GAAG,IAAIwoC,EAAExoC,EAAEykF,UAAUN,GAAGC,GAAG57C,GAAG27C,GAAGqB,GAAGx0F,KAAKgP,GAAGmkF,GAAGK,GAAG1zF,OAAOqzF,GAAGK,GAAG3zF,QAAQmP,GAAG,GAAGA,EAAEykF,GAAG,EAAE0B,GAAG39C,EAAE,EAAEs9C,GAAG,WAAW,EAAEE,GAAG,WAAW7B,GAAGsB,GAAG9/E,SAAS3F,GAAGA,KAAK,EAAEomF,GAAG,SAASpmF,EAAEwoC,GAAGxoC,EAAEs1E,UAAU9sD,IAAI,IAAI9tB,GAAG8tB,EAAEA,EAAE71B,MAAMgxF,IAAI,GAAG3jF,EAAEykF,KAAKN,GAAGkC,GAAGrmF,EAAEykF,IAAIj8D,EAAE89D,cAAc99D,EAAE89D,cAAcC,KAAK,CAAC,IAAI31F,EAAEuzF,GAAGC,GAAG57D,EAAEg+D,IAAI51F,EAAEA,EAAE4kF,YAAYhtD,EAAEA,EAAEi+D,cAAc/F,EAAE,0CAA0ChmF,EAAE,uBAAuB8tB,EAAE89D,aAAa,sCAAsC,KAAK,yBAAyB5rF,EAAEgsF,GAAGl+D,EAAEg4C,OAAO,gBAAgB9lE,EAAE4pF,GAAG97D,GAAG,kBAAkB9tB,EAAEwpF,GAAG17D,EAAEm+D,QAAQ,eAAejsF,GAAG8tB,EAAEA,EAAEm+D,OAAOjsF,EAAEypF,GAAGC,GAAG57D,UAAU27D,GAAGC,GAAG57D,GAAG9tB,EAAE26E,YAAY8Q,GAAG39D,GAAG27D,GAAGK,GAAG1zF,OAAOqzF,GAAGK,GAAG3zF,QAAQ6J,GAAG,GAAGA,EAAE+pF,GAAG,GAAG,iBAAiB/pF,EAAEypF,GAAGC,GAAG57D,EAAEm+D,QAAQnR,YAAY,CAACmO,IAAI,WAAW,WAAWjpF,GAAGsF,EAAEilF,QAAO,EAAGz8C,GAAGA,EAAExoC,GAAGA,EAAE8kF,KAAK9kF,EAAE8kF,YAAY9kF,EAAE8kF,KAAK,UAAUpqF,EAAEugE,EAAE,UAAUzyC,EAAEo+D,SAAS,KAAKp+D,EAAEq+D,MAAM,aAAansF,EAAEgmF,EAAE,UAAUl4D,EAAEo+D,SAAS,KAAKp+D,EAAEq+D,MAAM,UAAUnsF,EAAEosF,MAAM,UAAUt+D,EAAEo+D,SAAS,KAAKp+D,EAAEq+D,MAAM,iBAAiBr+D,EAAEgyC,OAAOx6D,EAAEw1E,YAAYhtD,GAAG,YAAY9tB,EAAEilF,EAAEiE,SAASjE,EAAEiE,QAAQp7D,EAAE4qC,KAAK14D,GAAGgmF,EAAE,kCAAkChmF,GAAGypF,GAAGkC,QAAG,CAAK,EAAGrmF,EAAEqhF,QAAQrhF,IAAI,MAAM0gF,EAAE,yBAAyB1gF,EAAE+mF,SAAS,IAAI/mF,EAAEgnF,OAAO,KAAKhnF,EAAEggE,SAAShgE,GAAG6qB,IAAI7qB,EAAEugF,GAAG,WAAU,SAAU/3C,GAAGxoC,EAAEs1E,UAAU,CAAC3iF,KAAK61C,GAAI,IAAGxoC,EAAEugF,GAAG,SAAQ,SAAU/3C,GAAGxoC,EAAEqhF,QAAQ74C,EAAG,IAAGxoC,EAAEugF,GAAG,gBAAe,WAAa,KAAIvgF,EAAEw1E,YAAY,CAACmO,IAAI,OAAOsD,UAAUtH,EAAE7B,qBAAqBwB,WAAWyD,WAAWlvD,EAAEqzD,WAAWjF,GAAG,EAAEkF,GAAG,WAAW,IAAInnF,EAAE4sB,EAAE,+BAA+Bu3D,GAAGqB,GAAGx0F,KAAK,IAAI6vF,OAAO7gF,GAAG,EAAEukF,GAAG,WAAW,OAAO,GAAGJ,GAAGqB,GAAGz0F,SAASozF,GAAGgD,KAAKhD,GAAGiC,GAAGjC,GAAGqB,GAAG,KAAKrB,GAAGqB,GAAG5hD,KAAK,GAAG,SAASwjD,GAAGpnF,GAAG,KAAK,EAAEA,EAAEjP,QAAQiP,EAAEghB,OAAFhhB,CAAU2/E,EAAE,CAAC,SAAS4F,GAAGvlF,GAAG,GAAGrI,EAAE,OAAOwtF,GAAG,EAAE,EAAEnlF,GAAG,IAAIslF,GAAGtlF,EAAE,CAAC,MAAMA,GAAGA,aAAawgF,IAAI,UAAUxgF,GAAG/G,EAAE,EAAE+G,EAAE,CAAC,CAAC2/E,EAAEzB,QAAQiG,GAAGxE,EAAE0H,oBAAoB,WAAW,IAAIrnF,EAAEumF,KAAK/9C,EAAE9tC,IAAIsF,EAAE,IAAI,IAAI,GAAGA,EAAEtF,IAAIsF,EAAE,IAAI,IAAI,GAAGsnF,GAAG9+C,EAAEA,EAAExoC,GAAGunF,GAAG/+C,EAAE,EAAE,IAAIg/C,GAAG,GAAG,SAASC,GAAGznF,GAAG,IAAIwoC,EAAEg/C,GAAGxnF,GAAG,OAAOwoC,IAAIxoC,GAAGwnF,GAAGz2F,SAASy2F,GAAGz2F,OAAOiP,EAAE,GAAGwnF,GAAGxnF,GAAGwoC,EAAE2yB,EAAE5nE,IAAIyM,IAAIwoC,CAAC,CAACm3C,EAAE+H,iBAAiB,SAAS1nF,EAAEwoC,GAAGxoC,EAAEynF,GAAGznF,EAAHynF,CAAMj/C,GAAGvnB,EAAEkjE,GAAG+B,GAAGlmF,GAAG2nF,GAAG3nF,EAAE,EAAE,IAAI4nF,GAAGC,GAAGC,GAAG,GAAGC,GAAG,EAAEC,GAAG,EAAE,SAASC,GAAGjoF,GAAG7O,KAAK+2F,GAAGloF,EAAE7O,KAAKg3F,GAAGnoF,EAAE,GAAG7O,KAAKi3F,GAAG,SAASpoF,GAAGpP,IAAIO,KAAKg3F,GAAG,GAAG,IAAI,GAAGnoF,CAAC,EAAE7O,KAAKk3F,GAAG,WAAW,OAAOz3F,IAAIO,KAAKg3F,GAAG,GAAG,IAAI,EAAE,EAAEh3F,KAAKm3F,GAAG,SAAStoF,GAAGpP,IAAIO,KAAKg3F,GAAG,GAAG,IAAI,GAAGnoF,CAAC,EAAE7O,KAAKo3F,GAAG,WAAW,OAAO33F,IAAIO,KAAKg3F,GAAG,GAAG,IAAI,EAAE,EAAEh3F,KAAKq3F,GAAG,WAAW9tF,IAAIvJ,KAAKg3F,IAAI,IAAI,GAAG,CAAC,EAAEh3F,KAAKs3F,GAAG,SAASzoF,GAAGA,EAAEA,EAAE,EAAE,EAAEwoC,IAAIr3C,KAAKg3F,GAAG,IAAI,IAAI,GAAGnoF,CAAC,EAAE7O,KAAK+hB,GAAG,WAAW,OAAO,GAAGs1B,IAAIr3C,KAAKg3F,GAAG,IAAI,IAAI,EAAE,EAAEh3F,KAAKu3F,GAAG,SAAS1oF,GAAGA,EAAEA,EAAE,EAAE,EAAEwoC,IAAIr3C,KAAKg3F,GAAG,IAAI,IAAI,GAAGnoF,CAAC,EAAE7O,KAAKw3F,GAAG,WAAW,OAAO,GAAGngD,IAAIr3C,KAAKg3F,GAAG,IAAI,IAAI,EAAE,EAAEh3F,KAAKu0F,GAAG,SAAS1lF,EAAEwoC,GAAGr3C,KAAKy3F,GAAG,GAAGz3F,KAAKi3F,GAAGpoF,GAAG7O,KAAKm3F,GAAG9/C,GAAGr3C,KAAKq3F,KAAKr3F,KAAKs3F,IAAG,GAAIt3F,KAAKu3F,IAAG,EAAG,EAAEv3F,KAAK03F,GAAG,WAAWC,QAAQ/8E,IAAIrR,IAAIvJ,KAAKg3F,IAAI,EAAE,EAAE,EAAEh3F,KAAK43F,GAAG,WAAW,OAAO,IAAID,QAAQ33E,IAAIzW,IAAIvJ,KAAKg3F,IAAI,EAAE,EAAE,EAAEh3F,KAAKy3F,GAAG,SAAS5oF,GAAGpP,IAAIO,KAAKg3F,GAAG,IAAI,IAAI,GAAGnoF,CAAC,EAAE7O,KAAK63F,GAAG,WAAW,OAAOp4F,IAAIO,KAAKg3F,GAAG,IAAI,IAAI,EAAE,EAAEh3F,KAAK83F,GAAG,WAAW,GAAGC,GAAG/3F,KAAKk3F,MAAM,OAAOz3F,IAAIO,KAAK+2F,IAAI,IAAI,GAAG,IAAIloF,EAAE7O,KAAK63F,KAAK,OAAO,IAAIhpF,EAAEA,EAAE7O,KAAK+2F,EAAE,CAAC,CAAC,SAASiB,GAAGnpF,GAAG,OAAOopF,GAAG,IAAInB,GAAGjoF,GAAGmoF,GAAG,CAAC,SAASkB,GAAGrpF,EAAEwoC,EAAEhgB,EAAE9tB,GAAG,OAAO/C,EAAEwtF,GAAG,EAAE,EAAEnlF,EAAEwoC,EAAEhgB,EAAE9tB,GAAG4uF,GAAGtpF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE,CAAC,SAAS4uF,GAAGtpF,EAAEwoC,EAAEhgB,EAAE9tB,GAAG,GAAG,oBAAoBd,kBAAkB,OAAO8mF,EAAE,uFAAuF,EAAE,IAAI9vF,EAAE,GAAG,OAAO+G,GAAG,IAAI/G,EAAEG,OAAOs4F,GAAGrpF,EAAEwoC,EAAEhgB,EAAE9tB,IAAIsF,EAAE,CAAC2kF,GAAGn8D,EAAEi8D,GAAGzkF,EAAE4kF,GAAGlqF,EAAEsqF,GAAGp0F,GAAG+G,GAAGqI,EAAEupF,GAAG,cAAc/T,YAAYx1E,EAAEpP,GAAG,GAAG0zF,GAAGtkF,GAAG,CAAC,SAASwpF,GAAGxpF,EAAEwoC,EAAEhgB,GAAG,OAAO7wB,EAAEwtF,GAAG,EAAE,EAAEnlF,EAAEwoC,EAAEhgB,GAAG,CAAC,CAAC,SAASihE,GAAGzpF,EAAEwoC,GAAG,GAAG7wC,EAAE,OAAOwtF,GAAG,EAAE,EAAEnlF,EAAEwoC,EAAE,CAAC,SAASkhD,GAAG1pF,EAAEwoC,GAAG,GAAG7wC,EAAE,OAAOwtF,GAAG,EAAE,EAAEnlF,EAAEwoC,EAAE,CAAC,SAASmhD,GAAG3pF,EAAEwoC,EAAEhgB,GAAG,GAAG7wB,EAAE,OAAOwtF,GAAG,EAAE,EAAEnlF,EAAEwoC,EAAEhgB,EAAE,CAAC,SAASohE,GAAG5pF,EAAEwoC,EAAEhgB,GAAG,OAAO7wB,EAAEwtF,GAAG,EAAE,EAAEnlF,EAAEwoC,EAAEhgB,GAAG,CAAC,CAAC,SAASqhE,GAAG7pF,EAAEwoC,GAAG,GAAG7wC,EAAE,OAAOwtF,GAAG,EAAE,EAAEnlF,EAAEwoC,EAAE,CAAC,SAASshD,GAAG9pF,EAAEwoC,EAAEhgB,GAAG,GAAG7wB,EAAE,OAAOwtF,GAAG,GAAG,EAAEnlF,EAAEwoC,EAAEhgB,EAAE,CAAC,SAASuhE,GAAG/pF,EAAEwoC,EAAEhgB,EAAE9tB,GAAG,GAAG/C,EAAE,OAAOwtF,GAAG,GAAG,EAAEnlF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE,CAAC,SAASsvF,GAAGhqF,EAAEwoC,EAAEhgB,EAAE9tB,GAAG,GAAG/C,EAAE,OAAOwtF,GAAG,GAAG,EAAEnlF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE,CAAC,SAASuvF,GAAGjqF,EAAEwoC,EAAEhgB,EAAE9tB,GAAG,GAAG/C,EAAE,OAAOwtF,GAAG,GAAG,EAAEnlF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE,CAAC,SAASwvF,GAAGlqF,GAAG,GAAGrI,EAAE,OAAOwtF,GAAG,GAAG,EAAEnlF,EAAE,CAAC,SAASmqF,GAAGnqF,EAAEwoC,GAAG,GAAG7wC,EAAE,OAAOwtF,GAAG,GAAG,EAAEnlF,EAAEwoC,EAAE,CAAC,SAAS4hD,GAAGpqF,EAAEwoC,EAAEhgB,GAAG,GAAG7wB,EAAE,OAAOwtF,GAAG,GAAG,EAAEnlF,EAAEwoC,EAAEhgB,EAAE,CAAC,SAASk+D,GAAG1mF,GAAG8oF,QAAQuB,MAAM3vF,IAAIsF,GAAG,EAAE,GAAGumF,MAAM+D,GAAGtqF,GAAG8oF,QAAQyB,gBAAgB7vF,IAAIsF,GAAG,EAAE,EAAE,EAAE,CAAC,SAASwqF,GAAGxqF,GAAG,OAAOpP,IAAIoP,IAAI,GAAG,WAAWtF,IAAIsF,EAAE,IAAI,EAAE,CAAC,SAASyqF,GAAGzqF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,GAAG,OAAO/U,EAAEwtF,GAAG,GAAG,EAAEnlF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,IAAI,EAAE,CAAC,SAASg+E,GAAG1qF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,GAAG,GAAG/U,EAAE,OAAOwtF,GAAG,GAAG,EAAEnlF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAE,CAAC,SAASi+E,GAAG3qF,GAAG,IAAIwoB,EAAE3wB,EAAEmI,GAAG,EAAEtF,EAAEkwF,GAAGpiE,GAAG,OAAO9tB,GAAG8nF,EAAExiF,EAAEwoC,IAAI9tC,EAAE8tB,GAAG9tB,CAAC,CAAC,SAASmwF,GAAG7qF,EAAEwoC,EAAEhgB,GAAG,SAAS9b,EAAE1M,GAAG,OAAOA,EAAEA,EAAE8qF,eAAe79E,MAAM,sBAAsBjN,EAAE,GAAG,KAAK,CAAC,GAAGrI,EAAE,OAAOwtF,GAAG,GAAG,EAAEnlF,EAAEwoC,EAAEhgB,GAAG,IAAIm3D,GAAE,IAAK/oC,MAAMm0C,cAAc/pF,EAAE,IAAI41C,KAAK+oC,EAAE,EAAE,GAAGhzE,EAAE,IAAIiqC,KAAK+oC,EAAE,EAAE,GAAGA,EAAE3+E,EAAEgqF,oBAAoB,IAAIlrF,EAAE6M,EAAEq+E,oBAAoBnL,EAAE5jF,KAAK47B,IAAI8nD,EAAE7/E,GAAGpF,IAAIsF,GAAG,IAAI,GAAG,GAAG6/E,EAAEnlF,IAAI8tC,GAAG,IAAI,GAAG50C,OAAO+rF,GAAG7/E,GAAGE,EAAE0M,EAAE1L,GAAGwnC,EAAE97B,EAAEC,GAAG3M,EAAE2qF,GAAG3qF,GAAGwoC,EAAEmiD,GAAGniD,GAAG1oC,EAAE6/E,GAAG/uF,IAAI43B,GAAG,IAAI,GAAGxoB,EAAEpP,IAAI43B,EAAE,GAAG,IAAI,GAAGggB,IAAI53C,IAAI43B,GAAG,IAAI,GAAGggB,EAAE53C,IAAI43B,EAAE,GAAG,IAAI,GAAGxoB,EAAE,CAAC,SAASmlF,GAAGnlF,EAAEwoC,GAAG,IAAIhgB,EAAEyiE,UAAUl6F,OAAO,EAAE2J,EAAEuwF,UAAU,OAAO,SAASjrF,GAAG,IAAIwoC,EAAE0iD,KAAK,OAAOlrF,EAAEA,IAAIunF,GAAG/+C,GAAGxoC,CAAC,CAA3C,EAA6C,KAAM,IAAI,IAAIpP,EAAEu6F,GAAG,EAAE3iE,GAAGm3D,EAAE/uF,GAAG,EAAEoQ,EAAE,EAAEA,EAAEwnB,EAAExnB,IAAI,CAAC,IAAI2L,EAAEjS,EAAE,EAAEsG,GAAG0L,IAAIizE,EAAE3+E,IAAI,GAAG2L,CAAC,CAAC,OAAOy+E,GAAGprF,EAAEwoB,EAAE53B,EAAE43C,EAAG,GAAE,CAACm3C,EAAE0L,6BAA6B3E,GAAGmB,GAAGh9D,EAAE,KAAK,IAAI7qB,EAAEggF,QAAQsL,SAAS,OAAO,IAAItrF,EAAE,GAAGA,EAAE,GAAG,KAAKrI,EAAE,IAAImhD,YAAYd,MAAM2nC,EAAE4L,8BAA8B,IAAIzyC,YAAYd,MAAM,IAAIwzC,GAAGC,GAAG,GAAGC,GAAG,CAAC,EAAE,SAASC,KAAK,IAAIH,GAAG,CAAC,IAAIxrF,EAAEwoC,EAAE,CAACojD,KAAK,WAAWC,QAAQ,WAAWC,KAAK,IAAIC,IAAI,IAAIC,KAAK,iBAAiBC,MAAM,iBAAiBnwF,WAAWA,UAAUowF,WAAWpwF,UAAUowF,UAAU,IAAI,KAAKz+E,QAAQ,IAAI,KAAK,SAASgqB,EAAEy5C,GAAG,kBAAkB,IAAIlxE,KAAK0rF,QAAG,IAASA,GAAG1rF,UAAUwoC,EAAExoC,GAAGwoC,EAAExoC,GAAG0rF,GAAG1rF,GAAG,IAAIwoB,EAAE,GAAG,IAAIxoB,KAAKwoC,EAAEhgB,EAAEx3B,KAAKgP,EAAE,IAAIwoC,EAAExoC,IAAIwrF,GAAGhjE,CAAC,CAAC,OAAOgjE,EAAE,CAAC,SAASW,GAAGnsF,EAAEwoB,GAAG,GAAG7wB,EAAE,OAAOwtF,GAAG,GAAG,EAAEnlF,EAAEwoB,GAAG,IAAI9tB,EAAE,EAAE,OAAOixF,KAAKhmF,SAAQ,SAAU+G,EAAEizE,GAAG,IAAI3+E,EAAEwnB,EAAE9tB,EAAE,IAAIilF,EAAE/uF,IAAIoP,EAAE,EAAE2/E,GAAG,IAAI,GAAG3+E,EAAEA,EAAE,EAAEA,EAAE0L,EAAE3b,SAASiQ,EAAEwnC,IAAIm3C,KAAK,IAAI,GAAGjzE,EAAE+1E,WAAWzhF,GAAGwnC,IAAIm3C,GAAG,IAAI,GAAG,EAAEjlF,GAAGgS,EAAE3b,OAAO,CAAE,IAAG,CAAC,CAAC,SAASq7F,GAAGpsF,EAAEwoC,GAAG,GAAG7wC,EAAE,OAAOwtF,GAAG,GAAG,EAAEnlF,EAAEwoC,GAAG,IAAIhgB,EAAEmjE,KAAK/6F,IAAIoP,GAAG,IAAI,GAAGwoB,EAAEz3B,OAAO,IAAI2J,EAAE,EAAE,OAAO8tB,EAAE7iB,SAAQ,SAAU3F,GAAGtF,GAAGsF,EAAEjP,OAAO,CAAE,IAAGH,IAAI43C,GAAG,IAAI,GAAG9tC,EAAE,CAAC,CAAC,SAAS2xF,GAAGrsF,GAAG,OAAOrI,EAAEwtF,GAAG,GAAG,EAAEnlF,GAAG,EAAE,CAAC,SAASssF,GAAGtsF,EAAEwoC,EAAEhgB,EAAE9tB,GAAG,OAAO/C,EAAEwtF,GAAG,GAAG,EAAEnlF,EAAEwoC,EAAEhgB,EAAE9tB,GAAG,EAAE,CAAC,SAAS6xF,GAAGvsF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,GAAG,OAAO+G,EAAEwtF,GAAG,GAAG,EAAEnlF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,GAAG,EAAE,CAAC,IAAI47F,GAAG,CAAC,KAAK,GAAG,IAAI,SAASC,GAAGzsF,EAAEwoC,EAAE9tC,EAAEgS,GAAG,GAAG/U,EAAE,OAAOwtF,GAAG,GAAG,EAAEnlF,EAAEwoC,EAAE9tC,EAAEgS,GAAG,IAAI,IAAIizE,EAAE,EAAE3+E,EAAE,EAAEA,EAAEtG,EAAEsG,IAAI,CAAC,IAAI2L,EAAE/b,IAAI43C,GAAG,IAAI,GAAG1oC,EAAElP,IAAI43C,EAAE,GAAG,IAAI,GAAGA,GAAG,EAAE,IAAI,IAAIq3C,EAAE,EAAEA,EAAE//E,EAAE+/E,IAAI,CAAC,IAAI9/E,EAAEyoB,IAAI7b,EAAEkzE,IAAI,GAAG14E,EAAEqlF,GAAGxsF,GAAG,IAAID,GAAG,KAAKA,IAAI,IAAIC,EAAEi7D,EAAEylB,GAAG0B,EAAEj7E,EAAE,IAAIA,EAAEpW,OAAO,GAAGoW,EAAEnW,KAAK+O,EAAE,CAAC4/E,GAAG7/E,CAAC,CAAC,OAAOlP,IAAI8b,GAAG,IAAI,GAAGizE,EAAE,CAAC,CAAC,IAAI+M,GAAG,EAAE,SAASC,GAAG3sF,GAAG,OAAO,GAAGA,EAAE,IAAI,GAAGA,EAAE,KAAK,GAAGA,EAAE,IAAI,CAAC,IAAI4sF,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,SAASC,GAAG9sF,EAAEwoB,EAAE53B,EAAE8b,GAAG,SAASizE,EAAE3/E,EAAEwoC,EAAEhgB,GAAG,IAAIxoB,EAAE,iBAAiBA,EAAEA,EAAE+pC,WAAW/pC,GAAG,GAAGA,EAAEjP,OAAOy3C,GAAGxoC,EAAEwoB,EAAE,GAAGxoB,EAAE,OAAOA,CAAC,CAAC,SAASgB,EAAEhB,EAAEwoC,GAAG,OAAOm3C,EAAE3/E,EAAEwoC,EAAE,IAAI,CAAC,SAAS77B,EAAE3M,EAAEwoC,GAAG,SAAShgB,EAAExoB,GAAG,OAAO,EAAEA,GAAG,EAAE,EAAEA,EAAE,EAAE,CAAC,CAAC,IAAItF,EAAE,OAAO,KAAKA,EAAE8tB,EAAExoB,EAAE+qF,cAAcviD,EAAEuiD,iBAAiB,KAAKrwF,EAAE8tB,EAAExoB,EAAE+sF,WAAWvkD,EAAEukD,eAAeryF,EAAE8tB,EAAExoB,EAAEgtF,UAAUxkD,EAAEwkD,YAAYtyF,CAAC,CAAC,SAASoF,EAAEE,GAAG,OAAOA,EAAEitF,UAAU,KAAK,EAAE,OAAO,IAAIr2C,KAAK52C,EAAE+qF,cAAc,EAAE,GAAG,IAAI,KAAK,EAAE,OAAO/qF,EAAE,KAAK,EAAE,OAAO,IAAI42C,KAAK52C,EAAE+qF,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAIn0C,KAAK52C,EAAE+qF,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAIn0C,KAAK52C,EAAE+qF,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAIn0C,KAAK52C,EAAE+qF,cAAc,EAAE,GAAG,IAAI,KAAK,EAAE,OAAO,IAAIn0C,KAAK52C,EAAE+qF,cAAc,EAAE,GAAG,IAAI,CAAC,SAASlL,EAAE7/E,GAAG,IAAIwoC,EAAExoC,EAAEktF,GAAG,IAAIltF,EAAE,IAAI42C,KAAK,IAAIA,KAAK52C,EAAEmtF,GAAG,KAAK,EAAE,GAAGC,WAAW,EAAE5kD,GAAG,CAAC,IAAIhgB,EAAExoB,EAAE+sF,WAAWryF,GAAGiyF,GAAG3sF,EAAE+qF,eAAe6B,GAAGC,IAAIrkE,GAAG,KAAKggB,EAAE9tC,EAAEsF,EAAEgtF,WAAW,CAAChtF,EAAEqtF,QAAQrtF,EAAEgtF,UAAUxkD,GAAG,KAAK,CAACA,GAAG9tC,EAAEsF,EAAEgtF,UAAU,EAAEhtF,EAAEqtF,QAAQ,GAAG,GAAG7kE,EAAExoB,EAAEstF,SAAS9kE,EAAE,IAAIxoB,EAAEstF,SAAS,GAAGttF,EAAEutF,YAAYvtF,EAAE+qF,cAAc,GAAG,CAAC,OAAOviE,EAAE,IAAIouB,KAAK52C,EAAE+qF,cAAc,EAAE,EAAE,GAAGviD,EAAE1oC,EAAE,IAAI82C,KAAK52C,EAAE+qF,cAAc,EAAE,IAAIviE,EAAE1oB,EAAE0oB,GAAG,GAAG7b,EAAE67B,EAAExoC,GAAG,GAAG2M,EAAE6b,EAAExoB,GAAGA,EAAE+qF,cAAc,EAAE/qF,EAAE+qF,cAAc/qF,EAAE+qF,cAAc,CAAC,CAAC,IAAIhrF,EAAErF,IAAIgS,EAAE,IAAI,IAAI,GAAG,IAAI,IAAIvF,KAAKuF,EAAE,CAAC8gF,GAAG9yF,IAAIgS,GAAG,IAAI,GAAG+gF,GAAG/yF,IAAIgS,EAAE,GAAG,IAAI,GAAGghF,GAAGhzF,IAAIgS,EAAE,GAAG,IAAI,GAAGihF,GAAGjzF,IAAIgS,EAAE,IAAI,IAAI,GAAGkhF,GAAGlzF,IAAIgS,EAAE,IAAI,IAAI,GAAGygF,GAAGzyF,IAAIgS,EAAE,IAAI,IAAI,GAAGmhF,GAAGnzF,IAAIgS,EAAE,IAAI,IAAI,GAAGwgF,GAAGxyF,IAAIgS,EAAE,IAAI,IAAI,GAAGohF,GAAGpzF,IAAIgS,EAAE,IAAI,IAAI,GAAGqhF,GAAGrzF,IAAIgS,EAAE,IAAI,IAAI,GAAGshF,GAAGjuF,EAAEwiF,EAAExiF,GAAG,IAAInP,EAAE2xF,EAAE3xF,GAAGmP,EAAE,CAAC,KAAK,uBAAuB,KAAK,WAAW,KAAK,WAAW,KAAK,KAAK,KAAK,cAAc,KAAK,QAAQ,KAAK,WAAW,KAAK,WAAW,KAAK,WAAW,MAAM,KAAK,MAAM,KAAK,MAAM,WAAW,MAAM,WAAW,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,MAAMnP,EAAEA,EAAE6c,QAAQ,IAAIE,OAAOxG,EAAE,KAAKpH,EAAEoH,IAAI,IAAI24E,EAAE,2DAA2D1yE,MAAM,KAAKsqB,EAAE,wFAAwFtqB,MAAM,KAAK,IAAIjG,KAAKpH,EAAE,CAAC,KAAK,SAASC,GAAG,OAAO8/E,EAAE9/E,EAAE6tF,IAAInzC,UAAU,EAAE,EAAE,EAAE,KAAK,SAAS16C,GAAG,OAAO8/E,EAAE9/E,EAAE6tF,GAAG,EAAE,KAAK,SAAS7tF,GAAG,OAAO03B,EAAE13B,EAAE4tF,IAAIlzC,UAAU,EAAE,EAAE,EAAE,KAAK,SAAS16C,GAAG,OAAO03B,EAAE13B,EAAE4tF,GAAG,EAAE,KAAK,SAAS5tF,GAAG,OAAOgB,GAAGhB,EAAEmtF,GAAG,MAAM,IAAI,EAAE,EAAE,EAAE,KAAK,SAASntF,GAAG,OAAOgB,EAAEhB,EAAE2tF,GAAG,EAAE,EAAE,KAAK,SAAS3tF,GAAG,OAAO2/E,EAAE3/E,EAAE2tF,GAAG,EAAE,IAAI,EAAE,KAAK,SAAS3tF,GAAG,OAAO6/E,EAAE7/E,GAAG+pC,WAAW2Q,UAAU,EAAE,EAAE,KAAK,SAAS16C,GAAG,OAAO6/E,EAAE7/E,EAAE,EAAE,KAAK,SAASA,GAAG,OAAOgB,EAAEhB,EAAE0tF,GAAG,EAAE,EAAE,KAAK,SAAS1tF,GAAG,OAAO,IAAIA,EAAEA,EAAE0tF,IAAI1tF,EAAE,GAAG,GAAGA,IAAIA,GAAG,IAAIgB,EAAEhB,EAAE,EAAE,EAAE,KAAK,SAASA,GAAG,IAAI,IAAIwoC,EAAE,EAAEhgB,EAAE,EAAEA,GAAGxoB,EAAE4tF,GAAG,EAAEplD,IAAImkD,GAAG3sF,EAAEmtF,GAAG,MAAMP,GAAGC,IAAIrkE,MAAM,OAAOxnB,EAAEhB,EAAE2tF,GAAGnlD,EAAE,EAAE,EAAE,KAAK,SAASxoC,GAAG,OAAOgB,EAAEhB,EAAE4tF,GAAG,EAAE,EAAE,EAAE,KAAK,SAAS5tF,GAAG,OAAOgB,EAAEhB,EAAEytF,GAAG,EAAE,EAAE,KAAK,WAAW,MAAM,IAAI,EAAE,KAAK,SAASztF,GAAG,OAAO,GAAGA,EAAE0tF,IAAI,GAAG1tF,EAAE0tF,GAAG,KAAK,IAAI,EAAE,KAAK,SAAS1tF,GAAG,OAAOgB,EAAEhB,EAAEwtF,GAAG,EAAE,EAAE,KAAK,WAAW,MAAM,IAAI,EAAE,KAAK,SAASxtF,GAAG,OAAOA,EAAE6tF,IAAI,CAAC,EAAE,KAAK,SAAS7tF,GAAG,OAAOgB,EAAE/E,KAAKyc,OAAO1Y,EAAEktF,GAAG,EAAEltF,EAAE6tF,IAAI,GAAG,EAAE,EAAE,KAAK,SAAS7tF,GAAG,IAAIwoC,EAAEvsC,KAAKyc,OAAO1Y,EAAEktF,GAAG,GAAGltF,EAAE6tF,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI7tF,EAAE6tF,GAAG,IAAI7tF,EAAEktF,GAAG,GAAG,GAAG1kD,IAAIA,EAAE,IAAIA,IAAI,IAAIhgB,GAAGxoB,EAAE6tF,GAAG,IAAI7tF,EAAEktF,IAAI,IAAI,GAAG1kE,GAAGmkE,GAAG3sF,EAAEmtF,MAAM3kD,EAAE,QAAQ,CAACA,EAAE,GAAG,IAAIhgB,GAAGxoB,EAAE6tF,GAAG,EAAE7tF,EAAEktF,GAAG,GAAG,GAAG,GAAG1kE,GAAG,GAAGA,GAAGmkE,GAAG3sF,EAAEmtF,GAAG,IAAI,KAAK3kD,GAAG,CAAC,OAAOxnC,EAAEwnC,EAAE,EAAE,EAAE,KAAK,SAASxoC,GAAG,OAAOA,EAAE6tF,EAAE,EAAE,KAAK,SAAS7tF,GAAG,OAAOgB,EAAE/E,KAAKyc,OAAO1Y,EAAEktF,GAAG,GAAGltF,EAAE6tF,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,KAAK,SAAS7tF,GAAG,OAAOA,EAAEmtF,GAAG,MAAMpjD,WAAW2Q,UAAU,EAAE,EAAE,KAAK,SAAS16C,GAAG,OAAOA,EAAEmtF,GAAG,IAAI,EAAE,KAAK,SAASntF,GAAG,IAAIwoC,EAAE,IAAIxoC,EAAEA,EAAE+tF,IAAI,OAAO/tF,EAAE/D,KAAK2a,IAAI5W,GAAG,IAAIwoC,EAAE,IAAI,KAAK65C,OAAO,QAAQriF,EAAE,GAAG,IAAIA,EAAE,KAAK4I,OAAO,EAAE,EAAE,KAAK,SAAS5I,GAAG,OAAOA,EAAEguF,EAAE,EAAE,KAAK,WAAW,MAAM,GAAG,GAAGp9F,EAAEA,EAAE6c,QAAQ,MAAM,QAAQ1N,EAAEnP,EAAEq9F,SAAS9mF,KAAKvW,EAAEA,EAAE6c,QAAQ,IAAIE,OAAOxG,EAAE,KAAKpH,EAAEoH,GAAGuF,KAAK,OAAOvF,EAAE,SAASnH,GAAG,IAAIwoC,EAAEp1C,MAAMyE,EAAEmI,GAAG,GAAG,OAAOwiF,EAAExiF,EAAEwoC,EAAE,EAAEA,EAAEz3C,QAAQy3C,CAAC,CAA1D,CAA4D53C,EAAEA,EAAE6c,QAAQ,QAAQ,MAAMtG,EAAEpW,OAAOy3B,EAAE,GAAG,SAASxoB,EAAEwoB,GAAGggB,IAAIt1C,IAAI8M,EAAEwoB,IAAI,EAAE,CAA9B,CAAgCrhB,EAAEnH,GAAGmH,EAAEpW,OAAO,EAAE,CAACozF,GAAGuB,KAAK,IAAInF,GAAG,CAAC,KAAK2E,GAAGK,GAAG8D,GAAGG,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGK,GAAGC,GAAGG,GAAGsB,GAAGC,GAAGC,GAAGC,GAAGC,GAAGE,IAAIyB,GAAG,CAACr6D,EAAE,SAAS7zB,GAAG,OAAO4qF,GAAG5qF,EAAE,IAAI,EAAE,EAAEwoB,EAAE,SAASxoB,GAAG,OAAOA,EAAE,IAAIioF,GAAGjoF,IAAIkT,OAAOlT,EAAEyoF,IAAG,GAAIV,MAAM/nF,EAAE0oF,IAAG,GAAIZ,GAAG92F,KAAKgP,GAAGA,EAAE6oF,KAAK7oF,EAAEipF,IAAI,EAAEkF,GAAG,SAASnuF,GAAG,MAAM0gF,EAAE,0EAA0EwB,GAAE,EAAGliF,CAAC,EAAE4sB,EAAE,WAAWwhE,GAAG,GAAG,IAAIpuF,EAAE8nF,GAAGlkD,MAAM,GAAG5jC,EAAE+oF,OAAO/oF,EAAE2oF,KAAK,CAAC,IAAIngD,EAAExoC,EAAEuoF,KAAK//C,GAAGi/C,GAAGj/C,EAAHi/C,CAAMznF,EAAEkoF,IAAIiB,GAAGnpF,EAAEkoF,GAAG,CAACF,GAAG,CAAC,EAAEr7E,EAAE,WAAW,IAAI3M,EAAEgoF,GAAG,IAAIhoF,EAAE,OAAO0sF,GAAG,EAAE,IAAIlkD,EAAE,IAAIy/C,GAAGjoF,GAAGwoC,EAAEogD,GAAG5oF,GAAG,IAAIwoB,EAAEggB,EAAE6/C,KAAK,IAAI7/D,EAAE,OAAOkkE,GAAG,EAAE1sF,EAAE,IAAI,IAAItF,EAAEtH,MAAMi7F,UAAUzlF,MAAMpP,KAAKyxF,WAAWr6F,EAAE,EAAEA,EAAE8J,EAAE3J,OAAOH,IAAI,CAAC,IAAI8b,EAAEhS,EAAE9J,GAAG,GAAG,IAAI8b,GAAGA,IAAI8b,EAAE,MAAM,GAAG8lE,GAAG5hF,EAAE8b,EAAEggB,EAAE2/C,GAAG,IAAI,OAAOuE,GAAGhgF,EAAE1M,CAAC,CAAC,OAAO0sF,GAAGlkE,EAAExoB,CAAC,EAAEkxE,EAAE,WAAW,IAAIlxE,EAAEgoF,GAAG,IAAIhoF,EAAE,OAAO0sF,GAAG,EAAE,IAAIlkD,EAAE,IAAIy/C,GAAGjoF,GAAGwoC,EAAEogD,GAAG5oF,GAAG,IAAIwoB,EAAEggB,EAAE6/C,KAAK,IAAI7/D,EAAE,OAAOkkE,GAAG,EAAE1sF,EAAE,IAAI,IAAItF,EAAEtH,MAAMi7F,UAAUzlF,MAAMpP,KAAKyxF,WAAWr6F,EAAE,EAAEA,EAAE8J,EAAE3J,OAAOH,IAAI,CAAC,IAAI8b,EAAEhS,EAAE9J,GAAG,GAAG,IAAI8b,GAAGA,IAAI8b,EAAE,MAAM,GAAG8lE,GAAG5hF,EAAE8b,EAAEggB,EAAE2/C,GAAG,IAAI,OAAOuE,GAAGhgF,EAAE1M,CAAC,CAAC,OAAO0sF,GAAGlkE,EAAExoB,CAAC,EAAE/G,EAAE,WAAW,IAAI+G,EAAEgoF,GAAG,IAAIhoF,EAAE,OAAO0sF,GAAG,EAAE,IAAIlkD,EAAE,IAAIy/C,GAAGjoF,GAAGwoC,EAAEogD,GAAG5oF,GAAG,IAAIwoB,EAAEggB,EAAE6/C,KAAK,IAAI7/D,EAAE,OAAOkkE,GAAG,EAAE1sF,EAAE,IAAI,IAAItF,EAAEtH,MAAMi7F,UAAUzlF,MAAMpP,KAAKyxF,WAAWr6F,EAAE,EAAEA,EAAE8J,EAAE3J,OAAOH,IAAI,CAAC,IAAI8b,EAAEhS,EAAE9J,GAAG,GAAG,IAAI8b,GAAGA,IAAI8b,EAAE,MAAM,GAAG8lE,GAAG5hF,EAAE8b,EAAEggB,EAAE2/C,GAAG,IAAI,OAAOuE,GAAGhgF,EAAE1M,CAAC,CAAC,OAAO0sF,GAAGlkE,EAAExoB,CAAC,EAAEgB,EAAE,WAAW,IAAIhB,EAAEgoF,GAAG,IAAIhoF,EAAE,OAAO0sF,GAAG,EAAE,IAAIlkD,EAAE,IAAIy/C,GAAGjoF,GAAGwoC,EAAEogD,GAAG5oF,GAAG,IAAIwoB,EAAEggB,EAAE6/C,KAAK,IAAI7/D,EAAE,OAAOkkE,GAAG,EAAE1sF,EAAE,IAAI,IAAItF,EAAEtH,MAAMi7F,UAAUzlF,MAAMpP,KAAKyxF,WAAWr6F,EAAE,EAAEA,EAAE8J,EAAE3J,OAAOH,IAAI,CAAC,IAAI8b,EAAEhS,EAAE9J,GAAG,GAAG,IAAI8b,GAAGA,IAAI8b,EAAE,MAAM,GAAG8lE,GAAG5hF,EAAE8b,EAAEggB,EAAE2/C,GAAG,IAAI,OAAOuE,GAAGhgF,EAAE1M,CAAC,CAAC,OAAO0sF,GAAGlkE,EAAExoB,CAAC,EAAEwoC,EAAE2gD,GAAGhH,EAAE,WAAW,IAAIniF,EAAE8nF,GAAGlkD,MAAM5jC,GAAGgiF,GAAG,yBAAyB,IAAIx5C,EAAExoC,EAAEkoF,GAAG,MAAMloF,EAAE2oF,OAAOb,GAAG92F,KAAKgP,GAAGA,EAAE0oF,IAAG,GAAI1oF,EAAEyoF,IAAG,GAAIV,MAAMC,GAAGx/C,EAAEA,CAAC,EAAE3d,EAAE,SAAS7qB,EAAEwoC,EAAEhgB,GAAG,MAAM,IAAIy/D,GAAGjoF,GAAG0lF,GAAGl9C,EAAEhgB,GAAGw/D,GAAGhoF,EAAE+nF,KAAK/nF,CAAC,EAAEuuF,GAAG,WAAW,OAAOxG,EAAE,EAAEyG,GAAG,SAASxuF,GAAGyuF,GAAGzuF,GAAGC,EAAE,GAAGw3B,GAAG0sD,GAAG6B,IAAI,EAAE0I,GAAG,SAAS1uF,GAAGrI,EAAE69E,YAAY,CAACmO,IAAI,gBAAgBgD,OAAO3mF,IAAIkkF,GAAGlkF,EAAE,EAAE2uF,GAAGrF,GAAGrpF,EAAE,SAASD,GAAG,MAAMgoF,KAAKA,GAAGhoF,GAAGA,CAAC,EAAEuiF,EAAEiH,GAAGoF,GAAGnF,GAAGoF,GAAGnF,GAAGoF,GAAGnF,GAAGoF,GAAGnF,GAAGoF,GAAGnF,GAAGoF,GAAGnF,GAAGoF,GAAGnF,GAAG3kD,GAAG4kD,GAAGmF,GAAGlF,GAAGmF,GAAGlF,GAAGmF,GAAGlF,GAAGmF,GAAGlF,GAAGmF,GAAG,WAAW,EAAE7xE,EAAE,WAAWskE,GAAG,iHAAiH,EAAEwN,GAAG,WAAWxN,GAAG,iHAAiH,EAAEyN,GAAG,WAAW,OAAO74C,KAAKoB,KAAK,EAAE03C,GAAG,WAAW,OAAO,OAAO,EAAEC,GAAG,WAAW,OAAM,CAAE,EAAEC,GAAG,SAAS5vF,EAAEwoC,EAAEhgB,EAAE9tB,GAAG,GAAGsF,GAAGwoC,EAAE1D,YAAW,IAAK4hD,GAAGhsF,UAAU,GAAG/C,EAAE69E,YAAY,CAAC8Q,aAAatmF,EAAE2jF,IAAI,uBAAuBnjB,MAAM9lE,QAAQ,CAAC,KAAKsF,EAAEmkF,GAAGC,GAAGpkF,IAAI,OAAOA,EAAEw1E,YAAY,CAACmO,IAAI,uBAAuBnjB,MAAM9lE,GAAG,CAAC,OAAO,CAAC,EAAEm1F,GAAG,WAAW,OAAO,CAAC,EAAEC,GAAG,SAAS9vF,EAAEwoC,GAAGxoC,EAAE,IAAI42C,KAAK,IAAI4zC,GAAGxqF,IAAItF,IAAI8tC,GAAG,IAAI,GAAGxoC,EAAE+vF,gBAAgBr1F,IAAI8tC,EAAE,GAAG,IAAI,GAAGxoC,EAAEgwF,gBAAgBt1F,IAAI8tC,EAAE,GAAG,IAAI,GAAGxoC,EAAEiwF,cAAcv1F,IAAI8tC,EAAE,IAAI,IAAI,GAAGxoC,EAAEkwF,aAAax1F,IAAI8tC,EAAE,IAAI,IAAI,GAAGxoC,EAAEmwF,cAAcz1F,IAAI8tC,EAAE,IAAI,IAAI,GAAGxoC,EAAEowF,iBAAiB,KAAK11F,IAAI8tC,EAAE,IAAI,IAAI,GAAGxoC,EAAEqwF,YAAYrwF,GAAGA,EAAEotF,UAAUx2C,KAAK05C,IAAItwF,EAAEowF,iBAAiB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,MAAM,EAAE11F,IAAI8tC,EAAE,IAAI,IAAI,GAAGxoC,CAAC,EAAEuwF,GAAG,SAASvwF,EAAEwoC,GAAGxoC,EAAE,IAAI42C,KAAK,IAAI4zC,GAAGxqF,IAAItF,IAAI8tC,GAAG,IAAI,GAAGxoC,EAAEwwF,aAAa91F,IAAI8tC,EAAE,GAAG,IAAI,GAAGxoC,EAAEywF,aAAa/1F,IAAI8tC,EAAE,GAAG,IAAI,GAAGxoC,EAAE0wF,WAAWh2F,IAAI8tC,EAAE,IAAI,IAAI,GAAGxoC,EAAEgtF,UAAUtyF,IAAI8tC,EAAE,IAAI,IAAI,GAAGxoC,EAAE+sF,WAAWryF,IAAI8tC,EAAE,IAAI,IAAI,GAAGxoC,EAAE+qF,cAAc,KAAKrwF,IAAI8tC,EAAE,IAAI,IAAI,GAAGxoC,EAAEitF,SAAS,IAAIzkE,EAAE,IAAIouB,KAAK52C,EAAE+qF,cAAc,EAAE,GAAGn6F,GAAGoP,EAAEotF,UAAU5kE,EAAE4kE,WAAW,MAAM,EAAE1yF,IAAI8tC,EAAE,IAAI,IAAI,GAAG53C,EAAE8J,IAAI8tC,EAAE,IAAI,IAAI,IAAI,GAAGxoC,EAAEgrF,oBAAoBp6F,EAAE,IAAIgmD,KAAK52C,EAAE+qF,cAAc,EAAE,GAAGC,oBAAoBhrF,EAAE,GAAGpP,IAAI43B,EAAEA,EAAEwiE,sBAAsBhrF,EAAEgrF,qBAAqB/uF,KAAKC,IAAIssB,EAAE53B,IAAI8J,IAAI8tC,EAAE,IAAI,IAAI,GAAGxoC,CAAC,EAAE2wF,GAAG,SAAS3wF,GAAG,IAAIwoC,EAAE,IAAIoO,KAAKl8C,IAAIsF,EAAE,IAAI,IAAI,GAAG,KAAKtF,IAAIsF,EAAE,IAAI,IAAI,GAAGtF,IAAIsF,EAAE,IAAI,IAAI,GAAGtF,IAAIsF,EAAE,GAAG,IAAI,GAAGtF,IAAIsF,EAAE,GAAG,IAAI,GAAGtF,IAAIsF,GAAG,IAAI,GAAG,GAAGwoB,EAAE9tB,IAAIsF,EAAE,IAAI,IAAI,GAAGpP,EAAE43C,EAAEwiD,oBAAoBt+E,EAAE,IAAIkqC,KAAKpO,EAAEuiD,cAAc,EAAE,GAAGpL,EAAE,IAAI/oC,KAAKpO,EAAEuiD,cAAc,EAAE,GAAGC,oBAAoBhqF,EAAE0L,EAAEs+E,oBAAoBr+E,EAAE1Q,KAAKC,IAAI8E,EAAE2+E,GAAG,OAAO,EAAEn3D,EAAE9tB,IAAIsF,EAAE,IAAI,IAAI,GAAGpM,OAAO+rF,GAAG3+E,GAAG2L,GAAG/b,GAAG,EAAE43B,IAAI7b,GAAG/b,KAAK+uF,EAAE1jF,KAAK47B,IAAI72B,EAAE2+E,GAAGn3C,EAAEooD,QAAQpoD,EAAE4kD,UAAU,MAAM,EAAE5kE,EAAE7b,EAAEgzE,GAAG/uF,KAAK8J,IAAIsF,EAAE,IAAI,IAAI,GAAGwoC,EAAEykD,SAASzkE,GAAGggB,EAAE4kD,UAAU1gF,EAAE0gF,WAAW,MAAM,EAAE1yF,IAAIsF,EAAE,IAAI,IAAI,GAAGwoB,EAAE9tB,IAAIsF,GAAG,IAAI,GAAGwoC,EAAEgoD,aAAa91F,IAAIsF,EAAE,GAAG,IAAI,GAAGwoC,EAAEioD,aAAa/1F,IAAIsF,EAAE,GAAG,IAAI,GAAGwoC,EAAEkoD,WAAWh2F,IAAIsF,EAAE,IAAI,IAAI,GAAGwoC,EAAEwkD,UAAUtyF,IAAIsF,EAAE,IAAI,IAAI,GAAGwoC,EAAEukD,WAAWvkD,EAAE4kD,UAAU,IAAI,CAAC,EAAEyD,GAAGpG,GAAGqG,GAAGpG,GAAGqG,GAAG,SAAS/wF,EAAEwoC,EAAEhgB,EAAE9tB,GAAGsF,EAAEgxF,KAAKhxF,EAAEgxF,IAAG,EAAGnG,GAAGriD,EAAEhgB,EAAE9tB,GAAG,EAAE9C,EAAE,WAAWoqF,GAAG,GAAG,EAAEiP,GAAG,WAAW,IAAIpmE,IAAI5qB,EAAE,CAAC,IAAID,EAAE,2IAA2I4nF,KAAKA,GAAG,CAAC,GAAGA,GAAG5nF,KAAK4nF,GAAG5nF,GAAG,EAAE6qB,IAAI7qB,EAAE,YAAYA,GAAG0gF,EAAE1gF,GAAG,CAAC,EAAEkxF,GAAG,WAAW,OAAO,UAAU,EAAE3R,EAAEsI,GAAGsJ,GAAG,SAASnxF,EAAEwoC,EAAE9tC,GAAG8tB,IAAI4oE,WAAWpxF,IAAI,EAAEwoC,IAAI,EAAEA,EAAE9tC,IAAI,EAAE,EAAE22F,GAAG,WAAW,OAAOxmE,EAAE,eAAqB95B,OAAO+K,UAAUE,mBAAmB,EAAEs1F,GAAG,SAAStxF,EAAEwoC,EAAEhgB,GAAGijE,GAAG16F,OAAOy3C,EAAEhgB,IAAI,EAAE,IAAI,IAAI9tB,EAAE,EAAEA,EAAE8tC,EAAE9tC,IAAI+wF,GAAG/wF,GAAGgS,IAAI8b,EAAE9tB,IAAI,GAAG,OAAO,EAAEsF,EAAEikF,IAAIjkF,EAAE,GAAGugF,GAAGvgF,IAAIuxF,MAAM,KAAK9F,GAAG,EAAE+F,GAAG,SAASxxF,GAAG,IAAIwoC,EAAEhgB,IAAIz3B,OAAO,IAAIiP,KAAK,IAAIwoC,GAAG,WAAWxoC,EAAE,OAAM,EAAG,IAAI,IAAItF,EAAE,EAAE,GAAGA,EAAEA,GAAG,EAAE,CAAC,IAAI9J,EAAE43C,GAAG,EAAE,GAAG9tC,GAAG9J,EAAEqL,KAAKC,IAAItL,EAAEoP,EAAE,WAAW,IAAI0M,EAAEzQ,KAAKrL,EAAEqL,KAAK47B,IAAI73B,EAAEpP,GAAG8b,EAAEA,EAAExQ,IAAI1C,KAAKkT,EAAE,WAAW9b,GAAG,MAAMA,EAAE,OAAO,OAAOoP,EAAE,CAAC,IAAI6zB,EAAE49D,KAAK/kF,EAAE9U,EAAEkC,WAAW,QAAQ,IAAIhC,EAAE+7B,EAAE5/B,QAAQ,IAAI0rF,EAAE,EAAE,MAAM3/E,CAAC,CAAC,MAAMA,GAAG,CAAC2/E,OAAE,CAAM,CAAC,GAAGA,EAAE,OAAM,CAAE,CAAC,OAAM,CAAE,EAAE+R,GAAG,WAAW,KAAK,QAAQ,EAAEC,GAAGxF,GAAGyF,GAAGxF,GAAGyF,GAAGvM,GAAG/D,EAAE8K,GAAG/I,EAAEgJ,GAAGwF,GAAGvF,GAAGwF,GAAGtF,GAAGvnF,EAAE,WAAW,OAAOwnF,EAAE,EAAEsF,GAAG,SAAShyF,EAAEwoC,EAAEhgB,GAAG,IAAI9tB,EAAEwwF,KAAK,IAAI,OAAOzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE,CAAC,MAAMxoB,GAAG,GAAGunF,GAAG7sF,GAAGsF,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEnM,EAAE,SAASjiF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,GAAG,IAAI3+E,EAAEkqF,KAAK,IAAI,OAAOzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE,CAAC,MAAM3/E,GAAG,GAAGunF,GAAGvmF,GAAGhB,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE3xB,EAAE,SAASz8D,GAAG,IAAIwoC,EAAE0iD,KAAK,IAAI,OAAOzD,GAAGznF,EAAHynF,EAAO,CAAC,MAAMznF,GAAG,GAAGunF,GAAG/+C,GAAGxoC,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEjnF,EAAE,SAASnH,EAAEwoC,GAAG,IAAIhgB,EAAE0iE,KAAK,IAAI,OAAOzD,GAAGznF,EAAHynF,CAAMj/C,EAAE,CAAC,MAAMxoC,GAAG,GAAGunF,GAAG/+D,GAAGxoB,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE1O,EAAE,SAAS1/E,EAAEwoC,EAAEhgB,GAAG,IAAI9tB,EAAEwwF,KAAK,IAAI,OAAOzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE,CAAC,MAAMxoB,GAAG,GAAGunF,GAAG7sF,GAAGsF,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE1N,EAAE,SAAS1gF,EAAEwoC,EAAEhgB,GAAG,IAAI9tB,EAAEwwF,KAAK,IAAI,OAAOzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE,CAAC,MAAMxoB,GAAG,GAAGunF,GAAG7sF,GAAGsF,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEvO,EAAE,SAAS7/E,EAAEwoC,EAAEhgB,GAAG,IAAI9tB,EAAEwwF,KAAK,IAAI,OAAOzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE,CAAC,MAAMxoB,GAAG,GAAGunF,GAAG7sF,GAAGsF,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEtO,EAAE,SAAS9/E,EAAEwoC,EAAEhgB,EAAE9tB,GAAG,IAAI9J,EAAEs6F,KAAK,IAAI,OAAOzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE,CAAC,MAAMsF,GAAG,GAAGunF,GAAG32F,GAAGoP,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEz2F,EAAE,SAASqI,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,GAAG,IAAI8b,EAAEw+E,KAAK,IAAI,OAAOzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE,CAAC,MAAMoP,GAAG,GAAGunF,GAAG76E,GAAG1M,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE12D,EAAE,SAAS13B,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,GAAG,IAAIizE,EAAEuL,KAAK,IAAI,OAAOzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAE,CAAC,MAAM1M,GAAG,GAAGunF,GAAG5H,GAAG3/E,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAElkB,EAAE,SAASlqE,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,GAAG,IAAI3+E,EAAEkqF,KAAK,IAAI,OAAOzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE,CAAC,MAAM3/E,GAAG,GAAGunF,GAAGvmF,GAAGhB,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEnzB,EAAE,SAASj7D,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,GAAG,IAAI2L,EAAEu+E,KAAK,IAAI,OAAOzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE,CAAC,MAAMhB,GAAG,GAAGunF,GAAG56E,GAAG3M,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE32D,EAAE,SAASz3B,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,GAAG,IAAI9/E,EAAEmrF,KAAK,IAAI,OAAOzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE,CAAC,MAAM7/E,GAAG,GAAGunF,GAAGxnF,GAAGC,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE9M,EAAE,SAASthF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,GAAG,IAAIoH,EAAE+jF,KAAK,IAAI,OAAOzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAE,CAAC,MAAMC,GAAG,GAAGunF,GAAGpgF,GAAGnH,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE6D,GAAG,SAASjyF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,GAAG,IAAI3+E,EAAEkqF,KAAK,IAAI,OAAOgH,GAAGlyF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE,CAAC,MAAM3/E,GAAG,GAAGunF,GAAGvmF,GAAGhB,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE+D,GAAG,SAASnyF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,GAAG,IAAI+/E,EAAEqL,KAAK,IAAI,OAAOkH,GAAGpyF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE,CAAC,MAAME,GAAG,GAAGunF,GAAG1H,GAAG7/E,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEiE,GAAG,SAASryF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,GAAG,IAAI8b,EAAEw+E,KAAK,IAAI,OAAOoH,GAAGtyF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE,CAAC,MAAMoP,GAAG,GAAGunF,GAAG76E,GAAG1M,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEmE,GAAG,SAASvyF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,GAAG,IAAI7M,EAAEorF,KAAK,IAAI,OAAOsH,GAAGxyF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE,CAAC,MAAM3M,GAAG,GAAGunF,GAAGznF,GAAGE,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEqE,GAAG,SAASzyF,EAAEwoC,EAAEhgB,EAAE9tB,GAAG,IAAI9J,EAAEs6F,KAAK,IAAI,OAAOwH,GAAG1yF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE,CAAC,MAAMsF,GAAG,GAAGunF,GAAG32F,GAAGoP,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEuE,GAAG,SAAS3yF,GAAG,IAAIwoC,EAAE0iD,KAAK,IAAI,OAAO0H,GAAG5yF,EAAE,CAAC,MAAMA,GAAG,GAAGunF,GAAG/+C,GAAGxoC,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEyE,GAAG,SAAS7yF,EAAEwoC,EAAEhgB,GAAG,IAAI9tB,EAAEwwF,KAAK,IAAI,OAAO4H,GAAG9yF,EAAEwoC,EAAEhgB,EAAE,CAAC,MAAMxoB,GAAG,GAAGunF,GAAG7sF,GAAGsF,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE2E,GAAG,SAAS/yF,EAAEwoC,GAAG,IAAIhgB,EAAE0iE,KAAK,IAAI,OAAO8H,GAAGhzF,EAAEwoC,EAAE,CAAC,MAAMxoC,GAAG,GAAGunF,GAAG/+D,GAAGxoB,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE6E,GAAG,SAASjzF,EAAEwoC,EAAEhgB,GAAG,IAAI9tB,EAAEwwF,KAAK,IAAI,OAAOgI,GAAGlzF,EAAEwoC,EAAEhgB,EAAE,CAAC,MAAMxoB,GAAG,GAAGunF,GAAG7sF,GAAGsF,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE+E,GAAG,SAASnzF,EAAEwoC,EAAEhgB,EAAE9tB,GAAG,IAAI9J,EAAEs6F,KAAK,IAAI,OAAOkI,GAAGpzF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE,CAAC,MAAMsF,GAAG,GAAGunF,GAAG32F,GAAGoP,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEiF,GAAG,SAASrzF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,GAAG,IAAI8b,EAAEw+E,KAAK,IAAI,OAAOoI,GAAGtzF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE,CAAC,MAAMoP,GAAG,GAAGunF,GAAG76E,GAAG1M,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE1zF,EAAE,SAASsF,GAAG,IAAIwoC,EAAE0iD,KAAK,IAAIzD,GAAGznF,EAAHynF,EAAO,CAAC,MAAMznF,GAAG,GAAGunF,GAAG/+C,GAAGxoC,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEzO,EAAE,SAAS3/E,EAAEwoC,GAAG,IAAIhgB,EAAE0iE,KAAK,IAAIzD,GAAGznF,EAAHynF,CAAMj/C,EAAE,CAAC,MAAMxoC,GAAG,GAAGunF,GAAG/+D,GAAGxoB,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEx9F,EAAE,SAASoP,EAAEwoC,EAAEhgB,GAAG,IAAI9tB,EAAEwwF,KAAK,IAAIzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE,CAAC,MAAMxoB,GAAG,GAAGunF,GAAG7sF,GAAGsF,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEv2F,EAAE,SAASmI,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,GAAG,IAAI8b,EAAEw+E,KAAK,IAAIzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE,CAAC,MAAMoP,GAAG,GAAGunF,GAAG76E,GAAG1M,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEtuF,EAAE,SAASE,EAAEwoC,EAAEhgB,EAAE9tB,GAAG,IAAI9J,EAAEs6F,KAAK,IAAIzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE,CAAC,MAAMsF,GAAG,GAAGunF,GAAG32F,GAAGoP,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE/K,EAAE,SAASrjF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,GAAG,IAAI8b,EAAEw+E,KAAK,IAAIzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE,CAAC,MAAMoP,GAAG,GAAGunF,GAAG76E,GAAG1M,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEruF,EAAE,SAASC,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,GAAG,IAAI8b,EAAEw+E,KAAK,IAAIzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE,CAAC,MAAMoP,GAAG,GAAGunF,GAAG76E,GAAG1M,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE5L,EAAE,SAASxiF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,GAAG,IAAIizE,EAAEuL,KAAK,IAAIzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAE,CAAC,MAAM1M,GAAG,GAAGunF,GAAG5H,GAAG3/E,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEntE,EAAE,SAASjhB,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,GAAG,IAAI3+E,EAAEkqF,KAAK,IAAIzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE,CAAC,MAAM3/E,GAAG,GAAGunF,GAAGvmF,GAAGhB,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE3O,EAAE,SAASz/E,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,EAAE+kC,GAAG,IAAIyU,EAAEga,KAAK,IAAIzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,EAAE+kC,EAAE,CAAC,MAAMz8D,GAAG,GAAGunF,GAAGrW,GAAGlxE,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAElM,EAAE,SAASliF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,EAAE+kC,EAAEyU,GAAG,IAAIj4E,EAAEiyF,KAAK,IAAIzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,EAAE+kC,EAAEyU,EAAE,CAAC,MAAMlxE,GAAG,GAAGunF,GAAGtuF,GAAG+G,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEhM,EAAE,SAASpiF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,GAAG,IAAI+kC,EAAEyuB,KAAK,IAAIzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,EAAE,CAAC,MAAM13B,GAAG,GAAGunF,GAAG9qB,GAAGz8D,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEr2F,EAAE,SAASiI,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,GAAG,IAAI2L,EAAEu+E,KAAK,IAAIzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE,CAAC,MAAMhB,GAAG,GAAGunF,GAAG56E,GAAG3M,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEh/D,EAAE,SAASpvB,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,GAAG,IAAI7M,EAAEorF,KAAK,IAAIzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE,CAAC,MAAM3M,GAAG,GAAGunF,GAAGznF,GAAGE,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE3K,EAAE,SAASzjF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,GAAG,IAAI+/E,EAAEqL,KAAK,IAAIzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE,CAAC,MAAME,GAAG,GAAGunF,GAAG1H,GAAG7/E,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE5O,EAAE,SAASx/E,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,GAAG,IAAIoH,EAAE+jF,KAAK,IAAIzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAE,CAAC,MAAMC,GAAG,GAAGunF,GAAGpgF,GAAGnH,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEmF,GAAG,SAASvzF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,GAAG,IAAIpoD,EAAEwzD,KAAK,IAAIzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAE,CAAC,MAAM9/E,GAAG,GAAGunF,GAAG7vD,GAAG13B,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEhL,EAAE,SAASpjF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,GAAG,IAAI9/E,EAAEmrF,KAAK,IAAIzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE,CAAC,MAAM7/E,GAAG,GAAGunF,GAAGxnF,GAAGC,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEoF,GAAG,SAASxzF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,GAAG,IAAIoH,EAAE+jF,KAAK,IAAIzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAE,CAAC,MAAMC,GAAG,GAAGunF,GAAGpgF,GAAGnH,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEt2F,EAAE,SAASkI,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,GAAG,IAAI24E,EAAEoL,KAAK,IAAIzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE,CAAC,MAAMnH,GAAG,GAAGunF,GAAGzH,GAAG9/E,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE5K,EAAE,SAASxjF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,GAAG,IAAIpoD,EAAEwzD,KAAK,IAAIzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAE,CAAC,MAAM9/E,GAAG,GAAGunF,GAAG7vD,GAAG13B,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEqF,GAAG,SAASzzF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,EAAE+kC,EAAEyU,GAAG,IAAIj4E,EAAEiyF,KAAK,IAAIzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,EAAE+kC,EAAEyU,EAAE,CAAC,MAAMlxE,GAAG,GAAGunF,GAAGtuF,GAAG+G,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEjzB,EAAE,SAASn7D,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,EAAE+kC,GAAG,IAAIyU,EAAEga,KAAK,IAAIzD,GAAGznF,EAAHynF,CAAMj/C,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,EAAE+kC,EAAE,CAAC,MAAMz8D,GAAG,GAAGunF,GAAGrW,GAAGlxE,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEsF,GAAG,SAAS1zF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,GAAG,IAAI24E,EAAEoL,KAAK,IAAIyI,GAAG3zF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE,CAAC,MAAMnH,GAAG,GAAGunF,GAAGzH,GAAG9/E,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEwF,GAAG,SAAS5zF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,GAAG,IAAI3+E,EAAEkqF,KAAK,IAAI2I,GAAG7zF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE,CAAC,MAAM3/E,GAAG,GAAGunF,GAAGvmF,GAAGhB,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE0F,GAAG,SAAS9zF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,GAAG,IAAIizE,EAAEuL,KAAK,IAAI6I,GAAG/zF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAE,CAAC,MAAM1M,GAAG,GAAGunF,GAAG5H,GAAG3/E,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE4F,GAAG,SAASh0F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,GAAG,IAAI3+E,EAAEkqF,KAAK,IAAI+I,GAAGj0F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE,CAAC,MAAM3/E,GAAG,GAAGunF,GAAGvmF,GAAGhB,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE8F,GAAG,SAASl0F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,GAAG,IAAI2L,EAAEu+E,KAAK,IAAIiJ,GAAGn0F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE,CAAC,MAAMhB,GAAG,GAAGunF,GAAG56E,GAAG3M,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEgG,GAAG,SAASp0F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,GAAG,IAAI+/E,EAAEqL,KAAK,IAAImJ,GAAGr0F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE,CAAC,MAAME,GAAG,GAAGunF,GAAG1H,GAAG7/E,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEkG,GAAG,SAASt0F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,GAAG,IAAIoH,EAAE+jF,KAAK,IAAIqJ,GAAGv0F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAE,CAAC,MAAMC,GAAG,GAAGunF,GAAGpgF,GAAGnH,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEoG,GAAG,SAASx0F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,GAAG,IAAIizE,EAAEuL,KAAK,IAAIuJ,GAAGz0F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAE,CAAC,MAAM1M,GAAG,GAAGunF,GAAG5H,GAAG3/E,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEsG,GAAG,SAAS10F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,GAAG,IAAIpoD,EAAEwzD,KAAK,IAAIyJ,GAAG30F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAE,CAAC,MAAM9/E,GAAG,GAAGunF,GAAG7vD,GAAG13B,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEwG,GAAG,SAAS50F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,GAAG,IAAIpoD,EAAEwzD,KAAK,IAAI2J,GAAG70F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAE,CAAC,MAAM9/E,GAAG,GAAGunF,GAAG7vD,GAAG13B,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE0G,GAAG,SAAS90F,EAAEwoC,EAAEhgB,EAAE9tB,GAAG,IAAI9J,EAAEs6F,KAAK,IAAI6J,GAAG/0F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE,CAAC,MAAMsF,GAAG,GAAGunF,GAAG32F,GAAGoP,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE4G,GAAG,SAASh1F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,GAAG,IAAI8b,EAAEw+E,KAAK,IAAI+J,GAAGj1F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE,CAAC,MAAMoP,GAAG,GAAGunF,GAAG76E,GAAG1M,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE8G,GAAG,SAASl1F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,GAAG,IAAI3+E,EAAEkqF,KAAK,IAAIiK,GAAGn1F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE,CAAC,MAAM3/E,GAAG,GAAGunF,GAAGvmF,GAAGhB,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEhzC,GAAG,SAASp7C,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,GAAG,IAAIoH,EAAE+jF,KAAK,IAAIkK,GAAGp1F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAE,CAAC,MAAMC,GAAG,GAAGunF,GAAGpgF,GAAGnH,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEiH,GAAG,SAASr1F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,GAAG,IAAIoH,EAAE+jF,KAAK,IAAIoK,GAAGt1F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAE,CAAC,MAAMC,GAAG,GAAGunF,GAAGpgF,GAAGnH,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEmH,GAAG,SAASv1F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,EAAE+kC,EAAEyU,EAAEj4E,EAAEw+B,EAAEx3B,EAAE4qB,GAAG,IAAIlzB,EAAEuzF,KAAK,IAAIsK,GAAGx1F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,EAAE+kC,EAAEyU,EAAEj4E,EAAEw+B,EAAEx3B,EAAE4qB,EAAE,CAAC,MAAM7qB,GAAG,GAAGunF,GAAG5vF,GAAGqI,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEqH,GAAG,SAASz1F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,GAAG,IAAI24E,EAAEoL,KAAK,IAAIwK,GAAG11F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE,CAAC,MAAMnH,GAAG,GAAGunF,GAAGzH,GAAG9/E,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEuH,GAAG,SAAS31F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,GAAG,IAAI+kC,EAAEyuB,KAAK,IAAI0K,GAAG51F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,EAAE,CAAC,MAAM13B,GAAG,GAAGunF,GAAG9qB,GAAGz8D,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEyH,GAAG,SAAS71F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,EAAE+kC,EAAEyU,EAAEj4E,EAAEw+B,EAAEx3B,EAAE4qB,EAAElzB,EAAEuN,GAAG,IAAI0nB,EAAEs+D,KAAK,IAAI4K,GAAG91F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,EAAE+kC,EAAEyU,EAAEj4E,EAAEw+B,EAAEx3B,EAAE4qB,EAAElzB,EAAEuN,EAAE,CAAC,MAAMlF,GAAG,GAAGunF,GAAG36D,GAAG5sB,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEljD,GAAG,SAASlrC,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,EAAE+kC,EAAEyU,EAAEj4E,EAAEw+B,EAAEx3B,EAAE4qB,EAAElzB,EAAEuN,EAAE0nB,EAAE00D,GAAG,IAAIC,EAAE2J,KAAK,IAAI6K,GAAG/1F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,EAAE+kC,EAAEyU,EAAEj4E,EAAEw+B,EAAEx3B,EAAE4qB,EAAElzB,EAAEuN,EAAE0nB,EAAE00D,EAAE,CAAC,MAAMthF,GAAG,GAAGunF,GAAGhG,GAAGvhF,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE4H,GAAG,SAASh2F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,EAAE+kC,EAAEyU,EAAEj4E,EAAEw+B,EAAEx3B,EAAE4qB,EAAElzB,EAAEuN,EAAE0nB,GAAG,IAAI00D,EAAE4J,KAAK,IAAI+K,GAAGj2F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,EAAE+kC,EAAEyU,EAAEj4E,EAAEw+B,EAAEx3B,EAAE4qB,EAAElzB,EAAEuN,EAAE0nB,EAAE,CAAC,MAAM5sB,GAAG,GAAGunF,GAAGjG,GAAGthF,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAE8H,GAAG,SAASl2F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,EAAE+kC,EAAEyU,EAAEj4E,EAAEw+B,EAAEx3B,EAAE4qB,EAAElzB,EAAEuN,EAAE0nB,EAAE00D,EAAEC,EAAExpF,EAAEkjE,GAAG,IAAIylB,EAAEwK,KAAK,IAAIiL,GAAGn2F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,EAAE+kC,EAAEyU,EAAEj4E,EAAEw+B,EAAEx3B,EAAE4qB,EAAElzB,EAAEuN,EAAE0nB,EAAE00D,EAAEC,EAAExpF,EAAEkjE,EAAE,CAAC,MAAMj7D,GAAG,GAAGunF,GAAG7G,GAAG1gF,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEgI,GAAG,SAASp2F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,EAAE+kC,EAAEyU,EAAEj4E,EAAEw+B,EAAEx3B,EAAE4qB,EAAElzB,EAAEuN,EAAE0nB,EAAE00D,EAAEC,EAAExpF,EAAEkjE,EAAEylB,GAAG,IAAIz/D,EAAEiqE,KAAK,IAAImL,GAAGr2F,EAAEwoC,EAAEhgB,EAAE9tB,EAAE9J,EAAE8b,EAAEizE,EAAE3+E,EAAE2L,EAAE7M,EAAE+/E,EAAE9/E,EAAEoH,EAAE24E,EAAEpoD,EAAE+kC,EAAEyU,EAAEj4E,EAAEw+B,EAAEx3B,EAAE4qB,EAAElzB,EAAEuN,EAAE0nB,EAAE00D,EAAEC,EAAExpF,EAAEkjE,EAAEylB,EAAE,CAAC,MAAM1gF,GAAG,GAAGunF,GAAGtmE,GAAGjhB,IAAIA,EAAE,EAAE,MAAMA,EAAEouF,GAAG,EAAE,EAAE,CAAC,EAAEpuF,EAAE,SAASA,GAAG,OAAOA,CAAC,EAAE0M,EAAEmnB,GAAG8rD,EAAEoD,WAAW7nB,EAAE,SAASl7D,GAAG0sF,GAAG1sF,CAAC,EAAEs2F,GAAGxJ,GAAGyJ,GAAG,SAASv2F,EAAEwoC,EAAEhgB,EAAE9tB,GAAG,OAAOoyF,GAAG9sF,EAAEwoC,EAAEhgB,EAAE9tB,EAAE,IAAI,WAAW,SAASsF,EAAEA,EAAEwoC,GAAGm3C,EAAE6W,IAAIx2F,EAAErQ,QAAQw0F,GAAGsB,GAAGz0F,KAAK2uF,EAAE6W,IAAIC,IAAIt7B,EAAEwkB,EAAE6W,IAAIE,GAAGh5E,EAAE68C,QAAQolB,EAAE6W,IAAIG,IAAI1U,EAAEz5C,EAAE7wC,IAAI8rF,IAAI9D,EAAEiX,wBAAwBjX,EAAEiX,uBAAuBnT,GAAG,GAAGA,IAAI,OAAOvoB,KAAI27B,cAAc37B,IAAGA,GAAE,MAAMwoB,KAAK1jF,EAAE0jF,GAAGA,GAAG,KAAK1jF,MAAM,CAAC,SAASwoC,EAAEA,GAAGxoC,EAAEwoC,EAAEsuD,SAAStuD,EAAE54C,OAAO,CAAC,SAAS44B,EAAExoB,GAAG,OAAO,WAAW,IAAIjI,IAAI0/B,GAAGx3B,GAAG,CAAC,GAAG,mBAAmBozD,QAAQmwB,EAAEO,WAAW,WAAW,OAAO1wB,MAAMmwB,EAAE,CAACuT,YAAY,gBAAgB1+C,MAAK,SAAUr4C,GAAG,IAAIA,EAAEg3F,GAAG,KAAK,uCAAuCxT,EAAE,IAAI,OAAOxjF,EAAEwzD,aAAc,IAAGyjC,OAAM,WAAY,OAAOjT,IAAK,IAAG,GAAGnE,EAAE,OAAO,IAAIhpF,SAAQ,SAAUmJ,EAAEwoC,GAAGq3C,EAAE2D,GAAE,SAAUh7C,GAAGxoC,EAAE,IAAInO,WAAW22C,GAAI,GAAEA,EAAG,GAAE,CAAC,OAAO3xC,QAAQC,UAAUuhD,MAAK,WAAY,OAAO2rC,IAAK,GAAE,CAAjZ,GAAqZ3rC,MAAK,SAAUr4C,GAAG,OAAO68E,YAAYqa,YAAYl3F,EAAEtF,EAAG,IAAG29C,MAAK,SAAUr4C,GAAG,OAAOA,CAAE,IAAGq4C,KAAKr4C,GAAE,SAAUA,GAAG0gF,EAAE,0CAA0C1gF,GAAGgiF,GAAGhiF,EAAG,GAAE,CAAC,IAAItF,EAAE,CAACgS,EAAEwhF,IAAI,GAAGv2F,IAAI8rF,IAAI9D,EAAEiX,wBAAwBjX,EAAEiX,uBAAuBnT,IAAI9D,EAAEwX,gBAAgB,IAAI,OAAOxX,EAAEwX,gBAAgBz8F,EAAEsF,EAAE,CAAC,MAAMA,GAAG,OAAO0gF,EAAE,sDAAsD1gF,IAAG,CAAE,EAAEjI,GAAG,mBAAmB8kF,YAAYua,sBAAsBtT,MAAMN,EAAEO,WAAW,YAAYl5D,GAAG,mBAAmBwoC,MAAM7qC,EAAEggB,GAAG6qB,MAAMmwB,EAAE,CAACuT,YAAY,gBAAgB1+C,MAAK,SAAUr4C,GAAG,OAAO68E,YAAYua,qBAAqBp3F,EAAEtF,GAAG29C,KAAK7P,GAAE,SAAUxoC,GAAG,OAAO0gF,EAAE,kCAAkC1gF,GAAG0gF,EAAE,6CAA6Cl4D,EAAEggB,EAAG,GAAG,KAAIyuD,MAAMtqF,EAAE,CAA14C,GAA84CgzE,EAAE0X,mBAAmB,WAAW,OAAO1X,EAAE0X,mBAAmB1X,EAAE6W,IAAIG,IAAIpF,MAAM,KAAKtG,UAAU,EAAEtL,EAAE/F,SAAS,WAAW,OAAO+F,EAAE/F,SAAS+F,EAAE6W,IAAIc,IAAI/F,MAAM,KAAKtG,UAAU,EAAEtL,EAAEhH,yBAAyB,WAAW,OAAOgH,EAAEhH,yBAAyBgH,EAAE6W,IAAIe,IAAIhG,MAAM,KAAKtG,UAAU,EAAEtL,EAAE3G,4BAA4B,WAAW,OAAO2G,EAAE3G,4BAA4B2G,EAAE6W,IAAIgB,IAAIjG,MAAM,KAAKtG,UAAU,EAAEtL,EAAEzG,0BAA0B,WAAW,OAAOyG,EAAEzG,0BAA0ByG,EAAE6W,IAAIiB,IAAIlG,MAAM,KAAKtG,UAAU,EAAEtL,EAAExG,0BAA0B,WAAW,OAAOwG,EAAExG,0BAA0BwG,EAAE6W,IAAIkB,IAAInG,MAAM,KAAKtG,UAAU,EAAEtL,EAAE3F,kBAAkB,WAAW,OAAO2F,EAAE3F,kBAAkB2F,EAAE6W,IAAImB,IAAIpG,MAAM,KAAKtG,UAAU,EAAEtL,EAAEjF,mBAAmB,WAAW,OAAOiF,EAAEjF,mBAAmBiF,EAAE6W,IAAIoB,IAAIrG,MAAM,KAAKtG,UAAU,EAAEtL,EAAE1F,kBAAkB,WAAW,OAAO0F,EAAE1F,kBAAkB0F,EAAE6W,IAAIqB,IAAItG,MAAM,KAAKtG,UAAU,EAAEtL,EAAExF,mBAAmB,WAAW,OAAOwF,EAAExF,mBAAmBwF,EAAE6W,IAAIsB,IAAIvG,MAAM,KAAKtG,UAAU,EAAEtL,EAAErF,iBAAiB,WAAW,OAAOqF,EAAErF,iBAAiBqF,EAAE6W,IAAIuB,IAAIxG,MAAM,KAAKtG,UAAU,EAAEtL,EAAEnF,kBAAkB,WAAW,OAAOmF,EAAEnF,kBAAkBmF,EAAE6W,IAAIwB,IAAIzG,MAAM,KAAKtG,UAAU,EAAEtL,EAAElF,SAAS,WAAW,OAAOkF,EAAElF,SAASkF,EAAE6W,IAAIyB,IAAI1G,MAAM,KAAKtG,UAAU,EAAEtL,EAAE3E,iBAAiB,WAAW,OAAO2E,EAAE3E,iBAAiB2E,EAAE6W,IAAI0B,IAAI3G,MAAM,KAAKtG,UAAU,EAAEtL,EAAE5D,kBAAkB,WAAW,OAAO4D,EAAE5D,kBAAkB4D,EAAE6W,IAAI2B,IAAI5G,MAAM,KAAKtG,UAAU,EAAEtL,EAAEzD,kBAAkB,WAAW,OAAOyD,EAAEzD,kBAAkByD,EAAE6W,IAAI4B,IAAI7G,MAAM,KAAKtG,UAAU,EAAEtL,EAAE5I,qBAAqB,WAAW,OAAO4I,EAAE5I,qBAAqB4I,EAAE6W,IAAI6B,IAAI9G,MAAM,KAAKtG,UAAU,EAAEtL,EAAEvI,sBAAsB,WAAW,OAAOuI,EAAEvI,sBAAsBuI,EAAE6W,IAAI8B,IAAI/G,MAAM,KAAKtG,UAAU,EAAEtL,EAAEtI,sBAAsB,WAAW,OAAOsI,EAAEtI,sBAAsBsI,EAAE6W,IAAI+B,IAAIhH,MAAM,KAAKtG,UAAU,EAAEtL,EAAEjE,QAAQ,WAAW,OAAOiE,EAAEjE,QAAQiE,EAAE6W,IAAIgC,IAAIjH,MAAM,KAAKtG,UAAU,EAAEtL,EAAEvD,iBAAiB,WAAW,OAAOuD,EAAEvD,iBAAiBuD,EAAE6W,IAAIiC,IAAIlH,MAAM,KAAKtG,UAAU,EAAE,IAAI1E,GAAG5G,EAAE+Y,cAAc,WAAW,OAAOnS,GAAG5G,EAAE+Y,cAAc/Y,EAAE6W,IAAImC,IAAIpH,MAAM,KAAKtG,UAAU,EAAEL,GAAGjL,EAAErG,QAAQ,WAAW,OAAOsR,GAAGjL,EAAErG,QAAQqG,EAAE6W,IAAIoC,IAAIrH,MAAM,KAAKtG,UAAU,EAAE7B,GAAGzJ,EAAErI,MAAM,WAAW,OAAO8R,GAAGzJ,EAAErI,MAAMqI,EAAE6W,IAAIqC,IAAItH,MAAM,KAAKtG,UAAU,EAAEtL,EAAEmZ,sBAAsB,WAAW,OAAOnZ,EAAEmZ,sBAAsBnZ,EAAE6W,IAAIC,IAAIlF,MAAM,KAAKtG,UAAU,EAAE,IAAIwD,GAAG9O,EAAEoZ,yBAAyB,WAAW,OAAOtK,GAAG9O,EAAEoZ,yBAAyBpZ,EAAE6W,IAAIwC,IAAIzH,MAAM,KAAKtG,UAAU,EAAEtL,EAAEsZ,4BAA4B,WAAW,OAAOtZ,EAAEsZ,4BAA4BtZ,EAAE6W,IAAI0C,IAAI3H,MAAM,KAAKtG,UAAU,EAAE,IAAIkO,GAAG/N,GAAGzL,EAAEyZ,0CAA0C,WAAW,OAAOhO,GAAGzL,EAAEyZ,0CAA0CzZ,EAAE6W,IAAI6C,IAAI9H,MAAM,KAAKtG,UAAU,EAAEX,GAAG3K,EAAE2Z,sCAAsC,WAAW,OAAOhP,GAAG3K,EAAE2Z,sCAAsC3Z,EAAE6W,IAAI+C,IAAIhI,MAAM,KAAKtG,UAAU,EAAE9E,GAAGxG,EAAE6Z,8BAA8B,WAAW,OAAOrT,GAAGxG,EAAE6Z,8BAA8B7Z,EAAE6W,IAAIiD,IAAIlI,MAAM,KAAKtG,UAAU,EAAEtD,GAAGhI,EAAE+Z,yBAAyB,WAAW,OAAO/R,GAAGhI,EAAE+Z,yBAAyB/Z,EAAE6W,IAAImD,IAAIpI,MAAM,KAAKtG,UAAU,EAAEmD,GAAGzO,EAAEia,UAAU,WAAW,OAAOxL,GAAGzO,EAAEia,UAAUja,EAAE6W,IAAIqD,IAAItI,MAAM,KAAKtG,UAAU,EAAE3D,GAAG3H,EAAEma,6BAA6B,WAAW,OAAOxS,GAAG3H,EAAEma,6BAA6Bna,EAAE6W,IAAIuD,IAAIxI,MAAM,KAAKtG,UAAU,EAAEC,GAAGvL,EAAE5b,UAAU,WAAW,OAAOmnB,GAAGvL,EAAE5b,UAAU4b,EAAE6W,IAAIwD,IAAIzI,MAAM,KAAKtG,UAAU,EAAE1D,GAAG5H,EAAEzb,aAAa,WAAW,OAAOqjB,GAAG5H,EAAEzb,aAAayb,EAAE6W,IAAIyD,IAAI1I,MAAM,KAAKtG,UAAU,EAAEE,GAAGxL,EAAE3b,WAAW,WAAW,OAAOmnB,GAAGxL,EAAE3b,WAAW2b,EAAE6W,IAAI0D,IAAI3I,MAAM,KAAKtG,UAAU,EAAEqD,GAAG3O,EAAEwa,iBAAiB,WAAW,OAAO7L,GAAG3O,EAAEwa,iBAAiBxa,EAAE6W,IAAI4D,IAAI7I,MAAM,KAAKtG,UAAU,EAAE/B,GAAGvJ,EAAE0a,uBAAuB,WAAW,OAAOnR,GAAGvJ,EAAE0a,uBAAuB1a,EAAE6W,IAAI8D,IAAI/I,MAAM,KAAKtG,UAAU,EAAE2H,GAAGjT,EAAE4a,UAAU,WAAW,OAAO3H,GAAGjT,EAAE4a,UAAU5a,EAAE6W,IAAIgE,IAAIjJ,MAAM,KAAKtG,UAAU,EAAEyH,GAAG/S,EAAE8a,YAAY,WAAW,OAAO/H,GAAG/S,EAAE8a,YAAY9a,EAAE6W,IAAIkE,IAAInJ,MAAM,KAAKtG,UAAU,EAAEiH,GAAGvS,EAAEgb,eAAe,WAAW,OAAOzI,GAAGvS,EAAEgb,eAAehb,EAAE6W,IAAIoE,IAAIrJ,MAAM,KAAKtG,UAAU,EAAE8J,GAAGpV,EAAEkb,YAAY,WAAW,OAAO9F,GAAGpV,EAAEkb,YAAYlb,EAAE6W,IAAIsE,IAAIvJ,MAAM,KAAKtG,UAAU,EAAEiI,GAAGvT,EAAEob,YAAY,WAAW,OAAO7H,GAAGvT,EAAEob,YAAYpb,EAAE6W,IAAIwE,IAAIzJ,MAAM,KAAKtG,UAAU,EAAEwJ,GAAG9U,EAAEsb,cAAc,WAAW,OAAOxG,GAAG9U,EAAEsb,cAActb,EAAE6W,IAAI0E,IAAI3J,MAAM,KAAKtG,UAAU,EAAE4I,GAAGlU,EAAEwb,eAAe,WAAW,OAAOtH,GAAGlU,EAAEwb,eAAexb,EAAE6W,IAAI4E,IAAI7J,MAAM,KAAKtG,UAAU,EAAE+H,GAAGrT,EAAE0b,WAAW,WAAW,OAAOrI,GAAGrT,EAAE0b,WAAW1b,EAAE6W,IAAI8E,IAAI/J,MAAM,KAAKtG,UAAU,EAAE4J,GAAGlV,EAAE4b,oBAAoB,WAAW,OAAO1G,GAAGlV,EAAE4b,oBAAoB5b,EAAE6W,IAAIgF,IAAIjK,MAAM,KAAKtG,UAAU,EAAEgJ,GAAGtU,EAAE8b,eAAe,WAAW,OAAOxH,GAAGtU,EAAE8b,eAAe9b,EAAE6W,IAAIkF,IAAInK,MAAM,KAAKtG,UAAU,EAAEkK,GAAGxV,EAAEgc,eAAe,WAAW,OAAOxG,GAAGxV,EAAEgc,eAAehc,EAAE6W,IAAIoF,IAAIrK,MAAM,KAAKtG,UAAU,EAAE8I,GAAGpU,EAAEkc,cAAc,WAAW,OAAO9H,GAAGpU,EAAEkc,cAAclc,EAAE6W,IAAIsF,IAAIvK,MAAM,KAAKtG,UAAU,EAAE0I,GAAGhU,EAAEoc,qBAAqB,WAAW,OAAOpI,GAAGhU,EAAEoc,qBAAqBpc,EAAE6W,IAAIwF,IAAIzK,MAAM,KAAKtG,UAAU,EAAEqI,GAAG3T,EAAEsc,YAAY,WAAW,OAAO3I,GAAG3T,EAAEsc,YAAYtc,EAAE6W,IAAI0F,IAAI3K,MAAM,KAAKtG,UAAU,EAAEmH,GAAGzS,EAAEwc,gBAAgB,WAAW,OAAO/J,GAAGzS,EAAEwc,gBAAgBxc,EAAE6W,IAAI4F,IAAI7K,MAAM,KAAKtG,UAAU,EAAEuH,GAAG7S,EAAE0c,eAAe,WAAW,OAAO7J,GAAG7S,EAAE0c,eAAe1c,EAAE6W,IAAI8F,IAAI/K,MAAM,KAAKtG,UAAU,EAAEmI,GAAGzT,EAAE4c,aAAa,WAAW,OAAOnJ,GAAGzT,EAAE4c,aAAa5c,EAAE6W,IAAIgG,IAAIjL,MAAM,KAAKtG,UAAU,EAAEgL,GAAGtW,EAAE8c,2BAA2B,WAAW,OAAOxG,GAAGtW,EAAE8c,2BAA2B9c,EAAE6W,IAAIkG,IAAInL,MAAM,KAAKtG,UAAU,EAAEoL,GAAG1W,EAAEgd,8BAA8B,WAAW,OAAOtG,GAAG1W,EAAEgd,8BAA8Bhd,EAAE6W,IAAIoG,IAAIrL,MAAM,KAAKtG,UAAU,EAAE8K,GAAGpW,EAAEkd,4BAA4B,WAAW,OAAO9G,GAAGpW,EAAEkd,4BAA4Bld,EAAE6W,IAAIsG,IAAIvL,MAAM,KAAKtG,UAAU,EAAE6K,GAAGnW,EAAEod,0BAA0B,WAAW,OAAOjH,GAAGnW,EAAEod,0BAA0Bpd,EAAE6W,IAAIwG,IAAIzL,MAAM,KAAKtG,UAAU,EAAEkL,GAAGxW,EAAEsd,6BAA6B,WAAW,OAAO9G,GAAGxW,EAAEsd,6BAA6Btd,EAAE6W,IAAI0G,IAAI3L,MAAM,KAAKtG,UAAU,EAAEqK,GAAG3V,EAAEwd,mBAAmB,WAAW,OAAO7H,GAAG3V,EAAEwd,mBAAmBxd,EAAE6W,IAAI4G,IAAI7L,MAAM,KAAKtG,UAAU,EAAEmK,GAAGzV,EAAE0d,oBAAoB,WAAW,OAAOjI,GAAGzV,EAAE0d,oBAAoB1d,EAAE6W,IAAI8G,IAAI/L,MAAM,KAAKtG,UAAU,EAAEuK,GAAG7V,EAAE4d,wBAAwB,WAAW,OAAO/H,GAAG7V,EAAE4d,wBAAwB5d,EAAE6W,IAAIgH,IAAIjM,MAAM,KAAKtG,UAAU,EAAE2K,GAAGjW,EAAE8d,mBAAmB,WAAW,OAAO7H,GAAGjW,EAAE8d,mBAAmB9d,EAAE6W,IAAIkH,IAAInM,MAAM,KAAKtG,UAAU,EAAEyK,GAAG/V,EAAEge,kBAAkB,WAAW,OAAOjI,GAAG/V,EAAEge,kBAAkBhe,EAAE6W,IAAIoH,IAAIrM,MAAM,KAAKtG,UAAU,EAAEoJ,GAAG1U,EAAEke,kBAAkB,WAAW,OAAOxJ,GAAG1U,EAAEke,kBAAkBle,EAAE6W,IAAIsH,IAAIvM,MAAM,KAAKtG,UAAU,EAAEsJ,GAAG5U,EAAEoe,kBAAkB,WAAW,OAAOxJ,GAAG5U,EAAEoe,kBAAkBpe,EAAE6W,IAAIwH,IAAIzM,MAAM,KAAKtG,UAAU,EAAEqH,GAAG3S,EAAEse,aAAa,WAAW,OAAO3L,GAAG3S,EAAEse,aAAate,EAAE6W,IAAI0H,IAAI3M,MAAM,KAAKtG,UAAU,EAAEkJ,GAAGxU,EAAEwe,gBAAgB,WAAW,OAAOhK,GAAGxU,EAAEwe,gBAAgBxe,EAAE6W,IAAI4H,IAAI7M,MAAM,KAAKtG,UAAU,EAAE0J,GAAGhV,EAAE0e,sBAAsB,WAAW,OAAO1J,GAAGhV,EAAE0e,sBAAsB1e,EAAE6W,IAAI8H,IAAI/M,MAAM,KAAKtG,UAAU,EAAE6H,GAAGnT,EAAE4e,YAAY,WAAW,OAAOzL,GAAGnT,EAAE4e,YAAY5e,EAAE6W,IAAIgI,IAAIjN,MAAM,KAAKtG,UAAU,EAAEgK,GAAGtV,EAAE8e,aAAa,WAAW,OAAOxJ,GAAGtV,EAAE8e,aAAa9e,EAAE6W,IAAIkI,IAAInN,MAAM,KAAKtG,UAAU,EAAE,SAAS0T,KAAK,SAAS3+F,IAAI,IAAIm5F,KAAKA,IAAG,EAAGxZ,EAAEif,WAAU,GAAI1c,KAAKvqF,GAAGyvF,GAAG1pE,GAAG1c,EAAE2+E,GAAGA,EAAEkf,sBAAsBlf,EAAEkf,wBAAwBlnG,GAAG,CAAC,GAAGgoF,EAAEmf,QAAQ,IAAI,mBAAmBnf,EAAEmf,UAAUnf,EAAEmf,QAAQ,CAACnf,EAAEmf,UAAUnf,EAAEmf,QAAQ/tG,QAAQ,CAAC,IAAIiP,EAAE2/E,EAAEmf,QAAQ99E,QAAQqiE,EAAE9oB,QAAQv6D,EAAE,CAAConF,GAAG/D,EAAE,CAAC,CAAC,KAAK,EAAEI,GAAG,GAAG9rF,EAAEqJ,EAAE2+E,GAAGhoF,GAAGyvF,GAAG1pE,GAAG83D,YAAY,CAACmO,IAAI,eAAe,CAAC,GAAGhE,EAAE4D,OAAO,IAAI,mBAAmB5D,EAAE4D,SAAS5D,EAAE4D,OAAO,CAAC5D,EAAE4D,SAAS5D,EAAE4D,OAAOxyF,QAAQuyF,IAAI8D,GAAGhE,GAAG,EAAEK,IAAI9D,EAAEof,WAAWpf,EAAEof,UAAU,cAAcj6D,YAAW,WAAYA,YAAW,WAAY66C,EAAEof,UAAU,GAAI,GAAE,GAAG/+F,GAAI,GAAE,IAAIA,IAAI,CAAC,CAAC,GAAG2/E,EAAEpF,aAAagI,EAAE5C,EAAEpG,aAAa,SAASv5E,EAAEwoC,EAAE9tC,GAAG,OAAO8nF,EAAExiF,EAAEwoB,IAAIggB,EAAE9tC,EAAE,EAAEilF,EAAEtG,gBAAgBxhF,EAAE8nF,EAAEqf,iBAAiB,WAAW,OAAO/9E,CAAC,EAAE0+D,EAAEoD,WAAWlvD,EAAE8rD,EAAE5b,UAAUmnB,GAAGvL,EAAEzb,aAAaqjB,GAAG5H,EAAE3b,WAAWmnB,GAAGxL,EAAEsf,WAAWze,GAAGb,EAAEzB,QAAQiG,GAAGT,GAAG,SAAS1jF,IAAIm5F,IAAIwF,KAAKxF,KAAKzV,GAAG1jF,EAAE,EAAE2/E,EAAEuf,QAAQ,IAAI,mBAAmBvf,EAAEuf,UAAUvf,EAAEuf,QAAQ,CAACvf,EAAEuf,UAAU,EAAEvf,EAAEuf,QAAQnuG,QAAQ4uF,EAAEuf,QAAQt7D,KAAV+7C,GAAkB,OAAOgf,KAAK3+F,EAAE4/E,KAAK,GAAqDhwF,EAAOD,QAAQqQ,C,0BCE/jsCs/E,WADF6f,GAEqC7f,YADnCA,WAAiC,oBAAblpF,UAA4BA,SAAS6+E,cAAgB7+E,SAAS6+E,cAAc79E,SAAM1G,I,YAEnG,SACAyuG,GAIJ,IAAIh4F,EAA2D8pF,EAAG7rD,EAHrE+5D,EAAUA,GAAW,CAAC,EAGbh4F,IAAIA,OAAqB,IAAZg4F,EAA0BA,EAAU,CAAC,GAAah4F,EAAEy4E,MAAM,IAAI/oF,SAAQ,SAAS6V,EAAExH,GAAG+rF,EAAGvkF,EAAE04B,EAAGlgC,CAAC,IAAG,IAAyNoxF,EAAGnI,EAAGoI,EAAG6I,EAAGrQ,EAAGR,EAApOkB,EAAG12F,OAAO0D,OAAO,CAAC,EAAE0K,GAAG6qF,EAAG,iBAAiBuB,EAAG,iBAAiB9U,OAAO+D,EAAE,mBAAmBzC,cAAc0T,EAAG,iBAAiBzT,SAAS,iBAAiBA,QAAQC,UAAU,iBAAiBD,QAAQC,SAAS70E,KAAKod,EAAE,GAC3UirE,GAAGjrE,EAAEg6D,EAAE,eAAwBh6D,GAAG,IAAI23D,KAAcoO,EAAG,KAAKQ,IAAKqQ,EAAG,EAAQ,MAAMrQ,EAAG,EAAQ,KAAO,EAAGuH,EAAG,SAAS5pF,EAAExH,GAA0B,OAAvBqpF,IAAK7hF,EAAEqiF,EAAG3O,UAAU1zE,GAAU0yF,EAAG/e,aAAa3zE,EAAExH,OAAE,EAAO,OAAO,EAAEqxF,EAAG7pF,KAAIA,EAAE4pF,EAAG5pF,GAAE,IAAMzY,SAASyY,EAAE,IAAI7a,WAAW6a,IAAWA,GAAGyhF,EAAG,CAACzhF,EAAExH,EAAEyH,KAAK4hF,IAAK7hF,EAAEqiF,EAAG3O,UAAU1zE,GAAG0yF,EAAG7rC,SAAS7mD,GAAE,SAAShS,EAAEoF,GAAGpF,EAAEiS,EAAEjS,GAAGwK,EAAEpF,EAAE7L,OAAO,GAAC,EAAG,EAAE+rF,QAAQM,KAAKvvF,SAASihG,EAAGhS,QAAQM,KAAK,GAAG7yE,QAAQ,MAAM,MAAMuyE,QAAQM,KAAK13E,MAAM,GAAGo3E,QAAQO,GAAG,qBAAoB,SAAS7zE,GAAG,MAAMA,CAAE,IAAGszE,QAAQO,GAAG,sBACre,SAAS7zE,GAAG,MAAMA,CAAE,IAAGvF,EAAEy5E,QAAQ,WAAW,MAAM,4BAA4B,IAAU2S,GAAI/Q,KAAEA,EAAEh6D,EAAEz4B,KAAK0vC,SAASqhD,KAAK,oBAAoB1qF,UAAUA,SAAS6+E,gBAAgBzsD,EAAEpyB,SAAS6+E,cAAc79E,KAAKkoF,aAAa92D,EAAE82D,YAAmC92D,EAAvB,IAAIA,EAAE33B,QAAQ,SAAW23B,EAAE2sD,OAAO,EAAE3sD,EAAE/a,QAAQ,SAAS,IAAI2nE,YAAY,KAAK,GAAK,GAAGkhB,EAAG5pF,IAAI,IAAIxH,EAAE,IAAI67E,eAA+C,OAAhC77E,EAAE87E,KAAK,MAAMt0E,GAAE,GAAIxH,EAAE+7E,KAAK,MAAa/7E,EAAEg8E,cAAcsB,IAAI+T,EAAG7pF,IAAI,IAAIxH,EAAE,IAAI67E,eAA4E,OAA7D77E,EAAE87E,KAAK,MAAMt0E,GAAE,GAAIxH,EAAEi8E,aAAa,cAAcj8E,EAAE+7E,KAAK,MAAa,IAAIpvF,WAAWqT,EAAEk8E,SAAQ,GACjhB+M,EAAG,CAACzhF,EAAExH,EAAEyH,KAAK,IAAIjS,EAAE,IAAIqmF,eAAermF,EAAEsmF,KAAK,MAAMt0E,GAAE,GAAIhS,EAAEymF,aAAa,cAAczmF,EAAErD,OAAO,KAAK,KAAKqD,EAAEwzC,QAAQ,GAAGxzC,EAAEwzC,QAAQxzC,EAAE0mF,SAASl8E,EAAExK,EAAE0mF,UAAUz0E,GAAE,EAAGjS,EAAE2mF,QAAQ10E,EAAEjS,EAAEumF,KAAK,KAAI,GAAG,IAAqJxkB,EAAjJ+0B,EAAGrqF,EAAEu6E,OAAO/rC,QAAQ97B,IAAI48B,KAAKd,SAAS31C,EAAEmH,EAAEw6E,UAAUhsC,QAAQ6rC,KAAK/qC,KAAKd,SAAS58C,OAAO0D,OAAO0K,EAAEsoF,GAAIA,EAAG,KAAKtoF,EAAEy6E,cAAcoQ,EAAG7qF,EAAEy6E,aAAmBz6E,EAAE26E,aAAarlB,EAAEt1D,EAAE26E,YAA8B36E,EAAE46E,cAAkB,iBAAiBlF,aAAa3S,EAAE,mCACpb,IAAIgnB,EAGyIpC,EAAG1/D,EAAExC,EAAE/0B,EAAEuqF,EAH/IiP,GAAG,EAAGU,EAAG,oBAAoB1zB,YAAY,IAAIA,YAAY,aAAQ,EACxE,SAAS+wB,EAAG1iF,EAAExH,EAAEyH,GAAU,IAAIjS,GAAXwK,KAAK,GAAUyH,EAAE,IAAIA,EAAEzH,EAAEwH,EAAEC,MAAMA,GAAGjS,MAAMiS,EAAE,GAAG,GAAGA,EAAEzH,GAAGwH,EAAEzY,QAAQ89F,EAAG,OAAOA,EAAG3lF,OAAOM,EAAEqH,SAAS7O,EAAEyH,IAAI,IAAIjS,EAAE,GAAGwK,EAAEyH,GAAG,CAAC,IAAI7M,EAAE4M,EAAExH,KAAK,GAAK,IAAFpF,EAAM,CAAC,IAAIG,EAAS,GAAPyM,EAAExH,KAAQ,GAAG,MAAQ,IAAFpF,GAAOpF,GAAG2nF,OAAOC,cAAgB,GAAFxiF,IAAO,EAAEG,OAAO,CAAC,IAAI4zB,EAAS,GAAPnnB,EAAExH,KAAwE,OAAhEpF,EAAE,MAAQ,IAAFA,IAAU,GAAFA,IAAO,GAAGG,GAAG,EAAE4zB,GAAK,EAAF/zB,IAAM,GAAGG,GAAG,GAAG4zB,GAAG,EAAS,GAAPnnB,EAAExH,MAAgBxK,GAAG2nF,OAAOC,aAAaxiF,IAAIA,GAAG,MAAMpF,GAAG2nF,OAAOC,aAAa,MAAMxiF,GAAG,GAAG,MAAQ,KAAFA,GAAQ,CAAC,MAAMpF,GAAG2nF,OAAOC,aAAaxiF,EAAE,CAAC,OAAOpF,CAAC,CAAC,SAAS40F,EAAG5iF,EAAExH,GAAG,OAAOwH,KAAK,GAAG0iF,EAAGxiE,EAAElgB,EAAExH,GAAG,EAAE,CAC3e,SAAS2pF,EAAGniF,EAAExH,EAAEyH,EAAEjS,GAAU,KAAK,EAAEA,GAAG,OAAO,EAAE,IAAIoF,EAA9B6M,KAAK,EAA6BjS,EAAEiS,EAAEjS,EAAE,EAAE,IAAI,IAAIuF,EAAE,EAAEA,EAAEyM,EAAE3b,SAASkP,EAAE,CAAC,IAAI4zB,EAAEnnB,EAAE+1E,WAAWxiF,GAAgF,GAA1E,OAAO4zB,GAAG,OAAOA,IAA2BA,EAAE,QAAU,KAAFA,IAAS,IAAM,KAA3CnnB,EAAE+1E,aAAaxiF,IAAoC,KAAK4zB,EAAE,CAAC,GAAGlnB,GAAGjS,EAAE,MAAMwK,EAAEyH,MAAM,GAAGknB,CAAC,KAAK,CAAC,GAAG,MAAMA,EAAE,CAAC,GAAGlnB,EAAE,GAAGjS,EAAE,MAAMwK,EAAEyH,MAAM,GAAG,IAAIknB,GAAG,CAAC,KAAK,CAAC,GAAG,OAAOA,EAAE,CAAC,GAAGlnB,EAAE,GAAGjS,EAAE,MAAMwK,EAAEyH,MAAM,GAAG,IAAIknB,GAAG,EAAE,KAAK,CAAC,GAAGlnB,EAAE,GAAGjS,EAAE,MAAMwK,EAAEyH,MAAM,GAAG,IAAIknB,GAAG,GAAG3uB,EAAEyH,MAAM,GAAG,IAAIknB,GAAG,GAAG,EAAE,CAAC3uB,EAAEyH,MAAM,GAAG,IAAIknB,GAAG,EAAE,EAAE,CAAC3uB,EAAEyH,MAAM,GAAG,IAAM,GAAFknB,CAAI,CAAC,CAAY,OAAX3uB,EAAEyH,IAAI,GAAG,EAASA,EAAE7M,CAAC,CACnd,SAASqvF,EAAGziF,GAAG,IAAI,IAAIxH,EAAE,EAAEyH,EAAE,EAAEA,EAAED,EAAE3b,SAAS4b,EAAE,CAAC,IAAIjS,EAAEgS,EAAE+1E,WAAW91E,GAAG,KAAKjS,EAAEwK,IAAI,MAAMxK,EAAEwK,GAAG,EAAE,OAAOxK,GAAG,OAAOA,GAAGwK,GAAG,IAAIyH,GAAGzH,GAAG,CAAC,CAAC,OAAOA,CAAC,CAAgB,SAAS2sF,IAAK,IAAInlF,EAAEwkF,EAAGj9F,OAAO66F,EAAGpiF,EAAEvF,EAAE+7D,MAAM9zC,EAAE,IAAIt9B,UAAU4a,GAAGvF,EAAEu7E,OAAO,IAAI1wF,WAAW0a,GAAGvF,EAAE4zE,OAAOljF,EAAE,IAAI5F,WAAWya,GAAGvF,EAAEk9D,OAAOz3C,EAAE,IAAI/6B,WAAW6a,GAAGvF,EAAEw7E,QAAQ,IAAI5wF,YAAY2a,GAAGvF,EAAEo8D,QAAQ6e,EAAE,IAAIjwF,YAAYua,GAAGvF,EAAEy7E,QAAQ,IAAIhxF,aAAa8a,GAAGvF,EAAE07E,QAAQ,IAAI3wF,aAAawa,EAAE,CAAC,IAAIiiF,EAAGe,EAAG,GAAGE,EAAG,GAAGX,EAAG,GAAG,SAASqC,IAAK,IAAI5kF,EAAEvF,EAAEo8E,OAAOviE,QAAQ0uE,EAAGn1B,QAAQ7tD,EAAE,CAC9e,IAAwQ82E,EAApQvoB,EAAE,EAAE40B,EAAG,KAAK10B,EAAE,KAAK,SAAS+O,EAAEx9D,GAA8I,MAAxIvF,EAAEy8E,SAAQz8E,EAAEy8E,QAAQl3E,GAAsB1M,EAAnB0M,EAAE,WAAWA,EAAE,KAAS2kF,GAAG,EAAG3kF,EAAE,IAAImwE,YAAYgH,aAAan3E,EAAE,4CAA4C04B,EAAG14B,GAASA,CAAE,CAAC,SAAS8hF,IAAK,OAAOhL,EAAEO,WAAW,wCAAwC,CAAyB,GAAlBP,EAAE,iBAAoBgL,IAAK,CAAC,IAAImD,EAAGnO,EAAEA,EAAEr8E,EAAEq2E,WAAWr2E,EAAEq2E,WAAWmU,EAAGnpE,GAAGA,EAAEmpE,CAAE,CAAC,SAASC,IAAK,IAAIllF,EAAE82E,EAAE,IAAI,GAAG92E,GAAG82E,GAAG/mB,EAAE,OAAO,IAAI5qE,WAAW4qE,GAAG,GAAG85B,EAAG,OAAOA,EAAG7pF,GAAG,KAAK,iDAAkD,CAAC,MAAMxH,GAAGglE,EAAEhlE,EAAE,CAAC,CAC/F,SAAS8pF,EAAGtiF,GAAG,KAAK,EAAEA,EAAE3b,QAAQ2b,EAAEsU,OAAFtU,CAAUvF,EAAE,CAAC,IAAIkoF,EAAG,GAAGT,EAAG,EAAEh3F,EAAE,EAC5c,SAAS8oF,EAAEh0E,GAAGvb,KAAK+rG,GAAGxwF,EAAEvb,KAAKmrG,GAAG5vF,EAAE,GAAGvb,KAAK08F,GAAG,SAAS3oF,GAAGk9E,EAAEjxF,KAAKmrG,GAAG,GAAG,IAAI,GAAGp3F,CAAC,EAAE/T,KAAK2rG,GAAG,WAAW,OAAO1a,EAAEjxF,KAAKmrG,GAAG,GAAG,IAAI,EAAE,EAAEnrG,KAAKutG,GAAG,SAASx5F,GAAGk9E,EAAEjxF,KAAKmrG,GAAG,GAAG,IAAI,GAAGp3F,CAAC,EAAE/T,KAAKizF,GAAG,WAAW,OAAOhC,EAAEjxF,KAAKmrG,GAAG,GAAG,IAAI,EAAE,EAAEnrG,KAAKg3F,GAAG,WAAWtwF,EAAE1G,KAAKmrG,IAAI,IAAI,GAAG,CAAC,EAAEnrG,KAAKqsG,GAAG,SAASt4F,GAAGkqB,EAAEj+B,KAAKmrG,GAAG,IAAI,IAAI,GAAGp3F,EAAE,EAAE,CAAC,EAAE/T,KAAKitG,GAAG,WAAW,OAAO,GAAGhvE,EAAEj+B,KAAKmrG,GAAG,IAAI,IAAI,EAAE,EAAEnrG,KAAKusG,GAAG,SAASx4F,GAAGkqB,EAAEj+B,KAAKmrG,GAAG,IAAI,IAAI,GAAGp3F,EAAE,EAAE,CAAC,EAAE/T,KAAK2sG,GAAG,WAAW,OAAO,GAAG1uE,EAAEj+B,KAAKmrG,GAAG,IAAI,IAAI,EAAE,EAAEnrG,KAAKqtG,GAAG,SAASt5F,EAAEyH,GAAGxb,KAAK6rG,GAAG,GAAG7rG,KAAK08F,GAAG3oF,GAAG/T,KAAKutG,GAAG/xF,GAC3fxb,KAAKg3F,KAAKh3F,KAAKqsG,IAAG,GAAIrsG,KAAKusG,IAAG,EAAG,EAAEvsG,KAAK6sG,GAAG,WAAWnmG,EAAE1G,KAAKmrG,IAAI,IAAI,IAAI,CAAC,EAAEnrG,KAAK+7F,GAAG,WAAW,IAAIhoF,EAAErN,EAAE1G,KAAKmrG,IAAI,IAAI,GAAyB,OAAtBzkG,EAAE1G,KAAKmrG,IAAI,IAAI,GAAGp3F,EAAE,EAAS,IAAIA,CAAC,EAAE/T,KAAK6rG,GAAG,SAAS93F,GAAGk9E,EAAEjxF,KAAKmrG,GAAG,IAAI,IAAI,GAAGp3F,CAAC,EAAE/T,KAAK+sG,GAAG,WAAW,OAAO9b,EAAEjxF,KAAKmrG,GAAG,IAAI,IAAI,EAAE,EAAEnrG,KAAKmtG,GAAG,WAAW,GAAG5M,GAAGvgG,KAAK2rG,MAAM,OAAO1a,EAAEjxF,KAAK+rG,IAAI,IAAI,GAAG,IAAIh4F,EAAE/T,KAAK+sG,KAAK,OAAO,IAAIh5F,EAAEA,EAAE/T,KAAK+rG,EAAE,CAAC,CAAC,SAASvN,EAAGjjF,GAAG,OAAOojF,GAAG,IAAKpP,EAAEh0E,GAAI4vF,GAAG,CAAC,IAAI/L,EAAG,GAAG,SAAShP,EAAE70E,GAAG,IAAIxH,EAAEqrF,EAAG7jF,GAAwD,OAArDxH,IAAIwH,GAAG6jF,EAAGx/F,SAASw/F,EAAGx/F,OAAO2b,EAAE,GAAG6jF,EAAG7jF,GAAGxH,EAAEypF,EAAGp7F,IAAImZ,IAAWxH,CAAC,CACre,SAASyrF,GAAGjkF,GAAG,IAAIxH,EAAEiqF,EAAGziF,GAAG,EAAEC,EAAE0lF,GAAGntF,GAAkB,OAAfyH,GAAGkiF,EAAGniF,EAAE0iB,EAAEziB,EAAEzH,GAAUyH,CAAC,CAAia,IAAIqoF,GAAG,CAAC,EACre,SAASV,KAAK,IAAIvD,GAAG,CAAC,IAAuN7rF,EAAnNwH,EAAE,CAACk/E,KAAK,WAAWC,QAAQ,WAAWC,KAAK,IAAIC,IAAI,IAAIC,KAAK,iBAAiBC,MAAM,iBAAiBnwF,WAAWA,UAAUowF,WAAWpwF,UAAUowF,UAAU,IAAI,KAAKz+E,QAAQ,IAAI,KAAK,SAASgqB,EAAEu6D,GAAI,kBAAoB,IAAI9sF,KAAK8vF,QAAG,IAASA,GAAG9vF,UAAUwH,EAAExH,GAAGwH,EAAExH,GAAG8vF,GAAG9vF,GAAG,IAAIyH,EAAE,GAAG,IAAIzH,KAAKwH,EAAEC,EAAE3b,KAAKkU,EAAE,IAAIwH,EAAExH,IAAI6rF,GAAGpkF,CAAC,CAAC,OAAOokF,EAAE,CAAC,IAAIA,GAAGqD,GAAG,CAAC,KAAK,GAAG,IAAI7R,GAAE,EAAE,SAASsQ,GAAGnmF,GAAG,OAAO,GAAIA,EAAE,IAAI,GAAIA,EAAE,KAAK,GAAIA,EAAE,IAAI,CACva,IAAIipF,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIJ,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAClF,SAASF,GAAG3oF,EAAExH,EAAEyH,EAAEjS,GAAG,SAASoF,EAAEggF,EAAEH,EAAE90D,GAAG,IAAIi1D,EAAE,iBAAiBA,EAAEA,EAAE/1C,WAAW+1C,GAAG,GAAGA,EAAE/uF,OAAO4uF,GAAGG,EAAEj1D,EAAE,GAAGi1D,EAAE,OAAOA,CAAC,CAAC,SAAS7/E,EAAE6/E,EAAEH,GAAG,OAAO7/E,EAAEggF,EAAEH,EAAE,IAAI,CAAC,SAAS9rD,EAAEisD,EAAEH,GAAG,SAAS90D,EAAE/yB,GAAG,OAAO,EAAEA,GAAG,EAAE,EAAEA,EAAE,EAAE,CAAC,CAAC,IAAIC,EAAmH,OAAjH,KAAKA,EAAE8yB,EAAEi1D,EAAEiL,cAAcpL,EAAEoL,iBAAiB,KAAKhzF,EAAE8yB,EAAEi1D,EAAEiN,WAAWpN,EAAEoN,eAAeh1F,EAAE8yB,EAAEi1D,EAAEkN,UAAUrN,EAAEqN,YAAmBj1F,CAAC,CAAC,SAAS8nF,EAAEC,GAAG,OAAOA,EAAEmN,UAAU,KAAK,EAAE,OAAO,IAAIr2C,KAAKkpC,EAAEiL,cAAc,EAAE,GAAG,IAAI,KAAK,EAAE,OAAOjL,EAAE,KAAK,EAAE,OAAO,IAAIlpC,KAAKkpC,EAAEiL,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAIn0C,KAAKkpC,EAAEiL,cAC7e,EAAE,GAAG,KAAK,EAAE,OAAO,IAAIn0C,KAAKkpC,EAAEiL,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAIn0C,KAAKkpC,EAAEiL,cAAc,EAAE,GAAG,IAAI,KAAK,EAAE,OAAO,IAAIn0C,KAAKkpC,EAAEiL,cAAc,EAAE,GAAG,IAAI,CAAC,SAAS7Z,EAAE4O,GAAG,IAAIH,EAAEG,EAAE4c,GAAG,IAAI5c,EAAE,IAAIlpC,KAAK,IAAKA,KAAKkpC,EAAE8c,GAAG,KAAK,EAAE,GAAIxP,WAAW,EAAEzN,GAAG,CAAC,IAAI90D,EAAEi1D,EAAEiN,WAAWh1F,GAAG86F,GAAG/S,EAAEiL,eAAe4K,GAAGJ,IAAI1qE,GAAG,KAAG80D,EAAE5nF,EAAE+nF,EAAEkN,WAAoH,CAAClN,EAAEuN,QAAQvN,EAAEkN,UAAUrN,GAAG,KAAK,CAAzIA,GAAG5nF,EAAE+nF,EAAEkN,UAAU,EAAElN,EAAEuN,QAAQ,GAAG,GAAGxiE,EAAEi1D,EAAEwN,SAASziE,EAAE,IAAIi1D,EAAEwN,SAAS,GAAGxN,EAAEyN,YAAYzN,EAAEiL,cAAc,GAAwC,CACza,OAD0algE,EAAE,IAAI+rB,KAAKkpC,EAAEiL,cAAc,EAAE,EAAE,GAAGpL,EAAEE,EAAE,IAAIjpC,KAAKkpC,EAAEiL,cACxe,EAAE,IAAIlgE,EAAEg1D,EAAEh1D,GAAU,GAAGgJ,EAAE8rD,EAAEG,GAAG,GAAGjsD,EAAEhJ,EAAEi1D,GAAGA,EAAEiL,cAAc,EAAEjL,EAAEiL,cAAcjL,EAAEiL,cAAc,CAAC,CAAC,IAAIviD,EAAE3wC,EAAE6C,EAAE,IAAI,IAAI,GACyE,IAAI,IAAIg9B,KAD9Eh9B,EAAE,CAAC2tF,GAAGxwF,EAAE6C,GAAG,IAAI,GAAG8qF,GAAG3tF,EAAE6C,EAAE,GAAG,IAAI,GAAG0iG,GAAGvlG,EAAE6C,EAAE,GAAG,IAAI,GAAGkjG,GAAG/lG,EAAE6C,EAAE,IAAI,IAAI,GAAG4iG,GAAGzlG,EAAE6C,EAAE,IAAI,IAAI,GAAGkiG,GAAG/kG,EAAE6C,EAAE,IAAI,IAAI,GAAG8hG,GAAG3kG,EAAE6C,EAAE,IAAI,IAAI,GAAGgiG,GAAG7kG,EAAE6C,EAAE,IAAI,IAAI,GAAGwtF,GAAGrwF,EAAE6C,EAAE,IAAI,IAAI,GAAGyyF,GAAGt1F,EAAE6C,EAAE,IAAI,IAAI,GAAGkuF,GAAGpgD,EAAE8mD,EAAG9mD,GAAG,IAAI77B,EAAE2iF,EAAG3iF,GAAG67B,EAAE,CAAC,KAAK,uBAAuB,KAAK,WAAW,KAAK,WAAW,KAAK,KAAK,KAAK,cAAc,KAAK,QAAQ,KAAK,WAAW,KAAK,WAAW,KAAK,WAAW,MAAM,KAAK,MAAM,KAAK,MAAM,WAC/e,MAAM,WAAW,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,MAAqB77B,EAAEA,EAAEc,QAAQ,IAAIE,OAAO+pB,EAAE,KAAK8Q,EAAE9Q,IAAI,IAAIz+B,EAAE,2DAA2DmU,MAAM,KAAK6T,EAAE,wFAAwF7T,MAAM,KAG1F,IAAIsqB,KAH2F8Q,EAAE,CAAC,KAAK,SAASs3C,GAAG,OAAO7mF,EAAE6mF,EAAE0c,IAAI9hD,UAAU,EAAE,EAAE,EAAE,KAAK,SAASolC,GAAG,OAAO7mF,EAAE6mF,EAAE0c,GAAG,EAAE,KAAK,SAAS1c,GAAG,OAAO7+D,EAAE6+D,EAAEwd,IAAI5iD,UAAU,EACzhB,EAAE,EAAE,KAAK,SAASolC,GAAG,OAAO7+D,EAAE6+D,EAAEwd,GAAG,EAAE,KAAK,SAASxd,GAAG,OAAO7/E,GAAG6/E,EAAE8c,GAAG,MAAM,IAAI,EAAE,EAAE,EAAE,KAAK,SAAS9c,GAAG,OAAO7/E,EAAE6/E,EAAE8d,GAAG,EAAE,EAAE,KAAK,SAAS9d,GAAG,OAAOhgF,EAAEggF,EAAE8d,GAAG,EAAE,IAAI,EAAE,KAAK,SAAS9d,GAAG,OAAO5O,EAAE4O,GAAG/1C,WAAW2Q,UAAU,EAAE,EAAE,KAAK,SAASolC,GAAG,OAAO5O,EAAE4O,EAAE,EAAE,KAAK,SAASA,GAAG,OAAO7/E,EAAE6/E,EAAEsd,GAAG,EAAE,EAAE,KAAK,SAAStd,GAAkC,OAAxB,IAAPA,EAAEA,EAAEsd,IAAQtd,EAAE,GAAG,GAAGA,IAAIA,GAAG,IAAW7/E,EAAE6/E,EAAE,EAAE,EAAE,KAAK,SAASA,GAAG,IAAI,IAAIH,EAAE,EAAE90D,EAAE,EAAEA,GAAGi1D,EAAEwd,GAAG,EAAE3d,IAAIkT,GAAG/S,EAAE8c,GAAG,MAAMjH,GAAGJ,IAAI1qE,MAAM,OAAO5qB,EAAE6/E,EAAE8d,GAAGje,EAAE,EAAE,EAAE,KAAK,SAASG,GAAG,OAAO7/E,EAAE6/E,EAAEwd,GAAG,EAAE,EAAE,EAAE,KAAK,SAASxd,GAAG,OAAO7/E,EAAE6/E,EAAE0F,GACpf,EAAE,EAAE,KAAK,WAAW,MAAM,IAAI,EAAE,KAAK,SAAS1F,GAAG,OAAO,GAAGA,EAAEsd,IAAI,GAAGtd,EAAEsd,GAAG,KAAK,IAAI,EAAE,KAAK,SAAStd,GAAG,OAAO7/E,EAAE6/E,EAAEuI,GAAG,EAAE,EAAE,KAAK,WAAW,MAAM,IAAI,EAAE,KAAK,SAASvI,GAAG,OAAOA,EAAE0c,IAAI,CAAC,EAAE,KAAK,SAAS1c,GAAG,OAAO7/E,EAAEhE,KAAKyc,OAAOonE,EAAE4c,GAAG,EAAE5c,EAAE0c,IAAI,GAAG,EAAE,EAAE,KAAK,SAAS1c,GAAG,IAAIH,EAAE1jF,KAAKyc,OAAOonE,EAAE4c,GAAG,GAAG5c,EAAE0c,GAAG,GAAG,GAAG,GAA+B,GAA5B,IAAI1c,EAAE0c,GAAG,IAAI1c,EAAE4c,GAAG,GAAG,GAAG/c,IAAOA,EAAE,IAAIA,IAAwB,IAApB90D,GAAGi1D,EAAE0c,GAAG,IAAI1c,EAAE4c,IAAI,IAAQ,GAAG7xE,GAAGgoE,GAAG/S,EAAE8c,MAAMjd,EAAE,QAAQ,CAACA,EAAE,GAAG,IAAI90D,GAAGi1D,EAAE0c,GAAG,EAAE1c,EAAE4c,GAAG,GAAG,GAAG,GAAG7xE,GAAG,GAAGA,GAAGgoE,GAAG/S,EAAE8c,GAAG,IAAI,KAAKjd,GAAG,CAAC,OAAO1/E,EAAE0/E,EAAE,EAAE,EAAE,KAAK,SAASG,GAAG,OAAOA,EAAE0c,EAAE,EAAE,KAAK,SAAS1c,GAAG,OAAO7/E,EAAEhE,KAAKyc,OAAOonE,EAAE4c,GAC1hB,GAAG5c,EAAE0c,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,KAAK,SAAS1c,GAAG,OAAOA,EAAE8c,GAAG,MAAM7yD,WAAW2Q,UAAU,EAAE,EAAE,KAAK,SAASolC,GAAG,OAAOA,EAAE8c,GAAG,IAAI,EAAE,KAAK,SAAS9c,GAAU,IAAIH,EAAE,IAAbG,EAAEA,EAAEqN,IAA+B,OAAjBrN,EAAE7jF,KAAK2a,IAAIkpE,GAAG,IAAUH,EAAE,IAAI,KAAK0C,OAAO,QAAQvC,EAAE,GAAG,IAAIA,EAAE,KAAKl3E,OAAO,EAAE,EAAE,KAAK,SAASk3E,GAAG,OAAOA,EAAE8I,EAAE,EAAE,KAAK,WAAW,MAAM,GAAG,GAAGj8E,EAAEA,EAAEc,QAAQ,MAAM,QAAqB+6B,EAAE77B,EAAEshF,SAASv2D,KAAK/qB,EAAEA,EAAEc,QAAQ,IAAIE,OAAO+pB,EAAE,KAAK8Q,EAAE9Q,GAAGh9B,KAAsC,OAARg9B,EAPlU,SAAYhrB,GAAG,IAAIxH,EAAE9R,MAAM+7F,EAAGziF,GAAG,GAAsB,OAAnBmiF,EAAGniF,EAAExH,EAAE,EAAEA,EAAEnU,QAAemU,CAAC,CAOqQk2C,CAA3BzuC,EAAEA,EAAEc,QAAQ,QAAQ,MAAgBiqB,EAAE3mC,OAAOmU,EAAS,GAAEkqB,EAAEl8B,IAAIwkC,EAAEhrB,IAAI,GAAUgrB,EAAE3mC,OAAO,EAAC,CACvd,IAAIyqG,GAAG,CAAC7jG,EAAE,SAAS+U,GAAG,OAAO2lF,GAAG3lF,EAAE,IAAI,EAAE,EAAEgrB,EAAE,SAAShrB,GAAiE,OAA9DA,EAAE,IAAIg0E,EAAEh0E,IAAK0xF,OAAO1xF,EAAE8wF,IAAG,GAAI5O,KAAMliF,EAAEgxF,IAAG,GAAIrO,EAAGr+F,KAAK0b,GAAGA,EAAEsxF,KAAYtxF,EAAE4xF,IAAI,EAAEhP,GAAG,SAAS5iF,GAAqF,MAAlF1M,EAAE,0EAA0EqxF,GAAG,EAAS3kF,CAAE,EAAE5U,EAAE,WAAW4nF,GAAE,GAAG,IAAIhzE,EAAE2iF,EAAGzrD,MAAM,GAAGl3B,EAAEwgF,OAAOxgF,EAAEoxF,KAAK,CAAC,IAAI54F,EAAEwH,EAAE03E,KAAKl/E,GAAGq8E,EAAEr8E,EAAFq8E,CAAK70E,EAAEwwF,IAAIvN,EAAGjjF,EAAEwwF,GAAG,CAACtlG,EAAE,CAAC,EAAEsN,EAAE,WAAW,IAAIwH,EAAE9U,EAAE,IAAI8U,EAAE,OAAO61E,GAAE,EAAE,IAAIr9E,EAAE,IAAIw7E,EAAEh0E,GAAGxH,EAAE83F,GAAGtwF,GAAG,IAAIC,EAAEzH,EAAE43F,KAAK,IAAInwF,EAAE,OAAO41E,GAAE,EAAE71E,EAAE,IAAI,IAAIhS,EAAEtH,MAAMi7F,UAAUzlF,MAAMpP,KAAKyxF,WAAWnrF,EAAE,EAAEA,EAAEpF,EAAE3J,OAAO+O,IAAI,CAAC,IAAIG,EACnfvF,EAAEoF,GAAG,GAAG,IAAIG,GAAGA,IAAI0M,EAAE,MAAM,GAAG+Q,GAAEzd,EAAE0M,EAAEzH,EAAEo3F,GAAG,IAAI,OAAO/Z,GAAEtiF,EAAEyM,CAAC,CAAK,OAAJ61E,GAAE51E,EAASD,CAAC,EAAEmzE,EAAE,WAAW,IAAInzE,EAAE9U,EAAE,IAAI8U,EAAE,OAAO61E,GAAE,EAAE,IAAIr9E,EAAE,IAAIw7E,EAAEh0E,GAAGxH,EAAE83F,GAAGtwF,GAAG,IAAIC,EAAEzH,EAAE43F,KAAK,IAAInwF,EAAE,OAAO41E,GAAE,EAAE71E,EAAE,IAAI,IAAIhS,EAAEtH,MAAMi7F,UAAUzlF,MAAMpP,KAAKyxF,WAAWnrF,EAAE,EAAEA,EAAEpF,EAAE3J,OAAO+O,IAAI,CAAC,IAAIG,EAAEvF,EAAEoF,GAAG,GAAG,IAAIG,GAAGA,IAAI0M,EAAE,MAAM,GAAG+Q,GAAEzd,EAAE0M,EAAEzH,EAAEo3F,GAAG,IAAI,OAAO/Z,GAAEtiF,EAAEyM,CAAC,CAAK,OAAJ61E,GAAE51E,EAASD,CAAC,EAAEzT,EAAE,WAAW,IAAIyT,EAAE9U,EAAE,IAAI8U,EAAE,OAAO61E,GAAE,EAAE,IAAIr9E,EAAE,IAAIw7E,EAAEh0E,GAAGxH,EAAE83F,GAAGtwF,GAAG,IAAIC,EAAEzH,EAAE43F,KAAK,IAAInwF,EAAE,OAAO41E,GAAE,EAAE71E,EAAE,IAAI,IAAIhS,EAAEtH,MAAMi7F,UAAUzlF,MAAMpP,KAAKyxF,WAAWnrF,EAAE,EAAEA,EAAEpF,EAAE3J,OAAO+O,IAAI,CAAC,IAAIG,EAAEvF,EAAEoF,GAAG,GAAG,IAAIG,GAAGA,IAAI0M,EAAE,MACnf,GAAG+Q,GAAEzd,EAAE0M,EAAEzH,EAAEo3F,GAAG,IAAI,OAAO/Z,GAAEtiF,EAAEyM,CAAC,CAAK,OAAJ61E,GAAE51E,EAASD,CAAC,EAAE87B,EAAE,WAAW,IAAI97B,EAAE9U,EAAE,IAAI8U,EAAE,OAAO61E,GAAE,EAAE,IAAIr9E,EAAE,IAAIw7E,EAAEh0E,GAAGxH,EAAE83F,GAAGtwF,GAAG,IAAIC,EAAEzH,EAAE43F,KAAK,IAAInwF,EAAE,OAAO41E,GAAE,EAAE71E,EAAE,IAAI,IAAIhS,EAAEtH,MAAMi7F,UAAUzlF,MAAMpP,KAAKyxF,WAAWnrF,EAAE,EAAEA,EAAEpF,EAAE3J,OAAO+O,IAAI,CAAC,IAAIG,EAAEvF,EAAEoF,GAAG,GAAG,IAAIG,GAAGA,IAAI0M,EAAE,MAAM,GAAG+Q,GAAEzd,EAAE0M,EAAEzH,EAAEo3F,GAAG,IAAI,OAAO/Z,GAAEtiF,EAAEyM,CAAC,CAAK,OAAJ61E,GAAE51E,EAASD,CAAC,EAAEwkE,EAAEye,EAAGjP,EAAE,WAAW,IAAIh0E,EAAE2iF,EAAGzrD,MAAMl3B,GAAGw9D,EAAE,yBAAyB,IAAIhlE,EAAEwH,EAAEwwF,GAAmD,MAAhDxwF,EAAEoxF,OAAOzO,EAAGr+F,KAAK0b,GAAGA,EAAEgxF,IAAG,GAAIhxF,EAAE8wF,IAAG,GAAI5O,KAAMh3F,EAAEsN,EAAQA,CAAE,EAAE2lB,EAAE,SAASne,EAAExH,EAAEyH,GAA+B,MAA5B,IAAK+zE,EAAEh0E,GAAI8xF,GAAGt5F,EAAEyH,GAAG/U,EAAE8U,EAAEkiF,IAAWliF,CAAE,EAAEoiF,GAAG,WAAW,OAAOF,CAAE,EAAE9uF,EAAE,SAAS4M,GACtf,MADyf9U,IAC9fA,EAAE8U,GAASA,CAAE,EAAEy1E,EAAE,WAAW,OAAO,CAAC,EAAEyM,GAAG,WAAW,EAAEuC,GAAG,WAAW,EAAEL,GAAG,WAAW,EAAE3B,GAAG,WAAW,OAAO,CAAC,EAAEH,GAAG,WAAW,EAAER,GAAG,WAAW,EAAEU,GAAG,WAAW,EAAE5L,EAAE,WAAW,EAAEuN,GAAG,WAAW,EAAEnB,GAAG,WAAW,EAAEL,GAAG,WAAW,EAAEO,GAAG,WAAW,EAAEiG,GAAG,WAAW,EAAE9G,GAAG,WAAW7kB,EAAE,iHAAiH,EAAE8pB,GAAG,WAAW9pB,EAAE,iHAAiH,EAClgBwkB,GAAG,WAAW,OAAO93C,KAAKoB,KAAK,EAAE05C,GAAG,WAAW,OAAM,CAAE,EAAE/B,GAAG,SAASjjF,EAAExH,GAAGwH,EAAE,IAAIkqC,KAAK,KAAKwrC,EAAE11E,IAAI,GAAG,WAAW7U,EAAE6U,EAAE,IAAI,KAAK7U,EAAEqN,GAAG,IAAI,GAAGwH,EAAEqjF,gBAAgBl4F,EAAEqN,EAAE,GAAG,IAAI,GAAGwH,EAAEsjF,gBAAgBn4F,EAAEqN,EAAE,GAAG,IAAI,GAAGwH,EAAEujF,cAAcp4F,EAAEqN,EAAE,IAAI,IAAI,GAAGwH,EAAEwjF,aAAar4F,EAAEqN,EAAE,IAAI,IAAI,GAAGwH,EAAEyjF,cAAct4F,EAAEqN,EAAE,IAAI,IAAI,GAAGwH,EAAE0jF,iBAAiB,KAAKv4F,EAAEqN,EAAE,IAAI,IAAI,GAAGwH,EAAE2jF,YAAYx4F,EAAEqN,EAAE,IAAI,IAAI,IAAIwH,EAAE0gF,UAAUx2C,KAAK05C,IAAI5jF,EAAE0jF,iBAAiB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,MAAM,CAAC,EAAEN,GAAG,SAASpjF,EAAExH,GAAGwH,EAAE,IAAIkqC,KAAK,KAAKwrC,EAAE11E,IAAI,GAAG,WAAW7U,EAAE6U,EAAE,IAAI,KAAK7U,EAAEqN,GAAG,IAAI,GAClfwH,EAAE8jF,aAAa34F,EAAEqN,EAAE,GAAG,IAAI,GAAGwH,EAAE+jF,aAAa54F,EAAEqN,EAAE,GAAG,IAAI,GAAGwH,EAAEgkF,WAAW74F,EAAEqN,EAAE,IAAI,IAAI,GAAGwH,EAAEsgF,UAAUn1F,EAAEqN,EAAE,IAAI,IAAI,GAAGwH,EAAEqgF,WAAWl1F,EAAEqN,EAAE,IAAI,IAAI,GAAGwH,EAAEq+E,cAAc,KAAKlzF,EAAEqN,EAAE,IAAI,IAAI,GAAGwH,EAAEugF,SAAS,IAAItgF,EAAE,IAAIiqC,KAAKlqC,EAAEq+E,cAAc,EAAE,GAAGlzF,EAAEqN,EAAE,IAAI,IAAI,IAAIwH,EAAE0gF,UAAUzgF,EAAEygF,WAAW,MAAM,EAAEv1F,EAAEqN,EAAE,IAAI,IAAI,IAAK,GAAGwH,EAAEs+E,oBAAqB,IAAItwF,EAAE,IAAKk8C,KAAKlqC,EAAEq+E,cAAc,EAAE,GAAIC,oBAAoBr+E,EAAEA,EAAEq+E,oBAAoBnzF,EAAEqN,EAAE,IAAI,IAAI,GAAgD,GAA5CxK,GAAGiS,GAAGD,EAAEs+E,qBAAqB/uF,KAAKC,IAAIyQ,EAAEjS,GAAK,EAAE61F,GAAG,SAAS7jF,GAAG,IAAIxH,EAAE,IAAI0xC,KAAK/+C,EAAE6U,EAAE,IAAI,IACnf,GAAG,KAAK7U,EAAE6U,EAAE,IAAI,IAAI,GAAG7U,EAAE6U,EAAE,IAAI,IAAI,GAAG7U,EAAE6U,EAAE,GAAG,IAAI,GAAG7U,EAAE6U,EAAE,GAAG,IAAI,GAAG7U,EAAE6U,GAAG,IAAI,GAAG,GAAGC,EAAE9U,EAAE6U,EAAE,IAAI,IAAI,GAAGhS,EAAEwK,EAAE8lF,oBAAoBlrF,EAAE,IAAI82C,KAAK1xC,EAAE6lF,cAAc,EAAE,GAAG9qF,EAAE,IAAK22C,KAAK1xC,EAAE6lF,cAAc,EAAE,GAAIC,oBAAoBn3D,EAAE/zB,EAAEkrF,oBAAoBnL,EAAE5jF,KAAKC,IAAI23B,EAAE5zB,GACjL,OADoL,EAAE0M,EAAE9U,EAAE6U,EAAE,IAAI,IAAI,GAAG9Y,OAAOqM,GAAG4zB,GAAGgsD,GAAGnlF,GAAG,EAAEiS,IAAIkzE,GAAGnlF,KAAKuF,EAAEhE,KAAK47B,IAAIhE,EAAE5zB,GAAGiF,EAAE0rF,QAAQ1rF,EAAEkoF,UAAU,MAAM,EAAEzgF,EAAEkzE,EAAE5/E,GAAGvF,KAAK7C,EAAE6U,EAAE,IAAI,IAAI,GAAGxH,EAAE+nF,SAASp1F,EAAE6U,EAAE,IAAI,IAAI,IAAIxH,EAAEkoF,UAAUttF,EAAEstF,WAAW,MAAM,EAAEv1F,EAAE6U,GAAG,IAAI,GAAGxH,EAAEsrF,aAAa34F,EAAE6U,EAAE,GAAG,IAAI,GAAGxH,EAAEurF,aAAa54F,EAAE6U,EAAE,GAAG,IAAI,GACpfxH,EAAEwrF,WAAW74F,EAAE6U,EAAE,IAAI,IAAI,GAAGxH,EAAE8nF,UAAUn1F,EAAE6U,EAAE,IAAI,IAAI,GAAGxH,EAAE6nF,WAAkB7nF,EAAEkoF,UAAU,IAAI,CAAC,EAAEkE,GAAG,WAAW,OAAO,EAAE,EAAEzB,GAAG,WAAW,EAAEmF,GAjBuS,SAASN,EAAGhoF,EAAExH,EAAEyH,GAAG+nF,EAAGjQ,KAAKiQ,EAAGjQ,IAAG,EAAlZ,SAAY/3E,EAAExH,EAAEyH,GAAG,SAASjS,EAAEw2E,GAAG,OAAOA,EAAEA,EAAE4Z,eAAe79E,MAAM,sBAAsBikE,EAAE,GAAG,KAAK,CAAC,IAAIpxE,GAAE,IAAK82C,MAAMm0C,cAAc9qF,EAAE,IAAI22C,KAAK92C,EAAE,EAAE,GAAG+zB,EAAE,IAAI+iB,KAAK92C,EAAE,EAAE,GAAGA,EAAEG,EAAE+qF,oBAAoB,IAAInL,EAAEhsD,EAAEm3D,oBAAoBnzF,EAAE6U,GAAG,IAAI,GAAG,GAAGzQ,KAAK47B,IAAI/3B,EAAE+/E,GAAGhoF,EAAEqN,GAAG,IAAI,GAAGtR,OAAOkM,GAAG+/E,GAAGnzE,EAAEhS,EAAEuF,GAAGiF,EAAExK,EAAEm5B,GAAGnnB,EAAEikF,GAAGjkF,GAAGxH,EAAEyrF,GAAGzrF,GAAG26E,EAAE//E,GAAGsiF,EAAEz1E,GAAG,IAAI,GAAGD,EAAE01E,EAAEz1E,EAAE,GAAG,IAAI,GAAGzH,IAAIk9E,EAAEz1E,GAAG,IAAI,GAAGzH,EAAEk9E,EAAEz1E,EAAE,GAAG,IAAI,GAAGD,EAAE,CAAqCimF,CAAGjmF,EAAExH,EAAEyH,GAAG,EAiB/Uu1E,EAAE,WAAWhY,EAAE,GAAG,EAAE2nB,GAAG,WAAW,OAAO,UAAU,EAAEtP,EAAEkR,EAAG,KAAK,IAAI/mF,EAAEszE,QAAQsL,SAAS,OAAO,IAAI5+E,EAAE,GAAGA,EAAE,GAAG,KAAK,IAAIosC,YAAYd,MAAMi3C,GAAG,SAASviF,EAAExH,EAAEyH,GAAGigB,EAAEwkE,WAAW1kF,IAAI,EAAExH,IAAI,EAAEA,EAAEyH,IAAI,EAAE,EAAE40E,EAAE,SAAS70E,GAAG,IAAIxH,EAAE0nB,EAAE77B,OAAc,GAAG,YAAV2b,KAAK,GAAkB,OAAM,EAAG,IAAI,IAAIC,EAAE,EAAE,GAAGA,EAAEA,GAAG,EAAE,CAAC,IAAIjS,EAAEwK,GAAG,EAAE,GAAGyH,GAAGjS,EAAEuB,KAAKC,IAAIxB,EAAEgS,EAAE,WAAW,IAAI5M,EAAE7D,KAAKvB,EAAEuB,KAAK47B,IAAInrB,EAAEhS,GAAGoF,EAAEA,EAAE5D,IAAI1C,KAAKsG,EAAE,WAClfpF,GAAG,MAAMA,EAAE,OAAO,OAAOgS,EAAE,CAAC,IAAIwkF,EAAGO,KAAK3xF,EAAEgvF,EAAGh1F,WAAW,QAAQ,IAAI+3F,IAAK,IAAI5xF,EAAE,EAAE,MAAMyM,CAAC,CAAC,MAAMmnB,GAAG,CAAC5zB,OAAE,CAAM,CAAC,GAAGA,EAAE,OAAM,CAAE,CAAC,OAAM,CAAE,EAAE0xF,GAAG,SAASjlF,EAAExH,GAAG,IAAIyH,EAAE,EAA8I,OAA5I2nF,KAAK3uF,SAAQ,SAASjL,EAAEoF,GAAG,IAAIG,EAAEiF,EAAEyH,EAAsB,IAApB7M,EAAEsiF,EAAE11E,EAAE,EAAE5M,GAAG,IAAI,GAAGG,EAAMA,EAAE,EAAEA,EAAEvF,EAAE3J,SAASkP,EAAEmvB,EAAEtvB,KAAK,IAAI,GAAGpF,EAAE+nF,WAAWxiF,GAAGmvB,EAAEtvB,GAAG,IAAI,GAAG,EAAE6M,GAAGjS,EAAE3J,OAAO,CAAC,IAAU,CAAC,EAAE6gG,GAAG,SAASllF,EAAExH,GAAG,IAAIyH,EAAE2nF,KAAKlS,EAAE11E,GAAG,IAAI,GAAGC,EAAE5b,OAAO,IAAI2J,EAAE,EAAsD,OAApDiS,EAAEhH,SAAQ,SAAS7F,GAAGpF,GAAGoF,EAAE/O,OAAO,CAAC,IAAGqxF,EAAEl9E,GAAG,IAAI,GAAGxK,EAAS,CAAC,EAAE9C,EAAE,WAAW,OAAO,EAAE,EAAE6/B,EAAE,WAAW,OAAO,EAAE,EAAE+5D,GAAG,WAAW,OAAO,EAAE,EAAE7C,GAAG,SAASjiF,EAC/fxH,EAAEyH,EAAEjS,GAAG,IAAI,IAAIoF,EAAE,EAAEG,EAAE,EAAEA,EAAE0M,EAAE1M,IAAI,CAAC,IAAI4zB,EAAEuuD,EAAEl9E,GAAG,IAAI,GAAG26E,EAAEuC,EAAEl9E,EAAE,GAAG,IAAI,GAAGA,GAAG,EAAE,IAAI,IAAIgsE,EAAE,EAAEA,EAAE2O,EAAE3O,IAAI,CAAC,IAAI1oC,EAAE5b,EAAEiH,EAAEq9C,IAAI,GAAGx5C,EAAE08D,GAAG1nF,GAAG,IAAI87B,GAAG,KAAKA,IAAI,IAAI97B,EAAE8kF,EAAGxxF,GAAGovF,EAAG13D,EAAE,IAAIA,EAAE3mC,OAAO,GAAG2mC,EAAE1mC,KAAKw3C,EAAE,CAAC1oC,GAAG+/E,CAAC,CAAe,OAAduC,EAAE1nF,GAAG,IAAI,GAAGoF,EAAS,CAAC,EAAE4M,EAAE,WAAW,OAAO61E,EAAC,EAAE2O,GAyB5F,SAAYxkF,EAAExH,EAAEyH,GAAG,IAAIjS,EAAE8kF,KAAI,IAAI,OAAO+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAE,CAAC,MAAM7M,GAAQ,GAALujF,GAAE3oF,GAAMoF,IAAIA,EAAE,EAAE,MAAMA,EAAE4/E,GAAE,EAAE,EAAE,CAAC,EAzBQ9yD,EAsB1O,SAAYlgB,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,GAAG,IAAIgsD,EAAEL,KAAI,IAAI,OAAO+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAE,CAAC,MAAMq9C,GAAQ,GAALmS,GAAExD,GAAM3O,IAAIA,EAAE,EAAE,MAAMA,EAAEwO,GAAE,EAAE,EAAE,CAAC,EAtBqIz+D,EAmBnJ,SAAYvU,GAAG,IAAIxH,EAAEs6E,KAAI,IAAI,OAAO+B,EAAE70E,EAAF60E,EAAM,CAAC,MAAM50E,GAAQ,GAAL02E,GAAEn+E,GAAMyH,IAAIA,EAAE,EAAE,MAAMA,EAAE+yE,GAAE,EAAE,EAAE,CAAC,EAnBqE/yE,EAiBpP,SAAYD,EAAExH,GAAG,IAAIyH,EAAE6yE,KAAI,IAAI,OAAO+B,EAAE70E,EAAF60E,CAAKr8E,EAAE,CAAC,MAAMxK,GAAQ,GAAL2oF,GAAE12E,GAAMjS,IAAIA,EAAE,EAAE,MAAMA,EAAEglF,GAAE,EAAE,EAAE,CAAC,EAjBmKA,EAwB9J,SAAYhzE,EAAExH,EAAEyH,GAAG,IAAIjS,EAAE8kF,KAAI,IAAI,OAAO+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAE,CAAC,MAAM7M,GAAQ,GAALujF,GAAE3oF,GAAMoF,IAAIA,EAAE,EAAE,MAAMA,EAAE4/E,GAAE,EAAE,EAAE,CAAC,EAxByE8D,EAwB9P,SAAY92E,EAAExH,EAAEyH,GAAG,IAAIjS,EAAE8kF,KAAI,IAAI,OAAO+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAE,CAAC,MAAM7M,GAAQ,GAALujF,GAAE3oF,GAAMoF,IAAIA,EAAE,EAAE,MAAMA,EAAE4/E,GAAE,EAAE,EAAE,CAAC,EAxByK7rD,EAiBR,SAAYnnB,EAAExH,EAAEyH,GAAG,IAAIjS,EAAE8kF,KAAI,IAAI,OAAO+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAE,CAAC,MAAM7M,GAAQ,GAALujF,GAAE3oF,GAAMoF,IAAIA,EAAE,EAAE,MAAMA,EAAE4/E,GAAE,EAAE,EAAE,CAAC,EAjB7Ez/E,EAiB8E,SAAYyM,EAAExH,EAAEyH,EAAEjS,GAAG,IAAIoF,EAAE0/E,KAAI,IAAI,OAAO+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAE,CAAC,MAAMuF,GAAQ,GAALojF,GAAEvjF,GAAMG,IAAIA,EAAE,EAAE,MAAMA,EAAEy/E,GAAE,EAAE,EAAE,CAAC,EAjBvK9uF,EAkBkB,SAAY8b,EAAExH,EAAEyH,EAAEjS,EAAEoF,GAAG,IAAIG,EAAEu/E,KAAI,IAAI,OAAO+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAE,CAAC,MAAM+zB,GAAQ,GAALwvD,GAAEpjF,GAAM4zB,IAAIA,EAAE,EAAE,MAAMA,EAAE6rD,GAAE,EAAE,EAAE,CAAC,EAlB/G1+E,EAkB1F,SAAY0L,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,GAAG,IAAI4zB,EAAE2rD,KAAI,IAAI,OAAO+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE,CAAC,MAAM4/E,GAAQ,GAALwD,GAAExvD,GAAMgsD,IAAIA,EAAE,EAAE,MAAMA,EAAEH,GAAE,EAAE,EAAE,CAAC,EAlBPjjB,EAkBvR,SAAY/vD,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,GAAG,IAAIgsD,EAAEL,KAAI,IAAI,OAAO+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAE,CAAC,MAAMq9C,GAAQ,GAALmS,GAAExD,GAAM3O,IAAIA,EAAE,EAAE,MAAMA,EAAEwO,GAAE,EAAE,EAAE,CAAC,EAlBkLxkB,EAoB5R,SAAYxuD,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,GAAG,IAAI3O,EAAEsO,KAAI,IAAI,OAAO+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE,CAAC,MAAMr3C,GAAQ,GAAL66C,GAAEnS,GAAM1oC,IAAIA,EAAE,EAAE,MAAMA,EAAEk3C,GAAE,EAAE,EAAE,CAAC,EApBmL2D,EAoB0C,SAAY32E,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,GAAG,IAAIz+B,EAAEumF,KAAI,IAAI,OAAO+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAE,CAAC,MAAMzW,GAAQ,GAALoiE,GAAEpqF,GAAMgoB,IAAIA,EAAE,EAAE,MAAMA,EAAEy+D,GAAE,EAAE,EAAE,CAAC,EApB/JzkB,EAwBhH,SAAYvuD,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,GAAG,IAAIgoB,EAAEu+D,KAAI,IAAI,OAAO+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAE,CAAC,MAAM6mF,GAAQ,GAALuD,GAAEpiE,GAAM6+D,IAAIA,EAAE,EAAE,MAAMA,EAAEJ,GAAE,EAAE,EAAE,CAAC,EAxBT4W,GA0BnM,SAAY5pF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,GAAG,IAAIgsD,EAAEL,KAAI,IAAI,OAAOwc,GAAGtvF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAE,CAAC,MAAMq9C,GAAQ,GAALmS,GAAExD,GAAM3O,IAAIA,EAAE,EAAE,MAAMA,EAAEwO,GAAE,EAAE,EAAE,CAAC,EA1B+FyS,GA6B9M,SAAYzlF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,GAAG,IAAI9Q,EAAE8nD,KAAI,IAAI,OAAOke,GAAGhxF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE,CAAC,MAAMvvC,GAAQ,GAALoqF,GAAE3rD,GAAMz+B,IAAIA,EAAE,EAAE,MAAMA,EAAEymF,GAAE,EAAE,EAAE,CAAC,EA7B8FiR,GAmCpG,SAAYjkF,EAAExH,EAAEyH,EAAEjS,EAAEoF,GAAG,IAAIG,EAAEu/E,KAAI,IAAI,OAAOgG,GAAG94E,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAE,CAAC,MAAM+zB,GAAQ,GAALwvD,GAAEpjF,GAAM4zB,IAAIA,EAAE,EAAE,MAAMA,EAAE6rD,GAAE,EAAE,EAAE,CAAC,EAnCQ6S,GA6BnG,SAAY7lF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,GAAG,IAAI1oC,EAAEg3C,KAAI,IAAI,OAAOoe,GAAGlxF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE,CAAC,MAAMx5C,GAAQ,GAAL2rD,GAAE76C,GAAM9Q,IAAIA,EAAE,EAAE,MAAMA,EAAEgoD,GAAE,EAAE,EAAE,CAAC,EA7BT6O,GAyBhG,SAAY7hF,EAAExH,EAAEyH,EAAEjS,GAAG,IAAIoF,EAAE0/E,KAAI,IAAI,OAAOsc,GAAGpvF,EAAExH,EAAEyH,EAAEjS,EAAE,CAAC,MAAMuF,GAAQ,GAALojF,GAAEvjF,GAAMG,IAAIA,EAAE,EAAE,MAAMA,EAAEy/E,GAAE,EAAE,EAAE,CAAC,EAzBQ2S,GAmCzM,SAAY3lF,GAAG,IAAIxH,EAAEs6E,KAAI,IAAI,OAAOoc,GAAGlvF,EAAE,CAAC,MAAMC,GAAQ,GAAL02E,GAAEn+E,GAAMyH,IAAIA,EAAE,EAAE,MAAMA,EAAE+yE,GAAE,EAAE,EAAE,CAAC,EAnC6H0U,GAkC/U,SAAY1nF,EAAExH,EAAEyH,GAAG,IAAIjS,EAAE8kF,KAAI,IAAI,OAAO0I,GAAGx7E,EAAExH,EAAEyH,EAAE,CAAC,MAAM7M,GAAQ,GAALujF,GAAE3oF,GAAMoF,IAAIA,EAAE,EAAE,MAAMA,EAAE4/E,GAAE,EAAE,EAAE,CAAC,EAlC2P6T,GA2BrV,SAAY7mF,EAAExH,GAAG,IAAIyH,EAAE6yE,KAAI,IAAI,OAAOod,GAAGlwF,EAAExH,EAAE,CAAC,MAAMxK,GAAQ,GAAL2oF,GAAE12E,GAAMjS,IAAIA,EAAE,EAAE,MAAMA,EAAEglF,GAAE,EAAE,EAAE,CAAC,EA3BqQsS,GA2BpQ,SAAYtlF,EAAExH,EAAEyH,GAAG,IAAIjS,EAAE8kF,KAAI,IAAI,OAAO4c,GAAG1vF,EAAExH,EAAEyH,EAAE,CAAC,MAAM7M,GAAQ,GAALujF,GAAE3oF,GAAMoF,IAAIA,EAAE,EAAE,MAAMA,EAAE4/E,GAAE,EAAE,EAAE,CAAC,EA3BgLyT,GA6BpB,SAAYzmF,EAAExH,EAAEyH,EAAEjS,GAAG,IAAIoF,EAAE0/E,KAAI,IAAI,OAAOse,GAAGpxF,EAAExH,EAAEyH,EAAEjS,EAAE,CAAC,MAAMuF,GAAQ,GAALojF,GAAEvjF,GAAMG,IAAIA,EAAE,EAAE,MAAMA,EAAEy/E,GAAE,EAAE,EAAE,CAAC,EA7BpE2T,GA6BvW,SAAY3mF,EAAExH,EAAEyH,EAAEjS,EAAEoF,GAAG,IAAIG,EAAEu/E,KAAI,IAAI,OAAOge,GAAG9wF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAE,CAAC,MAAM+zB,GAAQ,GAALwvD,GAAEpjF,GAAM4zB,IAAIA,EAAE,EAAE,MAAMA,EAAE6rD,GAAE,EAAE,EAAE,CAAC,EA7B2Qv4E,EAkBlQ,SAAYuF,GAAG,IAAIxH,EAAEs6E,KAAI,IAAI+B,EAAE70E,EAAF60E,EAAM,CAAC,MAAM50E,GAAQ,GAAL02E,GAAEn+E,GAAMyH,IAAIA,EAAE,EAAE,MAAMA,EAAE+yE,GAAE,EAAE,EAAE,CAAC,EAlB2L1/E,EAiB3R,SAAY0M,EAAExH,GAAG,IAAIyH,EAAE6yE,KAAI,IAAI+B,EAAE70E,EAAF60E,CAAKr8E,EAAE,CAAC,MAAMxK,GAAQ,GAAL2oF,GAAE12E,GAAMjS,IAAIA,EAAE,EAAE,MAAMA,EAAEglF,GAAE,EAAE,EAAE,CAAC,EAjBiNI,EAiBhN,SAAYpzE,EAAExH,EAAEyH,GAAG,IAAIjS,EAAE8kF,KAAI,IAAI+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAE,CAAC,MAAM7M,GAAQ,GAALujF,GAAE3oF,GAAMoF,IAAIA,EAAE,EAAE,MAAMA,EAAE4/E,GAAE,EAAE,EAAE,CAAC,EAjBkIuC,EAuBY,SAAYv1E,EAAExH,EAAEyH,EAAEjS,EAAEoF,GAAG,IAAIG,EAAEu/E,KAAI,IAAI+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAE,CAAC,MAAM+zB,GAAQ,GAALwvD,GAAEpjF,GAAM4zB,IAAIA,EAAE,EAAE,MAAMA,EAAE6rD,GAAE,EAAE,EAAE,CAAC,EAvBlGhlF,EAkBC,SAAYgS,EAAExH,EAAEyH,EAAEjS,GAAG,IAAIoF,EAAE0/E,KAAI,IAAI+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAE,CAAC,MAAMuF,GAAQ,GAALojF,GAAEvjF,GAAMG,IAAIA,EAAE,EAAE,MAAMA,EAAEy/E,GAAE,EAAE,EAAE,CAAC,EAlBnFF,EAqBtQ,SAAY9yE,EAAExH,EAAEyH,EAAEjS,EAAEoF,GAAG,IAAIG,EAAEu/E,KAAI,IAAI+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAE,CAAC,MAAM+zB,GAAQ,GAALwvD,GAAEpjF,GAAM4zB,IAAIA,EAAE,EAAE,MAAMA,EAAE6rD,GAAE,EAAE,EAAE,CAAC,EArBgL3/E,EAmB3Y,SAAY2M,EAAExH,EAAEyH,EAAEjS,EAAEoF,GAAG,IAAIG,EAAEu/E,KAAI,IAAI+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAE,CAAC,MAAM+zB,GAAQ,GAALwvD,GAAEpjF,GAAM4zB,IAAIA,EAAE,EAAE,MAAMA,EAAE6rD,GAAE,EAAE,EAAE,CAAC,EAnBqTC,EAmBhO,SAAYjzE,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,GAAG,IAAI4zB,EAAE2rD,KAAI,IAAI+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE,CAAC,MAAM4/E,GAAQ,GAALwD,GAAExvD,GAAMgsD,IAAIA,EAAE,EAAE,MAAMA,EAAEH,GAAE,EAAE,EAAE,CAAC,EAnBsI8C,EAmBrI,SAAY91E,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,GAAG,IAAIgsD,EAAEL,KAAI,IAAI+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAE,CAAC,MAAMq9C,GAAQ,GAALmS,GAAExD,GAAM3O,IAAIA,EAAE,EAAE,MAAMA,EAAEwO,GAAE,EAAE,EAAE,CAAC,EAnBuC7nF,EAuB1Z,SAAY6U,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAEH,EAAE90D,GAAG,IAAI9yB,EAAEynF,KAAI,IAAI+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAEH,EAAE90D,EAAE,CAAC,MAAM/yB,GAAQ,GAALurF,GAAEtrF,GAAMD,IAAIA,EAAE,EAAE,MAAMA,EAAE4nF,GAAE,EAAE,EAAE,CAAC,EAvBwRvkB,EAsBpL,SAAYzuD,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAEH,EAAE90D,EAAE9yB,GAAG,IAAID,EAAE0nF,KAAI,IAAI+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAEH,EAAE90D,EAAE9yB,EAAE,CAAC,MAAMkqF,GAAQ,GAALoB,GAAEvrF,GAAMmqF,IAAIA,EAAE,EAAE,MAAMA,EAAEvC,GAAE,EAAE,EAAE,CAAC,EAtB8CH,EAuB5R,SAAY7yE,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAEH,GAAG,IAAI90D,EAAE20D,KAAI,IAAI+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAEH,EAAE,CAAC,MAAM5nF,GAAQ,GAALsrF,GAAEx4D,GAAM9yB,IAAIA,EAAE,EAAE,MAAMA,EAAE2nF,GAAE,EAAE,EAAE,CAAC,EAvB8JxV,EAmBrD,SAAYx9D,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,GAAG,IAAI3O,EAAEsO,KAAI,IAAI+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE,CAAC,MAAMr3C,GAAQ,GAAL66C,GAAEnS,GAAM1oC,IAAIA,EAAE,EAAE,MAAMA,EAAEk3C,GAAE,EAAE,EAAE,CAAC,EAnB7CtwD,EAoB/M,SAAY1iB,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,GAAG,IAAI1oC,EAAEg3C,KAAI,IAAI+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE,CAAC,MAAMx5C,GAAQ,GAAL2rD,GAAE76C,GAAM9Q,IAAIA,EAAE,EAAE,MAAMA,EAAEgoD,GAAE,EAAE,EAAE,CAAC,EApByG0C,EAoBpU,SAAY11E,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,GAAG,IAAI9Q,EAAE8nD,KAAI,IAAI+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE,CAAC,MAAMvvC,GAAQ,GAALoqF,GAAE3rD,GAAMz+B,IAAIA,EAAE,EAAE,MAAMA,EAAEymF,GAAE,EAAE,EAAE,CAAC,EApB0NhiE,EAqB5N,SAAYhR,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,GAAG,IAAIgoB,EAAEu+D,KAAI,IAAI+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAE,CAAC,MAAM6mF,GAAQ,GAALuD,GAAEpiE,GAAM6+D,IAAIA,EAAE,EAAE,MAAMA,EAAEJ,GAAE,EAAE,EAAE,CAAC,EArB0G2R,GAsBlV,SAAY3kF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,GAAG,IAAIH,EAAEH,KAAI,IAAI+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAE,CAAC,MAAMj1D,GAAQ,GAALw4D,GAAE1D,GAAM90D,IAAIA,EAAE,EAAE,MAAMA,EAAE60D,GAAE,EAAE,EAAE,CAAC,EAtByN+D,EAwB9I,SAAY/2E,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,GAAG,IAAIz+B,EAAEumF,KAAI,IAAI+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAE,CAAC,MAAMzW,GAAQ,GAALoiE,GAAEpqF,GAAMgoB,IAAIA,EAAE,EAAE,MAAMA,EAAEy+D,GAAE,EAAE,EAAE,CAAC,EAxBgCqS,GAqBpH,SAAYrlF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,GAAG,IAAIgoB,EAAEu+D,KAAI,IAAI+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAE,CAAC,MAAM6mF,GAAQ,GAALuD,GAAEpiE,GAAM6+D,IAAIA,EAAE,EAAE,MAAMA,EAAEJ,GAAE,EAAE,EAAE,CAAC,EArBG3nF,EAuBlM,SAAY2U,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,GAAG,IAAI6+D,EAAEN,KAAI,IAAI+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE,CAAC,MAAM0+D,GAAQ,GAAL0D,GAAEvD,GAAMH,IAAIA,EAAE,EAAE,MAAMA,EAAED,GAAE,EAAE,EAAE,CAAC,EAvB4E4B,EAqBnd,SAAY50E,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,GAAG,IAAIH,EAAEH,KAAI,IAAI+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAE,CAAC,MAAMj1D,GAAQ,GAALw4D,GAAE1D,GAAM90D,IAAIA,EAAE,EAAE,MAAMA,EAAE60D,GAAE,EAAE,EAAE,CAAC,EArByV0D,EAyBxd,SAAY12E,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAEH,EAAE90D,GAAG,IAAI9yB,EAAEynF,KAAI,IAAI+B,EAAE70E,EAAF60E,CAAKr8E,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAEH,EAAE90D,EAAE,CAAC,MAAM/yB,GAAQ,GAALurF,GAAEtrF,GAAMD,IAAIA,EAAE,EAAE,MAAMA,EAAE4nF,GAAE,EAAE,EAAE,CAAC,EAzBsVgU,GA4BrL,SAAYhnF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,GAAG,IAAI6+D,EAAEN,KAAI,IAAI8d,GAAG5wF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE,CAAC,MAAM0+D,GAAQ,GAAL0D,GAAEvD,GAAMH,IAAIA,EAAE,EAAE,MAAMA,EAAED,GAAE,EAAE,EAAE,CAAC,EA5BgE8T,GA0B5K,SAAY9mF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,GAAG,IAAI3O,EAAEsO,KAAI,IAAIkd,GAAGhwF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE,CAAC,MAAMr3C,GAAQ,GAAL66C,GAAEnS,GAAM1oC,IAAIA,EAAE,EAAE,MAAMA,EAAEk3C,GAAE,EAAE,EAAE,CAAC,EA1B2E+T,GA0BtR,SAAY/mF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,GAAG,IAAIgsD,EAAEL,KAAI,IAAIgd,GAAG9vF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAE,CAAC,MAAMq9C,GAAQ,GAALmS,GAAExD,GAAM3O,IAAIA,EAAE,EAAE,MAAMA,EAAEwO,GAAE,EAAE,EAAE,CAAC,EA1ByLoU,GA4BvS,SAAYpnF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,GAAG,IAAI4zB,EAAE2rD,KAAI,IAAI4d,GAAG1wF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE,CAAC,MAAM4/E,GAAQ,GAALwD,GAAExvD,GAAMgsD,IAAIA,EAAE,EAAE,MAAMA,EAAEH,GAAE,EAAE,EAAE,CAAC,EA3BvSuR,GA2BA,SAAYvkF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,GAAG,IAAIgsD,EAAEL,KAAI,IAAIwd,GAAGtwF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAE,CAAC,MAAMq9C,GAAQ,GAALmS,GAAExD,GAAM3O,IAAIA,EAAE,EAAE,MAAMA,EAAEwO,GAAE,EAAE,EAAE,CAAC,EA3B7FyO,GAyBN,SAAYzhF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,GAAG,IAAI3O,EAAEsO,KAAI,IAAI6I,GAAG37E,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE,CAAC,MAAMr3C,GAAQ,GAAL66C,GAAEnS,GAAM1oC,IAAIA,EAAE,EAAE,MAAMA,EAAEk3C,GAAE,EAAE,EAAE,CAAC,EAzB3FqR,GAiC+E,SAAYrkF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,GAAG,IAAI9Q,EAAE8nD,KAAI,IAAI0N,GAAGxgF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE,CAAC,MAAMvvC,GAAQ,GAALoqF,GAAE3rD,GAAMz+B,IAAIA,EAAE,EAAE,MAAMA,EAAEymF,GAAE,EAAE,EAAE,CAAC,EAjCxL4U,GAiCyL,SAAY5nF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,GAAG,IAAIgoB,EAAEu+D,KAAI,IAAI2N,GAAGzgF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAE,CAAC,MAAM6mF,GAAQ,GAALuD,GAAEpiE,GAAM6+D,IAAIA,EAAE,EAAE,MAAMA,EAAEJ,GAAE,EAAE,EAAE,CAAC,EAjC1St6C,GA0B0R,SAAY14B,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,GAAG,IAAI4zB,EAAE2rD,KAAI,IAAI8c,GAAG5vF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE,CAAC,MAAM4/E,GAAQ,GAALwD,GAAExvD,GAAMgsD,IAAIA,EAAE,EAAE,MAAMA,EAAEH,GAAE,EAAE,EAAE,CAAC,EA1BnXiT,GAkC9B,SAAYjmF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,GAAG,IAAIH,EAAEH,KAAI,IAAIoJ,GAAGl8E,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAE,CAAC,MAAMj1D,GAAQ,GAALw4D,GAAE1D,GAAM90D,IAAIA,EAAE,EAAE,MAAMA,EAAE60D,GAAE,EAAE,EAAE,CAAC,EAlC3F+P,GA0B8I,SAAY/iF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,GAAG,IAAIH,EAAEH,KAAI,IAAIsd,GAAGpwF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAE,CAAC,MAAMj1D,GAAQ,GAALw4D,GAAE1D,GAAM90D,IAAIA,EAAE,EAAE,MAAMA,EAAE60D,GAAE,EAAE,EAAE,CAAC,EA1BvQ6W,GAwBwR,SAAY7pF,EAAExH,EAAEyH,EAAEjS,GAAG,IAAIoF,EAAE0/E,KAAI,IAAI0c,GAAGxvF,EAAExH,EAAEyH,EAAEjS,EAAE,CAAC,MAAMuF,GAAQ,GAALojF,GAAEvjF,GAAMG,IAAIA,EAAE,EAAE,MAAMA,EAAEy/E,GAAE,EAAE,EAAE,CAAC,EAxBzWgV,GAiCmR,SAAYhoF,EAAExH,EAAEyH,EAAEjS,EAAEoF,GAAG,IAAIG,EAAEu/E,KAAI,IAAIsF,GAAGp4E,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAE,CAAC,MAAM+zB,GAAQ,GAALwvD,GAAEpjF,GAAM4zB,IAAIA,EAAE,EAAE,MAAMA,EAAE6rD,GAAE,EAAE,EAAE,CAAC,EAjCxWwV,GA2B8C,SAAYxoF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,GAAG,IAAIgsD,EAAEL,KAAI,IAAI0d,GAAGxwF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAE,CAAC,MAAMq9C,GAAQ,GAALmS,GAAExD,GAAM3O,IAAIA,EAAE,EAAE,MAAMA,EAAEwO,GAAE,EAAE,EAAE,CAAC,EA3B3I6V,GA+B4P,SAAY7oF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,GAAG,IAAIgoB,EAAEu+D,KAAI,IAAI2I,GAAGz7E,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAE,CAAC,MAAM6mF,GAAQ,GAALuD,GAAEpiE,GAAM6+D,IAAIA,EAAE,EAAE,MAAMA,EAAEJ,GAAE,EAAE,EAAE,CAAC,EA/B7WtkC,GA+B8H,SAAY1uC,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,GAAG,IAAIgoB,EAAEu+D,KAAI,IAAIkf,GAAGhyF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAE,CAAC,MAAM6mF,GAAQ,GAALuD,GAAEpiE,GAAM6+D,IAAIA,EAAE,EAAE,MAAMA,EAAEJ,GAAE,EAAE,EAAE,CAAC,EA/B/OiW,GAgCxE,SAAYjpF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAEH,EAAE90D,EAAE9yB,EAAED,EAAEmqF,EAAExC,EAAEgE,GAAG,IAAIvoB,EAAEskB,KAAI,IAAIqO,GAAGnhF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAEH,EAAE90D,EAAE9yB,EAAED,EAAEmqF,EAAExC,EAAEgE,EAAE,CAAC,MAAMlE,GAAQ,GAAL8D,GAAEnoB,GAAMqkB,IAAIA,EAAE,EAAE,MAAMA,EAAEG,GAAE,EAAE,EAAE,CAAC,EAhC7EmT,GAgCkN,SAAYnmF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,GAAG,IAAI6+D,EAAEN,KAAI,IAAI4E,GAAG13E,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE,CAAC,MAAM0+D,GAAQ,GAAL0D,GAAEvD,GAAMH,IAAIA,EAAE,EAAE,MAAMA,EAAED,GAAE,EAAE,EAAE,CAAC,EAhCvU+V,GAgCwE,SAAY/oF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAEH,GAAG,IAAI90D,EAAE20D,KAAI,IAAIiF,GAAG/3E,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAEH,EAAE,CAAC,MAAM5nF,GAAQ,GAALsrF,GAAEx4D,GAAM9yB,IAAIA,EAAE,EAAE,MAAMA,EAAE2nF,GAAE,EAAE,EAAE,CAAC,EAhCrMwW,GA8BkF,SAAYxpF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAEH,EAAE90D,EAAE9yB,EAAED,EAAEmqF,EAAExC,EAAEgE,EAAEvoB,EAAEqkB,GAAG,IAAI+B,EAAE9B,KAAI,IAAI8e,GAAG5xF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAEH,EAAE90D,EAAE9yB,EAAED,EAAEmqF,EAAExC,EAAEgE,EAAEvoB,EAAEqkB,EAAE,CAAC,MAAM6D,GAAQ,GAALC,GAAE/B,GAAM8B,IAAIA,EAAE,EAAE,MAAMA,EAAE1D,GAAE,EAAE,EAAE,CAAC,EA9B/Ox0C,GA8BhG,SAAYx+B,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAEH,EAAE90D,EAAE9yB,EAAED,EAAEmqF,EAAExC,EAAEgE,EAAEvoB,EAAEqkB,EAAE+B,EAAE8B,GAAG,IAAIlB,EAAE1C,KAAI,IAAI4e,GAAG1xF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAEH,EAAE90D,EAAE9yB,EAAED,EAAEmqF,EAAExC,EAAEgE,EAAEvoB,EAAEqkB,EAAE+B,EAAE8B,EAAE,CAAC,MAAMjB,GAAQ,GAALkB,GAAEnB,GAAMC,IAAIA,EAAE,EAAE,MAAMA,EAAEzC,GAAE,EAAE,EAAE,CAAC,EA9BrEsW,GA6BtG,SAAYtpF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAEH,EAAE90D,EAAE9yB,EAAED,EAAEmqF,EAAExC,EAAEgE,EAAEvoB,EAAEqkB,EAAE+B,GAAG,IAAI8B,EAAE5D,KAAI,IAAIwe,GAAGtxF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAEH,EAAE90D,EAAE9yB,EAAED,EAAEmqF,EAAExC,EAAEgE,EAAEvoB,EAAEqkB,EAAE+B,EAAE,CAAC,MAAMY,GAAQ,GAALmB,GAAED,GAAMlB,IAAIA,EAAE,EAAE,MAAMA,EAAExC,GAAE,EAAE,EAAE,CAAC,EA7B3D2V,GA+B5G,SAAY3oF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAEH,EAAE90D,EAAE9yB,EAAED,EAAEmqF,EAAExC,EAAEgE,EAAEvoB,EAAEqkB,EAAE+B,EAAE8B,EAAElB,EAAEC,EAAEgP,GAAI,IAAIN,EAAGrR,KAAI,IAAIgf,GAAG9xF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAEH,EAAE90D,EAAE9yB,EAAED,EAAEmqF,EAAExC,EAAEgE,EAAEvoB,EAAEqkB,EAAE+B,EAAE8B,EAAElB,EAAEC,EAAEgP,EAAG,CAAC,MAAMzC,GAAU,GAANrL,GAAEwN,GAAOnC,IAAKA,EAAG,EAAE,MAAMA,EAAGhP,GAAE,EAAE,EAAE,CAAC,EA/B7E0W,GA6BsD,SAAY1pF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAEH,EAAE90D,EAAE9yB,EAAED,EAAEmqF,EAAExC,EAAEgE,EAAEvoB,EAAEqkB,EAAE+B,EAAE8B,EAAElB,EAAEC,EAAEgP,EAAGN,GAAI,IAAInC,EAAGlP,KAAI,IAAI0e,GAAGxxF,EAAExH,EAAEyH,EAAEjS,EAAEoF,EAAEG,EAAE4zB,EAAEgsD,EAAE3O,EAAE1oC,EAAE9Q,EAAEz+B,EAAEgoB,EAAE6+D,EAAEH,EAAE90D,EAAE9yB,EAAED,EAAEmqF,EAAExC,EAAEgE,EAAEvoB,EAAEqkB,EAAE+B,EAAE8B,EAAElB,EAAEC,EAAEgP,EAAGN,EAAG,CAAC,MAAMC,GAAU,GAANzN,GAAEqL,GAAOoC,IAAKA,EAAG,EAAE,MAAMA,EAAGpR,GAAE,EAAE,EAAE,CAAC,EA7BrPl3D,EAAE,SAAS9b,GAAG,OAAOA,CAAC,EAAE+yE,EAAE,SAAS/yE,GAAG61E,GAAE71E,CAAC,EAAE0iF,GAAGiG,GAAGxG,GAAG,SAASniF,EAAExH,EAAEyH,EAAEjS,GAAG,OAAO26F,GAAG3oF,EAAExH,EAAEyH,EAAEjS,EAAE,IAChN,WAAY,SAASgS,EAAE5M,GAAGqH,EAAEqvF,IAAI12F,EAAEnQ,QAAQuhG,EAAG/pF,EAAEqvF,IAAIjH,GAAGsC,IAAKlD,EAAGxnF,EAAEqvF,IAAIyB,GAAGrI,EAAGr1B,QAAQpzD,EAAEqvF,IAAIhC,IAAIv5B,IAAI9zD,EAAEyvF,wBAAwBzvF,EAAEyvF,uBAAuB37B,GAAG,GAAGA,IAAI,OAAO40B,IAAKgH,cAAchH,GAAIA,EAAG,MAAM10B,IAAIr7D,EAAEq7D,EAAEA,EAAE,KAAKr7D,KAAK,CAAC,SAASoF,EAAEpF,GAAG4M,EAAE5M,EAAEg3F,SAAS,CAAC,SAASnqF,EAAE7M,GAAG,OAxBnQ,WAAc,IAAI28D,IAAI82B,GAAI/Q,GAAG,CAAC,GAAG,mBAAmBnvB,QAAQmwB,EAAEO,WAAW,WAAW,OAAO1wB,MAAMmwB,EAAE,CAACuT,YAAY,gBAAgB1+C,MAAK,SAAS3rC,GAAG,IAAIA,EAAEsqF,GAAG,KAAK,uCAAuCxT,EAAE,IAAI,OAAO92E,EAAE8mD,aAAa,IAAGyjC,OAAM,WAAW,OAAOrF,GAAI,IAAG,GAAGzD,EAAG,OAAO,IAAIt3F,SAAQ,SAAS6V,EAAExH,GAAGipF,EAAG3K,GAAE,SAAS72E,GAAGD,EAAE,IAAI7a,WAAW8a,GAAG,GAAEzH,EAAE,GAAE,CAAC,OAAOrO,QAAQC,UAAUuhD,MAAK,WAAW,OAAOu5C,GAAI,GAAE,CAwBnI1C,GAAK72C,MAAK,SAASp4C,GAAG,OAAO48E,YAAYqa,YAAYj3F,EAAEvF,EAAE,IAAG29C,MAAK,SAASp4C,GAAG,OAAOA,CAAC,IAAGo4C,KAAKv4C,GAAE,SAASG,GAAGD,EAAE,0CAA0CC,GAAGiqE,EAAEjqE,EAAE,GAAE,CAAC,IAAIvF,EAAE,CAACgS,EAAE8uF,IAA8D,GAA1DvgC,IAAI9zD,EAAEyvF,wBAAwBzvF,EAAEyvF,uBAAuB37B,GAAM9zD,EAAEgwF,gBAAgB,IAAI,OAAOhwF,EAAEgwF,gBAAgBz8F,EACpiBgS,EAAE,CAAC,MAAM5M,GAAG,OAAOE,EAAE,sDAAsDF,IAAG,CAAE,EAAoB28D,GAAG,mBAAmBogB,YAAYua,sBAAsB5I,KAAMhL,EAAEO,WAAW,YAAY0P,GAAI,mBAAmBpgC,MAAM1mD,EAAEzH,GAAGmuD,MAAMmwB,EAAE,CAACuT,YAAY,gBAAgB1+C,MAAK,SAASv4C,GAAG,OAAO+8E,YAAYua,qBAAqBt3F,EAAEpF,GAAG29C,KAAKnzC,GAAE,SAASjF,GAAyF,OAAtFD,EAAE,kCAAkCC,GAAGD,EAAE,6CAAoD2M,EAAEzH,EAAE,GAAE,KAAO+xF,MAAM7xD,EAAa,CADhd,GAEAj+B,EAAEkwF,mBAAmB,WAAW,OAAOlwF,EAAEkwF,mBAAmBlwF,EAAEqvF,IAAIhC,IAAIjD,MAAM,KAAKtG,UAAU,EAAE9jF,EAAEyyE,SAAS,WAAW,OAAOzyE,EAAEyyE,SAASzyE,EAAEqvF,IAAI5B,IAAIrD,MAAM,KAAKtG,UAAU,EAAE9jF,EAAEwxE,yBAAyB,WAAW,OAAOxxE,EAAEwxE,yBAAyBxxE,EAAEqvF,IAAIvD,IAAI1B,MAAM,KAAKtG,UAAU,EAAE9jF,EAAE6xE,4BAA4B,WAAW,OAAO7xE,EAAE6xE,4BAA4B7xE,EAAEqvF,IAAIzD,IAAIxB,MAAM,KAAKtG,UAAU,EAAE9jF,EAAE+xE,0BAA0B,WAAW,OAAO/xE,EAAE+xE,0BAA0B/xE,EAAEqvF,IAAI5C,IAAIrC,MAAM,KAAKtG,UAAU,EACve9jF,EAAEgyE,0BAA0B,WAAW,OAAOhyE,EAAEgyE,0BAA0BhyE,EAAEqvF,IAAIvE,IAAIV,MAAM,KAAKtG,UAAU,EAAE9jF,EAAE6yE,kBAAkB,WAAW,OAAO7yE,EAAE6yE,kBAAkB7yE,EAAEqvF,IAAItC,IAAI3C,MAAM,KAAKtG,UAAU,EAAE9jF,EAAEuzE,mBAAmB,WAAW,OAAOvzE,EAAEuzE,mBAAmBvzE,EAAEqvF,IAAI1B,IAAIvD,MAAM,KAAKtG,UAAU,EAAE9jF,EAAE8yE,kBAAkB,WAAW,OAAO9yE,EAAE8yE,kBAAkB9yE,EAAEqvF,IAAI/D,IAAIlB,MAAM,KAAKtG,UAAU,EAAE9jF,EAAEgzE,mBAAmB,WAAW,OAAOhzE,EAAEgzE,mBAAmBhzE,EAAEqvF,IAAI1E,IAAIP,MAAM,KAAKtG,UAAU,EACzd9jF,EAAEmzE,iBAAiB,WAAW,OAAOnzE,EAAEmzE,iBAAiBnzE,EAAEqvF,IAAIhH,IAAI+B,MAAM,KAAKtG,UAAU,EAAE9jF,EAAEqzE,kBAAkB,WAAW,OAAOrzE,EAAEqzE,kBAAkBrzE,EAAEqvF,IAAIG,IAAIpF,MAAM,KAAKtG,UAAU,EAAE9jF,EAAEszE,SAAS,WAAW,OAAOtzE,EAAEszE,SAAStzE,EAAEqvF,IAAIc,IAAI/F,MAAM,KAAKtG,UAAU,EAAE9jF,EAAE6zE,iBAAiB,WAAW,OAAO7zE,EAAE6zE,iBAAiB7zE,EAAEqvF,IAAIe,IAAIhG,MAAM,KAAKtG,UAAU,EAAE9jF,EAAE40E,kBAAkB,WAAW,OAAO50E,EAAE40E,kBAAkB50E,EAAEqvF,IAAIgB,IAAIjG,MAAM,KAAKtG,UAAU,EAC/a9jF,EAAE+0E,kBAAkB,WAAW,OAAO/0E,EAAE+0E,kBAAkB/0E,EAAEqvF,IAAIiB,IAAIlG,MAAM,KAAKtG,UAAU,EAAE9jF,EAAE4vE,qBAAqB,WAAW,OAAO5vE,EAAE4vE,qBAAqB5vE,EAAEqvF,IAAIkB,IAAInG,MAAM,KAAKtG,UAAU,EAAE9jF,EAAEiwE,sBAAsB,WAAW,OAAOjwE,EAAEiwE,sBAAsBjwE,EAAEqvF,IAAImB,IAAIpG,MAAM,KAAKtG,UAAU,EAAE9jF,EAAEkwE,sBAAsB,WAAW,OAAOlwE,EAAEkwE,sBAAsBlwE,EAAEqvF,IAAIoB,IAAIrG,MAAM,KAAKtG,UAAU,EAAE9jF,EAAEu0E,QAAQ,WAAW,OAAOv0E,EAAEu0E,QAAQv0E,EAAEqvF,IAAIqB,IAAItG,MAAM,KAAKtG,UAAU,EACvc9jF,EAAEi1E,iBAAiB,WAAW,OAAOj1E,EAAEi1E,iBAAiBj1E,EAAEqvF,IAAIsB,IAAIvG,MAAM,KAAKtG,UAAU,EACvF,IA0BmcoU,GA1B/bhN,GAAGlrF,EAAEmyE,QAAQ,WAAW,OAAO+Y,GAAGlrF,EAAEmyE,QAAQnyE,EAAEqvF,IAAIuB,IAAIxG,MAAM,KAAKtG,UAAU,EAAE6E,GAAG3oF,EAAEmwE,MAAM,WAAW,OAAOwY,GAAG3oF,EAAEmwE,MAAMnwE,EAAEqvF,IAAIwB,IAAIzG,MAAM,KAAKtG,UAAU,EAAEvL,GAAEv4E,EAAEyyF,UAAU,WAAW,OAAOla,GAAEv4E,EAAEyyF,UAAUzyF,EAAEqvF,IAAI0B,IAAI3G,MAAM,KAAKtG,UAAU,EAAEzL,GAAEr4E,EAAE48D,UAAU,WAAW,OAAOyb,GAAEr4E,EAAE48D,UAAU58D,EAAEqvF,IAAI2B,IAAI5G,MAAM,KAAKtG,UAAU,EAAE5H,GAAEl8E,EAAE+8D,aAAa,WAAW,OAAOmf,GAAEl8E,EAAE+8D,aAAa/8D,EAAEqvF,IAAI4B,IAAI7G,MAAM,KAAKtG,UAAU,EAAEyQ,GAAGv0F,EAAE68D,WAAW,WAAW,OAAO03B,GAAGv0F,EAAE68D,WAAW78D,EAAEqvF,IAAI6B,IAAI9G,MAAM,KAAKtG,UAAU,EAAEvtE,GAAEvW,EAAEgzF,iBACpe,WAAW,OAAOz8E,GAAEvW,EAAEgzF,iBAAiBhzF,EAAEqvF,IAAI8B,IAAI/G,MAAM,KAAKtG,UAAU,EAAEyG,GAAGvqF,EAAEkzF,uBAAuB,WAAW,OAAO3I,GAAGvqF,EAAEkzF,uBAAuBlzF,EAAEqvF,IAAI+B,IAAIhH,MAAM,KAAKtG,UAAU,EAAE2Q,GAAGz0F,EAAEozF,UAAU,WAAW,OAAOqB,GAAGz0F,EAAEozF,UAAUpzF,EAAEqvF,IAAIgC,IAAIjH,MAAM,KAAKtG,UAAU,EAAE6Q,GAAG30F,EAAEszF,YAAY,WAAW,OAAOqB,GAAG30F,EAAEszF,YAAYtzF,EAAEqvF,IAAIiC,IAAIlH,MAAM,KAAKtG,UAAU,EAAE+Q,GAAG70F,EAAEwzF,eAAe,WAAW,OAAOqB,GAAG70F,EAAEwzF,eAAexzF,EAAEqvF,IAAImC,IAAIpH,MAAM,KAAKtG,UAAU,EAAEiR,GAAG/0F,EAAE0zF,YAAY,WAAW,OAAOqB,GAAG/0F,EAAE0zF,YAAY1zF,EAAEqvF,IAAIoC,IAAIrH,MAAM,KACxftG,UAAU,EAAEmR,GAAGj1F,EAAE4zF,YAAY,WAAW,OAAOqB,GAAGj1F,EAAE4zF,YAAY5zF,EAAEqvF,IAAIqC,IAAItH,MAAM,KAAKtG,UAAU,EAAEqR,GAAGn1F,EAAE8zF,cAAc,WAAW,OAAOqB,GAAGn1F,EAAE8zF,cAAc9zF,EAAEqvF,IAAIC,IAAIlF,MAAM,KAAKtG,UAAU,EAAEuR,GAAGr1F,EAAEg0F,eAAe,WAAW,OAAOqB,GAAGr1F,EAAEg0F,eAAeh0F,EAAEqvF,IAAIwC,IAAIzH,MAAM,KAAKtG,UAAU,EAAEyR,GAAGv1F,EAAEm4F,gBAAgB,WAAW,OAAO5C,GAAGv1F,EAAEm4F,gBAAgBn4F,EAAEqvF,IAAI0C,IAAI3H,MAAM,KAAKtG,UAAU,EAAE2R,GAAGz1F,EAAEk0F,WAAW,WAAW,OAAOuB,GAAGz1F,EAAEk0F,WAAWl0F,EAAEqvF,IAAI6C,IAAI9H,MAAM,KAAKtG,UAAU,EAAE6R,GAAG31F,EAAEo0F,oBAAoB,WAAW,OAAOuB,GAAG31F,EAAEo0F,oBACrfp0F,EAAEqvF,IAAIE,IAAInF,MAAM,KAAKtG,UAAU,EAAE+R,GAAG71F,EAAEs0F,eAAe,WAAW,OAAOuB,GAAG71F,EAAEs0F,eAAet0F,EAAEqvF,IAAI+C,IAAIhI,MAAM,KAAKtG,UAAU,EAAEiS,GAAG/1F,EAAEw0F,eAAe,WAAW,OAAOuB,GAAG/1F,EAAEw0F,eAAex0F,EAAEqvF,IAAIiD,IAAIlI,MAAM,KAAKtG,UAAU,EAAEmS,GAAGj2F,EAAE00F,cAAc,WAAW,OAAOuB,GAAGj2F,EAAE00F,cAAc10F,EAAEqvF,IAAImD,IAAIpI,MAAM,KAAKtG,UAAU,EAAEqS,GAAGn2F,EAAE40F,qBAAqB,WAAW,OAAOuB,GAAGn2F,EAAE40F,qBAAqB50F,EAAEqvF,IAAIqD,IAAItI,MAAM,KAAKtG,UAAU,EAAEuS,GAAGr2F,EAAE80F,YAAY,WAAW,OAAOuB,GAAGr2F,EAAE80F,YAAY90F,EAAEqvF,IAAIuD,IAAIxI,MAAM,KAAKtG,UAAU,EAAEyS,GAAGv2F,EAAEg1F,gBACjf,WAAW,OAAOuB,GAAGv2F,EAAEg1F,gBAAgBh1F,EAAEqvF,IAAIwD,IAAIzI,MAAM,KAAKtG,UAAU,EAAE2S,GAAGz2F,EAAEk1F,eAAe,WAAW,OAAOuB,GAAGz2F,EAAEk1F,eAAel1F,EAAEqvF,IAAIyD,IAAI1I,MAAM,KAAKtG,UAAU,EAAE6S,GAAG32F,EAAEo1F,aAAa,WAAW,OAAOuB,GAAG32F,EAAEo1F,aAAap1F,EAAEqvF,IAAI0D,IAAI3I,MAAM,KAAKtG,UAAU,EAAE+S,GAAG72F,EAAEs1F,2BAA2B,WAAW,OAAOuB,GAAG72F,EAAEs1F,2BAA2Bt1F,EAAEqvF,IAAI4D,IAAI7I,MAAM,KAAKtG,UAAU,EAAEiT,GAAG/2F,EAAEw1F,8BAA8B,WAAW,OAAOuB,GAAG/2F,EAAEw1F,8BAA8Bx1F,EAAEqvF,IAAI8D,IAAI/I,MAAM,KAAKtG,UAAU,EAAEmT,GAAGj3F,EAAE01F,4BAC3e,WAAW,OAAOuB,GAAGj3F,EAAE01F,4BAA4B11F,EAAEqvF,IAAIgE,IAAIjJ,MAAM,KAAKtG,UAAU,EAAEqT,GAAGn3F,EAAE41F,0BAA0B,WAAW,OAAOuB,GAAGn3F,EAAE41F,0BAA0B51F,EAAEqvF,IAAIkE,IAAInJ,MAAM,KAAKtG,UAAU,EAAEuT,GAAGr3F,EAAE81F,6BAA6B,WAAW,OAAOuB,GAAGr3F,EAAE81F,6BAA6B91F,EAAEqvF,IAAIoE,IAAIrJ,MAAM,KAAKtG,UAAU,EAAEyT,GAAGv3F,EAAEg2F,mBAAmB,WAAW,OAAOuB,GAAGv3F,EAAEg2F,mBAAmBh2F,EAAEqvF,IAAIsE,IAAIvJ,MAAM,KAAKtG,UAAU,EAAE9C,GAAGhhF,EAAEk2F,oBAAoB,WAAW,OAAOlV,GAAGhhF,EAAEk2F,oBAAoBl2F,EAAEqvF,IAAIwE,IAAIzJ,MAAM,KACnftG,UAAU,EAAE4C,GAAG1mF,EAAEo2F,wBAAwB,WAAW,OAAO1P,GAAG1mF,EAAEo2F,wBAAwBp2F,EAAEqvF,IAAI0E,IAAI3J,MAAM,KAAKtG,UAAU,EAAExG,GAAGt9E,EAAEs2F,mBAAmB,WAAW,OAAOhZ,GAAGt9E,EAAEs2F,mBAAmBt2F,EAAEqvF,IAAI4E,IAAI7J,MAAM,KAAKtG,UAAU,EAAE7G,GAAGj9E,EAAEw2F,kBAAkB,WAAW,OAAOvZ,GAAGj9E,EAAEw2F,kBAAkBx2F,EAAEqvF,IAAI8E,IAAI/J,MAAM,KAAKtG,UAAU,EAAEiC,GAAG/lF,EAAE02F,kBAAkB,WAAW,OAAO3Q,GAAG/lF,EAAE02F,kBAAkB12F,EAAEqvF,IAAIgF,IAAIjK,MAAM,KAAKtG,UAAU,EAAEkC,GAAGhmF,EAAE42F,kBAAkB,WAAW,OAAO5Q,GAAGhmF,EAAE42F,kBAAkB52F,EAAEqvF,IAAIkF,IAAInK,MAAM,KAAKtG,UAAU,EAC7fzF,GAAGr+E,EAAE82F,aAAa,WAAW,OAAOzY,GAAGr+E,EAAE82F,aAAa92F,EAAEqvF,IAAIoF,IAAIrK,MAAM,KAAKtG,UAAU,EAAE5C,GAAGlhF,EAAEg3F,gBAAgB,WAAW,OAAO9V,GAAGlhF,EAAEg3F,gBAAgBh3F,EAAEqvF,IAAIsF,IAAIvK,MAAM,KAAKtG,UAAU,EAAErC,GAAGzhF,EAAEk3F,sBAAsB,WAAW,OAAOzV,GAAGzhF,EAAEk3F,sBAAsBl3F,EAAEqvF,IAAIwF,IAAIzK,MAAM,KAAKtG,UAAU,EAAE/C,GAAG/gF,EAAEo3F,YAAY,WAAW,OAAOrW,GAAG/gF,EAAEo3F,YAAYp3F,EAAEqvF,IAAI0F,IAAI3K,MAAM,KAAKtG,UAAU,EAAEnG,GAAG39E,EAAEs3F,aAAa,WAAW,OAAO3Z,GAAG39E,EAAEs3F,aAAat3F,EAAEqvF,IAAI4F,IAAI7K,MAAM,KAAKtG,UAAU,EAoBvc,SAASyC,KAAK,SAAShhF,IAAI,IAAI2yF,KAAKA,IAAG,EAAGl4F,EAAEy3F,WAAU,GAAIvN,GAAI,CAAiE,GAAhErC,EAAGY,GAAIqB,EAAG9pF,GAAMA,EAAE03F,sBAAqB13F,EAAE03F,uBAA0B13F,EAAE23F,QAAQ,IAAI,mBAAmB33F,EAAE23F,UAAU33F,EAAE23F,QAAQ,CAAC33F,EAAE23F,UAAU33F,EAAE23F,QAAQ/tG,QAAQ,CAAC,IAAImU,EAAEiC,EAAE23F,QAAQ99E,QAAQiuE,EAAG10B,QAAQr1D,EAAE,CAAC8pF,EAAGC,EAAG,CAAC,CAAC,KAAK,EAAEh0B,GAAG,CAAC,GAAG9zD,EAAEo8E,OAAO,IAAI,mBAAmBp8E,EAAEo8E,SAASp8E,EAAEo8E,OAAO,CAACp8E,EAAEo8E,SAASp8E,EAAEo8E,OAAOxyF,QAAQugG,IAAKtC,EAAGU,GAAI,EAAEz0B,IAAI9zD,EAAE43F,WAAW53F,EAAE43F,UAAU,cAAcj6D,YAAW,WAAWA,YAAW,WAAW39B,EAAE43F,UAAU,GAAG,GAAE,GAAGryF,GAAG,GAAE,IAAIA,IAAI,CAAC,CAC7e,GAFsTvF,EAAEozE,aAAa+U,EAAGnoF,EAAEoyE,aAAa,SAAS7sE,EAAExH,EAAEyH,GAAG,OAAOkiF,EAAGniF,EAAEkgB,EAAE1nB,EAAEyH,EAAE,EAAExF,EAAEkyE,gBAAgB8V,EAAGhoF,EAAE48D,UAAUyb,GAAEr4E,EAAE+8D,aAAamf,GAAEl8E,EAAE68D,WAAW03B,GAAUvgC,EAAE,SAASqpB,IAAK6a,IAAI3R,KAAK2R,KAAKlkC,EAAEqpB,EAAG,EAEter9E,EAAE+3F,QAAQ,IAAI,mBAAmB/3F,EAAE+3F,UAAU/3F,EAAE+3F,QAAQ,CAAC/3F,EAAE+3F,UAAU,EAAE/3F,EAAE+3F,QAAQnuG,QAAQoW,EAAE+3F,QAAQt7D,KAAVz8B,GAGzF,OAH2GumF,KAGpGyR,EAAQvf,KAEjB,GAGEhwF,EAAOD,QAAUwvG,C,gCCpFnBvvG,EAAOD,QAmBP,SAAmB42F,EAAIrvC,GAKnB,IAJA,IAAI3tC,EAAU,IAAInW,MAAM63F,UAAUl6F,OAAS,GACvC6nC,EAAU,EACVpvB,EAAU,EACV+1F,GAAU,EACP/1F,EAAQyhF,UAAUl6F,QACrBwY,EAAOqvB,KAAYqyD,UAAUzhF,KACjC,OAAO,IAAI3S,SAAQ,SAAkBC,EAASC,GAC1CwS,EAAOqvB,GAAU,SAAkBj+B,GAC/B,GAAI4kG,EAEA,GADAA,GAAU,EACN5kG,EACA5D,EAAO4D,OACN,CAGD,IAFA,IAAI4O,EAAS,IAAInW,MAAM63F,UAAUl6F,OAAS,GACtC6nC,EAAS,EACNA,EAASrvB,EAAOxY,QACnBwY,EAAOqvB,KAAYqyD,UAAUryD,GACjC9hC,EAAQy6F,MAAM,KAAMhoF,EACxB,CAER,EACA,IACIg9E,EAAGgL,MAAMr6C,GAAO,KAAM3tC,EAC1B,CAAE,MAAO5O,GACD4kG,IACAA,GAAU,EACVxoG,EAAO4D,GAEf,CACJ,GACJ,C,kCC5CA,IAAI6kG,EAAS7vG,EAOb6vG,EAAOzuG,OAAS,SAAgB0uG,GAC5B,IAAI/nE,EAAI+nE,EAAO1uG,OACf,IAAK2mC,EACD,OAAO,EAEX,IADA,IAAI8Q,EAAI,IACC9Q,EAAI,EAAI,GAA0B,MAArB+nE,EAAO16D,OAAOrN,MAC9B8Q,EACN,OAAOvsC,KAAKE,KAAqB,EAAhBsjG,EAAO1uG,QAAc,EAAIy3C,CAC9C,EASA,IANA,IAAIk3D,EAAM,IAAItsG,MAAM,IAGhBusG,EAAM,IAAIvsG,MAAM,KAGXxC,EAAI,EAAGA,EAAI,IAChB+uG,EAAID,EAAI9uG,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,EAAIA,EAAI,GAAK,IAAMA,IASrF4uG,EAAOrzF,OAAS,SAAgBlY,EAAQs9B,EAAO2E,GAM3C,IALA,IAIIl2B,EAJA4/F,EAAQ,KACRC,EAAQ,GACRjvG,EAAI,EACJ+G,EAAI,EAED45B,EAAQ2E,GAAK,CAChB,IAAIhxB,EAAIjR,EAAOs9B,KACf,OAAQ55B,GACJ,KAAK,EACDkoG,EAAMjvG,KAAO8uG,EAAIx6F,GAAK,GACtBlF,GAAS,EAAJkF,IAAU,EACfvN,EAAI,EACJ,MACJ,KAAK,EACDkoG,EAAMjvG,KAAO8uG,EAAI1/F,EAAIkF,GAAK,GAC1BlF,GAAS,GAAJkF,IAAW,EAChBvN,EAAI,EACJ,MACJ,KAAK,EACDkoG,EAAMjvG,KAAO8uG,EAAI1/F,EAAIkF,GAAK,GAC1B26F,EAAMjvG,KAAO8uG,EAAQ,GAAJx6F,GACjBvN,EAAI,EAGR/G,EAAI,QACHgvG,IAAUA,EAAQ,KAAK5uG,KAAKqxF,OAAOC,aAAaiP,MAAMlP,OAAQwd,IAC/DjvG,EAAI,EAEZ,CAOA,OANI+G,IACAkoG,EAAMjvG,KAAO8uG,EAAI1/F,GACjB6/F,EAAMjvG,KAAO,GACH,IAAN+G,IACAkoG,EAAMjvG,KAAO,KAEjBgvG,GACIhvG,GACAgvG,EAAM5uG,KAAKqxF,OAAOC,aAAaiP,MAAMlP,OAAQwd,EAAMj3F,MAAM,EAAGhY,KACzDgvG,EAAMhlG,KAAK,KAEfynF,OAAOC,aAAaiP,MAAMlP,OAAQwd,EAAMj3F,MAAM,EAAGhY,GAC5D,EAEA,IAAIkvG,EAAkB,mBAUtBN,EAAOpzF,OAAS,SAAgBqzF,EAAQxrG,EAAQ2kC,GAI5C,IAHA,IAEI54B,EAFAuxB,EAAQqH,EACRjhC,EAAI,EAEC/G,EAAI,EAAGA,EAAI6uG,EAAO1uG,QAAS,CAChC,IAAI4b,EAAI8yF,EAAOhd,WAAW7xF,KAC1B,GAAU,KAAN+b,GAAYhV,EAAI,EAChB,MACJ,QAAqBjH,KAAhBic,EAAIgzF,EAAIhzF,IACT,MAAMhc,MAAMmvG,GAChB,OAAQnoG,GACJ,KAAK,EACDqI,EAAI2M,EACJhV,EAAI,EACJ,MACJ,KAAK,EACD1D,EAAO2kC,KAAY54B,GAAK,GAAS,GAAJ2M,IAAW,EACxC3M,EAAI2M,EACJhV,EAAI,EACJ,MACJ,KAAK,EACD1D,EAAO2kC,MAAiB,GAAJ54B,IAAW,GAAS,GAAJ2M,IAAW,EAC/C3M,EAAI2M,EACJhV,EAAI,EACJ,MACJ,KAAK,EACD1D,EAAO2kC,MAAiB,EAAJ54B,IAAU,EAAI2M,EAClChV,EAAI,EAGhB,CACA,GAAU,IAANA,EACA,MAAMhH,MAAMmvG,GAChB,OAAOlnE,EAASrH,CACpB,EAOAiuE,EAAOO,KAAO,SAAcN,GACxB,MAAO,mEAAmEM,KAAKN,EACnF,C,gCCjIA,SAASO,IAOL7uG,KAAK8uG,WAAa,CAAC,CACvB,CAhBArwG,EAAOD,QAAUqwG,EAyBjBA,EAAa3R,UAAU9N,GAAK,SAAY2f,EAAK3Z,EAAIrvC,GAK7C,OAJC/lD,KAAK8uG,WAAWC,KAAS/uG,KAAK8uG,WAAWC,GAAO,KAAKlvG,KAAK,CACvDu1F,GAAMA,EACNrvC,IAAMA,GAAO/lD,OAEVA,IACX,EAQA6uG,EAAa3R,UAAU8R,IAAM,SAAaD,EAAK3Z,GAC3C,QAAY71F,IAARwvG,EACA/uG,KAAK8uG,WAAa,CAAC,OAEnB,QAAWvvG,IAAP61F,EACAp1F,KAAK8uG,WAAWC,GAAO,QAGvB,IADA,IAAIE,EAAYjvG,KAAK8uG,WAAWC,GACvBtvG,EAAI,EAAGA,EAAIwvG,EAAUrvG,QACtBqvG,EAAUxvG,GAAG21F,KAAOA,EACpB6Z,EAAUtvG,OAAOF,EAAG,KAElBA,EAGlB,OAAOO,IACX,EAQA6uG,EAAa3R,UAAUgS,KAAO,SAAcH,GACxC,IAAIE,EAAYjvG,KAAK8uG,WAAWC,GAChC,GAAIE,EAAW,CAGX,IAFA,IAAIv7B,EAAO,GACPj0E,EAAI,EACDA,EAAIq6F,UAAUl6F,QACjB8zE,EAAK7zE,KAAKi6F,UAAUr6F,MACxB,IAAKA,EAAI,EAAGA,EAAIwvG,EAAUrvG,QACtBqvG,EAAUxvG,GAAG21F,GAAGgL,MAAM6O,EAAUxvG,KAAKsmD,IAAK2tB,EAClD,CACA,OAAO1zE,IACX,C,+BCYA,SAASzB,EAAQC,GAwNb,MArN4B,oBAAjBiC,aAA8B,WAErC,IAAI0uG,EAAM,IAAI1uG,aAAa,EAAG,IAC1B2uG,EAAM,IAAI1uG,WAAWyuG,EAAIrsG,QACzBusG,EAAiB,MAAXD,EAAI,GAEd,SAASE,EAAmBlqE,EAAKyiB,EAAK2kB,GAClC2iC,EAAI,GAAK/pE,EACTyiB,EAAI2kB,GAAW4iC,EAAI,GACnBvnD,EAAI2kB,EAAM,GAAK4iC,EAAI,GACnBvnD,EAAI2kB,EAAM,GAAK4iC,EAAI,GACnBvnD,EAAI2kB,EAAM,GAAK4iC,EAAI,EACvB,CAEA,SAASG,EAAmBnqE,EAAKyiB,EAAK2kB,GAClC2iC,EAAI,GAAK/pE,EACTyiB,EAAI2kB,GAAW4iC,EAAI,GACnBvnD,EAAI2kB,EAAM,GAAK4iC,EAAI,GACnBvnD,EAAI2kB,EAAM,GAAK4iC,EAAI,GACnBvnD,EAAI2kB,EAAM,GAAK4iC,EAAI,EACvB,CAOA,SAASI,EAAkB3nD,EAAK2kB,GAK5B,OAJA4iC,EAAI,GAAKvnD,EAAI2kB,GACb4iC,EAAI,GAAKvnD,EAAI2kB,EAAM,GACnB4iC,EAAI,GAAKvnD,EAAI2kB,EAAM,GACnB4iC,EAAI,GAAKvnD,EAAI2kB,EAAM,GACZ2iC,EAAI,EACf,CAEA,SAASM,EAAkB5nD,EAAK2kB,GAK5B,OAJA4iC,EAAI,GAAKvnD,EAAI2kB,GACb4iC,EAAI,GAAKvnD,EAAI2kB,EAAM,GACnB4iC,EAAI,GAAKvnD,EAAI2kB,EAAM,GACnB4iC,EAAI,GAAKvnD,EAAI2kB,EAAM,GACZ2iC,EAAI,EACf,CAlBA3wG,EAAQkxG,aAAeL,EAAKC,EAAqBC,EAEjD/wG,EAAQmxG,aAAeN,EAAKE,EAAqBD,EAmBjD9wG,EAAQoxG,YAAcP,EAAKG,EAAoBC,EAE/CjxG,EAAQqxG,YAAcR,EAAKI,EAAoBD,CAGlD,CAjDwC,GAiD9B,WAEP,SAASM,EAAmBC,EAAW3qE,EAAKyiB,EAAK2kB,GAC7C,IAAIwjC,EAAO5qE,EAAM,EAAI,EAAI,EAGzB,GAFI4qE,IACA5qE,GAAOA,GACC,IAARA,EACA2qE,EAAU,EAAI3qE,EAAM,EAAmB,EAAqB,WAAYyiB,EAAK2kB,QAC5E,GAAIhjB,MAAMpkB,GACX2qE,EAAU,WAAYloD,EAAK2kB,QAC1B,GAAIpnC,EAAM,qBACX2qE,GAAWC,GAAQ,GAAK,cAAgB,EAAGnoD,EAAK2kB,QAC/C,GAAIpnC,EAAM,sBACX2qE,GAAWC,GAAQ,GAAKllG,KAAKmlG,MAAM7qE,EAAM,yBAA4B,EAAGyiB,EAAK2kB,OAC5E,CACD,IAAI0jC,EAAWplG,KAAKyc,MAAMzc,KAAK4d,IAAI0c,GAAOt6B,KAAKqlG,KAE/CJ,GAAWC,GAAQ,GAAKE,EAAW,KAAO,GAD0B,QAArDplG,KAAKmlG,MAAM7qE,EAAMt6B,KAAKwe,IAAI,GAAI4mF,GAAY,YACI,EAAGroD,EAAK2kB,EACzE,CACJ,CAKA,SAAS4jC,EAAkBC,EAAUxoD,EAAK2kB,GACtC,IAAI8jC,EAAOD,EAASxoD,EAAK2kB,GACrBwjC,EAAsB,GAAdM,GAAQ,IAAU,EAC1BJ,EAAWI,IAAS,GAAK,IACzBC,EAAkB,QAAPD,EACf,OAAoB,MAAbJ,EACDK,EACAC,IACAR,GAAOS,KACM,IAAbP,EACO,qBAAPF,EAA+BO,EAC/BP,EAAOllG,KAAKwe,IAAI,EAAG4mF,EAAW,MAAQK,EAAW,QAC3D,CAfA/xG,EAAQkxG,aAAeI,EAAmBxqD,KAAK,KAAMorD,GACrDlyG,EAAQmxG,aAAeG,EAAmBxqD,KAAK,KAAMqrD,GAgBrDnyG,EAAQoxG,YAAcQ,EAAkB9qD,KAAK,KAAMsrD,GACnDpyG,EAAQqxG,YAAcO,EAAkB9qD,KAAK,KAAMurD,EAEtD,CAzCU,GA4CiB,oBAAjB9vG,aAA8B,WAErC,IAAI+vG,EAAM,IAAI/vG,aAAa,EAAE,IACzBquG,EAAM,IAAI1uG,WAAWowG,EAAIhuG,QACzBusG,EAAiB,MAAXD,EAAI,GAEd,SAAS2B,EAAoB3rE,EAAKyiB,EAAK2kB,GACnCskC,EAAI,GAAK1rE,EACTyiB,EAAI2kB,GAAW4iC,EAAI,GACnBvnD,EAAI2kB,EAAM,GAAK4iC,EAAI,GACnBvnD,EAAI2kB,EAAM,GAAK4iC,EAAI,GACnBvnD,EAAI2kB,EAAM,GAAK4iC,EAAI,GACnBvnD,EAAI2kB,EAAM,GAAK4iC,EAAI,GACnBvnD,EAAI2kB,EAAM,GAAK4iC,EAAI,GACnBvnD,EAAI2kB,EAAM,GAAK4iC,EAAI,GACnBvnD,EAAI2kB,EAAM,GAAK4iC,EAAI,EACvB,CAEA,SAAS4B,EAAoB5rE,EAAKyiB,EAAK2kB,GACnCskC,EAAI,GAAK1rE,EACTyiB,EAAI2kB,GAAW4iC,EAAI,GACnBvnD,EAAI2kB,EAAM,GAAK4iC,EAAI,GACnBvnD,EAAI2kB,EAAM,GAAK4iC,EAAI,GACnBvnD,EAAI2kB,EAAM,GAAK4iC,EAAI,GACnBvnD,EAAI2kB,EAAM,GAAK4iC,EAAI,GACnBvnD,EAAI2kB,EAAM,GAAK4iC,EAAI,GACnBvnD,EAAI2kB,EAAM,GAAK4iC,EAAI,GACnBvnD,EAAI2kB,EAAM,GAAK4iC,EAAI,EACvB,CAOA,SAAS6B,EAAmBppD,EAAK2kB,GAS7B,OARA4iC,EAAI,GAAKvnD,EAAI2kB,GACb4iC,EAAI,GAAKvnD,EAAI2kB,EAAM,GACnB4iC,EAAI,GAAKvnD,EAAI2kB,EAAM,GACnB4iC,EAAI,GAAKvnD,EAAI2kB,EAAM,GACnB4iC,EAAI,GAAKvnD,EAAI2kB,EAAM,GACnB4iC,EAAI,GAAKvnD,EAAI2kB,EAAM,GACnB4iC,EAAI,GAAKvnD,EAAI2kB,EAAM,GACnB4iC,EAAI,GAAKvnD,EAAI2kB,EAAM,GACZskC,EAAI,EACf,CAEA,SAASI,EAAmBrpD,EAAK2kB,GAS7B,OARA4iC,EAAI,GAAKvnD,EAAI2kB,GACb4iC,EAAI,GAAKvnD,EAAI2kB,EAAM,GACnB4iC,EAAI,GAAKvnD,EAAI2kB,EAAM,GACnB4iC,EAAI,GAAKvnD,EAAI2kB,EAAM,GACnB4iC,EAAI,GAAKvnD,EAAI2kB,EAAM,GACnB4iC,EAAI,GAAKvnD,EAAI2kB,EAAM,GACnB4iC,EAAI,GAAKvnD,EAAI2kB,EAAM,GACnB4iC,EAAI,GAAKvnD,EAAI2kB,EAAM,GACZskC,EAAI,EACf,CA1BAtyG,EAAQ2yG,cAAgB9B,EAAK0B,EAAsBC,EAEnDxyG,EAAQ4yG,cAAgB/B,EAAK2B,EAAsBD,EA2BnDvyG,EAAQ6yG,aAAehC,EAAK4B,EAAqBC,EAEjD1yG,EAAQ8yG,aAAejC,EAAK6B,EAAqBD,CAGpD,CAjEwC,GAiE9B,WAEP,SAASM,EAAoBxB,EAAWyB,EAAMC,EAAMrsE,EAAKyiB,EAAK2kB,GAC1D,IAAIwjC,EAAO5qE,EAAM,EAAI,EAAI,EAGzB,GAFI4qE,IACA5qE,GAAOA,GACC,IAARA,EACA2qE,EAAU,EAAGloD,EAAK2kB,EAAMglC,GACxBzB,EAAU,EAAI3qE,EAAM,EAAmB,EAAqB,WAAYyiB,EAAK2kB,EAAMilC,QAChF,GAAIjoD,MAAMpkB,GACb2qE,EAAU,EAAGloD,EAAK2kB,EAAMglC,GACxBzB,EAAU,WAAYloD,EAAK2kB,EAAMilC,QAC9B,GAAIrsE,EAAM,sBACb2qE,EAAU,EAAGloD,EAAK2kB,EAAMglC,GACxBzB,GAAWC,GAAQ,GAAK,cAAgB,EAAGnoD,EAAK2kB,EAAMilC,OACnD,CACH,IAAIlB,EACJ,GAAInrE,EAAM,uBAEN2qE,GADAQ,EAAWnrE,EAAM,UACM,EAAGyiB,EAAK2kB,EAAMglC,GACrCzB,GAAWC,GAAQ,GAAKO,EAAW,cAAgB,EAAG1oD,EAAK2kB,EAAMilC,OAC9D,CACH,IAAIvB,EAAWplG,KAAKyc,MAAMzc,KAAK4d,IAAI0c,GAAOt6B,KAAKqlG,KAC9B,OAAbD,IACAA,EAAW,MAEfH,EAAqB,kBADrBQ,EAAWnrE,EAAMt6B,KAAKwe,IAAI,GAAI4mF,MACY,EAAGroD,EAAK2kB,EAAMglC,GACxDzB,GAAWC,GAAQ,GAAKE,EAAW,MAAQ,GAAgB,QAAXK,EAAqB,WAAa,EAAG1oD,EAAK2kB,EAAMilC,EACpG,CACJ,CACJ,CAKA,SAASC,EAAmBrB,EAAUmB,EAAMC,EAAM5pD,EAAK2kB,GACnD,IAAImlC,EAAKtB,EAASxoD,EAAK2kB,EAAMglC,GACzBI,EAAKvB,EAASxoD,EAAK2kB,EAAMilC,GACzBzB,EAAoB,GAAZ4B,GAAM,IAAU,EACxB1B,EAAW0B,IAAO,GAAK,KACvBrB,EAAW,YAAmB,QAALqB,GAAgBD,EAC7C,OAAoB,OAAbzB,EACDK,EACAC,IACAR,GAAOS,KACM,IAAbP,EACO,OAAPF,EAAgBO,EAChBP,EAAOllG,KAAKwe,IAAI,EAAG4mF,EAAW,OAASK,EAAW,iBAC5D,CAhBA/xG,EAAQ2yG,cAAgBI,EAAoBjsD,KAAK,KAAMorD,EAAa,EAAG,GACvElyG,EAAQ4yG,cAAgBG,EAAoBjsD,KAAK,KAAMqrD,EAAa,EAAG,GAiBvEnyG,EAAQ6yG,aAAeK,EAAmBpsD,KAAK,KAAMsrD,EAAY,EAAG,GACpEpyG,EAAQ8yG,aAAeI,EAAmBpsD,KAAK,KAAMurD,EAAY,EAAG,EAEvE,CArDU,GAuDJryG,CACX,CAIA,SAASkyG,EAAYtrE,EAAKyiB,EAAK2kB,GAC3B3kB,EAAI2kB,GAAyB,IAAbpnC,EAChByiB,EAAI2kB,EAAM,GAAMpnC,IAAQ,EAAK,IAC7ByiB,EAAI2kB,EAAM,GAAMpnC,IAAQ,GAAK,IAC7ByiB,EAAI2kB,EAAM,GAAMpnC,IAAQ,EAC5B,CAEA,SAASurE,EAAYvrE,EAAKyiB,EAAK2kB,GAC3B3kB,EAAI2kB,GAAYpnC,IAAQ,GACxByiB,EAAI2kB,EAAM,GAAMpnC,IAAQ,GAAK,IAC7ByiB,EAAI2kB,EAAM,GAAMpnC,IAAQ,EAAK,IAC7ByiB,EAAI2kB,EAAM,GAAmB,IAAbpnC,CACpB,CAEA,SAASwrE,EAAW/oD,EAAK2kB,GACrB,OAAQ3kB,EAAI2kB,GACJ3kB,EAAI2kB,EAAM,IAAM,EAChB3kB,EAAI2kB,EAAM,IAAM,GAChB3kB,EAAI2kB,EAAM,IAAM,MAAQ,CACpC,CAEA,SAASqkC,EAAWhpD,EAAK2kB,GACrB,OAAQ3kB,EAAI2kB,IAAY,GAChB3kB,EAAI2kB,EAAM,IAAM,GAChB3kB,EAAI2kB,EAAM,IAAM,EAChB3kB,EAAI2kB,EAAM,MAAQ,CAC9B,CA5UA/tE,EAAOD,QAAUD,EAAQA,E,qCCOzB,SAASszG,QAAQC,YACb,IACI,IAAIC,IAAMC,KAAK,QAAQ11F,QAAQ,IAAI,MAAzB01F,CAAgCF,YAC1C,GAAIC,MAAQA,IAAInyG,QAAUgI,OAAOoV,KAAK+0F,KAAKnyG,QACvC,OAAOmyG,GACf,CAAE,MAAOxoG,GAAI,CACb,OAAO,IACX,CAfA9K,OAAOD,QAAUqzG,O,gCCAjBpzG,EAAOD,QA6BP,SAAc0yE,EAAOz5D,EAAOlV,GACxB,IAAI0vG,EAAS1vG,GAAQ,KACjB2vG,EAASD,IAAS,EAClBE,EAAS,KACT1qE,EAASwqE,EACb,OAAO,SAAoB1vG,GACvB,GAAIA,EAAO,GAAKA,EAAO2vG,EACnB,OAAOhhC,EAAM3uE,GACbklC,EAASllC,EAAO0vG,IAChBE,EAAOjhC,EAAM+gC,GACbxqE,EAAS,GAEb,IAAIogB,EAAMpwC,EAAMpP,KAAK8pG,EAAM1qE,EAAQA,GAAUllC,GAG7C,OAFa,EAATklC,IACAA,EAAwB,GAAL,EAATA,IACPogB,CACX,CACJ,C,kCCxCA,IAAIuqD,EAAO5zG,EAOX4zG,EAAKxyG,OAAS,SAAqB0uG,GAG/B,IAFA,IAAIn7D,EAAM,EACN33B,EAAI,EACC/b,EAAI,EAAGA,EAAI6uG,EAAO1uG,SAAUH,GACjC+b,EAAI8yF,EAAOhd,WAAW7xF,IACd,IACJ0zC,GAAO,EACF33B,EAAI,KACT23B,GAAO,EACe,QAAZ,MAAJ33B,IAAkE,QAAZ,MAA3B8yF,EAAOhd,WAAW7xF,EAAI,OACrDA,EACF0zC,GAAO,GAEPA,GAAO,EAEf,OAAOA,CACX,EASAi/D,EAAKC,KAAO,SAAmBvvG,EAAQs9B,EAAO2E,GAE1C,GADUA,EAAM3E,EACN,EACN,MAAO,GAKX,IAJA,IAGIvxB,EAHA4/F,EAAQ,KACRC,EAAQ,GACRjvG,EAAI,EAED2gC,EAAQ2E,IACXl2B,EAAI/L,EAAOs9B,MACH,IACJsuE,EAAMjvG,KAAOoP,EACRA,EAAI,KAAOA,EAAI,IACpB6/F,EAAMjvG,MAAY,GAAJoP,IAAW,EAAsB,GAAlB/L,EAAOs9B,KAC/BvxB,EAAI,KAAOA,EAAI,KACpBA,IAAU,EAAJA,IAAU,IAAwB,GAAlB/L,EAAOs9B,OAAkB,IAAwB,GAAlBt9B,EAAOs9B,OAAkB,EAAsB,GAAlBt9B,EAAOs9B,MAAiB,MAC1GsuE,EAAMjvG,KAAO,OAAUoP,GAAK,IAC5B6/F,EAAMjvG,KAAO,OAAc,KAAJoP,IAEvB6/F,EAAMjvG,MAAY,GAAJoP,IAAW,IAAwB,GAAlB/L,EAAOs9B,OAAkB,EAAsB,GAAlBt9B,EAAOs9B,KACnE3gC,EAAI,QACHgvG,IAAUA,EAAQ,KAAK5uG,KAAKqxF,OAAOC,aAAaiP,MAAMlP,OAAQwd,IAC/DjvG,EAAI,GAGZ,OAAIgvG,GACIhvG,GACAgvG,EAAM5uG,KAAKqxF,OAAOC,aAAaiP,MAAMlP,OAAQwd,EAAMj3F,MAAM,EAAGhY,KACzDgvG,EAAMhlG,KAAK,KAEfynF,OAAOC,aAAaiP,MAAMlP,OAAQwd,EAAMj3F,MAAM,EAAGhY,GAC5D,EASA2yG,EAAKE,MAAQ,SAAoBhE,EAAQxrG,EAAQ2kC,GAI7C,IAHA,IACI8qE,EACAC,EAFApyE,EAAQqH,EAGHhoC,EAAI,EAAGA,EAAI6uG,EAAO1uG,SAAUH,GACjC8yG,EAAKjE,EAAOhd,WAAW7xF,IACd,IACLqD,EAAO2kC,KAAY8qE,EACZA,EAAK,MACZzvG,EAAO2kC,KAAY8qE,GAAM,EAAU,IACnCzvG,EAAO2kC,KAAuB,GAAX8qE,EAAgB,KACV,QAAZ,MAALA,IAA0E,QAAZ,OAAjCC,EAAKlE,EAAOhd,WAAW7xF,EAAI,MAChE8yG,EAAK,QAAiB,KAALA,IAAgB,KAAY,KAALC,KACtC/yG,EACFqD,EAAO2kC,KAAY8qE,GAAM,GAAU,IACnCzvG,EAAO2kC,KAAY8qE,GAAM,GAAK,GAAK,IACnCzvG,EAAO2kC,KAAY8qE,GAAM,EAAK,GAAK,IACnCzvG,EAAO2kC,KAAuB,GAAX8qE,EAAgB,MAEnCzvG,EAAO2kC,KAAY8qE,GAAM,GAAU,IACnCzvG,EAAO2kC,KAAY8qE,GAAM,EAAK,GAAK,IACnCzvG,EAAO2kC,KAAuB,GAAX8qE,EAAgB,KAG3C,OAAO9qE,EAASrH,CACpB,C,kCCvGA5hC,EAAQi0G,YAAa,EACrB,IAAI1uC,EAAsB,WACtB,SAASA,EAAK8P,GACV,IAAKA,EACD,MAAM,IAAIx0E,UAAU,2CAExBW,KAAKM,MAAQyjE,EAAK2uC,MACd7+B,GAAQ9P,EAAK4uC,OAAO9+B,KACpB7zE,KAAKM,MAAQuzE,EAErB,CA2CA,OA1CA9P,EAAK4uC,OAAS,SAAU9+B,GACpB,IAAIvzE,EAAQuzE,EAAKj7B,WACjB,OAAOi7B,IAASA,aAAgB9P,GAAQA,EAAK6uC,UAAUhE,KAAKtuG,GAChE,EACAyjE,EAAKrd,OAAS,WACV,OAAO,IAAIqd,EAAK,CAACA,EAAK8uC,IAAI,GAAI9uC,EAAK8uC,IAAI,GAAI9uC,EAAK8uC,IAAI,GAAI9uC,EAAK8uC,IAAI,GAAI9uC,EAAK8uC,IAAI,IAAIppG,KAAK,KAC3F,EACAs6D,EAAK+uC,YAAc,WACf,OAAO,IAAI/uC,EAAK,YACpB,EACAA,EAAKjsD,MAAQ,SAAU+7D,GACnB,OAAO,IAAI9P,EAAK8P,EACpB,EACA9P,EAAKgvC,IAAM,WACP,MAAO,CAAChvC,EAAK8uC,IAAI,GAAI9uC,EAAK8uC,IAAI,GAAI9uC,EAAK8uC,IAAI,GAAI9uC,EAAK8uC,IAAI,GAAI9uC,EAAK8uC,IAAI,IAAIppG,KAAK,IAClF,EACAs6D,EAAK8uC,IAAM,SAAU3rE,GAEjB,IADA,IAAI08C,EAAM,GACDnkF,EAAI,EAAGA,EAAIynC,EAAOznC,IAEvBmkF,IAA+B,OAArB,EAAI94E,KAAKkoG,UAAuB,GAAGp6D,SAAS,IAAI2Q,UAAU,GAExE,OAAOq6B,CACX,EACA7f,EAAKm5B,UAAU+V,OAAS,SAAUC,GAG9B,OAAOnvC,EAAK4uC,OAAOO,IAAUlzG,KAAKM,QAAU4yG,EAAMt6D,UACtD,EACAmrB,EAAKm5B,UAAUiW,QAAU,WACrB,OAAOnzG,KAAKM,QAAUyjE,EAAK2uC,KAC/B,EACA3uC,EAAKm5B,UAAUtkD,SAAW,WACtB,OAAO54C,KAAKM,KAChB,EACAyjE,EAAKm5B,UAAUkW,OAAS,WACpB,MAAO,CACH9yG,MAAON,KAAKM,MAEpB,EACAyjE,EAAK6uC,UAAY,IAAIp2F,OAAO,iEAAkE,KAC9FunD,EAAK2uC,MAAQ,uCACN3uC,CACX,CArDyB,GAsDzBvlE,EAAQulE,KAAOA,C,mBCxDftlE,EAAOD,QAAU6rE,EAKjB,IAAIpqE,EAAO,KAEX,IACEA,EAAO,IAAIyrF,YAAY2nB,SAAS,IAAI3nB,YAAY4nB,OAAO,IAAI5yG,WAAW,CACpE,EAAG,GAAI,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,MACvnC,CAAC,GAAGlC,OACX,CAAE,MAAO+K,GAET,CAYA,SAAS8gE,EAAKE,EAAKC,EAAMJ,GAMrBpqE,KAAKuqE,IAAY,EAANA,EAMXvqE,KAAKwqE,KAAc,EAAPA,EAMZxqE,KAAKoqE,WAAaA,CACtB,CAmCA,SAASp8D,EAAO4B,GACZ,OAAsC,KAA9BA,GAAOA,EAAgB,WACnC,CAZAy6D,EAAK6yB,UAAUqW,WAEf3rG,OAAO4rG,eAAenpC,EAAK6yB,UAAW,aAAc,CAAE58F,OAAO,IAkB7D+pE,EAAKr8D,OAASA,EAOd,IAAIylG,EAAY,CAAC,EAObC,EAAa,CAAC,EAQlB,SAASC,EAAQrzG,EAAO8pE,GACpB,IAAIx6D,EAAKgkG,EAAWzjG,EACpB,OAAIi6D,GAEIj6D,EAAS,IADb7P,KAAW,IACgBA,EAAQ,OAC/BszG,EAAYF,EAAWpzG,IAEZszG,GAEfhkG,EAAMi3D,EAASvmE,GAAgB,EAARA,GAAa,GAAK,EAAI,GAAG,GAC5C6P,IACAujG,EAAWpzG,GAASsP,GACjBA,IAGHO,GAAU,MADd7P,GAAS,IACqBA,EAAQ,OAClCszG,EAAYH,EAAUnzG,IAEXszG,GAEfhkG,EAAMi3D,EAASvmE,EAAOA,EAAQ,GAAK,EAAI,GAAG,GACtC6P,IACAsjG,EAAUnzG,GAASsP,GAChBA,EAEf,CAiBA,SAASikG,EAAWvzG,EAAO8pE,GACvB,GAAI5gB,MAAMlpD,GACN,OAAO8pE,EAAW0pC,EAAQC,EAC9B,GAAI3pC,EAAU,CACV,GAAI9pE,EAAQ,EACR,OAAOwzG,EACX,GAAIxzG,GAAS0zG,EACT,OAAOC,CACf,KAAO,CACH,GAAI3zG,IAAU4zG,EACV,OAAOC,EACX,GAAI7zG,EAAQ,GAAK4zG,EACb,OAAOE,CACf,CACA,OAAI9zG,EAAQ,EACDuzG,GAAYvzG,EAAO8pE,GAAUrhD,MACjC89C,EAAUvmE,EAAQ+zG,EAAkB,EAAI/zG,EAAQ+zG,EAAkB,EAAGjqC,EAChF,CAkBA,SAASvD,EAASytC,EAASC,EAAUnqC,GACjC,OAAO,IAAIC,EAAKiqC,EAASC,EAAUnqC,EACvC,CA7CAC,EAAKspC,QAAUA,EAkCftpC,EAAKwpC,WAAaA,EAsBlBxpC,EAAKxD,SAAWA,EAShB,IAAI2tC,EAAU1pG,KAAKwe,IASnB,SAASmrF,EAAWjwC,EAAK4F,EAAUsqC,GAC/B,GAAmB,IAAflwC,EAAI5kE,OACJ,MAAMJ,MAAM,gBAChB,GAAY,QAARglE,GAAyB,aAARA,GAA8B,cAARA,GAA+B,cAARA,EAC9D,OAAOuvC,EASX,GARwB,iBAAb3pC,GAEPsqC,EAAQtqC,EACRA,GAAW,GAEXA,IAAcA,GAElBsqC,EAAQA,GAAS,IACL,GAAK,GAAKA,EAClB,MAAM/xG,WAAW,SAErB,IAAI4jC,EACJ,IAAKA,EAAIi+B,EAAI9kE,QAAQ,MAAQ,EACzB,MAAMF,MAAM,mBACX,GAAU,IAAN+mC,EACL,OAAOkuE,EAAWjwC,EAAIjb,UAAU,GAAI6gB,EAAUsqC,GAAO3rF,MAQzD,IAHA,IAAI4rF,EAAed,EAAWW,EAAQE,EAAO,IAEzCziG,EAAS8hG,EACJt0G,EAAI,EAAGA,EAAI+kE,EAAI5kE,OAAQH,GAAK,EAAG,CACpC,IAAI8C,EAAOuI,KAAKC,IAAI,EAAGy5D,EAAI5kE,OAASH,GAChCa,EAAQgpD,SAASkb,EAAIjb,UAAU9pD,EAAGA,EAAI8C,GAAOmyG,GACjD,GAAInyG,EAAO,EAAG,CACV,IAAIqyG,EAAQf,EAAWW,EAAQE,EAAOnyG,IACtC0P,EAASA,EAAOgO,IAAI20F,GAAOh6F,IAAIi5F,EAAWvzG,GAC9C,MAEI2R,GADAA,EAASA,EAAOgO,IAAI00F,IACJ/5F,IAAIi5F,EAAWvzG,GAEvC,CAEA,OADA2R,EAAOm4D,SAAWA,EACXn4D,CACX,CAmBA,SAASq4D,EAAUllC,EAAKglC,GACpB,MAAmB,iBAARhlC,EACAyuE,EAAWzuE,EAAKglC,GACR,iBAARhlC,EACAqvE,EAAWrvE,EAAKglC,GAEpBvD,EAASzhC,EAAImlC,IAAKnlC,EAAIolC,KAA0B,kBAAbJ,EAAyBA,EAAWhlC,EAAIglC,SACtF,CAhBAC,EAAKoqC,WAAaA,EAyBlBpqC,EAAKC,UAAYA,EAUjB,IAcI+pC,EAAiBQ,WAOjBb,EAAiBK,EAAiBA,EAOlCH,EAAiBF,EAAiB,EAOlCc,EAAanB,EA5BI,GAAK,IAkCtBI,EAAOJ,EAAQ,GAMnBtpC,EAAK0pC,KAAOA,EAMZ,IAAID,EAAQH,EAAQ,GAAG,GAMvBtpC,EAAKypC,MAAQA,EAMb,IAAIiB,EAAMpB,EAAQ,GAMlBtpC,EAAK0qC,IAAMA,EAMX,IAAIC,EAAOrB,EAAQ,GAAG,GAMtBtpC,EAAK2qC,KAAOA,EAMZ,IAAIC,EAAUtB,GAAS,GAMvBtpC,EAAK4qC,QAAUA,EAMf,IAAIb,EAAYvtC,GAAS,EAAc,YAAc,GAMrDwD,EAAK+pC,UAAYA,EAMjB,IAAIH,EAAqBptC,GAAS,GAAc,GAAc,GAM9DwD,EAAK4pC,mBAAqBA,EAM1B,IAAIE,EAAYttC,EAAS,GAAG,YAAc,GAM1CwD,EAAK8pC,UAAYA,EAMjB,IAAIe,EAAgB7qC,EAAK6yB,UAMzBgY,EAAcC,MAAQ,WAClB,OAAOn1G,KAAKoqE,SAAWpqE,KAAKuqE,MAAQ,EAAIvqE,KAAKuqE,GACjD,EAMA2qC,EAAc9uC,SAAW,WACrB,OAAIpmE,KAAKoqE,UACIpqE,KAAKwqE,OAAS,GAAK6pC,GAAmBr0G,KAAKuqE,MAAQ,GACzDvqE,KAAKwqE,KAAO6pC,GAAkBr0G,KAAKuqE,MAAQ,EACtD,EASA2qC,EAAct8D,SAAW,SAAkB87D,GAEvC,IADAA,EAAQA,GAAS,IACL,GAAK,GAAKA,EAClB,MAAM/xG,WAAW,SACrB,GAAI3C,KAAKo1G,SACL,MAAO,IACX,GAAIp1G,KAAKq1G,aAAc,CACnB,GAAIr1G,KAAKs1G,GAAGnB,GAAY,CAGpB,IAAIoB,EAAY1B,EAAWa,GACvBx0F,EAAMlgB,KAAKkgB,IAAIq1F,GACfC,EAAOt1F,EAAID,IAAIs1F,GAAWv1F,IAAIhgB,MAClC,OAAOkgB,EAAI04B,SAAS87D,GAASc,EAAKL,QAAQv8D,SAAS87D,EACvD,CACI,MAAO,IAAM10G,KAAK+oB,MAAM6vB,SAAS87D,EACzC,CAOA,IAHA,IAAIC,EAAed,EAAWW,EAAQE,EAAO,GAAI10G,KAAKoqE,UAClDqrC,EAAMz1G,KACNiS,EAAS,KACA,CACT,IAAIyjG,EAASD,EAAIv1F,IAAIy0F,GAEjBgB,GADSF,EAAIz1F,IAAI01F,EAAOz1F,IAAI00F,IAAeQ,UAAY,GACvCv8D,SAAS87D,GAE7B,IADAe,EAAMC,GACEN,SACJ,OAAOO,EAAS1jG,EAEhB,KAAO0jG,EAAO/1G,OAAS,GACnB+1G,EAAS,IAAMA,EACnB1jG,EAAS,GAAK0jG,EAAS1jG,CAE/B,CACJ,EAMAijG,EAAcU,YAAc,WACxB,OAAO51G,KAAKwqE,IAChB,EAMA0qC,EAAcW,oBAAsB,WAChC,OAAO71G,KAAKwqE,OAAS,CACzB,EAMA0qC,EAAcY,WAAa,WACvB,OAAO91G,KAAKuqE,GAChB,EAMA2qC,EAAca,mBAAqB,WAC/B,OAAO/1G,KAAKuqE,MAAQ,CACxB,EAMA2qC,EAAcc,cAAgB,WAC1B,GAAIh2G,KAAKq1G,aACL,OAAOr1G,KAAKs1G,GAAGnB,GAAa,GAAKn0G,KAAK+oB,MAAMitF,gBAEhD,IADA,IAAI5wE,EAAmB,GAAbplC,KAAKwqE,KAAYxqE,KAAKwqE,KAAOxqE,KAAKuqE,IACnC0rC,EAAM,GAAIA,EAAM,GACK,IAArB7wE,EAAO,GAAK6wE,GADOA,KAG5B,OAAoB,GAAbj2G,KAAKwqE,KAAYyrC,EAAM,GAAKA,EAAM,CAC7C,EAMAf,EAAcE,OAAS,WACnB,OAAqB,IAAdp1G,KAAKwqE,MAA2B,IAAbxqE,KAAKuqE,GACnC,EAMA2qC,EAAcgB,IAAMhB,EAAcE,OAMlCF,EAAcG,WAAa,WACvB,OAAQr1G,KAAKoqE,UAAYpqE,KAAKwqE,KAAO,CACzC,EAMA0qC,EAAciB,WAAa,WACvB,OAAOn2G,KAAKoqE,UAAYpqE,KAAKwqE,MAAQ,CACzC,EAMA0qC,EAAckB,MAAQ,WAClB,OAA0B,IAAP,EAAXp2G,KAAKuqE,IACjB,EAMA2qC,EAAcmB,OAAS,WACnB,OAA0B,IAAP,EAAXr2G,KAAKuqE,IACjB,EAOA2qC,EAAcjC,OAAS,SAAgBC,GAGnC,OAFKllG,EAAOklG,KACRA,EAAQ5oC,EAAU4oC,KAClBlzG,KAAKoqE,WAAa8oC,EAAM9oC,UAAapqE,KAAKwqE,OAAS,IAAQ,GAAM0oC,EAAM1oC,OAAS,IAAQ,IAErFxqE,KAAKwqE,OAAS0oC,EAAM1oC,MAAQxqE,KAAKuqE,MAAQ2oC,EAAM3oC,GAC1D,EAQA2qC,EAAcI,GAAKJ,EAAcjC,OAOjCiC,EAAcoB,UAAY,SAAmBpD,GACzC,OAAQlzG,KAAKs1G,GAAmBpC,EACpC,EAQAgC,EAAcqB,IAAMrB,EAAcoB,UAQlCpB,EAAcsB,GAAKtB,EAAcoB,UAOjCpB,EAAc/uC,SAAW,SAAkB+sC,GACvC,OAAOlzG,KAAKy2G,KAAqBvD,GAAS,CAC9C,EAQAgC,EAAcliB,GAAKkiB,EAAc/uC,SAOjC+uC,EAAcwB,gBAAkB,SAAyBxD,GACrD,OAAOlzG,KAAKy2G,KAAqBvD,IAAU,CAC/C,EAQAgC,EAAcyB,IAAMzB,EAAcwB,gBAQlCxB,EAAc7F,GAAK6F,EAAcwB,gBAOjCxB,EAAc0B,YAAc,SAAqB1D,GAC7C,OAAOlzG,KAAKy2G,KAAqBvD,GAAS,CAC9C,EAQAgC,EAAcre,GAAKqe,EAAc0B,YAOjC1B,EAAchvC,mBAAqB,SAA4BgtC,GAC3D,OAAOlzG,KAAKy2G,KAAqBvD,IAAU,CAC/C,EAQAgC,EAAc2B,IAAM3B,EAAchvC,mBAQlCgvC,EAAc4B,GAAK5B,EAAchvC,mBAQjCgvC,EAAc6B,QAAU,SAAiB7D,GAGrC,GAFKllG,EAAOklG,KACRA,EAAQ5oC,EAAU4oC,IAClBlzG,KAAKs1G,GAAGpC,GACR,OAAO,EACX,IAAI8D,EAAUh3G,KAAKq1G,aACf4B,EAAW/D,EAAMmC,aACrB,OAAI2B,IAAYC,GACJ,GACPD,GAAWC,EACL,EAENj3G,KAAKoqE,SAGF8oC,EAAM1oC,OAAS,EAAMxqE,KAAKwqE,OAAS,GAAO0oC,EAAM1oC,OAASxqE,KAAKwqE,MAAS0oC,EAAM3oC,MAAQ,EAAMvqE,KAAKuqE,MAAQ,GAAO,EAAI,EAFhHvqE,KAAKggB,IAAIkzF,GAAOmC,cAAgB,EAAI,CAGnD,EASAH,EAAcuB,KAAOvB,EAAc6B,QAMnC7B,EAAcgC,OAAS,WACnB,OAAKl3G,KAAKoqE,UAAYpqE,KAAKs1G,GAAGnB,GACnBA,EACJn0G,KAAKgpB,MAAMpO,IAAIm6F,EAC1B,EAOAG,EAAcnsF,IAAMmsF,EAAcgC,OAOlChC,EAAct6F,IAAM,SAAau8F,GACxBnpG,EAAOmpG,KACRA,EAAS7sC,EAAU6sC,IAIvB,IAAIC,EAAMp3G,KAAKwqE,OAAS,GACpB6sC,EAAkB,MAAZr3G,KAAKwqE,KACX8sC,EAAMt3G,KAAKuqE,MAAQ,GACnBgtC,EAAiB,MAAXv3G,KAAKuqE,IAEXitC,EAAML,EAAO3sC,OAAS,GACtBitC,EAAoB,MAAdN,EAAO3sC,KACbktC,EAAMP,EAAO5sC,MAAQ,GAGrBotC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAYrC,OAVAD,IADAC,GAAOP,GAHgB,MAAbJ,EAAO5sC,QAIF,GAGfqtC,IADAC,GAAOP,EAAMI,KACE,GAGfC,IADAC,GAAOP,EAAMI,KACE,GAEfE,GAAOP,EAAMI,EAEN3wC,GANPgxC,GAAO,QAMiB,IATxBC,GAAO,QAQPH,GAAO,QACoC,IAH3CC,GAAO,OAG+C53G,KAAKoqE,SAC/D,EAOA8qC,EAAc6C,SAAW,SAAkBC,GAGvC,OAFKhqG,EAAOgqG,KACRA,EAAa1tC,EAAU0tC,IACpBh4G,KAAK4a,IAAIo9F,EAAWjvF,MAC/B,EAQAmsF,EAAcl1F,IAAMk1F,EAAc6C,SAOlC7C,EAAc+C,SAAW,SAAkBC,GACvC,GAAIl4G,KAAKo1G,SACL,OAAOrB,EAKX,GAJK/lG,EAAOkqG,KACRA,EAAa5tC,EAAU4tC,IAGvBj4G,EAKA,OAAO4mE,EAJG5mE,EAAKggB,IAAIjgB,KAAKuqE,IACLvqE,KAAKwqE,KACL0tC,EAAW3tC,IACX2tC,EAAW1tC,MACTvqE,EAAKk4G,WAAYn4G,KAAKoqE,UAG/C,GAAI8tC,EAAW9C,SACX,OAAOrB,EACX,GAAI/zG,KAAKs1G,GAAGnB,GACR,OAAO+D,EAAW9B,QAAUjC,EAAYJ,EAC5C,GAAImE,EAAW5C,GAAGnB,GACd,OAAOn0G,KAAKo2G,QAAUjC,EAAYJ,EAEtC,GAAI/zG,KAAKq1G,aACL,OAAI6C,EAAW7C,aACJr1G,KAAK+oB,MAAM9I,IAAIi4F,EAAWnvF,OAE1B/oB,KAAK+oB,MAAM9I,IAAIi4F,GAAYnvF,MACnC,GAAImvF,EAAW7C,aAClB,OAAOr1G,KAAKigB,IAAIi4F,EAAWnvF,OAAOA,MAGtC,GAAI/oB,KAAKgzF,GAAG8hB,IAAeoD,EAAWllB,GAAG8hB,GACrC,OAAOjB,EAAW7zG,KAAKomE,WAAa8xC,EAAW9xC,WAAYpmE,KAAKoqE,UAKpE,IAAIgtC,EAAMp3G,KAAKwqE,OAAS,GACpB6sC,EAAkB,MAAZr3G,KAAKwqE,KACX8sC,EAAMt3G,KAAKuqE,MAAQ,GACnBgtC,EAAiB,MAAXv3G,KAAKuqE,IAEXitC,EAAMU,EAAW1tC,OAAS,GAC1BitC,EAAwB,MAAlBS,EAAW1tC,KACjBktC,EAAMQ,EAAW3tC,MAAQ,GACzB6tC,EAAuB,MAAjBF,EAAW3tC,IAEjBotC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAqBrC,OAnBAD,IADAC,GAAOP,EAAMa,KACE,GAGfR,IADAC,GAAOP,EAAMc,KACE,GACfP,GAAO,MAEPD,IADAC,GAAON,EAAMG,KACE,GAGfC,IADAC,GAAOP,EAAMe,KACE,GACfR,GAAO,MAEPD,IADAC,GAAON,EAAMI,KACE,GACfE,GAAO,MAEPD,IADAC,GAAOL,EAAME,KACE,GAEfE,GAAOP,EAAMgB,EAAMf,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,EAE1C3wC,GAZPgxC,GAAO,QAYiB,IAlBxBC,GAAO,QAiBPH,GAAO,QACoC,IAH3CC,GAAO,OAG+C53G,KAAKoqE,SAC/D,EAQA8qC,EAAcj1F,IAAMi1F,EAAc+C,SAQlC/C,EAAcmD,OAAS,SAAgBC,GAGnC,GAFKtqG,EAAOsqG,KACRA,EAAUhuC,EAAUguC,IACpBA,EAAQlD,SACR,MAAM51G,MAAM,oBAaZ,IAWA+4G,EAAQ9C,EAAKz4E,EArBjB,GAAI/8B,EAIA,OAAKD,KAAKoqE,WACS,aAAfpqE,KAAKwqE,OACY,IAAjB8tC,EAAQ/tC,MAAgC,IAAlB+tC,EAAQ9tC,KAU3B3D,GANI7mE,KAAKoqE,SAAWnqE,EAAKu4G,MAAQv4G,EAAKw4G,OACzCz4G,KAAKuqE,IACLvqE,KAAKwqE,KACL8tC,EAAQ/tC,IACR+tC,EAAQ9tC,MAESvqE,EAAKk4G,WAAYn4G,KAAKoqE,UARhCpqE,KAWf,GAAIA,KAAKo1G,SACL,OAAOp1G,KAAKoqE,SAAW0pC,EAAQC,EAEnC,GAAK/zG,KAAKoqE,SA6BH,CAKH,GAFKkuC,EAAQluC,WACTkuC,EAAUA,EAAQI,cAClBJ,EAAQzhB,GAAG72F,MACX,OAAO8zG,EACX,GAAIwE,EAAQzhB,GAAG72F,KAAK24G,KAAK,IACrB,OAAO3D,EACXh4E,EAAM82E,CACV,KAvCoB,CAGhB,GAAI9zG,KAAKs1G,GAAGnB,GACR,OAAImE,EAAQhD,GAAGP,IAAQuD,EAAQhD,GAAGL,GACvBd,EACFmE,EAAQhD,GAAGnB,GACTY,GAIPwD,EADev4G,KAAK44G,IAAI,GACN14F,IAAIo4F,GAASO,IAAI,IACxBvD,GAAGvB,GACHuE,EAAQjD,aAAeN,EAAME,GAEpCQ,EAAMz1G,KAAKggB,IAAIs4F,EAAQr4F,IAAIs4F,IAC3Bv7E,EAAMu7E,EAAO39F,IAAI66F,EAAIv1F,IAAIo4F,KAI9B,GAAIA,EAAQhD,GAAGnB,GAClB,OAAOn0G,KAAKoqE,SAAW0pC,EAAQC,EACnC,GAAI/zG,KAAKq1G,aACL,OAAIiD,EAAQjD,aACDr1G,KAAK+oB,MAAM7I,IAAIo4F,EAAQvvF,OAC3B/oB,KAAK+oB,MAAM7I,IAAIo4F,GAASvvF,MAC5B,GAAIuvF,EAAQjD,aACf,OAAOr1G,KAAKkgB,IAAIo4F,EAAQvvF,OAAOA,MACnCiU,EAAM+2E,CACV,CAkBA,IADA0B,EAAMz1G,KACCy1G,EAAIoB,IAAIyB,IAAU,CAGrBC,EAASztG,KAAK47B,IAAI,EAAG57B,KAAKyc,MAAMkuF,EAAIrvC,WAAakyC,EAAQlyC,aAWzD,IAPA,IAAI0yC,EAAOhuG,KAAKE,KAAKF,KAAK4d,IAAI6vF,GAAUztG,KAAKqlG,KACzC4I,EAASD,GAAQ,GAAM,EAAItE,EAAQ,EAAGsE,EAAO,IAI7CE,EAAYnF,EAAW0E,GACvBU,EAAYD,EAAU/4F,IAAIq4F,GACvBW,EAAU5D,cAAgB4D,EAAUpiB,GAAG4e,IAG1CwD,GADAD,EAAYnF,EADZ0E,GAAUQ,EACqB/4G,KAAKoqE,WACdnqD,IAAIq4F,GAK1BU,EAAU5D,WACV4D,EAAYjE,GAEhB/3E,EAAMA,EAAIpiB,IAAIo+F,GACdvD,EAAMA,EAAIz1F,IAAIi5F,EAClB,CACA,OAAOj8E,CACX,EAQAk4E,EAAch1F,IAAMg1F,EAAcmD,OAOlCnD,EAAcgE,OAAS,SAAgBZ,GAKnC,OAJKtqG,EAAOsqG,KACRA,EAAUhuC,EAAUguC,IAGpBr4G,EAOO4mE,GANI7mE,KAAKoqE,SAAWnqE,EAAKk5G,MAAQl5G,EAAKm5G,OACzCp5G,KAAKuqE,IACLvqE,KAAKwqE,KACL8tC,EAAQ/tC,IACR+tC,EAAQ9tC,MAESvqE,EAAKk4G,WAAYn4G,KAAKoqE,UAGxCpqE,KAAKggB,IAAIhgB,KAAKkgB,IAAIo4F,GAASr4F,IAAIq4F,GAC1C,EAQApD,EAAcnD,IAAMmD,EAAcgE,OAQlChE,EAAcO,IAAMP,EAAcgE,OAMlChE,EAAclsF,IAAM,WAChB,OAAO69C,GAAU7mE,KAAKuqE,KAAMvqE,KAAKwqE,KAAMxqE,KAAKoqE,SAChD,EAOA8qC,EAActvF,IAAM,SAAastF,GAG7B,OAFKllG,EAAOklG,KACRA,EAAQ5oC,EAAU4oC,IACfrsC,EAAS7mE,KAAKuqE,IAAM2oC,EAAM3oC,IAAKvqE,KAAKwqE,KAAO0oC,EAAM1oC,KAAMxqE,KAAKoqE,SACvE,EAOA8qC,EAAcjsF,GAAK,SAAYiqF,GAG3B,OAFKllG,EAAOklG,KACRA,EAAQ5oC,EAAU4oC,IACfrsC,EAAS7mE,KAAKuqE,IAAM2oC,EAAM3oC,IAAKvqE,KAAKwqE,KAAO0oC,EAAM1oC,KAAMxqE,KAAKoqE,SACvE,EAOA8qC,EAActpF,IAAM,SAAasnF,GAG7B,OAFKllG,EAAOklG,KACRA,EAAQ5oC,EAAU4oC,IACfrsC,EAAS7mE,KAAKuqE,IAAM2oC,EAAM3oC,IAAKvqE,KAAKwqE,KAAO0oC,EAAM1oC,KAAMxqE,KAAKoqE,SACvE,EAOA8qC,EAAcmE,UAAY,SAAmBC,GAGzC,OAFItrG,EAAOsrG,KACPA,EAAUA,EAAQnE,SACE,IAAnBmE,GAAW,IACLt5G,KACFs5G,EAAU,GACRzyC,EAAS7mE,KAAKuqE,KAAO+uC,EAAUt5G,KAAKwqE,MAAQ8uC,EAAYt5G,KAAKuqE,MAAS,GAAK+uC,EAAWt5G,KAAKoqE,UAE3FvD,EAAS,EAAG7mE,KAAKuqE,KAAQ+uC,EAAU,GAAKt5G,KAAKoqE,SAC5D,EAQA8qC,EAAc2D,IAAM3D,EAAcmE,UAOlCnE,EAAcqE,WAAa,SAAoBD,GAG3C,OAFItrG,EAAOsrG,KACPA,EAAUA,EAAQnE,SACE,IAAnBmE,GAAW,IACLt5G,KACFs5G,EAAU,GACRzyC,EAAU7mE,KAAKuqE,MAAQ+uC,EAAYt5G,KAAKwqE,MAAS,GAAK8uC,EAAWt5G,KAAKwqE,MAAQ8uC,EAASt5G,KAAKoqE,UAE5FvD,EAAS7mE,KAAKwqE,MAAS8uC,EAAU,GAAKt5G,KAAKwqE,MAAQ,EAAI,GAAK,EAAGxqE,KAAKoqE,SACnF,EAQA8qC,EAAc0D,IAAM1D,EAAcqE,WAOlCrE,EAAcsE,mBAAqB,SAA4BF,GAI3D,GAHItrG,EAAOsrG,KACPA,EAAUA,EAAQnE,SAEN,IADhBmE,GAAW,IAEP,OAAOt5G,KAEP,IAAIwqE,EAAOxqE,KAAKwqE,KAChB,OAAI8uC,EAAU,GAEHzyC,EADG7mE,KAAKuqE,MACU+uC,EAAY9uC,GAAS,GAAK8uC,EAAW9uC,IAAS8uC,EAASt5G,KAAKoqE,UAE9EvD,EADY,KAAZyyC,EACS9uC,EAEAA,IAAU8uC,EAAU,GAFd,EAAGt5G,KAAKoqE,SAI1C,EAQA8qC,EAAcyD,KAAOzD,EAAcsE,mBAQnCtE,EAAcuE,MAAQvE,EAAcsE,mBAMpCtE,EAAcwE,SAAW,WACrB,OAAK15G,KAAKoqE,SAEHvD,EAAS7mE,KAAKuqE,IAAKvqE,KAAKwqE,MAAM,GAD1BxqE,IAEf,EAMAk1G,EAAcwD,WAAa,WACvB,OAAI14G,KAAKoqE,SACEpqE,KACJ6mE,EAAS7mE,KAAKuqE,IAAKvqE,KAAKwqE,MAAM,EACzC,EAOA0qC,EAAcyE,QAAU,SAAiBtK,GACrC,OAAOA,EAAKrvG,KAAK45G,YAAc55G,KAAK65G,WACxC,EAMA3E,EAAc0E,UAAY,WACtB,IAAIhI,EAAK5xG,KAAKwqE,KACVmnC,EAAK3xG,KAAKuqE,IACd,MAAO,CACS,IAAZonC,EACAA,IAAQ,EAAI,IACZA,IAAO,GAAK,IACZA,IAAO,GACK,IAAZC,EACAA,IAAQ,EAAI,IACZA,IAAO,GAAK,IACZA,IAAO,GAEf,EAMAsD,EAAc2E,UAAY,WACtB,IAAIjI,EAAK5xG,KAAKwqE,KACVmnC,EAAK3xG,KAAKuqE,IACd,MAAO,CACHqnC,IAAO,GACPA,IAAO,GAAK,IACZA,IAAQ,EAAI,IACA,IAAZA,EACAD,IAAO,GACPA,IAAO,GAAK,IACZA,IAAQ,EAAI,IACA,IAAZA,EAER,EASAtnC,EAAKyvC,UAAY,SAAmBnoD,EAAOyY,EAAUilC,GACjD,OAAOA,EAAKhlC,EAAK0vC,YAAYpoD,EAAOyY,GAAYC,EAAK2vC,YAAYroD,EAAOyY,EAC5E,EAQAC,EAAK0vC,YAAc,SAAqBpoD,EAAOyY,GAC3C,OAAO,IAAIC,EACP1Y,EAAM,GACNA,EAAM,IAAO,EACbA,EAAM,IAAM,GACZA,EAAM,IAAM,GACZA,EAAM,GACNA,EAAM,IAAO,EACbA,EAAM,IAAM,GACZA,EAAM,IAAM,GACZyY,EAER,EAQAC,EAAK2vC,YAAc,SAAqBroD,EAAOyY,GAC3C,OAAO,IAAIC,EACP1Y,EAAM,IAAM,GACZA,EAAM,IAAM,GACZA,EAAM,IAAO,EACbA,EAAM,GACNA,EAAM,IAAM,GACZA,EAAM,IAAM,GACZA,EAAM,IAAO,EACbA,EAAM,GACNyY,EAER,C,oCCvyCA,IA6BY6vC,EAAiB3iD,EAdrBprD,EAfJguG,EAAY,EAAQ,MAGpBC,EAAUD,EAAUE,OAAQC,EAAUH,EAAUI,OAAQC,EAAQL,EAAUM,KAG1EC,EAAQP,EAAUQ,MAAe,UAAMR,EAAUQ,MAAe,QAAI,CAAC,GAEzED,EAAMvuG,OAOEA,EAAO,CAAC,GAaPyuG,SACGV,EAAa,CAAC,GAAG3iD,EAAS1vD,OAAO8+C,OAAOuzD,IACrCA,EAAW,GAAK,kBAAoB,EAC3C3iD,EAAO2iD,EAAW,GAAK,yBAA2B,EAClD3iD,EAAO2iD,EAAW,GAAK,yBAA2B,EAClD3iD,EAAO2iD,EAAW,GAAK,wBAA0B,EACjD3iD,EAAO2iD,EAAW,GAAK,wBAA0B,EACjD3iD,EAAO2iD,EAAW,GAAK,cAAgB,EAChC3iD,GAGXprD,EAAKC,eAAiB,WA8BlB,SAASA,EAAeyuG,GAMpB,GALA56G,KAAK+O,OAAS,GACd/O,KAAKgP,KAAO,GACZhP,KAAKiP,QAAU,GACfjP,KAAKkP,QAAU,GACflP,KAAKmP,OAAS,GACVyrG,EACA,IAAK,IAAI59F,EAAOpV,OAAOoV,KAAK49F,GAAan7G,EAAI,EAAGA,EAAIud,EAAKpd,SAAUH,EACpC,MAAvBm7G,EAAW59F,EAAKvd,MAChBO,KAAKgd,EAAKvd,IAAMm7G,EAAW59F,EAAKvd,IAChD,CAmqBA,OA3pBA0M,EAAe+wF,UAAUl+F,KAAO,GAQhCmN,EAAe+wF,UAAU2d,YAAc,GAQvC1uG,EAAe+wF,UAAU9rC,UAAY,GAQrCjlD,EAAe+wF,UAAU37F,KAAO,EAQhC4K,EAAe+wF,UAAUvuF,EAAI,EAQ7BxC,EAAe+wF,UAAUz9F,EAAI86G,EAAMlwC,KAAOkwC,EAAMlwC,KAAKxD,SAAS,EAAE,GAAE,GAAS,EAQ3E16D,EAAe+wF,UAAUtuF,EAAI2rG,EAAMO,UAAU,IAQ7C3uG,EAAe+wF,UAAUruF,EAAI,KAQ7B1C,EAAe+wF,UAAUpuF,EAAI,KAQ7B3C,EAAe+wF,UAAUnuF,OAASwrG,EAAMQ,WAQxC5uG,EAAe+wF,UAAUluF,KAAOurG,EAAMQ,WAQtC5uG,EAAe+wF,UAAUjuF,QAAUsrG,EAAMQ,WAQzC5uG,EAAe+wF,UAAUhuF,QAAUqrG,EAAMQ,WAQzC5uG,EAAe+wF,UAAU/tF,OAASorG,EAAMQ,WAUxC5uG,EAAeu6C,OAAS,SAAgBk0D,GACpC,OAAO,IAAIzuG,EAAeyuG,EAC9B,EAWAzuG,EAAe6O,OAAS,SAAgB6zD,EAASmsC,GAe7C,GAdKA,IACDA,EAASX,EAAQ3zD,UACD,MAAhBmoB,EAAQ7vE,MAAgB6vE,EAAQzmE,eAAe,SAC/C4yG,EAAOC,OAA8B,IAAI3M,OAAOz/B,EAAQ7vE,MAC3C,MAAb6vE,EAAQlgE,GAAakgE,EAAQzmE,eAAe,MAC5C4yG,EAAOC,OAA8B,IAAIC,MAAMrsC,EAAQlgE,GAC1C,MAAbkgE,EAAQpvE,GAAaovE,EAAQzmE,eAAe,MAC5C4yG,EAAOC,OAA8B,IAAIE,MAAMtsC,EAAQpvE,GAC1C,MAAbovE,EAAQjgE,GAAaigE,EAAQzmE,eAAe,MAC5C4yG,EAAOC,OAA8B,IAAItpD,MAAMkd,EAAQjgE,GAC1C,MAAbigE,EAAQhgE,GAAaggE,EAAQzmE,eAAe,MAC5CqyG,EAAMvuG,KAAK64D,YAAY/pD,OAAO6zD,EAAQhgE,EAAGmsG,EAAOC,OAA8B,IAAIG,QAAQC,SAC7E,MAAbxsC,EAAQ//D,GAAa+/D,EAAQzmE,eAAe,MAC5CqyG,EAAMvuG,KAAK40C,WAAW9lC,OAAO6zD,EAAQ//D,EAAGksG,EAAOC,OAA8B,IAAIG,QAAQC,SACvE,MAAlBxsC,EAAQ9/D,QAAkB8/D,EAAQ9/D,OAAOnP,OAAQ,CACjDo7G,EAAOC,OAA8B,IAAIG,OACzC,IAAK,IAAI37G,EAAI,EAAGA,EAAIovE,EAAQ9/D,OAAOnP,SAAUH,EACzCu7G,EAAOE,MAAMrsC,EAAQ9/D,OAAOtP,IAChCu7G,EAAOK,QACX,CACA,GAAoB,MAAhBxsC,EAAQ7/D,MAAgB6/D,EAAQ7/D,KAAKpP,OAAQ,CAE7C,IADAo7G,EAAOC,OAA8B,IAAIG,OAChC37G,EAAI,EAAGA,EAAIovE,EAAQ7/D,KAAKpP,SAAUH,EACvCu7G,EAAOG,MAAMtsC,EAAQ7/D,KAAKvP,IAC9Bu7G,EAAOK,QACX,CACA,GAAuB,MAAnBxsC,EAAQ5/D,SAAmB4/D,EAAQ5/D,QAAQrP,OAC3C,IAASH,EAAI,EAAGA,EAAIovE,EAAQ5/D,QAAQrP,SAAUH,EAC1Cu7G,EAAOC,OAA8B,IAAItpD,MAAMkd,EAAQ5/D,QAAQxP,IACvE,GAAuB,MAAnBovE,EAAQ3/D,SAAmB2/D,EAAQ3/D,QAAQtP,OAC3C,IAASH,EAAI,EAAGA,EAAIovE,EAAQ3/D,QAAQtP,SAAUH,EAC1Cg7G,EAAMvuG,KAAK64D,YAAY/pD,OAAO6zD,EAAQ3/D,QAAQzP,GAAIu7G,EAAOC,OAA+B,IAAIG,QAAQC,SAC5G,GAAsB,MAAlBxsC,EAAQ1/D,QAAkB0/D,EAAQ1/D,OAAOvP,OACzC,IAASH,EAAI,EAAGA,EAAIovE,EAAQ1/D,OAAOvP,SAAUH,EACzCg7G,EAAMvuG,KAAK40C,WAAW9lC,OAAO6zD,EAAQ1/D,OAAO1P,GAAIu7G,EAAOC,OAA+B,IAAIG,QAAQC,SAO1G,OANyB,MAArBxsC,EAAQzd,WAAqByd,EAAQzmE,eAAe,cACpD4yG,EAAOC,OAA+B,KAAK3M,OAAOz/B,EAAQzd,WAC1C,MAAhByd,EAAQttE,MAAgBstE,EAAQzmE,eAAe,SAC/C4yG,EAAOC,OAA+B,KAAKK,MAAMzsC,EAAQttE,MAClC,MAAvBstE,EAAQgsC,aAAuBhsC,EAAQzmE,eAAe,gBACtD4yG,EAAOC,OAA+B,KAAK3M,OAAOz/B,EAAQgsC,aACvDG,CACX,EAWA7uG,EAAeovG,gBAAkB,SAAyB1sC,EAASmsC,GAC/D,OAAOh7G,KAAKgb,OAAO6zD,EAASmsC,GAAQK,QACxC,EAaAlvG,EAAe8O,OAAS,SAAgBugG,EAAQ57G,GACtC47G,aAAkBrB,IACpBqB,EAASrB,EAAQzzD,OAAO80D,IAE5B,IADA,IAAIz2E,OAAiBxlC,IAAXK,EAAuB47G,EAAOroE,IAAMqoE,EAAOhvC,IAAM5sE,EAAQivE,EAAU,IAAI4rC,EAAMvuG,KAAKC,eACrFqvG,EAAOhvC,IAAMznC,GAAK,CACrB,IAAI2gD,EAAM81B,EAAOP,SACjB,OAAQv1B,IAAQ,GAChB,KAAK,EACD7W,EAAQ7vE,KAAOw8G,EAAOlN,SACtB,MACJ,KAAK,GACDz/B,EAAQgsC,YAAcW,EAAOlN,SAC7B,MACJ,KAAK,GACDz/B,EAAQzd,UAAYoqD,EAAOlN,SAC3B,MACJ,KAAK,GACDz/B,EAAQttE,KAAOi6G,EAAOF,QACtB,MACJ,KAAK,EACDzsC,EAAQlgE,EAAI6sG,EAAON,QACnB,MACJ,KAAK,EACDrsC,EAAQpvE,EAAI+7G,EAAOL,QACnB,MACJ,KAAK,EACDtsC,EAAQjgE,EAAI4sG,EAAO7pD,QACnB,MACJ,KAAK,EACDkd,EAAQhgE,EAAI4rG,EAAMvuG,KAAK64D,YAAY9pD,OAAOugG,EAAQA,EAAOP,UACzD,MACJ,KAAK,EACDpsC,EAAQ//D,EAAI2rG,EAAMvuG,KAAK40C,WAAW7lC,OAAOugG,EAAQA,EAAOP,UACxD,MACJ,KAAK,EAGD,GAFMpsC,EAAQ9/D,QAAU8/D,EAAQ9/D,OAAOnP,SACnCivE,EAAQ9/D,OAAS,IACH,IAAP,EAAN22E,GAED,IADA,IAAI+1B,EAAOD,EAAOP,SAAWO,EAAOhvC,IAC7BgvC,EAAOhvC,IAAMivC,GAChB5sC,EAAQ9/D,OAAOlP,KAAK27G,EAAON,cAE/BrsC,EAAQ9/D,OAAOlP,KAAK27G,EAAON,SAC/B,MACJ,KAAK,EAGD,GAFMrsC,EAAQ7/D,MAAQ6/D,EAAQ7/D,KAAKpP,SAC/BivE,EAAQ7/D,KAAO,IACD,IAAP,EAAN02E,GAED,IADI+1B,EAAOD,EAAOP,SAAWO,EAAOhvC,IAC7BgvC,EAAOhvC,IAAMivC,GAChB5sC,EAAQ7/D,KAAKnP,KAAK27G,EAAOL,cAE7BtsC,EAAQ7/D,KAAKnP,KAAK27G,EAAOL,SAC7B,MACJ,KAAK,EACKtsC,EAAQ5/D,SAAW4/D,EAAQ5/D,QAAQrP,SACrCivE,EAAQ5/D,QAAU,IACtB4/D,EAAQ5/D,QAAQpP,KAAK27G,EAAO7pD,SAC5B,MACJ,KAAK,GACKkd,EAAQ3/D,SAAW2/D,EAAQ3/D,QAAQtP,SACrCivE,EAAQ3/D,QAAU,IACtB2/D,EAAQ3/D,QAAQrP,KAAK46G,EAAMvuG,KAAK64D,YAAY9pD,OAAOugG,EAAQA,EAAOP,WAClE,MACJ,KAAK,GACKpsC,EAAQ1/D,QAAU0/D,EAAQ1/D,OAAOvP,SACnCivE,EAAQ1/D,OAAS,IACrB0/D,EAAQ1/D,OAAOtP,KAAK46G,EAAMvuG,KAAK40C,WAAW7lC,OAAOugG,EAAQA,EAAOP,WAChE,MACJ,QACIO,EAAOE,SAAe,EAANh2B,GAGxB,CACA,OAAO7W,CACX,EAYA1iE,EAAewvG,gBAAkB,SAAyBH,GAGtD,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBx7G,KAAKib,OAAOugG,EAAQA,EAAOP,SACtC,EAUA9uG,EAAeyvG,OAAS,SAAgB/sC,GACpC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAoB,MAAhBA,EAAQ7vE,MAAgB6vE,EAAQzmE,eAAe,UAC1CmyG,EAAMz1G,SAAS+pE,EAAQ7vE,MACxB,MAAO,wBACf,GAA2B,MAAvB6vE,EAAQgsC,aAAuBhsC,EAAQzmE,eAAe,iBACjDmyG,EAAMz1G,SAAS+pE,EAAQgsC,aACxB,MAAO,+BACf,GAAyB,MAArBhsC,EAAQzd,WAAqByd,EAAQzmE,eAAe,eAC/CmyG,EAAMz1G,SAAS+pE,EAAQzd,WACxB,MAAO,6BACf,GAAoB,MAAhByd,EAAQttE,MAAgBstE,EAAQzmE,eAAe,QAC/C,OAAQymE,EAAQttE,MAChB,QACI,MAAO,4BACX,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,IAGT,GAAiB,MAAbstE,EAAQlgE,GAAakgE,EAAQzmE,eAAe,MACnB,iBAAdymE,EAAQlgE,EACf,MAAO,qBACf,GAAiB,MAAbkgE,EAAQpvE,GAAaovE,EAAQzmE,eAAe,QACvCmyG,EAAM9vG,UAAUokE,EAAQpvE,IAAQovE,EAAQpvE,GAAK86G,EAAM9vG,UAAUokE,EAAQpvE,EAAE8qE,MAAQgwC,EAAM9vG,UAAUokE,EAAQpvE,EAAE+qE,OAC1G,MAAO,2BACf,GAAiB,MAAbqE,EAAQjgE,GAAaigE,EAAQzmE,eAAe,QACtCymE,EAAQjgE,GAAiC,iBAArBigE,EAAQjgE,EAAEhP,QAAuB26G,EAAMz1G,SAAS+pE,EAAQjgE,IAC9E,MAAO,qBACf,GAAiB,MAAbigE,EAAQhgE,GAAaggE,EAAQzmE,eAAe,OACxC8jC,EAAQuuE,EAAMvuG,KAAK64D,YAAY62C,OAAO/sC,EAAQhgE,IAE9C,MAAO,KAAOq9B,EAEtB,GAAiB,MAAb2iC,EAAQ//D,GAAa+/D,EAAQzmE,eAAe,OACxC8jC,EAAQuuE,EAAMvuG,KAAK40C,WAAW86D,OAAO/sC,EAAQ//D,IAE7C,MAAO,KAAOo9B,EAEtB,GAAsB,MAAlB2iC,EAAQ9/D,QAAkB8/D,EAAQzmE,eAAe,UAAW,CAC5D,IAAKnG,MAAMC,QAAQ2sE,EAAQ9/D,QACvB,MAAO,yBACX,IAAK,IAAItP,EAAI,EAAGA,EAAIovE,EAAQ9/D,OAAOnP,SAAUH,EACzC,GAAiC,iBAAtBovE,EAAQ9/D,OAAOtP,GACtB,MAAO,2BACnB,CACA,GAAoB,MAAhBovE,EAAQ7/D,MAAgB6/D,EAAQzmE,eAAe,QAAS,CACxD,IAAKnG,MAAMC,QAAQ2sE,EAAQ7/D,MACvB,MAAO,uBACX,IAASvP,EAAI,EAAGA,EAAIovE,EAAQ7/D,KAAKpP,SAAUH,EACvC,KAAK86G,EAAM9vG,UAAUokE,EAAQ7/D,KAAKvP,KAASovE,EAAQ7/D,KAAKvP,IAAM86G,EAAM9vG,UAAUokE,EAAQ7/D,KAAKvP,GAAG8qE,MAAQgwC,EAAM9vG,UAAUokE,EAAQ7/D,KAAKvP,GAAG+qE,OAClI,MAAO,+BACnB,CACA,GAAuB,MAAnBqE,EAAQ5/D,SAAmB4/D,EAAQzmE,eAAe,WAAY,CAC9D,IAAKnG,MAAMC,QAAQ2sE,EAAQ5/D,SACvB,MAAO,0BACX,IAASxP,EAAI,EAAGA,EAAIovE,EAAQ5/D,QAAQrP,SAAUH,EAC1C,KAAMovE,EAAQ5/D,QAAQxP,IAA2C,iBAA9BovE,EAAQ5/D,QAAQxP,GAAGG,QAAuB26G,EAAMz1G,SAAS+pE,EAAQ5/D,QAAQxP,KACxG,MAAO,4BACnB,CACA,GAAuB,MAAnBovE,EAAQ3/D,SAAmB2/D,EAAQzmE,eAAe,WAAY,CAC9D,IAAKnG,MAAMC,QAAQ2sE,EAAQ3/D,SACvB,MAAO,0BACX,IAASzP,EAAI,EAAGA,EAAIovE,EAAQ3/D,QAAQtP,SAAUH,EAE1C,GADIysC,EAAQuuE,EAAMvuG,KAAK64D,YAAY62C,OAAO/sC,EAAQ3/D,QAAQzP,IAEtD,MAAO,WAAaysC,CAEhC,CACA,GAAsB,MAAlB2iC,EAAQ1/D,QAAkB0/D,EAAQzmE,eAAe,UAAW,CAC5D,IAAKnG,MAAMC,QAAQ2sE,EAAQ1/D,QACvB,MAAO,yBACX,IAAS1P,EAAI,EAAGA,EAAIovE,EAAQ1/D,OAAOvP,SAAUH,EAAG,CAC5C,IAAIysC,EACJ,GADIA,EAAQuuE,EAAMvuG,KAAK40C,WAAW86D,OAAO/sC,EAAQ1/D,OAAO1P,IAEpD,MAAO,UAAYysC,CAC3B,CACJ,CACA,OAAO,IACX,EAUA//B,EAAe0vG,WAAa,SAAoBC,GAC5C,GAAIA,aAAkBrB,EAAMvuG,KAAKC,eAC7B,OAAO2vG,EACX,IAAIjtC,EAAU,IAAI4rC,EAAMvuG,KAAKC,eAO7B,OANmB,MAAf2vG,EAAO98G,OACP6vE,EAAQ7vE,KAAOkyF,OAAO4qB,EAAO98G,OACP,MAAtB88G,EAAOjB,cACPhsC,EAAQgsC,YAAc3pB,OAAO4qB,EAAOjB,cAChB,MAApBiB,EAAO1qD,YACPyd,EAAQzd,UAAY8/B,OAAO4qB,EAAO1qD,YAC9B0qD,EAAOv6G,MACf,IAAK,YACL,KAAK,EACDstE,EAAQttE,KAAO,EACf,MACJ,IAAK,QACL,KAAK,EACDstE,EAAQttE,KAAO,EACf,MACJ,IAAK,MACL,KAAK,EACDstE,EAAQttE,KAAO,EACf,MACJ,IAAK,SACL,KAAK,EACDstE,EAAQttE,KAAO,EACf,MACJ,IAAK,SACL,KAAK,EACDstE,EAAQttE,KAAO,EACf,MACJ,IAAK,QACL,KAAK,EACDstE,EAAQttE,KAAO,EACf,MACJ,IAAK,SACL,KAAK,EACDstE,EAAQttE,KAAO,EACf,MACJ,IAAK,OACL,KAAK,EACDstE,EAAQttE,KAAO,EACf,MACJ,IAAK,UACL,KAAK,EACDstE,EAAQttE,KAAO,EACf,MACJ,IAAK,UACL,KAAK,EACDstE,EAAQttE,KAAO,EACf,MACJ,IAAK,SACL,KAAK,GACDstE,EAAQttE,KAAO,GAmBnB,GAhBgB,MAAZu6G,EAAOntG,IACPkgE,EAAQlgE,EAAIlM,OAAOq5G,EAAOntG,IACd,MAAZmtG,EAAOr8G,IACH86G,EAAMlwC,MACLwE,EAAQpvE,EAAI86G,EAAMlwC,KAAKC,UAAUwxC,EAAOr8G,IAAI2qE,UAAW,EAC/B,iBAAb0xC,EAAOr8G,EACnBovE,EAAQpvE,EAAI6pD,SAASwyD,EAAOr8G,EAAG,IACN,iBAAbq8G,EAAOr8G,EACnBovE,EAAQpvE,EAAIq8G,EAAOr8G,EACM,iBAAbq8G,EAAOr8G,IACnBovE,EAAQpvE,EAAI,IAAI86G,EAAMwB,SAASD,EAAOr8G,EAAE8qE,MAAQ,EAAGuxC,EAAOr8G,EAAE+qE,OAAS,GAAGpE,aAChE,MAAZ01C,EAAOltG,IACiB,iBAAbktG,EAAOltG,EACd2rG,EAAMlM,OAAOpzF,OAAO6gG,EAAOltG,EAAGigE,EAAQjgE,EAAI2rG,EAAMO,UAAUP,EAAMlM,OAAOzuG,OAAOk8G,EAAOltG,IAAK,GACrFktG,EAAOltG,EAAEhP,SACdivE,EAAQjgE,EAAIktG,EAAOltG,IACX,MAAZktG,EAAOjtG,EAAW,CAClB,GAAwB,iBAAbitG,EAAOjtG,EACd,MAAMxP,UAAU,2CACpBwvE,EAAQhgE,EAAI4rG,EAAMvuG,KAAK64D,YAAY82C,WAAWC,EAAOjtG,EACzD,CACA,GAAgB,MAAZitG,EAAOhtG,EAAW,CAClB,GAAwB,iBAAbgtG,EAAOhtG,EACd,MAAMzP,UAAU,2CACpBwvE,EAAQ//D,EAAI2rG,EAAMvuG,KAAK40C,WAAW+6D,WAAWC,EAAOhtG,EACxD,CACA,GAAIgtG,EAAO/sG,OAAQ,CACf,IAAK9M,MAAMC,QAAQ45G,EAAO/sG,QACtB,MAAM1P,UAAU,+CACpBwvE,EAAQ9/D,OAAS,GACjB,IAAK,IAAItP,EAAI,EAAGA,EAAIq8G,EAAO/sG,OAAOnP,SAAUH,EACxCovE,EAAQ9/D,OAAOtP,GAAKgD,OAAOq5G,EAAO/sG,OAAOtP,GACjD,CACA,GAAIq8G,EAAO9sG,KAAM,CACb,IAAK/M,MAAMC,QAAQ45G,EAAO9sG,MACtB,MAAM3P,UAAU,6CAEpB,IADAwvE,EAAQ7/D,KAAO,GACNvP,EAAI,EAAGA,EAAIq8G,EAAO9sG,KAAKpP,SAAUH,EAClC86G,EAAMlwC,MACLwE,EAAQ7/D,KAAKvP,GAAK86G,EAAMlwC,KAAKC,UAAUwxC,EAAO9sG,KAAKvP,KAAK2qE,UAAW,EACrC,iBAAnB0xC,EAAO9sG,KAAKvP,GACxBovE,EAAQ7/D,KAAKvP,GAAK6pD,SAASwyD,EAAO9sG,KAAKvP,GAAI,IACZ,iBAAnBq8G,EAAO9sG,KAAKvP,GACxBovE,EAAQ7/D,KAAKvP,GAAKq8G,EAAO9sG,KAAKvP,GACC,iBAAnBq8G,EAAO9sG,KAAKvP,KACxBovE,EAAQ7/D,KAAKvP,GAAK,IAAI86G,EAAMwB,SAASD,EAAO9sG,KAAKvP,GAAG8qE,MAAQ,EAAGuxC,EAAO9sG,KAAKvP,GAAG+qE,OAAS,GAAGpE,WACtG,CACA,GAAI01C,EAAO7sG,QAAS,CAChB,IAAKhN,MAAMC,QAAQ45G,EAAO7sG,SACtB,MAAM5P,UAAU,gDAEpB,IADAwvE,EAAQ5/D,QAAU,GACTxP,EAAI,EAAGA,EAAIq8G,EAAO7sG,QAAQrP,SAAUH,EACR,iBAAtBq8G,EAAO7sG,QAAQxP,GACtB86G,EAAMlM,OAAOpzF,OAAO6gG,EAAO7sG,QAAQxP,GAAIovE,EAAQ5/D,QAAQxP,GAAK86G,EAAMO,UAAUP,EAAMlM,OAAOzuG,OAAOk8G,EAAO7sG,QAAQxP,KAAM,GAChHq8G,EAAO7sG,QAAQxP,GAAGG,SACvBivE,EAAQ5/D,QAAQxP,GAAKq8G,EAAO7sG,QAAQxP,GAChD,CACA,GAAIq8G,EAAO5sG,QAAS,CAChB,IAAKjN,MAAMC,QAAQ45G,EAAO5sG,SACtB,MAAM7P,UAAU,gDAEpB,IADAwvE,EAAQ3/D,QAAU,GACTzP,EAAI,EAAGA,EAAIq8G,EAAO5sG,QAAQtP,SAAUH,EAAG,CAC5C,GAAiC,iBAAtBq8G,EAAO5sG,QAAQzP,GACtB,MAAMJ,UAAU,iDACpBwvE,EAAQ3/D,QAAQzP,GAAKg7G,EAAMvuG,KAAK64D,YAAY82C,WAAWC,EAAO5sG,QAAQzP,GAC1E,CACJ,CACA,GAAIq8G,EAAO3sG,OAAQ,CACf,IAAKlN,MAAMC,QAAQ45G,EAAO3sG,QACtB,MAAM9P,UAAU,+CAEpB,IADAwvE,EAAQ1/D,OAAS,GACR1P,EAAI,EAAGA,EAAIq8G,EAAO3sG,OAAOvP,SAAUH,EAAG,CAC3C,GAAgC,iBAArBq8G,EAAO3sG,OAAO1P,GACrB,MAAMJ,UAAU,gDACpBwvE,EAAQ1/D,OAAO1P,GAAKg7G,EAAMvuG,KAAK40C,WAAW+6D,WAAWC,EAAO3sG,OAAO1P,GACvE,CACJ,CACA,OAAOovE,CACX,EAWA1iE,EAAe6vG,SAAW,SAAkBntC,EAAS9rE,GAC5CA,IACDA,EAAU,CAAC,GACf,IAAI+4G,EAAS,CAAC,EAQd,IAPI/4G,EAAQk5G,QAAUl5G,EAAQm5G,YAC1BJ,EAAO/sG,OAAS,GAChB+sG,EAAO9sG,KAAO,GACd8sG,EAAO7sG,QAAU,GACjB6sG,EAAO5sG,QAAU,GACjB4sG,EAAO3sG,OAAS,IAEhBpM,EAAQm5G,SAAU,CAGlB,GAFAJ,EAAO98G,KAAO,GACd88G,EAAOntG,EAAI,EACP4rG,EAAMlwC,KAAM,CACZ,IAAI8xC,EAAO,IAAI5B,EAAMlwC,KAAK,EAAG,GAAG,GAChCyxC,EAAOr8G,EAAIsD,EAAQq5G,QAAUlrB,OAASirB,EAAKvjE,WAAa71C,EAAQq5G,QAAU35G,OAAS05G,EAAK/1C,WAAa+1C,CACzG,MACIL,EAAOr8G,EAAIsD,EAAQq5G,QAAUlrB,OAAS,IAAM,EAC5CnuF,EAAQ4uD,QAAUu/B,OAClB4qB,EAAOltG,EAAI,IAEXktG,EAAOltG,EAAI,GACP7L,EAAQ4uD,QAAU1vD,QAClB65G,EAAOltG,EAAI2rG,EAAMO,UAAUgB,EAAOltG,KAE1CktG,EAAOjtG,EAAI,KACXitG,EAAOhtG,EAAI,KACXgtG,EAAO1qD,UAAY,GACnB0qD,EAAOv6G,KAAOwB,EAAQs5G,QAAUnrB,OAAS,YAAc,EACvD4qB,EAAOjB,YAAc,EACzB,CAgBA,GAfoB,MAAhBhsC,EAAQ7vE,MAAgB6vE,EAAQzmE,eAAe,UAC/C0zG,EAAO98G,KAAO6vE,EAAQ7vE,MACT,MAAb6vE,EAAQlgE,GAAakgE,EAAQzmE,eAAe,OAC5C0zG,EAAOntG,EAAI5L,EAAQu5G,OAASC,SAAS1tC,EAAQlgE,GAAKuiF,OAAOriB,EAAQlgE,GAAKkgE,EAAQlgE,GACjE,MAAbkgE,EAAQpvE,GAAaovE,EAAQzmE,eAAe,OACnB,iBAAdymE,EAAQpvE,EACfq8G,EAAOr8G,EAAIsD,EAAQq5G,QAAUlrB,OAASA,OAAOriB,EAAQpvE,GAAKovE,EAAQpvE,EAElEq8G,EAAOr8G,EAAIsD,EAAQq5G,QAAUlrB,OAASqpB,EAAMlwC,KAAK6yB,UAAUtkD,SAASvwC,KAAKwmE,EAAQpvE,GAAKsD,EAAQq5G,QAAU35G,OAAS,IAAI83G,EAAMwB,SAASltC,EAAQpvE,EAAE8qE,MAAQ,EAAGsE,EAAQpvE,EAAE+qE,OAAS,GAAGpE,WAAayI,EAAQpvE,GAC3L,MAAbovE,EAAQjgE,GAAaigE,EAAQzmE,eAAe,OAC5C0zG,EAAOltG,EAAI7L,EAAQ4uD,QAAUu/B,OAASqpB,EAAMlM,OAAOrzF,OAAO6zD,EAAQjgE,EAAG,EAAGigE,EAAQjgE,EAAEhP,QAAUmD,EAAQ4uD,QAAU1vD,MAAQA,MAAMi7F,UAAUzlF,MAAMpP,KAAKwmE,EAAQjgE,GAAKigE,EAAQjgE,GACzJ,MAAbigE,EAAQhgE,GAAaggE,EAAQzmE,eAAe,OAC5C0zG,EAAOjtG,EAAI4rG,EAAMvuG,KAAK64D,YAAYi3C,SAASntC,EAAQhgE,EAAG9L,IACzC,MAAb8rE,EAAQ//D,GAAa+/D,EAAQzmE,eAAe,OAC5C0zG,EAAOhtG,EAAI2rG,EAAMvuG,KAAK40C,WAAWk7D,SAASntC,EAAQ//D,EAAG/L,IACrD8rE,EAAQ9/D,QAAU8/D,EAAQ9/D,OAAOnP,OAAQ,CACzCk8G,EAAO/sG,OAAS,GAChB,IAAK,IAAIvI,EAAI,EAAGA,EAAIqoE,EAAQ9/D,OAAOnP,SAAU4G,EACzCs1G,EAAO/sG,OAAOvI,GAAKzD,EAAQu5G,OAASC,SAAS1tC,EAAQ9/D,OAAOvI,IAAM0qF,OAAOriB,EAAQ9/D,OAAOvI,IAAMqoE,EAAQ9/D,OAAOvI,EACrH,CACA,GAAIqoE,EAAQ7/D,MAAQ6/D,EAAQ7/D,KAAKpP,OAE7B,IADAk8G,EAAO9sG,KAAO,GACLxI,EAAI,EAAGA,EAAIqoE,EAAQ7/D,KAAKpP,SAAU4G,EACR,iBAApBqoE,EAAQ7/D,KAAKxI,GACpBs1G,EAAO9sG,KAAKxI,GAAKzD,EAAQq5G,QAAUlrB,OAASA,OAAOriB,EAAQ7/D,KAAKxI,IAAMqoE,EAAQ7/D,KAAKxI,GAEnFs1G,EAAO9sG,KAAKxI,GAAKzD,EAAQq5G,QAAUlrB,OAASqpB,EAAMlwC,KAAK6yB,UAAUtkD,SAASvwC,KAAKwmE,EAAQ7/D,KAAKxI,IAAMzD,EAAQq5G,QAAU35G,OAAS,IAAI83G,EAAMwB,SAASltC,EAAQ7/D,KAAKxI,GAAG+jE,MAAQ,EAAGsE,EAAQ7/D,KAAKxI,GAAGgkE,OAAS,GAAGpE,WAAayI,EAAQ7/D,KAAKxI,GAE7O,GAAIqoE,EAAQ5/D,SAAW4/D,EAAQ5/D,QAAQrP,OAEnC,IADAk8G,EAAO7sG,QAAU,GACRzI,EAAI,EAAGA,EAAIqoE,EAAQ5/D,QAAQrP,SAAU4G,EAC1Cs1G,EAAO7sG,QAAQzI,GAAKzD,EAAQ4uD,QAAUu/B,OAASqpB,EAAMlM,OAAOrzF,OAAO6zD,EAAQ5/D,QAAQzI,GAAI,EAAGqoE,EAAQ5/D,QAAQzI,GAAG5G,QAAUmD,EAAQ4uD,QAAU1vD,MAAQA,MAAMi7F,UAAUzlF,MAAMpP,KAAKwmE,EAAQ5/D,QAAQzI,IAAMqoE,EAAQ5/D,QAAQzI,GAE1N,GAAIqoE,EAAQ3/D,SAAW2/D,EAAQ3/D,QAAQtP,OAEnC,IADAk8G,EAAO5sG,QAAU,GACR1I,EAAI,EAAGA,EAAIqoE,EAAQ3/D,QAAQtP,SAAU4G,EAC1Cs1G,EAAO5sG,QAAQ1I,GAAKi0G,EAAMvuG,KAAK64D,YAAYi3C,SAASntC,EAAQ3/D,QAAQ1I,GAAIzD,GAEhF,GAAI8rE,EAAQ1/D,QAAU0/D,EAAQ1/D,OAAOvP,OAEjC,IADAk8G,EAAO3sG,OAAS,GACP3I,EAAI,EAAGA,EAAIqoE,EAAQ1/D,OAAOvP,SAAU4G,EACzCs1G,EAAO3sG,OAAO3I,GAAKi0G,EAAMvuG,KAAK40C,WAAWk7D,SAASntC,EAAQ1/D,OAAO3I,GAAIzD,GAQ7E,OANyB,MAArB8rE,EAAQzd,WAAqByd,EAAQzmE,eAAe,eACpD0zG,EAAO1qD,UAAYyd,EAAQzd,WACX,MAAhByd,EAAQttE,MAAgBstE,EAAQzmE,eAAe,UAC/C0zG,EAAOv6G,KAAOwB,EAAQs5G,QAAUnrB,OAASupB,EAAMvuG,KAAKC,eAAee,cAAc2hE,EAAQttE,MAAQstE,EAAQttE,MAClF,MAAvBstE,EAAQgsC,aAAuBhsC,EAAQzmE,eAAe,iBACtD0zG,EAAOjB,YAAchsC,EAAQgsC,aAC1BiB,CACX,EASA3vG,EAAe+wF,UAAUkW,OAAS,WAC9B,OAAOpzG,KAAKD,YAAYi8G,SAASh8G,KAAMk6G,EAAUM,KAAKgC,cAC1D,EAkBArwG,EAAee,cAAgB,WAC3B,IAAI+sG,EAAa,CAAC,EAAG3iD,EAAS1vD,OAAO8+C,OAAOuzD,GAY5C,OAXA3iD,EAAO2iD,EAAW,GAAK,aAAe,EACtC3iD,EAAO2iD,EAAW,GAAK,SAAW,EAClC3iD,EAAO2iD,EAAW,GAAK,OAAS,EAChC3iD,EAAO2iD,EAAW,GAAK,UAAY,EACnC3iD,EAAO2iD,EAAW,GAAK,UAAY,EACnC3iD,EAAO2iD,EAAW,GAAK,SAAW,EAClC3iD,EAAO2iD,EAAW,GAAK,UAAY,EACnC3iD,EAAO2iD,EAAW,GAAK,QAAU,EACjC3iD,EAAO2iD,EAAW,GAAK,WAAa,EACpC3iD,EAAO2iD,EAAW,GAAK,WAAa,EACpC3iD,EAAO2iD,EAAW,IAAM,UAAY,GAC7B3iD,CACV,CAd8B,GAgBxBnrD,CACV,CA5sBqB,GA8sBtBD,EAAKuwG,eAAiB,WAmBlB,SAASA,EAAe7B,GACpB,GAAIA,EACA,IAAK,IAAI59F,EAAOpV,OAAOoV,KAAK49F,GAAan7G,EAAI,EAAGA,EAAIud,EAAKpd,SAAUH,EACpC,MAAvBm7G,EAAW59F,EAAKvd,MAChBO,KAAKgd,EAAKvd,IAAMm7G,EAAW59F,EAAKvd,IAChD,CAkNA,OA1MAg9G,EAAevf,UAAUl+F,KAAO,GAQhCy9G,EAAevf,UAAU37F,KAAO,KAQhCk7G,EAAevf,UAAU9rC,UAAY,GAUrCqrD,EAAe/1D,OAAS,SAAgBk0D,GACpC,OAAO,IAAI6B,EAAe7B,EAC9B,EAWA6B,EAAezhG,OAAS,SAAgB6zD,EAASmsC,GAS7C,OARKA,IACDA,EAASX,EAAQ3zD,UACD,MAAhBmoB,EAAQ7vE,MAAgB6vE,EAAQzmE,eAAe,SAC/C4yG,EAAOC,OAA8B,IAAI3M,OAAOz/B,EAAQ7vE,MACxC,MAAhB6vE,EAAQttE,MAAgBstE,EAAQzmE,eAAe,SAC/CqyG,EAAMvuG,KAAKwwG,UAAU1hG,OAAO6zD,EAAQttE,KAAMy5G,EAAOC,OAA8B,IAAIG,QAAQC,SACtE,MAArBxsC,EAAQzd,WAAqByd,EAAQzmE,eAAe,cACpD4yG,EAAOC,OAA8B,IAAI3M,OAAOz/B,EAAQzd,WACrD4pD,CACX,EAWAyB,EAAelB,gBAAkB,SAAyB1sC,EAASmsC,GAC/D,OAAOh7G,KAAKgb,OAAO6zD,EAASmsC,GAAQK,QACxC,EAaAoB,EAAexhG,OAAS,SAAgBugG,EAAQ57G,GACtC47G,aAAkBrB,IACpBqB,EAASrB,EAAQzzD,OAAO80D,IAE5B,IADA,IAAIz2E,OAAiBxlC,IAAXK,EAAuB47G,EAAOroE,IAAMqoE,EAAOhvC,IAAM5sE,EAAQivE,EAAU,IAAI4rC,EAAMvuG,KAAKuwG,eACrFjB,EAAOhvC,IAAMznC,GAAK,CACrB,IAAI2gD,EAAM81B,EAAOP,SACjB,OAAQv1B,IAAQ,GAChB,KAAK,EACD7W,EAAQ7vE,KAAOw8G,EAAOlN,SACtB,MACJ,KAAK,EACDz/B,EAAQttE,KAAOk5G,EAAMvuG,KAAKwwG,UAAUzhG,OAAOugG,EAAQA,EAAOP,UAC1D,MACJ,KAAK,EACDpsC,EAAQzd,UAAYoqD,EAAOlN,SAC3B,MACJ,QACIkN,EAAOE,SAAe,EAANh2B,GAGxB,CACA,OAAO7W,CACX,EAYA4tC,EAAed,gBAAkB,SAAyBH,GAGtD,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBx7G,KAAKib,OAAOugG,EAAQA,EAAOP,SACtC,EAUAwB,EAAeb,OAAS,SAAgB/sC,GACpC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAoB,MAAhBA,EAAQ7vE,MAAgB6vE,EAAQzmE,eAAe,UAC1CmyG,EAAMz1G,SAAS+pE,EAAQ7vE,MACxB,MAAO,wBACf,GAAoB,MAAhB6vE,EAAQttE,MAAgBstE,EAAQzmE,eAAe,QAAS,CACxD,IAAI8jC,EAAQuuE,EAAMvuG,KAAKwwG,UAAUd,OAAO/sC,EAAQttE,MAChD,GAAI2qC,EACA,MAAO,QAAUA,CACzB,CACA,OAAyB,MAArB2iC,EAAQzd,WAAqByd,EAAQzmE,eAAe,eAC/CmyG,EAAMz1G,SAAS+pE,EAAQzd,WACjB,6BACR,IACX,EAUAqrD,EAAeZ,WAAa,SAAoBC,GAC5C,GAAIA,aAAkBrB,EAAMvuG,KAAKuwG,eAC7B,OAAOX,EACX,IAAIjtC,EAAU,IAAI4rC,EAAMvuG,KAAKuwG,eAG7B,GAFmB,MAAfX,EAAO98G,OACP6vE,EAAQ7vE,KAAOkyF,OAAO4qB,EAAO98G,OACd,MAAf88G,EAAOv6G,KAAc,CACrB,GAA2B,iBAAhBu6G,EAAOv6G,KACd,MAAMlC,UAAU,8CACpBwvE,EAAQttE,KAAOk5G,EAAMvuG,KAAKwwG,UAAUb,WAAWC,EAAOv6G,KAC1D,CAGA,OAFwB,MAApBu6G,EAAO1qD,YACPyd,EAAQzd,UAAY8/B,OAAO4qB,EAAO1qD,YAC/Byd,CACX,EAWA4tC,EAAeT,SAAW,SAAkBntC,EAAS9rE,GAC5CA,IACDA,EAAU,CAAC,GACf,IAAI+4G,EAAS,CAAC,EAYd,OAXI/4G,EAAQm5G,WACRJ,EAAO98G,KAAO,GACd88G,EAAOv6G,KAAO,KACdu6G,EAAO1qD,UAAY,IAEH,MAAhByd,EAAQ7vE,MAAgB6vE,EAAQzmE,eAAe,UAC/C0zG,EAAO98G,KAAO6vE,EAAQ7vE,MACN,MAAhB6vE,EAAQttE,MAAgBstE,EAAQzmE,eAAe,UAC/C0zG,EAAOv6G,KAAOk5G,EAAMvuG,KAAKwwG,UAAUV,SAASntC,EAAQttE,KAAMwB,IACrC,MAArB8rE,EAAQzd,WAAqByd,EAAQzmE,eAAe,eACpD0zG,EAAO1qD,UAAYyd,EAAQzd,WACxB0qD,CACX,EASAW,EAAevf,UAAUkW,OAAS,WAC9B,OAAOpzG,KAAKD,YAAYi8G,SAASh8G,KAAMk6G,EAAUM,KAAKgC,cAC1D,EAEOC,CACV,CA3OqB,GA6OtBvwG,EAAK2zC,UAAY,WAuBb,SAASA,EAAU+6D,GAIf,GAHA56G,KAAKwjB,MAAQ,GACbxjB,KAAK4S,OAAS,GACd5S,KAAKqL,UAAY,GACbuvG,EACA,IAAK,IAAI59F,EAAOpV,OAAOoV,KAAK49F,GAAan7G,EAAI,EAAGA,EAAIud,EAAKpd,SAAUH,EACpC,MAAvBm7G,EAAW59F,EAAKvd,MAChBO,KAAKgd,EAAKvd,IAAMm7G,EAAW59F,EAAKvd,IAChD,CAqVA,OA7UAogD,EAAUq9C,UAAU15E,MAAQ+2F,EAAMQ,WAQlCl7D,EAAUq9C,UAAUtqF,OAAS2nG,EAAMQ,WAQnCl7D,EAAUq9C,UAAUl+F,KAAO,GAQ3B6gD,EAAUq9C,UAAUp9C,OAAS,GAQ7BD,EAAUq9C,UAAU50C,OAAS,GAQ7BzI,EAAUq9C,UAAU7xF,UAAYkvG,EAAMQ,WAQtCl7D,EAAUq9C,UAAU9rC,UAAY,GAUhCvR,EAAU6G,OAAS,SAAgBk0D,GAC/B,OAAO,IAAI/6D,EAAU+6D,EACzB,EAWA/6D,EAAU7kC,OAAS,SAAgB6zD,EAASmsC,GAGxC,GAFKA,IACDA,EAASX,EAAQ3zD,UACA,MAAjBmoB,EAAQrrD,OAAiBqrD,EAAQrrD,MAAM5jB,OACvC,IAAK,IAAIH,EAAI,EAAGA,EAAIovE,EAAQrrD,MAAM5jB,SAAUH,EACxCu7G,EAAOC,OAA8B,IAAI3M,OAAOz/B,EAAQrrD,MAAM/jB,IACtE,GAAsB,MAAlBovE,EAAQj8D,QAAkBi8D,EAAQj8D,OAAOhT,OACzC,IAASH,EAAI,EAAGA,EAAIovE,EAAQj8D,OAAOhT,SAAUH,EACzCu7G,EAAOC,OAA8B,IAAI3M,OAAOz/B,EAAQj8D,OAAOnT,IAKvE,GAJoB,MAAhBovE,EAAQ7vE,MAAgB6vE,EAAQzmE,eAAe,SAC/C4yG,EAAOC,OAA8B,IAAI3M,OAAOz/B,EAAQ7vE,MACtC,MAAlB6vE,EAAQ/uB,QAAkB+uB,EAAQzmE,eAAe,WACjD4yG,EAAOC,OAA8B,IAAI3M,OAAOz/B,EAAQ/uB,QACnC,MAArB+uB,EAAQxjE,WAAqBwjE,EAAQxjE,UAAUzL,OAC/C,IAASH,EAAI,EAAGA,EAAIovE,EAAQxjE,UAAUzL,SAAUH,EAC5Cg7G,EAAMvuG,KAAKC,eAAe6O,OAAO6zD,EAAQxjE,UAAU5L,GAAIu7G,EAAOC,OAA8B,IAAIG,QAAQC,SAKhH,OAJyB,MAArBxsC,EAAQzd,WAAqByd,EAAQzmE,eAAe,cACpD4yG,EAAOC,OAA8B,IAAI3M,OAAOz/B,EAAQzd,WACtC,MAAlByd,EAAQvmB,QAAkBumB,EAAQzmE,eAAe,WACjD4yG,EAAOC,OAA8B,IAAI3M,OAAOz/B,EAAQvmB,QACrD0yD,CACX,EAWAn7D,EAAU07D,gBAAkB,SAAyB1sC,EAASmsC,GAC1D,OAAOh7G,KAAKgb,OAAO6zD,EAASmsC,GAAQK,QACxC,EAaAx7D,EAAU5kC,OAAS,SAAgBugG,EAAQ57G,GACjC47G,aAAkBrB,IACpBqB,EAASrB,EAAQzzD,OAAO80D,IAE5B,IADA,IAAIz2E,OAAiBxlC,IAAXK,EAAuB47G,EAAOroE,IAAMqoE,EAAOhvC,IAAM5sE,EAAQivE,EAAU,IAAI4rC,EAAMvuG,KAAK2zC,UACrF27D,EAAOhvC,IAAMznC,GAAK,CACrB,IAAI2gD,EAAM81B,EAAOP,SACjB,OAAQv1B,IAAQ,GAChB,KAAK,EACK7W,EAAQrrD,OAASqrD,EAAQrrD,MAAM5jB,SACjCivE,EAAQrrD,MAAQ,IACpBqrD,EAAQrrD,MAAM3jB,KAAK27G,EAAOlN,UAC1B,MACJ,KAAK,EACKz/B,EAAQj8D,QAAUi8D,EAAQj8D,OAAOhT,SACnCivE,EAAQj8D,OAAS,IACrBi8D,EAAQj8D,OAAO/S,KAAK27G,EAAOlN,UAC3B,MACJ,KAAK,EACDz/B,EAAQ7vE,KAAOw8G,EAAOlN,SACtB,MACJ,KAAK,EACDz/B,EAAQ/uB,OAAS07D,EAAOlN,SACxB,MACJ,KAAK,EACDz/B,EAAQvmB,OAASkzD,EAAOlN,SACxB,MACJ,KAAK,EACKz/B,EAAQxjE,WAAawjE,EAAQxjE,UAAUzL,SACzCivE,EAAQxjE,UAAY,IACxBwjE,EAAQxjE,UAAUxL,KAAK46G,EAAMvuG,KAAKC,eAAe8O,OAAOugG,EAAQA,EAAOP,WACvE,MACJ,KAAK,EACDpsC,EAAQzd,UAAYoqD,EAAOlN,SAC3B,MACJ,QACIkN,EAAOE,SAAe,EAANh2B,GAGxB,CACA,OAAO7W,CACX,EAYAhvB,EAAU87D,gBAAkB,SAAyBH,GAGjD,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBx7G,KAAKib,OAAOugG,EAAQA,EAAOP,SACtC,EAUAp7D,EAAU+7D,OAAS,SAAgB/sC,GAC/B,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAqB,MAAjBA,EAAQrrD,OAAiBqrD,EAAQzmE,eAAe,SAAU,CAC1D,IAAKnG,MAAMC,QAAQ2sE,EAAQrrD,OACvB,MAAO,wBACX,IAAK,IAAI/jB,EAAI,EAAGA,EAAIovE,EAAQrrD,MAAM5jB,SAAUH,EACxC,IAAK86G,EAAMz1G,SAAS+pE,EAAQrrD,MAAM/jB,IAC9B,MAAO,0BACnB,CACA,GAAsB,MAAlBovE,EAAQj8D,QAAkBi8D,EAAQzmE,eAAe,UAAW,CAC5D,IAAKnG,MAAMC,QAAQ2sE,EAAQj8D,QACvB,MAAO,yBACX,IAASnT,EAAI,EAAGA,EAAIovE,EAAQj8D,OAAOhT,SAAUH,EACzC,IAAK86G,EAAMz1G,SAAS+pE,EAAQj8D,OAAOnT,IAC/B,MAAO,2BACnB,CACA,GAAoB,MAAhBovE,EAAQ7vE,MAAgB6vE,EAAQzmE,eAAe,UAC1CmyG,EAAMz1G,SAAS+pE,EAAQ7vE,MACxB,MAAO,wBACf,GAAsB,MAAlB6vE,EAAQ/uB,QAAkB+uB,EAAQzmE,eAAe,YAC5CmyG,EAAMz1G,SAAS+pE,EAAQ/uB,QACxB,MAAO,0BACf,GAAsB,MAAlB+uB,EAAQvmB,QAAkBumB,EAAQzmE,eAAe,YAC5CmyG,EAAMz1G,SAAS+pE,EAAQvmB,QACxB,MAAO,0BACf,GAAyB,MAArBumB,EAAQxjE,WAAqBwjE,EAAQzmE,eAAe,aAAc,CAClE,IAAKnG,MAAMC,QAAQ2sE,EAAQxjE,WACvB,MAAO,4BACX,IAAS5L,EAAI,EAAGA,EAAIovE,EAAQxjE,UAAUzL,SAAUH,EAAG,CAC/C,IAAIysC,EAAQuuE,EAAMvuG,KAAKC,eAAeyvG,OAAO/sC,EAAQxjE,UAAU5L,IAC/D,GAAIysC,EACA,MAAO,aAAeA,CAC9B,CACJ,CACA,OAAyB,MAArB2iC,EAAQzd,WAAqByd,EAAQzmE,eAAe,eAC/CmyG,EAAMz1G,SAAS+pE,EAAQzd,WACjB,6BACR,IACX,EAUAvR,EAAUg8D,WAAa,SAAoBC,GACvC,GAAIA,aAAkBrB,EAAMvuG,KAAK2zC,UAC7B,OAAOi8D,EACX,IAAIjtC,EAAU,IAAI4rC,EAAMvuG,KAAK2zC,UAC7B,GAAIi8D,EAAOt4F,MAAO,CACd,IAAKvhB,MAAMC,QAAQ45G,EAAOt4F,OACtB,MAAMnkB,UAAU,yCACpBwvE,EAAQrrD,MAAQ,GAChB,IAAK,IAAI/jB,EAAI,EAAGA,EAAIq8G,EAAOt4F,MAAM5jB,SAAUH,EACvCovE,EAAQrrD,MAAM/jB,GAAKyxF,OAAO4qB,EAAOt4F,MAAM/jB,GAC/C,CACA,GAAIq8G,EAAOlpG,OAAQ,CACf,IAAK3Q,MAAMC,QAAQ45G,EAAOlpG,QACtB,MAAMvT,UAAU,0CAEpB,IADAwvE,EAAQj8D,OAAS,GACRnT,EAAI,EAAGA,EAAIq8G,EAAOlpG,OAAOhT,SAAUH,EACxCovE,EAAQj8D,OAAOnT,GAAKyxF,OAAO4qB,EAAOlpG,OAAOnT,GACjD,CAOA,GANmB,MAAfq8G,EAAO98G,OACP6vE,EAAQ7vE,KAAOkyF,OAAO4qB,EAAO98G,OACZ,MAAjB88G,EAAOh8D,SACP+uB,EAAQ/uB,OAASoxC,OAAO4qB,EAAOh8D,SACd,MAAjBg8D,EAAOxzD,SACPumB,EAAQvmB,OAAS4oC,OAAO4qB,EAAOxzD,SAC/BwzD,EAAOzwG,UAAW,CAClB,IAAKpJ,MAAMC,QAAQ45G,EAAOzwG,WACtB,MAAMhM,UAAU,6CAEpB,IADAwvE,EAAQxjE,UAAY,GACX5L,EAAI,EAAGA,EAAIq8G,EAAOzwG,UAAUzL,SAAUH,EAAG,CAC9C,GAAmC,iBAAxBq8G,EAAOzwG,UAAU5L,GACxB,MAAMJ,UAAU,8CACpBwvE,EAAQxjE,UAAU5L,GAAKg7G,EAAMvuG,KAAKC,eAAe0vG,WAAWC,EAAOzwG,UAAU5L,GACjF,CACJ,CAGA,OAFwB,MAApBq8G,EAAO1qD,YACPyd,EAAQzd,UAAY8/B,OAAO4qB,EAAO1qD,YAC/Byd,CACX,EAWAhvB,EAAUm8D,SAAW,SAAkBntC,EAAS9rE,GACvCA,IACDA,EAAU,CAAC,GACf,IAAI+4G,EAAS,CAAC,EAYd,IAXI/4G,EAAQk5G,QAAUl5G,EAAQm5G,YAC1BJ,EAAOt4F,MAAQ,GACfs4F,EAAOlpG,OAAS,GAChBkpG,EAAOzwG,UAAY,IAEnBtI,EAAQm5G,WACRJ,EAAO98G,KAAO,GACd88G,EAAOh8D,OAAS,GAChBg8D,EAAO1qD,UAAY,GACnB0qD,EAAOxzD,OAAS,IAEhBumB,EAAQrrD,OAASqrD,EAAQrrD,MAAM5jB,OAAQ,CACvCk8G,EAAOt4F,MAAQ,GACf,IAAK,IAAIhd,EAAI,EAAGA,EAAIqoE,EAAQrrD,MAAM5jB,SAAU4G,EACxCs1G,EAAOt4F,MAAMhd,GAAKqoE,EAAQrrD,MAAMhd,EACxC,CACA,GAAIqoE,EAAQj8D,QAAUi8D,EAAQj8D,OAAOhT,OAEjC,IADAk8G,EAAOlpG,OAAS,GACPpM,EAAI,EAAGA,EAAIqoE,EAAQj8D,OAAOhT,SAAU4G,EACzCs1G,EAAOlpG,OAAOpM,GAAKqoE,EAAQj8D,OAAOpM,GAM1C,GAJoB,MAAhBqoE,EAAQ7vE,MAAgB6vE,EAAQzmE,eAAe,UAC/C0zG,EAAO98G,KAAO6vE,EAAQ7vE,MACJ,MAAlB6vE,EAAQ/uB,QAAkB+uB,EAAQzmE,eAAe,YACjD0zG,EAAOh8D,OAAS+uB,EAAQ/uB,QACxB+uB,EAAQxjE,WAAawjE,EAAQxjE,UAAUzL,OAEvC,IADAk8G,EAAOzwG,UAAY,GACV7E,EAAI,EAAGA,EAAIqoE,EAAQxjE,UAAUzL,SAAU4G,EAC5Cs1G,EAAOzwG,UAAU7E,GAAKi0G,EAAMvuG,KAAKC,eAAe6vG,SAASntC,EAAQxjE,UAAU7E,GAAIzD,GAMvF,OAJyB,MAArB8rE,EAAQzd,WAAqByd,EAAQzmE,eAAe,eACpD0zG,EAAO1qD,UAAYyd,EAAQzd,WACT,MAAlByd,EAAQvmB,QAAkBumB,EAAQzmE,eAAe,YACjD0zG,EAAOxzD,OAASumB,EAAQvmB,QACrBwzD,CACX,EASAj8D,EAAUq9C,UAAUkW,OAAS,WACzB,OAAOpzG,KAAKD,YAAYi8G,SAASh8G,KAAMk6G,EAAUM,KAAKgC,cAC1D,EAEO38D,CACV,CArXgB,GAuXjB3zC,EAAKg8C,WAAa,WAyBd,SAASA,EAAW0yD,GAGhB,GAFA56G,KAAKqoD,YAAc,GACnBroD,KAAK28G,cAAgB,GACjB/B,EACA,IAAK,IAAI59F,EAAOpV,OAAOoV,KAAK49F,GAAan7G,EAAI,EAAGA,EAAIud,EAAKpd,SAAUH,EACpC,MAAvBm7G,EAAW59F,EAAKvd,MAChBO,KAAKgd,EAAKvd,IAAMm7G,EAAW59F,EAAKvd,IAChD,CAsZA,OA9YAyoD,EAAWg1C,UAAU/0C,UAAYoyD,EAAMlwC,KAAOkwC,EAAMlwC,KAAKxD,SAAS,EAAE,GAAE,GAAS,EAQ/E3e,EAAWg1C,UAAU70C,YAAckyD,EAAMQ,WAQzC7yD,EAAWg1C,UAAU5gC,aAAe,GAQpCpU,EAAWg1C,UAAU3gC,gBAAkB,GAQvCrU,EAAWg1C,UAAU50C,OAAS,GAQ9BJ,EAAWg1C,UAAU1gC,aAAe+9C,EAAMlwC,KAAOkwC,EAAMlwC,KAAKxD,SAAS,EAAE,GAAE,GAAS,EAQlF3e,EAAWg1C,UAAU9rC,UAAY,GAQjClJ,EAAWg1C,UAAUhuD,MAAQ,KAQ7BgZ,EAAWg1C,UAAUyf,cAAgBpC,EAAMQ,WAU3C7yD,EAAWxB,OAAS,SAAgBk0D,GAChC,OAAO,IAAI1yD,EAAW0yD,EAC1B,EAWA1yD,EAAWltC,OAAS,SAAgB6zD,EAASmsC,GAiBzC,GAhBKA,IACDA,EAASX,EAAQ3zD,UACI,MAArBmoB,EAAQ1mB,WAAqB0mB,EAAQzmE,eAAe,cACpD4yG,EAAOC,OAA8B,GAAGE,MAAMtsC,EAAQ1mB,WAC9B,MAAxB0mB,EAAQvS,cAAwBuS,EAAQzmE,eAAe,iBACvD4yG,EAAOC,OAA8B,IAAI3M,OAAOz/B,EAAQvS,cAC7B,MAA3BuS,EAAQtS,iBAA2BsS,EAAQzmE,eAAe,oBAC1D4yG,EAAOC,OAA8B,IAAI3M,OAAOz/B,EAAQtS,iBACtC,MAAlBsS,EAAQvmB,QAAkBumB,EAAQzmE,eAAe,WACjD4yG,EAAOC,OAA8B,IAAI3M,OAAOz/B,EAAQvmB,QAChC,MAAxBumB,EAAQrS,cAAwBqS,EAAQzmE,eAAe,iBACvD4yG,EAAOC,OAA8B,IAAIE,MAAMtsC,EAAQrS,cAClC,MAArBqS,EAAQzd,WAAqByd,EAAQzmE,eAAe,cACpD4yG,EAAOC,OAA8B,IAAI3M,OAAOz/B,EAAQzd,WACvC,MAAjByd,EAAQ3/B,OAAiB2/B,EAAQzmE,eAAe,UAChDqyG,EAAMvuG,KAAK40C,WAAW9lC,OAAO6zD,EAAQ3/B,MAAO8rE,EAAOC,OAA8B,IAAIG,QAAQC,SACtE,MAAvBxsC,EAAQxmB,aAAuBwmB,EAAQxmB,YAAYzoD,OACnD,IAAK,IAAIH,EAAI,EAAGA,EAAIovE,EAAQxmB,YAAYzoD,SAAUH,EAC9Cg7G,EAAMvuG,KAAK0wG,mBAAmB5hG,OAAO6zD,EAAQxmB,YAAY5oD,GAAIu7G,EAAOC,OAA8B,IAAIG,QAAQC,SACtH,GAA6B,MAAzBxsC,EAAQ8tC,eAAyB9tC,EAAQ8tC,cAAc/8G,OACvD,IAASH,EAAI,EAAGA,EAAIovE,EAAQ8tC,cAAc/8G,SAAUH,EAChDg7G,EAAMvuG,KAAK2wG,uBAAuB7hG,OAAO6zD,EAAQ8tC,cAAcl9G,GAAIu7G,EAAOC,OAA+B,KAAKG,QAAQC,SAC9H,OAAOL,CACX,EAWA9yD,EAAWqzD,gBAAkB,SAAyB1sC,EAASmsC,GAC3D,OAAOh7G,KAAKgb,OAAO6zD,EAASmsC,GAAQK,QACxC,EAaAnzD,EAAWjtC,OAAS,SAAgBugG,EAAQ57G,GAClC47G,aAAkBrB,IACpBqB,EAASrB,EAAQzzD,OAAO80D,IAE5B,IADA,IAAIz2E,OAAiBxlC,IAAXK,EAAuB47G,EAAOroE,IAAMqoE,EAAOhvC,IAAM5sE,EAAQivE,EAAU,IAAI4rC,EAAMvuG,KAAKg8C,WACrFszD,EAAOhvC,IAAMznC,GAAK,CACrB,IAAI2gD,EAAM81B,EAAOP,SACjB,OAAQv1B,IAAQ,GAChB,KAAK,EACD7W,EAAQ1mB,UAAYqzD,EAAOL,QAC3B,MACJ,KAAK,EACKtsC,EAAQxmB,aAAewmB,EAAQxmB,YAAYzoD,SAC7CivE,EAAQxmB,YAAc,IAC1BwmB,EAAQxmB,YAAYxoD,KAAK46G,EAAMvuG,KAAK0wG,mBAAmB3hG,OAAOugG,EAAQA,EAAOP,WAC7E,MACJ,KAAK,EACDpsC,EAAQvS,aAAek/C,EAAOlN,SAC9B,MACJ,KAAK,EACDz/B,EAAQtS,gBAAkBi/C,EAAOlN,SACjC,MACJ,KAAK,EACDz/B,EAAQvmB,OAASkzD,EAAOlN,SACxB,MACJ,KAAK,EACDz/B,EAAQrS,aAAeg/C,EAAOL,QAC9B,MACJ,KAAK,EACDtsC,EAAQzd,UAAYoqD,EAAOlN,SAC3B,MACJ,KAAK,EACDz/B,EAAQ3/B,MAAQurE,EAAMvuG,KAAK40C,WAAW7lC,OAAOugG,EAAQA,EAAOP,UAC5D,MACJ,KAAK,GACKpsC,EAAQ8tC,eAAiB9tC,EAAQ8tC,cAAc/8G,SACjDivE,EAAQ8tC,cAAgB,IAC5B9tC,EAAQ8tC,cAAc98G,KAAK46G,EAAMvuG,KAAK2wG,uBAAuB5hG,OAAOugG,EAAQA,EAAOP,WACnF,MACJ,QACIO,EAAOE,SAAe,EAANh2B,GAGxB,CACA,OAAO7W,CACX,EAYA3mB,EAAWyzD,gBAAkB,SAAyBH,GAGlD,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBx7G,KAAKib,OAAOugG,EAAQA,EAAOP,SACtC,EAUA/yD,EAAW0zD,OAAS,SAAgB/sC,GAChC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAyB,MAArBA,EAAQ1mB,WAAqB0mB,EAAQzmE,eAAe,gBAC/CmyG,EAAM9vG,UAAUokE,EAAQ1mB,YAAgB0mB,EAAQ1mB,WAAaoyD,EAAM9vG,UAAUokE,EAAQ1mB,UAAUoiB,MAAQgwC,EAAM9vG,UAAUokE,EAAQ1mB,UAAUqiB,OAC1I,MAAO,mCACf,GAA2B,MAAvBqE,EAAQxmB,aAAuBwmB,EAAQzmE,eAAe,eAAgB,CACtE,IAAKnG,MAAMC,QAAQ2sE,EAAQxmB,aACvB,MAAO,8BACX,IAAK,IAAI5oD,EAAI,EAAGA,EAAIovE,EAAQxmB,YAAYzoD,SAAUH,EAE9C,GADIysC,EAAQuuE,EAAMvuG,KAAK0wG,mBAAmBhB,OAAO/sC,EAAQxmB,YAAY5oD,IAEjE,MAAO,eAAiBysC,CAEpC,CACA,GAA4B,MAAxB2iC,EAAQvS,cAAwBuS,EAAQzmE,eAAe,kBAClDmyG,EAAMz1G,SAAS+pE,EAAQvS,cACxB,MAAO,gCACf,GAA+B,MAA3BuS,EAAQtS,iBAA2BsS,EAAQzmE,eAAe,qBACrDmyG,EAAMz1G,SAAS+pE,EAAQtS,iBACxB,MAAO,mCACf,GAAsB,MAAlBsS,EAAQvmB,QAAkBumB,EAAQzmE,eAAe,YAC5CmyG,EAAMz1G,SAAS+pE,EAAQvmB,QACxB,MAAO,0BACf,GAA4B,MAAxBumB,EAAQrS,cAAwBqS,EAAQzmE,eAAe,mBAClDmyG,EAAM9vG,UAAUokE,EAAQrS,eAAmBqS,EAAQrS,cAAgB+9C,EAAM9vG,UAAUokE,EAAQrS,aAAa+N,MAAQgwC,EAAM9vG,UAAUokE,EAAQrS,aAAagO,OACtJ,MAAO,sCACf,GAAyB,MAArBqE,EAAQzd,WAAqByd,EAAQzmE,eAAe,eAC/CmyG,EAAMz1G,SAAS+pE,EAAQzd,WACxB,MAAO,6BACf,GAAqB,MAAjByd,EAAQ3/B,OAAiB2/B,EAAQzmE,eAAe,WAC5C8jC,EAAQuuE,EAAMvuG,KAAK40C,WAAW86D,OAAO/sC,EAAQ3/B,QAE7C,MAAO,SAAWhD,EAE1B,GAA6B,MAAzB2iC,EAAQ8tC,eAAyB9tC,EAAQzmE,eAAe,iBAAkB,CAC1E,IAAKnG,MAAMC,QAAQ2sE,EAAQ8tC,eACvB,MAAO,gCACX,IAASl9G,EAAI,EAAGA,EAAIovE,EAAQ8tC,cAAc/8G,SAAUH,EAAG,CACnD,IAAIysC,EACJ,GADIA,EAAQuuE,EAAMvuG,KAAK2wG,uBAAuBjB,OAAO/sC,EAAQ8tC,cAAcl9G,IAEvE,MAAO,iBAAmBysC,CAClC,CACJ,CACA,OAAO,IACX,EAUAgc,EAAW2zD,WAAa,SAAoBC,GACxC,GAAIA,aAAkBrB,EAAMvuG,KAAKg8C,WAC7B,OAAO4zD,EACX,IAAIjtC,EAAU,IAAI4rC,EAAMvuG,KAAKg8C,WAU7B,GATwB,MAApB4zD,EAAO3zD,YACHoyD,EAAMlwC,MACLwE,EAAQ1mB,UAAYoyD,EAAMlwC,KAAKC,UAAUwxC,EAAO3zD,YAAYiiB,UAAW,EACvC,iBAArB0xC,EAAO3zD,UACnB0mB,EAAQ1mB,UAAYmB,SAASwyD,EAAO3zD,UAAW,IACd,iBAArB2zD,EAAO3zD,UACnB0mB,EAAQ1mB,UAAY2zD,EAAO3zD,UACM,iBAArB2zD,EAAO3zD,YACnB0mB,EAAQ1mB,UAAY,IAAIoyD,EAAMwB,SAASD,EAAO3zD,UAAUoiB,MAAQ,EAAGuxC,EAAO3zD,UAAUqiB,OAAS,GAAGpE,aACpG01C,EAAOzzD,YAAa,CACpB,IAAKpmD,MAAMC,QAAQ45G,EAAOzzD,aACtB,MAAMhpD,UAAU,gDACpBwvE,EAAQxmB,YAAc,GACtB,IAAK,IAAI5oD,EAAI,EAAGA,EAAIq8G,EAAOzzD,YAAYzoD,SAAUH,EAAG,CAChD,GAAqC,iBAA1Bq8G,EAAOzzD,YAAY5oD,GAC1B,MAAMJ,UAAU,iDACpBwvE,EAAQxmB,YAAY5oD,GAAKg7G,EAAMvuG,KAAK0wG,mBAAmBf,WAAWC,EAAOzzD,YAAY5oD,GACzF,CACJ,CAkBA,GAjB2B,MAAvBq8G,EAAOx/C,eACPuS,EAAQvS,aAAe40B,OAAO4qB,EAAOx/C,eACX,MAA1Bw/C,EAAOv/C,kBACPsS,EAAQtS,gBAAkB20B,OAAO4qB,EAAOv/C,kBACvB,MAAjBu/C,EAAOxzD,SACPumB,EAAQvmB,OAAS4oC,OAAO4qB,EAAOxzD,SACR,MAAvBwzD,EAAOt/C,eACH+9C,EAAMlwC,MACLwE,EAAQrS,aAAe+9C,EAAMlwC,KAAKC,UAAUwxC,EAAOt/C,eAAe4N,UAAW,EAC1C,iBAAxB0xC,EAAOt/C,aACnBqS,EAAQrS,aAAelT,SAASwyD,EAAOt/C,aAAc,IACjB,iBAAxBs/C,EAAOt/C,aACnBqS,EAAQrS,aAAes/C,EAAOt/C,aACM,iBAAxBs/C,EAAOt/C,eACnBqS,EAAQrS,aAAe,IAAI+9C,EAAMwB,SAASD,EAAOt/C,aAAa+N,MAAQ,EAAGuxC,EAAOt/C,aAAagO,OAAS,GAAGpE,aACzF,MAApB01C,EAAO1qD,YACPyd,EAAQzd,UAAY8/B,OAAO4qB,EAAO1qD,YAClB,MAAhB0qD,EAAO5sE,MAAe,CACtB,GAA4B,iBAAjB4sE,EAAO5sE,MACd,MAAM7vC,UAAU,2CACpBwvE,EAAQ3/B,MAAQurE,EAAMvuG,KAAK40C,WAAW+6D,WAAWC,EAAO5sE,MAC5D,CACA,GAAI4sE,EAAOa,cAAe,CACtB,IAAK16G,MAAMC,QAAQ45G,EAAOa,eACtB,MAAMt9G,UAAU,kDAEpB,IADAwvE,EAAQ8tC,cAAgB,GACfl9G,EAAI,EAAGA,EAAIq8G,EAAOa,cAAc/8G,SAAUH,EAAG,CAClD,GAAuC,iBAA5Bq8G,EAAOa,cAAcl9G,GAC5B,MAAMJ,UAAU,mDACpBwvE,EAAQ8tC,cAAcl9G,GAAKg7G,EAAMvuG,KAAK2wG,uBAAuBhB,WAAWC,EAAOa,cAAcl9G,GACjG,CACJ,CACA,OAAOovE,CACX,EAWA3mB,EAAW8zD,SAAW,SAAkBntC,EAAS9rE,GACxCA,IACDA,EAAU,CAAC,GACf,IAAI+4G,EAAS,CAAC,EAKd,IAJI/4G,EAAQk5G,QAAUl5G,EAAQm5G,YAC1BJ,EAAOzzD,YAAc,GACrByzD,EAAOa,cAAgB,IAEvB55G,EAAQm5G,SAAU,CAClB,GAAI3B,EAAMlwC,KAAM,CACZ,IAAI8xC,EAAO,IAAI5B,EAAMlwC,KAAK,EAAG,GAAG,GAChCyxC,EAAO3zD,UAAYplD,EAAQq5G,QAAUlrB,OAASirB,EAAKvjE,WAAa71C,EAAQq5G,QAAU35G,OAAS05G,EAAK/1C,WAAa+1C,CACjH,MACIL,EAAO3zD,UAAYplD,EAAQq5G,QAAUlrB,OAAS,IAAM,EACxD4qB,EAAOx/C,aAAe,GACtBw/C,EAAOv/C,gBAAkB,GACzBu/C,EAAOxzD,OAAS,GACZiyD,EAAMlwC,MACF8xC,EAAO,IAAI5B,EAAMlwC,KAAK,EAAG,GAAG,GAChCyxC,EAAOt/C,aAAez5D,EAAQq5G,QAAUlrB,OAASirB,EAAKvjE,WAAa71C,EAAQq5G,QAAU35G,OAAS05G,EAAK/1C,WAAa+1C,GAEhHL,EAAOt/C,aAAez5D,EAAQq5G,QAAUlrB,OAAS,IAAM,EAC3D4qB,EAAO1qD,UAAY,GACnB0qD,EAAO5sE,MAAQ,IACnB,CAqBA,GApByB,MAArB2/B,EAAQ1mB,WAAqB0mB,EAAQzmE,eAAe,eACnB,iBAAtBymE,EAAQ1mB,UACf2zD,EAAO3zD,UAAYplD,EAAQq5G,QAAUlrB,OAASA,OAAOriB,EAAQ1mB,WAAa0mB,EAAQ1mB,UAElF2zD,EAAO3zD,UAAYplD,EAAQq5G,QAAUlrB,OAASqpB,EAAMlwC,KAAK6yB,UAAUtkD,SAASvwC,KAAKwmE,EAAQ1mB,WAAaplD,EAAQq5G,QAAU35G,OAAS,IAAI83G,EAAMwB,SAASltC,EAAQ1mB,UAAUoiB,MAAQ,EAAGsE,EAAQ1mB,UAAUqiB,OAAS,GAAGpE,WAAayI,EAAQ1mB,WAChN,MAAxB0mB,EAAQvS,cAAwBuS,EAAQzmE,eAAe,kBACvD0zG,EAAOx/C,aAAeuS,EAAQvS,cACH,MAA3BuS,EAAQtS,iBAA2BsS,EAAQzmE,eAAe,qBAC1D0zG,EAAOv/C,gBAAkBsS,EAAQtS,iBACf,MAAlBsS,EAAQvmB,QAAkBumB,EAAQzmE,eAAe,YACjD0zG,EAAOxzD,OAASumB,EAAQvmB,QACA,MAAxBumB,EAAQrS,cAAwBqS,EAAQzmE,eAAe,kBACnB,iBAAzBymE,EAAQrS,aACfs/C,EAAOt/C,aAAez5D,EAAQq5G,QAAUlrB,OAASA,OAAOriB,EAAQrS,cAAgBqS,EAAQrS,aAExFs/C,EAAOt/C,aAAez5D,EAAQq5G,QAAUlrB,OAASqpB,EAAMlwC,KAAK6yB,UAAUtkD,SAASvwC,KAAKwmE,EAAQrS,cAAgBz5D,EAAQq5G,QAAU35G,OAAS,IAAI83G,EAAMwB,SAASltC,EAAQrS,aAAa+N,MAAQ,EAAGsE,EAAQrS,aAAagO,OAAS,GAAGpE,WAAayI,EAAQrS,cAC/N,MAArBqS,EAAQzd,WAAqByd,EAAQzmE,eAAe,eACpD0zG,EAAO1qD,UAAYyd,EAAQzd,WACV,MAAjByd,EAAQ3/B,OAAiB2/B,EAAQzmE,eAAe,WAChD0zG,EAAO5sE,MAAQurE,EAAMvuG,KAAK40C,WAAWk7D,SAASntC,EAAQ3/B,MAAOnsC,IAC7D8rE,EAAQxmB,aAAewmB,EAAQxmB,YAAYzoD,OAAQ,CACnDk8G,EAAOzzD,YAAc,GACrB,IAAK,IAAI7hD,EAAI,EAAGA,EAAIqoE,EAAQxmB,YAAYzoD,SAAU4G,EAC9Cs1G,EAAOzzD,YAAY7hD,GAAKi0G,EAAMvuG,KAAK0wG,mBAAmBZ,SAASntC,EAAQxmB,YAAY7hD,GAAIzD,EAC/F,CACA,GAAI8rE,EAAQ8tC,eAAiB9tC,EAAQ8tC,cAAc/8G,OAE/C,IADAk8G,EAAOa,cAAgB,GACdn2G,EAAI,EAAGA,EAAIqoE,EAAQ8tC,cAAc/8G,SAAU4G,EAChDs1G,EAAOa,cAAcn2G,GAAKi0G,EAAMvuG,KAAK2wG,uBAAuBb,SAASntC,EAAQ8tC,cAAcn2G,GAAIzD,GAEvG,OAAO+4G,CACX,EASA5zD,EAAWg1C,UAAUkW,OAAS,WAC1B,OAAOpzG,KAAKD,YAAYi8G,SAASh8G,KAAMk6G,EAAUM,KAAKgC,cAC1D,EAEOt0D,CACV,CAvbiB,GAyblBh8C,EAAK2wG,uBAAyB,WAkB1B,SAASA,EAAuBjC,GAC5B,GAAIA,EACA,IAAK,IAAI59F,EAAOpV,OAAOoV,KAAK49F,GAAan7G,EAAI,EAAGA,EAAIud,EAAKpd,SAAUH,EACpC,MAAvBm7G,EAAW59F,EAAKvd,MAChBO,KAAKgd,EAAKvd,IAAMm7G,EAAW59F,EAAKvd,IAChD,CAwLA,OAhLAo9G,EAAuB3f,UAAU/0F,IAAM,GAQvC00G,EAAuB3f,UAAU58F,MAAQ,GAUzCu8G,EAAuBn2D,OAAS,SAAgBk0D,GAC5C,OAAO,IAAIiC,EAAuBjC,EACtC,EAWAiC,EAAuB7hG,OAAS,SAAgB6zD,EAASmsC,GAOrD,OANKA,IACDA,EAASX,EAAQ3zD,UACF,MAAfmoB,EAAQ1mE,KAAe0mE,EAAQzmE,eAAe,QAC9C4yG,EAAOC,OAA8B,IAAI3M,OAAOz/B,EAAQ1mE,KACvC,MAAjB0mE,EAAQvuE,OAAiBuuE,EAAQzmE,eAAe,UAChD4yG,EAAOC,OAA8B,IAAI3M,OAAOz/B,EAAQvuE,OACrD06G,CACX,EAWA6B,EAAuBtB,gBAAkB,SAAyB1sC,EAASmsC,GACvE,OAAOh7G,KAAKgb,OAAO6zD,EAASmsC,GAAQK,QACxC,EAaAwB,EAAuB5hG,OAAS,SAAgBugG,EAAQ57G,GAC9C47G,aAAkBrB,IACpBqB,EAASrB,EAAQzzD,OAAO80D,IAE5B,IADA,IAAIz2E,OAAiBxlC,IAAXK,EAAuB47G,EAAOroE,IAAMqoE,EAAOhvC,IAAM5sE,EAAQivE,EAAU,IAAI4rC,EAAMvuG,KAAK2wG,uBACrFrB,EAAOhvC,IAAMznC,GAAK,CACrB,IAAI2gD,EAAM81B,EAAOP,SACjB,OAAQv1B,IAAQ,GAChB,KAAK,EACD7W,EAAQ1mE,IAAMqzG,EAAOlN,SACrB,MACJ,KAAK,EACDz/B,EAAQvuE,MAAQk7G,EAAOlN,SACvB,MACJ,QACIkN,EAAOE,SAAe,EAANh2B,GAGxB,CACA,OAAO7W,CACX,EAYAguC,EAAuBlB,gBAAkB,SAAyBH,GAG9D,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBx7G,KAAKib,OAAOugG,EAAQA,EAAOP,SACtC,EAUA4B,EAAuBjB,OAAS,SAAgB/sC,GAC5C,MAAuB,iBAAZA,GAAoC,OAAZA,EACxB,kBACQ,MAAfA,EAAQ1mE,KAAe0mE,EAAQzmE,eAAe,SACzCmyG,EAAMz1G,SAAS+pE,EAAQ1mE,KACjB,uBACM,MAAjB0mE,EAAQvuE,OAAiBuuE,EAAQzmE,eAAe,WAC3CmyG,EAAMz1G,SAAS+pE,EAAQvuE,OACjB,yBACR,IACX,EAUAu8G,EAAuBhB,WAAa,SAAoBC,GACpD,GAAIA,aAAkBrB,EAAMvuG,KAAK2wG,uBAC7B,OAAOf,EACX,IAAIjtC,EAAU,IAAI4rC,EAAMvuG,KAAK2wG,uBAK7B,OAJkB,MAAdf,EAAO3zG,MACP0mE,EAAQ1mE,IAAM+oF,OAAO4qB,EAAO3zG,MACZ,MAAhB2zG,EAAOx7G,QACPuuE,EAAQvuE,MAAQ4wF,OAAO4qB,EAAOx7G,QAC3BuuE,CACX,EAWAguC,EAAuBb,SAAW,SAAkBntC,EAAS9rE,GACpDA,IACDA,EAAU,CAAC,GACf,IAAI+4G,EAAS,CAAC,EASd,OARI/4G,EAAQm5G,WACRJ,EAAO3zG,IAAM,GACb2zG,EAAOx7G,MAAQ,IAEA,MAAfuuE,EAAQ1mE,KAAe0mE,EAAQzmE,eAAe,SAC9C0zG,EAAO3zG,IAAM0mE,EAAQ1mE,KACJ,MAAjB0mE,EAAQvuE,OAAiBuuE,EAAQzmE,eAAe,WAChD0zG,EAAOx7G,MAAQuuE,EAAQvuE,OACpBw7G,CACX,EASAe,EAAuB3f,UAAUkW,OAAS,WACtC,OAAOpzG,KAAKD,YAAYi8G,SAASh8G,KAAMk6G,EAAUM,KAAKgC,cAC1D,EAEOK,CACV,CAhN6B,GAkN9B3wG,EAAK4wG,iBAAmB,WAkBpB,SAASA,EAAiBlC,GAEtB,GADA56G,KAAK+8G,0BAA4B,GAC7BnC,EACA,IAAK,IAAI59F,EAAOpV,OAAOoV,KAAK49F,GAAan7G,EAAI,EAAGA,EAAIud,EAAKpd,SAAUH,EACpC,MAAvBm7G,EAAW59F,EAAKvd,MAChBO,KAAKgd,EAAKvd,IAAMm7G,EAAW59F,EAAKvd,IAChD,CA4MA,OApMAq9G,EAAiB5f,UAAU8f,WAAa,GAQxCF,EAAiB5f,UAAU6f,0BAA4BxC,EAAMQ,WAU7D+B,EAAiBp2D,OAAS,SAAgBk0D,GACtC,OAAO,IAAIkC,EAAiBlC,EAChC,EAWAkC,EAAiB9hG,OAAS,SAAgB6zD,EAASmsC,GAK/C,GAJKA,IACDA,EAASX,EAAQ3zD,UACK,MAAtBmoB,EAAQmuC,YAAsBnuC,EAAQzmE,eAAe,eACrD4yG,EAAOC,OAA8B,IAAI3M,OAAOz/B,EAAQmuC,YACnB,MAArCnuC,EAAQkuC,2BAAqCluC,EAAQkuC,0BAA0Bn9G,OAC/E,IAAK,IAAIH,EAAI,EAAGA,EAAIovE,EAAQkuC,0BAA0Bn9G,SAAUH,EAC5Dg7G,EAAMvuG,KAAK2wG,uBAAuB7hG,OAAO6zD,EAAQkuC,0BAA0Bt9G,GAAIu7G,EAAOC,OAA8B,IAAIG,QAAQC,SACxI,OAAOL,CACX,EAWA8B,EAAiBvB,gBAAkB,SAAyB1sC,EAASmsC,GACjE,OAAOh7G,KAAKgb,OAAO6zD,EAASmsC,GAAQK,QACxC,EAaAyB,EAAiB7hG,OAAS,SAAgBugG,EAAQ57G,GACxC47G,aAAkBrB,IACpBqB,EAASrB,EAAQzzD,OAAO80D,IAE5B,IADA,IAAIz2E,OAAiBxlC,IAAXK,EAAuB47G,EAAOroE,IAAMqoE,EAAOhvC,IAAM5sE,EAAQivE,EAAU,IAAI4rC,EAAMvuG,KAAK4wG,iBACrFtB,EAAOhvC,IAAMznC,GAAK,CACrB,IAAI2gD,EAAM81B,EAAOP,SACjB,OAAQv1B,IAAQ,GAChB,KAAK,EACD7W,EAAQmuC,WAAaxB,EAAOlN,SAC5B,MACJ,KAAK,EACKz/B,EAAQkuC,2BAA6BluC,EAAQkuC,0BAA0Bn9G,SACzEivE,EAAQkuC,0BAA4B,IACxCluC,EAAQkuC,0BAA0Bl9G,KAAK46G,EAAMvuG,KAAK2wG,uBAAuB5hG,OAAOugG,EAAQA,EAAOP,WAC/F,MACJ,QACIO,EAAOE,SAAe,EAANh2B,GAGxB,CACA,OAAO7W,CACX,EAYAiuC,EAAiBnB,gBAAkB,SAAyBH,GAGxD,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBx7G,KAAKib,OAAOugG,EAAQA,EAAOP,SACtC,EAUA6B,EAAiBlB,OAAS,SAAgB/sC,GACtC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAA0B,MAAtBA,EAAQmuC,YAAsBnuC,EAAQzmE,eAAe,gBAChDmyG,EAAMz1G,SAAS+pE,EAAQmuC,YACxB,MAAO,8BACf,GAAyC,MAArCnuC,EAAQkuC,2BAAqCluC,EAAQzmE,eAAe,6BAA8B,CAClG,IAAKnG,MAAMC,QAAQ2sE,EAAQkuC,2BACvB,MAAO,4CACX,IAAK,IAAIt9G,EAAI,EAAGA,EAAIovE,EAAQkuC,0BAA0Bn9G,SAAUH,EAAG,CAC/D,IAAIysC,EAAQuuE,EAAMvuG,KAAK2wG,uBAAuBjB,OAAO/sC,EAAQkuC,0BAA0Bt9G,IACvF,GAAIysC,EACA,MAAO,6BAA+BA,CAC9C,CACJ,CACA,OAAO,IACX,EAUA4wE,EAAiBjB,WAAa,SAAoBC,GAC9C,GAAIA,aAAkBrB,EAAMvuG,KAAK4wG,iBAC7B,OAAOhB,EACX,IAAIjtC,EAAU,IAAI4rC,EAAMvuG,KAAK4wG,iBAG7B,GAFyB,MAArBhB,EAAOkB,aACPnuC,EAAQmuC,WAAa9rB,OAAO4qB,EAAOkB,aACnClB,EAAOiB,0BAA2B,CAClC,IAAK96G,MAAMC,QAAQ45G,EAAOiB,2BACtB,MAAM19G,UAAU,oEACpBwvE,EAAQkuC,0BAA4B,GACpC,IAAK,IAAIt9G,EAAI,EAAGA,EAAIq8G,EAAOiB,0BAA0Bn9G,SAAUH,EAAG,CAC9D,GAAmD,iBAAxCq8G,EAAOiB,0BAA0Bt9G,GACxC,MAAMJ,UAAU,qEACpBwvE,EAAQkuC,0BAA0Bt9G,GAAKg7G,EAAMvuG,KAAK2wG,uBAAuBhB,WAAWC,EAAOiB,0BAA0Bt9G,GACzH,CACJ,CACA,OAAOovE,CACX,EAWAiuC,EAAiBd,SAAW,SAAkBntC,EAAS9rE,GAC9CA,IACDA,EAAU,CAAC,GACf,IAAI+4G,EAAS,CAAC,EAOd,IANI/4G,EAAQk5G,QAAUl5G,EAAQm5G,YAC1BJ,EAAOiB,0BAA4B,IACnCh6G,EAAQm5G,WACRJ,EAAOkB,WAAa,IACE,MAAtBnuC,EAAQmuC,YAAsBnuC,EAAQzmE,eAAe,gBACrD0zG,EAAOkB,WAAanuC,EAAQmuC,YAC5BnuC,EAAQkuC,2BAA6BluC,EAAQkuC,0BAA0Bn9G,OAAQ,CAC/Ek8G,EAAOiB,0BAA4B,GACnC,IAAK,IAAIv2G,EAAI,EAAGA,EAAIqoE,EAAQkuC,0BAA0Bn9G,SAAU4G,EAC5Ds1G,EAAOiB,0BAA0Bv2G,GAAKi0G,EAAMvuG,KAAK2wG,uBAAuBb,SAASntC,EAAQkuC,0BAA0Bv2G,GAAIzD,EAC/H,CACA,OAAO+4G,CACX,EASAgB,EAAiB5f,UAAUkW,OAAS,WAChC,OAAOpzG,KAAKD,YAAYi8G,SAASh8G,KAAMk6G,EAAUM,KAAKgC,cAC1D,EAEOM,CACV,CArOuB,GAuOxB5wG,EAAK40C,WAAa,WAwBd,SAASA,EAAW85D,GAOhB,GANA56G,KAAKia,KAAO,GACZja,KAAKq/C,YAAc,GACnBr/C,KAAKwjB,MAAQ,GACbxjB,KAAK4S,OAAS,GACd5S,KAAKu/C,UAAY,GACjBv/C,KAAKi9G,uBAAyB,GAC1BrC,EACA,IAAK,IAAI59F,EAAOpV,OAAOoV,KAAK49F,GAAan7G,EAAI,EAAGA,EAAIud,EAAKpd,SAAUH,EACpC,MAAvBm7G,EAAW59F,EAAKvd,MAChBO,KAAKgd,EAAKvd,IAAMm7G,EAAW59F,EAAKvd,IAChD,CAgbA,OAxaAqhD,EAAWo8C,UAAUjjF,KAAOsgG,EAAMQ,WAQlCj6D,EAAWo8C,UAAUl+F,KAAO,GAQ5B8hD,EAAWo8C,UAAU79C,YAAck7D,EAAMQ,WAQzCj6D,EAAWo8C,UAAU9rC,UAAY,GAQjCtQ,EAAWo8C,UAAU15E,MAAQ+2F,EAAMQ,WAQnCj6D,EAAWo8C,UAAUtqF,OAAS2nG,EAAMQ,WAQpCj6D,EAAWo8C,UAAU39C,UAAYg7D,EAAMQ,WAQvCj6D,EAAWo8C,UAAU+f,uBAAyB1C,EAAMQ,WAUpDj6D,EAAW4F,OAAS,SAAgBk0D,GAChC,OAAO,IAAI95D,EAAW85D,EAC1B,EAWA95D,EAAW9lC,OAAS,SAAgB6zD,EAASmsC,GAGzC,GAFKA,IACDA,EAASX,EAAQ3zD,UACD,MAAhBmoB,EAAQ50D,MAAgB40D,EAAQ50D,KAAKra,OACrC,IAAK,IAAIH,EAAI,EAAGA,EAAIovE,EAAQ50D,KAAKra,SAAUH,EACvCg7G,EAAMvuG,KAAK2zC,UAAU7kC,OAAO6zD,EAAQ50D,KAAKxa,GAAIu7G,EAAOC,OAA8B,IAAIG,QAAQC,SAGtG,GAFoB,MAAhBxsC,EAAQ7vE,MAAgB6vE,EAAQzmE,eAAe,SAC/C4yG,EAAOC,OAA8B,IAAI3M,OAAOz/B,EAAQ7vE,MACjC,MAAvB6vE,EAAQxvB,aAAuBwvB,EAAQxvB,YAAYz/C,OACnD,IAASH,EAAI,EAAGA,EAAIovE,EAAQxvB,YAAYz/C,SAAUH,EAC9Cg7G,EAAMvuG,KAAK64D,YAAY/pD,OAAO6zD,EAAQxvB,YAAY5/C,GAAIu7G,EAAOC,OAA8B,IAAIG,QAAQC,SAG/G,GAFyB,MAArBxsC,EAAQzd,WAAqByd,EAAQzmE,eAAe,cACpD4yG,EAAOC,OAA+B,IAAI3M,OAAOz/B,EAAQzd,WACxC,MAAjByd,EAAQrrD,OAAiBqrD,EAAQrrD,MAAM5jB,OACvC,IAASH,EAAI,EAAGA,EAAIovE,EAAQrrD,MAAM5jB,SAAUH,EACxCg7G,EAAMvuG,KAAKuwG,eAAezhG,OAAO6zD,EAAQrrD,MAAM/jB,GAAIu7G,EAAOC,OAA+B,IAAIG,QAAQC,SAC7G,GAAsB,MAAlBxsC,EAAQj8D,QAAkBi8D,EAAQj8D,OAAOhT,OACzC,IAASH,EAAI,EAAGA,EAAIovE,EAAQj8D,OAAOhT,SAAUH,EACzCg7G,EAAMvuG,KAAKuwG,eAAezhG,OAAO6zD,EAAQj8D,OAAOnT,GAAIu7G,EAAOC,OAA+B,IAAIG,QAAQC,SAC9G,GAAyB,MAArBxsC,EAAQtvB,WAAqBsvB,EAAQtvB,UAAU3/C,OAC/C,IAASH,EAAI,EAAGA,EAAIovE,EAAQtvB,UAAU3/C,SAAUH,EAC5Cg7G,EAAMvuG,KAAKuwG,eAAezhG,OAAO6zD,EAAQtvB,UAAU9/C,GAAIu7G,EAAOC,OAA+B,KAAKG,QAAQC,SAClH,GAAsC,MAAlCxsC,EAAQouC,wBAAkCpuC,EAAQouC,uBAAuBr9G,OACzE,IAASH,EAAI,EAAGA,EAAIovE,EAAQouC,uBAAuBr9G,SAAUH,EACzDg7G,EAAMvuG,KAAK4wG,iBAAiB9hG,OAAO6zD,EAAQouC,uBAAuBx9G,GAAIu7G,EAAOC,OAA+B,KAAKG,QAAQC,SACjI,OAAOL,CACX,EAWAl6D,EAAWy6D,gBAAkB,SAAyB1sC,EAASmsC,GAC3D,OAAOh7G,KAAKgb,OAAO6zD,EAASmsC,GAAQK,QACxC,EAaAv6D,EAAW7lC,OAAS,SAAgBugG,EAAQ57G,GAClC47G,aAAkBrB,IACpBqB,EAASrB,EAAQzzD,OAAO80D,IAE5B,IADA,IAAIz2E,OAAiBxlC,IAAXK,EAAuB47G,EAAOroE,IAAMqoE,EAAOhvC,IAAM5sE,EAAQivE,EAAU,IAAI4rC,EAAMvuG,KAAK40C,WACrF06D,EAAOhvC,IAAMznC,GAAK,CACrB,IAAI2gD,EAAM81B,EAAOP,SACjB,OAAQv1B,IAAQ,GAChB,KAAK,EACK7W,EAAQ50D,MAAQ40D,EAAQ50D,KAAKra,SAC/BivE,EAAQ50D,KAAO,IACnB40D,EAAQ50D,KAAKpa,KAAK46G,EAAMvuG,KAAK2zC,UAAU5kC,OAAOugG,EAAQA,EAAOP,WAC7D,MACJ,KAAK,EACDpsC,EAAQ7vE,KAAOw8G,EAAOlN,SACtB,MACJ,KAAK,EACKz/B,EAAQxvB,aAAewvB,EAAQxvB,YAAYz/C,SAC7CivE,EAAQxvB,YAAc,IAC1BwvB,EAAQxvB,YAAYx/C,KAAK46G,EAAMvuG,KAAK64D,YAAY9pD,OAAOugG,EAAQA,EAAOP,WACtE,MACJ,KAAK,GACDpsC,EAAQzd,UAAYoqD,EAAOlN,SAC3B,MACJ,KAAK,GACKz/B,EAAQrrD,OAASqrD,EAAQrrD,MAAM5jB,SACjCivE,EAAQrrD,MAAQ,IACpBqrD,EAAQrrD,MAAM3jB,KAAK46G,EAAMvuG,KAAKuwG,eAAexhG,OAAOugG,EAAQA,EAAOP,WACnE,MACJ,KAAK,GACKpsC,EAAQj8D,QAAUi8D,EAAQj8D,OAAOhT,SACnCivE,EAAQj8D,OAAS,IACrBi8D,EAAQj8D,OAAO/S,KAAK46G,EAAMvuG,KAAKuwG,eAAexhG,OAAOugG,EAAQA,EAAOP,WACpE,MACJ,KAAK,GACKpsC,EAAQtvB,WAAasvB,EAAQtvB,UAAU3/C,SACzCivE,EAAQtvB,UAAY,IACxBsvB,EAAQtvB,UAAU1/C,KAAK46G,EAAMvuG,KAAKuwG,eAAexhG,OAAOugG,EAAQA,EAAOP,WACvE,MACJ,KAAK,GACKpsC,EAAQouC,wBAA0BpuC,EAAQouC,uBAAuBr9G,SACnEivE,EAAQouC,uBAAyB,IACrCpuC,EAAQouC,uBAAuBp9G,KAAK46G,EAAMvuG,KAAK4wG,iBAAiB7hG,OAAOugG,EAAQA,EAAOP,WACtF,MACJ,QACIO,EAAOE,SAAe,EAANh2B,GAGxB,CACA,OAAO7W,CACX,EAYA/tB,EAAW66D,gBAAkB,SAAyBH,GAGlD,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBx7G,KAAKib,OAAOugG,EAAQA,EAAOP,SACtC,EAUAn6D,EAAW86D,OAAS,SAAgB/sC,GAChC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAoB,MAAhBA,EAAQ50D,MAAgB40D,EAAQzmE,eAAe,QAAS,CACxD,IAAKnG,MAAMC,QAAQ2sE,EAAQ50D,MACvB,MAAO,uBACX,IAAK,IAAIxa,EAAI,EAAGA,EAAIovE,EAAQ50D,KAAKra,SAAUH,EAEvC,GADIysC,EAAQuuE,EAAMvuG,KAAK2zC,UAAU+7D,OAAO/sC,EAAQ50D,KAAKxa,IAEjD,MAAO,QAAUysC,CAE7B,CACA,GAAoB,MAAhB2iC,EAAQ7vE,MAAgB6vE,EAAQzmE,eAAe,UAC1CmyG,EAAMz1G,SAAS+pE,EAAQ7vE,MACxB,MAAO,wBACf,GAA2B,MAAvB6vE,EAAQxvB,aAAuBwvB,EAAQzmE,eAAe,eAAgB,CACtE,IAAKnG,MAAMC,QAAQ2sE,EAAQxvB,aACvB,MAAO,8BACX,IAAS5/C,EAAI,EAAGA,EAAIovE,EAAQxvB,YAAYz/C,SAAUH,EAE9C,GADIysC,EAAQuuE,EAAMvuG,KAAK64D,YAAY62C,OAAO/sC,EAAQxvB,YAAY5/C,IAE1D,MAAO,eAAiBysC,CAEpC,CACA,GAAyB,MAArB2iC,EAAQzd,WAAqByd,EAAQzmE,eAAe,eAC/CmyG,EAAMz1G,SAAS+pE,EAAQzd,WACxB,MAAO,6BACf,GAAqB,MAAjByd,EAAQrrD,OAAiBqrD,EAAQzmE,eAAe,SAAU,CAC1D,IAAKnG,MAAMC,QAAQ2sE,EAAQrrD,OACvB,MAAO,wBACX,IAAS/jB,EAAI,EAAGA,EAAIovE,EAAQrrD,MAAM5jB,SAAUH,EAExC,GADIysC,EAAQuuE,EAAMvuG,KAAKuwG,eAAeb,OAAO/sC,EAAQrrD,MAAM/jB,IAEvD,MAAO,SAAWysC,CAE9B,CACA,GAAsB,MAAlB2iC,EAAQj8D,QAAkBi8D,EAAQzmE,eAAe,UAAW,CAC5D,IAAKnG,MAAMC,QAAQ2sE,EAAQj8D,QACvB,MAAO,yBACX,IAASnT,EAAI,EAAGA,EAAIovE,EAAQj8D,OAAOhT,SAAUH,EAEzC,GADIysC,EAAQuuE,EAAMvuG,KAAKuwG,eAAeb,OAAO/sC,EAAQj8D,OAAOnT,IAExD,MAAO,UAAYysC,CAE/B,CACA,GAAyB,MAArB2iC,EAAQtvB,WAAqBsvB,EAAQzmE,eAAe,aAAc,CAClE,IAAKnG,MAAMC,QAAQ2sE,EAAQtvB,WACvB,MAAO,4BACX,IAAS9/C,EAAI,EAAGA,EAAIovE,EAAQtvB,UAAU3/C,SAAUH,EAE5C,GADIysC,EAAQuuE,EAAMvuG,KAAKuwG,eAAeb,OAAO/sC,EAAQtvB,UAAU9/C,IAE3D,MAAO,aAAeysC,CAElC,CACA,GAAsC,MAAlC2iC,EAAQouC,wBAAkCpuC,EAAQzmE,eAAe,0BAA2B,CAC5F,IAAKnG,MAAMC,QAAQ2sE,EAAQouC,wBACvB,MAAO,yCACX,IAASx9G,EAAI,EAAGA,EAAIovE,EAAQouC,uBAAuBr9G,SAAUH,EAAG,CAC5D,IAAIysC,EACJ,GADIA,EAAQuuE,EAAMvuG,KAAK4wG,iBAAiBlB,OAAO/sC,EAAQouC,uBAAuBx9G,IAE1E,MAAO,0BAA4BysC,CAC3C,CACJ,CACA,OAAO,IACX,EAUA4U,EAAW+6D,WAAa,SAAoBC,GACxC,GAAIA,aAAkBrB,EAAMvuG,KAAK40C,WAC7B,OAAOg7D,EACX,IAAIjtC,EAAU,IAAI4rC,EAAMvuG,KAAK40C,WAC7B,GAAIg7D,EAAO7hG,KAAM,CACb,IAAKhY,MAAMC,QAAQ45G,EAAO7hG,MACtB,MAAM5a,UAAU,yCACpBwvE,EAAQ50D,KAAO,GACf,IAAK,IAAIxa,EAAI,EAAGA,EAAIq8G,EAAO7hG,KAAKra,SAAUH,EAAG,CACzC,GAA8B,iBAAnBq8G,EAAO7hG,KAAKxa,GACnB,MAAMJ,UAAU,0CACpBwvE,EAAQ50D,KAAKxa,GAAKg7G,EAAMvuG,KAAK2zC,UAAUg8D,WAAWC,EAAO7hG,KAAKxa,GAClE,CACJ,CAGA,GAFmB,MAAfq8G,EAAO98G,OACP6vE,EAAQ7vE,KAAOkyF,OAAO4qB,EAAO98G,OAC7B88G,EAAOz8D,YAAa,CACpB,IAAKp9C,MAAMC,QAAQ45G,EAAOz8D,aACtB,MAAMhgD,UAAU,gDAEpB,IADAwvE,EAAQxvB,YAAc,GACb5/C,EAAI,EAAGA,EAAIq8G,EAAOz8D,YAAYz/C,SAAUH,EAAG,CAChD,GAAqC,iBAA1Bq8G,EAAOz8D,YAAY5/C,GAC1B,MAAMJ,UAAU,iDACpBwvE,EAAQxvB,YAAY5/C,GAAKg7G,EAAMvuG,KAAK64D,YAAY82C,WAAWC,EAAOz8D,YAAY5/C,GAClF,CACJ,CAGA,GAFwB,MAApBq8G,EAAO1qD,YACPyd,EAAQzd,UAAY8/B,OAAO4qB,EAAO1qD,YAClC0qD,EAAOt4F,MAAO,CACd,IAAKvhB,MAAMC,QAAQ45G,EAAOt4F,OACtB,MAAMnkB,UAAU,0CAEpB,IADAwvE,EAAQrrD,MAAQ,GACP/jB,EAAI,EAAGA,EAAIq8G,EAAOt4F,MAAM5jB,SAAUH,EAAG,CAC1C,GAA+B,iBAApBq8G,EAAOt4F,MAAM/jB,GACpB,MAAMJ,UAAU,2CACpBwvE,EAAQrrD,MAAM/jB,GAAKg7G,EAAMvuG,KAAKuwG,eAAeZ,WAAWC,EAAOt4F,MAAM/jB,GACzE,CACJ,CACA,GAAIq8G,EAAOlpG,OAAQ,CACf,IAAK3Q,MAAMC,QAAQ45G,EAAOlpG,QACtB,MAAMvT,UAAU,2CAEpB,IADAwvE,EAAQj8D,OAAS,GACRnT,EAAI,EAAGA,EAAIq8G,EAAOlpG,OAAOhT,SAAUH,EAAG,CAC3C,GAAgC,iBAArBq8G,EAAOlpG,OAAOnT,GACrB,MAAMJ,UAAU,4CACpBwvE,EAAQj8D,OAAOnT,GAAKg7G,EAAMvuG,KAAKuwG,eAAeZ,WAAWC,EAAOlpG,OAAOnT,GAC3E,CACJ,CACA,GAAIq8G,EAAOv8D,UAAW,CAClB,IAAKt9C,MAAMC,QAAQ45G,EAAOv8D,WACtB,MAAMlgD,UAAU,8CAEpB,IADAwvE,EAAQtvB,UAAY,GACX9/C,EAAI,EAAGA,EAAIq8G,EAAOv8D,UAAU3/C,SAAUH,EAAG,CAC9C,GAAmC,iBAAxBq8G,EAAOv8D,UAAU9/C,GACxB,MAAMJ,UAAU,+CACpBwvE,EAAQtvB,UAAU9/C,GAAKg7G,EAAMvuG,KAAKuwG,eAAeZ,WAAWC,EAAOv8D,UAAU9/C,GACjF,CACJ,CACA,GAAIq8G,EAAOmB,uBAAwB,CAC/B,IAAKh7G,MAAMC,QAAQ45G,EAAOmB,wBACtB,MAAM59G,UAAU,2DAEpB,IADAwvE,EAAQouC,uBAAyB,GACxBx9G,EAAI,EAAGA,EAAIq8G,EAAOmB,uBAAuBr9G,SAAUH,EAAG,CAC3D,GAAgD,iBAArCq8G,EAAOmB,uBAAuBx9G,GACrC,MAAMJ,UAAU,4DACpBwvE,EAAQouC,uBAAuBx9G,GAAKg7G,EAAMvuG,KAAK4wG,iBAAiBjB,WAAWC,EAAOmB,uBAAuBx9G,GAC7G,CACJ,CACA,OAAOovE,CACX,EAWA/tB,EAAWk7D,SAAW,SAAkBntC,EAAS9rE,GACxCA,IACDA,EAAU,CAAC,GACf,IAAI+4G,EAAS,CAAC,EAad,IAZI/4G,EAAQk5G,QAAUl5G,EAAQm5G,YAC1BJ,EAAO7hG,KAAO,GACd6hG,EAAOz8D,YAAc,GACrBy8D,EAAOt4F,MAAQ,GACfs4F,EAAOlpG,OAAS,GAChBkpG,EAAOv8D,UAAY,GACnBu8D,EAAOmB,uBAAyB,IAEhCl6G,EAAQm5G,WACRJ,EAAO98G,KAAO,GACd88G,EAAO1qD,UAAY,IAEnByd,EAAQ50D,MAAQ40D,EAAQ50D,KAAKra,OAAQ,CACrCk8G,EAAO7hG,KAAO,GACd,IAAK,IAAIzT,EAAI,EAAGA,EAAIqoE,EAAQ50D,KAAKra,SAAU4G,EACvCs1G,EAAO7hG,KAAKzT,GAAKi0G,EAAMvuG,KAAK2zC,UAAUm8D,SAASntC,EAAQ50D,KAAKzT,GAAIzD,EACxE,CAGA,GAFoB,MAAhB8rE,EAAQ7vE,MAAgB6vE,EAAQzmE,eAAe,UAC/C0zG,EAAO98G,KAAO6vE,EAAQ7vE,MACtB6vE,EAAQxvB,aAAewvB,EAAQxvB,YAAYz/C,OAE3C,IADAk8G,EAAOz8D,YAAc,GACZ74C,EAAI,EAAGA,EAAIqoE,EAAQxvB,YAAYz/C,SAAU4G,EAC9Cs1G,EAAOz8D,YAAY74C,GAAKi0G,EAAMvuG,KAAK64D,YAAYi3C,SAASntC,EAAQxvB,YAAY74C,GAAIzD,GAIxF,GAFyB,MAArB8rE,EAAQzd,WAAqByd,EAAQzmE,eAAe,eACpD0zG,EAAO1qD,UAAYyd,EAAQzd,WAC3Byd,EAAQrrD,OAASqrD,EAAQrrD,MAAM5jB,OAE/B,IADAk8G,EAAOt4F,MAAQ,GACNhd,EAAI,EAAGA,EAAIqoE,EAAQrrD,MAAM5jB,SAAU4G,EACxCs1G,EAAOt4F,MAAMhd,GAAKi0G,EAAMvuG,KAAKuwG,eAAeT,SAASntC,EAAQrrD,MAAMhd,GAAIzD,GAE/E,GAAI8rE,EAAQj8D,QAAUi8D,EAAQj8D,OAAOhT,OAEjC,IADAk8G,EAAOlpG,OAAS,GACPpM,EAAI,EAAGA,EAAIqoE,EAAQj8D,OAAOhT,SAAU4G,EACzCs1G,EAAOlpG,OAAOpM,GAAKi0G,EAAMvuG,KAAKuwG,eAAeT,SAASntC,EAAQj8D,OAAOpM,GAAIzD,GAEjF,GAAI8rE,EAAQtvB,WAAasvB,EAAQtvB,UAAU3/C,OAEvC,IADAk8G,EAAOv8D,UAAY,GACV/4C,EAAI,EAAGA,EAAIqoE,EAAQtvB,UAAU3/C,SAAU4G,EAC5Cs1G,EAAOv8D,UAAU/4C,GAAKi0G,EAAMvuG,KAAKuwG,eAAeT,SAASntC,EAAQtvB,UAAU/4C,GAAIzD,GAEvF,GAAI8rE,EAAQouC,wBAA0BpuC,EAAQouC,uBAAuBr9G,OAEjE,IADAk8G,EAAOmB,uBAAyB,GACvBz2G,EAAI,EAAGA,EAAIqoE,EAAQouC,uBAAuBr9G,SAAU4G,EACzDs1G,EAAOmB,uBAAuBz2G,GAAKi0G,EAAMvuG,KAAK4wG,iBAAiBd,SAASntC,EAAQouC,uBAAuBz2G,GAAIzD,GAEnH,OAAO+4G,CACX,EASAh7D,EAAWo8C,UAAUkW,OAAS,WAC1B,OAAOpzG,KAAKD,YAAYi8G,SAASh8G,KAAMk6G,EAAUM,KAAKgC,cAC1D,EAEO17D,CACV,CApdiB,GAsdlB50C,EAAK64D,YAAc,WA8Bf,SAASA,EAAY61C,GASjB,GARA56G,KAAKyB,KAAO,GACZzB,KAAK4+B,UAAY,GACjB5+B,KAAKulE,UAAY,GACjBvlE,KAAK+1D,WAAa,GAClB/1D,KAAKylE,UAAY,GACjBzlE,KAAKk9G,aAAe,GACpBl9G,KAAK2lE,WAAa,GAClB3lE,KAAK8lE,WAAa,GACd80C,EACA,IAAK,IAAI59F,EAAOpV,OAAOoV,KAAK49F,GAAan7G,EAAI,EAAGA,EAAIud,EAAKpd,SAAUH,EACpC,MAAvBm7G,EAAW59F,EAAKvd,MAChBO,KAAKgd,EAAKvd,IAAMm7G,EAAW59F,EAAKvd,IAChD,CAu8BA,OA/7BAslE,EAAYm4B,UAAUz7F,KAAO84G,EAAMQ,WAQnCh2C,EAAYm4B,UAAUh6E,SAAW,EAQjC6hD,EAAYm4B,UAAUigB,QAAU,KAQhCp4C,EAAYm4B,UAAUt+D,UAAY27E,EAAMQ,WAQxCh2C,EAAYm4B,UAAU33B,UAAYg1C,EAAMQ,WAQxCh2C,EAAYm4B,UAAUnnC,WAAawkD,EAAMQ,WAQzCh2C,EAAYm4B,UAAUz3B,UAAY80C,EAAMQ,WAQxCh2C,EAAYm4B,UAAUl+F,KAAO,GAQ7B+lE,EAAYm4B,UAAU9rC,UAAY,GAQlC2T,EAAYm4B,UAAUtnC,QAAU2kD,EAAMO,UAAU,IAQhD/1C,EAAYm4B,UAAUggB,aAAe3C,EAAMQ,WAQ3Ch2C,EAAYm4B,UAAUkgB,aAAe,EAQrCr4C,EAAYm4B,UAAUv3B,WAAa40C,EAAMQ,WAQzCh2C,EAAYm4B,UAAUp3B,WAAay0C,EAAMQ,WAUzCh2C,EAAYre,OAAS,SAAgBk0D,GACjC,OAAO,IAAI71C,EAAY61C,EAC3B,EAWA71C,EAAY/pD,OAAS,SAAgB6zD,EAASmsC,GAG1C,GAFKA,IACDA,EAASX,EAAQ3zD,UACD,MAAhBmoB,EAAQptE,MAAgBotE,EAAQptE,KAAK7B,OAAQ,CAC7Co7G,EAAOC,OAA8B,IAAIG,OACzC,IAAK,IAAI37G,EAAI,EAAGA,EAAIovE,EAAQptE,KAAK7B,SAAUH,EACvCu7G,EAAOG,MAAMtsC,EAAQptE,KAAKhC,IAC9Bu7G,EAAOK,QACX,CAKA,GAJwB,MAApBxsC,EAAQ3rD,UAAoB2rD,EAAQzmE,eAAe,aACnD4yG,EAAOC,OAA8B,IAAIK,MAAMzsC,EAAQ3rD,UACpC,MAAnB2rD,EAAQsuC,SAAmBtuC,EAAQzmE,eAAe,YAClDqyG,EAAMvuG,KAAK64D,YAAYs4C,QAAQriG,OAAO6zD,EAAQsuC,QAASnC,EAAOC,OAA8B,IAAIG,QAAQC,SACnF,MAArBxsC,EAAQjwC,WAAqBiwC,EAAQjwC,UAAUh/B,OAAQ,CAEvD,IADAo7G,EAAOC,OAA8B,IAAIG,OAChC37G,EAAI,EAAGA,EAAIovE,EAAQjwC,UAAUh/B,SAAUH,EAC5Cu7G,EAAOE,MAAMrsC,EAAQjwC,UAAUn/B,IACnCu7G,EAAOK,QACX,CACA,GAAyB,MAArBxsC,EAAQtJ,WAAqBsJ,EAAQtJ,UAAU3lE,OAAQ,CAEvD,IADAo7G,EAAOC,OAA8B,IAAIG,OAChC37G,EAAI,EAAGA,EAAIovE,EAAQtJ,UAAU3lE,SAAUH,EAC5Cu7G,EAAOM,MAAMzsC,EAAQtJ,UAAU9lE,IACnCu7G,EAAOK,QACX,CACA,GAA0B,MAAtBxsC,EAAQ9Y,YAAsB8Y,EAAQ9Y,WAAWn2D,OACjD,IAASH,EAAI,EAAGA,EAAIovE,EAAQ9Y,WAAWn2D,SAAUH,EAC7Cu7G,EAAOC,OAA8B,IAAItpD,MAAMkd,EAAQ9Y,WAAWt2D,IAC1E,GAAyB,MAArBovE,EAAQpJ,WAAqBoJ,EAAQpJ,UAAU7lE,OAAQ,CAEvD,IADAo7G,EAAOC,OAA8B,IAAIG,OAChC37G,EAAI,EAAGA,EAAIovE,EAAQpJ,UAAU7lE,SAAUH,EAC5Cu7G,EAAOG,MAAMtsC,EAAQpJ,UAAUhmE,IACnCu7G,EAAOK,QACX,CAKA,GAJoB,MAAhBxsC,EAAQ7vE,MAAgB6vE,EAAQzmE,eAAe,SAC/C4yG,EAAOC,OAA8B,IAAI3M,OAAOz/B,EAAQ7vE,MACrC,MAAnB6vE,EAAQjZ,SAAmBiZ,EAAQzmE,eAAe,YAClD4yG,EAAOC,OAA8B,IAAItpD,MAAMkd,EAAQjZ,SACjC,MAAtBiZ,EAAQlJ,YAAsBkJ,EAAQlJ,WAAW/lE,OAAQ,CAEzD,IADAo7G,EAAOC,OAA+B,IAAIG,OACjC37G,EAAI,EAAGA,EAAIovE,EAAQlJ,WAAW/lE,SAAUH,EAC7Cu7G,EAAOsC,OAAOzuC,EAAQlJ,WAAWlmE,IACrCu7G,EAAOK,QACX,CACA,GAA0B,MAAtBxsC,EAAQ/I,YAAsB+I,EAAQ/I,WAAWlmE,OAAQ,CAEzD,IADAo7G,EAAOC,OAA+B,IAAIG,OACjC37G,EAAI,EAAGA,EAAIovE,EAAQ/I,WAAWlmE,SAAUH,EAC7Cu7G,EAAOuC,OAAO1uC,EAAQ/I,WAAWrmE,IACrCu7G,EAAOK,QACX,CAGA,GAFyB,MAArBxsC,EAAQzd,WAAqByd,EAAQzmE,eAAe,cACpD4yG,EAAOC,OAA+B,IAAI3M,OAAOz/B,EAAQzd,WACjC,MAAxByd,EAAQquC,cAAwBruC,EAAQquC,aAAat9G,OACrD,IAASH,EAAI,EAAGA,EAAIovE,EAAQquC,aAAat9G,SAAUH,EAC/Cg7G,EAAMvuG,KAAK2wG,uBAAuB7hG,OAAO6zD,EAAQquC,aAAaz9G,GAAIu7G,EAAOC,OAA+B,KAAKG,QAAQC,SAG7H,OAF4B,MAAxBxsC,EAAQuuC,cAAwBvuC,EAAQzmE,eAAe,iBACvD4yG,EAAOC,OAA+B,KAAKK,MAAMzsC,EAAQuuC,cACtDpC,CACX,EAWAj2C,EAAYw2C,gBAAkB,SAAyB1sC,EAASmsC,GAC5D,OAAOh7G,KAAKgb,OAAO6zD,EAASmsC,GAAQK,QACxC,EAaAt2C,EAAY9pD,OAAS,SAAgBugG,EAAQ57G,GACnC47G,aAAkBrB,IACpBqB,EAASrB,EAAQzzD,OAAO80D,IAE5B,IADA,IAAIz2E,OAAiBxlC,IAAXK,EAAuB47G,EAAOroE,IAAMqoE,EAAOhvC,IAAM5sE,EAAQivE,EAAU,IAAI4rC,EAAMvuG,KAAK64D,YACrFy2C,EAAOhvC,IAAMznC,GAAK,CACrB,IAAI2gD,EAAM81B,EAAOP,SACjB,OAAQv1B,IAAQ,GAChB,KAAK,EAGD,GAFM7W,EAAQptE,MAAQotE,EAAQptE,KAAK7B,SAC/BivE,EAAQptE,KAAO,IACD,IAAP,EAANikF,GAED,IADA,IAAI+1B,EAAOD,EAAOP,SAAWO,EAAOhvC,IAC7BgvC,EAAOhvC,IAAMivC,GAChB5sC,EAAQptE,KAAK5B,KAAK27G,EAAOL,cAE7BtsC,EAAQptE,KAAK5B,KAAK27G,EAAOL,SAC7B,MACJ,KAAK,EACDtsC,EAAQ3rD,SAAWs4F,EAAOF,QAC1B,MACJ,KAAK,EACDzsC,EAAQsuC,QAAU1C,EAAMvuG,KAAK64D,YAAYs4C,QAAQpiG,OAAOugG,EAAQA,EAAOP,UACvE,MACJ,KAAK,EAGD,GAFMpsC,EAAQjwC,WAAaiwC,EAAQjwC,UAAUh/B,SACzCivE,EAAQjwC,UAAY,IACN,IAAP,EAAN8mD,GAED,IADI+1B,EAAOD,EAAOP,SAAWO,EAAOhvC,IAC7BgvC,EAAOhvC,IAAMivC,GAChB5sC,EAAQjwC,UAAU/+B,KAAK27G,EAAON,cAElCrsC,EAAQjwC,UAAU/+B,KAAK27G,EAAON,SAClC,MACJ,KAAK,EAGD,GAFMrsC,EAAQtJ,WAAasJ,EAAQtJ,UAAU3lE,SACzCivE,EAAQtJ,UAAY,IACN,IAAP,EAANmgB,GAED,IADI+1B,EAAOD,EAAOP,SAAWO,EAAOhvC,IAC7BgvC,EAAOhvC,IAAMivC,GAChB5sC,EAAQtJ,UAAU1lE,KAAK27G,EAAOF,cAElCzsC,EAAQtJ,UAAU1lE,KAAK27G,EAAOF,SAClC,MACJ,KAAK,EACKzsC,EAAQ9Y,YAAc8Y,EAAQ9Y,WAAWn2D,SAC3CivE,EAAQ9Y,WAAa,IACzB8Y,EAAQ9Y,WAAWl2D,KAAK27G,EAAO7pD,SAC/B,MACJ,KAAK,EAGD,GAFMkd,EAAQpJ,WAAaoJ,EAAQpJ,UAAU7lE,SACzCivE,EAAQpJ,UAAY,IACN,IAAP,EAANigB,GAED,IADI+1B,EAAOD,EAAOP,SAAWO,EAAOhvC,IAC7BgvC,EAAOhvC,IAAMivC,GAChB5sC,EAAQpJ,UAAU5lE,KAAK27G,EAAOL,cAElCtsC,EAAQpJ,UAAU5lE,KAAK27G,EAAOL,SAClC,MACJ,KAAK,EACDtsC,EAAQ7vE,KAAOw8G,EAAOlN,SACtB,MACJ,KAAK,GACDz/B,EAAQzd,UAAYoqD,EAAOlN,SAC3B,MACJ,KAAK,EACDz/B,EAAQjZ,QAAU4lD,EAAO7pD,QACzB,MACJ,KAAK,GACKkd,EAAQquC,cAAgBruC,EAAQquC,aAAat9G,SAC/CivE,EAAQquC,aAAe,IAC3BruC,EAAQquC,aAAar9G,KAAK46G,EAAMvuG,KAAK2wG,uBAAuB5hG,OAAOugG,EAAQA,EAAOP,WAClF,MACJ,KAAK,GACDpsC,EAAQuuC,aAAe5B,EAAOF,QAC9B,MACJ,KAAK,GAGD,GAFMzsC,EAAQlJ,YAAckJ,EAAQlJ,WAAW/lE,SAC3CivE,EAAQlJ,WAAa,IACP,IAAP,EAAN+f,GAED,IADI+1B,EAAOD,EAAOP,SAAWO,EAAOhvC,IAC7BgvC,EAAOhvC,IAAMivC,GAChB5sC,EAAQlJ,WAAW9lE,KAAK27G,EAAO8B,eAEnCzuC,EAAQlJ,WAAW9lE,KAAK27G,EAAO8B,UACnC,MACJ,KAAK,GAGD,GAFMzuC,EAAQ/I,YAAc+I,EAAQ/I,WAAWlmE,SAC3CivE,EAAQ/I,WAAa,IACP,IAAP,EAAN4f,GAED,IADI+1B,EAAOD,EAAOP,SAAWO,EAAOhvC,IAC7BgvC,EAAOhvC,IAAMivC,GAChB5sC,EAAQ/I,WAAWjmE,KAAK27G,EAAO+B,eAEnC1uC,EAAQ/I,WAAWjmE,KAAK27G,EAAO+B,UACnC,MACJ,QACI/B,EAAOE,SAAe,EAANh2B,GAGxB,CACA,OAAO7W,CACX,EAYA9J,EAAY42C,gBAAkB,SAAyBH,GAGnD,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBx7G,KAAKib,OAAOugG,EAAQA,EAAOP,SACtC,EAUAl2C,EAAY62C,OAAS,SAAgB/sC,GACjC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAoB,MAAhBA,EAAQptE,MAAgBotE,EAAQzmE,eAAe,QAAS,CACxD,IAAKnG,MAAMC,QAAQ2sE,EAAQptE,MACvB,MAAO,uBACX,IAAK,IAAIhC,EAAI,EAAGA,EAAIovE,EAAQptE,KAAK7B,SAAUH,EACvC,KAAK86G,EAAM9vG,UAAUokE,EAAQptE,KAAKhC,KAASovE,EAAQptE,KAAKhC,IAAM86G,EAAM9vG,UAAUokE,EAAQptE,KAAKhC,GAAG8qE,MAAQgwC,EAAM9vG,UAAUokE,EAAQptE,KAAKhC,GAAG+qE,OAClI,MAAO,+BACnB,CACA,GAAwB,MAApBqE,EAAQ3rD,UAAoB2rD,EAAQzmE,eAAe,cAC9CmyG,EAAM9vG,UAAUokE,EAAQ3rD,UACzB,MAAO,6BACf,GAAuB,MAAnB2rD,EAAQsuC,SAAmBtuC,EAAQzmE,eAAe,aAC9C8jC,EAAQuuE,EAAMvuG,KAAK64D,YAAYs4C,QAAQzB,OAAO/sC,EAAQsuC,UAEtD,MAAO,WAAajxE,EAE5B,GAAyB,MAArB2iC,EAAQjwC,WAAqBiwC,EAAQzmE,eAAe,aAAc,CAClE,IAAKnG,MAAMC,QAAQ2sE,EAAQjwC,WACvB,MAAO,4BACX,IAASn/B,EAAI,EAAGA,EAAIovE,EAAQjwC,UAAUh/B,SAAUH,EAC5C,GAAoC,iBAAzBovE,EAAQjwC,UAAUn/B,GACzB,MAAO,8BACnB,CACA,GAAyB,MAArBovE,EAAQtJ,WAAqBsJ,EAAQzmE,eAAe,aAAc,CAClE,IAAKnG,MAAMC,QAAQ2sE,EAAQtJ,WACvB,MAAO,4BACX,IAAS9lE,EAAI,EAAGA,EAAIovE,EAAQtJ,UAAU3lE,SAAUH,EAC5C,IAAK86G,EAAM9vG,UAAUokE,EAAQtJ,UAAU9lE,IACnC,MAAO,+BACnB,CACA,GAA0B,MAAtBovE,EAAQ9Y,YAAsB8Y,EAAQzmE,eAAe,cAAe,CACpE,IAAKnG,MAAMC,QAAQ2sE,EAAQ9Y,YACvB,MAAO,6BACX,IAASt2D,EAAI,EAAGA,EAAIovE,EAAQ9Y,WAAWn2D,SAAUH,EAC7C,KAAMovE,EAAQ9Y,WAAWt2D,IAA8C,iBAAjCovE,EAAQ9Y,WAAWt2D,GAAGG,QAAuB26G,EAAMz1G,SAAS+pE,EAAQ9Y,WAAWt2D,KACjH,MAAO,+BACnB,CACA,GAAyB,MAArBovE,EAAQpJ,WAAqBoJ,EAAQzmE,eAAe,aAAc,CAClE,IAAKnG,MAAMC,QAAQ2sE,EAAQpJ,WACvB,MAAO,4BACX,IAAShmE,EAAI,EAAGA,EAAIovE,EAAQpJ,UAAU7lE,SAAUH,EAC5C,KAAK86G,EAAM9vG,UAAUokE,EAAQpJ,UAAUhmE,KAASovE,EAAQpJ,UAAUhmE,IAAM86G,EAAM9vG,UAAUokE,EAAQpJ,UAAUhmE,GAAG8qE,MAAQgwC,EAAM9vG,UAAUokE,EAAQpJ,UAAUhmE,GAAG+qE,OACtJ,MAAO,oCACnB,CACA,GAAoB,MAAhBqE,EAAQ7vE,MAAgB6vE,EAAQzmE,eAAe,UAC1CmyG,EAAMz1G,SAAS+pE,EAAQ7vE,MACxB,MAAO,wBACf,GAAyB,MAArB6vE,EAAQzd,WAAqByd,EAAQzmE,eAAe,eAC/CmyG,EAAMz1G,SAAS+pE,EAAQzd,WACxB,MAAO,6BACf,GAAuB,MAAnByd,EAAQjZ,SAAmBiZ,EAAQzmE,eAAe,cAC5CymE,EAAQjZ,SAA6C,iBAA3BiZ,EAAQjZ,QAAQh2D,QAAuB26G,EAAMz1G,SAAS+pE,EAAQjZ,UAC1F,MAAO,2BACf,GAA4B,MAAxBiZ,EAAQquC,cAAwBruC,EAAQzmE,eAAe,gBAAiB,CACxE,IAAKnG,MAAMC,QAAQ2sE,EAAQquC,cACvB,MAAO,+BACX,IAASz9G,EAAI,EAAGA,EAAIovE,EAAQquC,aAAat9G,SAAUH,EAAG,CAClD,IAAIysC,EACJ,GADIA,EAAQuuE,EAAMvuG,KAAK2wG,uBAAuBjB,OAAO/sC,EAAQquC,aAAaz9G,IAEtE,MAAO,gBAAkBysC,CACjC,CACJ,CACA,GAA4B,MAAxB2iC,EAAQuuC,cAAwBvuC,EAAQzmE,eAAe,gBACvD,OAAQymE,EAAQuuC,cAChB,QACI,MAAO,oCACX,KAAK,EACL,KAAK,GAGT,GAA0B,MAAtBvuC,EAAQlJ,YAAsBkJ,EAAQzmE,eAAe,cAAe,CACpE,IAAKnG,MAAMC,QAAQ2sE,EAAQlJ,YACvB,MAAO,6BACX,IAASlmE,EAAI,EAAGA,EAAIovE,EAAQlJ,WAAW/lE,SAAUH,EAC7C,GAAqC,iBAA1BovE,EAAQlJ,WAAWlmE,GAC1B,MAAO,+BACnB,CACA,GAA0B,MAAtBovE,EAAQ/I,YAAsB+I,EAAQzmE,eAAe,cAAe,CACpE,IAAKnG,MAAMC,QAAQ2sE,EAAQ/I,YACvB,MAAO,6BACX,IAASrmE,EAAI,EAAGA,EAAIovE,EAAQ/I,WAAWlmE,SAAUH,EAC7C,KAAK86G,EAAM9vG,UAAUokE,EAAQ/I,WAAWrmE,KAASovE,EAAQ/I,WAAWrmE,IAAM86G,EAAM9vG,UAAUokE,EAAQ/I,WAAWrmE,GAAG8qE,MAAQgwC,EAAM9vG,UAAUokE,EAAQ/I,WAAWrmE,GAAG+qE,OAC1J,MAAO,qCACnB,CACA,OAAO,IACX,EAUAzF,EAAY82C,WAAa,SAAoBC,GACzC,GAAIA,aAAkBrB,EAAMvuG,KAAK64D,YAC7B,OAAO+2C,EACX,IAAIjtC,EAAU,IAAI4rC,EAAMvuG,KAAK64D,YAC7B,GAAI+2C,EAAOr6G,KAAM,CACb,IAAKQ,MAAMC,QAAQ45G,EAAOr6G,MACtB,MAAMpC,UAAU,0CACpBwvE,EAAQptE,KAAO,GACf,IAAK,IAAIhC,EAAI,EAAGA,EAAIq8G,EAAOr6G,KAAK7B,SAAUH,EAClC86G,EAAMlwC,MACLwE,EAAQptE,KAAKhC,GAAK86G,EAAMlwC,KAAKC,UAAUwxC,EAAOr6G,KAAKhC,KAAK2qE,UAAW,EACrC,iBAAnB0xC,EAAOr6G,KAAKhC,GACxBovE,EAAQptE,KAAKhC,GAAK6pD,SAASwyD,EAAOr6G,KAAKhC,GAAI,IACZ,iBAAnBq8G,EAAOr6G,KAAKhC,GACxBovE,EAAQptE,KAAKhC,GAAKq8G,EAAOr6G,KAAKhC,GACC,iBAAnBq8G,EAAOr6G,KAAKhC,KACxBovE,EAAQptE,KAAKhC,GAAK,IAAI86G,EAAMwB,SAASD,EAAOr6G,KAAKhC,GAAG8qE,MAAQ,EAAGuxC,EAAOr6G,KAAKhC,GAAG+qE,OAAS,GAAGpE,WACtG,CAGA,GAFuB,MAAnB01C,EAAO54F,WACP2rD,EAAQ3rD,SAA6B,EAAlB44F,EAAO54F,UACR,MAAlB44F,EAAOqB,QAAiB,CACxB,GAA8B,iBAAnBrB,EAAOqB,QACd,MAAM99G,UAAU,8CACpBwvE,EAAQsuC,QAAU1C,EAAMvuG,KAAK64D,YAAYs4C,QAAQxB,WAAWC,EAAOqB,QACvE,CACA,GAAIrB,EAAOl9E,UAAW,CAClB,IAAK38B,MAAMC,QAAQ45G,EAAOl9E,WACtB,MAAMv/B,UAAU,+CAEpB,IADAwvE,EAAQjwC,UAAY,GACXn/B,EAAI,EAAGA,EAAIq8G,EAAOl9E,UAAUh/B,SAAUH,EAC3CovE,EAAQjwC,UAAUn/B,GAAKgD,OAAOq5G,EAAOl9E,UAAUn/B,GACvD,CACA,GAAIq8G,EAAOv2C,UAAW,CAClB,IAAKtjE,MAAMC,QAAQ45G,EAAOv2C,WACtB,MAAMlmE,UAAU,+CAEpB,IADAwvE,EAAQtJ,UAAY,GACX9lE,EAAI,EAAGA,EAAIq8G,EAAOv2C,UAAU3lE,SAAUH,EAC3CovE,EAAQtJ,UAAU9lE,GAA2B,EAAtBq8G,EAAOv2C,UAAU9lE,EAChD,CACA,GAAIq8G,EAAO/lD,WAAY,CACnB,IAAK9zD,MAAMC,QAAQ45G,EAAO/lD,YACtB,MAAM12D,UAAU,gDAEpB,IADAwvE,EAAQ9Y,WAAa,GACZt2D,EAAI,EAAGA,EAAIq8G,EAAO/lD,WAAWn2D,SAAUH,EACR,iBAAzBq8G,EAAO/lD,WAAWt2D,GACzB86G,EAAMlM,OAAOpzF,OAAO6gG,EAAO/lD,WAAWt2D,GAAIovE,EAAQ9Y,WAAWt2D,GAAK86G,EAAMO,UAAUP,EAAMlM,OAAOzuG,OAAOk8G,EAAO/lD,WAAWt2D,KAAM,GACzHq8G,EAAO/lD,WAAWt2D,GAAGG,SAC1BivE,EAAQ9Y,WAAWt2D,GAAKq8G,EAAO/lD,WAAWt2D,GACtD,CACA,GAAIq8G,EAAOr2C,UAAW,CAClB,IAAKxjE,MAAMC,QAAQ45G,EAAOr2C,WACtB,MAAMpmE,UAAU,+CAEpB,IADAwvE,EAAQpJ,UAAY,GACXhmE,EAAI,EAAGA,EAAIq8G,EAAOr2C,UAAU7lE,SAAUH,EACvC86G,EAAMlwC,MACLwE,EAAQpJ,UAAUhmE,GAAK86G,EAAMlwC,KAAKC,UAAUwxC,EAAOr2C,UAAUhmE,KAAK2qE,UAAW,EAC1C,iBAAxB0xC,EAAOr2C,UAAUhmE,GAC7BovE,EAAQpJ,UAAUhmE,GAAK6pD,SAASwyD,EAAOr2C,UAAUhmE,GAAI,IACjB,iBAAxBq8G,EAAOr2C,UAAUhmE,GAC7BovE,EAAQpJ,UAAUhmE,GAAKq8G,EAAOr2C,UAAUhmE,GACJ,iBAAxBq8G,EAAOr2C,UAAUhmE,KAC7BovE,EAAQpJ,UAAUhmE,GAAK,IAAI86G,EAAMwB,SAASD,EAAOr2C,UAAUhmE,GAAG8qE,MAAQ,EAAGuxC,EAAOr2C,UAAUhmE,GAAG+qE,OAAS,GAAGpE,WACrH,CAUA,GATmB,MAAf01C,EAAO98G,OACP6vE,EAAQ7vE,KAAOkyF,OAAO4qB,EAAO98G,OACT,MAApB88G,EAAO1qD,YACPyd,EAAQzd,UAAY8/B,OAAO4qB,EAAO1qD,YAChB,MAAlB0qD,EAAOlmD,UACuB,iBAAnBkmD,EAAOlmD,QACd2kD,EAAMlM,OAAOpzF,OAAO6gG,EAAOlmD,QAASiZ,EAAQjZ,QAAU2kD,EAAMO,UAAUP,EAAMlM,OAAOzuG,OAAOk8G,EAAOlmD,UAAW,GACvGkmD,EAAOlmD,QAAQh2D,SACpBivE,EAAQjZ,QAAUkmD,EAAOlmD,UAC7BkmD,EAAOoB,aAAc,CACrB,IAAKj7G,MAAMC,QAAQ45G,EAAOoB,cACtB,MAAM79G,UAAU,kDAEpB,IADAwvE,EAAQquC,aAAe,GACdz9G,EAAI,EAAGA,EAAIq8G,EAAOoB,aAAat9G,SAAUH,EAAG,CACjD,GAAsC,iBAA3Bq8G,EAAOoB,aAAaz9G,GAC3B,MAAMJ,UAAU,mDACpBwvE,EAAQquC,aAAaz9G,GAAKg7G,EAAMvuG,KAAK2wG,uBAAuBhB,WAAWC,EAAOoB,aAAaz9G,GAC/F,CACJ,CACA,OAAQq8G,EAAOsB,cACf,IAAK,UACL,KAAK,EACDvuC,EAAQuuC,aAAe,EACvB,MACJ,IAAK,WACL,KAAK,EACDvuC,EAAQuuC,aAAe,EAG3B,GAAItB,EAAOn2C,WAAY,CACnB,IAAK1jE,MAAMC,QAAQ45G,EAAOn2C,YACtB,MAAMtmE,UAAU,gDAEpB,IADAwvE,EAAQlJ,WAAa,GACZlmE,EAAI,EAAGA,EAAIq8G,EAAOn2C,WAAW/lE,SAAUH,EAC5CovE,EAAQlJ,WAAWlmE,GAAKgD,OAAOq5G,EAAOn2C,WAAWlmE,GACzD,CACA,GAAIq8G,EAAOh2C,WAAY,CACnB,IAAK7jE,MAAMC,QAAQ45G,EAAOh2C,YACtB,MAAMzmE,UAAU,gDAEpB,IADAwvE,EAAQ/I,WAAa,GACZrmE,EAAI,EAAGA,EAAIq8G,EAAOh2C,WAAWlmE,SAAUH,EACxC86G,EAAMlwC,MACLwE,EAAQ/I,WAAWrmE,GAAK86G,EAAMlwC,KAAKC,UAAUwxC,EAAOh2C,WAAWrmE,KAAK2qE,UAAW,EAC3C,iBAAzB0xC,EAAOh2C,WAAWrmE,GAC9BovE,EAAQ/I,WAAWrmE,GAAK6pD,SAASwyD,EAAOh2C,WAAWrmE,GAAI,IAClB,iBAAzBq8G,EAAOh2C,WAAWrmE,GAC9BovE,EAAQ/I,WAAWrmE,GAAKq8G,EAAOh2C,WAAWrmE,GACL,iBAAzBq8G,EAAOh2C,WAAWrmE,KAC9BovE,EAAQ/I,WAAWrmE,GAAK,IAAI86G,EAAMwB,SAASD,EAAOh2C,WAAWrmE,GAAG8qE,MAAQ,EAAGuxC,EAAOh2C,WAAWrmE,GAAG+qE,OAAS,GAAGpE,UAAS,GACjI,CACA,OAAOyI,CACX,EAWA9J,EAAYi3C,SAAW,SAAkBntC,EAAS9rE,GACzCA,IACDA,EAAU,CAAC,GACf,IAAI+4G,EAAS,CAAC,EAyBd,IAxBI/4G,EAAQk5G,QAAUl5G,EAAQm5G,YAC1BJ,EAAOr6G,KAAO,GACdq6G,EAAOl9E,UAAY,GACnBk9E,EAAOv2C,UAAY,GACnBu2C,EAAO/lD,WAAa,GACpB+lD,EAAOr2C,UAAY,GACnBq2C,EAAOn2C,WAAa,GACpBm2C,EAAOh2C,WAAa,GACpBg2C,EAAOoB,aAAe,IAEtBn6G,EAAQm5G,WACRJ,EAAO54F,SAAW,EAClB44F,EAAOqB,QAAU,KACjBrB,EAAO98G,KAAO,GACV+D,EAAQ4uD,QAAUu/B,OAClB4qB,EAAOlmD,QAAU,IAEjBkmD,EAAOlmD,QAAU,GACb7yD,EAAQ4uD,QAAU1vD,QAClB65G,EAAOlmD,QAAU2kD,EAAMO,UAAUgB,EAAOlmD,WAEhDkmD,EAAO1qD,UAAY,GACnB0qD,EAAOsB,aAAer6G,EAAQs5G,QAAUnrB,OAAS,UAAY,GAE7DriB,EAAQptE,MAAQotE,EAAQptE,KAAK7B,OAAQ,CACrCk8G,EAAOr6G,KAAO,GACd,IAAK,IAAI+E,EAAI,EAAGA,EAAIqoE,EAAQptE,KAAK7B,SAAU4G,EACR,iBAApBqoE,EAAQptE,KAAK+E,GACpBs1G,EAAOr6G,KAAK+E,GAAKzD,EAAQq5G,QAAUlrB,OAASA,OAAOriB,EAAQptE,KAAK+E,IAAMqoE,EAAQptE,KAAK+E,GAEnFs1G,EAAOr6G,KAAK+E,GAAKzD,EAAQq5G,QAAUlrB,OAASqpB,EAAMlwC,KAAK6yB,UAAUtkD,SAASvwC,KAAKwmE,EAAQptE,KAAK+E,IAAMzD,EAAQq5G,QAAU35G,OAAS,IAAI83G,EAAMwB,SAASltC,EAAQptE,KAAK+E,GAAG+jE,MAAQ,EAAGsE,EAAQptE,KAAK+E,GAAGgkE,OAAS,GAAGpE,WAAayI,EAAQptE,KAAK+E,EAC7O,CAKA,GAJwB,MAApBqoE,EAAQ3rD,UAAoB2rD,EAAQzmE,eAAe,cACnD0zG,EAAO54F,SAAW2rD,EAAQ3rD,UACP,MAAnB2rD,EAAQsuC,SAAmBtuC,EAAQzmE,eAAe,aAClD0zG,EAAOqB,QAAU1C,EAAMvuG,KAAK64D,YAAYs4C,QAAQrB,SAASntC,EAAQsuC,QAASp6G,IAC1E8rE,EAAQjwC,WAAaiwC,EAAQjwC,UAAUh/B,OAEvC,IADAk8G,EAAOl9E,UAAY,GACVp4B,EAAI,EAAGA,EAAIqoE,EAAQjwC,UAAUh/B,SAAU4G,EAC5Cs1G,EAAOl9E,UAAUp4B,GAAKzD,EAAQu5G,OAASC,SAAS1tC,EAAQjwC,UAAUp4B,IAAM0qF,OAAOriB,EAAQjwC,UAAUp4B,IAAMqoE,EAAQjwC,UAAUp4B,GAEjI,GAAIqoE,EAAQtJ,WAAasJ,EAAQtJ,UAAU3lE,OAEvC,IADAk8G,EAAOv2C,UAAY,GACV/+D,EAAI,EAAGA,EAAIqoE,EAAQtJ,UAAU3lE,SAAU4G,EAC5Cs1G,EAAOv2C,UAAU/+D,GAAKqoE,EAAQtJ,UAAU/+D,GAEhD,GAAIqoE,EAAQ9Y,YAAc8Y,EAAQ9Y,WAAWn2D,OAEzC,IADAk8G,EAAO/lD,WAAa,GACXvvD,EAAI,EAAGA,EAAIqoE,EAAQ9Y,WAAWn2D,SAAU4G,EAC7Cs1G,EAAO/lD,WAAWvvD,GAAKzD,EAAQ4uD,QAAUu/B,OAASqpB,EAAMlM,OAAOrzF,OAAO6zD,EAAQ9Y,WAAWvvD,GAAI,EAAGqoE,EAAQ9Y,WAAWvvD,GAAG5G,QAAUmD,EAAQ4uD,QAAU1vD,MAAQA,MAAMi7F,UAAUzlF,MAAMpP,KAAKwmE,EAAQ9Y,WAAWvvD,IAAMqoE,EAAQ9Y,WAAWvvD,GAEzO,GAAIqoE,EAAQpJ,WAAaoJ,EAAQpJ,UAAU7lE,OAEvC,IADAk8G,EAAOr2C,UAAY,GACVj/D,EAAI,EAAGA,EAAIqoE,EAAQpJ,UAAU7lE,SAAU4G,EACR,iBAAzBqoE,EAAQpJ,UAAUj/D,GACzBs1G,EAAOr2C,UAAUj/D,GAAKzD,EAAQq5G,QAAUlrB,OAASA,OAAOriB,EAAQpJ,UAAUj/D,IAAMqoE,EAAQpJ,UAAUj/D,GAElGs1G,EAAOr2C,UAAUj/D,GAAKzD,EAAQq5G,QAAUlrB,OAASqpB,EAAMlwC,KAAK6yB,UAAUtkD,SAASvwC,KAAKwmE,EAAQpJ,UAAUj/D,IAAMzD,EAAQq5G,QAAU35G,OAAS,IAAI83G,EAAMwB,SAASltC,EAAQpJ,UAAUj/D,GAAG+jE,MAAQ,EAAGsE,EAAQpJ,UAAUj/D,GAAGgkE,OAAS,GAAGpE,WAAayI,EAAQpJ,UAAUj/D,GAMtQ,GAJoB,MAAhBqoE,EAAQ7vE,MAAgB6vE,EAAQzmE,eAAe,UAC/C0zG,EAAO98G,KAAO6vE,EAAQ7vE,MACH,MAAnB6vE,EAAQjZ,SAAmBiZ,EAAQzmE,eAAe,aAClD0zG,EAAOlmD,QAAU7yD,EAAQ4uD,QAAUu/B,OAASqpB,EAAMlM,OAAOrzF,OAAO6zD,EAAQjZ,QAAS,EAAGiZ,EAAQjZ,QAAQh2D,QAAUmD,EAAQ4uD,QAAU1vD,MAAQA,MAAMi7F,UAAUzlF,MAAMpP,KAAKwmE,EAAQjZ,SAAWiZ,EAAQjZ,SAC9LiZ,EAAQlJ,YAAckJ,EAAQlJ,WAAW/lE,OAEzC,IADAk8G,EAAOn2C,WAAa,GACXn/D,EAAI,EAAGA,EAAIqoE,EAAQlJ,WAAW/lE,SAAU4G,EAC7Cs1G,EAAOn2C,WAAWn/D,GAAKzD,EAAQu5G,OAASC,SAAS1tC,EAAQlJ,WAAWn/D,IAAM0qF,OAAOriB,EAAQlJ,WAAWn/D,IAAMqoE,EAAQlJ,WAAWn/D,GAErI,GAAIqoE,EAAQ/I,YAAc+I,EAAQ/I,WAAWlmE,OAEzC,IADAk8G,EAAOh2C,WAAa,GACXt/D,EAAI,EAAGA,EAAIqoE,EAAQ/I,WAAWlmE,SAAU4G,EACR,iBAA1BqoE,EAAQ/I,WAAWt/D,GAC1Bs1G,EAAOh2C,WAAWt/D,GAAKzD,EAAQq5G,QAAUlrB,OAASA,OAAOriB,EAAQ/I,WAAWt/D,IAAMqoE,EAAQ/I,WAAWt/D,GAErGs1G,EAAOh2C,WAAWt/D,GAAKzD,EAAQq5G,QAAUlrB,OAASqpB,EAAMlwC,KAAK6yB,UAAUtkD,SAASvwC,KAAKwmE,EAAQ/I,WAAWt/D,IAAMzD,EAAQq5G,QAAU35G,OAAS,IAAI83G,EAAMwB,SAASltC,EAAQ/I,WAAWt/D,GAAG+jE,MAAQ,EAAGsE,EAAQ/I,WAAWt/D,GAAGgkE,OAAS,GAAGpE,UAAS,GAAQyI,EAAQ/I,WAAWt/D,GAI/Q,GAFyB,MAArBqoE,EAAQzd,WAAqByd,EAAQzmE,eAAe,eACpD0zG,EAAO1qD,UAAYyd,EAAQzd,WAC3Byd,EAAQquC,cAAgBruC,EAAQquC,aAAat9G,OAE7C,IADAk8G,EAAOoB,aAAe,GACb12G,EAAI,EAAGA,EAAIqoE,EAAQquC,aAAat9G,SAAU4G,EAC/Cs1G,EAAOoB,aAAa12G,GAAKi0G,EAAMvuG,KAAK2wG,uBAAuBb,SAASntC,EAAQquC,aAAa12G,GAAIzD,GAIrG,OAF4B,MAAxB8rE,EAAQuuC,cAAwBvuC,EAAQzmE,eAAe,kBACvD0zG,EAAOsB,aAAer6G,EAAQs5G,QAAUnrB,OAASupB,EAAMvuG,KAAK64D,YAAYy4C,aAAa3uC,EAAQuuC,cAAgBvuC,EAAQuuC,cAClHtB,CACX,EASA/2C,EAAYm4B,UAAUkW,OAAS,WAC3B,OAAOpzG,KAAKD,YAAYi8G,SAASh8G,KAAMk6G,EAAUM,KAAKgC,cAC1D,EAwBAz3C,EAAYC,SAAW,WACnB,IAAIi1C,EAAa,CAAC,EAAG3iD,EAAS1vD,OAAO8+C,OAAOuzD,GAkB5C,OAjBA3iD,EAAO2iD,EAAW,GAAK,aAAe,EACtC3iD,EAAO2iD,EAAW,GAAK,SAAW,EAClC3iD,EAAO2iD,EAAW,GAAK,SAAW,EAClC3iD,EAAO2iD,EAAW,GAAK,QAAU,EACjC3iD,EAAO2iD,EAAW,GAAK,UAAY,EACnC3iD,EAAO2iD,EAAW,GAAK,SAAW,EAClC3iD,EAAO2iD,EAAW,GAAK,SAAW,EAClC3iD,EAAO2iD,EAAW,GAAK,SAAW,EAClC3iD,EAAO2iD,EAAW,GAAK,UAAY,EACnC3iD,EAAO2iD,EAAW,GAAK,QAAU,EACjC3iD,EAAO2iD,EAAW,IAAM,WAAa,GACrC3iD,EAAO2iD,EAAW,IAAM,UAAY,GACpC3iD,EAAO2iD,EAAW,IAAM,UAAY,GACpC3iD,EAAO2iD,EAAW,IAAM,UAAY,GACpC3iD,EAAO2iD,EAAW,IAAM,aAAe,GACvC3iD,EAAO2iD,EAAW,IAAM,cAAgB,GACxC3iD,EAAO2iD,EAAW,IAAM,YAAc,GAC/B3iD,CACV,CApBsB,GAsBvByN,EAAYs4C,QAAU,WAkBlB,SAASA,EAAQzC,GACb,GAAIA,EACA,IAAK,IAAI59F,EAAOpV,OAAOoV,KAAK49F,GAAan7G,EAAI,EAAGA,EAAIud,EAAKpd,SAAUH,EACpC,MAAvBm7G,EAAW59F,EAAKvd,MAChBO,KAAKgd,EAAKvd,IAAMm7G,EAAW59F,EAAKvd,IAChD,CAoNA,OA5MA49G,EAAQngB,UAAUl2C,MAAQuzD,EAAMlwC,KAAOkwC,EAAMlwC,KAAKxD,SAAS,EAAE,GAAE,GAAS,EAQxEw2C,EAAQngB,UAAUn4D,IAAMw1E,EAAMlwC,KAAOkwC,EAAMlwC,KAAKxD,SAAS,EAAE,GAAE,GAAS,EAUtEw2C,EAAQ32D,OAAS,SAAgBk0D,GAC7B,OAAO,IAAIyC,EAAQzC,EACvB,EAWAyC,EAAQriG,OAAS,SAAgB6zD,EAASmsC,GAOtC,OANKA,IACDA,EAASX,EAAQ3zD,UACA,MAAjBmoB,EAAQ7nB,OAAiB6nB,EAAQzmE,eAAe,UAChD4yG,EAAOC,OAA8B,GAAGE,MAAMtsC,EAAQ7nB,OACvC,MAAf6nB,EAAQ9pC,KAAe8pC,EAAQzmE,eAAe,QAC9C4yG,EAAOC,OAA8B,IAAIE,MAAMtsC,EAAQ9pC,KACpDi2E,CACX,EAWAqC,EAAQ9B,gBAAkB,SAAyB1sC,EAASmsC,GACxD,OAAOh7G,KAAKgb,OAAO6zD,EAASmsC,GAAQK,QACxC,EAaAgC,EAAQpiG,OAAS,SAAgBugG,EAAQ57G,GAC/B47G,aAAkBrB,IACpBqB,EAASrB,EAAQzzD,OAAO80D,IAE5B,IADA,IAAIz2E,OAAiBxlC,IAAXK,EAAuB47G,EAAOroE,IAAMqoE,EAAOhvC,IAAM5sE,EAAQivE,EAAU,IAAI4rC,EAAMvuG,KAAK64D,YAAYs4C,QACjG7B,EAAOhvC,IAAMznC,GAAK,CACrB,IAAI2gD,EAAM81B,EAAOP,SACjB,OAAQv1B,IAAQ,GAChB,KAAK,EACD7W,EAAQ7nB,MAAQw0D,EAAOL,QACvB,MACJ,KAAK,EACDtsC,EAAQ9pC,IAAMy2E,EAAOL,QACrB,MACJ,QACIK,EAAOE,SAAe,EAANh2B,GAGxB,CACA,OAAO7W,CACX,EAYAwuC,EAAQ1B,gBAAkB,SAAyBH,GAG/C,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBx7G,KAAKib,OAAOugG,EAAQA,EAAOP,SACtC,EAUAoC,EAAQzB,OAAS,SAAgB/sC,GAC7B,MAAuB,iBAAZA,GAAoC,OAAZA,EACxB,kBACU,MAAjBA,EAAQ7nB,OAAiB6nB,EAAQzmE,eAAe,YAC3CmyG,EAAM9vG,UAAUokE,EAAQ7nB,QAAY6nB,EAAQ7nB,OAASuzD,EAAM9vG,UAAUokE,EAAQ7nB,MAAMujB,MAAQgwC,EAAM9vG,UAAUokE,EAAQ7nB,MAAMwjB,OACnH,+BACI,MAAfqE,EAAQ9pC,KAAe8pC,EAAQzmE,eAAe,UACzCmyG,EAAM9vG,UAAUokE,EAAQ9pC,MAAU8pC,EAAQ9pC,KAAOw1E,EAAM9vG,UAAUokE,EAAQ9pC,IAAIwlC,MAAQgwC,EAAM9vG,UAAUokE,EAAQ9pC,IAAIylC,OAC3G,6BACR,IACX,EAUA6yC,EAAQxB,WAAa,SAAoBC,GACrC,GAAIA,aAAkBrB,EAAMvuG,KAAK64D,YAAYs4C,QACzC,OAAOvB,EACX,IAAIjtC,EAAU,IAAI4rC,EAAMvuG,KAAK64D,YAAYs4C,QAmBzC,OAlBoB,MAAhBvB,EAAO90D,QACHuzD,EAAMlwC,MACLwE,EAAQ7nB,MAAQuzD,EAAMlwC,KAAKC,UAAUwxC,EAAO90D,QAAQojB,UAAW,EACnC,iBAAjB0xC,EAAO90D,MACnB6nB,EAAQ7nB,MAAQsC,SAASwyD,EAAO90D,MAAO,IACV,iBAAjB80D,EAAO90D,MACnB6nB,EAAQ7nB,MAAQ80D,EAAO90D,MACM,iBAAjB80D,EAAO90D,QACnB6nB,EAAQ7nB,MAAQ,IAAIuzD,EAAMwB,SAASD,EAAO90D,MAAMujB,MAAQ,EAAGuxC,EAAO90D,MAAMwjB,OAAS,GAAGpE,aAC1E,MAAd01C,EAAO/2E,MACHw1E,EAAMlwC,MACLwE,EAAQ9pC,IAAMw1E,EAAMlwC,KAAKC,UAAUwxC,EAAO/2E,MAAMqlC,UAAW,EACjC,iBAAf0xC,EAAO/2E,IACnB8pC,EAAQ9pC,IAAMukB,SAASwyD,EAAO/2E,IAAK,IACR,iBAAf+2E,EAAO/2E,IACnB8pC,EAAQ9pC,IAAM+2E,EAAO/2E,IACM,iBAAf+2E,EAAO/2E,MACnB8pC,EAAQ9pC,IAAM,IAAIw1E,EAAMwB,SAASD,EAAO/2E,IAAIwlC,MAAQ,EAAGuxC,EAAO/2E,IAAIylC,OAAS,GAAGpE,aAC/EyI,CACX,EAWAwuC,EAAQrB,SAAW,SAAkBntC,EAAS9rE,GACrCA,IACDA,EAAU,CAAC,GACf,IAAI+4G,EAAS,CAAC,EACd,GAAI/4G,EAAQm5G,SAAU,CAClB,GAAI3B,EAAMlwC,KAAM,CACZ,IAAI8xC,EAAO,IAAI5B,EAAMlwC,KAAK,EAAG,GAAG,GAChCyxC,EAAO90D,MAAQjkD,EAAQq5G,QAAUlrB,OAASirB,EAAKvjE,WAAa71C,EAAQq5G,QAAU35G,OAAS05G,EAAK/1C,WAAa+1C,CAC7G,MACIL,EAAO90D,MAAQjkD,EAAQq5G,QAAUlrB,OAAS,IAAM,EAChDqpB,EAAMlwC,MACF8xC,EAAO,IAAI5B,EAAMlwC,KAAK,EAAG,GAAG,GAChCyxC,EAAO/2E,IAAMhiC,EAAQq5G,QAAUlrB,OAASirB,EAAKvjE,WAAa71C,EAAQq5G,QAAU35G,OAAS05G,EAAK/1C,WAAa+1C,GAEvGL,EAAO/2E,IAAMhiC,EAAQq5G,QAAUlrB,OAAS,IAAM,CACtD,CAWA,OAVqB,MAAjBriB,EAAQ7nB,OAAiB6nB,EAAQzmE,eAAe,WACnB,iBAAlBymE,EAAQ7nB,MACf80D,EAAO90D,MAAQjkD,EAAQq5G,QAAUlrB,OAASA,OAAOriB,EAAQ7nB,OAAS6nB,EAAQ7nB,MAE1E80D,EAAO90D,MAAQjkD,EAAQq5G,QAAUlrB,OAASqpB,EAAMlwC,KAAK6yB,UAAUtkD,SAASvwC,KAAKwmE,EAAQ7nB,OAASjkD,EAAQq5G,QAAU35G,OAAS,IAAI83G,EAAMwB,SAASltC,EAAQ7nB,MAAMujB,MAAQ,EAAGsE,EAAQ7nB,MAAMwjB,OAAS,GAAGpE,WAAayI,EAAQ7nB,OACzM,MAAf6nB,EAAQ9pC,KAAe8pC,EAAQzmE,eAAe,SACnB,iBAAhBymE,EAAQ9pC,IACf+2E,EAAO/2E,IAAMhiC,EAAQq5G,QAAUlrB,OAASA,OAAOriB,EAAQ9pC,KAAO8pC,EAAQ9pC,IAEtE+2E,EAAO/2E,IAAMhiC,EAAQq5G,QAAUlrB,OAASqpB,EAAMlwC,KAAK6yB,UAAUtkD,SAASvwC,KAAKwmE,EAAQ9pC,KAAOhiC,EAAQq5G,QAAU35G,OAAS,IAAI83G,EAAMwB,SAASltC,EAAQ9pC,IAAIwlC,MAAQ,EAAGsE,EAAQ9pC,IAAIylC,OAAS,GAAGpE,WAAayI,EAAQ9pC,KAC7M+2E,CACX,EASAuB,EAAQngB,UAAUkW,OAAS,WACvB,OAAOpzG,KAAKD,YAAYi8G,SAASh8G,KAAMk6G,EAAUM,KAAKgC,cAC1D,EAEOa,CACV,CA5OqB,GAqPtBt4C,EAAYy4C,aAAe,WACvB,IAAIvD,EAAa,CAAC,EAAG3iD,EAAS1vD,OAAO8+C,OAAOuzD,GAG5C,OAFA3iD,EAAO2iD,EAAW,GAAK,WAAa,EACpC3iD,EAAO2iD,EAAW,GAAK,YAAc,EAC9B3iD,CACV,CAL0B,GAOpByN,CACV,CAn/BkB,GAq/BnB74D,EAAKuxG,iBAAmB,WAiBpB,SAASA,EAAiB7C,GAEtB,GADA56G,KAAKwC,IAAM,GACPo4G,EACA,IAAK,IAAI59F,EAAOpV,OAAOoV,KAAK49F,GAAan7G,EAAI,EAAGA,EAAIud,EAAKpd,SAAUH,EACpC,MAAvBm7G,EAAW59F,EAAKvd,MAChBO,KAAKgd,EAAKvd,IAAMm7G,EAAW59F,EAAKvd,IAChD,CAgcA,OAxbAg+G,EAAiBvgB,UAAU16F,IAAM+3G,EAAMQ,WAUvC0C,EAAiB/2D,OAAS,SAAgBk0D,GACtC,OAAO,IAAI6C,EAAiB7C,EAChC,EAWA6C,EAAiBziG,OAAS,SAAgB6zD,EAASmsC,GAG/C,GAFKA,IACDA,EAASX,EAAQ3zD,UACF,MAAfmoB,EAAQrsE,KAAeqsE,EAAQrsE,IAAI5C,OACnC,IAAK,IAAIH,EAAI,EAAGA,EAAIovE,EAAQrsE,IAAI5C,SAAUH,EACtCg7G,EAAMvuG,KAAKuxG,iBAAiB9yD,UAAU3vC,OAAO6zD,EAAQrsE,IAAI/C,GAAIu7G,EAAOC,OAA8B,IAAIG,QAAQC,SACtH,OAAOL,CACX,EAWAyC,EAAiBlC,gBAAkB,SAAyB1sC,EAASmsC,GACjE,OAAOh7G,KAAKgb,OAAO6zD,EAASmsC,GAAQK,QACxC,EAaAoC,EAAiBxiG,OAAS,SAAgBugG,EAAQ57G,GACxC47G,aAAkBrB,IACpBqB,EAASrB,EAAQzzD,OAAO80D,IAE5B,IADA,IAAIz2E,OAAiBxlC,IAAXK,EAAuB47G,EAAOroE,IAAMqoE,EAAOhvC,IAAM5sE,EAAQivE,EAAU,IAAI4rC,EAAMvuG,KAAKuxG,iBACrFjC,EAAOhvC,IAAMznC,GAAK,CACrB,IAAI2gD,EAAM81B,EAAOP,SACTv1B,IAAQ,GACX,GACK7W,EAAQrsE,KAAOqsE,EAAQrsE,IAAI5C,SAC7BivE,EAAQrsE,IAAM,IAClBqsE,EAAQrsE,IAAI3C,KAAK46G,EAAMvuG,KAAKuxG,iBAAiB9yD,UAAU1vC,OAAOugG,EAAQA,EAAOP,YAG7EO,EAAOE,SAAe,EAANh2B,EAGxB,CACA,OAAO7W,CACX,EAYA4uC,EAAiB9B,gBAAkB,SAAyBH,GAGxD,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBx7G,KAAKib,OAAOugG,EAAQA,EAAOP,SACtC,EAUAwC,EAAiB7B,OAAS,SAAgB/sC,GACtC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAmB,MAAfA,EAAQrsE,KAAeqsE,EAAQzmE,eAAe,OAAQ,CACtD,IAAKnG,MAAMC,QAAQ2sE,EAAQrsE,KACvB,MAAO,sBACX,IAAK,IAAI/C,EAAI,EAAGA,EAAIovE,EAAQrsE,IAAI5C,SAAUH,EAAG,CACzC,IAAIysC,EAAQuuE,EAAMvuG,KAAKuxG,iBAAiB9yD,UAAUixD,OAAO/sC,EAAQrsE,IAAI/C,IACrE,GAAIysC,EACA,MAAO,OAASA,CACxB,CACJ,CACA,OAAO,IACX,EAUAuxE,EAAiB5B,WAAa,SAAoBC,GAC9C,GAAIA,aAAkBrB,EAAMvuG,KAAKuxG,iBAC7B,OAAO3B,EACX,IAAIjtC,EAAU,IAAI4rC,EAAMvuG,KAAKuxG,iBAC7B,GAAI3B,EAAOt5G,IAAK,CACZ,IAAKP,MAAMC,QAAQ45G,EAAOt5G,KACtB,MAAMnD,UAAU,8CACpBwvE,EAAQrsE,IAAM,GACd,IAAK,IAAI/C,EAAI,EAAGA,EAAIq8G,EAAOt5G,IAAI5C,SAAUH,EAAG,CACxC,GAA6B,iBAAlBq8G,EAAOt5G,IAAI/C,GAClB,MAAMJ,UAAU,+CACpBwvE,EAAQrsE,IAAI/C,GAAKg7G,EAAMvuG,KAAKuxG,iBAAiB9yD,UAAUkxD,WAAWC,EAAOt5G,IAAI/C,GACjF,CACJ,CACA,OAAOovE,CACX,EAWA4uC,EAAiBzB,SAAW,SAAkBntC,EAAS9rE,GAC9CA,IACDA,EAAU,CAAC,GACf,IAAI+4G,EAAS,CAAC,EAGd,IAFI/4G,EAAQk5G,QAAUl5G,EAAQm5G,YAC1BJ,EAAOt5G,IAAM,IACbqsE,EAAQrsE,KAAOqsE,EAAQrsE,IAAI5C,OAAQ,CACnCk8G,EAAOt5G,IAAM,GACb,IAAK,IAAIgE,EAAI,EAAGA,EAAIqoE,EAAQrsE,IAAI5C,SAAU4G,EACtCs1G,EAAOt5G,IAAIgE,GAAKi0G,EAAMvuG,KAAKuxG,iBAAiB9yD,UAAUqxD,SAASntC,EAAQrsE,IAAIgE,GAAIzD,EACvF,CACA,OAAO+4G,CACX,EASA2B,EAAiBvgB,UAAUkW,OAAS,WAChC,OAAOpzG,KAAKD,YAAYi8G,SAASh8G,KAAMk6G,EAAUM,KAAKgC,cAC1D,EAEAiB,EAAiB9yD,UAAY,WAmBzB,SAASA,EAAUiwD,GACf,GAAIA,EACA,IAAK,IAAI59F,EAAOpV,OAAOoV,KAAK49F,GAAan7G,EAAI,EAAGA,EAAIud,EAAKpd,SAAUH,EACpC,MAAvBm7G,EAAW59F,EAAKvd,MAChBO,KAAKgd,EAAKvd,IAAMm7G,EAAW59F,EAAKvd,IAChD,CA2BA,IAAIi+G,EAoNJ,OAvOA/yD,EAAUuyC,UAAU96C,SAAWm4D,EAAMlwC,KAAOkwC,EAAMlwC,KAAKxD,SAAS,EAAE,GAAE,GAAS,EAQ7Elc,EAAUuyC,UAAUjwC,SAAW,GAQ/BtC,EAAUuyC,UAAUlxC,WAAa,GAWjCpkD,OAAO4rG,eAAe7oD,EAAUuyC,UAAW,QAAS,CAChD96F,IAAKm4G,EAAMoD,YAAYD,EAAe,CAAC,WAAY,aACnD37G,IAAKw4G,EAAMqD,YAAYF,KAW3B/yD,EAAUjE,OAAS,SAAgBk0D,GAC/B,OAAO,IAAIjwD,EAAUiwD,EACzB,EAWAjwD,EAAU3vC,OAAS,SAAgB6zD,EAASmsC,GASxC,OARKA,IACDA,EAASX,EAAQ3zD,UACG,MAApBmoB,EAAQzsB,UAAoBysB,EAAQzmE,eAAe,aACnD4yG,EAAOC,OAA8B,GAAGE,MAAMtsC,EAAQzsB,UAClC,MAApBysB,EAAQ5hB,UAAoB4hB,EAAQzmE,eAAe,aACnD4yG,EAAOC,OAA8B,IAAI3M,OAAOz/B,EAAQ5hB,UAClC,MAAtB4hB,EAAQ7iB,YAAsB6iB,EAAQzmE,eAAe,eACrD4yG,EAAOC,OAA8B,IAAI3M,OAAOz/B,EAAQ7iB,YACrDgvD,CACX,EAWArwD,EAAU4wD,gBAAkB,SAAyB1sC,EAASmsC,GAC1D,OAAOh7G,KAAKgb,OAAO6zD,EAASmsC,GAAQK,QACxC,EAaA1wD,EAAU1vC,OAAS,SAAgBugG,EAAQ57G,GACjC47G,aAAkBrB,IACpBqB,EAASrB,EAAQzzD,OAAO80D,IAE5B,IADA,IAAIz2E,OAAiBxlC,IAAXK,EAAuB47G,EAAOroE,IAAMqoE,EAAOhvC,IAAM5sE,EAAQivE,EAAU,IAAI4rC,EAAMvuG,KAAKuxG,iBAAiB9yD,UACtG6wD,EAAOhvC,IAAMznC,GAAK,CACrB,IAAI2gD,EAAM81B,EAAOP,SACjB,OAAQv1B,IAAQ,GAChB,KAAK,EACD7W,EAAQzsB,SAAWo5D,EAAOL,QAC1B,MACJ,KAAK,EACDtsC,EAAQ5hB,SAAWuuD,EAAOlN,SAC1B,MACJ,KAAK,EACDz/B,EAAQ7iB,WAAawvD,EAAOlN,SAC5B,MACJ,QACIkN,EAAOE,SAAe,EAANh2B,GAGxB,CACA,OAAO7W,CACX,EAYAlkB,EAAUgxD,gBAAkB,SAAyBH,GAGjD,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBx7G,KAAKib,OAAOugG,EAAQA,EAAOP,SACtC,EAUAtwD,EAAUixD,OAAS,SAAgB/sC,GAC/B,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,IAAI+rC,EAAa,CAAC,EAClB,GAAwB,MAApB/rC,EAAQzsB,UAAoBysB,EAAQzmE,eAAe,cACnDwyG,EAAWt6G,MAAQ,IACdi6G,EAAM9vG,UAAUokE,EAAQzsB,WAAeysB,EAAQzsB,UAAYm4D,EAAM9vG,UAAUokE,EAAQzsB,SAASmoB,MAAQgwC,EAAM9vG,UAAUokE,EAAQzsB,SAASooB,QACtI,MAAO,kCAEf,GAAwB,MAApBqE,EAAQ5hB,UAAoB4hB,EAAQzmE,eAAe,YAAa,CAChE,GAAyB,IAArBwyG,EAAWt6G,MACX,MAAO,yBAEX,GADAs6G,EAAWt6G,MAAQ,GACdi6G,EAAMz1G,SAAS+pE,EAAQ5hB,UACxB,MAAO,2BACf,CACA,OAA0B,MAAtB4hB,EAAQ7iB,YAAsB6iB,EAAQzmE,eAAe,gBAChDmyG,EAAMz1G,SAAS+pE,EAAQ7iB,YACjB,8BACR,IACX,EAUArB,EAAUkxD,WAAa,SAAoBC,GACvC,GAAIA,aAAkBrB,EAAMvuG,KAAKuxG,iBAAiB9yD,UAC9C,OAAOmxD,EACX,IAAIjtC,EAAU,IAAI4rC,EAAMvuG,KAAKuxG,iBAAiB9yD,UAc9C,OAbuB,MAAnBmxD,EAAO15D,WACHm4D,EAAMlwC,MACLwE,EAAQzsB,SAAWm4D,EAAMlwC,KAAKC,UAAUwxC,EAAO15D,WAAWgoB,UAAW,EACtC,iBAApB0xC,EAAO15D,SACnBysB,EAAQzsB,SAAWkH,SAASwyD,EAAO15D,SAAU,IACb,iBAApB05D,EAAO15D,SACnBysB,EAAQzsB,SAAW05D,EAAO15D,SACM,iBAApB05D,EAAO15D,WACnBysB,EAAQzsB,SAAW,IAAIm4D,EAAMwB,SAASD,EAAO15D,SAASmoB,MAAQ,EAAGuxC,EAAO15D,SAASooB,OAAS,GAAGpE,aAC9E,MAAnB01C,EAAO7uD,WACP4hB,EAAQ5hB,SAAWikC,OAAO4qB,EAAO7uD,WACZ,MAArB6uD,EAAO9vD,aACP6iB,EAAQ7iB,WAAaklC,OAAO4qB,EAAO9vD,aAChC6iB,CACX,EAWAlkB,EAAUqxD,SAAW,SAAkBntC,EAAS9rE,GACvCA,IACDA,EAAU,CAAC,GACf,IAAI+4G,EAAS,CAAC,EAkBd,OAjBI/4G,EAAQm5G,WACRJ,EAAO9vD,WAAa,IACA,MAApB6iB,EAAQzsB,UAAoBysB,EAAQzmE,eAAe,cACnB,iBAArBymE,EAAQzsB,SACf05D,EAAO15D,SAAWr/C,EAAQq5G,QAAUlrB,OAASA,OAAOriB,EAAQzsB,UAAYysB,EAAQzsB,SAEhF05D,EAAO15D,SAAWr/C,EAAQq5G,QAAUlrB,OAASqpB,EAAMlwC,KAAK6yB,UAAUtkD,SAASvwC,KAAKwmE,EAAQzsB,UAAYr/C,EAAQq5G,QAAU35G,OAAS,IAAI83G,EAAMwB,SAASltC,EAAQzsB,SAASmoB,MAAQ,EAAGsE,EAAQzsB,SAASooB,OAAS,GAAGpE,WAAayI,EAAQzsB,SAChOr/C,EAAQ86G,SACR/B,EAAOx7G,MAAQ,aAEC,MAApBuuE,EAAQ5hB,UAAoB4hB,EAAQzmE,eAAe,cACnD0zG,EAAO7uD,SAAW4hB,EAAQ5hB,SACtBlqD,EAAQ86G,SACR/B,EAAOx7G,MAAQ,aAEG,MAAtBuuE,EAAQ7iB,YAAsB6iB,EAAQzmE,eAAe,gBACrD0zG,EAAO9vD,WAAa6iB,EAAQ7iB,YACzB8vD,CACX,EASAnxD,EAAUuyC,UAAUkW,OAAS,WACzB,OAAOpzG,KAAKD,YAAYi8G,SAASh8G,KAAMk6G,EAAUM,KAAKgC,cAC1D,EAEO7xD,CACV,CAxQ4B,GA0QtB8yD,CACV,CAxduB,GA0dxBvxG,EAAKwwG,UAAY,WAkBb,SAASA,EAAU9B,GACf,GAAIA,EACA,IAAK,IAAI59F,EAAOpV,OAAOoV,KAAK49F,GAAan7G,EAAI,EAAGA,EAAIud,EAAKpd,SAAUH,EACpC,MAAvBm7G,EAAW59F,EAAKvd,MAChBO,KAAKgd,EAAKvd,IAAMm7G,EAAW59F,EAAKvd,IAChD,CAmBA,IAAIi+G,EAoZJ,OA/ZAhB,EAAUxf,UAAUv9C,WAAa,KAQjC+8D,EAAUxf,UAAUlxC,WAAa,GAWjCpkD,OAAO4rG,eAAekJ,EAAUxf,UAAW,QAAS,CAChD96F,IAAKm4G,EAAMoD,YAAYD,EAAe,CAAC,eACvC37G,IAAKw4G,EAAMqD,YAAYF,KAW3BhB,EAAUh2D,OAAS,SAAgBk0D,GAC/B,OAAO,IAAI8B,EAAU9B,EACzB,EAWA8B,EAAU1hG,OAAS,SAAgB6zD,EAASmsC,GAOxC,OANKA,IACDA,EAASX,EAAQ3zD,UACK,MAAtBmoB,EAAQlvB,YAAsBkvB,EAAQzmE,eAAe,eACrDqyG,EAAMvuG,KAAKwwG,UAAUv7G,OAAO6Z,OAAO6zD,EAAQlvB,WAAYq7D,EAAOC,OAA8B,IAAIG,QAAQC,SAClF,MAAtBxsC,EAAQ7iB,YAAsB6iB,EAAQzmE,eAAe,eACrD4yG,EAAOC,OAA8B,IAAI3M,OAAOz/B,EAAQ7iB,YACrDgvD,CACX,EAWA0B,EAAUnB,gBAAkB,SAAyB1sC,EAASmsC,GAC1D,OAAOh7G,KAAKgb,OAAO6zD,EAASmsC,GAAQK,QACxC,EAaAqB,EAAUzhG,OAAS,SAAgBugG,EAAQ57G,GACjC47G,aAAkBrB,IACpBqB,EAASrB,EAAQzzD,OAAO80D,IAE5B,IADA,IAAIz2E,OAAiBxlC,IAAXK,EAAuB47G,EAAOroE,IAAMqoE,EAAOhvC,IAAM5sE,EAAQivE,EAAU,IAAI4rC,EAAMvuG,KAAKwwG,UACrFlB,EAAOhvC,IAAMznC,GAAK,CACrB,IAAI2gD,EAAM81B,EAAOP,SACjB,OAAQv1B,IAAQ,GAChB,KAAK,EACD7W,EAAQlvB,WAAa86D,EAAMvuG,KAAKwwG,UAAUv7G,OAAO8Z,OAAOugG,EAAQA,EAAOP,UACvE,MACJ,KAAK,EACDpsC,EAAQ7iB,WAAawvD,EAAOlN,SAC5B,MACJ,QACIkN,EAAOE,SAAe,EAANh2B,GAGxB,CACA,OAAO7W,CACX,EAYA6tC,EAAUf,gBAAkB,SAAyBH,GAGjD,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBx7G,KAAKib,OAAOugG,EAAQA,EAAOP,SACtC,EAUAyB,EAAUd,OAAS,SAAgB/sC,GAC/B,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBAEX,GAA0B,MAAtBA,EAAQlvB,YAAsBkvB,EAAQzmE,eAAe,cAAe,CAGhE,IAAI8jC,EAAQuuE,EAAMvuG,KAAKwwG,UAAUv7G,OAAOy6G,OAAO/sC,EAAQlvB,YACvD,GAAIzT,EACA,MAAO,cAAgBA,CAEnC,CACA,OAA0B,MAAtB2iC,EAAQ7iB,YAAsB6iB,EAAQzmE,eAAe,gBAChDmyG,EAAMz1G,SAAS+pE,EAAQ7iB,YACjB,8BACR,IACX,EAUA0wD,EAAUb,WAAa,SAAoBC,GACvC,GAAIA,aAAkBrB,EAAMvuG,KAAKwwG,UAC7B,OAAOZ,EACX,IAAIjtC,EAAU,IAAI4rC,EAAMvuG,KAAKwwG,UAC7B,GAAyB,MAArBZ,EAAOn8D,WAAoB,CAC3B,GAAiC,iBAAtBm8D,EAAOn8D,WACd,MAAMtgD,UAAU,+CACpBwvE,EAAQlvB,WAAa86D,EAAMvuG,KAAKwwG,UAAUv7G,OAAO06G,WAAWC,EAAOn8D,WACvE,CAGA,OAFyB,MAArBm8D,EAAO9vD,aACP6iB,EAAQ7iB,WAAaklC,OAAO4qB,EAAO9vD,aAChC6iB,CACX,EAWA6tC,EAAUV,SAAW,SAAkBntC,EAAS9rE,GACvCA,IACDA,EAAU,CAAC,GACf,IAAI+4G,EAAS,CAAC,EAUd,OATI/4G,EAAQm5G,WACRJ,EAAO9vD,WAAa,IACE,MAAtB6iB,EAAQlvB,YAAsBkvB,EAAQzmE,eAAe,gBACrD0zG,EAAOn8D,WAAa86D,EAAMvuG,KAAKwwG,UAAUv7G,OAAO66G,SAASntC,EAAQlvB,WAAY58C,GACzEA,EAAQ86G,SACR/B,EAAOx7G,MAAQ,eAEG,MAAtBuuE,EAAQ7iB,YAAsB6iB,EAAQzmE,eAAe,gBACrD0zG,EAAO9vD,WAAa6iB,EAAQ7iB,YACzB8vD,CACX,EASAY,EAAUxf,UAAUkW,OAAS,WACzB,OAAOpzG,KAAKD,YAAYi8G,SAASh8G,KAAMk6G,EAAUM,KAAKgC,cAC1D,EAEAE,EAAUv7G,OAAS,WAkBf,SAASA,EAAOy5G,GACZ,GAAIA,EACA,IAAK,IAAI59F,EAAOpV,OAAOoV,KAAK49F,GAAan7G,EAAI,EAAGA,EAAIud,EAAKpd,SAAUH,EACpC,MAAvBm7G,EAAW59F,EAAKvd,MAChBO,KAAKgd,EAAKvd,IAAMm7G,EAAW59F,EAAKvd,IAChD,CA6LA,OArLA0B,EAAO+7F,UAAUh7C,SAAW,EAQ5B/gD,EAAO+7F,UAAU9pF,MAAQ,KAUzBjS,EAAOulD,OAAS,SAAgBk0D,GAC5B,OAAO,IAAIz5G,EAAOy5G,EACtB,EAWAz5G,EAAO6Z,OAAS,SAAgB6zD,EAASmsC,GAOrC,OANKA,IACDA,EAASX,EAAQ3zD,UACG,MAApBmoB,EAAQ3sB,UAAoB2sB,EAAQzmE,eAAe,aACnD4yG,EAAOC,OAA8B,GAAGK,MAAMzsC,EAAQ3sB,UACrC,MAAjB2sB,EAAQz7D,OAAiBy7D,EAAQzmE,eAAe,UAChDqyG,EAAMvuG,KAAKuxG,iBAAiBziG,OAAO6zD,EAAQz7D,MAAO4nG,EAAOC,OAA8B,IAAIG,QAAQC,SAChGL,CACX,EAWA75G,EAAOo6G,gBAAkB,SAAyB1sC,EAASmsC,GACvD,OAAOh7G,KAAKgb,OAAO6zD,EAASmsC,GAAQK,QACxC,EAaAl6G,EAAO8Z,OAAS,SAAgBugG,EAAQ57G,GAC9B47G,aAAkBrB,IACpBqB,EAASrB,EAAQzzD,OAAO80D,IAE5B,IADA,IAAIz2E,OAAiBxlC,IAAXK,EAAuB47G,EAAOroE,IAAMqoE,EAAOhvC,IAAM5sE,EAAQivE,EAAU,IAAI4rC,EAAMvuG,KAAKwwG,UAAUv7G,OAC/Fq6G,EAAOhvC,IAAMznC,GAAK,CACrB,IAAI2gD,EAAM81B,EAAOP,SACjB,OAAQv1B,IAAQ,GAChB,KAAK,EACD7W,EAAQ3sB,SAAWs5D,EAAOF,QAC1B,MACJ,KAAK,EACDzsC,EAAQz7D,MAAQqnG,EAAMvuG,KAAKuxG,iBAAiBxiG,OAAOugG,EAAQA,EAAOP,UAClE,MACJ,QACIO,EAAOE,SAAe,EAANh2B,GAGxB,CACA,OAAO7W,CACX,EAYA1tE,EAAOw6G,gBAAkB,SAAyBH,GAG9C,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBx7G,KAAKib,OAAOugG,EAAQA,EAAOP,SACtC,EAUA95G,EAAOy6G,OAAS,SAAgB/sC,GAC5B,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAwB,MAApBA,EAAQ3sB,UAAoB2sB,EAAQzmE,eAAe,cAC9CmyG,EAAM9vG,UAAUokE,EAAQ3sB,UACzB,MAAO,6BACf,GAAqB,MAAjB2sB,EAAQz7D,OAAiBy7D,EAAQzmE,eAAe,SAAU,CAC1D,IAAI8jC,EAAQuuE,EAAMvuG,KAAKuxG,iBAAiB7B,OAAO/sC,EAAQz7D,OACvD,GAAI84B,EACA,MAAO,SAAWA,CAC1B,CACA,OAAO,IACX,EAUA/qC,EAAO06G,WAAa,SAAoBC,GACpC,GAAIA,aAAkBrB,EAAMvuG,KAAKwwG,UAAUv7G,OACvC,OAAO26G,EACX,IAAIjtC,EAAU,IAAI4rC,EAAMvuG,KAAKwwG,UAAUv7G,OAGvC,GAFuB,MAAnB26G,EAAO55D,WACP2sB,EAAQ3sB,SAA6B,EAAlB45D,EAAO55D,UACV,MAAhB45D,EAAO1oG,MAAe,CACtB,GAA4B,iBAAjB0oG,EAAO1oG,MACd,MAAM/T,UAAU,iDACpBwvE,EAAQz7D,MAAQqnG,EAAMvuG,KAAKuxG,iBAAiB5B,WAAWC,EAAO1oG,MAClE,CACA,OAAOy7D,CACX,EAWA1tE,EAAO66G,SAAW,SAAkBntC,EAAS9rE,GACpCA,IACDA,EAAU,CAAC,GACf,IAAI+4G,EAAS,CAAC,EASd,OARI/4G,EAAQm5G,WACRJ,EAAO55D,SAAW,EAClB45D,EAAO1oG,MAAQ,MAEK,MAApBy7D,EAAQ3sB,UAAoB2sB,EAAQzmE,eAAe,cACnD0zG,EAAO55D,SAAW2sB,EAAQ3sB,UACT,MAAjB2sB,EAAQz7D,OAAiBy7D,EAAQzmE,eAAe,WAChD0zG,EAAO1oG,MAAQqnG,EAAMvuG,KAAKuxG,iBAAiBzB,SAASntC,EAAQz7D,MAAOrQ,IAChE+4G,CACX,EASA36G,EAAO+7F,UAAUkW,OAAS,WACtB,OAAOpzG,KAAKD,YAAYi8G,SAASh8G,KAAMk6G,EAAUM,KAAKgC,cAC1D,EAEOr7G,CACV,CArNkB,GAuNZu7G,CACV,CA/bgB,GAicjBxwG,EAAK0wG,mBAAqB,WAkBtB,SAASA,EAAmBhC,GACxB,GAAIA,EACA,IAAK,IAAI59F,EAAOpV,OAAOoV,KAAK49F,GAAan7G,EAAI,EAAGA,EAAIud,EAAKpd,SAAUH,EACpC,MAAvBm7G,EAAW59F,EAAKvd,MAChBO,KAAKgd,EAAKvd,IAAMm7G,EAAW59F,EAAKvd,IAChD,CAsMA,OA9LAm9G,EAAmB1f,UAAU50C,OAAS,GAQtCs0D,EAAmB1f,UAAUxqF,QAAU6nG,EAAMlwC,KAAOkwC,EAAMlwC,KAAKxD,SAAS,EAAE,GAAE,GAAS,EAUrF+1C,EAAmBl2D,OAAS,SAAgBk0D,GACxC,OAAO,IAAIgC,EAAmBhC,EAClC,EAWAgC,EAAmB5hG,OAAS,SAAgB6zD,EAASmsC,GAOjD,OANKA,IACDA,EAASX,EAAQ3zD,UACC,MAAlBmoB,EAAQvmB,QAAkBumB,EAAQzmE,eAAe,WACjD4yG,EAAOC,OAA8B,IAAI3M,OAAOz/B,EAAQvmB,QACrC,MAAnBumB,EAAQn8D,SAAmBm8D,EAAQzmE,eAAe,YAClD4yG,EAAOC,OAA8B,IAAIE,MAAMtsC,EAAQn8D,SACpDsoG,CACX,EAWA4B,EAAmBrB,gBAAkB,SAAyB1sC,EAASmsC,GACnE,OAAOh7G,KAAKgb,OAAO6zD,EAASmsC,GAAQK,QACxC,EAaAuB,EAAmB3hG,OAAS,SAAgBugG,EAAQ57G,GAC1C47G,aAAkBrB,IACpBqB,EAASrB,EAAQzzD,OAAO80D,IAE5B,IADA,IAAIz2E,OAAiBxlC,IAAXK,EAAuB47G,EAAOroE,IAAMqoE,EAAOhvC,IAAM5sE,EAAQivE,EAAU,IAAI4rC,EAAMvuG,KAAK0wG,mBACrFpB,EAAOhvC,IAAMznC,GAAK,CACrB,IAAI2gD,EAAM81B,EAAOP,SACjB,OAAQv1B,IAAQ,GAChB,KAAK,EACD7W,EAAQvmB,OAASkzD,EAAOlN,SACxB,MACJ,KAAK,EACDz/B,EAAQn8D,QAAU8oG,EAAOL,QACzB,MACJ,QACIK,EAAOE,SAAe,EAANh2B,GAGxB,CACA,OAAO7W,CACX,EAYA+tC,EAAmBjB,gBAAkB,SAAyBH,GAG1D,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBx7G,KAAKib,OAAOugG,EAAQA,EAAOP,SACtC,EAUA2B,EAAmBhB,OAAS,SAAgB/sC,GACxC,MAAuB,iBAAZA,GAAoC,OAAZA,EACxB,kBACW,MAAlBA,EAAQvmB,QAAkBumB,EAAQzmE,eAAe,YAC5CmyG,EAAMz1G,SAAS+pE,EAAQvmB,QACjB,0BACQ,MAAnBumB,EAAQn8D,SAAmBm8D,EAAQzmE,eAAe,cAC7CmyG,EAAM9vG,UAAUokE,EAAQn8D,UAAcm8D,EAAQn8D,SAAW6nG,EAAM9vG,UAAUokE,EAAQn8D,QAAQ63D,MAAQgwC,EAAM9vG,UAAUokE,EAAQn8D,QAAQ83D,OAC3H,iCACR,IACX,EAUAoyC,EAAmBf,WAAa,SAAoBC,GAChD,GAAIA,aAAkBrB,EAAMvuG,KAAK0wG,mBAC7B,OAAOd,EACX,IAAIjtC,EAAU,IAAI4rC,EAAMvuG,KAAK0wG,mBAY7B,OAXqB,MAAjBd,EAAOxzD,SACPumB,EAAQvmB,OAAS4oC,OAAO4qB,EAAOxzD,SACb,MAAlBwzD,EAAOppG,UACH6nG,EAAMlwC,MACLwE,EAAQn8D,QAAU6nG,EAAMlwC,KAAKC,UAAUwxC,EAAOppG,UAAU03D,UAAW,EACrC,iBAAnB0xC,EAAOppG,QACnBm8D,EAAQn8D,QAAU42C,SAASwyD,EAAOppG,QAAS,IACZ,iBAAnBopG,EAAOppG,QACnBm8D,EAAQn8D,QAAUopG,EAAOppG,QACM,iBAAnBopG,EAAOppG,UACnBm8D,EAAQn8D,QAAU,IAAI6nG,EAAMwB,SAASD,EAAOppG,QAAQ63D,MAAQ,EAAGuxC,EAAOppG,QAAQ83D,OAAS,GAAGpE,aAC3FyI,CACX,EAWA+tC,EAAmBZ,SAAW,SAAkBntC,EAAS9rE,GAChDA,IACDA,EAAU,CAAC,GACf,IAAI+4G,EAAS,CAAC,EACd,GAAI/4G,EAAQm5G,SAER,GADAJ,EAAOxzD,OAAS,GACZiyD,EAAMlwC,KAAM,CACZ,IAAI8xC,EAAO,IAAI5B,EAAMlwC,KAAK,EAAG,GAAG,GAChCyxC,EAAOppG,QAAU3P,EAAQq5G,QAAUlrB,OAASirB,EAAKvjE,WAAa71C,EAAQq5G,QAAU35G,OAAS05G,EAAK/1C,WAAa+1C,CAC/G,MACIL,EAAOppG,QAAU3P,EAAQq5G,QAAUlrB,OAAS,IAAM,EAS1D,OAPsB,MAAlBriB,EAAQvmB,QAAkBumB,EAAQzmE,eAAe,YACjD0zG,EAAOxzD,OAASumB,EAAQvmB,QACL,MAAnBumB,EAAQn8D,SAAmBm8D,EAAQzmE,eAAe,aACnB,iBAApBymE,EAAQn8D,QACfopG,EAAOppG,QAAU3P,EAAQq5G,QAAUlrB,OAASA,OAAOriB,EAAQn8D,SAAWm8D,EAAQn8D,QAE9EopG,EAAOppG,QAAU3P,EAAQq5G,QAAUlrB,OAASqpB,EAAMlwC,KAAK6yB,UAAUtkD,SAASvwC,KAAKwmE,EAAQn8D,SAAW3P,EAAQq5G,QAAU35G,OAAS,IAAI83G,EAAMwB,SAASltC,EAAQn8D,QAAQ63D,MAAQ,EAAGsE,EAAQn8D,QAAQ83D,OAAS,GAAGpE,WAAayI,EAAQn8D,SAC7NopG,CACX,EASAc,EAAmB1f,UAAUkW,OAAS,WAClC,OAAOpzG,KAAKD,YAAYi8G,SAASh8G,KAAMk6G,EAAUM,KAAKgC,cAC1D,EAEOI,CACV,CA9NyB,GAgOnB1wG,GAGXzN,EAAOD,QAAUi8G,C,oCCpxJjBh8G,EAAOD,QAAU,EAAjB,K,oCCFA,IAAIs/G,EAAWt/G,EA2Bf,SAASu/G,IACLD,EAAStD,KAAKwD,aACdF,EAASxD,OAAO0D,WAAWF,EAASG,cACpCH,EAAS1D,OAAO4D,WAAWF,EAASI,aACxC,CAvBAJ,EAASr8F,MAAQ,UAGjBq8F,EAASxD,OAAe,EAAQ,MAChCwD,EAASG,aAAe,EAAQ,MAChCH,EAAS1D,OAAe,EAAQ,MAChC0D,EAASI,aAAe,EAAQ,KAGhCJ,EAAStD,KAAe,EAAQ,MAChCsD,EAASK,IAAe,EAAQ,MAChCL,EAASpD,MAAe,EAAQ,MAChCoD,EAASC,UAAeA,EAcxBA,G,oCClCAt/G,EAAOD,QAAU47G,EAEjB,IAEI8D,EAFA1D,EAAY,EAAQ,MAIpBuB,EAAYvB,EAAKuB,SACjB3J,EAAYoI,EAAKpI,KAGrB,SAASgM,EAAgB5C,EAAQ6C,GAC7B,OAAO17G,WAAW,uBAAyB64G,EAAOhvC,IAAM,OAAS6xC,GAAe,GAAK,MAAQ7C,EAAOroE,IACxG,CAQA,SAASinE,EAAOt3G,GAMZ9C,KAAK6nD,IAAM/kD,EAMX9C,KAAKwsE,IAAM,EAMXxsE,KAAKmzC,IAAMrwC,EAAOlD,MACtB,CAEA,IA4CQU,EA5CJg+G,EAAqC,oBAAf59G,WACpB,SAA4BoC,GAC1B,GAAIA,aAAkBpC,YAAcuB,MAAMC,QAAQY,GAC9C,OAAO,IAAIs3G,EAAOt3G,GACtB,MAAMtD,MAAM,iBAChB,EAEE,SAAsBsD,GACpB,GAAIb,MAAMC,QAAQY,GACd,OAAO,IAAIs3G,EAAOt3G,GACtB,MAAMtD,MAAM,iBAChB,EAEAknD,EAAS,WACT,OAAO8zD,EAAK+D,OACN,SAA6Bz7G,GAC3B,OAAQs3G,EAAO1zD,OAAS,SAAuB5jD,GAC3C,OAAO03G,EAAK+D,OAAOC,SAAS17G,GACtB,IAAIo7G,EAAap7G,GAEjBw7G,EAAax7G,EACvB,GAAGA,EACP,EAEEw7G,CACV,EAuDA,SAASG,IAEL,IAAIC,EAAO,IAAI3C,EAAS,EAAG,GACvBt8G,EAAI,EACR,KAAIO,KAAKmzC,IAAMnzC,KAAKwsE,IAAM,GAanB,CACH,KAAO/sE,EAAI,IAAKA,EAAG,CAEf,GAAIO,KAAKwsE,KAAOxsE,KAAKmzC,IACjB,MAAMirE,EAAgBp+G,MAG1B,GADA0+G,EAAK/M,IAAM+M,EAAK/M,IAA2B,IAArB3xG,KAAK6nD,IAAI7nD,KAAKwsE,OAAmB,EAAJ/sE,KAAW,EAC1DO,KAAK6nD,IAAI7nD,KAAKwsE,OAAS,IACvB,OAAOkyC,CACf,CAGA,OADAA,EAAK/M,IAAM+M,EAAK/M,IAA6B,IAAvB3xG,KAAK6nD,IAAI7nD,KAAKwsE,SAAqB,EAAJ/sE,KAAW,EACzDi/G,CACX,CAzBI,KAAOj/G,EAAI,IAAKA,EAGZ,GADAi/G,EAAK/M,IAAM+M,EAAK/M,IAA2B,IAArB3xG,KAAK6nD,IAAI7nD,KAAKwsE,OAAmB,EAAJ/sE,KAAW,EAC1DO,KAAK6nD,IAAI7nD,KAAKwsE,OAAS,IACvB,OAAOkyC,EAKf,GAFAA,EAAK/M,IAAM+M,EAAK/M,IAA2B,IAArB3xG,KAAK6nD,IAAI7nD,KAAKwsE,OAAe,MAAQ,EAC3DkyC,EAAK9M,IAAM8M,EAAK9M,IAA2B,IAArB5xG,KAAK6nD,IAAI7nD,KAAKwsE,OAAgB,KAAO,EACvDxsE,KAAK6nD,IAAI7nD,KAAKwsE,OAAS,IACvB,OAAOkyC,EAgBf,GAfIj/G,EAAI,EAeJO,KAAKmzC,IAAMnzC,KAAKwsE,IAAM,GACtB,KAAO/sE,EAAI,IAAKA,EAGZ,GADAi/G,EAAK9M,IAAM8M,EAAK9M,IAA2B,IAArB5xG,KAAK6nD,IAAI7nD,KAAKwsE,OAAmB,EAAJ/sE,EAAQ,KAAO,EAC9DO,KAAK6nD,IAAI7nD,KAAKwsE,OAAS,IACvB,OAAOkyC,OAGf,KAAOj/G,EAAI,IAAKA,EAAG,CAEf,GAAIO,KAAKwsE,KAAOxsE,KAAKmzC,IACjB,MAAMirE,EAAgBp+G,MAG1B,GADA0+G,EAAK9M,IAAM8M,EAAK9M,IAA2B,IAArB5xG,KAAK6nD,IAAI7nD,KAAKwsE,OAAmB,EAAJ/sE,EAAQ,KAAO,EAC9DO,KAAK6nD,IAAI7nD,KAAKwsE,OAAS,IACvB,OAAOkyC,CACf,CAGJ,MAAMl/G,MAAM,0BAChB,CAiCA,SAASm/G,EAAgB92D,EAAK9iB,GAC1B,OAAQ8iB,EAAI9iB,EAAM,GACV8iB,EAAI9iB,EAAM,IAAM,EAChB8iB,EAAI9iB,EAAM,IAAM,GAChB8iB,EAAI9iB,EAAM,IAAM,MAAQ,CACpC,CA8BA,SAAS65E,IAGL,GAAI5+G,KAAKwsE,IAAM,EAAIxsE,KAAKmzC,IACpB,MAAMirE,EAAgBp+G,KAAM,GAEhC,OAAO,IAAI+7G,EAAS4C,EAAgB3+G,KAAK6nD,IAAK7nD,KAAKwsE,KAAO,GAAImyC,EAAgB3+G,KAAK6nD,IAAK7nD,KAAKwsE,KAAO,GACxG,CA5KA4tC,EAAO1zD,OAASA,IAEhB0zD,EAAOld,UAAU2hB,OAASrE,EAAKv4G,MAAMi7F,UAAUt6E,UAAuC43F,EAAKv4G,MAAMi7F,UAAUzlF,MAO3G2iG,EAAOld,UAAU+d,QACT36G,EAAQ,WACL,WACuD,GAA1DA,GAAuC,IAArBN,KAAK6nD,IAAI7nD,KAAKwsE,QAAuB,EAAOxsE,KAAK6nD,IAAI7nD,KAAKwsE,OAAS,IAAK,OAAOlsE,EACvC,GAA1DA,GAASA,GAA8B,IAArBN,KAAK6nD,IAAI7nD,KAAKwsE,OAAgB,KAAO,EAAOxsE,KAAK6nD,IAAI7nD,KAAKwsE,OAAS,IAAK,OAAOlsE,EACvC,GAA1DA,GAASA,GAA8B,IAArBN,KAAK6nD,IAAI7nD,KAAKwsE,OAAe,MAAQ,EAAOxsE,KAAK6nD,IAAI7nD,KAAKwsE,OAAS,IAAK,OAAOlsE,EACvC,GAA1DA,GAASA,GAA8B,IAArBN,KAAK6nD,IAAI7nD,KAAKwsE,OAAe,MAAQ,EAAOxsE,KAAK6nD,IAAI7nD,KAAKwsE,OAAS,IAAK,OAAOlsE,EACvC,GAA1DA,GAASA,GAA+B,GAAtBN,KAAK6nD,IAAI7nD,KAAKwsE,OAAe,MAAQ,EAAOxsE,KAAK6nD,IAAI7nD,KAAKwsE,OAAS,IAAK,OAAOlsE,EAGjG,IAAKN,KAAKwsE,KAAO,GAAKxsE,KAAKmzC,IAEvB,MADAnzC,KAAKwsE,IAAMxsE,KAAKmzC,IACVirE,EAAgBp+G,KAAM,IAEhC,OAAOM,CACX,GAOJ85G,EAAOld,UAAUoe,MAAQ,WACrB,OAAuB,EAAhBt7G,KAAKi7G,QAChB,EAMAb,EAAOld,UAAU4hB,OAAS,WACtB,IAAIx+G,EAAQN,KAAKi7G,SACjB,OAAO36G,IAAU,IAAc,EAARA,GAAa,CACxC,EAoFA85G,EAAOld,UAAU6hB,KAAO,WACpB,OAAyB,IAAlB/+G,KAAKi7G,QAChB,EAaAb,EAAOld,UAAU8hB,QAAU,WAGvB,GAAIh/G,KAAKwsE,IAAM,EAAIxsE,KAAKmzC,IACpB,MAAMirE,EAAgBp+G,KAAM,GAEhC,OAAO2+G,EAAgB3+G,KAAK6nD,IAAK7nD,KAAKwsE,KAAO,EACjD,EAMA4tC,EAAOld,UAAU+hB,SAAW,WAGxB,GAAIj/G,KAAKwsE,IAAM,EAAIxsE,KAAKmzC,IACpB,MAAMirE,EAAgBp+G,KAAM,GAEhC,OAAkD,EAA3C2+G,EAAgB3+G,KAAK6nD,IAAK7nD,KAAKwsE,KAAO,EACjD,EAkCA4tC,EAAOld,UAAUge,MAAQ,WAGrB,GAAIl7G,KAAKwsE,IAAM,EAAIxsE,KAAKmzC,IACpB,MAAMirE,EAAgBp+G,KAAM,GAEhC,IAAIM,EAAQk6G,EAAKU,MAAMtL,YAAY5vG,KAAK6nD,IAAK7nD,KAAKwsE,KAElD,OADAxsE,KAAKwsE,KAAO,EACLlsE,CACX,EAOA85G,EAAOld,UAAUogB,OAAS,WAGtB,GAAIt9G,KAAKwsE,IAAM,EAAIxsE,KAAKmzC,IACpB,MAAMirE,EAAgBp+G,KAAM,GAEhC,IAAIM,EAAQk6G,EAAKU,MAAM7J,aAAarxG,KAAK6nD,IAAK7nD,KAAKwsE,KAEnD,OADAxsE,KAAKwsE,KAAO,EACLlsE,CACX,EAMA85G,EAAOld,UAAUvrC,MAAQ,WACrB,IAAI/xD,EAASI,KAAKi7G,SACd76E,EAASpgC,KAAKwsE,IACdznC,EAAS/kC,KAAKwsE,IAAM5sE,EAGxB,GAAImlC,EAAM/kC,KAAKmzC,IACX,MAAMirE,EAAgBp+G,KAAMJ,GAGhC,OADAI,KAAKwsE,KAAO5sE,EACRqC,MAAMC,QAAQlC,KAAK6nD,KACZ7nD,KAAK6nD,IAAIpwC,MAAM2oB,EAAO2E,GAC1B3E,IAAU2E,EACX,IAAI/kC,KAAK6nD,IAAI9nD,YAAY,GACzBC,KAAK6+G,OAAOx2G,KAAKrI,KAAK6nD,IAAKznB,EAAO2E,EAC5C,EAMAq1E,EAAOld,UAAUoR,OAAS,WACtB,IAAI38C,EAAQ3xD,KAAK2xD,QACjB,OAAOygD,EAAKC,KAAK1gD,EAAO,EAAGA,EAAM/xD,OACrC,EAOAw6G,EAAOld,UAAUgiB,KAAO,SAAct/G,GAClC,GAAsB,iBAAXA,EAAqB,CAE5B,GAAII,KAAKwsE,IAAM5sE,EAASI,KAAKmzC,IACzB,MAAMirE,EAAgBp+G,KAAMJ,GAChCI,KAAKwsE,KAAO5sE,CAChB,MACI,GAEI,GAAII,KAAKwsE,KAAOxsE,KAAKmzC,IACjB,MAAMirE,EAAgBp+G,YACE,IAAvBA,KAAK6nD,IAAI7nD,KAAKwsE,QAE3B,OAAOxsE,IACX,EAOAo6G,EAAOld,UAAUwe,SAAW,SAASyD,GACjC,OAAQA,GACJ,KAAK,EACDn/G,KAAKk/G,OACL,MACJ,KAAK,EACDl/G,KAAKk/G,KAAK,GACV,MACJ,KAAK,EACDl/G,KAAKk/G,KAAKl/G,KAAKi7G,UACf,MACJ,KAAK,EACD,KAA0C,IAAlCkE,EAA2B,EAAhBn/G,KAAKi7G,WACpBj7G,KAAK07G,SAASyD,GAElB,MACJ,KAAK,EACDn/G,KAAKk/G,KAAK,GACV,MAGJ,QACI,MAAM1/G,MAAM,qBAAuB2/G,EAAW,cAAgBn/G,KAAKwsE,KAE3E,OAAOxsE,IACX,EAEAo6G,EAAO4D,WAAa,SAASoB,GACzBlB,EAAekB,EACfhF,EAAO1zD,OAASA,IAChBw3D,EAAaF,aAEb,IAAI5oB,EAAKolB,EAAKnwC,KAAO,SAAsC,WAC3DmwC,EAAK6E,MAAMjF,EAAOld,UAAW,CAEzBie,MAAO,WACH,OAAOsD,EAAep2G,KAAKrI,MAAMo1F,IAAI,EACzC,EAEAmoB,OAAQ,WACJ,OAAOkB,EAAep2G,KAAKrI,MAAMo1F,IAAI,EACzC,EAEAkqB,OAAQ,WACJ,OAAOb,EAAep2G,KAAKrI,MAAMu/G,WAAWnqB,IAAI,EACpD,EAEAoqB,QAAS,WACL,OAAOZ,EAAYv2G,KAAKrI,MAAMo1F,IAAI,EACtC,EAEAqqB,SAAU,WACN,OAAOb,EAAYv2G,KAAKrI,MAAMo1F,IAAI,EACtC,GAGR,C,mCCzZA32F,EAAOD,QAAU0/G,EAGjB,IAAI9D,EAAS,EAAQ,OACpB8D,EAAahhB,UAAYt1F,OAAO8+C,OAAO0zD,EAAOld,YAAYn9F,YAAcm+G,EAEzE,IAAI1D,EAAO,EAAQ,MASnB,SAAS0D,EAAap7G,GAClBs3G,EAAO/xG,KAAKrI,KAAM8C,EAOtB,CAEAo7G,EAAaF,WAAa,WAElBxD,EAAK+D,SACLL,EAAahhB,UAAU2hB,OAASrE,EAAK+D,OAAOrhB,UAAUzlF,MAC9D,EAMAymG,EAAahhB,UAAUoR,OAAS,WAC5B,IAAIn7D,EAAMnzC,KAAKi7G,SACf,OAAOj7G,KAAK6nD,IAAI63D,UACV1/G,KAAK6nD,IAAI63D,UAAU1/G,KAAKwsE,IAAKxsE,KAAKwsE,IAAM1hE,KAAKC,IAAI/K,KAAKwsE,IAAMr5B,EAAKnzC,KAAKmzC,MACtEnzC,KAAK6nD,IAAIjP,SAAS,QAAS54C,KAAKwsE,IAAKxsE,KAAKwsE,IAAM1hE,KAAKC,IAAI/K,KAAKwsE,IAAMr5B,EAAKnzC,KAAKmzC,KACxF,EASA+qE,EAAaF,Y,gCCjDbv/G,EAAOD,QAAU,CAAC,C,oCCKRA,EA6BNmhH,QAAU,EAAQ,K,oCClCtBlhH,EAAOD,QAAUmhH,EAEjB,IAAInF,EAAO,EAAQ,MAsCnB,SAASmF,EAAQC,EAASC,EAAkBC,GAExC,GAAuB,mBAAZF,EACP,MAAMvgH,UAAU,8BAEpBm7G,EAAK3L,aAAaxmG,KAAKrI,MAMvBA,KAAK4/G,QAAUA,EAMf5/G,KAAK6/G,iBAAmBE,QAAQF,GAMhC7/G,KAAK8/G,kBAAoBC,QAAQD,EACrC,EA3DCH,EAAQziB,UAAYt1F,OAAO8+C,OAAO8zD,EAAK3L,aAAa3R,YAAYn9F,YAAc4/G,EAwE/EA,EAAQziB,UAAU8iB,QAAU,SAASA,EAAQC,EAAQC,EAAaC,EAAcC,EAASC,GAErF,IAAKD,EACD,MAAM/gH,UAAU,6BAEpB,IAAIT,EAAOoB,KACX,IAAKqgH,EACD,OAAO7F,EAAK8F,UAAUN,EAASphH,EAAMqhH,EAAQC,EAAaC,EAAcC,GAE5E,GAAKxhH,EAAKghH,QAKV,IACI,OAAOhhH,EAAKghH,QACRK,EACAC,EAAYthH,EAAKihH,iBAAmB,kBAAoB,UAAUO,GAAS3mE,UAC3E,SAAqBjwC,EAAKymF,GAEtB,GAAIzmF,EAEA,OADA5K,EAAKswG,KAAK,QAAS1lG,EAAKy2G,GACjBI,EAAS72G,GAGpB,GAAiB,OAAbymF,EAAJ,CAKA,KAAMA,aAAoBkwB,GACtB,IACIlwB,EAAWkwB,EAAavhH,EAAKkhH,kBAAoB,kBAAoB,UAAU7vB,EACnF,CAAE,MAAOzmF,GAEL,OADA5K,EAAKswG,KAAK,QAAS1lG,EAAKy2G,GACjBI,EAAS72G,EACpB,CAIJ,OADA5K,EAAKswG,KAAK,OAAQjf,EAAUgwB,GACrBI,EAAS,KAAMpwB,EAZtB,CAFIrxF,EAAKmmC,KAAqB,EAelC,GAER,CAAE,MAAOv7B,GAGL,OAFA5K,EAAKswG,KAAK,QAAS1lG,EAAKy2G,QACxBtsE,YAAW,WAAa0sE,EAAS72G,EAAM,GAAG,EAE9C,MArCImqC,YAAW,WAAa0sE,EAAS7gH,MAAM,iBAAmB,GAAG,EAsCrE,EAOAmgH,EAAQziB,UAAUn4D,IAAM,SAAaw7E,GAOjC,OANIvgH,KAAK4/G,UACAW,GACDvgH,KAAK4/G,QAAQ,KAAM,KAAM,MAC7B5/G,KAAK4/G,QAAU,KACf5/G,KAAKkvG,KAAK,OAAOF,OAEdhvG,IACX,C,oCC5IAvB,EAAOD,QAAUu9G,EAEjB,IAAIvB,EAAO,EAAQ,MAUnB,SAASuB,EAASpK,EAAIC,GASlB5xG,KAAK2xG,GAAKA,IAAO,EAMjB3xG,KAAK4xG,GAAKA,IAAO,CACrB,CAOA,IAAI4O,EAAOzE,EAASyE,KAAO,IAAIzE,EAAS,EAAG,GAE3CyE,EAAKp6C,SAAW,WAAa,OAAO,CAAG,EACvCo6C,EAAKC,SAAWD,EAAKjB,SAAW,WAAa,OAAOv/G,IAAM,EAC1DwgH,EAAK5gH,OAAS,WAAa,OAAO,CAAG,EAOrC,IAAI8gH,EAAW3E,EAAS2E,SAAW,mBAOnC3E,EAASlI,WAAa,SAAoBvzG,GACtC,GAAc,IAAVA,EACA,OAAOkgH,EACX,IAAIxQ,EAAO1vG,EAAQ,EACf0vG,IACA1vG,GAASA,GACb,IAAIqxG,EAAKrxG,IAAU,EACfsxG,GAAMtxG,EAAQqxG,GAAM,aAAe,EAUvC,OATI3B,IACA4B,GAAMA,IAAO,EACbD,GAAMA,IAAO,IACPA,EAAK,aACPA,EAAK,IACCC,EAAK,aACPA,EAAK,KAGV,IAAImK,EAASpK,EAAIC,EAC5B,EAOAmK,EAASn6G,KAAO,SAActB,GAC1B,GAAqB,iBAAVA,EACP,OAAOy7G,EAASlI,WAAWvzG,GAC/B,GAAIk6G,EAAK11G,SAASxE,GAAQ,CAEtB,IAAIk6G,EAAKnwC,KAGL,OAAO0xC,EAASlI,WAAWvqD,SAAShpD,EAAO,KAF3CA,EAAQk6G,EAAKnwC,KAAKoqC,WAAWn0G,EAGrC,CACA,OAAOA,EAAMiqE,KAAOjqE,EAAMkqE,KAAO,IAAIuxC,EAASz7G,EAAMiqE,MAAQ,EAAGjqE,EAAMkqE,OAAS,GAAKg2C,CACvF,EAOAzE,EAAS7e,UAAU92B,SAAW,SAAkBgE,GAC5C,IAAKA,GAAYpqE,KAAK4xG,KAAO,GAAI,CAC7B,IAAID,EAAgB,GAAV3xG,KAAK2xG,KAAW,EACtBC,GAAM5xG,KAAK4xG,KAAW,EAG1B,OAFKD,IACDC,EAAKA,EAAK,IAAM,KACXD,EAAU,WAALC,EAClB,CACA,OAAO5xG,KAAK2xG,GAAe,WAAV3xG,KAAK4xG,EAC1B,EAOAmK,EAAS7e,UAAUyjB,OAAS,SAAgBv2C,GACxC,OAAOowC,EAAKnwC,KACN,IAAImwC,EAAKnwC,KAAe,EAAVrqE,KAAK2xG,GAAkB,EAAV3xG,KAAK4xG,GAAQmO,QAAQ31C,IAEhD,CAAEG,IAAe,EAAVvqE,KAAK2xG,GAAQnnC,KAAgB,EAAVxqE,KAAK4xG,GAAQxnC,SAAU21C,QAAQ31C,GACnE,EAEA,IAAIknB,EAAaJ,OAAOgM,UAAU5L,WAOlCyqB,EAAS6E,SAAW,SAAkBC,GAClC,OAAIA,IAASH,EACFF,EACJ,IAAIzE,GACLzqB,EAAWjpF,KAAKw4G,EAAM,GACtBvvB,EAAWjpF,KAAKw4G,EAAM,IAAM,EAC5BvvB,EAAWjpF,KAAKw4G,EAAM,IAAM,GAC5BvvB,EAAWjpF,KAAKw4G,EAAM,IAAM,MAAQ,GAEpCvvB,EAAWjpF,KAAKw4G,EAAM,GACtBvvB,EAAWjpF,KAAKw4G,EAAM,IAAM,EAC5BvvB,EAAWjpF,KAAKw4G,EAAM,IAAM,GAC5BvvB,EAAWjpF,KAAKw4G,EAAM,IAAM,MAAQ,EAE9C,EAMA9E,EAAS7e,UAAU4jB,OAAS,WACxB,OAAO5vB,OAAOC,aACO,IAAjBnxF,KAAK2xG,GACL3xG,KAAK2xG,KAAO,EAAK,IACjB3xG,KAAK2xG,KAAO,GAAK,IACjB3xG,KAAK2xG,KAAO,GACK,IAAjB3xG,KAAK4xG,GACL5xG,KAAK4xG,KAAO,EAAK,IACjB5xG,KAAK4xG,KAAO,GAAK,IACjB5xG,KAAK4xG,KAAO,GAEpB,EAMAmK,EAAS7e,UAAUujB,SAAW,WAC1B,IAAIM,EAAS/gH,KAAK4xG,IAAM,GAGxB,OAFA5xG,KAAK4xG,KAAQ5xG,KAAK4xG,IAAM,EAAI5xG,KAAK2xG,KAAO,IAAMoP,KAAU,EACxD/gH,KAAK2xG,IAAQ3xG,KAAK2xG,IAAM,EAAsBoP,KAAU,EACjD/gH,IACX,EAMA+7G,EAAS7e,UAAUqiB,SAAW,WAC1B,IAAIwB,IAAmB,EAAV/gH,KAAK2xG,IAGlB,OAFA3xG,KAAK2xG,KAAQ3xG,KAAK2xG,KAAO,EAAI3xG,KAAK4xG,IAAM,IAAMmP,KAAU,EACxD/gH,KAAK4xG,IAAQ5xG,KAAK4xG,KAAO,EAAqBmP,KAAU,EACjD/gH,IACX,EAMA+7G,EAAS7e,UAAUt9F,OAAS,WACxB,IAAIohH,EAAShhH,KAAK2xG,GACdsP,GAASjhH,KAAK2xG,KAAO,GAAK3xG,KAAK4xG,IAAM,KAAO,EAC5CsP,EAASlhH,KAAK4xG,KAAO,GACzB,OAAiB,IAAVsP,EACU,IAAVD,EACED,EAAQ,MACNA,EAAQ,IAAM,EAAI,EAClBA,EAAQ,QAAU,EAAI,EACxBC,EAAQ,MACNA,EAAQ,IAAM,EAAI,EAClBA,EAAQ,QAAU,EAAI,EAC1BC,EAAQ,IAAM,EAAI,EAC7B,C,oCCtMA,IAAI1G,EAAOh8G,EA2OX,SAAS6gH,EAAMtuC,EAAK9qE,EAAKk7G,GACrB,IAAK,IAAInkG,EAAOpV,OAAOoV,KAAK/W,GAAMxG,EAAI,EAAGA,EAAIud,EAAKpd,SAAUH,OACnCF,IAAjBwxE,EAAI/zD,EAAKvd,KAAsB0hH,IAC/BpwC,EAAI/zD,EAAKvd,IAAMwG,EAAI+W,EAAKvd,KAChC,OAAOsxE,CACX,CAmBA,SAASqwC,EAASpiH,GAEd,SAASqiH,EAAYxyC,EAAS+rC,GAE1B,KAAM56G,gBAAgBqhH,GAClB,OAAO,IAAIA,EAAYxyC,EAAS+rC,GAKpChzG,OAAO4rG,eAAexzG,KAAM,UAAW,CAAEoC,IAAK,WAAa,OAAOysE,CAAS,IAGvErvE,MAAM8hH,kBACN9hH,MAAM8hH,kBAAkBthH,KAAMqhH,GAE9Bz5G,OAAO4rG,eAAexzG,KAAM,QAAS,CAAEM,OAAO,IAAId,OAAQgmD,OAAS,KAEnEo1D,GACAyE,EAAMr/G,KAAM46G,EACpB,CAUA,OARCyG,EAAYnkB,UAAYt1F,OAAO8+C,OAAOlnD,MAAM09F,YAAYn9F,YAAcshH,EAEvEz5G,OAAO4rG,eAAe6N,EAAYnkB,UAAW,OAAQ,CAAE96F,IAAK,WAAa,OAAOpD,CAAM,IAEtFqiH,EAAYnkB,UAAUtkD,SAAW,WAC7B,OAAO54C,KAAKhB,KAAO,KAAOgB,KAAK6uE,OACnC,EAEOwyC,CACX,CA/RA7G,EAAK8F,UAAY,EAAQ,MAGzB9F,EAAKnM,OAAS,EAAQ,MAGtBmM,EAAK3L,aAAe,EAAQ,MAG5B2L,EAAKU,MAAQ,EAAQ,KAGrBV,EAAK3I,QAAU,EAAQ,MAGvB2I,EAAKpI,KAAO,EAAQ,MAGpBoI,EAAKnkC,KAAO,EAAQ,MAGpBmkC,EAAKuB,SAAW,EAAQ,MAOxBvB,EAAK+G,OAASxB,aAA0B,IAAX,EAAAjxG,GACP,EAAAA,GACA,EAAAA,EAAO+/E,SACP,EAAA//E,EAAO+/E,QAAQC,UACf,EAAAhgF,EAAO+/E,QAAQC,SAAS70E,MAO9CugG,EAAKgH,OAAShH,EAAK+G,QAAU,EAAAzyG,GACG,oBAAXw+E,QAA0BA,QACf,oBAAX1uF,MAA0BA,MACjCoB,KAQdw6G,EAAKO,WAAanzG,OAAO65G,OAAS75G,OAAO65G,OAAO,IAAiC,GAOjFjH,EAAKkH,YAAc95G,OAAO65G,OAAS75G,OAAO65G,OAAO,CAAC,GAAgC,CAAC,EAQnFjH,EAAK/vG,UAAYhI,OAAOgI,WAAwC,SAAmBnK,GAC/E,MAAwB,iBAAVA,GAAsBi8G,SAASj8G,IAAUwK,KAAKyc,MAAMjnB,KAAWA,CACjF,EAOAk6G,EAAK11G,SAAW,SAAkBxE,GAC9B,MAAwB,iBAAVA,GAAsBA,aAAiB4wF,MACzD,EAOAspB,EAAKmH,SAAW,SAAkBrhH,GAC9B,OAAOA,GAA0B,iBAAVA,CAC3B,EAUAk6G,EAAKoH,MAQLpH,EAAKqH,MAAQ,SAAejyG,EAAKkyG,GAC7B,IAAIxhH,EAAQsP,EAAIkyG,GAChB,QAAa,MAATxhH,IAAiBsP,EAAIxH,eAAe05G,MACZ,iBAAVxhH,IAAuB2B,MAAMC,QAAQ5B,GAASA,EAAMV,OAASgI,OAAOoV,KAAK1c,GAAOV,QAAU,EAEhH,EAaA46G,EAAK+D,OAAS,WACV,IACI,IAAIA,EAAS/D,EAAK3I,QAAQ,UAAU0M,OAEpC,OAAOA,EAAOrhB,UAAU6kB,UAAYxD,EAAoC,IAC5E,CAAE,MAAOh1G,GAEL,OAAO,IACX,CACH,CATa,GAYdixG,EAAKwH,aAAe,KAGpBxH,EAAKyH,oBAAsB,KAO3BzH,EAAKM,UAAY,SAAmBoH,GAEhC,MAA8B,iBAAhBA,EACR1H,EAAK+D,OACD/D,EAAKyH,oBAAoBC,GACzB,IAAI1H,EAAKv4G,MAAMigH,GACnB1H,EAAK+D,OACD/D,EAAKwH,aAAaE,GACI,oBAAfxhH,WACHwhH,EACA,IAAIxhH,WAAWwhH,EACjC,EAMA1H,EAAKv4G,MAA8B,oBAAfvB,WAA6BA,WAAwCuB,MAezFu4G,EAAKnwC,KAAkCmwC,EAAKgH,OAAOW,SAAsC3H,EAAKgH,OAAOW,QAAQ93C,MACtEmwC,EAAKgH,OAAOn3C,MACvCmwC,EAAK3I,QAAQ,QAOzB2I,EAAK4H,OAAS,mBAOd5H,EAAK6H,QAAU,wBAOf7H,EAAK8H,QAAU,6CAOf9H,EAAK+H,WAAa,SAAoBjiH,GAClC,OAAOA,EACDk6G,EAAKuB,SAASn6G,KAAKtB,GAAOwgH,SAC1BtG,EAAKuB,SAAS2E,QACxB,EAQAlG,EAAKgI,aAAe,SAAsB3B,EAAMz2C,GAC5C,IAAIs0C,EAAOlE,EAAKuB,SAAS6E,SAASC,GAClC,OAAIrG,EAAKnwC,KACEmwC,EAAKnwC,KAAKxD,SAAS63C,EAAK/M,GAAI+M,EAAK9M,GAAIxnC,GACzCs0C,EAAKt4C,SAAS25C,QAAQ31C,GACjC,EAiBAowC,EAAK6E,MAAQA,EAOb7E,EAAKiI,QAAU,SAAiBj+C,GAC5B,OAAOA,EAAI5wB,OAAO,GAAG8uE,cAAgBl+C,EAAIjb,UAAU,EACvD,EAyCAixD,EAAK4G,SAAWA,EAmBhB5G,EAAKmI,cAAgBvB,EAAS,iBAoB9B5G,EAAKmD,YAAc,SAAkBiF,GAEjC,IADA,IAAIC,EAAW,CAAC,EACPpjH,EAAI,EAAGA,EAAImjH,EAAWhjH,SAAUH,EACrCojH,EAASD,EAAWnjH,IAAM,EAO9B,OAAO,WACH,IAAK,IAAIud,EAAOpV,OAAOoV,KAAKhd,MAAOP,EAAIud,EAAKpd,OAAS,EAAGH,GAAK,IAAKA,EAC9D,GAA0B,IAAtBojH,EAAS7lG,EAAKvd,UAA+BF,IAAlBS,KAAKgd,EAAKvd,KAAuC,OAAlBO,KAAKgd,EAAKvd,IACpE,OAAOud,EAAKvd,EACxB,CACJ,EAeA+6G,EAAKoD,YAAc,SAAkBgF,GAQjC,OAAO,SAAS5jH,GACZ,IAAK,IAAIS,EAAI,EAAGA,EAAImjH,EAAWhjH,SAAUH,EACjCmjH,EAAWnjH,KAAOT,UACXgB,KAAK4iH,EAAWnjH,GACnC,CACJ,EAkBA+6G,EAAKgC,cAAgB,CACjBJ,MAAOlrB,OACPmrB,MAAOnrB,OACPv/B,MAAOu/B,OACPorB,MAAM,GAIV9B,EAAKwD,WAAa,WACd,IAAIO,EAAS/D,EAAK+D,OAEbA,GAML/D,EAAKwH,aAAezD,EAAO38G,OAASlB,WAAWkB,MAAQ28G,EAAO38G,MAE1D,SAAqBtB,EAAOwiH,GACxB,OAAO,IAAIvE,EAAOj+G,EAAOwiH,EAC7B,EACJtI,EAAKyH,oBAAsB1D,EAAOwE,aAE9B,SAA4BxgH,GACxB,OAAO,IAAIg8G,EAAOh8G,EACtB,GAdAi4G,EAAKwH,aAAexH,EAAKyH,oBAAsB,IAevD,C,oCCnaAxjH,EAAOD,QAAU87G,EAEjB,IAEI2D,EAFAzD,EAAY,EAAQ,MAIpBuB,EAAYvB,EAAKuB,SACjB1N,EAAYmM,EAAKnM,OACjB+D,EAAYoI,EAAKpI,KAWrB,SAAS4Q,EAAG5tB,EAAIjiD,EAAK/N,GAMjBplC,KAAKo1F,GAAKA,EAMVp1F,KAAKmzC,IAAMA,EAMXnzC,KAAKgkD,UAAOzkD,EAMZS,KAAKolC,IAAMA,CACf,CAGA,SAAS69E,IAAQ,CAUjB,SAASC,EAAMlI,GAMXh7G,KAAKuzB,KAAOynF,EAAOznF,KAMnBvzB,KAAKwzB,KAAOwnF,EAAOxnF,KAMnBxzB,KAAKmzC,IAAM6nE,EAAO7nE,IAMlBnzC,KAAKgkD,KAAOg3D,EAAOmI,MACvB,CAOA,SAAS7I,IAMLt6G,KAAKmzC,IAAM,EAMXnzC,KAAKuzB,KAAO,IAAIyvF,EAAGC,EAAM,EAAG,GAM5BjjH,KAAKwzB,KAAOxzB,KAAKuzB,KAMjBvzB,KAAKmjH,OAAS,IAOlB,CAEA,IAAIz8D,EAAS,WACT,OAAO8zD,EAAK+D,OACN,WACE,OAAQjE,EAAO5zD,OAAS,WACpB,OAAO,IAAIu3D,CACf,IACJ,EAEE,WACE,OAAO,IAAI3D,CACf,CACR,EAqCA,SAAS8I,EAAUh+E,EAAKyiB,EAAK2kB,GACzB3kB,EAAI2kB,GAAa,IAANpnC,CACf,CAmBA,SAASi+E,EAASlwE,EAAK/N,GACnBplC,KAAKmzC,IAAMA,EACXnzC,KAAKgkD,UAAOzkD,EACZS,KAAKolC,IAAMA,CACf,CA6CA,SAASk+E,EAAcl+E,EAAKyiB,EAAK2kB,GAC7B,KAAOpnC,EAAIwsE,IACP/pD,EAAI2kB,KAAkB,IAATpnC,EAAIusE,GAAW,IAC5BvsE,EAAIusE,IAAMvsE,EAAIusE,KAAO,EAAIvsE,EAAIwsE,IAAM,MAAQ,EAC3CxsE,EAAIwsE,MAAQ,EAEhB,KAAOxsE,EAAIusE,GAAK,KACZ9pD,EAAI2kB,KAAkB,IAATpnC,EAAIusE,GAAW,IAC5BvsE,EAAIusE,GAAKvsE,EAAIusE,KAAO,EAExB9pD,EAAI2kB,KAASpnC,EAAIusE,EACrB,CA0CA,SAAS4R,EAAan+E,EAAKyiB,EAAK2kB,GAC5B3kB,EAAI2kB,GAA0B,IAAdpnC,EAChByiB,EAAI2kB,EAAM,GAAMpnC,IAAQ,EAAM,IAC9ByiB,EAAI2kB,EAAM,GAAMpnC,IAAQ,GAAM,IAC9ByiB,EAAI2kB,EAAM,GAAMpnC,IAAQ,EAC5B,CA9JAk1E,EAAO5zD,OAASA,IAOhB4zD,EAAOppC,MAAQ,SAAe3uE,GAC1B,OAAO,IAAIi4G,EAAKv4G,MAAMM,EAC1B,EAIIi4G,EAAKv4G,QAAUA,QACfq4G,EAAOppC,MAAQspC,EAAKnkC,KAAKikC,EAAOppC,MAAOspC,EAAKv4G,MAAMi7F,UAAUt6E,WAUhE03F,EAAOpd,UAAUsmB,MAAQ,SAAcpuB,EAAIjiD,EAAK/N,GAG5C,OAFAplC,KAAKwzB,KAAOxzB,KAAKwzB,KAAKwwB,KAAO,IAAIg/D,EAAG5tB,EAAIjiD,EAAK/N,GAC7CplC,KAAKmzC,KAAOA,EACLnzC,IACX,EA6BAqjH,EAASnmB,UAAYt1F,OAAO8+C,OAAOs8D,EAAG9lB,WACtCmmB,EAASnmB,UAAU9H,GAxBnB,SAAuBhwD,EAAKyiB,EAAK2kB,GAC7B,KAAOpnC,EAAM,KACTyiB,EAAI2kB,KAAe,IAANpnC,EAAY,IACzBA,KAAS,EAEbyiB,EAAI2kB,GAAOpnC,CACf,EAyBAk1E,EAAOpd,UAAU+d,OAAS,SAAsB36G,GAW5C,OARAN,KAAKmzC,MAAQnzC,KAAKwzB,KAAOxzB,KAAKwzB,KAAKwwB,KAAO,IAAIq/D,GACzC/iH,KAAkB,GACT,IAAY,EACpBA,EAAQ,MAAY,EACpBA,EAAQ,QAAY,EACpBA,EAAQ,UAAY,EACA,EAC1BA,IAAQ6yC,IACDnzC,IACX,EAQAs6G,EAAOpd,UAAUoe,MAAQ,SAAqBh7G,GAC1C,OAAOA,EAAQ,EACTN,KAAKwjH,MAAMF,EAAe,GAAIvH,EAASlI,WAAWvzG,IAClDN,KAAKi7G,OAAO36G,EACtB,EAOAg6G,EAAOpd,UAAU4hB,OAAS,SAAsBx+G,GAC5C,OAAON,KAAKi7G,QAAQ36G,GAAS,EAAIA,GAAS,MAAQ,EACtD,EAqBAg6G,EAAOpd,UAAUqgB,OAAS,SAAsBj9G,GAC5C,IAAIo+G,EAAO3C,EAASn6G,KAAKtB,GACzB,OAAON,KAAKwjH,MAAMF,EAAe5E,EAAK9+G,SAAU8+G,EACpD,EASApE,EAAOpd,UAAUie,MAAQb,EAAOpd,UAAUqgB,OAQ1CjD,EAAOpd,UAAUoiB,OAAS,SAAsBh/G,GAC5C,IAAIo+G,EAAO3C,EAASn6G,KAAKtB,GAAOmgH,WAChC,OAAOzgH,KAAKwjH,MAAMF,EAAe5E,EAAK9+G,SAAU8+G,EACpD,EAOApE,EAAOpd,UAAU6hB,KAAO,SAAoBz+G,GACxC,OAAON,KAAKwjH,MAAMJ,EAAW,EAAG9iH,EAAQ,EAAI,EAChD,EAcAg6G,EAAOpd,UAAU8hB,QAAU,SAAuB1+G,GAC9C,OAAON,KAAKwjH,MAAMD,EAAc,EAAGjjH,IAAU,EACjD,EAQAg6G,EAAOpd,UAAU+hB,SAAW3E,EAAOpd,UAAU8hB,QAQ7C1E,EAAOpd,UAAUsiB,QAAU,SAAuBl/G,GAC9C,IAAIo+G,EAAO3C,EAASn6G,KAAKtB,GACzB,OAAON,KAAKwjH,MAAMD,EAAc,EAAG7E,EAAK/M,IAAI6R,MAAMD,EAAc,EAAG7E,EAAK9M,GAC5E,EASA0I,EAAOpd,UAAUuiB,SAAWnF,EAAOpd,UAAUsiB,QAQ7ClF,EAAOpd,UAAUge,MAAQ,SAAqB56G,GAC1C,OAAON,KAAKwjH,MAAMhJ,EAAKU,MAAMxL,aAAc,EAAGpvG,EAClD,EAQAg6G,EAAOpd,UAAUogB,OAAS,SAAsBh9G,GAC5C,OAAON,KAAKwjH,MAAMhJ,EAAKU,MAAM/J,cAAe,EAAG7wG,EACnD,EAEA,IAAImjH,EAAajJ,EAAKv4G,MAAMi7F,UAAUn7F,IAChC,SAAwBqjC,EAAKyiB,EAAK2kB,GAChC3kB,EAAI9lD,IAAIqjC,EAAKonC,EACjB,EAEE,SAAwBpnC,EAAKyiB,EAAK2kB,GAChC,IAAK,IAAI/sE,EAAI,EAAGA,EAAI2lC,EAAIxlC,SAAUH,EAC9BooD,EAAI2kB,EAAM/sE,GAAK2lC,EAAI3lC,EAC3B,EAOJ66G,EAAOpd,UAAUvrC,MAAQ,SAAqBrxD,GAC1C,IAAI6yC,EAAM7yC,EAAMV,SAAW,EAC3B,IAAKuzC,EACD,OAAOnzC,KAAKwjH,MAAMJ,EAAW,EAAG,GACpC,GAAI5I,EAAK11G,SAASxE,GAAQ,CACtB,IAAIunD,EAAMyyD,EAAOppC,MAAM/9B,EAAMk7D,EAAOzuG,OAAOU,IAC3C+tG,EAAOpzF,OAAO3a,EAAOunD,EAAK,GAC1BvnD,EAAQunD,CACZ,CACA,OAAO7nD,KAAKi7G,OAAO9nE,GAAKqwE,MAAMC,EAAYtwE,EAAK7yC,EACnD,EAOAg6G,EAAOpd,UAAUoR,OAAS,SAAsBhuG,GAC5C,IAAI6yC,EAAMi/D,EAAKxyG,OAAOU,GACtB,OAAO6yC,EACDnzC,KAAKi7G,OAAO9nE,GAAKqwE,MAAMpR,EAAKE,MAAOn/D,EAAK7yC,GACxCN,KAAKwjH,MAAMJ,EAAW,EAAG,EACnC,EAOA9I,EAAOpd,UAAUke,KAAO,WAIpB,OAHAp7G,KAAKmjH,OAAS,IAAID,EAAMljH,MACxBA,KAAKuzB,KAAOvzB,KAAKwzB,KAAO,IAAIwvF,EAAGC,EAAM,EAAG,GACxCjjH,KAAKmzC,IAAM,EACJnzC,IACX,EAMAs6G,EAAOpd,UAAUx/C,MAAQ,WAUrB,OATI19C,KAAKmjH,QACLnjH,KAAKuzB,KAASvzB,KAAKmjH,OAAO5vF,KAC1BvzB,KAAKwzB,KAASxzB,KAAKmjH,OAAO3vF,KAC1BxzB,KAAKmzC,IAASnzC,KAAKmjH,OAAOhwE,IAC1BnzC,KAAKmjH,OAASnjH,KAAKmjH,OAAOn/D,OAE1BhkD,KAAKuzB,KAAOvzB,KAAKwzB,KAAO,IAAIwvF,EAAGC,EAAM,EAAG,GACxCjjH,KAAKmzC,IAAO,GAETnzC,IACX,EAMAs6G,EAAOpd,UAAUme,OAAS,WACtB,IAAI9nF,EAAOvzB,KAAKuzB,KACZC,EAAOxzB,KAAKwzB,KACZ2f,EAAOnzC,KAAKmzC,IAOhB,OANAnzC,KAAK09C,QAAQu9D,OAAO9nE,GAChBA,IACAnzC,KAAKwzB,KAAKwwB,KAAOzwB,EAAKywB,KACtBhkD,KAAKwzB,KAAOA,EACZxzB,KAAKmzC,KAAOA,GAETnzC,IACX,EAMAs6G,EAAOpd,UAAUzjD,OAAS,WAItB,IAHA,IAAIlmB,EAAOvzB,KAAKuzB,KAAKywB,KACjB6D,EAAO7nD,KAAKD,YAAYmxE,MAAMlxE,KAAKmzC,KACnCq5B,EAAO,EACJj5C,GACHA,EAAK6hE,GAAG7hE,EAAK6R,IAAKyiB,EAAK2kB,GACvBA,GAAOj5C,EAAK4f,IACZ5f,EAAOA,EAAKywB,KAGhB,OAAO6D,CACX,EAEAyyD,EAAO0D,WAAa,SAAS0F,GACzBzF,EAAeyF,EACfpJ,EAAO5zD,OAASA,IAChBu3D,EAAaD,YACjB,C,oCC/cAv/G,EAAOD,QAAUy/G,EAGjB,IAAI3D,EAAS,EAAQ,OACpB2D,EAAa/gB,UAAYt1F,OAAO8+C,OAAO4zD,EAAOpd,YAAYn9F,YAAck+G,EAEzE,IAAIzD,EAAO,EAAQ,MAQnB,SAASyD,IACL3D,EAAOjyG,KAAKrI,KAChB,CAuCA,SAAS2jH,EAAkBv+E,EAAKyiB,EAAK2kB,GAC7BpnC,EAAIxlC,OAAS,GACb46G,EAAKpI,KAAKE,MAAMltE,EAAKyiB,EAAK2kB,GACrB3kB,EAAIk6D,UACTl6D,EAAIk6D,UAAU38E,EAAKonC,GAEnB3kB,EAAIyqD,MAAMltE,EAAKonC,EACvB,CA5CAyxC,EAAaD,WAAa,WAOtBC,EAAa/sC,MAAQspC,EAAKyH,oBAE1BhE,EAAa2F,iBAAmBpJ,EAAK+D,QAAU/D,EAAK+D,OAAOrhB,qBAAqBx8F,YAAiD,QAAnC85G,EAAK+D,OAAOrhB,UAAUn7F,IAAI/C,KAClH,SAA8BomC,EAAKyiB,EAAK2kB,GACxC3kB,EAAI9lD,IAAIqjC,EAAKonC,EAEf,EAEE,SAA+BpnC,EAAKyiB,EAAK2kB,GACzC,GAAIpnC,EAAIy+E,KACNz+E,EAAIy+E,KAAKh8D,EAAK2kB,EAAK,EAAGpnC,EAAIxlC,aACvB,IAAK,IAAIH,EAAI,EAAGA,EAAI2lC,EAAIxlC,QAC3BioD,EAAI2kB,KAASpnC,EAAI3lC,IACrB,CACR,EAMAw+G,EAAa/gB,UAAUvrC,MAAQ,SAA4BrxD,GACnDk6G,EAAK11G,SAASxE,KACdA,EAAQk6G,EAAKwH,aAAa1hH,EAAO,WACrC,IAAI6yC,EAAM7yC,EAAMV,SAAW,EAI3B,OAHAI,KAAKi7G,OAAO9nE,GACRA,GACAnzC,KAAKwjH,MAAMvF,EAAa2F,iBAAkBzwE,EAAK7yC,GAC5CN,IACX,EAcAi+G,EAAa/gB,UAAUoR,OAAS,SAA6BhuG,GACzD,IAAI6yC,EAAMqnE,EAAK+D,OAAO51G,WAAWrI,GAIjC,OAHAN,KAAKi7G,OAAO9nE,GACRA,GACAnzC,KAAKwjH,MAAMG,EAAmBxwE,EAAK7yC,GAChCN,IACX,EAUAi+G,EAAaD,Y,kgFCnEb,IAAIx1D,EAAc,CAAC,EAKnBA,EAAYs7D,OAQZt7D,EAAYu7D,MAMZv7D,EAAYw7D,aAAe,EAM3Bx7D,EAAYy7D,WAAa,EAMzBz7D,EAAY07D,uBAAyB,EAMrC17D,EAAYiC,mBAAqB,EAKjCjC,EAAY27D,SAAW,CACrBC,WAAY,EACZC,aAAc,GAOhB77D,EAAY8yD,MAAQ,IAAIx6G,WAAW,GAMnC0nD,EAAY87D,QAAU,IAAI7jH,aAAa+nD,EAAY8yD,MAAMx4G,QAMzD0lD,EAAY+7D,QAAU,IAAIxjH,aAAaynD,EAAY8yD,MAAMx4G,QAMzD0lD,EAAYntC,eAAuE,IAAtD,IAAIza,YAAY,IAAIF,WAAW,CAAC,EAAG,IAAIoC,QAAQ,GAS5E0lD,EAAY6hB,KAAO,SAASE,EAAKC,GAK/BxqE,KAAKuqE,IAAY,EAANA,EAMXvqE,KAAKwqE,KAAc,EAAPA,CACd,EAOAhiB,EAAY6hB,KAAK3jB,OAAS,SAAS6jB,EAAKC,GAEtC,OAAc,GAAPD,GAAoB,GAARC,EAAYhiB,EAAY6hB,KAAK0pC,KAAO,IAAIvrD,EAAY6hB,KAAKE,EAAKC,EACnF,EAKAhiB,EAAY6hB,KAAK6yB,UAAUsnB,UAAY,WACrC,OAAQxkH,KAAKuqE,MAAQ,GAAiB,WAAZvqE,KAAKwqE,IACjC,EAMAhiB,EAAY6hB,KAAK6yB,UAAU+V,OAAS,SAASC,GAC3C,OAAOlzG,KAAKuqE,KAAO2oC,EAAM3oC,KAAOvqE,KAAKwqE,MAAQ0oC,EAAM1oC,IACrD,EAMAhiB,EAAY6hB,KAAK0pC,KAAO,IAAIvrD,EAAY6hB,KAAK,EAAG,GAUhD7hB,EAAYi8D,QAAU,SAASC,GAC7B,GAAKA,EAGCC,EAAeD,OAFnB,IAAIC,EAAe,KASrB3kH,KAAKiqD,GAAKzB,EAAYC,WAAWvY,SAASy0E,GAQ1C3kH,KAAK4kH,MAAQD,EAQb3kH,KAAK6kH,SAAW,EAQhB7kH,KAAK8kH,OAAS,KAQd9kH,KAAK+kH,cAAgB,EAQrB/kH,KAAKglH,UAAW,EAQhBhlH,KAAKilH,aAAe,EAQpBjlH,KAAKklH,QAAU,GAQfllH,KAAKmlH,iBAAmB,EAQxBnlH,KAAKolH,gBAAiB,CACxB,EAEA58D,EAAYi8D,QAAQvnB,UAAUmoB,MAAQ,WACpCrlH,KAAKiqD,GAAGo7D,QACRrlH,KAAK4kH,MAAQ5kH,KAAKiqD,GAAGq7D,WACrBtlH,KAAK6kH,SAAW,EAChB7kH,KAAK8kH,OAAS,KACd9kH,KAAK+kH,cAAgB,EACrB/kH,KAAKglH,UAAW,EAChBhlH,KAAKilH,aAAe,EACpBjlH,KAAKklH,QAAU,GACfllH,KAAKmlH,iBAAmB,EACxBnlH,KAAKolH,gBAAiB,CACxB,EASA58D,EAAYi8D,QAAQvnB,UAAUqoB,cAAgB,SAASA,GACrDvlH,KAAKolH,eAAiBG,CACxB,EASA/8D,EAAYi8D,QAAQvnB,UAAU94B,WAAa,WACzC,OAAOpkE,KAAKiqD,EACd,EAQAzB,EAAYi8D,QAAQvnB,UAAUsoB,aAAe,WAC3C,OAAOxlH,KAAKiqD,GAAG0H,QAAQ/uC,SAAS5iB,KAAKiqD,GAAG1c,WAAYvtC,KAAKiqD,GAAG1c,WAAavtC,KAAKynC,SAChF,EAYA+gB,EAAYi8D,QAAQvnB,UAAUptC,KAAO,SAASvtD,EAAMkjH,GAE9CljH,EAAOvC,KAAK6kH,WACd7kH,KAAK6kH,SAAWtiH,GAQlB,IAHA,IAAImjH,EAAwE,IAAvD1lH,KAAKiqD,GAAGq7D,WAAatlH,KAAK4kH,MAAQa,GAA2BljH,EAAO,EAGlFvC,KAAK4kH,MAAQc,EAAanjH,EAAOkjH,GAAkB,CACxD,IAAIE,EAAe3lH,KAAKiqD,GAAGq7D,WAC3BtlH,KAAKiqD,GAAKzB,EAAYi8D,QAAQmB,eAAe5lH,KAAKiqD,IAClDjqD,KAAK4kH,OAAS5kH,KAAKiqD,GAAGq7D,WAAaK,CACrC,CAEA3lH,KAAKkrE,IAAIw6C,EACX,EAKAl9D,EAAYi8D,QAAQvnB,UAAUhyB,IAAM,SAAS26C,GAC3C,IAAK,IAAIpmH,EAAI,EAAGA,EAAIomH,EAAWpmH,IAC7BO,KAAKiqD,GAAG67D,YAAY9lH,KAAK4kH,MAAO,EAEpC,EAKAp8D,EAAYi8D,QAAQvnB,UAAU4oB,UAAY,SAASxlH,GACjDN,KAAKiqD,GAAG67D,UAAU9lH,KAAK4kH,OAAS,EAAGtkH,EACrC,EAKAkoD,EAAYi8D,QAAQvnB,UAAU6oB,WAAa,SAASzlH,GAClDN,KAAKiqD,GAAG87D,WAAW/lH,KAAK4kH,OAAS,EAAGtkH,EACtC,EAKAkoD,EAAYi8D,QAAQvnB,UAAUntC,WAAa,SAASzvD,GAClDN,KAAKiqD,GAAG8F,WAAW/vD,KAAK4kH,OAAS,EAAGtkH,EACtC,EAKAkoD,EAAYi8D,QAAQvnB,UAAU8oB,WAAa,SAAS1lH,GAClDN,KAAKiqD,GAAG+7D,WAAWhmH,KAAK4kH,OAAS,EAAGtkH,EACtC,EAKAkoD,EAAYi8D,QAAQvnB,UAAU+oB,aAAe,SAAS3lH,GACpDN,KAAKiqD,GAAGg8D,aAAajmH,KAAK4kH,OAAS,EAAGtkH,EACxC,EAKAkoD,EAAYi8D,QAAQvnB,UAAUgpB,aAAe,SAAS5lH,GACpDN,KAAKiqD,GAAGi8D,aAAalmH,KAAK4kH,OAAS,EAAGtkH,EACxC,EAOAkoD,EAAYi8D,QAAQvnB,UAAUvmC,QAAU,SAASr2D,GAC/CN,KAAK8vD,KAAK,EAAG,GACb9vD,KAAK8lH,UAAUxlH,EACjB,EAMAkoD,EAAYi8D,QAAQvnB,UAAUipB,SAAW,SAAS7lH,GAChDN,KAAK8vD,KAAK,EAAG,GACb9vD,KAAK+lH,WAAWzlH,EAClB,EAMAkoD,EAAYi8D,QAAQvnB,UAAUvpC,SAAW,SAASrzD,GAChDN,KAAK8vD,KAAK,EAAG,GACb9vD,KAAK+vD,WAAWzvD,EAClB,EAMAkoD,EAAYi8D,QAAQvnB,UAAU7mC,SAAW,SAAS/1D,GAChDN,KAAK8vD,KAAK,EAAG,GACb9vD,KAAKgmH,WAAW1lH,EAClB,EAMAkoD,EAAYi8D,QAAQvnB,UAAUjkC,WAAa,SAAS34D,GAClDN,KAAK8vD,KAAK,EAAG,GACb9vD,KAAKimH,aAAa3lH,EACpB,EAMAkoD,EAAYi8D,QAAQvnB,UAAUkpB,WAAa,SAAS9lH,GAClDN,KAAK8vD,KAAK,EAAG,GACb9vD,KAAKkmH,aAAa5lH,EACpB,EAQAkoD,EAAYi8D,QAAQvnB,UAAU9vC,aAAe,SAASi5D,EAAS/lH,EAAOmM,IAChEzM,KAAKolH,gBAAkB9kH,GAASmM,KAClCzM,KAAK22D,QAAQr2D,GACbN,KAAKsmH,KAAKD,GAEd,EAOA79D,EAAYi8D,QAAQvnB,UAAUqpB,cAAgB,SAASF,EAAS/lH,EAAOmM,IACjEzM,KAAKolH,gBAAkB9kH,GAASmM,KAClCzM,KAAKmmH,SAAS7lH,GACdN,KAAKsmH,KAAKD,GAEd,EAOA79D,EAAYi8D,QAAQvnB,UAAUlvC,cAAgB,SAASq4D,EAAS/lH,EAAOmM,IACjEzM,KAAKolH,gBAAkB9kH,GAASmM,KAClCzM,KAAK2zD,SAASrzD,GACdN,KAAKsmH,KAAKD,GAEd,EAOA79D,EAAYi8D,QAAQvnB,UAAU5vC,cAAgB,SAAS+4D,EAAS/lH,EAAOmM,IACjEzM,KAAKolH,gBAAmB9kH,EAAM2yG,OAAOxmG,KACvCzM,KAAKq2D,SAAS/1D,GACdN,KAAKsmH,KAAKD,GAEd,EAOA79D,EAAYi8D,QAAQvnB,UAAU5kC,gBAAkB,SAAS+tD,EAAS/lH,EAAOmM,IACnEzM,KAAKolH,gBAAkB9kH,GAASmM,KAClCzM,KAAKi5D,WAAW34D,GAChBN,KAAKsmH,KAAKD,GAEd,EAOA79D,EAAYi8D,QAAQvnB,UAAUspB,gBAAkB,SAASH,EAAS/lH,EAAOmM,IACnEzM,KAAKolH,gBAAkB9kH,GAASmM,KAClCzM,KAAKomH,WAAW9lH,GAChBN,KAAKsmH,KAAKD,GAEd,EAOA79D,EAAYi8D,QAAQvnB,UAAU/xC,eAAiB,SAASk7D,EAAS/lH,EAAOmM,IAClEzM,KAAKolH,gBAAkB9kH,GAASmM,KAClCzM,KAAKsrD,UAAUhrD,GACfN,KAAKsmH,KAAKD,GAEd,EASA79D,EAAYi8D,QAAQvnB,UAAUupB,eAAiB,SAASJ,EAAS/lH,EAAOmM,GAClEnM,GAASmM,IACXzM,KAAK0mH,OAAOpmH,GACZN,KAAKsmH,KAAKD,GAEd,EASA79D,EAAYi8D,QAAQvnB,UAAUwpB,OAAS,SAAS92G,GAC9C,GAAIA,GAAO5P,KAAKynC,SACd,MAAM,IAAIjoC,MAAM,iDAEpB,EAMAgpD,EAAYi8D,QAAQvnB,UAAUypB,UAAY,WACxC,GAAI3mH,KAAKglH,SACP,MAAM,IAAIxlH,MAAM,wDAEpB,EAOAgpD,EAAYi8D,QAAQvnB,UAAUopB,KAAO,SAASD,GAC5CrmH,KAAK8kH,OAAOuB,GAAWrmH,KAAKynC,QAC9B,EAKA+gB,EAAYi8D,QAAQvnB,UAAUz1D,OAAS,WACrC,OAAOznC,KAAKiqD,GAAGq7D,WAAatlH,KAAK4kH,KACnC,EAcAp8D,EAAYi8D,QAAQmB,eAAiB,SAAS37D,GAC5C,IAAI07D,EAAe17D,EAAGq7D,WAGtB,GAAmB,WAAfK,EACF,MAAM,IAAInmH,MAAM,uDAGlB,IAAIonH,EAAejB,GAAgB,EAC/BkB,EAAMr+D,EAAYC,WAAWvY,SAAS02E,GAG1C,OAFAC,EAAIr8D,YAAYo8D,EAAejB,GAC/BkB,EAAIl1D,QAAQ5vD,IAAIkoD,EAAG0H,QAASi1D,EAAejB,GACpCkB,CACT,EAQAr+D,EAAYi8D,QAAQvnB,UAAU5xC,UAAY,SAAS7jB,GACjDznC,KAAK8vD,KAAKtH,EAAYy7D,WAAY,GAClCjkH,KAAK+vD,WAAW/vD,KAAKynC,SAAWA,EAAS+gB,EAAYy7D,WACvD,EAUAz7D,EAAYi8D,QAAQvnB,UAAUjyC,YAAc,SAAS67D,GACnD9mH,KAAK2mH,YACc,MAAf3mH,KAAK8kH,SACP9kH,KAAK8kH,OAAS,IAEhB9kH,KAAK+kH,cAAgB+B,EACrB,IAAK,IAAIrnH,EAAI,EAAGA,EAAIqnH,EAAWrnH,IAC7BO,KAAK8kH,OAAOrlH,GAAK,EAEnBO,KAAKglH,UAAW,EAChBhlH,KAAKilH,aAAejlH,KAAKynC,QAC3B,EAOA+gB,EAAYi8D,QAAQvnB,UAAUvxC,UAAY,WACxC,GAAmB,MAAf3rD,KAAK8kH,SAAmB9kH,KAAKglH,SAC/B,MAAM,IAAIxlH,MAAM,qDAGlBQ,KAAK2zD,SAAS,GAKd,IAJA,IAAIozD,EAAY/mH,KAAKynC,SAGjBhoC,EAAIO,KAAK+kH,cAAgB,EACtBtlH,GAAK,GAAuB,GAAlBO,KAAK8kH,OAAOrlH,GAASA,KAItC,IAHA,IAAIunH,EAAevnH,EAAI,EAGhBA,GAAK,EAAGA,IAEbO,KAAKmmH,SAA2B,GAAlBnmH,KAAK8kH,OAAOrlH,GAAUsnH,EAAY/mH,KAAK8kH,OAAOrlH,GAAK,GAInEO,KAAKmmH,SAASY,EAAY/mH,KAAKilH,cAC/B,IAAI9xE,GAAO6zE,EAFW,GAEuBx+D,EAAYw7D,aACzDhkH,KAAKmmH,SAAShzE,GAGd,IAAI8zE,EAAkB,EAClBC,EAAMlnH,KAAK4kH,MACjBuC,EACE,IAAK1nH,EAAI,EAAGA,EAAIO,KAAKklH,QAAQtlH,OAAQH,IAAK,CACxC,IAAI2nH,EAAMpnH,KAAKiqD,GAAGq7D,WAAatlH,KAAKklH,QAAQzlH,GAC5C,GAAI0zC,GAAOnzC,KAAKiqD,GAAGo9D,UAAUD,GAAM,CACjC,IAAK,IAAI5gH,EAAIgiD,EAAYw7D,aAAcx9G,EAAI2sC,EAAK3sC,GAAKgiD,EAAYw7D,aAC/D,GAAIhkH,KAAKiqD,GAAGo9D,UAAUH,EAAM1gH,IAAMxG,KAAKiqD,GAAGo9D,UAAUD,EAAM5gH,GACxD,SAAS2gH,EAGbF,EAAkBjnH,KAAKklH,QAAQzlH,GAC/B,KACF,CACF,CAmBA,OAjBIwnH,GAGFjnH,KAAK4kH,MAAQ5kH,KAAKiqD,GAAGq7D,WAAayB,EAGlC/mH,KAAKiqD,GAAG8F,WAAW/vD,KAAK4kH,MAAOqC,EAAkBF,KAIjD/mH,KAAKklH,QAAQrlH,KAAKG,KAAKynC,UAGvBznC,KAAKiqD,GAAG8F,WAAW/vD,KAAKiqD,GAAGq7D,WAAayB,EAAW/mH,KAAKynC,SAAWs/E,IAGrE/mH,KAAKglH,UAAW,EACT+B,CACT,EAUAv+D,EAAYi8D,QAAQvnB,UAAUzjD,OAAS,SAAS6tE,EAAYC,EAAqBC,GAC/E,IAAIC,EAAcD,EAAkBh/D,EAAYiC,mBAAqB,EACrE,GAAI88D,EAAqB,CACvB,IAAIG,EAAkBH,EAGtB,GAFAvnH,KAAK8vD,KAAK9vD,KAAK6kH,SAAUr8D,EAAYy7D,WACnCz7D,EAAY07D,uBAAyBuD,GACnCC,EAAgB9nH,QAAU4oD,EAAY07D,uBACxC,MAAM,IAAI1kH,MAAM,+CACdgpD,EAAY07D,wBAEhB,IAAK,IAAIzkH,EAAI+oD,EAAY07D,uBAAyB,EAAGzkH,GAAK,EAAGA,IAC3DO,KAAK8lH,UAAU4B,EAAgBp2B,WAAW7xF,GAE9C,CACAO,KAAK8vD,KAAK9vD,KAAK6kH,SAAUr8D,EAAYy7D,WAAawD,GAClDznH,KAAKsrD,UAAUg8D,GACXG,GACFznH,KAAK2zD,SAAS3zD,KAAKiqD,GAAGq7D,WAAatlH,KAAK4kH,OAE1C5kH,KAAKiqD,GAAGO,YAAYxqD,KAAK4kH,MAC3B,EAQAp8D,EAAYi8D,QAAQvnB,UAAUyqB,mBAAqB,SAAUL,EAAYC,GACvEvnH,KAAKy5C,OAAO6tE,EAAYC,GAAqB,EAC/C,EAUA/+D,EAAYi8D,QAAQvnB,UAAUv9B,cAAgB,SAASioD,EAAOC,GAC5D,IAAIC,EAAc9nH,KAAKiqD,GAAGq7D,WAAasC,EACnCG,EAAeD,EAAc9nH,KAAKiqD,GAAGK,UAAUw9D,GAInD,GAHoD,GAA3C9nH,KAAKiqD,GAAGo9D,UAAUU,EAAeF,GAIxC,MAAM,IAAIroH,MAAM,sBAAwBqoH,EAAQ,eAEpD,EAWAr/D,EAAYi8D,QAAQvnB,UAAU7xC,YAAc,SAAS28D,EAAWC,EAAWC,GACzEloH,KAAK2mH,YACL3mH,KAAKmlH,iBAAmB8C,EACxBjoH,KAAK8vD,KAAKtH,EAAYy7D,WAAY+D,EAAYC,GAC9CjoH,KAAK8vD,KAAKo4D,EAAWF,EAAYC,EACnC,EASAz/D,EAAYi8D,QAAQvnB,UAAU3xC,UAAY,WAExC,OADAvrD,KAAK+vD,WAAW/vD,KAAKmlH,kBACdnlH,KAAKynC,QACd,EAUA+gB,EAAYi8D,QAAQvnB,UAAUirB,aAAe,SAASv5G,GACpD,GAAIA,aAAalO,WACf,IAAI0xG,EAAOxjG,MAEX,CAAIwjG,EAAO,GAGX,IAHA,IACI3yG,EAAI,EAEDA,EAAImP,EAAEhP,QAAQ,CACnB,IAAIwoH,EAGA7sG,EAAI3M,EAAE0iF,WAAW7xF,MAEnB2oH,EADE7sG,EAAI,OAAUA,GAAK,MACTA,GAGCA,GAAK,IADV3M,EAAE0iF,WAAW7xF,MACO,UAId,IACd2yG,EAAKvyG,KAAKuoH,IAENA,EAAY,KACdhW,EAAKvyG,KAAOuoH,GAAa,EAAK,GAAQ,MAElCA,EAAY,MACdhW,EAAKvyG,KAAOuoH,GAAa,GAAM,GAAQ,KAEvChW,EAAKvyG,KACDuoH,GAAa,GAAM,EAAQ,IAC3BA,GAAa,GAAM,GAAQ,KAEjChW,EAAKvyG,KAAOuoH,GAAa,EAAK,GAAQ,MAExChW,EAAKvyG,KAAkB,GAAZuoH,EAAoB,KAEnC,CAjCa,CAoCfpoH,KAAK22D,QAAQ,GACb32D,KAAKqrD,YAAY,EAAG+mD,EAAKxyG,OAAQ,GACjCI,KAAKiqD,GAAGO,YAAYxqD,KAAK4kH,OAASxS,EAAKxyG,QAC9BH,EAAI,EAAb,IAAK,IAAWgoC,EAASznC,KAAK4kH,MAAOjzD,EAAQ3xD,KAAKiqD,GAAG0H,QAASlyD,EAAI2yG,EAAKxyG,OAAQH,IAC7EkyD,EAAMlqB,KAAY2qE,EAAK3yG,GAEzB,OAAOO,KAAKurD,WACd,EASA/C,EAAYi8D,QAAQvnB,UAAUlwC,WAAa,SAASud,EAAKC,GACvD,OAAOhiB,EAAY6hB,KAAK3jB,OAAO6jB,EAAKC,EACtC,EASAhiB,EAAYC,WAAa,SAASkJ,GAKhC3xD,KAAKqoH,OAAS12D,EAMd3xD,KAAKsoH,UAAY,CACnB,EAQA9/D,EAAYC,WAAWvY,SAAW,SAAS21E,GACzC,OAAO,IAAIr9D,EAAYC,WAAW,IAAI/nD,WAAWmlH,GACnD,EAEAr9D,EAAYC,WAAWy0C,UAAUmoB,MAAQ,WACvCrlH,KAAKsoH,UAAY,CACnB,EAOA9/D,EAAYC,WAAWy0C,UAAUvrC,MAAQ,WACvC,OAAO3xD,KAAKqoH,MACd,EAOA7/D,EAAYC,WAAWy0C,UAAU3vD,SAAW,WAC1C,OAAOvtC,KAAKsoH,SACd,EAOA9/D,EAAYC,WAAWy0C,UAAU1yC,YAAc,SAASjd,GACtDvtC,KAAKsoH,UAAY/6E,CACnB,EAOAib,EAAYC,WAAWy0C,UAAUooB,SAAW,WAC1C,OAAOtlH,KAAKqoH,OAAOzoH,MACrB,EAMA4oD,EAAYC,WAAWy0C,UAAUrwC,SAAW,SAASplB,GACnD,OAAOznC,KAAK40D,UAAUntB,IAAW,IAAM,EACzC,EAMA+gB,EAAYC,WAAWy0C,UAAUtoC,UAAY,SAASntB,GACpD,OAAOznC,KAAKqoH,OAAO5gF,EACrB,EAMA+gB,EAAYC,WAAWy0C,UAAUmqB,UAAY,SAAS5/E,GACpD,OAAOznC,KAAKuoH,WAAW9gF,IAAW,IAAM,EAC1C,EAMA+gB,EAAYC,WAAWy0C,UAAUqrB,WAAa,SAAS9gF,GACrD,OAAOznC,KAAKqoH,OAAO5gF,GAAUznC,KAAKqoH,OAAO5gF,EAAS,IAAM,CAC1D,EAMA+gB,EAAYC,WAAWy0C,UAAU5yC,UAAY,SAAS7iB,GACpD,OAAOznC,KAAKqoH,OAAO5gF,GAAUznC,KAAKqoH,OAAO5gF,EAAS,IAAM,EAAIznC,KAAKqoH,OAAO5gF,EAAS,IAAM,GAAKznC,KAAKqoH,OAAO5gF,EAAS,IAAM,EACzH,EAMA+gB,EAAYC,WAAWy0C,UAAU3tC,WAAa,SAAS9nB,GACrD,OAAOznC,KAAKsqD,UAAU7iB,KAAY,CACpC,EAMA+gB,EAAYC,WAAWy0C,UAAUnwC,UAAY,SAAStlB,GACpD,OAAO,IAAI+gB,EAAY6hB,KAAKrqE,KAAKsqD,UAAU7iB,GAASznC,KAAKsqD,UAAU7iB,EAAS,GAC9E,EAMA+gB,EAAYC,WAAWy0C,UAAUh/B,WAAa,SAASz2B,GACrD,OAAO,IAAI+gB,EAAY6hB,KAAKrqE,KAAKuvD,WAAW9nB,GAASznC,KAAKuvD,WAAW9nB,EAAS,GAChF,EAMA+gB,EAAYC,WAAWy0C,UAAUjlC,YAAc,SAASxwB,GAEtD,OADA+gB,EAAY8yD,MAAM,GAAKt7G,KAAKsqD,UAAU7iB,GAC/B+gB,EAAY87D,QAAQ,EAC7B,EAMA97D,EAAYC,WAAWy0C,UAAUsrB,YAAc,SAAS/gF,GAGtD,OAFA+gB,EAAY8yD,MAAM9yD,EAAYntC,eAAiB,EAAI,GAAKrb,KAAKsqD,UAAU7iB,GACvE+gB,EAAY8yD,MAAM9yD,EAAYntC,eAAiB,EAAI,GAAKrb,KAAKsqD,UAAU7iB,EAAS,GACzE+gB,EAAY+7D,QAAQ,EAC7B,EAMA/7D,EAAYC,WAAWy0C,UAAU4oB,UAAY,SAASr+E,EAAQnnC,GAC5DN,KAAKqoH,OAAO5gF,GAA+B,CAC7C,EAMA+gB,EAAYC,WAAWy0C,UAAUurB,WAAa,SAAShhF,EAAQnnC,GAC7DN,KAAKqoH,OAAO5gF,GAAUnnC,CACxB,EAMAkoD,EAAYC,WAAWy0C,UAAU6oB,WAAa,SAASt+E,EAAQnnC,GAC7DN,KAAKqoH,OAAO5gF,GAAUnnC,EACtBN,KAAKqoH,OAAO5gF,EAAS,GAAKnnC,GAAS,CACrC,EAMAkoD,EAAYC,WAAWy0C,UAAUwrB,YAAc,SAASjhF,EAAQnnC,GAC5DN,KAAKqoH,OAAO5gF,GAAUnnC,EACtBN,KAAKqoH,OAAO5gF,EAAS,GAAKnnC,GAAS,CACvC,EAMAkoD,EAAYC,WAAWy0C,UAAUntC,WAAa,SAAStoB,EAAQnnC,GAC7DN,KAAKqoH,OAAO5gF,GAAUnnC,EACtBN,KAAKqoH,OAAO5gF,EAAS,GAAKnnC,GAAS,EACnCN,KAAKqoH,OAAO5gF,EAAS,GAAKnnC,GAAS,GACnCN,KAAKqoH,OAAO5gF,EAAS,GAAKnnC,GAAS,EACrC,EAMAkoD,EAAYC,WAAWy0C,UAAUyrB,YAAc,SAASlhF,EAAQnnC,GAC5DN,KAAKqoH,OAAO5gF,GAAUnnC,EACtBN,KAAKqoH,OAAO5gF,EAAS,GAAKnnC,GAAS,EACnCN,KAAKqoH,OAAO5gF,EAAS,GAAKnnC,GAAS,GACnCN,KAAKqoH,OAAO5gF,EAAS,GAAKnnC,GAAS,EACvC,EAMAkoD,EAAYC,WAAWy0C,UAAU8oB,WAAa,SAASv+E,EAAQnnC,GAC7DN,KAAK+vD,WAAWtoB,EAAQnnC,EAAMiqE,KAC9BvqE,KAAK+vD,WAAWtoB,EAAS,EAAGnnC,EAAMkqE,KACpC,EAMAhiB,EAAYC,WAAWy0C,UAAU0rB,YAAc,SAASnhF,EAAQnnC,GAC5DN,KAAK2oH,YAAYlhF,EAAQnnC,EAAMiqE,KAC/BvqE,KAAK2oH,YAAYlhF,EAAS,EAAGnnC,EAAMkqE,KACvC,EAMAhiB,EAAYC,WAAWy0C,UAAU+oB,aAAe,SAASx+E,EAAQnnC,GAC/DkoD,EAAY87D,QAAQ,GAAKhkH,EACzBN,KAAK+vD,WAAWtoB,EAAQ+gB,EAAY8yD,MAAM,GAC5C,EAMA9yD,EAAYC,WAAWy0C,UAAUgpB,aAAe,SAASz+E,EAAQnnC,GAC/DkoD,EAAY+7D,QAAQ,GAAKjkH,EACzBN,KAAK+vD,WAAWtoB,EAAQ+gB,EAAY8yD,MAAM9yD,EAAYntC,eAAiB,EAAI,IAC3Erb,KAAK+vD,WAAWtoB,EAAS,EAAG+gB,EAAY8yD,MAAM9yD,EAAYntC,eAAiB,EAAI,GACjF,EAQAmtC,EAAYC,WAAWy0C,UAAU2rB,oBAAsB,WACrD,GAAI7oH,KAAKqoH,OAAOzoH,OAASI,KAAKsoH,UAAY9/D,EAAYy7D,WAClDz7D,EAAY07D,uBACd,MAAM,IAAI1kH,MACN,kEAGN,IADA,IAAIyS,EAAS,GACJxS,EAAI,EAAGA,EAAI+oD,EAAY07D,uBAAwBzkH,IACtDwS,GAAUi/E,OAAOC,aACbnxF,KAAK6sD,SAAS7sD,KAAKsoH,UAAY9/D,EAAYy7D,WAAaxkH,IAE9D,OAAOwS,CACT,EAUAu2C,EAAYC,WAAWy0C,UAAUxyC,SAAW,SAASR,EAAQ4+D,GAC3D,IAAIhE,EAAS56D,EAASlqD,KAAKsqD,UAAUJ,GACrC,OAAO4+D,EAAgB9oH,KAAKqnH,UAAUvC,GAAU9kH,KAAKqnH,UAAUvC,EAASgE,GAAiB,CAC3F,EASAtgE,EAAYC,WAAWy0C,UAAUpoC,QAAU,SAASjmD,EAAG44B,GAGrD,OAFA54B,EAAEq7C,OAASziB,EAASznC,KAAKsqD,UAAU7iB,GACnC54B,EAAEo7C,GAAKjqD,KACA6O,CACT,EAeA25C,EAAYC,WAAWy0C,UAAUhxC,SAAW,SAASzkB,EAAQshF,GAC3DthF,GAAUznC,KAAKsqD,UAAU7iB,GAEzB,IAAI7nC,EAASI,KAAKsqD,UAAU7iB,GACxBx1B,EAAS,GACTxS,EAAI,EAIR,GAFAgoC,GAAU+gB,EAAYy7D,WAElB8E,IAAiBvgE,EAAY27D,SAASC,WACxC,OAAOpkH,KAAKqoH,OAAOzlG,SAAS6kB,EAAQA,EAAS7nC,GAG/C,KAAOH,EAAIG,GAAQ,CACjB,IAAIwoH,EAGA7sG,EAAIvb,KAAK40D,UAAUntB,EAAShoC,KAChC,GAAI8b,EAAI,IACN6sG,EAAY7sG,MACP,CACL,IAAIxH,EAAI/T,KAAK40D,UAAUntB,EAAShoC,KAChC,GAAI8b,EAAI,IACN6sG,GACQ,GAAJ7sG,IAAa,EACV,GAAJxH,MACE,CACL,IAAIyH,EAAIxb,KAAK40D,UAAUntB,EAAShoC,KAE9B2oH,EADE7sG,EAAI,KAEE,GAAJA,IAAa,IACT,GAAJxH,IAAa,EACV,GAAJyH,GAIK,EAAJD,IAAa,IACT,GAAJxH,IAAa,IACT,GAAJyH,IAAa,EACV,GALCxb,KAAK40D,UAAUntB,EAAShoC,IAOpC,CACF,CAGI2oH,EAAY,MACdn2G,GAAUi/E,OAAOC,aAAai3B,IAE9BA,GAAa,MACbn2G,GAAUi/E,OAAOC,aACK,OAAnBi3B,GAAa,IACkB,OAAnB,KAAZA,IAEP,CAEA,OAAOn2G,CACT,EAOAu2C,EAAYC,WAAWy0C,UAAUtyC,WAAa,SAASnjB,GACrD,OAAOA,EAASznC,KAAKsqD,UAAU7iB,EACjC,EAQA+gB,EAAYC,WAAWy0C,UAAUryC,SAAW,SAASpjB,GACnD,OAAOA,EAASznC,KAAKsqD,UAAU7iB,GAAU+gB,EAAYy7D,UACvD,EAQAz7D,EAAYC,WAAWy0C,UAAUpyC,aAAe,SAASrjB,GACvD,OAAOznC,KAAKsqD,UAAU7iB,EAASznC,KAAKsqD,UAAU7iB,GAChD,EAMA+gB,EAAYC,WAAWy0C,UAAUr8B,iBAAmB,SAASmoD,GAC3D,GAAIA,EAAMppH,QAAU4oD,EAAY07D,uBAC9B,MAAM,IAAI1kH,MAAM,+CACAgpD,EAAY07D,wBAE9B,IAAK,IAAIzkH,EAAI,EAAGA,EAAI+oD,EAAY07D,uBAAwBzkH,IACtD,GAAIupH,EAAM13B,WAAW7xF,IAAMO,KAAK6sD,SAAS7sD,KAAKsoH,UAAY9/D,EAAYy7D,WAAaxkH,GACjF,OAAO,EAGX,OAAO,CACT,EASA+oD,EAAYC,WAAWy0C,UAAUlwC,WAAa,SAASud,EAAKC,GAC1D,OAAOhiB,EAAY6hB,KAAK3jB,OAAO6jB,EAAKC,EACtC,C,GCnuCIy+C,yBAA2B,CAAC,EAGhC,SAASC,oBAAoBC,GAE5B,IAAIC,EAAeH,yBAAyBE,GAC5C,QAAqB5pH,IAAjB6pH,EACH,OAAOA,EAAa5qH,QAGrB,IAAIC,EAASwqH,yBAAyBE,GAAY,CAGjD3qH,QAAS,CAAC,GAOX,OAHA6qH,oBAAoBF,GAAU9gH,KAAK5J,EAAOD,QAASC,EAAQA,EAAOD,QAAS0qH,qBAGpEzqH,EAAOD,OACf,CCrBA0qH,oBAAoB7xE,EAAI,SAAS54C,GAChC,IAAI6qH,EAAS7qH,GAAUA,EAAOg0G,WAC7B,WAAa,OAAOh0G,EAAgB,OAAG,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAyqH,oBAAoBlzG,EAAEszG,EAAQ,CAAE/tG,EAAG+tG,IAC5BA,CACR,ECNAJ,oBAAoBlzG,EAAI,SAASxX,EAAS+qH,GACzC,IAAI,IAAIphH,KAAOohH,EACXL,oBAAoBr5G,EAAE05G,EAAYphH,KAAS+gH,oBAAoBr5G,EAAErR,EAAS2J,IAC5EP,OAAO4rG,eAAeh1G,EAAS2J,EAAK,CAAEqhH,YAAY,EAAMpnH,IAAKmnH,EAAWphH,IAG3E,ECPA+gH,oBAAoBp6G,EAAI,WACvB,GAA0B,iBAAf26G,WAAyB,OAAOA,WAC3C,IACC,OAAOzpH,MAAQ,IAAI0pH,SAAS,cAAb,EAChB,CAAE,MAAOngH,GACR,GAAsB,iBAAX+jF,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxB47B,oBAAoBr5G,EAAI,SAASD,EAAKkyG,GAAQ,OAAOl6G,OAAOs1F,UAAU90F,eAAeC,KAAKuH,EAAKkyG,EAAO,ECCtGoH,oBAAoB7xF,EAAI,SAAS74B,GACX,oBAAXmrH,QAA0BA,OAAOC,aAC1ChiH,OAAO4rG,eAAeh1G,EAASmrH,OAAOC,YAAa,CAAEtpH,MAAO,WAE7DsH,OAAO4rG,eAAeh1G,EAAS,aAAc,CAAE8B,OAAO,GACvD,ECHA,IAAIupH,oBAAsBX,oBAAoB,M","sources":["webpack://ort/webpack/universalModuleDefinition","webpack://ort/../common/dist/lib/backend-impl.js","webpack://ort/../common/dist/lib/env.js","webpack://ort/../common/dist/lib/env-impl.js","webpack://ort/../common/dist/lib/tensor-impl.js","webpack://ort/../common/dist/lib/tensor.js","webpack://ort/../common/dist/lib/inference-session-impl.js","webpack://ort/../common/dist/lib/inference-session.js","webpack://ort/./lib/backend-onnxjs.ts","webpack://ort/./lib/backend-wasm.ts","webpack://ort/./lib/index.ts","webpack://ort/./lib/onnxjs/attribute-with-cache-key.ts","webpack://ort/./lib/onnxjs/attribute.ts","webpack://ort/./lib/onnxjs/backend.ts","webpack://ort/./lib/onnxjs/backends/backend-webgl.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-coordinate-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-definitions.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-encoding-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-fragcolor-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-function-inliner.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-preprocessor.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-registered-libs.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-shape-utils-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-source.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-vec-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/inference-handler.ts","webpack://ort/./lib/onnxjs/backends/webgl/op-resolve-rules.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/batch-normalization.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/binary-op.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/cast.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/concat-packed.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/concat.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/conv-grouped.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/conv-pack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/conv-transpose.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/conv.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/depth-to-space.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/dot-product.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/flatten.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/fuse-utils.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/gather.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/gemm.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/im2col-pack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/im2col.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/image-scaler.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/instance-normalization.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/lrn.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/matmul-pack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/matmul.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/pack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/packing-utils.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/pad.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/pool.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/reduce.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/reshape-packed.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/reshape.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/resize-packed.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/shape.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/slice.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/softmax.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/split.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/squeeze.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/sum.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/tile.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/transpose.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/uint8-encode.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/unary-op.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/unpack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/unsqueeze.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/upsample.ts","webpack://ort/./lib/onnxjs/backends/webgl/program-manager.ts","webpack://ort/./lib/onnxjs/backends/webgl/session-handler.ts","webpack://ort/./lib/onnxjs/backends/webgl/texture-data-encoder.ts","webpack://ort/./lib/onnxjs/backends/webgl/texture-layout-strategy.ts","webpack://ort/./lib/onnxjs/backends/webgl/texture-layout.ts","webpack://ort/./lib/onnxjs/backends/webgl/texture-manager.ts","webpack://ort/./lib/onnxjs/backends/webgl/types.ts","webpack://ort/./lib/onnxjs/backends/webgl/utils.ts","webpack://ort/./lib/onnxjs/backends/webgl/webgl-context-factory.ts","webpack://ort/./lib/onnxjs/backends/webgl/webgl-context.ts","webpack://ort/./lib/onnxjs/execution-plan.ts","webpack://ort/./lib/onnxjs/graph.ts","webpack://ort/./lib/onnxjs/instrument.ts","webpack://ort/./lib/onnxjs/model.ts","webpack://ort/./lib/onnxjs/operators.ts","webpack://ort/./lib/onnxjs/opset.ts","webpack://ort/./lib/onnxjs/ort-schema/ort-generated.ts","webpack://ort/./lib/onnxjs/session-handler.ts","webpack://ort/./lib/onnxjs/session.ts","webpack://ort/./lib/onnxjs/tensor.ts","webpack://ort/./lib/onnxjs/util.ts","webpack://ort/./lib/wasm/jsep/backend-webgpu.ts","webpack://ort/./lib/wasm/jsep/init.ts","webpack://ort/./lib/wasm/jsep/log.ts","webpack://ort/./lib/wasm/jsep/util.ts","webpack://ort/./lib/wasm/jsep/webgpu/attribute-with-cache-key.ts","webpack://ort/./lib/wasm/jsep/webgpu/gpu-data-manager.ts","webpack://ort/./lib/wasm/jsep/webgpu/op-resolve-rules.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/3rd-party/activation_util.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/3rd-party/conv2d_mm_webgpu.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/3rd-party/conv_util.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/3rd-party/matmul_packed_webgpu.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/binary-op.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/common.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/conv-grouped.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/conv.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/conv2d-mm.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/fuse-utils.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/gemm.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/matmul.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/pool.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/transpose.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/unary-op.ts","webpack://ort/./lib/wasm/jsep/webgpu/program-manager.ts","webpack://ort/./lib/wasm/jsep/webgpu/types.ts","webpack://ort/./lib/wasm/options-utils.ts","webpack://ort/./lib/wasm/proxy-wrapper.ts","webpack://ort/./lib/wasm/run-options.ts","webpack://ort/./lib/wasm/session-handler.ts","webpack://ort/./lib/wasm/session-options.ts","webpack://ort/./lib/wasm/string-utils.ts","webpack://ort/./lib/wasm/wasm-common.ts","webpack://ort/./lib/wasm/wasm-core-impl.ts","webpack://ort/./lib/wasm/wasm-factory.ts","webpack://ort/./lib/wasm/proxy-worker/main.ts","webpack://ort/../node_modules/worker-loader/dist/runtime/inline.js","webpack://ort/./lib/wasm/binding/ort-wasm-threaded.min.js","webpack://ort/./lib/wasm/binding/ort-wasm.js","webpack://ort/./node_modules/@protobufjs/aspromise/index.js","webpack://ort/./node_modules/@protobufjs/base64/index.js","webpack://ort/./node_modules/@protobufjs/eventemitter/index.js","webpack://ort/./node_modules/@protobufjs/float/index.js","webpack://ort/./node_modules/@protobufjs/inquire/index.js","webpack://ort/./node_modules/@protobufjs/pool/index.js","webpack://ort/./node_modules/@protobufjs/utf8/index.js","webpack://ort/./node_modules/guid-typescript/dist/guid.js","webpack://ort/./node_modules/long/src/long.js","webpack://ort/./node_modules/onnx-proto/dist/onnx.js","webpack://ort/./node_modules/protobufjs/minimal.js","webpack://ort/./node_modules/protobufjs/src/index-minimal.js","webpack://ort/./node_modules/protobufjs/src/reader.js","webpack://ort/./node_modules/protobufjs/src/reader_buffer.js","webpack://ort/./node_modules/protobufjs/src/roots.js","webpack://ort/./node_modules/protobufjs/src/rpc.js","webpack://ort/./node_modules/protobufjs/src/rpc/service.js","webpack://ort/./node_modules/protobufjs/src/util/longbits.js","webpack://ort/./node_modules/protobufjs/src/util/minimal.js","webpack://ort/./node_modules/protobufjs/src/writer.js","webpack://ort/./node_modules/protobufjs/src/writer_buffer.js","webpack://ort/./node_modules/flatbuffers/js/flatbuffers.mjs","webpack://ort/webpack/bootstrap","webpack://ort/webpack/runtime/compat get default export","webpack://ort/webpack/runtime/define property getters","webpack://ort/webpack/runtime/global","webpack://ort/webpack/runtime/hasOwnProperty shorthand","webpack://ort/webpack/runtime/make namespace object","webpack://ort/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ort\"] = factory();\n\telse\n\t\troot[\"ort\"] = factory();\n})(self, function() {\nreturn ","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nconst backends = {};\nconst backendsSortedByPriority = [];\n/**\n * Register a backend.\n *\n * @param name - the name as a key to lookup as an execution provider.\n * @param backend - the backend object.\n * @param priority - an integer indicating the priority of the backend. Higher number means higher priority. if priority\n * < 0, it will be considered as a 'beta' version and will not be used as a fallback backend by default.\n *\n * @internal\n */\nexport const registerBackend = (name, backend, priority) => {\n    if (backend && typeof backend.init === 'function' && typeof backend.createSessionHandler === 'function') {\n        const currentBackend = backends[name];\n        if (currentBackend === undefined) {\n            backends[name] = { backend, priority };\n        }\n        else if (currentBackend.priority > priority) {\n            // same name is already registered with a higher priority. skip registeration.\n            return;\n        }\n        else if (currentBackend.priority === priority) {\n            if (currentBackend.backend !== backend) {\n                throw new Error(`cannot register backend \"${name}\" using priority ${priority}`);\n            }\n        }\n        if (priority >= 0) {\n            const i = backendsSortedByPriority.indexOf(name);\n            if (i !== -1) {\n                backendsSortedByPriority.splice(i, 1);\n            }\n            for (let i = 0; i < backendsSortedByPriority.length; i++) {\n                if (backends[backendsSortedByPriority[i]].priority <= priority) {\n                    backendsSortedByPriority.splice(i, 0, name);\n                    return;\n                }\n            }\n            backendsSortedByPriority.push(name);\n        }\n        return;\n    }\n    throw new TypeError('not a valid backend');\n};\n/**\n * Resolve backend by specified hints.\n *\n * @param backendHints - a list of execution provider names to lookup. If omitted use registered backends as list.\n * @returns a promise that resolves to the backend.\n *\n * @internal\n */\nexport const resolveBackend = async (backendHints) => {\n    const backendNames = backendHints.length === 0 ? backendsSortedByPriority : backendHints;\n    const errors = [];\n    for (const backendName of backendNames) {\n        const backendInfo = backends[backendName];\n        if (backendInfo) {\n            if (backendInfo.initialized) {\n                return backendInfo.backend;\n            }\n            else if (backendInfo.aborted) {\n                continue; // current backend is unavailable; try next\n            }\n            const isInitializing = !!backendInfo.initPromise;\n            try {\n                if (!isInitializing) {\n                    backendInfo.initPromise = backendInfo.backend.init();\n                }\n                await backendInfo.initPromise;\n                backendInfo.initialized = true;\n                return backendInfo.backend;\n            }\n            catch (e) {\n                if (!isInitializing) {\n                    errors.push({ name: backendName, err: e });\n                }\n                backendInfo.aborted = true;\n            }\n            finally {\n                delete backendInfo.initPromise;\n            }\n        }\n    }\n    throw new Error(`no available backend found. ERR: ${errors.map(e => `[${e.name}] ${e.err}`).join(', ')}`);\n};\n//# sourceMappingURL=backend-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { EnvImpl } from './env-impl';\n/**\n * Represent a set of flags as a global singleton.\n */\nexport const env = new EnvImpl();\n//# sourceMappingURL=env.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nexport class EnvImpl {\n    constructor() {\n        this.wasm = {};\n        this.webgl = {};\n        this.webgpu = {};\n        this.logLevelInternal = 'warning';\n    }\n    // TODO standadize the getter and setter convention in env for other fields.\n    set logLevel(value) {\n        if (value === undefined) {\n            return;\n        }\n        if (typeof value !== 'string' || ['verbose', 'info', 'warning', 'error', 'fatal'].indexOf(value) === -1) {\n            throw new Error(`Unsupported logging level: ${value}`);\n        }\n        this.logLevelInternal = value;\n    }\n    get logLevel() {\n        return this.logLevelInternal;\n    }\n}\n//# sourceMappingURL=env-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP = new Map([\n    ['float32', Float32Array],\n    ['uint8', Uint8Array],\n    ['int8', Int8Array],\n    ['uint16', Uint16Array],\n    ['int16', Int16Array],\n    ['int32', Int32Array],\n    ['bool', Uint8Array],\n    ['float64', Float64Array],\n    ['uint32', Uint32Array],\n]);\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP = new Map([\n    [Float32Array, 'float32'],\n    [Uint8Array, 'uint8'],\n    [Int8Array, 'int8'],\n    [Uint16Array, 'uint16'],\n    [Int16Array, 'int16'],\n    [Int32Array, 'int32'],\n    [Float64Array, 'float64'],\n    [Uint32Array, 'uint32'],\n]);\n// the following code allows delaying execution of BigInt checking. This allows lazy initialization for\n// NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP and NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP, which allows BigInt polyfill\n// if available.\nlet isBigIntChecked = false;\nconst checkBigInt = () => {\n    if (!isBigIntChecked) {\n        isBigIntChecked = true;\n        const isBigInt64ArrayAvailable = typeof BigInt64Array !== 'undefined' && typeof BigInt64Array.from === 'function';\n        const isBigUint64ArrayAvailable = typeof BigUint64Array !== 'undefined' && typeof BigUint64Array.from === 'function';\n        if (isBigInt64ArrayAvailable) {\n            NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('int64', BigInt64Array);\n            NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array, 'int64');\n        }\n        if (isBigUint64ArrayAvailable) {\n            NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('uint64', BigUint64Array);\n            NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array, 'uint64');\n        }\n    }\n};\n/**\n * calculate size from dims.\n *\n * @param dims the dims array. May be an illegal input.\n */\nconst calculateSize = (dims) => {\n    let size = 1;\n    for (let i = 0; i < dims.length; i++) {\n        const dim = dims[i];\n        if (typeof dim !== 'number' || !Number.isSafeInteger(dim)) {\n            throw new TypeError(`dims[${i}] must be an integer, got: ${dim}`);\n        }\n        if (dim < 0) {\n            throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${dim}`);\n        }\n        size *= dim;\n    }\n    return size;\n};\nexport class Tensor {\n    constructor(arg0, arg1, arg2) {\n        checkBigInt();\n        let type;\n        let data;\n        let dims;\n        // check whether arg0 is type or data\n        if (typeof arg0 === 'string') {\n            //\n            // Override: constructor(type, data, ...)\n            //\n            type = arg0;\n            dims = arg2;\n            if (arg0 === 'string') {\n                // string tensor\n                if (!Array.isArray(arg1)) {\n                    throw new TypeError('A string tensor\\'s data must be a string array.');\n                }\n                // we don't check whether every element in the array is string; this is too slow. we assume it's correct and\n                // error will be populated at inference\n                data = arg1;\n            }\n            else {\n                // numeric tensor\n                const typedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(arg0);\n                if (typedArrayConstructor === undefined) {\n                    throw new TypeError(`Unsupported tensor type: ${arg0}.`);\n                }\n                if (Array.isArray(arg1)) {\n                    // use 'as any' here because TypeScript's check on type of 'SupportedTypedArrayConstructors.from()' produces\n                    // incorrect results.\n                    // 'typedArrayConstructor' should be one of the typed array prototype objects.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = typedArrayConstructor.from(arg1);\n                }\n                else if (arg1 instanceof typedArrayConstructor) {\n                    data = arg1;\n                }\n                else {\n                    throw new TypeError(`A ${type} tensor's data must be type of ${typedArrayConstructor}`);\n                }\n            }\n        }\n        else {\n            //\n            // Override: constructor(data, ...)\n            //\n            dims = arg1;\n            if (Array.isArray(arg0)) {\n                // only boolean[] and string[] is supported\n                if (arg0.length === 0) {\n                    throw new TypeError('Tensor type cannot be inferred from an empty array.');\n                }\n                const firstElementType = typeof arg0[0];\n                if (firstElementType === 'string') {\n                    type = 'string';\n                    data = arg0;\n                }\n                else if (firstElementType === 'boolean') {\n                    type = 'bool';\n                    // 'arg0' is of type 'boolean[]'. Uint8Array.from(boolean[]) actually works, but typescript thinks this is\n                    // wrong type. We use 'as any' to make it happy.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = Uint8Array.from(arg0);\n                }\n                else {\n                    throw new TypeError(`Invalid element type of data array: ${firstElementType}.`);\n                }\n            }\n            else {\n                // get tensor type from TypedArray\n                const mappedType = NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(arg0.constructor);\n                if (mappedType === undefined) {\n                    throw new TypeError(`Unsupported type for tensor data: ${arg0.constructor}.`);\n                }\n                type = mappedType;\n                data = arg0;\n            }\n        }\n        // type and data is processed, now processing dims\n        if (dims === undefined) {\n            // assume 1-D tensor if dims omitted\n            dims = [data.length];\n        }\n        else if (!Array.isArray(dims)) {\n            throw new TypeError('A tensor\\'s dims must be a number array');\n        }\n        // perform check\n        const size = calculateSize(dims);\n        if (size !== data.length) {\n            throw new Error(`Tensor's size(${size}) does not match data length(${data.length}).`);\n        }\n        this.dims = dims;\n        this.type = type;\n        this.data = data;\n        this.size = size;\n    }\n    // #endregion\n    /**\n     * Create a new tensor object from image object\n     *\n     * @param buffer - Extracted image buffer data - assuming RGBA format\n     * @param imageFormat - input image configuration - required configurations height, width, format\n     * @param tensorFormat - output tensor configuration - Default is RGB format\n     */\n    static bufferToTensor(buffer, options) {\n        if (buffer === undefined) {\n            throw new Error('Image buffer must be defined');\n        }\n        if (options.height === undefined || options.width === undefined) {\n            throw new Error('Image height and width must be defined');\n        }\n        if (options.tensorLayout === 'NHWC') {\n            throw new Error('NHWC Tensor layout is not supported yet');\n        }\n        const { height, width } = options;\n        const norm = options.norm ?? { mean: 255, bias: 0 };\n        let normMean;\n        let normBias;\n        if (typeof (norm.mean) === 'number') {\n            normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n        }\n        else {\n            normMean = [norm.mean[0], norm.mean[1], norm.mean[2], norm.mean[3] ?? 255];\n        }\n        if (typeof (norm.bias) === 'number') {\n            normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n        }\n        else {\n            normBias = [norm.bias[0], norm.bias[1], norm.bias[2], norm.bias[3] ?? 0];\n        }\n        const inputformat = options.bitmapFormat !== undefined ? options.bitmapFormat : 'RGBA';\n        // default value is RGBA since imagedata and HTMLImageElement uses it\n        const outputformat = options.tensorFormat !== undefined ?\n            (options.tensorFormat !== undefined ? options.tensorFormat : 'RGB') :\n            'RGB';\n        const stride = height * width;\n        const float32Data = outputformat === 'RGBA' ? new Float32Array(stride * 4) : new Float32Array(stride * 3);\n        // Default pointer assignments\n        let step = 4, rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n        let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n        // Updating the pointer assignments based on the input image format\n        if (inputformat === 'RGB') {\n            step = 3;\n            rImagePointer = 0;\n            gImagePointer = 1;\n            bImagePointer = 2;\n            aImagePointer = -1;\n        }\n        // Updating the pointer assignments based on the output tensor format\n        if (outputformat === 'RGBA') {\n            aTensorPointer = stride * 3;\n        }\n        else if (outputformat === 'RBG') {\n            rTensorPointer = 0;\n            bTensorPointer = stride;\n            gTensorPointer = stride * 2;\n        }\n        else if (outputformat === 'BGR') {\n            bTensorPointer = 0;\n            gTensorPointer = stride;\n            rTensorPointer = stride * 2;\n        }\n        for (let i = 0; i < stride; i++, rImagePointer += step, bImagePointer += step, gImagePointer += step, aImagePointer += step) {\n            float32Data[rTensorPointer++] = (buffer[rImagePointer] + normBias[0]) / normMean[0];\n            float32Data[gTensorPointer++] = (buffer[gImagePointer] + normBias[1]) / normMean[1];\n            float32Data[bTensorPointer++] = (buffer[bImagePointer] + normBias[2]) / normMean[2];\n            if (aTensorPointer !== -1 && aImagePointer !== -1) {\n                float32Data[aTensorPointer++] = (buffer[aImagePointer] + normBias[3]) / normMean[3];\n            }\n        }\n        // Float32Array -> ort.Tensor\n        const outputTensor = outputformat === 'RGBA' ? new Tensor('float32', float32Data, [1, 4, height, width]) :\n            new Tensor('float32', float32Data, [1, 3, height, width]);\n        return outputTensor;\n    }\n    static async fromImage(image, options) {\n        // checking the type of image object\n        const isHTMLImageEle = typeof (HTMLImageElement) !== 'undefined' && image instanceof HTMLImageElement;\n        const isImageDataEle = typeof (ImageData) !== 'undefined' && image instanceof ImageData;\n        const isImageBitmap = typeof (ImageBitmap) !== 'undefined' && image instanceof ImageBitmap;\n        const isString = typeof image === 'string';\n        let data;\n        let tensorConfig = options ?? {};\n        // filling and checking image configuration options\n        if (isHTMLImageEle) {\n            // HTMLImageElement - image object - format is RGBA by default\n            const canvas = document.createElement('canvas');\n            canvas.width = image.width;\n            canvas.height = image.height;\n            const pixels2DContext = canvas.getContext('2d');\n            if (pixels2DContext != null) {\n                let height = image.height;\n                let width = image.width;\n                if (options !== undefined && options.resizedHeight !== undefined && options.resizedWidth !== undefined) {\n                    height = options.resizedHeight;\n                    width = options.resizedWidth;\n                }\n                if (options !== undefined) {\n                    tensorConfig = options;\n                    if (options.tensorFormat !== undefined) {\n                        throw new Error('Image input config format must be RGBA for HTMLImageElement');\n                    }\n                    else {\n                        tensorConfig.tensorFormat = 'RGBA';\n                    }\n                    if (options.height !== undefined && options.height !== height) {\n                        throw new Error('Image input config height doesn\\'t match HTMLImageElement height');\n                    }\n                    else {\n                        tensorConfig.height = height;\n                    }\n                    if (options.width !== undefined && options.width !== width) {\n                        throw new Error('Image input config width doesn\\'t match HTMLImageElement width');\n                    }\n                    else {\n                        tensorConfig.width = width;\n                    }\n                }\n                else {\n                    tensorConfig.tensorFormat = 'RGBA';\n                    tensorConfig.height = height;\n                    tensorConfig.width = width;\n                }\n                pixels2DContext.drawImage(image, 0, 0);\n                data = pixels2DContext.getImageData(0, 0, width, height).data;\n            }\n            else {\n                throw new Error('Can not access image data');\n            }\n        }\n        else if (isImageDataEle) {\n            // ImageData - image object - format is RGBA by default\n            const format = 'RGBA';\n            let height;\n            let width;\n            if (options !== undefined && options.resizedWidth !== undefined && options.resizedHeight !== undefined) {\n                height = options.resizedHeight;\n                width = options.resizedWidth;\n            }\n            else {\n                height = image.height;\n                width = image.width;\n            }\n            if (options !== undefined) {\n                tensorConfig = options;\n                if (options.bitmapFormat !== undefined && options.bitmapFormat !== format) {\n                    throw new Error('Image input config format must be RGBA for ImageData');\n                }\n                else {\n                    tensorConfig.bitmapFormat = 'RGBA';\n                }\n            }\n            else {\n                tensorConfig.bitmapFormat = 'RGBA';\n            }\n            tensorConfig.height = height;\n            tensorConfig.width = width;\n            if (options !== undefined) {\n                const tempCanvas = document.createElement('canvas');\n                tempCanvas.width = width;\n                tempCanvas.height = height;\n                const pixels2DContext = tempCanvas.getContext('2d');\n                if (pixels2DContext != null) {\n                    pixels2DContext.putImageData(image, 0, 0);\n                    data = pixels2DContext.getImageData(0, 0, width, height).data;\n                }\n                else {\n                    throw new Error('Can not access image data');\n                }\n            }\n            else {\n                data = image.data;\n            }\n        }\n        else if (isImageBitmap) {\n            // ImageBitmap - image object - format must be provided by user\n            if (options === undefined) {\n                throw new Error('Please provide image config with format for Imagebitmap');\n            }\n            if (options.bitmapFormat !== undefined) {\n                throw new Error('Image input config format must be defined for ImageBitmap');\n            }\n            const pixels2DContext = document.createElement('canvas').getContext('2d');\n            if (pixels2DContext != null) {\n                const height = image.height;\n                const width = image.width;\n                pixels2DContext.drawImage(image, 0, 0, width, height);\n                data = pixels2DContext.getImageData(0, 0, width, height).data;\n                if (options !== undefined) {\n                    // using square brackets to avoid TS error - type 'never'\n                    if (options.height !== undefined && options.height !== height) {\n                        throw new Error('Image input config height doesn\\'t match ImageBitmap height');\n                    }\n                    else {\n                        tensorConfig.height = height;\n                    }\n                    // using square brackets to avoid TS error - type 'never'\n                    if (options.width !== undefined && options.width !== width) {\n                        throw new Error('Image input config width doesn\\'t match ImageBitmap width');\n                    }\n                    else {\n                        tensorConfig.width = width;\n                    }\n                }\n                else {\n                    tensorConfig.height = height;\n                    tensorConfig.width = width;\n                }\n                return Tensor.bufferToTensor(data, tensorConfig);\n            }\n            else {\n                throw new Error('Can not access image data');\n            }\n        }\n        else if (isString) {\n            return new Promise((resolve, reject) => {\n                const canvas = document.createElement('canvas');\n                const context = canvas.getContext('2d');\n                if (!image || !context) {\n                    return reject();\n                }\n                const newImage = new Image();\n                newImage.crossOrigin = 'Anonymous';\n                newImage.src = image;\n                newImage.onload = () => {\n                    canvas.width = newImage.width;\n                    canvas.height = newImage.height;\n                    context.drawImage(newImage, 0, 0, canvas.width, canvas.height);\n                    const img = context.getImageData(0, 0, canvas.width, canvas.height);\n                    if (options !== undefined) {\n                        if (options.height !== undefined && options.height !== canvas.height) {\n                            throw new Error('Image input config height doesn\\'t match height');\n                        }\n                        else {\n                            tensorConfig.height = canvas.height;\n                        }\n                        if (options.width !== undefined && options.width !== canvas.width) {\n                            throw new Error('Image input config width doesn\\'t match width');\n                        }\n                        else {\n                            tensorConfig.width = canvas.width;\n                        }\n                    }\n                    else {\n                        tensorConfig.height = canvas.height;\n                        tensorConfig.width = canvas.width;\n                    }\n                    resolve(Tensor.bufferToTensor(img.data, tensorConfig));\n                };\n            });\n        }\n        else {\n            throw new Error('Input data provided is not supported - aborted tensor creation');\n        }\n        if (data !== undefined) {\n            return Tensor.bufferToTensor(data, tensorConfig);\n        }\n        else {\n            throw new Error('Input data provided is not supported - aborted tensor creation');\n        }\n    }\n    toDataURL(options) {\n        const canvas = document.createElement('canvas');\n        canvas.width = this.dims[3];\n        canvas.height = this.dims[2];\n        const pixels2DContext = canvas.getContext('2d');\n        if (pixels2DContext != null) {\n            // Default values for height and width & format\n            let width;\n            let height;\n            if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n                width = this.dims[2];\n                height = this.dims[3];\n            }\n            else { // Default layout is NCWH\n                width = this.dims[3];\n                height = this.dims[2];\n            }\n            const inputformat = options?.format !== undefined ? options.format : 'RGB';\n            const norm = options?.norm;\n            let normMean;\n            let normBias;\n            if (norm === undefined || norm.mean === undefined) {\n                normMean = [255, 255, 255, 255];\n            }\n            else {\n                if (typeof (norm.mean) === 'number') {\n                    normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n                }\n                else {\n                    normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 0];\n                    if (norm.mean[3] !== undefined) {\n                        normMean[3] = norm.mean[3];\n                    }\n                }\n            }\n            if (norm === undefined || norm.bias === undefined) {\n                normBias = [0, 0, 0, 0];\n            }\n            else {\n                if (typeof (norm.bias) === 'number') {\n                    normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n                }\n                else {\n                    normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n                    if (norm.bias[3] !== undefined) {\n                        normBias[3] = norm.bias[3];\n                    }\n                }\n            }\n            const stride = height * width;\n            // Default pointer assignments\n            let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n            // Updating the pointer assignments based on the input image format\n            if (inputformat === 'RGBA') {\n                rTensorPointer = 0;\n                gTensorPointer = stride;\n                bTensorPointer = stride * 2;\n                aTensorPointer = stride * 3;\n            }\n            else if (inputformat === 'RGB') {\n                rTensorPointer = 0;\n                gTensorPointer = stride;\n                bTensorPointer = stride * 2;\n            }\n            else if (inputformat === 'RBG') {\n                rTensorPointer = 0;\n                bTensorPointer = stride;\n                gTensorPointer = stride * 2;\n            }\n            for (let i = 0; i < height; i++) {\n                for (let j = 0; j < width; j++) {\n                    const R = (this.data[rTensorPointer++] - normBias[0]) * normMean[0]; // R value\n                    const G = (this.data[gTensorPointer++] - normBias[1]) * normMean[1]; // G value\n                    const B = (this.data[bTensorPointer++] - normBias[2]) * normMean[2]; // B value\n                    const A = aTensorPointer === -1 ?\n                        255 :\n                        (this.data[aTensorPointer++] - normBias[3]) * normMean[3]; // A value\n                    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n                    pixels2DContext.fillStyle = 'rgba(' + R + ',' + G + ',' + B + ',' + A + ')';\n                    pixels2DContext.fillRect(j, i, 1, 1);\n                }\n            }\n            return canvas.toDataURL();\n        }\n        else {\n            throw new Error('Can not access image data');\n        }\n    }\n    toImageData(options) {\n        const pixels2DContext = document.createElement('canvas').getContext('2d');\n        let image;\n        if (pixels2DContext != null) {\n            // Default values for height and width & format\n            let width;\n            let height;\n            let channels;\n            if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n                width = this.dims[2];\n                height = this.dims[1];\n                channels = this.dims[3];\n            }\n            else { // Default layout is NCWH\n                width = this.dims[3];\n                height = this.dims[2];\n                channels = this.dims[1];\n            }\n            const inputformat = options !== undefined ? (options.format !== undefined ? options.format : 'RGB') : 'RGB';\n            const norm = options?.norm;\n            let normMean;\n            let normBias;\n            if (norm === undefined || norm.mean === undefined) {\n                normMean = [255, 255, 255, 255];\n            }\n            else {\n                if (typeof (norm.mean) === 'number') {\n                    normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n                }\n                else {\n                    normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 255];\n                    if (norm.mean[3] !== undefined) {\n                        normMean[3] = norm.mean[3];\n                    }\n                }\n            }\n            if (norm === undefined || norm.bias === undefined) {\n                normBias = [0, 0, 0, 0];\n            }\n            else {\n                if (typeof (norm.bias) === 'number') {\n                    normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n                }\n                else {\n                    normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n                    if (norm.bias[3] !== undefined) {\n                        normBias[3] = norm.bias[3];\n                    }\n                }\n            }\n            const stride = height * width;\n            if (options !== undefined) {\n                if (options.height !== undefined && options.height !== height) {\n                    throw new Error('Image output config height doesn\\'t match tensor height');\n                }\n                if (options.width !== undefined && options.width !== width) {\n                    throw new Error('Image output config width doesn\\'t match tensor width');\n                }\n                if (options.format !== undefined && (channels === 4 && options.format !== 'RGBA') ||\n                    (channels === 3 && (options.format !== 'RGB' && options.format !== 'BGR'))) {\n                    throw new Error('Tensor format doesn\\'t match input tensor dims');\n                }\n            }\n            // Default pointer assignments\n            const step = 4;\n            let rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n            let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n            // Updating the pointer assignments based on the input image format\n            if (inputformat === 'RGBA') {\n                rTensorPointer = 0;\n                gTensorPointer = stride;\n                bTensorPointer = stride * 2;\n                aTensorPointer = stride * 3;\n            }\n            else if (inputformat === 'RGB') {\n                rTensorPointer = 0;\n                gTensorPointer = stride;\n                bTensorPointer = stride * 2;\n            }\n            else if (inputformat === 'RBG') {\n                rTensorPointer = 0;\n                bTensorPointer = stride;\n                gTensorPointer = stride * 2;\n            }\n            image = pixels2DContext.createImageData(width, height);\n            for (let i = 0; i < height * width; rImagePointer += step, gImagePointer += step, bImagePointer += step, aImagePointer += step, i++) {\n                image.data[rImagePointer] = (this.data[rTensorPointer++] - normBias[0]) * normMean[0]; // R value\n                image.data[gImagePointer] = (this.data[gTensorPointer++] - normBias[1]) * normMean[1]; // G value\n                image.data[bImagePointer] = (this.data[bTensorPointer++] - normBias[2]) * normMean[2]; // B value\n                image.data[aImagePointer] = aTensorPointer === -1 ?\n                    255 :\n                    (this.data[aTensorPointer++] - normBias[3]) * normMean[3]; // A value\n            }\n        }\n        else {\n            throw new Error('Can not access image data');\n        }\n        return image;\n    }\n    // #endregion\n    // #region tensor utilities\n    reshape(dims) {\n        return new Tensor(this.type, this.data, dims);\n    }\n}\n//# sourceMappingURL=tensor-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { Tensor as TensorImpl } from './tensor-impl';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Tensor = TensorImpl;\n//# sourceMappingURL=tensor.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { resolveBackend } from './backend-impl';\nimport { Tensor } from './tensor';\nexport class InferenceSession {\n    constructor(handler) {\n        this.handler = handler;\n    }\n    async run(feeds, arg1, arg2) {\n        const fetches = {};\n        let options = {};\n        // check inputs\n        if (typeof feeds !== 'object' || feeds === null || feeds instanceof Tensor || Array.isArray(feeds)) {\n            throw new TypeError('\\'feeds\\' must be an object that use input names as keys and OnnxValue as corresponding values.');\n        }\n        let isFetchesEmpty = true;\n        // determine which override is being used\n        if (typeof arg1 === 'object') {\n            if (arg1 === null) {\n                throw new TypeError('Unexpected argument[1]: cannot be null.');\n            }\n            if (arg1 instanceof Tensor) {\n                throw new TypeError('\\'fetches\\' cannot be a Tensor');\n            }\n            if (Array.isArray(arg1)) {\n                if (arg1.length === 0) {\n                    throw new TypeError('\\'fetches\\' cannot be an empty array.');\n                }\n                isFetchesEmpty = false;\n                // output names\n                for (const name of arg1) {\n                    if (typeof name !== 'string') {\n                        throw new TypeError('\\'fetches\\' must be a string array or an object.');\n                    }\n                    if (this.outputNames.indexOf(name) === -1) {\n                        throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n                    }\n                    fetches[name] = null;\n                }\n                if (typeof arg2 === 'object' && arg2 !== null) {\n                    options = arg2;\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'options\\' must be an object.');\n                }\n            }\n            else {\n                // decide whether arg1 is fetches or options\n                // if any output name is present and its value is valid OnnxValue, we consider it fetches\n                let isFetches = false;\n                const arg1Keys = Object.getOwnPropertyNames(arg1);\n                for (const name of this.outputNames) {\n                    if (arg1Keys.indexOf(name) !== -1) {\n                        const v = arg1[name];\n                        if (v === null || v instanceof Tensor) {\n                            isFetches = true;\n                            isFetchesEmpty = false;\n                            fetches[name] = v;\n                        }\n                    }\n                }\n                if (isFetches) {\n                    if (typeof arg2 === 'object' && arg2 !== null) {\n                        options = arg2;\n                    }\n                    else if (typeof arg2 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else {\n                    options = arg1;\n                }\n            }\n        }\n        else if (typeof arg1 !== 'undefined') {\n            throw new TypeError('Unexpected argument[1]: must be \\'fetches\\' or \\'options\\'.');\n        }\n        // check if all inputs are in feed\n        for (const name of this.inputNames) {\n            if (typeof feeds[name] === 'undefined') {\n                throw new Error(`input '${name}' is missing in 'feeds'.`);\n            }\n        }\n        // if no fetches is specified, we use the full output names list\n        if (isFetchesEmpty) {\n            for (const name of this.outputNames) {\n                fetches[name] = null;\n            }\n        }\n        // feeds, fetches and options are prepared\n        const results = await this.handler.run(feeds, fetches, options);\n        const returnValue = {};\n        for (const key in results) {\n            if (Object.hasOwnProperty.call(results, key)) {\n                returnValue[key] = new Tensor(results[key].type, results[key].data, results[key].dims);\n            }\n        }\n        return returnValue;\n    }\n    static async create(arg0, arg1, arg2, arg3) {\n        // either load from a file or buffer\n        let filePathOrUint8Array;\n        let options = {};\n        if (typeof arg0 === 'string') {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof Uint8Array) {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof ArrayBuffer ||\n            (typeof SharedArrayBuffer !== 'undefined' && arg0 instanceof SharedArrayBuffer)) {\n            const buffer = arg0;\n            let byteOffset = 0;\n            let byteLength = arg0.byteLength;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 === 'number') {\n                byteOffset = arg1;\n                if (!Number.isSafeInteger(byteOffset)) {\n                    throw new RangeError('\\'byteOffset\\' must be an integer.');\n                }\n                if (byteOffset < 0 || byteOffset >= buffer.byteLength) {\n                    throw new RangeError(`'byteOffset' is out of range [0, ${buffer.byteLength}).`);\n                }\n                byteLength = arg0.byteLength - byteOffset;\n                if (typeof arg2 === 'number') {\n                    byteLength = arg2;\n                    if (!Number.isSafeInteger(byteLength)) {\n                        throw new RangeError('\\'byteLength\\' must be an integer.');\n                    }\n                    if (byteLength <= 0 || byteOffset + byteLength > buffer.byteLength) {\n                        throw new RangeError(`'byteLength' is out of range (0, ${buffer.byteLength - byteOffset}].`);\n                    }\n                    if (typeof arg3 === 'object' && arg3 !== null) {\n                        options = arg3;\n                    }\n                    else if (typeof arg3 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'byteLength\\' must be a number.');\n                }\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n            filePathOrUint8Array = new Uint8Array(buffer, byteOffset, byteLength);\n        }\n        else {\n            throw new TypeError('Unexpected argument[0]: must be \\'path\\' or \\'buffer\\'.');\n        }\n        // get backend hints\n        const eps = options.executionProviders || [];\n        const backendHints = eps.map(i => typeof i === 'string' ? i : i.name);\n        const backend = await resolveBackend(backendHints);\n        const handler = await backend.createSessionHandler(filePathOrUint8Array, options);\n        return new InferenceSession(handler);\n    }\n    startProfiling() {\n        this.handler.startProfiling();\n    }\n    endProfiling() {\n        this.handler.endProfiling();\n    }\n    get inputNames() {\n        return this.handler.inputNames;\n    }\n    get outputNames() {\n        return this.handler.outputNames;\n    }\n}\n//# sourceMappingURL=inference-session-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { InferenceSession as InferenceSessionImpl } from './inference-session-impl';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const InferenceSession = InferenceSessionImpl;\n//# sourceMappingURL=inference-session.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable import/no-internal-modules */\nimport {Backend, InferenceSession, SessionHandler} from 'onnxruntime-common';\n\nimport {Session} from './onnxjs/session';\nimport {OnnxjsSessionHandler} from './onnxjs/session-handler';\n\nclass OnnxjsBackend implements Backend {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  async init(): Promise<void> {}\n\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    // NOTE: Session.Config(from onnx.js) is not compatible with InferenceSession.SessionOptions(from\n    // onnxruntime-common).\n    //       In future we should remove Session.Config and use InferenceSession.SessionOptions.\n    //       Currently we allow this to happen to make test runner work.\n    const session = new Session(options as unknown as Session.Config);\n\n    // typescript cannot merge method override correctly (so far in 4.2.3). need if-else to call the method.\n    if (typeof pathOrBuffer === 'string') {\n      await session.loadModel(pathOrBuffer);\n    } else {\n      await session.loadModel(pathOrBuffer);\n    }\n\n    return new OnnxjsSessionHandler(session);\n  }\n}\n\nexport const onnxjsBackend = new OnnxjsBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {cpus} from 'os';\n\nimport {initWasm} from './wasm/proxy-wrapper';\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initWasm();\n  }\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(pathOrBuffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow terser to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow terser remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend} from 'onnxruntime-common';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\n\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = require('./backend-wasm').wasmBackend;\n  if (!BUILD_DEFS.DISABLE_WEBGPU) {\n    registerBackend('webgpu', wasmBackend, 5);\n  }\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n  registerBackend('xnnpack', wasmBackend, 9);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nclass AttributeWithCacheKeyImpl {\n  constructor(attribute: Record<string, unknown>) {\n    Object.assign(this, attribute);\n  }\n\n  private _cacheKey: string;\n  public get cacheKey(): string {\n    if (!this._cacheKey) {\n      this._cacheKey =\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\n    }\n    return this._cacheKey;\n  }\n}\n\nexport interface AttributeWithCacheKey {\n  readonly cacheKey: string;\n}\n\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\nimport {decodeUtf8String, LongUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport declare namespace Attribute {\n  export interface DataTypeMap {\n    float: number;\n    int: number;\n    string: string;\n    tensor: Tensor;\n    floats: number[];\n    ints: number[];\n    strings: string[];\n    tensors: Tensor[];\n  }\n\n  export type DataType = keyof DataTypeMap;\n}\n\ntype ValueTypes = Attribute.DataTypeMap[Attribute.DataType];\n\ntype Value = [ValueTypes, Attribute.DataType];\n\nexport class Attribute {\n  constructor(attributes: onnx.IAttributeProto[]|ortFbs.Attribute[]|null|undefined) {\n    this._attributes = new Map();\n    if (attributes !== null && attributes !== undefined) {\n      for (const attr of attributes) {\n        if (attr instanceof onnx.AttributeProto) {\n          this._attributes.set(attr.name, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        } else if (attr instanceof ortFbs.Attribute) {\n          this._attributes.set(attr.name()!, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        }\n      }\n      if (this._attributes.size < attributes.length) {\n        throw new Error('duplicated attribute names');\n      }\n    }\n  }\n\n  set(key: string, type: Attribute.DataType, value: ValueTypes): void {\n    this._attributes.set(key, [value, type]);\n  }\n  delete(key: string): void {\n    this._attributes.delete(key);\n  }\n  getFloat(key: string, defaultValue?: Attribute.DataTypeMap['float']) {\n    return this.get(key, 'float', defaultValue);\n  }\n\n  getInt(key: string, defaultValue?: Attribute.DataTypeMap['int']) {\n    return this.get(key, 'int', defaultValue);\n  }\n\n  getString(key: string, defaultValue?: Attribute.DataTypeMap['string']) {\n    return this.get(key, 'string', defaultValue);\n  }\n\n  getTensor(key: string, defaultValue?: Attribute.DataTypeMap['tensor']) {\n    return this.get(key, 'tensor', defaultValue);\n  }\n\n  getFloats(key: string, defaultValue?: Attribute.DataTypeMap['floats']) {\n    return this.get(key, 'floats', defaultValue);\n  }\n\n  getInts(key: string, defaultValue?: Attribute.DataTypeMap['ints']) {\n    return this.get(key, 'ints', defaultValue);\n  }\n\n  getStrings(key: string, defaultValue?: Attribute.DataTypeMap['strings']) {\n    return this.get(key, 'strings', defaultValue);\n  }\n\n  getTensors(key: string, defaultValue?: Attribute.DataTypeMap['tensors']) {\n    return this.get(key, 'tensors', defaultValue);\n  }\n\n  private get<V extends Attribute.DataTypeMap[Attribute.DataType]>(\n      key: string, type: Attribute.DataType, defaultValue?: V): V {\n    const valueAndType = this._attributes.get(key);\n    if (valueAndType === undefined) {\n      if (defaultValue !== undefined) {\n        return defaultValue;\n      }\n      throw new Error(`required attribute not found: ${key}`);\n    }\n    if (valueAndType[1] !== type) {\n      throw new Error(`type mismatch: expected ${type} but got ${valueAndType[1]}`);\n    }\n    return valueAndType[0] as V;\n  }\n\n  private static getType(attr: onnx.IAttributeProto|ortFbs.Attribute): Attribute.DataType {\n    const type = attr instanceof onnx.AttributeProto ? (attr).type : (attr as ortFbs.Attribute).type();\n    switch (type) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return 'float';\n      case onnx.AttributeProto.AttributeType.INT:\n        return 'int';\n      case onnx.AttributeProto.AttributeType.STRING:\n        return 'string';\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return 'tensor';\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return 'floats';\n      case onnx.AttributeProto.AttributeType.INTS:\n        return 'ints';\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return 'strings';\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return 'tensors';\n      default:\n        throw new Error(`attribute type is not supported yet: ${onnx.AttributeProto.AttributeType[type]}`);\n    }\n  }\n\n  private static getValue(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    const attrType = attr instanceof onnx.AttributeProto ? attr.type : (attr as ortFbs.Attribute).type();\n    if (attrType === onnx.AttributeProto.AttributeType.GRAPH || attrType === onnx.AttributeProto.AttributeType.GRAPHS) {\n      throw new Error('graph attribute is not supported yet');\n    }\n\n    const value = this.getValueNoCheck(attr);\n\n    // cast LONG to number\n    if (attrType === onnx.AttributeProto.AttributeType.INT && LongUtil.isLong(value)) {\n      return LongUtil.longToNumber(value as Long | flatbuffers.Long);\n    }\n\n    // cast LONG[] to number[]\n    if (attrType === onnx.AttributeProto.AttributeType.INTS) {\n      const arr = (value as Array<number|Long|flatbuffers.Long>);\n      const numberValue: number[] = new Array<number>(arr.length);\n\n      for (let i = 0; i < arr.length; i++) {\n        const maybeLong = arr[i];\n        numberValue[i] = LongUtil.longToNumber(maybeLong);\n      }\n\n      return numberValue;\n    }\n\n    // cast onnx.TensorProto to onnxjs.Tensor\n    if (attrType === onnx.AttributeProto.AttributeType.TENSOR) {\n      return attr instanceof onnx.AttributeProto ? Tensor.fromProto(value as onnx.ITensorProto) :\n                                                   Tensor.fromOrtTensor(value as ortFbs.Tensor);\n    }\n\n    // cast onnx.TensorProto[] to onnxjs.Tensor[]\n    if (attrType === onnx.AttributeProto.AttributeType.TENSORS) {\n      if (attr instanceof onnx.AttributeProto) {\n        const tensorProtos = value as onnx.ITensorProto[];\n        return tensorProtos.map(value => Tensor.fromProto(value));\n      } else if (attr instanceof ortFbs.Attribute) {\n        const tensorProtos = value as ortFbs.Tensor[];\n        return tensorProtos.map(value => Tensor.fromOrtTensor(value));\n      }\n    }\n\n    // cast Uint8Array to string\n    if (attrType === onnx.AttributeProto.AttributeType.STRING) {\n      // string in onnx attribute is of uint8array type, so we need to convert it to string below. While in ort format,\n      // string attributes are returned as string, so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8String = value as Uint8Array;\n        return decodeUtf8String(utf8String);\n      }\n    }\n\n    // cast Uint8Array[] to string[]\n    if (attrType === onnx.AttributeProto.AttributeType.STRINGS) {\n      // strings in onnx attribute is returned as uint8array[], so we need to convert it to string[] below. While in ort\n      // format strings attributes are returned as string[], so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8Strings = value as Uint8Array[];\n        return utf8Strings.map(decodeUtf8String);\n      }\n    }\n\n    return value as ValueTypes;\n  }\n\n  private static getValueNoCheck(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    return attr instanceof (onnx.AttributeProto) ? this.getValueNoCheckFromOnnxFormat(attr) :\n                                                   this.getValueNoCheckFromOrtFormat(attr as ortFbs.Attribute);\n  }\n\n  private static getValueNoCheckFromOnnxFormat(attr: onnx.IAttributeProto) {\n    switch (attr.type!) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return attr.f;\n      case onnx.AttributeProto.AttributeType.INT:\n        return attr.i;\n      case onnx.AttributeProto.AttributeType.STRING:\n        return attr.s;\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return attr.t;\n      case onnx.AttributeProto.AttributeType.GRAPH:\n        return attr.g;\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return attr.floats;\n      case onnx.AttributeProto.AttributeType.INTS:\n        return attr.ints;\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return attr.strings;\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return attr.tensors;\n      case onnx.AttributeProto.AttributeType.GRAPHS:\n        return attr.graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${onnx.AttributeProto.AttributeType[attr.type!]}`);\n    }\n  }\n\n  private static getValueNoCheckFromOrtFormat(attr: ortFbs.Attribute) {\n    switch (attr.type()) {\n      case ortFbs.AttributeType.FLOAT:\n        return attr.f();\n      case ortFbs.AttributeType.INT:\n        return attr.i();\n      case ortFbs.AttributeType.STRING:\n        return attr.s();\n      case ortFbs.AttributeType.TENSOR:\n        return attr.t();\n      case ortFbs.AttributeType.GRAPH:\n        return attr.g();\n      case ortFbs.AttributeType.FLOATS:\n        return attr.floatsArray();\n      case ortFbs.AttributeType.INTS: {\n        const ints = [];\n        for (let i = 0; i < attr.intsLength(); i++) {\n          ints.push(attr.ints(i)!);\n        }\n        return ints;\n      }\n      case ortFbs.AttributeType.STRINGS: {\n        const strings = [];\n        for (let i = 0; i < attr.stringsLength(); i++) {\n          strings.push(attr.strings(i));\n        }\n        return strings;\n      }\n      case ortFbs.AttributeType.TENSORS: {\n        const tensors = [];\n        for (let i = 0; i < attr.tensorsLength(); i++) {\n          tensors.push(attr.tensors(i)!);\n        }\n        return tensors;\n      }\n      // case ortFbs.AttributeType.GRAPHS:\n      // TODO: Subgraph not supported yet.\n      // const graphs = [];\n      // for (let i = 0; i < attr.graphsLength(); i++) {\n      //   graphs.push(attr.graphs(i)!);\n      // }\n      // return graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${ortFbs.AttributeType[attr.type()]}`);\n    }\n  }\n\n  protected _attributes: Map<string, Value>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGLBackend} from './backends/backend-webgl';\nimport {Graph} from './graph';\nimport {Operator} from './operators';\nimport {OpSet} from './opset';\nimport {Session} from './session';\n\nexport interface InferenceHandler {\n  /**\n   * dispose the inference handler. it will be called as the last step in Session.run()\n   */\n  dispose(): void;\n}\n\nexport interface SessionHandler {\n  /**\n   * transform the graph at initialization time\n   * @param graphTransformer the graph transformer to manipulate the model graph\n   */\n  transformGraph?(graphTransformer: Graph.Transformer): void;\n\n  /**\n   * create an instance of InferenceHandler to use in a Session.run() call\n   */\n  createInferenceHandler(): InferenceHandler;\n\n  /**\n   * dispose the session handler. it will be called when a session is being disposed explicitly\n   */\n  dispose(): void;\n\n  /**\n   * Resolves the operator from the name and opset version; backend specific\n   * @param node the node to resolve\n   * @param opsets a list of opsets that exported from the model\n   * @param graph the completely initialized graph\n   */\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator;\n\n  /**\n   * This method let's the sessionHandler know that the graph initialization is complete\n   * @param graph the completely initialized graph\n   */\n  onGraphInitialized?(graph: Graph): void;\n\n  /**\n   * a reference to the corresponding backend\n   */\n  readonly backend: Backend;\n\n  /**\n   * a reference to the session context\n   */\n  readonly context: Session.Context;\n}\n\nexport interface Backend {\n  /**\n   * initialize the backend. will be called only once, when the first time the\n   * backend it to be used\n   */\n  initialize(): boolean|Promise<boolean>;\n\n  /**\n   * create an instance of SessionHandler to use in a Session object's lifecycle\n   */\n  createSessionHandler(context: Session.Context): SessionHandler;\n\n  /**\n   * dispose the backend. currently this will not be called\n   */\n  dispose(): void;\n}\n\n// caches all initialized backend instances\nconst backendsCache: Map<string, Backend> = new Map();\n\nexport const backend: {[name: string]: Backend} = {\n  webgl: new WebGLBackend()\n};\n\n/**\n * Resolve a reference to the backend. If a hint is specified, the corresponding\n * backend will be used.\n */\nexport async function resolveBackend(hint?: string|readonly string[]): Promise<Backend> {\n  if (!hint) {\n    return resolveBackend(['webgl']);\n  } else {\n    const hints = typeof hint === 'string' ? [hint] : hint;\n\n    for (const backendHint of hints) {\n      const cache = backendsCache.get(backendHint);\n      if (cache) {\n        return cache;\n      }\n\n      const backend = await tryLoadBackend(backendHint);\n      if (backend) {\n        return backend;\n      }\n    }\n  }\n\n  throw new Error('no available backend to use');\n}\n\nasync function tryLoadBackend(backendHint: string): Promise<Backend|undefined> {\n  const backendObj = backend;\n\n  if (typeof backendObj[backendHint] !== 'undefined' && isBackend(backendObj[backendHint])) {\n    const backend = backendObj[backendHint];\n    let init = backend.initialize();\n    if (typeof init === 'object' && 'then' in init) {\n      init = await init;\n    }\n    if (init) {\n      backendsCache.set(backendHint, backend);\n      return backend;\n    }\n  }\n\n  return undefined;\n}\n\nfunction isBackend(obj: unknown) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const o = obj as any;\n\n  // check if an object is a Backend instance\n  if (\n      'initialize' in o && typeof o.initialize === 'function' &&                      // initialize()\n      'createSessionHandler' in o && typeof o.createSessionHandler === 'function' &&  // createSessionHandler()\n      'dispose' in o && typeof o.dispose === 'function'                               // dispose()\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport type BackendType = Backend;\nexport type SessionHandlerType = ReturnType<BackendType['createSessionHandler']>;\nexport type InferenceHandlerType = ReturnType<SessionHandlerType['createInferenceHandler']>;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport {Backend, SessionHandler} from '../backend';\nimport {Logger} from '../instrument';\nimport {Session} from '../session';\n\nimport {WebGLSessionHandler} from './webgl/session-handler';\nimport {WebGLContext} from './webgl/webgl-context';\nimport {createWebGLContext} from './webgl/webgl-context-factory';\n\n/**\n * WebGLBackend is the entry point for all WebGL opeartions\n * When it starts it created the WebGLRenderingContext\n * and other main framework components such as Program and Texture Managers\n */\nexport class WebGLBackend implements Backend {\n  glContext: WebGLContext;\n\n  get contextId(): 'webgl'|'webgl2'|undefined {\n    return env.webgl.contextId;\n  }\n  set contextId(value: 'webgl'|'webgl2'|undefined) {\n    env.webgl.contextId = value;\n  }\n\n  get matmulMaxBatchSize(): number|undefined {\n    return env.webgl.matmulMaxBatchSize;\n  }\n  set matmulMaxBatchSize(value: number|undefined) {\n    env.webgl.matmulMaxBatchSize = value;\n  }\n\n  get textureCacheMode(): 'initializerOnly'|'full'|undefined {\n    return env.webgl.textureCacheMode;\n  }\n  set textureCacheMode(value: 'initializerOnly'|'full'|undefined) {\n    env.webgl.textureCacheMode = value;\n  }\n\n  get pack(): boolean|undefined {\n    return env.webgl.pack;\n  }\n  set pack(value: boolean|undefined) {\n    env.webgl.pack = value;\n  }\n\n  get async(): boolean|undefined {\n    return env.webgl.async;\n  }\n  set async(value: boolean|undefined) {\n    env.webgl.async = value;\n  }\n\n  initialize(): boolean {\n    try {\n      this.glContext = createWebGLContext(this.contextId);\n      if (typeof this.matmulMaxBatchSize !== 'number') {\n        this.matmulMaxBatchSize = 16;\n      }\n      if (typeof this.textureCacheMode !== 'string') {\n        this.textureCacheMode = 'full';\n      }\n      if (typeof this.pack !== 'boolean') {\n        this.pack = false;\n      }\n      if (typeof this.async !== 'boolean') {\n        this.async = false;\n      }\n\n      Logger.setWithEnv(env);\n\n      Logger.verbose(\n          'WebGLBackend',\n          `Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${\n              this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${\n              this.async}.`);\n      return true;\n    } catch (e) {\n      Logger.warning('WebGLBackend', `Unable to initialize WebGLBackend. ${e}`);\n      return false;\n    }\n  }\n  createSessionHandler(context: Session.Context): SessionHandler {\n    return new WebGLSessionHandler(this, context);\n  }\n  dispose(): void {\n    this.glContext.dispose();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ArrayUtil, BroadcastUtil, ShapeUtil} from '../../util';\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\nimport {squeezeShape} from './texture-layout-strategy';\nimport {TextureLayout} from './types';\nimport {generateShaderFuncNameFromInputSamplerName, generateShaderFuncNameFromInputSamplerNameAtOutCoords, getCoordsDataType, getGlChannels, getSqueezedParams, squeezeInputShape} from './utils';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class CoordsGlslLib extends GlslLib {\n  returnType: string;\n\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.offsetToCoords(),\n      ...this.coordsToOffset(),\n      ...this.toVec(),\n      ...this.valueFrom(),\n      // TODO return these only when packing is enabled.\n      ...this.getCommonUtilFuncs(),\n      ...this.getInputsSamplingSnippets(),\n      ...this.getOutputSamplingSnippet()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected offsetToCoords(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'offsetToCoords';\n    return {\n      offsetToCoords: new GlslLibRoutine(`\n      vec2 ${funcName}(int offset, int width, int height) {\n        int t = offset / width;\n        int s = offset - t*width;\n        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);\n        return coords;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected coordsToOffset(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'coordsToOffset';\n    return {\n      coordsToOffset: new GlslLibRoutine(`\n      int ${funcName}(vec2 coords, int width, int height) {\n        float s = coords.s * float(width);\n        float t = coords.t * float(height);\n        int offset = int(t) * width + int(s);\n        return offset;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Generates code for output sampler.\n   */\n\n  protected getOutputSamplingSnippet(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    if (outputLayout.isPacked) {\n      return this.getPackedOutputSamplingSnippet(outputLayout);\n    } else {\n      return this.getUnpackedOutputSamplingSnippet(outputLayout);\n    }\n  }\n\n  /**\n   * Generates code for packed output sampler.\n   */\n  protected getPackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputPacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] = this.getOutputPacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputPacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        result[funcName] = this.getOutputPackedNDCoords(outShape, outTexShape as [number, number]);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRGBASource = `\n      void setOutput(vec4 val) {\n        ${glsl.output} = val;\n      }\n    `;\n    const floatTextureSetRGBAFuncName = 'floatTextureSetRGBA';\n    result[floatTextureSetRGBAFuncName] = new GlslLibRoutine(floatTextureSetRGBASource);\n    return result;\n  }\n\n  /**\n   * Generates code for unpacked output sampler.\n   */\n  protected getUnpackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputUnpacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] =\n            this.getOutputUnpacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputUnpacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      case 4:\n        result[funcName] = this.getOutputUnpacked4DCoords(\n            outShape as [number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 5:\n        result[funcName] = this.getOutputUnpacked5DCoords(\n            outShape as [number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 6:\n        result[funcName] = this.getOutputUnpacked6DCoords(\n            outShape as [number, number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        throw new Error(`Unsupported output dimensionality: ${outShape.length}`);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRSource = `\n        void setOutput(float val) {\n          ${glsl.output} = vec4(val, 0, 0, 0);\n        }\n    `;\n    const floatTextureSetRFuncName = 'floatTextureSetR';\n    result[floatTextureSetRFuncName] = new GlslLibRoutine(floatTextureSetRSource);\n    return result;\n  }\n\n  /**\n   * Scalar output coordinates.\n   */\n  protected getOutputScalarCoords(): GlslLibRoutine {\n    return new GlslLibRoutine(`\n      int getOutputCoords() {\n        return 0;\n      }\n    `);\n  }\n\n  /**\n   * 1D packed output coordinates.\n   */\n  protected getOutputPacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = texShape;\n    let source = '';\n    if (packedTexShape[0] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.y * ${packedTexShape[1]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    if (packedTexShape[1] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.x * ${packedTexShape[0]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                 vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          return 2 * (resTexRC.y * ${packedTexShape[0]} + resTexRC.x);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 2D packed output coordinates.\n   */\n  protected getOutputPacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    if (ArrayUtil.arraysEqual(shape, texShape)) {\n      source = `\n        ivec2 getOutputCoords() {\n          return 2 * ivec2(TexCoords.xy * vec2(${texShape[0]}, ${texShape[1]}));\n        }\n      `;\n      return new GlslLibRoutine(source);\n    }\n\n    const packedTexShape = texShape;\n    // texels needed to accommodate a logical row\n    const texelsInLogicalRow = Math.ceil(shape[1] / 2);\n\n    /**\n     * getOutputCoords\n     *\n     * resTexRC: The rows and columns of the texels. If you move over one\n     * texel to the right in the packed texture, you are moving over one column\n     * (not two).\n     *\n     * index: The texel index\n     */\n    source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 3D packed output coordinates.\n   */\n  protected getOutputPacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texelsInLogicalRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[1] / 2);\n    const source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          int b = index / ${texelsInBatch};\n          index -= b * ${texelsInBatch};\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec3(b, r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * ND packed output coordinates.\n   */\n  protected getOutputPackedNDCoords(shape: readonly number[], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n\n    const texelsInLogicalRow = Math.ceil(shape[shape.length - 1] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[shape.length - 2] / 2);\n    let texelsInBatchN = texelsInBatch;\n    let batches = '';\n    let coords = 'b, r, c';\n\n    for (let b = 2; b < shape.length - 1; b++) {\n      texelsInBatchN *= shape[shape.length - b - 1];\n      batches = `\n      int b${b} = index / ${texelsInBatchN};\n      index -= b${b} * ${texelsInBatchN};\n    ` + batches;\n      coords = `b${b}, ` + coords;\n    }\n    const source = `\n      ivec${shape.length} getOutputCoords() {\n        ivec2 resTexRC = ivec2(TexCoords.xy *\n                              vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n        int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n        ${batches}\n\n        int b = index / ${texelsInBatch};\n        index -= b * ${texelsInBatch};\n\n        // reverse r and c order for packed texture\n        int r = imod(index, ${texelsInLogicalRow}) * 2;\n        int c = 2 * (index / ${texelsInLogicalRow});\n\n        return ivec${shape.length}(${coords});\n      }\n    `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 1D output coordinates.\n   */\n  protected getOutputUnpacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          return resTexRC.y * ${texShape[0]} + resTexRC.x;\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 2D output coordinates.\n   */\n  protected getOutputUnpacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          int r = index / ${shape[1]};\n          int c = index - r * ${shape[1]};\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 3D output coordinates.\n   */\n  protected getOutputUnpacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec3(r, c, d);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 4D output coordinates.\n   */\n  protected getOutputUnpacked4DCoords(shape: [number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec4 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec4(r, c, d, d2);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 5D output coordinates.\n   */\n  protected getOutputUnpacked5DCoords(shape: [number, number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec5 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec5(r, c, d, d2, d3);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 6D output coordinates.\n   */\n  protected getOutputUnpacked6DCoords(shape: [number, number, number, number, number, number], texShape: [\n    number, number\n  ]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3', 'd4'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n     ivec6 getOutputCoords() {\n         ivec2 resTexRC = ivec2(TexCoords.xy *\n                               vec2(${texShape[0]}, ${texShape[1]}));\n         int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n         ${coordsFromIndexSnippet}\n         return ivec6(r, c, d, d2, d3, d4);\n       }\n     `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Generates code for common UV coords computation utility functions.\n   */\n  protected getCommonUtilFuncs(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    let funcName = 'uvFromFlat';\n    result[funcName] = new GlslLibRoutine(`\n    vec2 uvFromFlat(int texNumR, int texNumC, int index) {\n      int texC = index / texNumR;\n      int texR = index - texC * texNumR;\n      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to\n      //       v.\n      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);\n    }\n    `);\n    funcName = 'packedUVfrom1D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n        int texelIndex = index / 2;\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom2D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {\n        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom3D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom3D(int texNumR, int texNumC,\n          int texelsInBatch, int texelsInLogicalRow, int b,\n          int row, int col) {\n        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = index / texNumC;\n        int texC = index - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'sampleTexture';\n    const glsl = getGlsl(this.context.glContext.version);\n    result[funcName] = new GlslLibRoutine(`\n        float sampleTexture(sampler2D textureSampler, vec2 uv) {\n            return ${glsl.texture2D}(textureSampler, uv).r;\n        }`);\n    return result;\n  }\n\n  /**\n   * Constructing snippets for inputs\n   */\n  protected getInputsSamplingSnippets(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const outputLayout = this.context.outputTextureLayout;\n    this.context.programInfo.inputNames.forEach((samplerName, i) => {\n      const inputLayout = this.context.inputTextureLayouts[i];\n      const funcName = generateShaderFuncNameFromInputSamplerName(samplerName);\n      if (inputLayout.isPacked) {\n        result[funcName] = this.getPackedSamplerFromInput(funcName, samplerName, inputLayout);\n      } else {\n        result[funcName] = this.getUnpackedSamplerFromInput(funcName, samplerName, inputLayout);\n      }\n\n      const outCoordFuncName = generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName);\n      if (inputLayout.unpackedShape.length <= outputLayout.unpackedShape.length) {\n        if (inputLayout.isPacked) {\n          result[outCoordFuncName] =\n              this.getPackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        } else {\n          result[outCoordFuncName] =\n              this.getUnpackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        }\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Constructing snippets for output coordinates of samplers\n   */\n  protected getPackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texName = name;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(texName);\n\n    const inRank = inShape.length;\n    const outRank = outShape.length;\n\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n\n    const type = getCoordsDataType(outRank);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n\n    let output = 'return outputValue;';\n    const inSize = ShapeUtil.size(inShape);\n    const isInputScalar = inSize === 1;\n    const outSize = ShapeUtil.size(outShape);\n    const isOutputScalar = outSize === 1;\n\n    if (inRank === 1 && !isInputScalar && !isOutputScalar) {\n      output = `\n        return vec4(outputValue.xy, outputValue.xy);\n      `;\n    } else if (isInputScalar && !isOutputScalar) {\n      if (outRank === 1) {\n        output = `\n          return vec4(outputValue.x, outputValue.x, 0., 0.);\n        `;\n      } else {\n        output = `\n          return vec4(outputValue.x);\n        `;\n      }\n    } else if (broadcastDims.length) {\n      const rows = inRank - 2;\n      const cols = inRank - 1;\n\n      if (broadcastDims.indexOf(rows) > -1 && broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.x);';\n      } else if (broadcastDims.indexOf(rows) > -1) {\n        output = 'return vec4(outputValue.x, outputValue.y, ' +\n            'outputValue.x, outputValue.y);';\n      } else if (broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.xx, outputValue.zz);';\n      }\n    }\n\n    const swapLastDimsSnippet = `\n        int lastDim = coords.${fields[outRank - 1]};\n        coords.${fields[outRank - 1]} = coords.${fields[outRank - 2]};\n        coords.${fields[outRank - 2]} = lastDim;\n      `;\n    const source = `\n      vec4 ${funcName}() {\n        ${type} coords = getOutputCoords();\n        ${swapLastDimsSnippet}\n        ${coordsSnippet}\n        vec4 outputValue = ${texFuncSnippet}(${unpackedCoordsSnippet});\n        ${output}\n      }\n    `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for unpacked output coordinates of samplers\n   */\n  protected getUnpackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const inTexShape = [inputLayout.width, inputLayout.height];\n    const inRank = inputLayout.unpackedShape.length;\n    const outRank = outputLayout.unpackedShape.length;\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(name);\n\n    if (inRank === outRank && ArrayUtil.arraysEqual(inTexShape, outTexShape)) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, TexCoords);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const type = getCoordsDataType(outRank);\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inputLayout.unpackedShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n    const source = `\n        float ${funcName}() {\n          ${type} coords = getOutputCoords();\n          ${coordsSnippet}\n          return ${texFuncSnippet}(${unpackedCoordsSnippet});\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for packed operations.\n   */\n  protected getPackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    switch (inputLayout.unpackedShape.length) {\n      case 0:\n        return this.getPackedSamplerScalar(funcName, name);\n      case 1:\n        return this.getPackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getPackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getPackedSampler3D(funcName, name, inputLayout);\n      default:\n        return this.getPackedSamplerND(funcName, name, inputLayout);\n    }\n  }\n\n  /**\n   * Constructing snippets for unpacked operations.\n   */\n  protected getUnpackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    switch (shape.length) {\n      case 0:\n        return this.getUnpackedSamplerScalar(funcName, name, inputLayout);\n      case 1:\n        return this.getUnpackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getUnpackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getUnpackedSampler3D(funcName, name, inputLayout);\n      case 4:\n        return this.getUnpackedSampler4D(funcName, name, inputLayout);\n      case 5:\n        return this.getUnpackedSampler5D(funcName, name, inputLayout);\n      case 6:\n        return this.getUnpackedSampler6D(funcName, name, inputLayout);\n      default:\n        // TODO support more dimensionalities\n        throw new Error(`Unsupported dimension ${shape.length}-D`);\n    }\n  }\n\n  /**\n   * Packed scalar snippet.\n   */\n  protected getPackedSamplerScalar(funcName: string, name: string): GlslLibRoutine {\n    const glsl = getGlsl(this.context.glContext.version);\n    const source = `\n          vec4 ${funcName}() {\n            return ${glsl.texture2D}(${name}, halfCR);\n          }\n        `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Packed 1D snippet.\n   */\n  protected getPackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[1], texShape[0]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedSampler = `vec4 ${funcName}(int index) {\n      vec2 uv = packedUVfrom1D(\n      ${packedTexShape[0]}, ${packedTexShape[1]}, index);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom1D']);\n  }\n\n  /**\n   * Packed 2D snippet.\n   */\n  protected getPackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const packedSampler = `vec4 ${funcName}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n        return ${glsl.texture2D}(${name}, uv);\n      }`;\n\n      return new GlslLibRoutine(packedSampler);\n    }\n    const packedTexShape = texShape;\n    const valuesPerRow = Math.ceil(shape[1] / 2);\n    const packedSampler = `vec4 ${funcName}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${packedTexShape[1]}, ${packedTexShape[0]}, ${valuesPerRow}, row, col);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom2D']);\n  }\n\n  /**\n   * Packed 3D snippet.\n   */\n  protected getPackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[0], texShape[1]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    if (shape[0] === 1) {\n      const squeezedShape = shape.slice(1);\n      const keptDims = [1, 2];\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['b', 'row', 'col'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const samplerRoutine = this.getPackedSamplerFromInput(funcName, name, newInputLayout);\n      const packedSampler = `${samplerRoutine.routineBody}\n      vec4 ${funcName}(int b, int row, int col) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      } `;\n      const source = packedSampler;\n      return new GlslLibRoutine(source, samplerRoutine.dependencies);\n    }\n    const texNumR = packedTexShape[0];\n    const texNumC = packedTexShape[1];\n\n    const valuesPerRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = valuesPerRow * Math.ceil(shape[1] / 2);\n\n    const packedSampler = `vec4 ${funcName}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${texNumC}, ${texNumR}, ${texelsInBatch}, ${valuesPerRow}, b, row, col);\n      return ${glsl.texture2D}(${name}, uv);}`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom3D']);\n  }\n  /*\n   * Packed ND snippet.\n   */\n  protected getPackedSamplerND(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const rank = shape.length;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texNumR = packedTexShape[1];\n    const texNumC = packedTexShape[0];\n    const valuesPerRow = Math.ceil(shape[rank - 1] / 2);\n    let texelsInBatch = valuesPerRow * Math.ceil(shape[rank - 2] / 2);\n    let params = 'int b, int row, int col';\n    let index = `b * ${texelsInBatch} + (row / 2) * ${valuesPerRow} + (col / 2)`;\n    for (let b = 2; b < rank - 1; b++) {\n      params = `int b${b}, ` + params;\n      texelsInBatch *= shape[rank - b - 1];\n      index = `b${b} * ${texelsInBatch} + ` + index;\n    }\n    const packedSampler = `vec4 ${funcName}(${params}) {\n      int index = ${index};\n      int texR = index / ${texNumC};\n      int texC = index - texR * ${texNumC};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}, ${texNumR});\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked scalar snippet.\n   */\n  protected getUnpackedSamplerScalar(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const [texNumR, texNumC] = [inputLayout.width, inputLayout.height];\n    if (texNumR === 1 && texNumC === 1) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, halfCR);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const source = `\n        float ${funcName}() {\n          int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, offset_${name});\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 1D snippet.\n   */\n  protected getUnpackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const tNumR = inputLayout.width;\n    const tNumC = inputLayout.height;\n\n    if (tNumC === 1 && tNumR === 1) {\n      const source = `\n        float ${funcName}(int index) {\n          return sampleTexture(${name}, halfCR);\n        }\n      `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    if (tNumC === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2((float(index) + 0.5) / ${tNumR}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    if (tNumR === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${tNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    const source = `\n        float ${funcName}(int index) {\n          vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 2D snippet.\n   */\n\n  protected getUnpackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n\n    // TODO: modify row/col order for other dimensions.\n    const texShape = [inputLayout.height, inputLayout.width];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const texNumR = texShape[1];\n      const texNumC = texShape[0];\n      const source = `\n          float ${funcName}(int row, int col) {\n            vec2 uv = (vec2(row, col) + halfCR) / vec2(${texNumR}.0, ${texNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const params = ['col', 'row'];\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const texNumR = texShape[1];\n    const texNumC = texShape[0];\n    if (texNumC === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2(0.5, (index + 0.5) / ${texNumR}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    if (texNumR === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2((index + 0.5) / ${texNumC}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    const source = `\n        float ${funcName}(int row, int col) {\n          int index = col * ${shape[1]} + row;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 3D snippet.\n   */\n\n  protected getUnpackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride0 = shape[1] * shape[2];\n    const stride1 = shape[2];\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['batch', 'col', 'row'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const routine = this.getUnpackedSamplerFromInput(funcName, name, newInputLayout);\n      // TODO: revisit the logic here to make it simpler\n      const revDims = keptDims.reverse();\n      const source = `\n          ${routine.routineBody}\n          float ${funcName}(int batch, int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, revDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, routine.dependencies);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int depth, int row, int col) {\n            // Explicitly use integer operations as dot() only works on floats.\n            int index = depth * ${stride0} + col * ${stride1} + row;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 4D snippet.\n   */\n\n  protected getUnpackedSampler4D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride2 = shape[3];\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    //\n    // TODO: re-enable this shortcut once the index calculation bug is fixed.\n    //\n    // const {newShape, keptDims} = squeezeShape(shape as number[]);\n    // if (newShape.length < shape.length) {\n    //   const newInputShape = squeezeInputShape(shape, newShape);\n    //   const params = ['row', 'col', 'depth', 'depth2'];\n    //   // Deep copy of input texture layout.\n    //   const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n    //   newInputLayout.unpackedShape = newInputShape;\n    //   const source = `\n    //       ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n    //       float ${funcName}(int row, int col, int depth, int depth2) {\n    //         return ${funcName}(${getSqueezedParams(params, keptDims)});\n    //       }\n    //     `;\n    //   return new GlslLibRoutine(\n    //       source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    // }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2) {\n          int index = row * ${stride0} + col * ${stride1} +\n              depth2 * ${stride2} + depth;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 5D snippet.\n   */\n  protected getUnpackedSampler5D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride3 = shape[4];\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n          int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n          depth3 * ${stride3} + depth2;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n  }\n\n  /**\n   * Unpacked 6D snippet.\n   */\n  protected getUnpackedSampler6D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride4 = shape[5];\n    const stride3 = shape[4] * stride4;\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n            ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n            float ${funcName}(int row, int col, int depth,\n              int depth2, int depth3, int depth4) {\n              return ${funcName}(${getSqueezedParams(params, keptDims)});\n            }\n          `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int row, int col, int depth,\n            int depth2, int depth3, int depth4) {\n            int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n            depth2 * ${stride3} + depth3 * ${stride4} + depth4;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * This is the main function to map from the given texture coordiantes (s,t)\n   * to logical indices for the output\n   * There will only be one single variation of this\n   * Also see coordsToOffset and offsetToIndices for input-specific versions\n   */\n  protected toVec(): {[name: string]: GlslLibRoutine} {\n    const output = this.context.outputTextureLayout;\n    const rank = output.shape.length;\n    const strides = output.strides;\n    const xScale = output.width;\n    const yScale = output.height;\n\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n        c[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= c[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n        c[${rank - 1}] = offset;`);\n    const body = `\n      void toVec(vec2 texCoords, out int c[${rank}]) {\n        int offset = coordsToOffset(texCoords, ${xScale}, ${yScale});\n        ${stridesBlock.join('')}\n      }\n      void toVec(int offset, out int c[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n    `;\n    return {toVec: new GlslLibRoutine(body, ['coordinates.coordsToOffset'])};\n  }\n  /**\n   * These are value getter functions generated for each input\n   * Each function is hardwired to the name and dimensions of the input\n   * An '_T' variation is also produced which accesses values as if the\n   * input was transposed\n   */\n  protected valueFrom(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const layout = this.context.inputTextureLayouts[i];\n      const shape = layout.unpackedShape.length > 0 ? layout.unpackedShape : layout.shape;\n      const rank = shape.length;\n      let funcName = `_${name}`;\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, false),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n      funcName = funcName + '_T';\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, true),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n    });\n    return result;\n  }\n  /**\n   * Produces one value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getValueFromSingle(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        float ${name}(int m[${rank}]) {\n          int offset = indicesToOffset${name}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          float value = getColorAsFloat(${glsl.texture2D}(${varName}, coords));\n          return value;\n        }\n        `;\n  }\n\n  /**\n   * Produces a packed value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getPackedValueFrom(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}_Pack`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        vec4 ${name}(int m[${rank}]) {\n          int offset = indicesToOffset_${varName}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          return ${glsl.texture2D}(${varName}, coords);\n        }\n        `;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ProgramInfo, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport enum FunctionType {\n  ValueBased,\n  Positional\n}\nexport interface GlslFunction<T extends FunctionType> {\n  body: string;\n  name: string;\n  type: T;\n}\nexport type GlslValueFunction = GlslFunction<FunctionType.ValueBased>;\nexport interface GlslPositionalFunction extends GlslFunction<FunctionType.Positional> {\n  inputShape: readonly number[];\n  outputShape: readonly number[];\n}\n\nexport class GlslContext {\n  constructor(\n      public glContext: WebGLContext, public programInfo: ProgramInfo, public inputTextureLayouts: TextureLayout[],\n      public outputTextureLayout: TextureLayout) {}\n}\nexport abstract class GlslLib {\n  constructor(public context: GlslContext) {}\n  abstract getFunctions(): {[name: string]: GlslLibRoutine};\n  abstract getCustomTypes(): {[name: string]: string};\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies\nexport class GlslLibRoutine {\n  constructor(public routineBody: string, public dependencies?: string[]) {}\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies AS GRAPH Nodes\n// this level of abstraction is used to topologically sort routines before fragment shade inclusion\nexport class GlslLibRoutineNode {\n  dependencies: GlslLibRoutineNode[];\n  routineBody: string;\n  constructor(public name: string, routineBody?: string, dependencies?: GlslLibRoutineNode[]) {\n    if (dependencies) {\n      this.dependencies = dependencies;\n    } else {\n      this.dependencies = [];\n    }\n\n    if (routineBody) {\n      this.routineBody = routineBody;\n    }\n  }\n  addDependency(node: GlslLibRoutineNode) {\n    if (node) {\n      this.dependencies.push(node);\n    }\n  }\n}\n\n// topologically sort GLSL library routines (graph nodes abstraction) before shader script inclusion\nexport class TopologicalSortGlslRoutines {\n  static returnOrderedNodes(nodes: GlslLibRoutineNode[]): GlslLibRoutineNode[] {\n    if (!nodes || nodes.length === 0) {\n      return [];\n    }\n\n    if (nodes.length === 1) {\n      return nodes;\n    }\n\n    const cycleCheck = new Set<string>();\n    const alreadyTraversed = new Set<string>();\n    const result = new Array<GlslLibRoutineNode>();\n\n    this.createOrderedNodes(nodes, cycleCheck, alreadyTraversed, result);\n    return result;\n  }\n\n  private static createOrderedNodes(\n      graphNodes: GlslLibRoutineNode[], cycleCheck: Set<string>, alreadyTraversed: Set<string>,\n      result: GlslLibRoutineNode[]) {\n    for (let i = 0; i < graphNodes.length; ++i) {\n      this.dfsTraverse(graphNodes[i], cycleCheck, alreadyTraversed, result);\n    }\n  }\n\n  private static dfsTraverse(\n      root: GlslLibRoutineNode, cycleCheck: Set<string>, alreadyTraversed: Set<string>, result: GlslLibRoutineNode[]) {\n    // if this root has already been traversed return\n    if (!root || alreadyTraversed.has(root.name)) {\n      return;\n    }\n\n    // cyclic dependency has been detected\n    if (cycleCheck.has(root.name)) {\n      throw new Error('Cyclic dependency detected. Can\\'t topologically sort routines needed for shader.');\n    }\n\n    // hold this node to detect cycles if any\n    cycleCheck.add(root.name);\n\n    // traverse children in a dfs fashion\n    const dependencies = root.dependencies;\n    if (dependencies && dependencies.length > 0) {\n      for (let i = 0; i < dependencies.length; ++i) {\n        this.dfsTraverse(dependencies[i], cycleCheck, alreadyTraversed, result);\n      }\n    }\n\n    // add to result holder\n    result.push(root);\n\n    // mark this node as traversed so that we don't traverse from this again\n    alreadyTraversed.add(root.name);\n\n    // release the hold\n    cycleCheck.delete(root.name);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * This GLSL library handles routines converting\n * float32 to/from Unsigned byte or float 16\n */\nexport class EncodingGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.encodeFloat32(), ...this.decodeFloat32()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected encodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      encode: new GlslLibRoutine(`highp vec4 encode(highp float f) {\n        return vec4(f, 0.0, 0.0, 0.0);\n      }\n        `)\n    };\n  }\n  protected decodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      decode: new GlslLibRoutine(`highp float decode(highp vec4 rgba) {\n        return rgba.r;\n      }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode encode a 32bit float to a vec4 (of unsigned bytes)\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected encodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      encode: new GlslLibRoutine(`\n      highp vec4 encode(highp float f) {\n        highp float F = abs(f);\n        highp float Sign = step(0.0,-f);\n        highp float Exponent = floor(log2(F));\n        highp float Mantissa = (exp2(- Exponent) * F);\n        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));\n        highp vec4 rgba;\n        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));\n        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);\n        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));\n        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));\n        ${endianness}\n        rgba = rgba / 255.0; // values need to be normalized to [0,1]\n        return rgba;\n    }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode a vec4 of unsigned bytes to float32\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected decodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      decode: new GlslLibRoutine(`\n        highp float decode(highp vec4 rgba) {\n          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]\n          ${endianness}\n          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;\n          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;\n          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);\n          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));\n          return Result;\n      }\n        `)\n    };\n  }\n  /**\n   * Determines if the machine is little endian or not\n   * @credit: https://gist.github.com/TooTallNate/4750953\n   */\n  static isLittleEndian(): boolean {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) {\n      return true;\n    }\n    if (c[0] === 0xde) {\n      return false;\n    }\n    throw new Error('unknown endianness');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\n\n/**\n * This GLSL library handles routines around reading a texlet and writing to it\n * Reading and writing could be more than just dealing with one channel\n * It may require encoding/decoding to/from 4 channels into one\n */\nexport class FragColorGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.setFragColor(), ...this.getColorAsFloat()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected setFragColor(): {[name: string]: GlslLibRoutine} {\n    const glsl = getGlsl(this.context.glContext.version);\n    return {\n      setFragColor: new GlslLibRoutine(\n          `\n        void setFragColor(float value) {\n            ${glsl.output} = encode(value);\n        }\n        `,\n          ['encoding.encode'])\n    };\n  }\n  protected getColorAsFloat(): {[name: string]: GlslLibRoutine} {\n    return {\n      getColorAsFloat: new GlslLibRoutine(\n          `\n        float getColorAsFloat(vec4 color) {\n            return decode(color);\n        }\n        `,\n          ['encoding.decode'])\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nconst INLINE_FUNC_DEF_REGEX = /@inline[\\s\\n\\r]+(\\w+)[\\s\\n\\r]+([0-9a-zA-Z_]+)\\s*\\(([^)]*)\\)\\s*{(([^}]|[\\n\\r])*)}/gm;\nconst FUNC_CALL_REGEX = '(\\\\w+)?\\\\s+([_0-9a-zA-Z]+)\\\\s+=\\\\s+__FUNC__\\\\((.*)\\\\)\\\\s*;';\n/**\n * GLSL preprocessor responsible for resolving @inline directives\n */\nexport function replaceInlines(script: string): string {\n  const inlineDefs: {[name: string]: {params: Array<{type: string; name: string}|null>; body: string}} = {};\n  let match;\n  while ((match = INLINE_FUNC_DEF_REGEX.exec(script)) !== null) {\n    const params = match[3]\n                       .split(',')\n                       .map(s => {\n                         const tokens = s.trim().split(' ');\n                         if (tokens && tokens.length === 2) {\n                           return {type: tokens[0], name: tokens[1]};\n                         }\n                         return null;\n                       })\n                       .filter(v => v !== null);\n    inlineDefs[match[2]] = {params, body: match[4]};\n  }\n  for (const name in inlineDefs) {\n    const regexString = FUNC_CALL_REGEX.replace('__FUNC__', name);\n    const regex = new RegExp(regexString, 'gm');\n    while ((match = regex.exec(script)) !== null) {\n      const type = match[1];\n      const variable = match[2];\n      const params = match[3].split(',');\n      const declLine = (type) ? `${type} ${variable};` : '';\n      let newBody: string = inlineDefs[name].body;\n      let paramRedecLine = '';\n      inlineDefs[name].params.forEach((v, i) => {\n        if (v) {\n          paramRedecLine += `${v.type} ${v.name} = ${params[i]};\\n`;\n        }\n      });\n      newBody = `${paramRedecLine}\\n ${newBody}`;\n      newBody = newBody.replace('return', `${variable} = `);\n      const replacement = `\n      ${declLine}\n      {\n        ${newBody}\n      }\n      `;\n      script = script.replace(match[0], replacement);\n    }\n  }\n  script = script.replace(INLINE_FUNC_DEF_REGEX, '');\n  return script;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutineNode, TopologicalSortGlslRoutines} from './glsl-definitions';\nimport {replaceInlines} from './glsl-function-inliner';\nimport {glslRegistry} from './glsl-registered-libs';\nimport {getDefaultFragShaderMain, getFragShaderPreamble} from './glsl-source';\nimport {ProgramInfo, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * Preprocessor for the additions to the GLSL language\n * It deals with:\n *  @include directives\n *  @inline\n *  Loop unrolling (not implemented)\n *  Macro resolution (not implemented)\n */\nexport class GlslPreprocessor {\n  readonly context: GlslContext;\n  readonly libs: {[name: string]: GlslLib} = {};\n  readonly glslLibRoutineDependencyGraph: {[routineName: string]: GlslLibRoutineNode} = {};\n\n  constructor(\n      glContext: WebGLContext, programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[],\n      outputTextureLayout: TextureLayout) {\n    this.context = new GlslContext(glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n\n    // construct GlslLibs\n    Object.keys(glslRegistry).forEach((name: string) => {\n      const lib = new glslRegistry[name](this.context);\n      this.libs[name] = lib;\n    });\n\n    // construct GlslRoutineDependencyGraph\n    const map = this.glslLibRoutineDependencyGraph;\n    for (const libName in this.libs) {\n      const lib = this.libs[libName];\n      const routinesInLib = lib.getFunctions();\n      for (const routine in routinesInLib) {\n        const key = libName + '.' + routine;\n        let currentNode: GlslLibRoutineNode;\n        if (map[key]) {\n          currentNode = map[key];\n          currentNode.routineBody = routinesInLib[routine].routineBody;\n        } else {\n          currentNode = new GlslLibRoutineNode(key, routinesInLib[routine].routineBody);\n          map[key] = currentNode;\n        }\n        const dependencies = routinesInLib[routine].dependencies;\n        if (dependencies) {\n          for (let i = 0; i < dependencies.length; ++i) {\n            if (!map[dependencies[i]]) {\n              const node = new GlslLibRoutineNode(dependencies[i]);\n              map[dependencies[i]] = node;\n              currentNode.addDependency(node);\n            } else {\n              currentNode.addDependency(map[dependencies[i]]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  preprocess(): string {\n    const programInfo = this.context.programInfo;\n    let source = programInfo.shaderSource;\n\n    // append main() function\n    if (!this.context.programInfo.hasMain) {\n      source = `${source}\n      ${getDefaultFragShaderMain(this.context.glContext.version, this.context.outputTextureLayout.shape.length)}`;\n    }\n    // replace inlines\n    source = replaceInlines(source);\n\n    // concat final source string\n    return `${getFragShaderPreamble(this.context.glContext.version)}\n    ${this.getUniforms(programInfo.inputNames, programInfo.variables)}\n    ${this.getImports(source)}\n    ${source}`;\n  }\n\n  protected getImports(script: string): string {\n    const routinesIncluded = this.selectGlslLibRoutinesToBeIncluded(script);\n\n    if (routinesIncluded.length === 0) {\n      return '';\n    }\n\n    let routines = '';\n    for (let i = 0; i < routinesIncluded.length; ++i) {\n      if (routinesIncluded[i].routineBody) {\n        routines += routinesIncluded[i].routineBody + '\\n';\n      } else {\n        throw new Error(`Missing body for the Glsl Library routine: ${routinesIncluded[i].name}`);\n      }\n    }\n\n    return routines;\n  }\n  private selectGlslLibRoutinesToBeIncluded(script: string): GlslLibRoutineNode[] {\n    const nodes: GlslLibRoutineNode[] = [];\n\n    Object.keys(this.glslLibRoutineDependencyGraph).forEach(classAndRoutine => {\n      const routine = classAndRoutine.split('.')[1];\n      if (script.indexOf(routine) !== -1) {\n        nodes.push(this.glslLibRoutineDependencyGraph[classAndRoutine]);\n      }\n    });\n\n    return TopologicalSortGlslRoutines.returnOrderedNodes(nodes);\n  }\n\n  protected getUniforms(samplers?: string[], variables?: VariableInfo[]): string {\n    const uniformLines: string[] = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLines.push(`uniform sampler2D ${sampler};`);\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLines.push(\n            `uniform ${variable.type} ${variable.name}${variable.arrayLength ? `[${variable.arrayLength}]` : ''};`);\n      }\n    }\n    return uniformLines.join('\\n');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {CoordsGlslLib} from './glsl-coordinate-lib';\nimport {GlslContext, GlslLib} from './glsl-definitions';\nimport {EncodingGlslLib} from './glsl-encoding-lib';\nimport {FragColorGlslLib} from './glsl-fragcolor-lib';\nimport {ShapeUtilsGlslLib} from './glsl-shape-utils-lib';\nimport {VecGlslLib} from './glsl-vec-lib';\n\nexport const glslRegistry: {[name: string]: new (context: GlslContext) => GlslLib} = {\n  'encoding': EncodingGlslLib,\n  'fragcolor': FragColorGlslLib,\n  'vec': VecGlslLib,\n  'shapeUtils': ShapeUtilsGlslLib,\n  'coordinates': CoordsGlslLib,\n  //  'arrays': ArrayGlslSLib\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class ShapeUtilsGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.bcastIndex(),\n      ...this.bcastMatmulIndex(),\n      ...this.offsetToIndices(),\n      ...this.indicesToOffset(),\n      ...this.incrementIndices()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  protected bcastIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].unpackedShape;\n      if (shape.length <= outputRank) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName} (int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected bcastMatmulIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      if (!(shape.length < 2 || shape.length > outputRank)) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastMatmulIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank - 2; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName}(int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n          realIndices[${rank - 1}] = bcastedIndices[${outputRank - 1}];\n          realIndices[${rank - 2}] = bcastedIndices[${outputRank - 2}];\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected indicesToOffset(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `indicesToOffset_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides));\n      funcName = `indicesToOffset_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static indexToOffsetSingle(name: string, rank: number, strides: readonly number[]): string {\n    let block = '';\n    for (let i = rank - 1; i >= 0; --i) {\n      block += `\n        offset += indices[${i}] * ${strides[i]};\n        `;\n    }\n    return `\n      int ${name}(int indices[${rank}]) {\n        int offset = 0;\n        ${block}\n        return offset;\n      }\n      `;\n  }\n  protected offsetToIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `offsetToIndices_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides));\n      funcName = `offsetToIndices_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static offsetToIndicesSingle(name: string, rank: number, strides: readonly number[]): string {\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n      indices[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= indices[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n      indices[${rank - 1}] = offset;`);\n    return `\n      void ${name}(int offset, out int indices[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n      `;\n  }\n  protected incrementIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const rank = shape.length;\n      const funcName = `incrementIndices_${name}`;\n      let shapeInit = '';\n      for (let i = 0; i < rank; ++i) {\n        shapeInit += `\n        shape[${i}] = ${shape[i]};`;\n      }\n      const body = `\n        void ${funcName}(int axis, out int indices[${rank}]) {\n          int shape[${rank}];\n          ${shapeInit};\n          for(int i = ${rank} -1 ; i >= 0; --i) {\n            if(i > axis) continue;\n            indices[i] += 1;\n            if(indices[i] < shape[i]) {\n              break;\n            }\n            indices[i] = 0;\n          }\n        }\n        `;\n      result[funcName] = new GlslLibRoutine(body);\n    });\n    return result;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * represent a version irrelevant abstraction of for GLSL source code\n */\nexport interface Glsl {\n  readonly version: string;\n  readonly attribute: string;\n  readonly varyingVertex: string;\n  readonly varyingFrag: string;\n  readonly texture2D: string;\n  readonly output: string;\n  readonly outputDeclaration: string;\n}\n\nconst GLSL_ES_2_0: Glsl = {\n  version: '',\n  attribute: 'attribute',\n  varyingVertex: 'varying',\n  varyingFrag: 'varying',\n  texture2D: 'texture2D',\n  output: 'gl_FragColor',\n  outputDeclaration: '',\n};\nconst GLSL_ES_3_0: Glsl = {\n  version: '#version 300 es',\n  attribute: 'in',\n  varyingVertex: 'out',\n  varyingFrag: 'in',\n  texture2D: 'texture',\n  output: 'outputColor',\n  outputDeclaration: 'out vec4 outputColor;',\n};\n\nexport function getGlsl(version: 1|2) {\n  return version === 1 ? GLSL_ES_2_0 : GLSL_ES_3_0;\n}\n\nexport function getVertexShaderSource(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n      precision highp float;\n      ${glsl.attribute} vec3 position;\n      ${glsl.attribute} vec2 textureCoord;\n\n      ${glsl.varyingVertex} vec2 TexCoords;\n\n      void main()\n      {\n          gl_Position = vec4(position, 1.0);\n          TexCoords = textureCoord;\n      }`;\n}\n\nexport function getFragShaderPreamble(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${glsl.varyingFrag} vec2 TexCoords;\n    ${glsl.outputDeclaration}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    // Custom vector types to handle higher dimenalities.\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    `;\n}\n\nexport function getDefaultFragShaderMain(version: 1|2, outputShapeLength: number): string {\n  const glsl = getGlsl(version);\n  return `\n  void main() {\n    int indices[${outputShapeLength}];\n    toVec(TexCoords, indices);\n    vec4 result = vec4(process(indices));\n    ${glsl.output} = result;\n  }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for vec routines\n * Vec is an varible length int array. The length is fixed at the time of\n * generating the library functions from the dimensions of the output.\n */\nexport class VecGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.binaryVecFunctions(), ...this.copyVec(), ...this.setVecItem(), ...this.getVecItem()};\n  }\n  protected binaryVecFunctions(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    const nameOp: {[name: string]: string} = {add: '+=', sub: '-=', mul: '*=', div: '/='};\n    const result: {[name: string]: GlslLibRoutine} = {};\n    for (const name in nameOp) {\n      const fname = `${name}Vec`;\n      let assignmentBlock = '';\n      for (let i = 0; i < rank; ++i) {\n        assignmentBlock += `\n          dest[${i}] ${nameOp[name]} src[${i}];\n          `;\n      }\n      const body = `\n        void ${fname}(int src[${rank}], out int dest[${rank}]) {\n          ${assignmentBlock}\n        }\n        `;\n      result[fname] = new GlslLibRoutine(body);\n    }\n\n    return result;\n  }\n  protected copyVec(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let assignmentBlock = '';\n    for (let i = 0; i < rank; ++i) {\n      assignmentBlock += `\n        dest[${i}] = src[${i}];\n        `;\n    }\n    const body = `\n      void copyVec(int src[${rank}], out int dest[${rank}]) {\n        ${assignmentBlock}\n      }\n      `;\n    return {copyVec: new GlslLibRoutine(body)};\n  }\n\n  protected setVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index =${rank} + index;\n        if (index == 0)\n            m[0] = value;\n        `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            m[${i}] = value;\n            `;\n    }\n    block += `\n        else\n            m[${rank - 1}] = value;\n        `;\n    const body = `\n      void setVecItem(out int m[${rank}], int index, int value) {\n        ${block}\n      }\n        `;\n    return {setVecItem: new GlslLibRoutine(body)};\n  }\n  protected getVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index = ${rank} + index;\n        if (index == 0)\n            return m[0];\n      `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            return m[${i}];\n      `;\n    }\n    block += `\n        else\n            return m[${rank - 1}];\n        `;\n    const body = `\n      int getVecItem(int m[${rank}], int index) {\n        ${block}\n      }\n    `;\n    return {getVecItem: new GlslLibRoutine(body)};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from '../../backend';\nimport {Logger} from '../../instrument';\nimport {Tensor} from '../../tensor';\nimport {ShapeUtil} from '../../util';\n\nimport {createPackProgramInfoLoader} from './ops/pack';\nimport {createPackedReshape3DProgramInfoLoader, isReshapeCheap, processDims3D} from './ops/reshape-packed';\nimport {encodeAsUint8} from './ops/uint8-encode';\nimport {createUnpackProgramInfoLoader} from './ops/unpack';\nimport {WebGLSessionHandler} from './session-handler';\nimport {Encoder} from './texture-data-encoder';\nimport {calculateTextureWidthAndHeight, createTextureLayoutFromShape, createTextureLayoutFromTextureType} from './texture-layout';\nimport {Artifact, ProgramInfo, ProgramInfoLoader, TextureData, TextureLayout, TextureType} from './types';\n\nconst getProgramInfoUniqueKey =\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTextureDatas: TextureData[]): string => {\n      const inputs =\n          inputTextureDatas.map(texture => `${texture.unpackedShape.join(',')};${texture.width}x${texture.height}`)\n              .join('_');\n      let key = programInfo.name;\n      if (programInfo.cacheHint) {\n        key += '[' + programInfo.cacheHint + ']';\n      }\n      key += ':' + inputs;\n      return key;\n    };\n\nexport class WebGLInferenceHandler implements InferenceHandler {\n  private packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  private unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  constructor(public session: WebGLSessionHandler) {\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  /**\n   * @returns [width, height]\n   */\n  calculateTextureWidthAndHeight(shape: readonly number[], textureType: TextureType): [number, number] {\n    return calculateTextureWidthAndHeight(this.session.layoutStrategy, shape, textureType);\n  }\n\n  executeProgram(program: ProgramInfo|ProgramInfoLoader, inputs: readonly Tensor[]): TextureData {\n    if (inputs.length < program.inputNames.length) {\n      throw new Error(`Input size mustn't be less than ${program.inputNames.length}.`);\n    }\n    if (program.inputNames.length !== program.inputTypes.length) {\n      throw new Error('input names size does not match input types');\n    }\n\n    // create texture info for input\n    const inputTextureDatas: TextureData[] = [];\n    for (let i = 0; i < program.inputNames.length; ++i) {\n      inputTextureDatas[i] = this.getOrCreateTextureData(inputs[i], program.inputTypes[i]);\n    }\n\n    const key = getProgramInfoUniqueKey(program, inputTextureDatas);\n    let artifact = this.session.programManager.getArtifact(key);\n    const programInfo = artifact ?\n        artifact.programInfo :\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\n                                                                    (program as ProgramInfo));\n\n    // create texture info for output\n    const outputTextureLayout = createTextureLayoutFromTextureType(\n        this.session.layoutStrategy, programInfo.output.dims, programInfo.output.textureType);\n    const outputTextureData = this.createTextureData(outputTextureLayout, programInfo.output.type);\n\n    if (!artifact) {\n      artifact = this.session.programManager.build(programInfo, inputTextureDatas, outputTextureData);\n      this.session.programManager.setArtifact(key, artifact);\n    }\n\n    this.runProgram(artifact, inputTextureDatas, outputTextureData);\n    return outputTextureData;\n  }\n\n  run(program: ProgramInfoLoader, inputs: readonly Tensor[]): Tensor {\n    const outputTextureData = this.executeProgram(program, inputs);\n    return outputTextureData.tensor;\n  }\n\n  private runProgram(artifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    // input should match\n    for (let i = 0; i < inputs.length; ++i) {\n      if (!!inputs[i].isPacked !== (artifact.programInfo.inputTypes[i] === TextureType.packed)) {\n        throw new Error(`input[${i}] property packed inconsistent`);\n      }\n    }\n\n    // output should match\n    if (!!output.isPacked !== (artifact.programInfo.output.textureType === TextureType.packed)) {\n      throw new Error('output property packed inconsistent');\n    }\n\n    this.session.programManager.run(artifact, inputs, output);\n  }\n\n  /**\n   * Create a TextureData object from a tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * If a related texture data is found in cache, returns it;\n   * Otherwise:\n   *   Creates a new texture layout if not provided;\n   *   Creates WebGLTexture with the layout;\n   *   Upload tensor data to the texture;\n   *   Creates a texture data object associated with the given tensor.\n   * @param tensor the tensor with data to upload\n   */\n  private getOrCreateTextureData(tensor: Tensor, textureType: TextureType) {\n    let td = this.getTextureData(tensor.dataId, textureType === TextureType.packed);\n\n    if (!td) {\n      // check if we have texture data in different type\n      td = this.getTextureData(tensor.dataId, textureType !== TextureType.packed);\n      if (td) {\n        if (textureType === TextureType.packed) {\n          return this.pack(td);\n        } else {\n          return this.unpack(td);\n        }\n      }\n    }\n\n    if (!td) {\n      const layout = createTextureLayoutFromTextureType(this.session.layoutStrategy, tensor.dims, textureType);\n\n      if (textureType === TextureType.packedLastDimension) {\n        const group = 1;\n        const channels = 4;\n        const shape = tensor.dims;\n        if (shape.length === 4) {\n          // pre-processing for kernel data of Conv.\n          //\n          // TODO: currently this is a hacking to overwrite Conv's weight. The correct way to do this should be:\n          // 1. implement texture based const-folding\n          // 2. create a WebGL program \"preprocessConvWeight\" to do the same work as below\n          // 3. run the program before dotProduct.\n          //\n          const adjustedKernelShape = [shape[0], Math.ceil((shape[1] * shape[2] * shape[3]) / channels)];\n          const adjustedLayout =\n              createTextureLayoutFromTextureType(this.session.layoutStrategy, adjustedKernelShape, textureType);\n          let buffer = tensor.numberData;\n          if (shape[1] * shape[2] * shape[3] % channels !== 0) {\n            const numFeatureMaps = shape[0];\n            const oldRowSize = shape[1] * shape[2] * shape[3];\n            const newRowSize = Math.ceil(oldRowSize * group / channels) * channels;\n            const newSize = numFeatureMaps * newRowSize;\n            buffer = new Float32Array(newSize);\n            for (let f = 0; f < numFeatureMaps; ++f) {\n              const oldOffset = f * oldRowSize;\n              const newOffset = f * newRowSize + f % group * oldRowSize;\n              buffer.set(tensor.numberData.subarray(oldOffset, oldOffset + oldRowSize), newOffset);\n            }\n          }\n          return this.createTextureData(adjustedLayout, tensor.type, buffer, tensor, Encoder.Usage.UploadOnly);\n        }\n      }\n\n      if (textureType === TextureType.packed) {\n        const unpackedTextureLayout =\n            createTextureLayoutFromShape(this.session.layoutStrategy, tensor.dims, 1, [], {reverseWH: true});\n        const unpackedTextureData = this.createTextureData(\n            unpackedTextureLayout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n        td = this.pack(unpackedTextureData);\n      } else {\n        td = this.createTextureData(layout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n      }\n    }\n    return td;\n  }\n\n  /**\n   * Create a TextureData object using the given data and bind to the given tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * NOTE: this function is a hack for Conv implementation. should remove this function, after rewriting Conv\n   * implementation by Graph.Transformer\n   * @param dataType the tensor data type\n   * @param data the actual data to upload\n   * @param tensor the tensor to bind. tensor's data is ignored.\n   */\n  createTextureDataFromLayoutBindTensor(\n      layout: TextureLayout, dataType: Tensor.DataType, data: Tensor.NumberType, tensor: Tensor): TextureData {\n    return this.createTextureData(layout, dataType, data, tensor, Encoder.Usage.UploadOnly);\n  }\n\n  private createTextureData(\n      layout: TextureLayout, dataType: Tensor.DataType, data?: Tensor.NumberType, tensor?: Tensor,\n      usage?: Encoder.Usage): TextureData {\n    Logger.verbose('InferenceHandler', `Creating TextureData: layout:[${JSON.stringify(layout)}]`);\n    const texture = this.session.textureManager.createTextureFromLayout(dataType, layout, data, usage);\n    return this.createTextureDataFromTexture(layout, dataType, texture, tensor);\n  }\n\n  reshapeUnpacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\n    const newTextureLayout: TextureLayout = {\n      channels: inputTD.channels,\n      height: inputTD.height,\n      width: inputTD.width,\n      // handle reshaping into scalar Tensors\n      shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n      strides: ShapeUtil.computeStrides(reshapedDims),\n      unpackedShape: reshapedDims,\n    };\n    const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n    return newTextureData.tensor;\n  }\n\n  reshapePacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.packed);\n\n    // check if the reshape is 'cheap'\n    if (isReshapeCheap(input.dims, reshapedDims)) {\n      const newTextureLayout: TextureLayout = {\n        channels: inputTD.channels,\n        height: inputTD.height,\n        width: inputTD.width,\n        // handle reshaping into scalar Tensors\n        shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n        strides: ShapeUtil.computeStrides(reshapedDims),\n        unpackedShape: reshapedDims,\n        isPacked: true\n      };\n      const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n      return newTextureData.tensor;\n    }\n\n    const squeezedInputShape = processDims3D(input.dims);\n    const squeezedOutputShape = processDims3D(reshapedDims);\n\n    const squeezedInputTensor = this.reshapePacked(input, squeezedInputShape);\n    const squeezedOutputTensor = this.run(\n        createPackedReshape3DProgramInfoLoader(this, squeezedInputTensor, squeezedOutputShape), [squeezedInputTensor]);\n    const outputTensor = this.reshapePacked(squeezedOutputTensor, reshapedDims);\n    return outputTensor;\n  }\n\n  cast(input: Tensor, type: Tensor.DataType): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\n    const newTextureData = this.createTextureDataFromTexture(inputTD as TextureLayout, type, inputTD.texture);\n    return newTextureData.tensor;\n  }\n\n  private createTextureDataFromTexture(\n      layout: TextureLayout, dataType: Tensor.DataType, texture: WebGLTexture, tensor?: Tensor, tensorId?: Tensor.Id) {\n    const textureData: TextureData = {\n      ...layout,\n      tensor: tensor ||\n          new Tensor(\n                  layout.unpackedShape, dataType, (_id: Tensor.Id) => this.readTexture(textureData),\n                  async (_id: Tensor.Id) => this.readTextureAsync(textureData), undefined, tensorId),\n      texture\n    };\n    this.setTextureData(textureData.tensor.dataId, textureData, layout.isPacked);\n    return textureData;\n  }\n\n  private getTextureData(tensorId: Tensor.Id, isPacked = false): TextureData|undefined {\n    return this.session.isInitializer(tensorId) ? this.session.getTextureData(tensorId, isPacked) :\n        isPacked                                ? this.packedTextureDataCache.get(tensorId) :\n                                                  this.unpackedTextureDataCache.get(tensorId);\n  }\n  setTextureData(tensorId: Tensor.Id, td: TextureData, isPacked = false): void {\n    if (this.session.isInitializer(tensorId)) {\n      this.session.setTextureData(tensorId, td, isPacked);\n    } else {\n      (isPacked ? this.packedTextureDataCache : this.unpackedTextureDataCache).set(tensorId, td);\n    }\n  }\n  isTextureLayoutCached(tensor: Tensor, isPacked = false): boolean {\n    return !!this.getTextureData(tensor.dataId, isPacked);\n  }\n\n  dispose(): void {\n    this.session.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  readTexture(textureData: TextureData): Tensor.NumberType {\n    if (textureData.isPacked) {\n      return this.readTexture(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTexture(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  async readTextureAsync(textureData: TextureData): Promise<Tensor.NumberType> {\n    if (textureData.isPacked) {\n      return this.readTextureAsync(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTextureAsync(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  pack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createPackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n\n  unpack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createUnpackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OpSet} from '../../opset';\n\nimport {batchNormalization, parseBatchNormalizationAttributes} from './ops/batch-normalization';\nimport * as binaryOps from './ops/binary-op';\nimport {cast, parseCastAttributes} from './ops/cast';\nimport {concat, parseConcatAttributes} from './ops/concat';\nimport {conv, parseConvAttributes} from './ops/conv';\nimport {convTranspose, parseConvTransposeAttributes} from './ops/conv-transpose';\nimport {depthToSpace, parseDepthToSpaceAttributes} from './ops/depth-to-space';\nimport {flatten, parseFlattenAttributes} from './ops/flatten';\nimport {gather, parseGatherAttributes} from './ops/gather';\nimport {gemm, parseGemmAttributesV11, parseGemmAttributesV7} from './ops/gemm';\nimport {imageScaler, parseImageScalerAttributes} from './ops/image-scaler';\nimport {instanceNormalization, parseInstanceNormalizationAttributes} from './ops/instance-normalization';\nimport {lrn, parseLrnAttributes} from './ops/lrn';\nimport {matMul, parseMatMulAttributes} from './ops/matmul';\nimport {padV11, padV2, parsePadAttributesV11, parsePadAttributesV2} from './ops/pad';\nimport {averagePool, globalAveragePool, globalMaxPool, maxPool, parseAveragePoolAttributes, parseGlobalAveragePoolAttributes, parseMaxPoolAttributes} from './ops/pool';\nimport {parseReduceAttributes, reduceLogSum, reduceLogSumSquare, reduceMax, reduceMean, reduceMin, reduceProd, reduceSum} from './ops/reduce';\nimport {reshape} from './ops/reshape';\nimport {parseResizeAttributesV10, parseResizeAttributesV11, resize} from './ops/resize-packed';\nimport {shape} from './ops/shape';\nimport {parseSliceAttributes, slice, sliceV10} from './ops/slice';\nimport {parseSoftmaxAttributes, parseSoftmaxAttributesV13, softmax, softmaxV13} from './ops/softmax';\nimport {parseSplitAttributes, split} from './ops/split';\nimport {parseSqueezeAttributes, squeeze, squeezeV13} from './ops/squeeze';\nimport {sum} from './ops/sum';\nimport {tile} from './ops/tile';\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\nimport * as unaryOps from './ops/unary-op';\nimport {parseUnsqueezeAttributes, unsqueeze, unsqueezeV13} from './ops/unsqueeze';\nimport {parseUpsampleAttributesV7, parseUpsampleAttributesV9, upsample} from './ops/upsample';\n\nexport const WEBGL_OP_RESOLVE_RULES: readonly OpSet.ResolveRule[] = [\n  ['Abs', '', '6+', unaryOps.abs],\n  ['Acos', '', '7+', unaryOps.acos],\n  ['Add', '', '7+', binaryOps.add],\n  ['And', '', '7+', binaryOps.and],\n  ['Asin', '', '7+', unaryOps.asin],\n  ['Atan', '', '7+', unaryOps.atan],\n  // TODO: support new attributes for AveragePool-10\n  ['AveragePool', '', '7+', averagePool, parseAveragePoolAttributes],\n  ['BatchNormalization', '', '7+', batchNormalization, parseBatchNormalizationAttributes],\n  ['Cast', '', '6+', cast, parseCastAttributes],\n  ['Ceil', '', '6+', unaryOps.ceil],\n  ['Clip', '', '6-10', unaryOps.clip, unaryOps.parseClipAttributes],\n  ['Clip', '', '11+', unaryOps.clipV11],\n  ['Concat', '', '4+', concat, parseConcatAttributes],\n  ['Conv', '', '1+', conv, parseConvAttributes],\n  ['ConvTranspose', '', '1+', convTranspose, parseConvTransposeAttributes],\n  ['Cos', '', '7+', unaryOps.cos],\n  ['Div', '', '7+', binaryOps.div],\n  ['Dropout', '', '7+', unaryOps.identity],\n  ['DepthToSpace', '', '1+', depthToSpace, parseDepthToSpaceAttributes],\n  ['Equal', '', '7+', binaryOps.equal],\n  ['Elu', '', '6+', unaryOps.elu, unaryOps.parseEluAttributes],\n  ['Exp', '', '6+', unaryOps.exp],\n  ['Flatten', '', '1+', flatten, parseFlattenAttributes],\n  ['Floor', '', '6+', unaryOps.floor],\n  ['FusedConv', 'com.microsoft', '1+', conv, parseConvAttributes],\n  ['Gather', '', '1+', gather, parseGatherAttributes],\n  ['Gemm', '', '7-10', gemm, parseGemmAttributesV7],\n  ['Gemm', '', '11+', gemm, parseGemmAttributesV11],\n  ['GlobalAveragePool', '', '1+', globalAveragePool, parseGlobalAveragePoolAttributes],\n  ['GlobalMaxPool', '', '1+', globalMaxPool],\n  ['Greater', '', '7+', binaryOps.greater],\n  ['Identity', '', '1+', unaryOps.identity],\n  ['ImageScaler', '', '1+', imageScaler, parseImageScalerAttributes],\n  ['InstanceNormalization', '', '6+', instanceNormalization, parseInstanceNormalizationAttributes],\n  ['LeakyRelu', '', '6+', unaryOps.leakyRelu, unaryOps.parseLeakyReluAttributes],\n  ['Less', '', '7+', binaryOps.less],\n  ['LRN', '', '1+', lrn, parseLrnAttributes],\n  ['Log', '', '6+', unaryOps.log],\n  ['MatMul', '', '1+', matMul, parseMatMulAttributes],\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\n  ['MaxPool', '', '1+', maxPool, parseMaxPoolAttributes],\n  ['Mul', '', '7+', binaryOps.mul],\n  ['Neg', '', '6+', unaryOps.neg],\n  ['Not', '', '1+', unaryOps.not],\n  ['Or', '', '7+', binaryOps.or],\n  ['Pad', '', '2-10', padV2, parsePadAttributesV2],\n  ['Pad', '', '11+', padV11, parsePadAttributesV11],\n  ['Pow', '', '7+', binaryOps.pow],\n  ['PRelu', '', '7+', binaryOps.pRelu],\n  ['ReduceLogSum', '', '1+', reduceLogSum, parseReduceAttributes],\n  ['ReduceMax', '', '1+', reduceMax, parseReduceAttributes],\n  ['ReduceMean', '', '1+', reduceMean, parseReduceAttributes],\n  ['ReduceMin', '', '1+', reduceMin, parseReduceAttributes],\n  ['ReduceProd', '', '1+', reduceProd, parseReduceAttributes],\n  ['ReduceSum', '', '1-12', reduceSum, parseReduceAttributes],\n  ['ReduceSumSquare', '', '1+', reduceLogSumSquare, parseReduceAttributes],\n  ['Relu', '', '6+', unaryOps.relu],\n  ['Reshape', '', '5+', reshape],\n  ['Resize', '', '10', resize, parseResizeAttributesV10],\n  ['Resize', '', '11+', resize, parseResizeAttributesV11],\n  ['Shape', '', '1+', shape],\n  ['Sigmoid', '', '6+', unaryOps.sigmoid],\n  ['Sin', '', '7+', unaryOps.sin],\n  ['Slice', '', '10+', sliceV10],  // TODO: support 'steps' for Slice-10\n  ['Slice', '', '1-9', slice, parseSliceAttributes],\n  // The \"semantic\" meaning of axis has changed in opset-13.\n  ['Softmax', '', '1-12', softmax, parseSoftmaxAttributes],\n  ['Softmax', '', '13+', softmaxV13, parseSoftmaxAttributesV13],\n  // 'Split' operator has an optional attribute 'split'\n  // this attribute determines how the specified axis of input data is split.\n  // When the attribute is missing, we need the count of number of outputs\n  // so that we can determine the 'split' attribute from the runtime input to the Operator\n  ['Split', '', '2-12', split, parseSplitAttributes],\n  ['Sqrt', '', '6+', unaryOps.sqrt],\n  ['Squeeze', '', '1-12', squeeze, parseSqueezeAttributes],\n  ['Squeeze', '', '13+', squeezeV13],\n  ['Sub', '', '7+', binaryOps.sub],\n  ['Sum', '', '6+', sum],\n  ['Tan', '', '7+', unaryOps.tan],\n  ['Tanh', '', '6+', unaryOps.tanh],\n  ['Tile', '', '6+', tile],\n  ['Transpose', '', '1+', transpose, parseTransposeAttributes],\n  ['Upsample', '', '7-8', upsample, parseUpsampleAttributesV7],\n  ['Upsample', '', '9', upsample, parseUpsampleAttributesV9],\n  ['Unsqueeze', '', '1-12', unsqueeze, parseUnsqueezeAttributes],\n  ['Unsqueeze', '', '13+', unsqueezeV13],\n  ['Xor', '', '7+', binaryOps.xor],\n];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface BatchNormalizationAttributes extends AttributeWithCacheKey {\n  epsilon: number;\n  momentum: number;\n  spatial: number;\n}\n\nconst batchNormalizationProgramMetadata = {\n  name: 'BatchNormalization',\n  inputNames: ['A', 'Scale', 'B', 'Mean', 'Variance'],\n  inputTypes:\n      [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked]\n};\n\nexport const batchNormalization: OperatorImplementation<BatchNormalizationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...batchNormalizationProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createBatchNormalizationProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseBatchNormalizationAttributes: OperatorInitialization<BatchNormalizationAttributes> =\n    (node: Graph.Node): BatchNormalizationAttributes => {\n      const epsilon = node.attributes.getFloat('epsilon', 1e-5);\n      const momentum = node.attributes.getFloat('momentum', 0.9);\n      const spatial = node.attributes.getInt('spatial', 1);\n      return createAttributeWithCacheKey({epsilon, momentum, spatial});\n    };\n\nconst createBatchNormalizationProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes):\n        ProgramInfo => {\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n          const rank = inputs[0].dims.length;\n          const [scaleWidth, scaleHeight] =\n              inferenceHandler.calculateTextureWidthAndHeight(inputs[1].dims, TextureType.unpacked);\n          const shaderSource = `\n  float process(int[${rank}] indices) {\n    vec2 position = offsetToCoords(indices[1], ${scaleWidth}, ${scaleHeight});\n    float scale = getColorAsFloat(${glsl.texture2D}(Scale, position));\n    float mean = getColorAsFloat(${glsl.texture2D}(Mean, position));\n    float variance = getColorAsFloat(${glsl.texture2D}(Variance, position));\n    float b = getColorAsFloat(${glsl.texture2D}(B, position));\n\n    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${attributes.epsilon})) ) + b;\n  }`;\n          return {\n            ...batchNormalizationProgramMetadata,\n            output: {dims: inputs[0].dims, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 5) {\n    throw new Error('BatchNormalization requires 5 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n  const mean = inputs[3];\n  const var_ = inputs[4];\n\n  // input should atleast have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1 || mean.dims.length !== 1 ||\n      var_.dims.length !== 1) {\n    throw new Error('invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1] || mean.dims[0] !== X.dims[1] ||\n      var_.dims[0] !== X.dims[1]) {\n    throw new Error('invalid input shape.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64') || (mean.type !== 'float32' && mean.type !== 'float64') ||\n      (var_.type !== 'float32' && var_.type !== 'float64')) {\n    throw new Error('invalid input tensor types.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\n\nexport function glslAdd(): GlslValueFunction {\n  const name = 'add_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a + b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 + v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslDiv(): GlslValueFunction {\n  const name = 'div_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a / b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 / v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslMul(): GlslValueFunction {\n  const name = 'mul_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a * b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 * v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSub(): GlslValueFunction {\n  const name = 'sub_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a - b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 - v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslEqual(): GlslValueFunction {\n  const name = 'equal_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a == b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(equal(v1, v2));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslGreater(): GlslValueFunction {\n  const name = 'greater_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a > b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r > v2.r ,\n      v1.g > v2.g,\n      v1.b > v2.b,\n      v1.a > v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLess(): GlslValueFunction {\n  const name = 'less_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a < b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r < v2.r ,\n                v1.g < v2.g,\n                v1.b < v2.b,\n                v1.a < v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslAnd(): GlslValueFunction {\n  const name = 'and_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) && bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r && b2.r ,\n                b1.g && b2.g,\n                b1.b && b2.b,\n                b1.a && b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslOr(): GlslValueFunction {\n  const name = 'or_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) || bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r || b2.r ,\n                b1.g || b2.g,\n                b1.b || b2.b,\n                b1.a || b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslXor(): GlslValueFunction {\n  const name = 'xor_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) ^^ bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r ^^ b2.r ,\n                b1.g ^^ b2.g,\n                b1.b ^^ b2.b,\n                b1.a ^^ b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslPow(): GlslValueFunction {\n  return glslBuiltinBinary('pow');\n}\nexport function glslPRelu(): GlslValueFunction {\n  const name = 'prelu_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a < 0.0 ? a * b: a;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(\n      v1.r < 0.0 ? v1.r * v2.r: v1.r,\n      v1.g < 0.0 ? v1.g * v2.g: v1.g,\n      v1.b < 0.0 ? v1.b * v2.b: v1.b,\n      v1.a < 0.0 ? v1.a * v2.a: v1.a\n      );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nfunction glslBuiltinBinary(fname: string): GlslValueFunction {\n  const name = `${fname}_`;\n  const body = `\n  float ${name}(float a, float b) {\n    return ${fname}(a, b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return ${fname}(v1, v2);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nconst createBinaryProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type, cacheKey?: string): ProgramInfoLoader => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        cacheHint: cacheKey,\n        get: () => createBinaryProgramInfo(handler, inputs, glslFunc, outputTensorType)\n      };\n    };\n\nconst createBinaryProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type): ProgramInfo => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n      let outputShape = inputs[0].dims;\n\n      const usePackedTexture = handler.session.pack;\n\n      if (isBroadcast) {\n        const calculatedShape = BroadcastUtil.calcShape(inputs[0].dims, inputs[1].dims, false);\n        if (!calculatedShape) {\n          throw new Error('Can\\'t perform binary op on the given tensors');\n        }\n        outputShape = calculatedShape;\n        const outputRank = outputShape.length;\n        const aRank = inputs[0].dims.length !== 0 ? inputs[0].dims.length : 1;\n        const bRank = inputs[1].dims.length !== 0 ? inputs[1].dims.length : 1;\n        const aBcast = inputs[0].dims.length !== 0 ? 'bcastIndices_A(indices, aindices);' : 'aindices[0] = 0;';\n        const bBcast = inputs[1].dims.length !== 0 ? 'bcastIndices_B(indices, bindices);' : 'bindices[0] = 0;';\n\n        const glsl = getGlsl(handler.session.backend.glContext.version);\n        const shaderSource = usePackedTexture ? `\n      ${glslFunc.body}\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n        vec4 result = ${glslFunc.name}(a, b);\n        ${glsl.output} = result;\n      }` :\n                                                `\n      ${glslFunc.body}\n      float process(int indices[${outputRank}]) {\n        int aindices[${aRank}];\n        int bindices[${bRank}];\n        ${aBcast}\n        ${bBcast}\n        return ${glslFunc.name}(_A(aindices), _B(bindices));\n      }`;\n\n        return {\n          name: glslFunc.name,\n          inputNames: ['A', 'B'],\n          inputTypes: [textureType, textureType],\n          output: {dims: outputShape, type: outputTensorType, textureType},\n          shaderSource,\n          hasMain: usePackedTexture\n        };\n      }\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n      const shaderSource = `\n    ${glslFunc.body}\n    void main() {\n      vec4 v1 = ${glsl.texture2D}(A, TexCoords);\n      vec4 v2 = ${glsl.texture2D}(B, TexCoords);\n      vec4 result = ${glslFunc.name}(v1, v2);\n      ${glsl.output} = result;\n    }\n    `;\n\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        output: {dims: inputs[0].dims, type: outputTensorType, textureType},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const add = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAdd()), inputs)];\n\nexport const and = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAnd(), 'bool'), inputs)];\n\nexport const div = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslDiv()), inputs)];\n\nexport const equal = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslEqual(), 'bool'), inputs)];\n\nexport const greater = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslGreater(), 'bool'), inputs)];\n\nexport const less = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslLess(), 'bool'), inputs)];\n\nexport const mul = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslMul()), inputs)];\n\nexport const or = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslOr(), 'bool'), inputs)];\n\nexport const pow = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPow()), inputs)];\n\nexport const pRelu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPRelu()), inputs)];\n\nexport const sub = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslSub()), inputs)];\n\nexport const xor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslXor(), 'bool'), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ProtoUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const cast: OperatorImplementation<Tensor.DataType> =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], to: Tensor.DataType): Tensor[] => {\n      validateInputs(inputs);\n      return [handler.cast(inputs[0], to)];\n    };\n\nexport const parseCastAttributes: OperatorInitialization<Tensor.DataType> = (node: Graph.Node): Tensor.DataType =>\n    ProtoUtil.tensorDataTypeFromProto(node.attributes.getInt('to'));\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Cast requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('Invalid input type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {ConcatAttributes} from './concat';\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst createPackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat (packed)',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.packed),\n  cacheHint\n});\n\nconst createPackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n      const coords = getChannels('coords', rank);\n      const dtype = getCoordsDataType(rank);\n      const unpackChannel = unpackFromChannel();\n\n      const shapes = inputs.map(i => i.dims);\n      const channels = getGlChannels(rank);\n      const offsets: number[] = new Array(shapes.length - 1);\n\n      offsets[0] = shapes[0][axis];\n      for (let i = 1; i < offsets.length; i++) {\n        offsets[i] = offsets[i - 1] + shapes[i][axis];\n      }\n\n      const channel = channels[axis];\n      const lastChannels = channels.slice(-2);\n      const allChannels = channels.join();\n\n      let getValueSnippet = `if (${channel} < ${offsets[0]}) {\n        return getChannel(\n            getX0(${allChannels}), vec2(${lastChannels.join()}));\n        }`;\n      for (let i = 1; i < offsets.length; i++) {\n        const shift = offsets[i - 1];\n        getValueSnippet += `\n            if (${channel} < ${offsets[i]}  && ${channel} >= ${offsets[i - 1]}) {\n              return getChannel(\n                getX${i}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n                vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));\n            }`;\n      }\n      const lastIndex = offsets.length;\n      const shift = offsets[offsets.length - 1];\n      getValueSnippet += `\n            return getChannel(\n              getX${lastIndex}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n              vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));`;\n\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n\n      const shaderSource = `\n          ${unpackChannel}\n          float getValue(${channels.map(x => 'int ' + x)}) {\n            ${getValueSnippet}\n          }\n\n          void main() {\n            ${dtype} coords = getOutputCoords();\n            int lastDim = coords.${channels[rank - 1]};\n            coords.${channels[rank - 1]} = coords.${channels[rank - 2]};\n            coords.${channels[rank - 2]} = lastDim;\n\n            vec4 result = vec4(getValue(${coords}), 0., 0., 0.);\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} + 1;\n            if (${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.g = getValue(${coords});\n            }\n\n            ${coords[rank - 2]} = ${coords[rank - 2]} + 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]}) {\n              result.a = getValue(${coords});\n            }\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} - 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]} &&\n                ${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.b = getValue(${coords});\n            }\n            ${glsl.output} = result;\n          }\n        `;\n\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createPackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createPackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createPackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getShiftedChannelsSnippet = (channels: string[], channel: string, shift: number): string => {\n  const channelIdx = channels.indexOf(channel);\n  const res = channels.map((c, idx) => {\n    if (idx === channelIdx) {\n      return `${c} - ${shift}`;\n    } else {\n      return c;\n    }\n  });\n  return res.join();\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {createPackedConcatProgramInfoLoader} from './concat-packed';\n\nexport interface ConcatAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const concat: OperatorImplementation<ConcatAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): Tensor[] => {\n      validateInputs(inputs);\n      if (inferenceHandler.session.pack && inputs[0].dims.length > 1) {\n        const output =\n            inferenceHandler.run(createPackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      } else {\n        const output =\n            inferenceHandler.run(createUnpackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      }\n    };\n\nconst createUnpackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.unpacked),\n  cacheHint\n});\n\nconst createUnpackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n\n      const sizeInConcatAxis = new Array<number>(inputs.length);\n      let previousSum = 0;\n      for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n        previousSum += inputs[i].dims[axis];\n        sizeInConcatAxis[i] = previousSum;\n      }\n\n      let getTextureIndexWhereDataResidesMethod = '';\n      // in most cases linear search is sufficient, as in most scenarios, only 2 tensors are concatenated\n      if (inputs.length < 5) {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n      } else {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesBinarySearch(sizeInConcatAxis);\n      }\n\n      const fetchDataFromCorrectTextureMethod = getFetchDataFromCorrectTextureMethod(inputs.length, rank);\n      const getSizeInConcatAxisValueFromIndexMethod = getGetSizeInConcatAxisValueFromIndexMethod(sizeInConcatAxis);\n      const shaderSource = `\n        ${fetchDataFromCorrectTextureMethod}\n        ${getSizeInConcatAxisValueFromIndexMethod}\n        ${getTextureIndexWhereDataResidesMethod}\n        float process(int indices[${rank}]) {\n          int textureIndex = getTextureWhereDataResides (indices[${axis}]);\n\n          if(textureIndex != 0) {\n            indices[${axis}] = indices[${axis}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));\n          }\n\n          return fetchDataFromCorrectTexture(textureIndex, indices);\n        }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n      };\n    };\n\nconst createUnpackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createUnpackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createUnpackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getTextureIndexWhereDataResidesLinearSearch = (sizeInConcatAxis: number[]): string => {\n  const searchAxis = sizeInConcatAxis.map((size, i) => `if(index<${size}) {return ${i};}\n`);\n  return `int getTextureWhereDataResides(int index) {\n      ${searchAxis.join('')}\n    }`;\n};\n\n// TODO: Implement BinarySearch in GLSL\nconst getTextureIndexWhereDataResidesBinarySearch = (sizeInConcatAxis: number[]): string =>\n    getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n\nconst getFetchDataFromCorrectTextureMethod = (numberOfTensors: number, tensorRank: number) => {\n  const codeLines: string[] = [`float fetchDataFromCorrectTexture(int textureIndex, int indices[${tensorRank}]) {`];\n  for (let i = 0; i < numberOfTensors; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    } else if (i === numberOfTensors - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return _X${i}(indices); }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst getGetSizeInConcatAxisValueFromIndexMethod = (sizeInConcatAxis: number[]): string => {\n  const codeLines: string[] = ['int getSizeInConcatAxisValueFromIndex(int index) {'];\n  for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    } else if (i === sizeInConcatAxis.length - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return ${sizeInConcatAxis[i]}; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n\n  return codeLines.join('\\n');\n};\n\nexport const parseConcatAttributes: OperatorInitialization<ConcatAttributes> = (node: Graph.Node): ConcatAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis')});\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 1) {\n    throw new Error('too few inputs');\n  }\n\n  const inputType = inputs[0].type;\n  const inputDimensionality = inputs[0].dims.length;\n\n  // TODO: Support string concat\n  if (inputType === 'string') {\n    throw new Error('string tensor is not supported yet');\n  }\n\n  for (const input of inputs) {\n    // make sure types of all inputs match\n    if (input.type !== inputType) {\n      throw new Error('input tensors should be one type');\n    }\n\n    // make sure the dimensionality of all inputs are the same\n    if (input.dims.length !== inputDimensionality) {\n      throw new Error('input tensors should have the same shape');\n    }\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../../instrument';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {getActivationSnippet} from './fuse-utils';\n\nconst createUnpackedGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'GroupedConv',\n  inputNames: hasBias ? ['X', 'W', 'Bias'] : ['X', 'W'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nconst createUnpackedGroupedConvProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\n     attributes: ConvAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBias(output_channel);' : '';\n      const xShape = inputs[0].dims.slice();\n      const wShape = inputs[1].dims.slice();\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\n      Logger.verbose(\n          'GroupedConv',\n          `autpPad:${attributes.autoPad}, dilations:${attributes.dilations}, group:${attributes.group}, kernelShape:${\n              attributes.kernelShape}, pads:${attributes.pads}, strides:${attributes.strides}`);\n      const outputShape =\n          calculateOutputShape(xShape, wShape, attributes.dilations, attributes.pads, attributes.strides);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const {activationFunction, applyActivation} = getActivationSnippet(attributes);\n\n      const shaderSource = `\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\n  ${activationFunction}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n    ivec2 xRCCorner = coords.zw * strides - pads;\n    int group_id = output_channel / ${outputChannelsPerGroup};\n\n    float value = 0.0;\n    for (int wInChannel = 0; wInChannel < ${wShape[1]}; wInChannel++) {\n      int input_channel = group_id * ${wShape[1]} + wInChannel;\n      for (int wHeight = 0; wHeight < ${wShape[2]}; wHeight++) {\n        int xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]};\n\n        if (xHeight < 0 || xHeight >= ${xShape[2]}) {\n          continue;\n        }\n\n        for (int wWidth = 0; wWidth < ${wShape[3]}; wWidth++) {\n          int xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]};\n          if (xWidth < 0 || xWidth >= ${xShape[3]}) {\n            continue;\n          }\n\n          float xVal = getX(batch, input_channel, xWidth, xHeight);\n          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${processBias}\n    ${applyActivation}\n    ${glsl.output} = vec4(value, .0, .0, .0);\n  }\n`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createUnpackedGroupedConvProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes):\n        ProgramInfoLoader => {\n          const metadata = createUnpackedGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\n          return {\n            ...metadata,\n            get: () => createUnpackedGroupedConvProgramInfo(inferenceHandler, inputs, metadata, attributes)\n          };\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {createPackedIm2ColProgramInfoLoader} from './im2col-pack';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const conv2DPackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapePacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapePacked(matmulOutput, outputShape);\n    };\n\nexport const conv2DPacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n\n      // run im2col\n      const im2colOutput = inferenceHandler.run(\n          createPackedIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes),\n          [inputs[0]]);\n\n      // reshape kernel\n      const kernelReshaped = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1] * kshape[2] * kshape[3]]);\n\n      // run matmul\n      const matmulInputs =\n          (inputs.length === 3) ? [kernelReshaped, im2colOutput, inputs[2]] : [kernelReshaped, im2colOutput];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n\n      // reshape output\n      const outputReshaped = inferenceHandler.reshapePacked(matmulOutput, outputShape);\n      return outputReshaped;\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {InferenceHandler} from '../../../backend';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {ConvAttributes} from './conv';\nimport {getActivationSnippet, parseInternalActivationAttributes} from './fuse-utils';\n\nconst computeTotalPad =\n    (inDim: number, stride: number, adj: number, kernel: number, dilation: number, outSize: number) =>\n        (inDim - 1) * stride + adj + (kernel - 1) * dilation + 1 - outSize;\n\nconst distributePadding = (totalPad: number, autoPad: string, pads: number[], head: number, tail: number) => {\n  const smallPad = Math.floor(totalPad / 2);\n  if (autoPad === 'SAME_UPPER') {\n    pads[head] = smallPad;\n    pads[tail] = totalPad - smallPad;\n  } else if (autoPad === 'SAME_LOWER') {\n    pads[head] = totalPad - smallPad;\n    pads[tail] = smallPad;\n  }\n};\n\nconst calculateOutputShapeAndPads =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[], autoPad: string,\n     pads: number[], strides: readonly number[], outputPadding: readonly number[], outputShape: number[]) => {\n      const spatialRank = inputShape.length - 2;\n      const updateShape = outputShape.length === 0;\n      for (let i = 0; i < spatialRank; ++i) {\n        const outSize = updateShape ? inputShape[i + 2] * strides[i] : outputShape[i];\n        const totalPad = computeTotalPad(inputShape[i + 2], strides[i], pads[i], kernelShape[i], dilations[i], outSize);\n        distributePadding(totalPad, autoPad, pads, i, i + spatialRank);\n        if (updateShape) {\n          outputShape.push(\n              strides[i] * (inputShape[i + 2] - 1) + outputPadding[i] + (kernelShape[i] - 1) * dilations[i] + 1 -\n              pads[i] - pads[i + spatialRank]);\n        }\n      }\n    };\n\nexport interface ConvTransposeAttributes extends ConvAttributes {\n  readonly outputPadding: readonly number[];\n  readonly outputShape: readonly number[];\n}\n\nexport const convTranspose: OperatorImplementation<ConvTransposeAttributes> =\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvTransposeAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);  // currently will fail if not convTranspose2D\n      return convTranspose2d(inferenceHandler, inputs, attributes);\n    };\n\nconst convTranspose2d: OperatorImplementation<ConvTransposeAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvTransposeAttributes): Tensor[] => {\n      const adjustedAttributes = getAdjustedConvTransposeAttributes(attributes, inputs);\n      return [convTranspose2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\n    };\n\nconst createConvTransposeProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'ConvTranspose',\n  inputNames: hasBias ? ['X', 'W', 'B'] : ['X', 'W'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nconst createUnpackedConvTransposeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\n     attributes: ConvTransposeAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const valueInit = hasBias ? 'getB(output_channel)' : '0.0';\n      const xShape = inputs[0].dims;\n      const wShape = inputs[1].dims;\n      const outputChannelsPerGroup = wShape[1];\n      const inputChannelsPerGroup = wShape[0] / attributes.group;\n      const outputShape = [inputs[0].dims[0], inputs[1].dims[1] * attributes.group, ...attributes.outputShape];\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const {activationFunction, applyActivation} = getActivationSnippet(attributes);\n\n      const shaderSource = `\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\n  ${activationFunction}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n\n    ivec2 loc = coords.zw + pads;\n\n    int group_id = output_channel / ${outputChannelsPerGroup};\n    int wOutChannel = output_channel - group_id * ${outputChannelsPerGroup};\n\n    float value = ${valueInit};\n    for (int inChannelOffset = 0; inChannelOffset < ${inputChannelsPerGroup}; inChannelOffset++) {\n      int input_channel = group_id * ${inputChannelsPerGroup} + inChannelOffset;\n      for (int wWOff = 0; wWOff < ${wShape[2]}; wWOff++) {\n        for (int wHOff = 0; wHOff < ${wShape[3]}; wHOff++) {\n          ivec2 wOff = ivec2(wWOff * ${attributes.dilations[0]}, wHOff * ${attributes.dilations[1]});\n          ivec2 wLoc = loc - wOff;\n          ivec2 wLocIn = wLoc / strides;\n          if (\n            wLocIn * strides == wLoc &&\n            wLocIn.x >= 0 && wLocIn.x < ${xShape[2]} &&\n            wLocIn.y >= 0 && wLocIn.y < ${xShape[3]}\n          ) {\n            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);\n            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);\n            value += xVal * wVal;\n          }\n        }\n      }\n    }\n    ${applyActivation}\n    ${glsl.output} = vec4(value, .0, .0, .0);\n  }\n`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nconst createUnpackedConvTransposeProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvTransposeAttributes):\n        ProgramInfoLoader => {\n          const metadata = createConvTransposeProgramMetadata(inputs.length > 2, attributes.cacheKey);\n          return {\n            ...metadata,\n            get: () => createUnpackedConvTransposeProgramInfo(inferenceHandler, inputs, metadata, attributes)\n          };\n        };\n\n\nconst convTranspose2DUnpacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvTransposeAttributes):\n        Tensor => {\n          const result = inferenceHandler.run(\n              createUnpackedConvTransposeProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n          return result;\n        };\n\nconst getAdjustedConvTransposeAttributes = <T extends ConvTransposeAttributes>(attributes: T, inputs: Tensor[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  if (attributes.kernelShape.length === 0) {\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\n      kernelShape.push(inputs[1].dims[i]);\n    }\n  }\n\n  const pads = attributes.pads.slice();\n  const outputShape = attributes.outputShape.slice();\n  const inputShape = inputs[0].dims;\n  // If outputShape is not specified in the attributes of this op, infer it from the parameters\n  // Similarly, automatically infer pads if not specified\n  calculateOutputShapeAndPads(\n      inputShape, kernelShape, attributes.dilations, attributes.autoPad, pads, attributes.strides,\n      attributes.outputPadding, outputShape);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, outputShape, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvTransposeAttributes: OperatorInitialization<ConvTransposeAttributes> =\n    (node: Graph.Node): ConvTransposeAttributes => {\n      const attributes = node.attributes;\n      const activationAttributes = parseInternalActivationAttributes(attributes);\n      // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n      const autoPad = attributes.getString('auto_pad', 'NOTSET');\n      const dilations = attributes.getInts('dilations', [1, 1]);\n      const group = attributes.getInt('group', 1);\n      const kernelShape = attributes.getInts('kernel_shape', []);\n      const outputPadding = attributes.getInts('output_padding', [0, 0]);\n      const outputShape = attributes.getInts('output_shape', []);\n      const pads = attributes.getInts('pads', [0, 0, 0, 0]);\n      const strides = attributes.getInts('strides', [1, 1]);\n\n      return createAttributeWithCacheKey(\n          {autoPad, dilations, group, kernelShape, outputPadding, outputShape, pads, strides, ...activationAttributes});\n    };\n\nconst validateInputs = (inputs: Tensor[], attributes: ConvTransposeAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/main/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[1];\n  const filterInChannel = inputs[1].dims[0];\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  const featureMaps = inputs[1].dims[1] * attributes.group;\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[2].dims[0] !== featureMaps)) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // Wrong output padding dimension\n  if (attributes.outputPadding.length !== spatialRank) {\n    throw new Error(`output_padding should be ${spatialRank}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // as with kernelShape, must have same number of spatial dims as input\n  if (attributes.outputShape.length !== 0 && attributes.outputShape.length !== inputs[0].dims.length - 2) {\n    throw new Error('invalid output shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\n    throw new Error('ConvTranspose input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\n    throw new Error('ConvTranspose input(bias) should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {InferenceHandler} from '../../../backend';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {createUnpackedGroupedConvProgramInfoLoader} from './conv-grouped';\nimport {conv2DPacked} from './conv-pack';\nimport {createDotProductProgramInfoLoader} from './dot-product';\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createIm2ColProgramInfoLoader} from './im2col';\nimport {createMatmulProgramInfoLoader} from './matmul';\n\n\nexport const calculateOutputShape =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\n     adjustPads: readonly number[], strides: readonly number[]): number[] => {\n      const batchSize = inputShape[0];\n      const inputSpatialShape = inputShape.slice(2);\n      const spatialRank = inputSpatialShape.length;\n      const outChannels = kernelShape[0];\n      const kernelSpatialShape = kernelShape.slice(2);\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\n      const outputSpatialShape =\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\n      const outputShape = [batchSize, outChannels].concat(...outputSpatialShape);\n      return outputShape;\n    };\n\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly dilations: readonly number[];\n  readonly group: number;\n  readonly kernelShape: readonly number[];\n  readonly pads: readonly number[];\n  readonly strides: readonly number[];\n}\n\nexport const conv: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);  // currently will fail if not conv2D\n      return conv2d(inferenceHandler, inputs, attributes);\n    };\n\nconst conv2d: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\n      const packMode = inferenceHandler.session.pack;\n      const isPointwise = adjustedAttributes.kernelShape[0] === 1 && adjustedAttributes.kernelShape[1] === 1;\n      if (adjustedAttributes.group > 1) {\n        const result = inferenceHandler.run(\n            createUnpackedGroupedConvProgramInfoLoader(inferenceHandler, inputs, adjustedAttributes), inputs);\n        return [result];\n      } else if (isPointwise && packMode) {\n        return [conv2DUnpackedPointwise(inferenceHandler, inputs, adjustedAttributes)];\n      } else if (packMode && inputs[0].dims.length === 4 && inputs[0].dims[0] === 1 && !isPointwise) {\n        return [conv2DPacked(inferenceHandler, inputs, adjustedAttributes)];\n      } else {\n        return [conv2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\n      }\n    };\n\nconst conv2DUnpackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapeUnpacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapeUnpacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(createMatmulProgramInfoLoader(matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapeUnpacked(matmulOutput, outputShape);\n    };\n\nconst conv2DUnpacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const xIm2Col = inferenceHandler.run(\n          createIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes), [inputs[0]]);\n\n      const dotProductInputs = inputs.length === 3 ? [xIm2Col, inputs[1], inputs[2]] : [xIm2Col, inputs[1]];\n      const output = inferenceHandler.run(\n          createDotProductProgramInfoLoader(inferenceHandler, inputs, outputShape, attributes), dotProductInputs);\n      return output;\n    };\n\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: Tensor[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  if (attributes.kernelShape.length === 0) {\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\n      kernelShape.push(inputs[1].dims[i]);\n    }\n  }\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.autoPad);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvAttributes: OperatorInitialization<ConvAttributes> = (node: Graph.Node): ConvAttributes => {\n  const attributes = node.attributes;\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const autoPad = attributes.getString('auto_pad', 'NOTSET');\n  const dilations = attributes.getInts('dilations', [1, 1]);\n  const group = attributes.getInt('group', 1);\n  const kernelShape = attributes.getInts('kernel_shape', []);\n  const pads = attributes.getInts('pads', [0, 0, 0, 0]);\n  const strides = attributes.getInts('strides', [1, 1]);\n\n  return createAttributeWithCacheKey({autoPad, dilations, group, kernelShape, pads, strides, ...activationAttributes});\n};\n\nconst validateInputs = (inputs: Tensor[], attributes: ConvAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/main/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[1];\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\n    throw new Error('Conv input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\n    throw new Error('Conv input(bias) should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {transpose, TransposeAttributes} from './transpose';\n\nexport interface DepthToSpaceAttributes {\n  mode: 'DCR'|'CRD';\n  blocksize: number;\n}\n\nexport const depthToSpace: OperatorImplementation<DepthToSpaceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: DepthToSpaceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const blocksize = attributes.blocksize;\n      const blocksizeSqr = blocksize * blocksize;\n      const transposePerm = attributes.mode === 'DCR' ? [0, 3, 4, 1, 5, 2] : [0, 1, 4, 2, 5, 3];\n      const firstReshapeShape = attributes.mode === 'DCR' ?\n          [\n            inputs[0].dims[0], blocksize, blocksize, inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ] :\n          [\n            inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, blocksize, blocksize, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ];\n\n      // const transpose = new WebGLTranspose();\n      // const attributes = new Attribute(undefined);\n      // attributes.set('perm', 'ints', transposePerm);\n      // transpose.initialize(attributes);\n\n      // First reshape\n      const firstReshapedTensor = inferenceHandler.reshapeUnpacked(inputs[0], firstReshapeShape);\n\n      // transpose\n      const transposeAttributes: TransposeAttributes = {perm: transposePerm, cacheKey: `${transposePerm}`};\n      const [transposeOutput] = transpose(inferenceHandler, [firstReshapedTensor], transposeAttributes);\n\n      // Second reshape\n      const secondReshapeShape = [\n        inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2] * blocksize,\n        inputs[0].dims[3] * blocksize\n      ];\n      const result = inferenceHandler.reshapeUnpacked(transposeOutput, secondReshapeShape);\n      return [result];\n    };\n\nexport const parseDepthToSpaceAttributes: OperatorInitialization<DepthToSpaceAttributes> =\n    (node: Graph.Node): DepthToSpaceAttributes => {\n      // processing node attributes\n      const blocksize = node.attributes.getInt('blocksize');\n      if (blocksize < 1) {\n        throw new Error(`blocksize must be >= 1, but got : ${blocksize} for DepthToSpace`);\n      }\n      const mode = node.attributes.getString('mode', 'DCR');\n      if (mode !== 'DCR' && mode !== 'CRD') {\n        throw new Error(`unrecognized mode: ${mode} for DepthToSpace`);\n      }\n      return {mode, blocksize};\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (inputs.length !== 1) {\n    throw new Error(`DepthToSpace expect 1 inputs, but got ${inputs.length}`);\n  }\n\n  // Input has to be a 4-D tensor\n  // TODO: Support string depth-to-space.\n  if (inputs[0].type === 'string' || inputs[0].dims.length !== 4) {\n    throw new TypeError('DepthToSpace input should be a 4-D numeric tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {getActivationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {calculateIm2ColDims} from './im2col';\n\nconst createDotProductProgramMetadata = (hasBias: boolean, attributes: InternalActivationAttributes) => ({\n  name: 'ConvDotProduct',\n  inputNames: hasBias ? ['Im2Col', 'K', 'B'] : ['Im2Col', 'K'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.packedLastDimension],\n  cacheKey: attributes.activationCacheKey\n});\n\nconst createDotProductProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: readonly Tensor[],\n     outputShape: number[], attributes: InternalActivationAttributes): ProgramInfo => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const adjustedKernelShape = [kshape[0], Math.ceil((xshape[1] * kshape[2] * kshape[3]) / 4)];\n      const im2colShape = calculateIm2ColDims(xshape, kshape, outputShape);\n      const [kWidth, kHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(adjustedKernelShape, TextureType.packedLastDimension);\n\n      const im2colStrides = ShapeUtil.computeStrides(im2colShape);\n      const [im2colWidth, im2colHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(im2colShape, TextureType.packedLastDimension);\n      const rank = outputShape.length;\n\n      const initValue = (inputs.length < 3) ? '0.0' : '_B(b)';\n      const sharedDim = Math.ceil(xshape[1] * kshape[2] * kshape[3] / 4);\n      const {activationFunction, applyActivation} = getActivationSnippet(attributes);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n${activationFunction}\nfloat process(int indices[${rank}]) {\n  int b[1];\n  b[0] = indices[1];\n  int im2col[4];\n  im2col[0] = indices[0];\n  im2col[1] = indices[2];\n  im2col[2] = indices[3];\n  int im2colOffset = im2col[0] * ${im2colStrides[0]} + im2col[1] * ${im2colStrides[1]} + im2col[2] * ${\n          im2colStrides[2]};\n  int kernelOffset = indices[1] * ${adjustedKernelShape[1]};\n  float value = ${initValue};\n  for (int i = 0; i < ${sharedDim}; ++i) {\n    vec2 im2colCoords = offsetToCoords(im2colOffset, ${im2colWidth}, ${im2colHeight});\n    vec2 kernelCoords = offsetToCoords(kernelOffset, ${kWidth}, ${kHeight});\n    value += dot(${glsl.texture2D}(Im2Col, im2colCoords), ${glsl.texture2D}(K, kernelCoords));\n    ++im2colOffset;\n    ++kernelOffset;\n  }\n  ${applyActivation}\n  return value;\n}`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nexport const createDotProductProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], outputShape: number[],\n     attributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createDotProductProgramMetadata(inputs.length > 2, attributes);\n      return {\n        ...metadata,\n        get: () => createDotProductProgramInfo(inferenceHandler, metadata, inputs, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const flatten: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number): Tensor[] => {\n      validateInputs(inputs, axis);\n\n      const outputDims = ShapeUtil.flattenShape(inputs[0].dims, axis);\n      return [inferenceHandler.reshapeUnpacked(inputs[0], outputDims)];\n    };\n\nexport const parseFlattenAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getInt('axis', 1);  // default axis is 1\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Flatten requires 1 input.');\n  }\n\n  const r = inputs[0].dims.length;\n  if (r === 0) {\n    throw new Error('scalar tensor is not supported.');\n  }\n\n  if (axis < -r || axis > r) {\n    throw new Error('Invalid axis');\n  }\n\n  // TODO: Support string type\n  if (inputs[0].type === 'string') {\n    throw new Error('string tensor is not supported.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Attribute} from '../../../attribute';\nimport {MAX_CLIP, MIN_CLIP} from '../../../util';\nimport {GlslValueFunction} from '../glsl-definitions';\n\nimport {glslClip, glslRelu, glslSigmoid} from './unary-op';\n\nexport interface InternalActivationAttributes {\n  readonly activation: string;\n  readonly clipMin?: number;\n  readonly clipMax?: number;\n  readonly activationCacheKey: string;\n}\n\nexport function getActivationSnippet(attributes: InternalActivationAttributes) {\n  let func: GlslValueFunction;\n  switch (attributes.activation) {\n    case 'Relu':\n      func = glslRelu();\n      break;\n    case 'Sigmoid':\n      func = glslSigmoid();\n      break;\n    case 'Clip':\n      func = glslClip(attributes.clipMin!, attributes.clipMax!);\n      break;\n    // TODO: adding other activations that can be fused.\n    default:\n      return {activationFunction: '', applyActivation: ''};\n  }\n\n  const activationName = func.name;\n  const activationFunction = func.body;\n  const applyActivation = `value = ${activationName}_(value);`;\n  return {activationFunction, applyActivation};\n}\n\nexport const parseInternalActivationAttributes = (attributes: Attribute): InternalActivationAttributes => {\n  const activation = attributes.getString('activation', '');\n\n  if (activation === 'Clip') {\n    const [clipMin, clipMax] = attributes.getFloats('activation_params', [MIN_CLIP, MAX_CLIP]);\n    return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\n  }\n  return {activation, activationCacheKey: activation};\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\ninterface GatherAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const gather: OperatorImplementation<GatherAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): Tensor[] => {\n      validateInputs(inputs, attributes.axis);\n      const output = inferenceHandler.run(createGatherProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseGatherAttributes: OperatorInitialization<GatherAttributes> = (node: Graph.Node): GatherAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 0)});\n\nconst gatherProgramMetadata = {\n  name: 'Gather',\n  inputNames: ['A', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createGatherProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const indexDataShape = inputs[1].dims.slice();\n      const outputShape = new Array(inputShape.length + indexDataShape.length - 1);\n\n      axis = ShapeUtil.normalizeAxis(axis, inputShape.length);\n      const indexCopyOps: string[] = [];\n      for (let i = 0; i < outputShape.length; i++) {\n        // outputShape is divided into three parts: A, B, C\n        // |0        axis|  axis + indexDataShape.length |          end|\n        // |     A       |             B                 |      C      |\n        //\n        // inputIdx: [A, inputs[1][B], C]\n        if (i < axis) {  // A\n          outputShape[i] = inputShape[i];\n          indexCopyOps.push(`inputIdx[${i}] = outputIdx[${i}];`);\n        } else {\n          if (i < axis + indexDataShape.length) {  // B\n            outputShape[i] = indexDataShape[i - axis];\n            indexCopyOps.push(`indexDataIdx[${i - axis}] = outputIdx[${i}];`);\n          } else {                                                       // C\n            outputShape[i] = inputShape[i - indexDataShape.length + 1];  // skip 1 for axis\n            indexCopyOps.push(`inputIdx[${i - indexDataShape.length + 1}] = outputIdx[${i}];`);\n          }\n        }\n      }\n\n      const orank = outputShape.length || 1;\n      const irank = inputShape.length;\n      const iDrank = indexDataShape.length || 1;\n      const shaderSource = `\n      float process(int outputIdx[${orank}]) {\n        int inputIdx[${irank}];\n        int indexDataIdx[${iDrank}];\n        indexDataIdx[0] = 0;\n        ${indexCopyOps.join('\\n        ')}\n        int idx = int(_B(indexDataIdx));\n        inputIdx[${axis}] = idx < 0 ? idx + ${inputShape[axis]} : idx;\n        return _A(inputIdx);\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createGatherProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): ProgramInfoLoader => {\n      const metadata = {...gatherProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createGatherProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Gather requires 2 inputs.');\n  }\n  const tensorRank = inputs[0].dims.length;\n  if (tensorRank < 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (axis < -tensorRank || axis > tensorRank - 1) {\n    throw new Error('Invalid axis.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invaid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invaid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {GemmUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface GemmAttributes extends AttributeWithCacheKey {\n  transA: boolean;\n  transB: boolean;\n  alpha: number;\n  beta: number;\n  isOptionalC: boolean;  // in opset 11, C becomes optional\n}\n\nexport const gemm: OperatorImplementation<GemmAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GemmAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(createGemmProgramInfoLoader(inputs, attributes), inputs);\n      return [output];\n    };\n\nconst parseGemmAttributes = (node: Graph.Node, isOptionalC: boolean): GemmAttributes => {\n  const transA = node.attributes.getInt('transA', 0) !== 0;\n  const transB = node.attributes.getInt('transB', 0) !== 0;\n  const alpha = node.attributes.getFloat('alpha', 1.0);\n  const beta = node.attributes.getFloat('beta', 1.0);\n  return createAttributeWithCacheKey({transA, transB, alpha, beta, isOptionalC});\n};\n\nexport const parseGemmAttributesV7: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, false);\n\nexport const parseGemmAttributesV11: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, true);\n\nconst createGemmProgramInfoLoader = (inputs: Tensor[], attributes: GemmAttributes): ProgramInfoLoader => {\n  const metadata = {\n    name: 'Gemm',\n    inputNames: inputs.length === 3 ? ['A', 'B', 'C'] : ['A', 'B'],\n    inputTypes: inputs.length === 3 ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                                      [TextureType.unpacked, TextureType.unpacked],\n    key: attributes.cacheKey\n  };\n\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\n};\n\nconst createGemmProgramInfo =\n    (metadata: ProgramMetadata, inputs: Tensor[], attributes: GemmAttributes): ProgramInfo => {\n      const aShape = inputs[0].dims.slice();\n      const bShape = inputs[1].dims.slice();\n      const [M, N] = GemmUtil.getShapeOfGemmResult(\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\n      const outputShape = [M, N];\n      if (!outputShape) {\n        throw new Error('Can\\'t use gemm on the given tensors');\n      }\n      let sharedDim = aShape[aShape.length - 1];\n      let line = '';\n      if (attributes.transA) {\n        sharedDim = aShape[0];\n      }\n      if (attributes.transA && attributes.transB) {\n        line = 'value += _A_T(a) * _B_T(b);';\n      } else if (attributes.transA && !attributes.transB) {\n        line = 'value += _A_T(a) * _B(b);';\n      } else if (!attributes.transA && attributes.transB) {\n        line = 'value += _A(a) * _B_T(b);';\n      } else if (!attributes.transA && !attributes.transB) {\n        line = 'value += _A(a) * _B(b);';\n      }\n      const rank = outputShape.length;\n      const declareC = inputs.length === 3 ? `int c[${inputs[2].dims.length}];` : '';\n      const broadcastC = inputs.length === 3 ? 'bcastIndices_C(indices, c);' : '';\n      const calculateC = inputs.length === 3 ? 'value += beta * _C(c);' : '';\n      const shaderSource = `\n      float process(int indices[${rank}]) {\n          int a[${rank}];\n          int b[${rank}];\n          ${declareC}\n\n          copyVec(indices, a);\n          copyVec(indices, b);\n          ${broadcastC}\n\n          float value = 0.0;\n          for (int k=0; k<${sharedDim}; ++k) {\n              a[${rank - 1}] = k;\n              b[${rank - 2}] = k;\n              ${line}\n          }\n\n          value = value * alpha;\n          ${calculateC}\n          return value;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        variables: [\n          {name: 'alpha', type: 'float', data: attributes.alpha}, {name: 'beta', type: 'float', data: attributes.beta}\n        ],\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[], attributes: GemmAttributes): void => {\n  if (!inputs) {\n    throw new Error('Input is missing');\n  }\n  if (attributes.isOptionalC && (inputs.length < 2 || inputs.length > 3)) {\n    throw new Error('Invaid input shape.');\n  }\n  if (!attributes.isOptionalC && inputs.length !== 3) {\n    throw new Error('Gemm requires 3 inputs');\n  }\n\n  // 'C' can be of dimensionality 1 or 2 only\n  if (inputs.length === 3 && inputs[2].dims.length !== 1 && inputs[2].dims.length !== 2) {\n    throw new Error('Invalid input shape of C');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64') ||\n      (inputs.length === 3 && inputs[2].type !== 'float32' && inputs[2].type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n\n  if ((inputs[0].type !== inputs[1].type) || (inputs.length === 3 && inputs[0].type !== inputs[2].type)) {\n    throw new Error('Input types are mismatched');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {ConvAttributes} from './conv';\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col (packed)',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed],\n  cacheHint,\n});\n\nconst createPackedIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n      const rowDim = 2;\n      const colDim = 3;\n      const rank = outputShape.length;\n      const im2colShape = [wshape[1] * wshape[2] * wshape[3], outputShape[2] * outputShape[3]];\n      const kernelSize = wshape[2] * wshape[3];\n      const unpackChannel = unpackFromChannel();\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      let unrolled = '';\n\n      for (let row = 0; row <= 1; row++) {\n        for (let col = 0; col <= 1; col++) {\n          unrolled += `\n            blockIndex = rc.x + ${col};\n            pos = rc.y + ${row};\n\n            if(blockIndex < ${im2colShape[1]} && pos < ${im2colShape[0]}) {\n              offsetY = int(blockIndex / (${outputShape[rank - 1]})) * ${attributes.strides[0]} -\n                ${attributes.pads[0]};\n              d0 = offsetY + ${attributes.dilations[0]} * (imod(pos, ${kernelSize}) / ${wshape[2]});\n\n              if(d0 < ${xshape[rowDim]} && d0 >= 0) {\n                offsetX = imod(blockIndex, ${outputShape[rank - 1]}) * ${attributes.strides[1]} -\n                  ${attributes.pads[1]};\n                d1 = offsetX + ${attributes.dilations[1]} * imod(imod(pos, ${kernelSize}), ${wshape[2]});\n\n                if(d1 < ${xshape[colDim]} && d1 >= 0) {\n\n                  ch = int(float(pos)/ ${kernelSize}.);\n                    innerDims = vec2(d0, d1);\n                    result[${row * 2 + col}] = getChannel(\n                      getA(0, ch, int(innerDims.x),\n                      int(innerDims.y)), innerDims);\n                }\n              }\n            }\n\n          `;\n        }\n      }\n\n      const shaderSource = `\n      ${unpackChannel}\n\n      void main() {\n        ivec2 rc = getOutputCoords();\n          vec4 result = vec4(0.0);\n          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n          vec2 innerDims;\n          ${unrolled}\n          ${glsl.output} = result;\n      }\n            `;\n      return {\n        ...metadata,\n        output: {dims: im2colShape, type: x.type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createPackedIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {ConvAttributes} from './conv';\n\nconst createIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n  cacheHint,\n});\n\nconst createIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n\n      const rank = outputShape.length;\n      const im2colDims = calculateIm2ColDims(xshape, wshape, outputShape, 4);\n\n      const shaderSource = `\n        const int XC = ${xshape[1]};\n        const int XH = ${xshape[2]};\n        const int XW = ${xshape[3]};\n        const int KH = ${attributes.kernelShape[0]};\n        const int KW = ${attributes.kernelShape[1]};\n        const int dilationH = ${attributes.dilations[0]};\n        const int dilationW = ${attributes.dilations[1]};\n        const int strideH = ${attributes.strides[0]};\n        const int strideW = ${attributes.strides[1]};\n        const int padH = ${attributes.pads[0]};\n        const int padW = ${attributes.pads[1]};\n        const int KHKW = KH*KW;\n        const int XCKHKW = XC * KHKW;\n        const int outputChannels = 4;\n        vec4 process(int indices[${rank}]) {\n          int b  = indices[0]; // batch size\n          int oh = indices[1] * strideH - padH; //output height\n          int ow = indices[2] * strideW - padW; //output width\n          int p = indices[3] * outputChannels; //patch\n          vec4 value = vec4(0.0);\n          for(int i=0; i < outputChannels; ++i) {\n            if(p < XCKHKW) {\n              int patchC = p / KHKW;\n              int patchH = (p - patchC*KHKW) / KW;\n              int patchW = (p - patchC*KHKW) - patchH * KW;\n              int xh2 = oh + patchH * dilationH;\n              int xw2 = ow + patchW * dilationW;\n              int x[${xshape.length}];\n              x[0] = b;\n              x[1] = patchC;\n              x[2] = xh2;\n              x[3] = xw2;\n              if(xh2 >= 0 &&\n                  xh2 < XH &&\n                  xw2 >= 0 &&\n                  xw2 < XW) {\n                value[i] = _X(x);\n              }\n            }\n            ++p;\n          }\n          return value;\n        }\n        `;\n      return {\n        ...metadata,\n        output: {dims: im2colDims, type: x.type, textureType: TextureType.packedLastDimension},\n        shaderSource\n      };\n    };\n\nexport const createIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n\n\nexport const calculateIm2ColDims =\n    (inputShape: readonly number[], kernelShape: readonly number[], outputShape: readonly number[], channels = 4):\n        number[] =>\n            [outputShape[0], outputShape[2], outputShape[3],\n             Math.ceil(inputShape[1] * kernelShape[2] * kernelShape[3] / channels)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface ImageScalerAttributes extends AttributeWithCacheKey {\n  scale: number;\n  bias: number[];\n}\n\nexport const imageScaler: OperatorImplementation<ImageScalerAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output =\n          inferenceHandler.run(createImageScalerProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseImageScalerAttributes: OperatorInitialization<ImageScalerAttributes> =\n    (node: Graph.Node): ImageScalerAttributes => {\n      const scale = node.attributes.getFloat('scale');\n      const bias = node.attributes.getFloats('bias');\n      return createAttributeWithCacheKey({scale, bias});\n    };\n\nconst imageScalerProgramMetadata = {\n  name: 'ImageScaler',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createImageScalerProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], attributes: ImageScalerAttributes):\n        ProgramInfo => {\n          const outputShape = inputs[0].dims.slice();\n          const rank = outputShape.length;\n          const getBiasMethod = createGetBiasMethod(attributes.bias.length);\n          const shaderSource = `\n      ${getBiasMethod}\n      float process(int indices[${rank}]) {\n        return _X(indices) * scale + getBias(bias, indices[1]);\n      }`;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            variables: [\n              {name: 'bias', type: 'float', arrayLength: attributes.bias.length, data: attributes.bias},\n              {name: 'scale', type: 'float', data: attributes.scale}\n            ],\n            shaderSource\n          };\n        };\n\nconst createImageScalerProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): ProgramInfoLoader => {\n      const metadata = {...imageScalerProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createImageScalerProgramInfo(handler, metadata, inputs, attributes)};\n    };\n\nconst createGetBiasMethod = (numChannels: number): string => {\n  const codeLines: string[] = [`float getBias(float bias[${numChannels}], int channel) {`];\n  for (let i = 0; i < numChannels; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (channel == ${i}) { return bias[${i}]; }`);\n    } else if (i === numChannels - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return bias[${i}]; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (channel == ${i}) { return bias[${i}]; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('ImageScaler requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Invalid input shape.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport const instanceNormalization: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], epsilon: number): Tensor[] => {\n      validateInputs(inputs);\n\n      const meanAndVariance = inferenceHandler.run(createMeanAndVarianceProgramInfoLoader(inputs[0]), inputs);\n      const output = inferenceHandler.run(\n          createComputeOutputProgramInfoLoader(inferenceHandler, inputs[0], epsilon, meanAndVariance.dims),\n          [inputs[0], meanAndVariance, inputs[1], inputs[2]]);\n      return [output];\n    };\n\nexport const parseInstanceNormalizationAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getFloat('epsilon', 1e-5);\n\nconst meanAndVarianceProgramMetadata = {\n  name: 'InstanceNormalization_MeanAndVariance',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createMeanAndVarianceProgramInfo = (metadata: ProgramMetadata, input: Tensor): ProgramInfo => {\n  const xDims = input.dims.slice();\n  const channel = xDims[1];\n  const channelSize = xDims[2] * xDims[3];\n  const outputShape = [xDims[0], channel];\n\n  const shaderSource = `\n      vec4 process(int[2] indices) {\n        vec4 v = vec4(0.0);\n        int a[4];\n        a[0] = indices[0];\n        a[1] = indices[1];\n        float temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += x;\n          }\n        }\n        float mean = temp / float(${channelSize});\n        temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += (x - mean) * (x - mean);\n          }\n        }\n        v.r = mean;\n        v.g = temp / float(${channelSize});\n\n        return v;\n      }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: input.type, textureType: TextureType.packedLastDimension},\n    shaderSource\n  };\n};\n\nconst createMeanAndVarianceProgramInfoLoader = (input: Tensor): ProgramInfoLoader => ({\n  ...meanAndVarianceProgramMetadata,\n  get: () => createMeanAndVarianceProgramInfo(meanAndVarianceProgramMetadata, input)\n});\n\nconst computeOutputProgramMetadata = {\n  name: 'InstanceNormalization_ComputeOutput',\n  inputNames: ['X', 'MeanAndVariance', 'Scale', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createComputeOutputProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, epsilon: number,\n     meanAndVarianceShape: readonly number[]): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(meanAndVarianceShape, TextureType.packedLastDimension);\n      const [meanAndVarianceWidth, meanAndVarianceHeight] = [textureWidth / 4, textureHeight];\n      const shaderSource = `\n      vec4 get_MeanAndVariance(int[2] mv) {\n        int offset = indicesToOffset_MeanAndVariance(mv);\n        vec2 coords = offsetToCoords(offset, ${meanAndVarianceWidth}, ${meanAndVarianceHeight});\n        return ${glsl.texture2D}(MeanAndVariance, coords);\n      }\n\n      float process(int[4] indices) {\n        int mv[2];\n        mv[0] = indices[0];\n        mv[1] = indices[1];\n        vec4 mean_and_variance = get_MeanAndVariance(mv);\n        float mean = mean_and_variance.r;\n        float variance = mean_and_variance.g;\n\n        int sb[1];\n        sb[0] = indices[1];\n        float scale = _Scale(sb);\n        float b = _B(sb);\n\n        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        variables: [{name: 'epsilon', type: 'float', data: epsilon}],\n        shaderSource\n      };\n    };\n\nconst createComputeOutputProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, epsilon: number, meanAndVarianceShape: readonly number[]):\n        ProgramInfoLoader => {\n          const metadata = {...computeOutputProgramMetadata, cacheHint: `${epsilon}`};\n          return {\n            ...metadata,\n            get: () => createComputeOutputProgramInfo(inferenceHandler, metadata, input, epsilon, meanAndVarianceShape)\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 3) {\n    throw new Error('InstanceNormalization requires 3 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n\n  // input should at least have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1]) {\n    throw new Error('Input shapes are mismatched.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Only support 4-D input shape.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\n\nexport interface LrnAttributes extends AttributeWithCacheKey {\n  alpha: number;\n  beta: number;\n  bias: number;\n  size: number;\n}\n\nexport const lrn: OperatorImplementation<LrnAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: LrnAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      // if (inferenceHandler.session.pack) {\n      //   return [inferenceHandler.run(createPackedLrnProgramInfoLoader(inferenceHandler, inputs, attributes),\n      //   inputs)];\n      // } else {\n      return [inferenceHandler.run(createLrnProgramInfoLoader(inputs, attributes), inputs)];\n      //}\n    };\n\nexport const parseLrnAttributes: OperatorInitialization<LrnAttributes> = (node: Graph.Node): LrnAttributes => {\n  const alpha = node.attributes.getFloat('alpha', 0.0001);\n  const beta = node.attributes.getFloat('beta', 0.75);\n  const bias = node.attributes.getFloat('bias', 1.0);\n  const size = node.attributes.getInt('size');\n\n  return createAttributeWithCacheKey({alpha, beta, bias, size});\n};\n\nconst lrnProgramMetadata = {\n  name: 'LRN',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked]\n};\n\nfunction createLrnProgramInfo(inputs: Tensor[], attributes: LrnAttributes): ProgramInfo {\n  const C = inputs[0].dims[1];\n  const rank = inputs[0].dims.length;\n  const from = -Math.floor((attributes.size - 1) / 2);\n  const to = Math.ceil((attributes.size - 1) / 2);\n  const alpha = `float(${attributes.alpha}) / float(${attributes.size})`;\n  const bias = `float(${attributes.bias})`;\n  const beta = `float(${attributes.beta})`;\n\n  const shaderSource = `\n    float process(int indices[${rank}]) {\n        int c = indices[1];\n        float x = _X(indices);\n        float square_sum = 0.0;\n\n        for (int i = ${from}; i <= ${to}; i++) {\n          int idx = c + i;\n          if (c >= 0 && c < ${C}) {\n            indices[1] = idx;\n            float j = _X(indices);\n            square_sum += j * j;\n          }\n        }\n        return x / pow(${bias} + ${alpha} * square_sum, ${beta});\n    }`;\n  return {\n    ...lrnProgramMetadata,\n    cacheHint: attributes.cacheKey,\n    output: {dims: inputs[0].dims, type: inputs[0].type, textureType: TextureType.unpacked},\n    shaderSource,\n  };\n}\n\nexport function createLrnProgramInfoLoader(inputs: Tensor[], attributes: LrnAttributes): ProgramInfoLoader {\n  return {...lrnProgramMetadata, cacheHint: attributes.cacheKey, get: () => createLrnProgramInfo(inputs, attributes)};\n}\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('LRN requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('currently only support LRN for input with \"NCHW\" format');\n  }\n  if (inputs[0].type !== 'float32') {\n    throw new Error('input should be float type');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {getActivationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {getBiasForMatmul} from './matmul';\n\nconst createPackedMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul (packed)',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.packed, TextureType.packed, TextureType.packed] :\n                        [TextureType.packed, TextureType.packed],\n  cacheHint\n});\n\nconst createPackedMatmulProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n      const aShape = inputs[0].dims;\n      const bShape = inputs[1].dims;\n      const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n\n      if (!outputShape) {\n        throw new Error('Can\\'t use matmul on the given tensors');\n      }\n      const sharedDim = aShape[aShape.length - 1];\n      const sharedDimIndex = Math.ceil(sharedDim / 2);\n      const aRank = aShape.length;\n      const bRank = bShape.length;\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const coordsDataType = getCoordsDataType(outputShape.length);\n      const outRank = outputShape.length;\n      const allGlChannels = getGlChannels();\n      const {activationFunction, applyActivation} = getActivationSnippet(activationAttributes);\n\n      const getBiasForMatmulSnippet =\n          hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, true)}` : '';\n\n      const getBcastedSamplerForMatmulSnippet =\n          isBroadcast ? `${getBcastSamplerForMatmul(coordsDataType, allGlChannels, inputs, outputShape)}` : '';\n\n      const getSamplerAInLoopSnippet = isBroadcast ? 'getAAtOutCoordsMatmul(i)' : `getA(${getA(allGlChannels, aRank)})`;\n      const getSamplerBInLoopSnippet = isBroadcast ? 'getBAtOutCoordsMatmul(i)' : `getB(${getB(allGlChannels, bRank)})`;\n      const getOutputCoordsSnippet = isBroadcast ? '' : `${coordsDataType} rc =\n          getOutputCoords(); int lastDim = rc.${allGlChannels[outRank - 1]}; rc.${allGlChannels[outRank - 1]} =\n          rc.${allGlChannels[outRank - 2]}; rc.${allGlChannels[outRank - 2]} = lastDim;\n      `;\n      const shaderSource = `\n            ${getBcastedSamplerForMatmulSnippet}\n            ${getBiasForMatmulSnippet}\n            ${activationFunction}\n            void main() {\n              ${getOutputCoordsSnippet}\n\n              vec4 value = vec4(0);\n              for (int i = 0; i < ${sharedDimIndex}; i++) {\n                vec4 a = ${getSamplerAInLoopSnippet};\n                vec4 b = ${getSamplerBInLoopSnippet};\n\n                value += (a.rrbb * b.rgrg);\n                value += (a.ggaa * b.baba);\n              }\n              ${processBias}\n              ${applyActivation}\n              ${glsl.output} = value;\n            }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedMatmulProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createPackedMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedMatmulProgramInfo(inferenceHandler, metadata, inputs, activationAttributes)\n      };\n    };\n\nfunction getBcastSamplerForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inputs: Tensor[], outShape: readonly number[]): string {\n  let unpackedACoordsSnippet = [];\n  let unpackedBCoordsSnippet = [];\n\n  const inAShape = inputs[0].dims;\n  const inBShape = inputs[1].dims;\n\n  const inARank = inAShape.length;\n  const inBRank = inBShape.length;\n\n  const outRank = outShape.length;\n  const rankADiff = outRank - inARank;\n  const rankBDiff = outRank - inBRank;\n\n  unpackedACoordsSnippet = inAShape.map((s, i) => `coords.${allGlChannels[i + rankADiff]}`);\n  unpackedACoordsSnippet[inARank - 1] = 'i*2';\n  unpackedACoordsSnippet.join(', ');\n  unpackedBCoordsSnippet = inBShape.map((s, i) => `coords.${allGlChannels[i + rankBDiff]}`);\n  unpackedBCoordsSnippet[inBRank - 2] = 'i*2';\n  unpackedBCoordsSnippet.join(', ');\n\n  const broadcastADims = BroadcastUtil.getBroadcastDims(inAShape, outShape);\n  const broadcastBDims = BroadcastUtil.getBroadcastDims(inBShape, outShape);\n\n  const coordsASnippet = broadcastADims.map(d => `coords.${allGlChannels[d + rankADiff]} = 0;`).join('\\n');\n  const coordsBSnippet = broadcastBDims.map(d => `coords.${allGlChannels[d + rankBDiff]} = 0;`).join('\\n');\n  const swapDimSnippet = `int lastDim = coords.${allGlChannels[outRank - 1]};\n  coords.${allGlChannels[outRank - 1]} = coords.${allGlChannels[outRank - 2]};\n  coords.${allGlChannels[outRank - 2]} = lastDim;`;\n\n  const getBcastSamplerMatmulSource = `\nvec4 getAAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsASnippet}\n  vec4 outputValue = getA(${unpackedACoordsSnippet});\n  return outputValue;\n}\n\nvec4 getBAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsBSnippet}\n  vec4 outputValue = getB(${unpackedBCoordsSnippet});\n  return outputValue;\n}`;\n\n  return getBcastSamplerMatmulSource;\n}\n\nfunction getA(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += `rc.${allGlChannels[rank - 2]}, ` +\n      'i*2';\n  return res;\n}\n\nfunction getB(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += 'i*2, ' +\n      `rc.${allGlChannels[rank - 1]}`;\n  return res;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {getActivationSnippet, InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const matMul: OperatorImplementation<InternalActivationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: InternalActivationAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      if (inferenceHandler.session.pack) {\n        return [inferenceHandler.run(\n            createPackedMatmulProgramInfoLoader(inferenceHandler, inputs, attributes), inputs)];\n      } else {\n        return [inferenceHandler.run(createMatmulProgramInfoLoader(inputs, attributes), inputs)];\n      }\n    };\n\nexport const parseMatMulAttributes: OperatorInitialization<InternalActivationAttributes> =\n    (node: Graph.Node): InternalActivationAttributes => parseInternalActivationAttributes(node.attributes);\n\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nfunction createMatmulProgramInfo(\n    metadata: ProgramMetadata, inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfo {\n  const aShape = inputs[0].dims;\n  const bShape = inputs[1].dims;\n  const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n  if (!outputShape) {\n    throw new Error('Can\\'t use matmul on the given tensors');\n  }\n  const coordsDataType = getCoordsDataType(outputShape.length);\n  const allGlChannels = getGlChannels();\n  const {activationFunction, applyActivation} = getActivationSnippet(activationAttributes);\n\n  const hasBias = inputs.length > 2;\n  const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n  const getBiasForMatmulSnippet =\n      hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, false)}` : '';\n\n  const rank = outputShape.length;\n  const arank = aShape.length;\n  const brank = bShape.length;\n  const sharedDim = aShape[aShape.length - 1];\n  const shaderSource = `\n    ${activationFunction}\n    ${getBiasForMatmulSnippet}\n    float process(int indices[${rank}]) {\n        int a[${arank}];\n        int b[${brank}];\n        bcastMatmulIndices_A(indices, a);\n        bcastMatmulIndices_B(indices, b);\n\n        float value;\n        for (int k=0; k<${sharedDim}; ++k) {\n            a[${arank - 1}] = k;\n            b[${brank - 2}] = k;\n            value += _A(a) * _B(b);\n        }\n        ${processBias}\n        ${applyActivation}\n        return value;\n    }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n    shaderSource,\n  };\n}\n\nexport function createMatmulProgramInfoLoader(\n    inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader {\n  const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n  return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\n}\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('MatMul requires 2 inputs.');\n  }\n\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\n    throw new Error('shared dimension does not match.');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64')) {\n    throw new Error('inputs should be float type');\n  }\n\n  if (inputs[0].type !== inputs[1].type) {\n    throw new Error('inputs types should match');\n  }\n};\n\nexport function getBiasForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inShape: readonly number[], outShape: readonly number[],\n    isPacked: boolean): string {\n  let unpackedCoordsSnippet = '';\n  const inRank = inShape.length;\n  const outRank = outShape.length;\n  const rankDiff = outRank - inRank;\n  if (outRank < 2 && inRank > 0) {\n    unpackedCoordsSnippet = 'coords';\n  } else {\n    unpackedCoordsSnippet = inShape.map((s, i) => `coords.${allGlChannels[i + rankDiff]}`).join(', ');\n  }\n  const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n  const coordsSnippet = broadcastDims.map(d => `coords.${allGlChannels[d + rankDiff]} = 0;`).join('\\n');\n  const inSize = ShapeUtil.size(inShape);\n  const isInputScalar = inSize === 1;\n  let output = 'vec4(outputValue.xx, outputValue.yy)';\n  if (isInputScalar) {\n    output = 'vec4(outputValue.x)';\n  }\n  const getBiasForMatmulSource = isPacked ? `\nvec4 getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  vec4 outputValue = getBias(${unpackedCoordsSnippet});\n  return ${output};\n}` :\n                                            `\nfloat getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  return getBias(coords.x);\n}`;\n\n  return getBiasForMatmulSource;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {getChannels} from './packing-utils';\n\nconst packProgramMetadata = {\n  name: 'pack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpackedReversed]\n};\n\nconst createPackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const inputShape = input.dims;\n\n  const inputRank = inputShape.length;\n  // createTextureLayoutFromShape won't change output rank. Need to verify by running tests\n  const outputRank = input.dims.length;\n\n  const coordsDataType = getCoordsDataType(outputRank);\n  const channels = getChannels('rc', outputRank);\n  const setup = getSetup(outputRank, channels, inputShape[inputShape.length - 2], inputShape[inputShape.length - 1]);\n\n  let reversedInputWH;\n  if (inputRank === 0) {\n    reversedInputWH = [1, 1];\n  } else if (inputRank === 1) {\n    reversedInputWH = [inputShape[0], 1];\n  } else {\n    reversedInputWH = [inputShape[outputRank - 1], inputShape[outputRank - 2]];\n  }\n  const outOfBoundsCondition = getOutOfBoundsCondition(outputRank, reversedInputWH, channels);\n  const output = getOutput(inputShape, channels);\n\n  const shaderSource = `\n        void main() {\n          ${coordsDataType} rc = getOutputCoords();\n\n          if(${outOfBoundsCondition}) {\n            ${glsl.output} = vec4(0);\n          } else {\n            ${setup}\n\n            ${glsl.output} = vec4(${output});\n          }\n        }\n      `;\n  return {\n    ...packProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.packed},\n    shaderSource\n  };\n};\n\nexport const createPackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...packProgramMetadata, get: () => createPackProgramInfo(handler, input)});\n\n/**\n * check output coordinate location and return false if it is outside input's width/height boundary\n */\nfunction getOutOfBoundsCondition(rank: number, shape: readonly number[], dims: string[]): string {\n  if (rank === 0) {\n    return 'false';\n  }\n  if (rank === 1) {\n    return `rc > ${shape[0]}`;\n  }\n\n  let cond = '';\n  for (let i = rank - 2; i < rank; i++) {\n    cond += `${dims[i]} >= ${shape[i - rank + 2]}`;\n    if (i < rank - 1) {\n      cond += '||';\n    }\n  }\n\n  return cond;\n}\n\n/**\n * code snippet to sample input texture with output coordiantes\n */\nfunction getOutput(shape: readonly number[], dims: string[]): string {\n  const rank = shape.length;\n\n  if (rank === 0) {\n    return 'getA(), 0, 0, 0';\n  }\n\n  if (rank === 1) {\n    return `getA(rc),\n            rc + 1 >= ${shape[0]} ? 0. : getA(rc + 1),\n            0, 0`;\n  }\n\n  const coord00 = 'r, c';\n  const coord01 = 'r, cp1';\n  const coord10 = 'rp1, c';\n  const coord11 = 'rp1, cp1';\n  let D = '';\n  if (rank > 2) {\n    for (let i = 0; i < rank - 2; ++i) {\n      D = D + `${dims[i]},`;\n    }\n  }\n  return `getA(${D}${coord00}),\n          rEdge ? 0. : getA(${D}${coord10}),\n          cEdge ? 0. : getA(${D}${coord01}),\n          rEdge || cEdge ? 0. : getA(${D}${coord11})`;\n}\n\n/**\n * code snippet to setup 4 coordinates and edge conditions\n */\nfunction getSetup(rank: number, dims: string[], rows: number, cols: number): string {\n  if (rank === 0 || rank === 1) {\n    return '';\n  }\n  // rank >= 2 for width+height pack.\n  else {\n    const setup = `\n    int r = ${dims[rank - 2]};\n    int c = ${dims[rank - 1]};\n    int rp1 = ${dims[rank - 2]} + 1;\n    int cp1 = ${dims[rank - 1]} + 1;\n    bool rEdge = rp1 >= ${cols};\n    bool cEdge = cp1 >= ${rows};\n    `;\n    return setup;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlChannels} from '../utils';\n\nexport function getVecChannels(name: string, rank: number): string[] {\n  return getGlChannels(rank).map(d => `${name}.${d}`);\n}\n\nexport function getChannels(name: string, rank: number): string[] {\n  if (rank === 1) {\n    return [name];\n  }\n  return getVecChannels(name, rank);\n}\n\nexport function unpackFromChannel(): string {\n  return `\n    float getChannel(vec4 frag, int dim) {\n      int modCoord = imod(dim, 2);\n      return modCoord == 0 ? frag.r : frag.g;\n    }\n\n    float getChannel(vec4 frag, vec2 innerDims) {\n      vec2 modCoord = mod(innerDims, 2.);\n      return modCoord.x == 0. ?\n        (modCoord.y == 0. ? frag.r : frag.g) :\n        (modCoord.y == 0. ? frag.b : frag.a);\n    }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl, Glsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface PadAttributes extends AttributeWithCacheKey {\n  readonly mode: string;\n  readonly pads: number[];\n  readonly value: number;\n}\n\nconst padProgramMetadata = {\n  name: 'Pad',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const padV2: OperatorImplementation<PadAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): Tensor[] => {\n      validateInputsV2(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...padProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPadProgramInfo(inferenceHandler, inputs[0], attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parsePadAttributesV2: OperatorInitialization<PadAttributes> = (node: Graph.Node): PadAttributes => {\n  const mode = node.attributes.getString('mode', 'constant');\n  const value = node.attributes.getFloat('value', 0.0);\n  const pads = node.attributes.getInts('pads');\n  return createAttributeWithCacheKey({mode, value, pads});\n};\n\nexport const padV11: OperatorImplementation<string> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], mode: string): Tensor[] => {\n      validateInputsV11(inputs);\n      const attrubutes = generatePadAttributesFromInputs(inferenceHandler, inputs, mode);\n      return padV2(inferenceHandler, [inputs[0]], attrubutes);\n    };\n\nexport const parsePadAttributesV11: OperatorInitialization<string> = (node: Graph.Node): string =>\n    node.attributes.getString('mode', 'constant');\n\nconst generatePadAttributesFromInputs =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], mode: string): PadAttributes => {\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\n          (inputs.length >= 3 && !inferenceHandler.session.isInitializer(inputs[2].dataId))) {\n        throw new Error('dynamic pad attributes are not allowed');\n      }\n\n      const pads = Array.from(inputs[1].integerData);\n      const value = (inputs.length >= 3) ? inputs[2].floatData[0] : 0.0;\n\n      return createAttributeWithCacheKey({mode, pads, value});\n    };\n\nconst createPadProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): ProgramInfo => {\n      const outputShape = ShapeUtil.padShape(input.dims.slice(), attributes.pads);\n      const rank = outputShape.length;\n      const padFunction = getPadFunction(inferenceHandler, input, attributes);\n      const shaderSource = `\n      ${padFunction}\n      float process(int[${rank}] indices) {\n          return padA(indices);\n      }`;\n      return {\n        name: 'Pad',\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputsV2 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pad requires 1 input');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst validateInputsV11 = (inputs: Tensor[]): void => {\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Pad requires 2 or 3 inputs');\n  }\n  if (inputs[1].type !== 'int32') {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 3 && inputs[2].type === 'string') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst getPadFunction = (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): string => {\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  const [width, height] = inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n  const strides = ShapeUtil.computeStrides(input.dims);\n\n  switch (attributes.mode) {\n    case 'constant':\n      return getPadConstant(glsl, input.dims, strides, width, height, attributes.pads, attributes.value);\n    case 'reflect':\n      return getPadReflect(glsl, input.dims, strides, width, height, attributes.pads);\n    case 'edge':\n      return getPadEdge(glsl, input.dims, strides, width, height, attributes.pads);\n    default:\n      throw new Error('Invalid mode');\n  }\n};\n\nconst getPadConstant =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[],\n     value: number): string => {\n      const rank = shape.length;\n      let block = '';\n      for (let i = rank - 1; i >= 0; --i) {\n        block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  return constant;\n        if (k >= ${shape[i]}) return constant;\n        offset += k * ${strides[i]};\n        `;\n      }\n      return `\n      float padA(int m[${rank}]) {\n        const float constant = float(${value});\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n    };\n\nconst getPadReflect =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0) { k = -k; }\n        {\n          const int _2n_1 = ${2 * (shape[i] - 1)};\n          k = int( mod( float(k), float(_2n_1) ) ) ;\n          if(k >= ${shape[i]}) { k = _2n_1 - k; }\n        }\n        offset += k * ${strides[i]};\n        `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n\nconst getPadEdge =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  k = 0;\n        if (k >= ${shape[i]}) k = ${shape[i] - 1};\n        offset += k * ${strides[i]};\n      `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface AveragePoolAttributes extends AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly ceilMode: number;\n  readonly countIncludePad: boolean;\n  readonly kernelShape: readonly number[];\n  readonly strides: readonly number[];\n  readonly pads: readonly number[];\n}\n\nexport const averagePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'AveragePool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n\n      // TODO: support attribute 'ceil_mode'\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\n      }\n\n      return createAttributeWithCacheKey({autoPad, ceilMode, countIncludePad, kernelShape, strides, pads});\n    };\n\nconst createAveragePoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: AveragePoolAttributes):\n        ProgramInfo => {\n          const [adjustedAttributes, outputShape] =\n              getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n          const kernelSize = ShapeUtil.size(adjustedAttributes.kernelShape);\n          const op1 = 'value += _X(x);';\n          let op2 = '';\n          if (adjustedAttributes.countIncludePad) {\n            op2 += `value /= float(${kernelSize});`;\n          } else {\n            op2 += `value /= float(${kernelSize} - pad);`;\n          }\n          const poolingCode = generatePoolingCode(inputs[0].dims, adjustedAttributes, op1, op2, '0.0');\n          const shaderSource = `\n        ${poolingCode}\n      `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nexport const globalAveragePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata = {\n        name: 'GlobalAveragePool',\n        inputNames: ['X'],\n        inputTypes: [TextureType.unpacked],\n        cacheHint: `${attributes.countIncludePad}`\n      };\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, true, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseGlobalAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      return createAttributeWithCacheKey(\n          {autoPad: '', ceilMode: 0, countIncludePad, kernelShape: [], strides: [], pads: []});\n    };\n\nexport interface MaxPoolAttributes extends AveragePoolAttributes {\n  readonly storageOrder: number;\n  readonly dilations: number[];\n}\n\nexport const maxPool: OperatorImplementation<MaxPoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: MaxPoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'MaxPool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createMaxPoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseMaxPoolAttributes: OperatorInitialization<MaxPoolAttributes> =\n    (node: Graph.Node): MaxPoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n      const storageOrder = node.attributes.getInt('storage_order', 0);\n      const dilations = node.attributes.getInts('dilations', []);\n\n      // TODO: support attribute 'ceil_mode' and 'storage_order'\n      if (storageOrder !== 0) {\n        throw new Error('column major storage order is not yet supported for MaxPool');\n      }\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\n      }\n\n      return createAttributeWithCacheKey(\n          {autoPad, ceilMode, countIncludePad: false, kernelShape, strides, pads, storageOrder, dilations});\n    };\n\nconst createMaxPoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: MaxPoolAttributes):\n        ProgramInfo => {\n          const [adjustedAttributes, outputShape] =\n              getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n          const op1 = `\n      value = max(_X(x), value);\n    `;\n          const op2 = '';\n          const poolingCode = generatePoolingCode(inputs[0].dims, adjustedAttributes, op1, op2, '-1e5');\n          const shaderSource = `\n      ${poolingCode}\n    `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst getAdjustedPoolAttributesAndOutputShape =\n    (inputs: Tensor[], attributes: AveragePoolAttributes|MaxPoolAttributes, isGlobalOperator: boolean):\n        [AveragePoolAttributes|MaxPoolAttributes, number[]] => {\n          const inputShape = inputs[0].dims.slice();\n          const hasDilations = Object.hasOwnProperty.call(attributes, 'dilations');\n          const kernelShape = attributes.kernelShape.slice();\n          const strides = attributes.strides.slice();\n          const dilations: number[] = hasDilations ? (attributes as MaxPoolAttributes).dilations.slice() : [];\n          const pads = attributes.pads.slice();\n          PoolConvUtil.adjustPoolAttributes(isGlobalOperator, inputShape, kernelShape, strides, dilations, pads);\n\n          const outputShape = PoolConvUtil.computePoolOutputShape(\n              isGlobalOperator, inputShape, strides, dilations, kernelShape, pads, attributes.autoPad);\n\n          const newAttributes = Object.assign({}, attributes);\n          if (hasDilations) {\n            Object.assign(newAttributes, {kernelShape, strides, pads, dilations, cacheKey: attributes.cacheKey});\n          } else {\n            Object.assign(newAttributes, {kernelShape, strides, pads, cacheKey: attributes.cacheKey});\n          }\n          return [newAttributes, outputShape];\n        };\n\nconst globalMaxPoolAttributes = {\n  autoPad: '',\n  ceilMode: 0,\n  countIncludePad: false,\n  kernelShape: [],\n  strides: [],\n  pads: [],\n  storageOrder: 0,\n  dilations: [],\n  cacheKey: ''\n};\n\nconst globalMaxPoolMetadata = {\n  name: 'GlobalMaxPool',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const globalMaxPool = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  const output = inferenceHandler.run(\n      {\n        ...globalMaxPoolMetadata,\n        get: () => createMaxPoolProgramInfo(inputs, globalMaxPoolMetadata, true, globalMaxPoolAttributes)\n      },\n      inputs);\n  return [output];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pool ops requires 1 input.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst generatePoolingCode =\n    (inputDims: readonly number[], attributes: AveragePoolAttributes, op1: string, op2: string, start: string):\n        string => {\n          const rank = inputDims.length;\n          if (attributes.kernelShape.length <= 2) {\n            const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\n            const sw = attributes.strides[attributes.strides.length - 1];\n            const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\n            const pwEnd = attributes.pads[attributes.pads.length - 1];\n            const dimW = inputDims[rank - 1];\n            let codeW = '';\n            let codeH = '';\n            let codeHEnd = '';\n            if (pwStart + pwEnd !== 0) {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            if (x[${rank} - 1] < 0 || x[${rank} - 1] >= ${dimW}) {\n              pad++;\n              continue;\n            }\n            ${op1}\n          }`;\n            } else {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            ${op1}\n          }`;\n            }\n\n            if (attributes.kernelShape.length === 2) {\n              const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\n              const sh = attributes.strides[attributes.strides.length - 2];\n              const phStart = attributes.pads[attributes.pads.length / 2 - 2];\n              const phEnd = attributes.pads[attributes.pads.length - 2];\n              const dimH = inputDims[rank - 2];\n              if (phStart + phEnd !== 0) {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n              if (x[${rank} - 2] < 0 || x[${rank} - 2] >= ${dimH}) {\n                pad+= ${kw};\n                continue;\n              }\n          `;\n              } else {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n            `;\n              }\n              codeHEnd = `\n          }\n        `;\n            }\n\n            const poolingCode = `\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n\n          float value = ${start};\n          int pad = 0;\n          ${codeH}\n          ${codeW}\n          ${codeHEnd}\n          ${op2}\n          return value;\n        }\n      `;\n            return poolingCode;\n          } else {\n            const kernelSize = ShapeUtil.size(attributes.kernelShape);\n            const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\n            const stridesRank = kernelStrides.length;\n            const padsRank = attributes.pads.length;\n            const offsetToIndicesFunction = offsetToIndices(stridesRank);\n            const copyInputDims = copyArray(inputDims, 'inputDims');\n            const copyPads = copyArray(attributes.pads, 'pads');\n            const copyKernelStrides = copyArray(kernelStrides, 'kernelStrides');\n            const copyStrides = copyArray(attributes.strides, 'strides');\n            const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\n            let padCode = '';\n            if (hasPads) {\n              padCode = `\n            if (x[j] >= inputDims[j] || x[j] < 0) {\n              pad++;\n              isPad = true;\n              break;\n            }\n          }\n          if (!isPad) {\n            ${op1}\n          }`;\n            } else {\n              padCode = `\n          }\n          ${op1}\n        `;\n            }\n            const poolingCode = `\n        ${offsetToIndicesFunction}\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n          int offset[${stridesRank}];\n          int pads[${padsRank}];\n          int inputDims[${rank}];\n          int kernelStrides[${stridesRank}];\n          int strides[${stridesRank}];\n          ${copyPads}\n          ${copyInputDims}\n          ${copyStrides}\n          ${copyKernelStrides}\n\n          float value = ${start};\n          int pad = 0;\n          bool isPad = false;\n          for (int i = 0; i < ${kernelSize}; i++) {\n            offsetToIndices(i, kernelStrides, offset);\n            isPad = false;\n            for (int j = ${rank} - ${stridesRank}; j < ${rank}; j++) {\n              x[j] = indices[j] * strides[j - ${rank} + ${stridesRank}]\n                + offset[j - ${rank} + ${stridesRank}] - pads[j - 2];\n              ${padCode}\n          }\n          ${op2}\n\n          return value;\n        }\n      `;\n            return poolingCode;\n          }\n        };\n\nconst copyArray = (array: readonly number[], arrayName: string): string => {\n  let block = '';\n  for (let i = 0; i < array.length; i++) {\n    block += `\n      ${arrayName}[${i}] = ${array[i]};\n    `;\n  }\n  return block;\n};\n\nconst offsetToIndices = (rank: number): string => `\n  void offsetToIndices(int offset, int[${rank}] strides, out int[${rank}] indices) {\n    if (${rank} == 0) {\n      return;\n    }\n    for (int i = 0; i < ${rank} - 1; ++i) {\n      indices[i] = offset / strides[i];\n      offset -= indices[i] * strides[i];\n    }\n    indices[${rank} - 1] = offset;\n  }`;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface ReduceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly keepDims: boolean;\n}\n\n// return [init ops, reduce ops, final ops]\ntype ReduceOp = (inputs: Tensor[], axes: number[]) => string[];\n\nconst reduce =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string,\n     reduceOp: ReduceOp): Tensor[] => {\n      validateInputs(inputs);\n\n      const reduceProgramMetadata = {\n        name,\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n      };\n\n      const output = inferenceHandler.run(\n          {\n            ...reduceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () =>\n                createReduceProgramInfo(inferenceHandler, inputs, attributes, name, reduceOp, reduceProgramMetadata)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseReduceAttributes: OperatorInitialization<ReduceAttributes> = (node: Graph.Node): ReduceAttributes => {\n  const axes = node.attributes.getInts('axes', []);\n  const keepDims = node.attributes.getInt('keepdims', 1) === 1;\n  return createAttributeWithCacheKey({axes, keepDims});\n};\n\nconst createReduceProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string, reduceOp: ReduceOp,\n     reduceProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const outputShape: number[] = [];\n      const iRank = inputs[0].dims.length || 1;\n\n      const idxCopy = [];  // copy output indexes to input indexes\n\n      const axes = ShapeUtil.normalizeAxes(attributes.axes, inputs[0].dims.length);\n      const ops = reduceOp(inputs, axes);\n      let reduceOps = ops[1];\n\n      for (let k = 0; k < inputs[0].dims.length; k++) {\n        // if this axis is reduced\n        if (axes.indexOf(k) >= 0 || axes.length === 0) {\n          if (attributes.keepDims) {\n            outputShape.push(1);\n          }  // else { remove the axis from outputShape; }\n\n          // loop over the d-th axis\n          reduceOps = `\n          for(int j${k} = 0; j${k} < ${inputs[0].dims[k]}; j${k}++) {\n            inputIdx[${k}] = j${k};\n            ${reduceOps}\n          }`;\n        } else {\n          idxCopy.push(`inputIdx[${k}] = outputIdx[${outputShape.length}];`);\n\n          outputShape.push(inputs[0].dims[k]);\n        }\n      }\n\n      const oRank = outputShape.length || 1;\n\n      const shaderSource = `\n      float process(int outputIdx[${oRank}]) {\n        float value;                 // final result\n        int inputIdx[${iRank}];      // addressing input data\n        ${idxCopy.join('\\n')}\n        ${ops[0]}       // init ops for reduce max/min\n        ${reduceOps}\n        ${ops[2]}       // final computation for reduce mean\n        return value;\n      }`;\n\n      return {\n        ...reduceProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  // TODO: support Reduce* operators with 2 inputs.\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Reduce op requires 1 input.');\n  }\n\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const reduceSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceSum', reduceOp);\n    };\n\nexport const reduceMean: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        let size = 1.0;\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            size *= inputs[0].dims[k];\n          }\n        }\n\n        return ['value = 0.0;', 'value += _A(inputIdx);', `value /= ${size}.;`];  // ensure real number with `.`\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMean', reduceOp);\n    };\n\nexport const reduceMax: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = max(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMax', reduceOp);\n    };\n\nexport const reduceMin: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = min(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMin', reduceOp);\n    };\n\nexport const reduceProd: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 1.0;', 'value *= _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceProd', reduceOp);\n    };\n\nexport const reduceLogSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', 'value = log(value);'];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSum', reduceOp);\n    };\n\nexport const reduceLogSumSquare: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['float t; value = 0.0;', 't = _A(inputIdx); value += t * t;', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSumSquare', reduceOp);\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedReshape3DProgramMetadata = (outputShape3D: readonly number[]) =>\n    ({name: 'Reshape (packed)', inputTypes: [TextureType.packed], inputNames: ['A'], cacheHint: `${outputShape3D}`});\n\nconst createPackedReshape3DProgramInfo =\n    (handler: WebGLInferenceHandler, input3D: Tensor, metadata: ProgramMetadata, outputShape3D: readonly number[]):\n        ProgramInfo => {\n          const inputShape3D = input3D.dims as [number, number, number];\n          const squeezedOutputShape = outputShape3D as [number, number, number];\n\n          let mainLoop = '';\n          for (let i = 0; i < 4; i++) {\n            let outputCoords = '';\n            switch (i) {\n              case 0:\n                outputCoords = 'outputCoords = rc;';\n                break;\n              case 1:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z);';\n                break;\n              case 2:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y, rc.z+1);';\n                break;\n              case 3:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);';\n                break;\n              default:\n                throw new Error();\n            }\n\n            mainLoop += `\n        ${outputCoords}\n        ${i > 0 ? 'if(outputCoords.y < rows && outputCoords.z < cols){' : ''}\n          int flattenedIndex = getFlattenedIndex(outputCoords);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);\n          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);\n\n        ${i > 0 ? '}' : ''}\n      `;\n          }\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n\n          const shaderSource = `\n      ${getReshapedInputCoords(inputShape3D)}\n      ${getFlattenedIndexFrom3D(squeezedOutputShape)}\n      ${unpackFromChannel()}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.0);\n\n        ivec3 outputCoords;\n        int rows = ${squeezedOutputShape[2]};\n        int cols = ${squeezedOutputShape[1]};\n\n        ${mainLoop}\n        ${glsl.output} = result;\n      }\n    `;\n\n          return {\n            ...metadata,\n            output: {dims: squeezedOutputShape, type: input3D.type, textureType: TextureType.packed},\n            shaderSource,\n            hasMain: true\n          };\n        };\n\nexport const createPackedReshape3DProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input3D: Tensor, outputShape3D: readonly number[]): ProgramInfoLoader => {\n      const metadata = createPackedReshape3DProgramMetadata(outputShape3D);\n      return {...metadata, get: () => createPackedReshape3DProgramInfo(handler, input3D, metadata, outputShape3D)};\n    };\n\nexport function processDims3D(shape: ArrayLike<number>): [number, number, number] {\n  if (shape.length === 0) {\n    return [1, 1, 1];\n  }\n  // TODO: squeeze other shapes to 2D case\n  let batch = 1;\n  for (let i = 0; i < shape.length - 2; ++i) {\n    batch *= shape[i];\n  }\n  return [batch, shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\n\n// For packed reshape, we need to re-arrange texel data for output shape.\n// Our pack is designed to pack a 2x2 tile in last h and w dimension, so\n// for the reshaped new tensor, we just need to re-arrange the last h and\n// w dimension. For any shape that is not in 3D, i.e. [batch, W, H], we\n// first convert it to 3D by collapsing other dimension to batch dim, then\n// process with the last two dimensions.\n// Note: we only need the shape tensor to calculate output shape, so the\n// content in shape tensor is never uploaded to GPU. It is always kept in CPU.\n// TODO: optimize the algorithm -- in some cases, if the last two dims are\n// the same between input shape and output shape, the packed reshape can be\n// treated as no-op.\nexport function isReshapeCheap(dims: readonly number[], reshapedDims: readonly number[]) {\n  let isCheapReshape = false;\n  if (dims.length === 0 || reshapedDims.length === 0) {  // scalar\n    isCheapReshape = true;\n  } else if (dims.length < 2 || reshapedDims.length < 2) {  // 1D\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1];\n  } else {  // 2D +\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1] &&\n        dims[dims.length - 2] === reshapedDims[reshapedDims.length - 2];\n  }\n\n  return isCheapReshape;\n}\n\nfunction getReshapedInputCoords(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n  const coords = ['b', 'r', 'c'];\n  const index = 'index';\n  const coordsFromIndexSnippet = strides\n                                     .map((stride, i) => {\n                                       const line1 = `int ${coords[i]} = ${index} / ${stride}`;\n                                       const line2 = i === strides.length - 1 ?\n                                           `int ${coords[i + 1]} = ${index} - ${coords[i]} * ${stride}` :\n                                           `index -= ${coords[i]} * ${stride}`;\n                                       return `${line1}; ${line2};`;\n                                     })\n                                     .join('');\n\n  return `\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${coordsFromIndexSnippet}\n      return ivec3(b, r, c);\n    }\n  `;\n}\n\nfunction getFlattenedIndexFrom3D(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n\n  return `\n  int getFlattenedIndex(ivec3 coords) {\n    // reverse y, z order\n    return coords.x * ${strides[0]} + coords.z * ${strides[1]} + coords.y;\n  }\n`;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const reshape = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  const reshapedDims = ShapeUtil.calculateReshapedDims(inputs[0].dims, inputs[1].integerData);\n  if (handler.session.pack) {\n    return [handler.reshapePacked(inputs[0], reshapedDims)];\n  } else {\n    return [handler.reshapeUnpacked(inputs[0], reshapedDims)];\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {unpackFromChannel} from './packing-utils';\nimport {parseUpsampleAttributes, scalesValidation, UpsampleAttributes, validateInputs} from './upsample';\n\nconst resizeProgramMetadata = {\n  name: 'Resize',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const resize: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...resizeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPackedResizeProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseResizeAttributesV10: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 10);\n\nexport const parseResizeAttributesV11: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 11);\n\nconst createPackedResizeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [scales, outputShape] = prepareInputs(inputs, attributes);\n\n      const isSame =\n          scales.every((s: number) => s === 1) && attributes.coordinateTransformMode !== 'tf_crop_and_resize';\n      if (isSame) {\n        return {\n          ...resizeProgramMetadata,\n          output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n          hasMain: true,\n          shaderSource: `void main() {\n                    vec4 v = ${glsl.texture2D}(X, TexCoords);\n                    ${glsl.output} = v;\n                }`\n        };\n      }\n\n      const dim = outputShape.length;\n      if (dim < 2) {\n        throw new Error(`output dimension should be at least 2, but got ${dim}`);\n      }\n\n      const outputHeight = outputShape[dim - 2];\n      const outputWidth = outputShape[dim - 1];\n\n      const inputShape = inputs[0].dims;\n      if (dim !== inputShape.length) {\n        throw new Error(`output dimension should match input ${inputShape.length}, but got ${dim}`);\n      }\n      const inputHeight = inputShape[dim - 2];\n      const inputWidth = inputShape[dim - 1];\n\n      const scalesHeight = scales[dim - 2];\n      const scalesWidth = scales[dim - 1];\n\n      let getSourceFracIndex = '';\n\n      if (attributes.mode !== 'linear') {\n        // TODO: support other modes\n        throw new Error(`resize (packed) does not support mode: '${attributes.mode}'`);\n      }\n      switch (attributes.coordinateTransformMode) {\n        case 'asymmetric':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return vec4(coords) / scaleWHWH;\n                    }\n                `;\n          break;\n        case 'half_pixel':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;\n                    }\n                `;\n          break;\n        case 'pytorch_half_pixel':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 fcoords = vec4(coords);\n                        return vec4(\n                            ${outputWidth}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,\n                            ${outputHeight}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,\n                            ${outputWidth}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,\n                            ${outputHeight}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0\n                          );\n                    }\n                `;\n          break;\n        case 'align_corners':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 resized = vec4(${outputWidth}.0 - 1.0, ${outputHeight}.0 - 1.0, ${outputWidth}.0 - 1.0,\n                            ${outputHeight}.0 - 1.0);\n                        vec4 original = vec4(${inputWidth}.0 - 1.0, ${inputHeight}.0 - 1.0, ${inputWidth}.0 - 1.0,\n                            ${inputHeight}.0 - 1.0);\n                        vec4 new_scale = original / resized;\n                        return vec4(coords) * new_scale;\n                    }\n                `;\n          break;\n        default:\n          // TODO:supporting other coordinateTransformModes\n          throw new Error(`resize (packed) does not support coordinateTransformMode: \\\n                                '${attributes.coordinateTransformMode}'`);\n      }\n\n      const coordsDataType = getCoordsDataType(dim);\n      const unpackChannel = unpackFromChannel();\n      const shaderSource = `\n            const vec2 inputWH = vec2(${inputHeight}.0, ${inputWidth}.0);\n            const vec4 scaleWHWH = vec4(float(${scalesHeight}), float(${scalesWidth}), float(${scalesHeight}), float(${\n          scalesWidth}));\n            ${unpackChannel}\n            ${getSourceFracIndex}\n            float getAValue(int x10, int r, int c, int d) {\n                return getChannel(getA(x10, r, c, d), vec2(c, d));\n            }\n            void main() {\n                ${coordsDataType} rc = getOutputCoords();\n\n                int batch = rc[0];\n                int depth = rc[1];\n\n                // retrieve the 4 coordinates that is used in the 4 packed output values.\n                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);\n\n                // calculate the source index in fraction\n                vec4 sourceFrac = getSourceFracIndex(coords);\n\n                // get the lower and upper bound of the 4 values that will be packed into one texel.\n                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));\n                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));\n                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));\n                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));\n\n                bool hasNextRow = rc.w < ${outputHeight - 1};\n                bool hasNextCol = rc.z < ${outputWidth - 1};\n\n                // pack x00, x01, x10, x11's top-left corner into one vec4 structure\n                vec4 topLeft = vec4(\n                    getAValue(batch, depth, x00.x, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's top-right corner into one vec4 structure\n                vec4 topRight = vec4(\n                    getAValue(batch, depth, x00.x, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure\n                vec4 bottomLeft = vec4(\n                    getAValue(batch, depth, x00.z, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure\n                vec4 bottomRight = vec4(\n                    getAValue(batch, depth, x00.z, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);\n\n                // calculate the interpolation fraction on u and v direction\n                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);\n                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));\n\n                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);\n                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);\n                vec4 newValue = mix(top, bottom, clampFrac.xxzz);\n\n                ${glsl.output} = vec4(newValue);\n            }\n        `;\n      return {\n        ...resizeProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\n\nconst prepareInputs = (inputs: Tensor[], attributes: UpsampleAttributes): [readonly number[], readonly number[]] => {\n  const x = inputs[0];\n  const xDims = x.dims;\n\n  let scales = attributes.scales;\n  let outputSizes: number[]|undefined;\n  if (scales.length === 0) {\n    const scalesTensor = inputs[attributes.scalesInputIdx];\n    if (scalesTensor && scalesTensor.size !== 0) {\n      if (inputs[attributes.sizesInputIdx]) {\n        throw new Error('Only one of scales or sizes must be provided as input.');\n      }\n      scales = parseScalesData(scalesTensor, attributes.mode, attributes.isResize);\n    } else {\n      const sizesTensor = inputs[attributes.sizesInputIdx];\n      if (!sizesTensor || sizesTensor.size === 0) {\n        throw new Error('Either scales or sizes MUST be provided as input.');\n      }\n\n      outputSizes = Array.from(sizesTensor.integerData);\n      scales = parseScalesDataFromOutputSize(outputSizes, xDims, attributes.mode, attributes.isResize);\n    }\n  } else {\n    if (inputs[attributes.sizesInputIdx]) {\n      throw new Error('Only one of scales or sizes must be provided as input.');\n    }\n  }\n\n  const yDims = outputSizes || (xDims.map((dim, i) => Math.floor(dim * scales[i])));\n\n  return [scales, yDims];\n};\n\nconst parseScalesData = (scale: Tensor, mode: string, isResize: boolean): number[] => {\n  const scales = Array.from(scale.floatData);\n  scalesValidation(scales, mode, isResize);\n  return scales;\n};\n\nconst parseScalesDataFromOutputSize =\n    (yDims: readonly number[], xDims: readonly number[], mode: string, isResize: boolean): number[] => {\n      const length = xDims.length;\n      const scales = new Array<number>(length);\n\n      for (let i = 0, end = length; i < end; i++) {\n        if (xDims[i] === 0) {\n          if (yDims[i] !== 0) {\n            throw new Error('Input dim is zero but required output dim is non-zero.');\n          }\n          scales[i] = 1;\n        } else {\n          scales[i] = yDims[i] / xDims[i];\n        }\n      }\n      scalesValidation(scales, mode, isResize);\n      return scales;\n    };\n\n// roi data is not used yet. but leave here for future usage.\n// const getRoi = (inputs: Tensor[], attributes: UpsampleAttributes) : number[] => {\n//     let roi: number[] = [];\n//     if (attributes.needRoiInput) {\n//         if (attributes.roiInputIdx <= 0) {\n//             throw new Error('Invalid roi input index.');\n//         }\n//         const roiTensor = inputs[attributes.roiInputIdx];\n//         roi = roiTensor.size > 0 ? Array.from(roiTensor.floatData) : [];\n//     } else {\n//         roi = new Array(inputs[0].dims.length * 2).fill(0);\n//     }\n//     return roi;\n// };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const shape = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  return [new Tensor([inputs[0].dims.length], 'int32', undefined, undefined, new Int32Array(inputs[0].dims))];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Shape requires 1 input.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SliceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly ends: number[];\n  readonly starts: number[];\n}\n\nconst sliceProgramMetadata = {\n  name: 'Slice',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const slice: OperatorImplementation<SliceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SliceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...sliceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseSliceAttributes: OperatorInitialization<SliceAttributes> = (node: Graph.Node): SliceAttributes => {\n  const starts = node.attributes.getInts('starts');\n  const ends = node.attributes.getInts('ends');\n  const axes = node.attributes.getInts('axes', []);\n  return createAttributeWithCacheKey({starts, ends, axes});\n};\n\nconst createSliceProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SliceAttributes): ProgramInfo => {\n      const axes = (attributes.axes.length === 0) ? input.dims.slice(0).map((val, i) => i) : attributes.axes;\n      const normalizedAxes = ShapeUtil.normalizeAxes(axes, input.dims.length);\n      const starts = attributes.starts.map((start, i) => {\n        if (start > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(start, input.dims[normalizedAxes[i]]);\n      });\n      const ends = attributes.ends.map((end, i) => {\n        if (end > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(end, input.dims[normalizedAxes[i]]);\n      });\n\n      const outputShape = input.dims.slice();\n\n      const sliceOps: string[] = [];\n      for (let i = 0; i < normalizedAxes.length; i++) {\n        outputShape[normalizedAxes[i]] = ends[i] - starts[i];\n        if (starts[i] > 0) {\n          sliceOps.push(`outputIdx[${normalizedAxes[i]}] += ${starts[i]};`);\n        }  // else { sliceOps.push(`outputIdx[${normalizedAxes[i]}] += 0;`); }\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        ${sliceOps.join('\\n      ')}\n        return _A(outputIdx);\n      }`;\n      return {\n        ...sliceProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Slice requires 1 input.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const sliceV10 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV10(inputs);\n  const attributes = generateSliceAttributesFromInputs(inferenceHandler, inputs);\n  const output = inferenceHandler.run(\n      {\n        ...sliceProgramMetadata,\n        cacheHint: attributes.cacheKey,\n        get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n      },\n      [inputs[0]]);\n  return [output];\n};\n\nconst generateSliceAttributesFromInputs =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): SliceAttributes => {\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\n          !inferenceHandler.session.isInitializer(inputs[2].dataId) ||\n          (inputs.length >= 4 && !inferenceHandler.session.isInitializer(inputs[3].dataId)) ||\n          (inputs.length >= 5 && !inferenceHandler.session.isInitializer(inputs[4].dataId))) {\n        throw new Error('dynamic slice attributes are not allowed');\n      }\n\n      if (inputs.length >= 5 && inputs[4].integerData.some((i: number) => i !== 1)) {\n        throw new Error('currently non-1 steps is not supported for Slice');\n      }\n\n      const starts = Array.from(inputs[1].integerData);\n      const ends = Array.from(inputs[2].integerData);\n      const axes = inputs.length >= 4 ? Array.from(inputs[3].integerData) : [];\n      const cacheKey = `${axes};${starts};${ends}`;\n      return {starts, ends, axes, cacheKey};\n    };\n\nconst validateInputsV10 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 3 || inputs.length > 5) {\n    throw new Error('Invalid input number.');\n  }\n  if (inputs[1].type !== 'int32' || inputs[1].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[2].type !== 'int32' || inputs[2].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 4 && (inputs[3].type !== 'int32' || inputs[3].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 5 && (inputs[4].type !== 'int32' || inputs[4].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nimport {transpose, TransposeAttributes} from './transpose';\n\nexport interface SoftmaxAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nconst softmaxComputeMaxProgramMetadata = {\n  name: 'SoftmaxComputeMax',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst softmaxComputeScaleProgramMetadata = {\n  name: 'SoftmaxComputeScale',\n  inputNames: ['A', 'Max'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst softmaxProgramMetadata = {\n  name: 'SoftMax',\n  inputNames: ['A', 'Max', 'Norm'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked],\n};\n\nexport const softmax: OperatorImplementation<SoftmaxAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const inputShape = inputs[0].dims.slice();\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\n      const logicalRowCount = ShapeUtil.sizeToDimension(inputShape, axis);\n      const featureCount = ShapeUtil.sizeFromDimension(inputShape, axis);\n\n      const output = computeSoftmax(inferenceHandler, inputs, attributes, logicalRowCount, featureCount);\n      return output;\n    };\n\nexport const parseSoftmaxAttributes: OperatorInitialization<SoftmaxAttributes> =\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 1)});\n\nexport const parseSoftmaxAttributesV13: OperatorInitialization<SoftmaxAttributes> =\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', -1)});\n\n// The \"semantic\" meaning of axis has changed in opset-13.\n// Please compare: https://github.com/onnx/onnx/blob/main/docs/Operators.md#Softmax\n// with https://github.com/onnx/onnx/blob/main/docs/Changelog.md#Softmax-11 for detailed explanations\n// To account for the opset-13 behavior, our plan will be to transpose the \"axis\" dim to the innermost dim\n// and perform softmax and then reverse the transpose. We can skip the transposing aspect if the axis is already\n// the innermost dim\nexport const softmaxV13: OperatorImplementation<SoftmaxAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const inputShape = inputs[0].dims.slice();\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\n      const rank = inputShape.length;\n\n      const isTransposeRequired = (axis !== rank - 1) ? true : false;\n      const transposedInputShape: number[] = [];\n      let perm: number[] = [];\n      let transposedInputs: Tensor[] = [];\n      let transposeAttribute: TransposeAttributes;\n\n      if (isTransposeRequired) {\n        perm = Array.from({length: rank}).map((_, i) => i);\n\n        // swap the innermost dim with the dim corresponding to axis\n        perm[axis] = rank - 1;\n        perm[rank - 1] = axis;\n\n        perm.map(p => transposedInputShape.push(inputShape[p]));\n\n        transposeAttribute = createAttributeWithCacheKey({perm});\n        transposedInputs = transpose(inferenceHandler, inputs, transposeAttribute);\n      }\n\n      const logicalRowCount = isTransposeRequired ? ShapeUtil.sizeToDimension(transposedInputShape, rank - 1) :\n                                                    ShapeUtil.sizeToDimension(inputShape, rank - 1);\n      const featureCount = isTransposeRequired ? ShapeUtil.sizeFromDimension(transposedInputShape, rank - 1) :\n                                                 ShapeUtil.sizeFromDimension(inputShape, rank - 1);\n\n      const output = computeSoftmax(\n          inferenceHandler, isTransposeRequired ? transposedInputs : inputs, attributes, logicalRowCount, featureCount);\n\n      if (isTransposeRequired) {\n        const reversedOutput = transpose(inferenceHandler, output, transposeAttribute!);\n        return reversedOutput;\n      } else {\n        return output;\n      }\n    };\n\nconst computeSoftmax =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes, logicalRowCount: number,\n     featureCount: number): Tensor[] => {\n      const computeMaxProgramInfo =\n          createComputeMaxProgramInfo(inferenceHandler, inputs[0], logicalRowCount, featureCount, [logicalRowCount]);\n      const max = inferenceHandler.run(\n          {...softmaxComputeMaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeMaxProgramInfo},\n          inputs);\n\n      const computeScaleProgramInfo = createComputScaleProgramInfo(\n          inferenceHandler, inputs[0], logicalRowCount, featureCount, computeMaxProgramInfo.output.dims,\n          [logicalRowCount]);\n      const scale = inferenceHandler.run(\n          {...softmaxComputeScaleProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeScaleProgramInfo},\n          [inputs[0], max]);\n\n      const softMaxProgramInfo = createSoftMaxProgramInfo(\n          inferenceHandler, inputs[0], logicalRowCount, featureCount, computeMaxProgramInfo.output.dims,\n          computeScaleProgramInfo.output.dims);\n      const output = inferenceHandler.run(\n          {...softmaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => softMaxProgramInfo},\n          [inputs[0], max, scale]);\n      return [output];\n    };\n\n/**\n * Create a texture that contains the maximum value of each of the 'N' rows\n */\nconst createComputeMaxProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, logicalRowCount: number, featureCount: number,\n     outputShape: number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = outputShape.length;\n\n      if (logicalRowCount < 1 || featureCount < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (outputShape.length !== 1) {\n        throw new Error('Dimensionality of the output should be 1');\n      }\n\n      if (outputShape[0] !== logicalRowCount) {\n        throw new Error('Shape of the output should be equal to logical row count');\n      }\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${featureCount};\n\n        float max = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset, ${textureWidth},\n        ${textureHeight} )));\n        for(int i=1; i<${featureCount}; ++i)\n        {\n          float current = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight})));\n          if(current > max)\n          max = current;\n        }\n\n        return max;\n      }`;\n      return {\n        ...softmaxComputeMaxProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\n/**\n * Create a texture that contains the normalization factor for each of the 'N' rows\n */\nconst createComputScaleProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, logicalRowCount: number, featureCount: number,\n     maxElementPerLogicalRow: readonly number[], outputShape: number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = outputShape.length;\n\n      if (logicalRowCount < 1 || featureCount < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (outputShape.length !== 1) {\n        throw new Error('Dimensionality of the output should be 1');\n      }\n\n      if (outputShape[0] !== logicalRowCount) {\n        throw new Error('Shape of the output should be equal to logical row count');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== logicalRowCount) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${featureCount};\n\n        float norm_factor = 0.0;\n        float max = _Max(indices);\n        for(int i=0; i<${featureCount}; ++i)\n        {\n          norm_factor += exp(getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight}))) - max);\n        }\n\n        return norm_factor;\n      }`;\n      return {\n        ...softmaxComputeScaleProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createSoftMaxProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, logicalRowCount: number, featureCount: number,\n     maxElementPerLogicalRow: readonly number[], normalizationPerLogicalRow: readonly number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = input.dims.length;\n\n      if (logicalRowCount < 1 || featureCount < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1 || normalizationPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== logicalRowCount || normalizationPerLogicalRow[0] !== logicalRowCount) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n\n      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)\n      int offset = coordsToOffset(TexCoords, ${textureWidth}, ${textureHeight});\n\n      //determine the logical row for this index\n      int logical_row_index[1];\n      logical_row_index[0] = offset / ${featureCount};\n\n      float norm_factor = _Norm(logical_row_index);\n\n      // avoid possible division by 0\n      // if norm_facor is 0, all elements are zero\n      // if so, return 0\n      if(norm_factor == 0.0)\n        return 0.0;\n\n      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;\n    }`;\n      return {\n        ...softmaxProgramMetadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Softmax requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil, SplitUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SplitAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n  readonly split: number[];\n  readonly numOutputs: number;\n}\n\nconst splitProgramMetadata = {\n  name: 'Split',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const split: OperatorImplementation<SplitAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SplitAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputs[0].dims.length);\n      const count = getProgramCount(inferenceHandler, inputs, axis, attributes);\n      const output: Tensor[] = [];\n      for (let i = 0; i < count; ++i) {\n        output.push(inferenceHandler.run(\n            {\n              ...splitProgramMetadata,\n              cacheHint: `${attributes.cacheKey};${i}`,\n              get: () => createSplitProgramInfo(inferenceHandler, inputs[0], attributes, axis, i)\n            },\n            inputs));\n      }\n\n      return output;\n    };\n\nexport const parseSplitAttributes: OperatorInitialization<SplitAttributes> = (node: Graph.Node): SplitAttributes => {\n  const axis = node.attributes.getInt('axis', 0);\n  const split = node.attributes.getInts('split', []);\n  const numOutputs = node.outputs.length;\n  return createAttributeWithCacheKey({axis, split, numOutputs});\n};\n\nconst getProgramCount =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number, attributes: SplitAttributes): number => {\n      const [, offsets] = SplitUtil.splitShape(inputs[0].dims, axis, attributes.split, attributes.numOutputs);\n      return offsets.length;\n    };\n\nconst createSplitProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SplitAttributes, axis: number, index: number):\n        ProgramInfo => {\n          const [shapes, offsets] = SplitUtil.splitShape(input.dims, axis, attributes.split, attributes.numOutputs);\n          const offset = offsets[index];\n          const outputShape = shapes[index];\n          const rank = outputShape.length;\n          const shaderSource = `\n      float process(int indices[${rank}]) {\n        indices[${axis}] += ${offset};\n        return _A(indices);\n      }\n    `;\n          return {\n            ...splitProgramMetadata,\n            cacheHint: `${attributes.cacheKey}:${index}`,\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Split requires one input.');\n  }\n\n  if (inputs[0].type !== 'int8' && inputs[0].type !== 'uint8' && inputs[0].type !== 'int16' &&\n      inputs[0].type !== 'uint16' && inputs[0].type !== 'int32' && inputs[0].type !== 'uint32' &&\n      inputs[0].type !== 'float32' && inputs[0].type !== 'float64' && inputs[0].type !== 'bool') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const squeeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.squeezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const squeezeV13 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV13(inputs);\n  return squeeze(inferenceHandler, [inputs[0]], Array.from(inputs[1].integerData));\n};\n\nexport const parseSqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Squeeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};\n\nconst validateInputsV13 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Squeeze requires 2 inputs.');\n  }\n\n  if (inputs[1].type !== 'int32') {\n    throw new Error('Invalid input type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const sum = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const sumProgramMetadata = {\n    name: 'Sum',\n    inputNames: inputs.map((v, i) => `X${i}`),\n    inputTypes: new Array(inputs.length).fill(TextureType.unpacked)\n  };\n\n  const output = inferenceHandler.run(\n      {...sumProgramMetadata, get: () => createSumProgramInfo(inferenceHandler, inputs, sumProgramMetadata)}, inputs);\n  return [output];\n};\n\nconst createSumProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], sumProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const outputShape = inputs[0].dims.slice();\n      const sumLine = inputs.map((v, i) => `${glsl.texture2D}(X${i},TexCoords)`).join(' + ');\n      const shaderSource = `\n      void main() {\n        vec4 result = ${sumLine};\n        ${glsl.output} = result;\n      }\n    `;\n      return {\n        ...sumProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length === 0) {\n    throw new Error('Sum requires inputs.');\n  }\n\n  const length = inputs[0].dims.length;\n  for (let i = 1; i < inputs.length; i++) {\n    if (length !== inputs[i].dims.length) {\n      throw new Error('Input shapes are mismatched.');\n    }\n\n    for (let j = 0; j < length; j++) {\n      if (inputs[0].dims[j] !== inputs[i].dims[j]) {\n        throw new Error('Input shapes are not matched.');\n      }\n    }\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n  for (let i = 1; i < inputs.length; i++) {\n    if (inputs[0].type !== inputs[i].type) {\n      throw new Error('Input types are not matched.');\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {NUMBER_TYPES} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const tile = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const tileProgramMetadata = {\n    name: 'Tile',\n    inputNames: ['A'],\n    inputTypes: [TextureType.unpacked],\n  };\n\n  const output = inferenceHandler.run(\n      {...tileProgramMetadata, get: () => createTileProgramInfo(inferenceHandler, inputs, tileProgramMetadata)},\n      inputs);\n  return [output];\n};\n\nconst createTileProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], tileProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const outputShape = new Array(inputShape.length);\n\n      const tileOps: string[] = [];\n      for (let i = 0; i < inputShape.length; i++) {\n        outputShape[i] = inputShape[i] * inputs[1].numberData[i];\n        tileOps.push(`inputIdx[${i}] = int(mod(float(outputIdx[${i}]), ${inputShape[i]}.));`);\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        int inputIdx[${rank}];\n        ${tileOps.join('\\n')}\n        return _A(inputIdx);\n      }\n    `;\n      return {\n        ...tileProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Tile requires 2 input.');\n  }\n  if (inputs[1].dims.length !== 1) {\n    throw new Error('The second input shape must 1 dimension.');\n  }\n  if (inputs[1].dims[0] !== inputs[0].dims.length) {\n    throw new Error('Invalid input shape.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invalid repeat type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface TransposeAttributes extends AttributeWithCacheKey {\n  readonly perm: number[];\n}\n\nconst transposeProgramMetadata = {\n  name: 'Transpose',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const transpose: OperatorImplementation<TransposeAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: TransposeAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...transposeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createTransposeProgramInfo(inferenceHandler, inputs[0], attributes.perm)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseTransposeAttributes: OperatorInitialization<TransposeAttributes> =\n    (node: Graph.Node): TransposeAttributes => createAttributeWithCacheKey({perm: node.attributes.getInts('perm', [])});\n\nconst createTransposeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, perm: number[]): ProgramInfo => {\n      const inputShape = input.dims;\n      perm = getAdjustedPerm(inputShape, perm);\n      const unpackedOutputShape = getOutputShape(inputShape, perm);\n      const rank = inputShape.length;\n      // A dims=[${inputs[0].dims.toString()}]\n      // out Dims=[${unpackedOutputShape.toString()}]\n      // based on perm=[${perm.toString()}]\n      const shaderSource = `\n      ${getPermFunctionBody('perm', perm, rank)}\n      float process(int indices[${rank}]) {\n        int a[${rank}];\n        perm(a, indices);\n        return _A(a);\n      }`;\n      return {\n        ...transposeProgramMetadata,\n        output: {dims: unpackedOutputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] => {\n  if (perm && perm.length !== inputShape.length) {\n    perm = [...(inputShape.keys())].reverse();\n  }\n  return perm;\n};\n\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] => {\n  perm = getAdjustedPerm(inputShape, perm);\n  return ShapeUtil.sortBasedOnPerm(inputShape, perm);\n};\n\nconst getPermFunctionBody = (name: string, perm: number[], rank: number): string => {\n  const reverseFunc = [];\n  reverseFunc.push(`void ${name}(out int a[${rank}], int src[${rank}]) {`);\n  for (let i = 0; i < rank; ++i) {\n    reverseFunc.push(`\\ta[${perm[i]}]=src[${i}];`);\n  }\n  reverseFunc.push('\\t}');\n  return reverseFunc.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Transpose requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('input should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {TextureData, TextureType} from '../types';\n\nexport const encodeAsUint8 = (inferenceHandler: WebGLInferenceHandler, input: TextureData): TextureData => {\n  const outputShape = input.shape;\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  /**\n   * https://github.com/tensorflow/tfjs-core/blob/master/src/kernels/webgl/encode_float_gpu.ts\n   */\n  const shaderSource = `\n    const float FLOAT_MAX = 1.70141184e38;\n    const float FLOAT_MIN = 1.17549435e-38;\n\n    bool isNaN(float val) {\n      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\n    }\n\n    highp vec4 encodeAsUint8(highp float v) {\n      if (isNaN(v)) {\n        return vec4(255, 255, 255, 255);\n      }\n\n      highp float av = abs(v);\n\n      if(av < FLOAT_MIN) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n      } else if(v > FLOAT_MAX) {\n        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n      } else if(v < -FLOAT_MAX) {\n        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n      }\n\n      highp vec4 c = vec4(0,0,0,0);\n\n      highp float e = floor(log2(av));\n      highp float m = exp2(fract(log2(av))) - 1.0;\n\n      c[2] = floor(128.0 * m);\n      m -= c[2] / 128.0;\n      c[1] = floor(32768.0 * m);\n      m -= c[1] / 32768.0;\n      c[0] = floor(8388608.0 * m);\n\n      highp float ebias = e + 127.0;\n      c[3] = floor(ebias / 2.0);\n      ebias -= c[3] * 2.0;\n      c[2] += floor(ebias) * 128.0;\n\n      c[3] += 128.0 * step(0.0, -v);\n\n      return c / 255.0;\n    }\n\n    void main() {\n      float value = ${glsl.texture2D}(X,TexCoords).r;\n      ${glsl.output} = encodeAsUint8(value);\n    }`;\n  const programInfo = {\n    name: 'Uint8Encode',\n    inputTypes: [TextureType.unpacked],\n    inputNames: ['X'],\n    output: {dims: outputShape, type: input.tensor.type, textureType: TextureType.downloadUint8AsFloat},\n    shaderSource,\n    hasMain: true\n  };\n  return inferenceHandler.executeProgram(programInfo, [input.tensor]);\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {Tensor} from '../../../tensor';\nimport {MAX_CLIP, MIN_CLIP} from '../../../util';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport function glslAbs(): GlslValueFunction {\n  return glslBuiltinUnary('abs');\n}\nexport function glslAcos(): GlslValueFunction {\n  return glslBuiltinUnary('acos');\n}\nexport function glslAsin(): GlslValueFunction {\n  return glslBuiltinUnary('asin');\n}\nexport function glslAtan(): GlslValueFunction {\n  return glslBuiltinUnary('atan');\n}\nexport function glslCeil(): GlslValueFunction {\n  return glslBuiltinUnary('ceil');\n}\nexport function glslCos(): GlslValueFunction {\n  return glslBuiltinUnary('cos');\n}\nexport function glslElu(alpha: number): GlslValueFunction {\n  const name = 'elu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslExp(): GlslValueFunction {\n  return glslBuiltinUnary('exp');\n}\nexport function glslFloor(): GlslValueFunction {\n  return glslBuiltinUnary('floor');\n}\nexport function glslClip(min: number, max: number): GlslValueFunction {\n  const name = 'clip';\n  const body = `\n  const float min = float(${min});\n  const float max = float(${max});\n\n  float ${name}_(float a) {\n    return clamp(a, min, max);\n  }\n  vec4 ${name}_(vec4 v) {\n    return clamp(v, min, max);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslIdentity(): GlslValueFunction {\n  const name = 'indentity';\n  const body = `\n  float ${name}_(float a) {\n    return a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLeakyRelu(alpha: number): GlslValueFunction {\n  const name = 'leakyRelu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a < 0.0 ? a * alpha : a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLog(): GlslValueFunction {\n  return glslBuiltinUnary('log');\n}\nexport function glslNeg(): GlslValueFunction {\n  const name = 'neg';\n  const body = `\n  float ${name}_(float a) {\n    return -a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return -v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslNot(): GlslValueFunction {\n  const name = 'not';\n  const body = `\n  float ${name}_(float a) {\n    return float( ! bool(a) );\n  }\n  bool ${name}_(bool a) {\n    return !a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));\n  }\n  bvec4 ${name}_(bvec4 v) {\n    return bvec4(!v.x, !v.y, !v.z, !v.w);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSin(): GlslValueFunction {\n  return glslBuiltinUnary('sin');\n}\nexport function glslRelu(): GlslValueFunction {\n  const name = 'relu';\n  const body = `\n  float ${name}_(float a) {\n    return max( a, 0.0 );\n  }\n  vec4 ${name}_(vec4 v) {\n    return max( v, 0.0 );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSigmoid(): GlslValueFunction {\n  const name = 'sigmoid';\n  const body = `\n  float ${name}_(float a) {\n    return 1.0 / (1.0 + exp(-a));\n  }\n  vec4 ${name}_(vec4 v) {\n    return 1.0 / (1.0 + exp(-v));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSqrt(): GlslValueFunction {\n  return glslBuiltinUnary('sqrt');\n}\nexport function glslTan(): GlslValueFunction {\n  return glslBuiltinUnary('tan');\n}\nexport function glslTanh(): GlslValueFunction {\n  const name = 'tanh';\n  const body = `\n  float ${name}_(float a) {\n    a = clamp(a, -10., 10.);\n    a = exp(2.*a);\n    return (a - 1.) / (a + 1.);\n  }\n  vec4 ${name}_(vec4 v) {\n    v = clamp(v, -10., 10.);\n    v = exp(2.*v);\n    return (v - 1.) / (v + 1.);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nfunction glslBuiltinUnary(name: string): GlslValueFunction {\n  const body = `\n  float ${name}_(float a) {\n    return ${name}(a);\n  }\n  vec4 ${name}_(vec4 v) {\n    return ${name}(v);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\n/////\n/////\n/////\n\nconst createElementwiseProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, glslFunc: GlslValueFunction):\n        ProgramInfo => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n          return {\n            ...metadata,\n            output: {dims: input.dims, type: input.type, textureType},\n            shaderSource: `\n     ${glslFunc.body}\n     void main() {\n       vec4 v = ${glsl.texture2D}(A, TexCoords);\n       v = ${glslFunc.name}_(v);\n       ${glsl.output} = v;\n     }\n     `,\n            hasMain: true\n          };\n        };\n\nconst createElementwiseProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input: Tensor, glslFunc: GlslValueFunction, cacheKey?: string):\n        ProgramInfoLoader => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const metadata = {name: glslFunc.name, inputTypes: [textureType], inputNames: ['A'], cacheHint: cacheKey};\n          return {...metadata, get: () => createElementwiseProgramInfo(handler, metadata, input, glslFunc)};\n        };\n\nexport const abs = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAbs()), inputs)];\n\nexport const acos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAcos()), inputs)];\n\nexport const asin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAsin()), inputs)];\n\nexport const atan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAtan()), inputs)];\n\nexport interface ClipAttributes extends AttributeWithCacheKey {\n  readonly min: number;\n  readonly max: number;\n}\n\nexport const clip =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ClipAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(\n            handler, inputs[0], glslClip(attributes.min, attributes.max), attributes.cacheKey),\n        inputs)];\n\nexport const parseClipAttributes = (node: Graph.Node): ClipAttributes => createAttributeWithCacheKey(\n    {min: node.attributes.getFloat('min', MIN_CLIP), max: node.attributes.getFloat('max', MAX_CLIP)});\n\nexport const clipV11 = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  const attributes = generateClipAttributesFromInputs(handler, inputs);\n  return clip(handler, [inputs[0]], attributes);\n};\n\nconst generateClipAttributesFromInputs = (handler: WebGLInferenceHandler, inputs: Tensor[]): ClipAttributes => {\n  if (inputs.length >= 3 &&\n      (!handler.session.isInitializer(inputs[1].dataId) || !handler.session.isInitializer(inputs[2].dataId))) {\n    throw new Error('dynamic clip attributes are not allowed');\n  }\n\n  const min = (inputs.length >= 3) ? inputs[1].numberData[0] : MIN_CLIP;\n  const max = (inputs.length >= 3) ? inputs[2].numberData[0] : MAX_CLIP;\n  return createAttributeWithCacheKey({min, max});\n};\n\nexport const ceil = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCeil()), inputs)];\n\nexport const cos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCos()), inputs)];\n\nexport interface EluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const elu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: EluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslElu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseEluAttributes = (node: Graph.Node): EluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 1.0)});\n\nexport const exp = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslExp()), inputs)];\n\nexport const floor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslFloor()), inputs)];\n\nexport const identity = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslIdentity()), inputs)];\n\nexport interface LeakyReluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const leakyRelu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: LeakyReluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslLeakyRelu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseLeakyReluAttributes = (node: Graph.Node): LeakyReluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 0.01)});\n\nexport const log = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslLog()), inputs)];\n\nexport const neg = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNeg()), inputs)];\n\nexport const not = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNot()), inputs)];\n\nexport const relu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslRelu()), inputs)];\n\nexport const sigmoid = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSigmoid()), inputs)];\n\nexport const sin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSin()), inputs)];\n\nexport const sqrt = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSqrt()), inputs)];\n\nexport const tan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTan()), inputs)];\n\nexport const tanh = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTanh()), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst unpackProgramMetadata = {\n  name: 'unpack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const createUnpackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const rank = input.dims.length;\n\n  const channels = getChannels('rc', rank);\n  const innerDims = channels.slice(-2);\n  const coordsDataType = getCoordsDataType(rank);\n  const unpackChannel = unpackFromChannel();\n  const isScalar = (input.dims.length === 0);\n  const sourceCoords = isScalar ? '' : getSourceCoords(rank, channels);\n  const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const shaderSource = `\n    ${unpackChannel}\n    void main() {\n      ${coordsDataType} rc = getOutputCoords();\n\n       // Sample the texture with the coords to get the rgba channel value.\n       vec4 packedInput = getA(${sourceCoords});\n\n       ${glsl.output} = vec4(getChannel(packedInput, ${coords}), 0, 0, 0);\n     }\n   `;\n\n  return {\n    ...unpackProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n    shaderSource\n  };\n};\n\nexport const createUnpackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...unpackProgramMetadata, get: () => createUnpackProgramInfo(handler, input)});\n\nfunction getSourceCoords(rank: number, dims: string[]): string {\n  if (rank === 1) {\n    return 'rc';\n  }\n\n  let coords = '';\n  for (let i = 0; i < rank; i++) {\n    coords += dims[i];\n    if (i < rank - 1) {\n      coords += ',';\n    }\n  }\n  return coords;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const unsqueeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.unsqueezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const unsqueezeV13 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV13(inputs);\n  return unsqueeze(inferenceHandler, [inputs[0]], Array.from(inputs[1].integerData));\n};\n\nexport const parseUnsqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Unsqueeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};\n\nconst validateInputsV13 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Unsqueeze requires 2 inputs.');\n  }\n\n  if (inputs[1].type !== 'int32') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface UpsampleAttributes extends AttributeWithCacheKey {\n  readonly opset: number;\n  readonly isResize: boolean;\n  readonly mode: string;\n  readonly scales: number[];\n  readonly extrapolationValue: number;\n  readonly coordinateTransformMode: string;\n  readonly useExtrapolation: boolean;\n  readonly needRoiInput: boolean;\n  readonly nearestMode: string;\n  readonly cubicCoefficientA: number;\n  readonly excludeOutside: boolean;\n  readonly useNearest2xOptimization: boolean;\n  readonly roiInputIdx: number;\n  readonly scalesInputIdx: number;\n  readonly sizesInputIdx: number;\n}\n\nconst upsampleProgramMetadata = {\n  name: 'Upsample',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const upsample: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...upsampleProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createUpsampleProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseUpsampleAttributesV7: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 7);\n\nexport const parseUpsampleAttributesV9: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 9);\n\nexport const parseUpsampleAttributes = (node: Graph.Node, opset: number): UpsampleAttributes => {\n  const isResize = (opset >= 10);\n\n  // processing node attributes\n  const mode = node.attributes.getString('mode', 'nearest');\n  if (mode !== 'nearest' && mode !== 'linear' && (opset < 11 || mode !== 'cubic')) {\n    throw new Error(`unrecognized mode: ${mode}`);\n  }\n\n  let scales: number[] = [];\n  if (opset < 9) {\n    scales = node.attributes.getFloats('scales');\n    scalesValidation(scales, mode, isResize);\n  }\n\n  const extrapolationValue = node.attributes.getFloat('extrapolation_value', 0.0);\n\n  const coordinateTransformMode =\n      opset > 10 ? node.attributes.getString('coordinate_transformation_mode', 'half_pixel') : 'asymmetric';\n  if ([\n        'asymmetric', 'pytorch_half_pixel', 'tf_half_pixel_for_nn', 'align_corners', 'tf_crop_and_resize', 'half_pixel'\n      ].indexOf(coordinateTransformMode) === -1) {\n    throw new Error(`coordinate_transform_mode '${coordinateTransformMode}' is not supported`);\n  }\n  const needRoiInput = (coordinateTransformMode === 'tf_crop_and_resize');\n  const useExtrapolation = needRoiInput;\n\n  const nearestMode =\n      (mode === 'nearest' && opset >= 11) ? node.attributes.getString('nearest_mode', 'round_prefer_floor') : '';\n  if (['round_prefer_floor', 'round_prefer_ceil', 'floor', 'ceil', ''].indexOf(nearestMode) === -1) {\n    throw new Error(`nearest_mode '${nearestMode}' is not supported`);\n  }\n\n  const cubicCoefficientA = node.attributes.getFloat('cubic_coeff_a', -0.75);\n  const excludeOutside = node.attributes.getInt('exclude_outside', 0) !== 0;\n  if (excludeOutside && mode !== 'cubic') {\n    throw new Error('exclude_outside can be set to 1 only when mode is CUBIC.');\n  }\n\n  const useNearest2xOptimization =\n      (opset < 11) ? true : (mode === 'nearest' && coordinateTransformMode === 'asymmetric' && nearestMode === 'floor');\n\n  let roiInputIdx = 0;\n  let scalesInputIdx = 0;\n  let sizesInputIdx = 0;\n\n  if (opset > 10) {\n    // handle when roiInput is not given\n    if (node.inputs.length > 2) {\n      roiInputIdx = 1;\n      scalesInputIdx = 2;\n      sizesInputIdx = 3;\n    } else {\n      scalesInputIdx = 1;\n      sizesInputIdx = 2;\n    }\n  } else if (opset === 9) {\n    scalesInputIdx = 1;\n  }\n\n  return createAttributeWithCacheKey({\n    opset,\n    isResize,\n    mode,\n    scales,\n    extrapolationValue,\n    coordinateTransformMode,\n    useExtrapolation,\n    needRoiInput,\n    nearestMode,\n    cubicCoefficientA,\n    excludeOutside,\n    useNearest2xOptimization,\n    roiInputIdx,\n    scalesInputIdx,\n    sizesInputIdx\n  });\n};\n\nconst createUpsampleProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [inputWidth, inputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(inputs[0].dims, TextureType.unpacked);\n\n      const outputShape = inputs[0].dims.map((dim, i) => Math.floor(dim * attributes.scales[i]));\n      const [outputWidth, outputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(outputShape, TextureType.unpacked);\n      const dim = outputShape.length;\n\n      const outputPitches = new Array<number>(dim);\n      const inputPitches = new Array<number>(dim);\n      let precalculatedPitches = `\n      int output_pitches[${dim}];\n      int input_pitches[${dim}];\n      `;\n      for (let d = dim - 1; d >= 0; d--) {\n        outputPitches[d] = (d === dim - 1) ? 1 : outputPitches[d + 1] * outputShape[d + 1];\n        inputPitches[d] = (d === dim - 1) ? 1 : inputPitches[d + 1] * inputs[0].dims[d + 1];\n\n        precalculatedPitches += `\n        output_pitches[${d}] = ${outputPitches[d]};\n        input_pitches[${d}] = ${inputPitches[d]};\n        `;\n      }\n      const getInputFloatFunction = `\n      float getInputFloat(int index) {\n        vec2 coords = offsetToCoords(index, ${inputWidth}, ${inputHeight});\n        float value = getColorAsFloat(${glsl.texture2D}(X, coords));\n        return value;\n      }\n      `;\n\n      const shaderSource = attributes.mode === 'nearest' ?\n          // nearest\n          `\n    ${getInputFloatFunction}\n    float process(int indices[${dim}]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int d, m;\n      for (int dim = 0; dim < ${dim}; ++dim) {\n        d = output_index / output_pitches[dim];\n        m = output_index - d * output_pitches[dim];\n        output_index = m;\n\n        if (scales[dim] != 1 && d > 0) {\n          int d2 = d / scales[dim];\n          m = d - d2 * scales[dim];\n          d = d2;\n        }\n        input_index += input_pitches[dim] * d;\n      }\n\n      return getInputFloat(input_index);\n    }` :\n          dim === 4 ?\n          // bilinear 4D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[4]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m / output_pitches[1];\n      m = m - index_of_dim1 * output_pitches[1];\n      index_of_dim2 = m / output_pitches[2];\n      m = m - index_of_dim2 * output_pitches[2];\n      index_of_dim3 = m;\n\n      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;\n      index_of_input_dim2 = index_of_dim2 / scales[2];\n      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];\n      index_of_input_dim3 = index_of_dim3 / scales[3];\n      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];\n\n      input_index = index_of_dim0 * input_pitches[0] +\n            index_of_dim1 * input_pitches[1] +\n            index_of_input_dim2 * input_pitches[2] +\n            index_of_input_dim3;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim2 = false;\n      if (index_of_input_dim2 == (${inputs[0].dims[2]} - 1)) {\n        // It's the end in dimension 2\n        x01 = x00;\n        end_of_dim2 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[2]);\n      }\n\n      if (index_of_input_dim3 == (input_pitches[2] - 1)) {\n        // It's the end in dimension 3\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);\n    }` :\n              // bilinear 2D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[2]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m;\n\n      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;\n      index_of_input_dim0 = index_of_dim0 / scales[0];\n      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];\n      index_of_input_dim1 = index_of_dim1 / scales[1];\n      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];\n\n      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim0 = false;\n      if (index_of_input_dim0 == (${inputs[0].dims[0]} - 1)) {\n        // It's the end in dimension 0\n        x01 = x00;\n        end_of_dim0 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[0]);\n      }\n\n      if (index_of_input_dim1 == (input_pitches[0] - 1)) {\n        // It's the end in dimension 1\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);\n    }`;\n      return {\n        ...upsampleProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        variables: [{\n          name: 'scales',\n          type: 'int',\n          arrayLength: attributes.scales.length,\n          data: attributes.scales.map(x => Math.ceil(x))\n        }]\n      };\n    };\n\nexport const validateInputs = (inputs: Tensor[], attribute: UpsampleAttributes): void => {\n  if (!inputs || (attribute.opset < 9 && inputs.length !== 1) ||\n      (attribute.opset >= 9 && attribute.opset < 11 && inputs.length !== 2) ||\n      (attribute.opset >= 11 && inputs.length < 2)) {\n    throw new Error('invalid inputs.');\n  }\n\n  if (attribute.scales.length > 0 && inputs[0].dims.length !== attribute.scales.length) {\n    throw new Error('Invalid input shape.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('Invalid input tensor types.');\n  }\n};\n\nexport const scalesValidation = (scales: number[], mode: string, isResize: boolean): void => {\n  if (!isResize) {\n    for (const scale of scales) {\n      if (scale < 1) {\n        throw new Error('Scale value should be greater than or equal to 1.');\n      }\n    }\n  } else {\n    for (const scale of scales) {\n      if (scale <= 0) {\n        throw new Error('Scale value should be greater than 0.');\n      }\n    }\n  }\n  if (mode === 'linear' || mode === 'cubic') {\n    if (scales.length !== 2 && (scales.length !== 4 || scales[0] !== 1 || scales[1] !== 1)) {\n      throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic') \\\n        or 4-D inputs with the corresponding outermost 2 scale values being 1 \\\n        in the ${isResize ? 'Resize' : 'Upsample'} opeartor.`);\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport {Logger, Profiler} from '../../instrument';\n\nimport {GlslPreprocessor} from './glsl-preprocessor';\nimport {getVertexShaderSource} from './glsl-source';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {Artifact, ProgramInfo, ProgramVariable, TextureData, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * ProgramManager is the main class behind running computations\n * It builds ProgramInfo's into Artifacts\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\n * Uses the artifact to run the computation by calling Draw on\n * the WebGL drawing buffer\n * ProgramManager automatically maps (binds) input variables to their\n * corresponding Location's in the binary program\n */\nexport class ProgramManager {\n  repo: Map<unknown, Artifact>;  // this should be per-session object\n  vertexShader: WebGLShader;\n  attributesBound: boolean;\n\n  constructor(\n      public profiler: Readonly<Profiler>, public glContext: WebGLContext,\n      public textureLayoutStrategy: TextureLayoutStrategy) {\n    this.repo = new Map();\n    this.attributesBound = false;\n  }\n  getArtifact(key: unknown): Artifact|undefined {\n    return this.repo.get(key);\n  }\n  setArtifact(key: unknown, artifact: Artifact): void {\n    this.repo.set(key, artifact);\n  }\n  run(buildArtifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    this.profiler.event('op', `ProgramManager.run ${buildArtifact.programInfo.name ?? 'unknown kernel'}`, () => {\n      const gl = this.glContext.gl;\n      const program = buildArtifact.program;\n      gl.useProgram(program);\n      try {\n        this.bindOutput(output);\n        if (!this.attributesBound) {\n          this.bindAttributes(buildArtifact.attribLocations);\n        }\n        this.bindUniforms(buildArtifact.uniformLocations, buildArtifact.programInfo.variables ?? [], inputs);\n      } catch (err) {\n        Logger.error('ProgramManager', buildArtifact.programInfo.shaderSource);\n        throw err;\n      }\n      this.profiler.event('backend', 'GlContext.draw()', () => {\n        this.glContext.draw();\n      });\n    }, this.glContext);\n  }\n  dispose(): void {\n    if (this.vertexShader) {\n      this.glContext.deleteShader(this.vertexShader);\n    }\n    this.repo.forEach(a => this.glContext.deleteProgram(a.program));\n  }\n  build(programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[], outputTextureLayout: TextureLayout): Artifact {\n    return this.profiler.event('backend', 'ProgramManager.build', () => {\n      const preprocessor = new GlslPreprocessor(this.glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n      const fragScript = preprocessor.preprocess();\n      const program = this.compile(fragScript);\n      const artifact = {\n        programInfo,\n        program,\n        uniformLocations: this.getUniformLocations(\n            program, preprocessor.context.programInfo.inputNames, preprocessor.context.programInfo.variables),\n        attribLocations: this.getAttribLocations(program)\n      };\n      return artifact;\n    });\n  }\n  protected compile(fragShaderScript: string): WebGLProgram {\n    if (!this.vertexShader) {\n      Logger.verbose('ProrgramManager', 'Compiling and caching Vertex shader for the first time');\n      const vertexShaderScript = getVertexShaderSource(this.glContext.version);\n      this.vertexShader = this.glContext.compileShader(vertexShaderScript, this.glContext.gl.VERTEX_SHADER);\n    }\n    if (env.debug) {\n      Logger.verbose('ProrgramManager', `FragShader:\n${fragShaderScript}\n`);\n    }\n    const fragShader = this.glContext.compileShader(fragShaderScript, this.glContext.gl.FRAGMENT_SHADER);\n    const program = this.glContext.createProgram(this.vertexShader, fragShader);\n    this.glContext.deleteShader(fragShader);\n    return program;\n  }\n  bindOutput(td: TextureData): void {\n    const width = td.width;\n    const height = td.height;\n    Logger.verbose(\n        'ProrgramManager',\n        `Binding output texture to Framebuffer: w/h=${width}/${height}, shape=${td.shape}, type=${td.tensor.type}`);\n    this.glContext.attachFramebuffer(td.texture, width, height);\n  }\n  bindAttributes(attribLocations: Artifact.AttribLocations): void {\n    const positionHandle = attribLocations.position;\n    const textureCoordHandle = attribLocations.textureCoord;\n    this.glContext.setVertexAttributes(positionHandle, textureCoordHandle);\n    this.attributesBound = true;\n  }\n  bindUniforms(uniformLocations: Artifact.UniformLocations, variables: ProgramVariable[], textures: TextureData[]):\n      void {\n    const gl = this.glContext.gl;\n    let texturePosition = 0;\n    for (const {name, type, location, arrayLength} of uniformLocations) {\n      const value = variables.find(v => v.name === name)?.data;\n      if (type !== 'sampler2D' && !value) {\n        throw new Error(`variable '${name}' does not have data defined in program info`);\n      }\n      switch (type) {\n        case 'sampler2D':\n          this.bindTexture(textures[texturePosition], location, texturePosition);\n          texturePosition++;\n          break;\n        case 'float':\n          if (arrayLength) {\n            gl.uniform1fv(location, value as number[]);\n          } else {\n            gl.uniform1f(location, value as number);\n          }\n          break;\n        case 'int':\n          if (arrayLength) {\n            gl.uniform1iv(location, value as number[]);\n          } else {\n            gl.uniform1i(location, value as number);\n          }\n          break;\n        default:\n          throw new Error(`Uniform not implemented: ${type}`);\n      }\n    }\n  }\n  bindTexture(td: TextureData, uniformHandle: WebGLUniformLocation, position: number): void {\n    this.glContext.bindTextureToUniform(td.texture, position, uniformHandle);\n  }\n  getAttribLocations(program: WebGLProgram): Artifact.AttribLocations {\n    return {\n      position: this.getAttribLocation(program, 'position'),\n      textureCoord: this.getAttribLocation(program, 'textureCoord')\n    };\n  }\n  getUniformLocations(program: WebGLProgram, samplers?: string[], variables?: VariableInfo[]):\n      Artifact.UniformLocations {\n    const uniformLocations: Artifact.UniformLocations = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLocations.push({name: sampler, type: 'sampler2D', location: this.getUniformLocation(program, sampler)});\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLocations.push({...variable, location: this.getUniformLocation(program, variable.name)});\n      }\n    }\n    return uniformLocations;\n  }\n  getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation {\n    const gl = this.glContext.gl;\n    const reference = gl.getUniformLocation(program, name);\n    if (reference === null) {\n      throw new Error(`Uniform ${name} not found.`);\n    }\n    return reference;\n  }\n  getAttribLocation(program: WebGLProgram, name: string): number {\n    const gl = this.glContext.gl;\n    const attributeLocation: number = gl.getAttribLocation(program, name);\n    return attributeLocation;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from '../../backend';\nimport {Graph} from '../../graph';\nimport {Logger} from '../../instrument';\nimport {Operator} from '../../operators';\nimport {OpSet, resolveOperator} from '../../opset';\nimport {Session} from '../../session';\nimport {Tensor} from '../../tensor';\nimport {WebGLBackend} from '../backend-webgl';\n\nimport {WebGLInferenceHandler} from './inference-handler';\nimport {WEBGL_OP_RESOLVE_RULES} from './op-resolve-rules';\nimport {ProgramManager} from './program-manager';\nimport {PreferLogicalStrategy, TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureManager} from './texture-manager';\nimport {TextureData} from './types';\n\nexport class WebGLSessionHandler implements SessionHandler {\n  programManager: ProgramManager;\n  textureManager: TextureManager;\n  layoutStrategy: TextureLayoutStrategy;\n  packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  pack2unpackMap: Map<Tensor.Id, Tensor.Id>;\n  unpack2packMap: Map<Tensor.Id, Tensor.Id>;\n  initializers: Set<Tensor.Id>;\n  pack?: boolean;\n\n  constructor(public readonly backend: WebGLBackend, public readonly context: Session.Context) {\n    this.layoutStrategy = new PreferLogicalStrategy(backend.glContext.maxTextureSize);\n    this.programManager = new ProgramManager(this.context.profiler, backend.glContext, this.layoutStrategy);\n    this.textureManager = new TextureManager(\n        backend.glContext, this.layoutStrategy, this.context.profiler,\n        {reuseTextures: backend.textureCacheMode === 'full'});\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n    this.pack = backend.pack;\n    this.pack2unpackMap = new Map();\n    this.unpack2packMap = new Map();\n  }\n\n  createInferenceHandler() {\n    return new WebGLInferenceHandler(this);\n  }\n  onGraphInitialized(graph: Graph): void {\n    const initializers = graph.getValues().filter(v => v.from === -1 && v.tensor).map(v => v.tensor!.dataId);\n    this.initializers = new Set(initializers);\n  }\n  isInitializer(tensorId: Tensor.Id): boolean {\n    return this.initializers ? this.initializers.has(tensorId) : false;\n  }\n  addInitializer(tensorId: Tensor.Id): void {\n    this.initializers.add(tensorId);\n  }\n  getTextureData(tensorId: Tensor.Id, isPacked: boolean): TextureData|undefined {\n    if (isPacked) {\n      return this.packedTextureDataCache.get(tensorId);\n    } else {\n      return this.unpackedTextureDataCache.get(tensorId);\n    }\n  }\n  setTextureData(tensorId: Tensor.Id, textureData: TextureData, isPacked = false): void {\n    Logger.verbose('WebGLSessionHandler', 'Storing Texture data in cache');\n    if (isPacked) {\n      this.packedTextureDataCache.set(tensorId, textureData);\n    } else {\n      this.unpackedTextureDataCache.set(tensorId, textureData);\n    }\n  }\n  dispose(): void {\n    this.programManager.dispose();\n    this.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.unpackedTextureDataCache = new Map();\n  }\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator {\n    const op = resolveOperator(node, opsets, WEBGL_OP_RESOLVE_RULES);\n    return {impl: op.opImpl, context: op.opInit ? op.opInit(node, graph) : node};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nexport declare namespace Encoder {\n  export interface DataTypeMap {\n    float: Float32Array;\n    byte: Uint8Array;\n    int: Uint32Array;\n  }\n  export type DataType = keyof DataTypeMap;\n  type DataArrayType = DataTypeMap[DataType];\n\n  /* eslint-disable @typescript-eslint/naming-convention */\n  export const enum Usage {\n    Default = 0,\n    UploadOnly,\n    Download4BytesAsFloat32,\n  }\n}\n\n/**\n * Abstraction for mapping data types to texture texlets\n * Encoding means how a Float32 is mapped to 1 or 4 channels for each texlet\n * Decoding means how a texlet's channels are mapped to a resulting Float32\n */\nexport interface DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType;\n  allocate(size: number): Encoder.DataArrayType;\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Encoder.DataArrayType;\n}\n/**\n * WebGL2 data encoder\n * Uses R32F as the format for texlet\n */\nexport class RedFloat32DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGL2RenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.R32F;\n      this.format = gl.RED;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA32F;\n      this.format = gl.RGBA;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType {\n    let result: Float32Array;\n    let source: Float32Array;\n    if (src.constructor !== Float32Array) {\n      Logger.warning('Encoder', 'data was not of type Float32; creating new Float32Array');\n      source = new Float32Array(src);\n    }\n    if (textureSize * this.channelSize > src.length) {\n      Logger.warning('Encoder', 'Source data too small. Allocating larger array');\n      source = src as Float32Array;\n      result = this.allocate(textureSize * this.channelSize) as Float32Array;\n      source.forEach((v, i) => result[i] = v);\n    } else {\n      source = src as Float32Array;\n      result = source;\n    }\n    return result;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n/**\n * Data encoder for WebGL 1 with support for floating point texture\n */\nexport class RGBAFloatDataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGLRenderingContext, channels = 1, textureType?: number) {\n    if (channels !== 1 && channels !== 4) {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n    this.internalFormat = gl.RGBA;\n    this.format = gl.RGBA;\n    this.channelSize = channels;\n    this.textureType = textureType || gl.FLOAT;\n  }\n  encode(src: Float32Array, textureSize: number): Encoder.DataArrayType {\n    let dest = src;\n    if (this.channelSize === 1) {\n      Logger.verbose('Encoder', 'Exploding into a larger array');\n      dest = this.allocate(textureSize) as Float32Array;\n      src.forEach((v, i) => dest[i * 4] = v);\n    }\n    return dest;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n\nexport class Uint8DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize = 4;\n  constructor(gl: WebGLRenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.ALPHA;\n      this.format = gl.ALPHA;  // not tested\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA;\n      this.format = gl.RGBA;\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Uint8Array, _textureSize: number): Encoder.DataArrayType {\n    return new Uint8Array(src.buffer, src.byteOffset, src.byteLength);\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Uint8Array(size * this.channelSize);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Uint8Array {\n    if (buffer instanceof Uint8Array) {\n      return buffer.subarray(0, dataSize);\n    }\n    throw new Error(`Invalid array type: ${buffer.constructor}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\nimport {assert} from '../../util';\n\n/** Layout preferences */\nexport interface WidthHeightPrefs {\n  breakAxis?: number;\n  isPacked?: boolean;\n  reverseWH?: boolean;\n}\n/**\n * TextureLayoutStrategy is an abstraction for different plans\n * for mapping n-dimensional arrays to 2D textures (and back)\n */\nexport interface TextureLayoutStrategy {\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number];\n}\n\n/**\n * This strategy try to find the minimal max(W,H) that fulfills (W * H == totalSize)\n */\nexport class AlwaysKeepOriginalSizeStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    // scalar tensor\n    if (shape.length === 0) {\n      return [1, 1];\n    }\n    const maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    const totalSize = shape.reduce((a, b) => a * b);\n\n    let width = Math.floor(Math.sqrt(totalSize));\n\n    for (; width < maxTextureSize && width < totalSize; width++) {\n      if (totalSize % width === 0) {\n        break;\n      }\n    }\n\n    if (width >= maxTextureSize || totalSize % width !== 0) {\n      throw new Error(`The given dimensions are outside this GPU's boundaries: ${shape}`);\n    }\n    return [width, totalSize / width];\n  }\n}\n\nexport class PreferLogicalStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const wh = this.computeTexture(shape, prefs);\n    if (prefs && prefs.isPacked) {\n      wh[0] /= 2;\n      wh[1] /= 2;\n    }\n    if (prefs && prefs.reverseWH) {\n      return [wh[1], wh[0]];\n    }\n    return wh;\n  }\n\n  computeTexture(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const isPacked = prefs && prefs.isPacked;\n    // scalar tensor\n    if (shape.length === 0) {\n      return isPacked ? [2, 2] : [1, 1];\n    }\n    let maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    let logShape = shape.slice(0);\n    if (isPacked) {\n      maxTextureSize = maxTextureSize * 2;\n\n      // This logic ensures we accurately count the number of packed texels needed\n      // to accommodate the tensor. We can only pack values in the same texel if\n      // they are from adjacent pairs of rows/cols within the same batch. So if a\n      // tensor has 3 rows, we pretend it has 4 rows in order to account for the\n      // fact that the texels containing the third row are half empty.\n      logShape = logShape.map(\n          (d, i) => i >= logShape.length - 2 ? (logShape[i] % 2 === 0 ? logShape[i] : logShape[i] + 1) : logShape[i]);\n\n      // Packed texture height is at least 2 (the channel height of a single\n      // texel).\n      if (logShape.length === 1) {\n        logShape = [2, logShape[0]];\n      }\n    }\n\n    // If logical shape is 2, we don't squeeze, since we want to match physical.\n    if (logShape.length !== 2) {\n      const squeezeResult = squeezeShape(logShape);\n      logShape = squeezeResult.newShape;\n    }\n\n    const size = sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTextureSize) {\n      return [1, size];\n    } else if (logShape.length === 2 && logShape[0] <= maxTextureSize && logShape[1] <= maxTextureSize) {\n      return logShape as [number, number];\n    } else if (logShape.length === 3 && logShape[0] * logShape[1] <= maxTextureSize && logShape[2] <= maxTextureSize) {\n      return [logShape[0] * logShape[1], logShape[2]];\n    } else if (logShape.length === 3 && logShape[0] <= maxTextureSize && logShape[1] * logShape[2] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2]];\n    } else if (\n        logShape.length === 4 && logShape[0] * logShape[1] * logShape[2] <= maxTextureSize &&\n        logShape[3] <= maxTextureSize) {\n      return [logShape[0] * logShape[1] * logShape[2], logShape[3]];\n    } else if (\n        logShape.length === 4 && logShape[0] <= maxTextureSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    } else {\n      if (isPacked) {\n        // For packed textures size equals the number of channels required to\n        // accommodate the texture data. However in order to squarify such that\n        // inner dimensions stay even, we rewrite size to equal the number of\n        // texels. Then in the return statement we rehydrate the squarified\n        // dimensions to channel units.\n        return sizeToSquarishShape(size / 4).map(d => d * 2) as [number, number];\n      }\n      return sizeToSquarishShape(size);\n    }\n  }\n}\n\nexport function squeezeShape(shape: number[], axis?: number[]): {newShape: number[]; keptDims: number[]} {\n  const newShape: number[] = [];\n  const keptDims: number[] = [];\n  const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n  const axes = (axis == null || isEmptyArray) ? null : parseAxisParam(axis, shape).sort();\n  let j = 0;\n  for (let i = 0; i < shape.length; ++i) {\n    if (axes != null) {\n      if (axes[j] === i && shape[i] !== 1) {\n        throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n      }\n      if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n        newShape.push(shape[i]);\n        keptDims.push(i);\n      }\n      if (axes[j] <= i) {\n        j++;\n      }\n    }\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n      keptDims.push(i);\n    }\n  }\n  return {newShape, keptDims};\n}\n\nexport function parseAxisParam(axis: number|number[], shape: number[]): number[] {\n  const rank = shape.length;\n\n  // Normalize input\n  axis = axis == null ? shape.map((s, i) => i) : ([] as number[]).concat(axis);\n\n  // Check for valid range\n  assert(\n      axis.every(ax => ax >= -rank && ax < rank),\n      () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n          `got axis ${axis}`);\n\n  // Check for only integers\n  assert(\n      axis.every(isInt),\n      () => 'All values in axis param must be integers but ' +\n          `got axis ${axis}`);\n\n  // Handle negative axis.\n  return axis.map(a => a < 0 ? rank + a : a);\n}\nexport function isInt(a: number): boolean {\n  return a % 1 === 0;\n}\nexport function sizeFromShape(shape: number[]): number {\n  if (shape.length === 0) {\n    // Scalar.\n    return 1;\n  }\n  let size = shape[0];\n  for (let i = 1; i < shape.length; i++) {\n    size *= shape[i];\n  }\n  return size;\n}\nexport function getRowsCols(shape: number[]): [number, number] {\n  if (shape.length === 0) {\n    throw Error('Cannot get rows and columns of an empty shape array.');\n  }\n\n  return [shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\nexport function sizeToSquarishShape(size: number): [number, number] {\n  const width = Math.ceil(Math.sqrt(size));\n  return [width, Math.ceil(size / width)];\n}\nexport function getBatchDim(shape: number[], dimsToSkip = 2): number {\n  return sizeFromShape(shape.slice(0, shape.length - dimsToSkip));\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ShapeUtil} from '../../util';\n\nimport {TextureLayoutStrategy, WidthHeightPrefs} from './texture-layout-strategy';\nimport {TextureLayout, TextureType} from './types';\n\nexport const createTextureLayoutFromTextureType =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[],\n     textureType: TextureType): TextureLayout => {\n      const channel = (textureType === TextureType.unpacked || textureType === TextureType.unpackedReversed) ? 1 : 4;\n      const isPacked = textureType === TextureType.packed;\n      const reverseWH = (textureType === TextureType.unpackedReversed || textureType === TextureType.packed);\n      const breakAxis = textureType === TextureType.packedLastDimension ? shape.length - 1 : undefined;\n      const unpackedShape = textureType === TextureType.packedLastDimension ?\n          shape.map((d, i) => i === shape.length - 1 ? d * 4 : d) :\n          undefined;\n      return createTextureLayoutFromShape(\n          textureLayoutStrategy, shape, channel, unpackedShape, {isPacked, reverseWH, breakAxis});\n    };\n\nexport const calculateTextureWidthAndHeight =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], textureType: TextureType):\n        [number, number] => {\n          const layout = createTextureLayoutFromTextureType(textureLayoutStrategy, shape, textureType);\n          return [layout.width, layout.height];\n        };\n\n/**\n * Create a TextureLayout object from shape.\n */\nexport const createTextureLayoutFromShape =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], channels: 1|4 = 1,\n     unpackedShape?: readonly number[], prefs?: WidthHeightPrefs): TextureLayout => {\n      const isPacked = !!(prefs && prefs.isPacked);\n      const [width, height] = textureLayoutStrategy.computeTextureWH(isPacked ? unpackedShape || shape : shape, prefs);\n      const rank = shape.length;\n      let inferredDims = shape.slice(0);\n      if (rank === 0) {\n        inferredDims = [1];\n      }\n      if (channels === 1) {\n        // unpackedShape will take `shape` and not `inferredDims` so as to create a scalar Tensor if need be\n        unpackedShape = shape;\n      } else if (isPacked) {\n        if (channels !== 4) {\n          throw new Error('a packed texture must be 4-channel');\n        }\n        unpackedShape = shape;\n        if (rank > 0) {\n          inferredDims[rank - 1] = Math.ceil(inferredDims[rank - 1] / 2);\n        }\n        if (rank > 1) {\n          inferredDims[rank - 2] = Math.ceil(inferredDims[rank - 2] / 2);\n        }\n      } else if (!unpackedShape) {\n        throw new Error('Unpacked shape is needed when using channels > 1');\n      }\n      return {\n        width,\n        height,\n        channels,\n        isPacked,\n        shape: inferredDims,\n        strides: ShapeUtil.computeStrides(inferredDims),\n        unpackedShape,\n        reversedWH: (prefs && prefs.reverseWH)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger, Profiler} from '../../instrument';\nimport {Tensor} from '../../tensor';\n\nimport {Encoder} from './texture-data-encoder';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureData, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\nexport interface TextureManagerConfig {\n  reuseTextures?: boolean;\n}\n\n/**\n * TextureManager is the mainly responsible for caching Textures\n * Textures are cached in 2 levels:\n *   1. the texures which are associated with a dataId (from Tensor)\n *    Caching these is crucial to performance. These are In-use Textures\n *   2. textures which are not in use by any current ProgramInfo/Tensor\n *     These are called Free Textures\n * TextureManager is also used to help creating textures. For this it\n * uses WebGLContext and TextureLayoutStrategy\n */\nexport class TextureManager {\n  private readonly inUseTextures: Map<string, WebGLTexture[]>;\n  private readonly idleTextures: Map<string, WebGLTexture[]>;\n  private readonly textureLookup: Map<WebGLTexture, string>;\n  private readonly pendingRead: Map<Tensor.Id, Array<(arr: Tensor.NumberType) => void>> = new Map();\n\n  constructor(\n      public glContext: WebGLContext, public layoutStrategy: TextureLayoutStrategy, public profiler: Readonly<Profiler>,\n      private config: TextureManagerConfig) {\n    if (config.reuseTextures) {\n      this.inUseTextures = new Map();\n      this.idleTextures = new Map();\n      this.textureLookup = new Map();\n    }\n  }\n  createTextureFromLayout(\n      dataType: Tensor.DataType, layout: TextureLayout, data?: Tensor.NumberType, usage?: Encoder.Usage) {\n    const textureDataType = this.toEncoderType(dataType);\n\n    const encoder = this.glContext.getEncoder(textureDataType, layout.channels || 1, usage);\n    if (layout.isPacked && usage === Encoder.Usage.UploadOnly) {\n      throw new Error('not implemented');\n    }\n    const width = layout.width;\n    const height = layout.height;\n\n    let key: string|undefined;\n    let inUseTextures: WebGLTexture[]|undefined;\n    if (this.config.reuseTextures) {\n      key = `${width}x${height}_${encoder.format}_${encoder.internalFormat}_${encoder.textureType}`;\n      inUseTextures = this.inUseTextures.get(key);\n      if (!inUseTextures) {\n        inUseTextures = [];\n        this.inUseTextures.set(key, inUseTextures);\n      }\n\n      const idleTextures = this.idleTextures.get(key);\n      if (idleTextures && idleTextures.length > 0) {\n        const texture = idleTextures.pop()!;\n        inUseTextures.push(texture);\n        if (usage === Encoder.Usage.UploadOnly) {\n          this.glContext.updateTexture(texture, width, height, encoder, this.toTextureData(dataType, data)!);\n        }\n        return texture;\n      }\n    }\n\n    Logger.verbose('TextureManager', `Creating new texture of size ${layout.width}x${layout.height}`);\n    const texture = this.glContext.allocateTexture(width, height, encoder, this.toTextureData(dataType, data));\n\n    if (this.config.reuseTextures) {\n      inUseTextures!.push(texture);\n      this.textureLookup.set(texture, key!);\n    }\n    return texture;\n  }\n  readTexture(td: TextureData, dataType: Tensor.DataType, channels?: number): Tensor.NumberType {\n    if (!channels) {\n      channels = 1;\n    }\n    return this.profiler.event('backend', 'TextureManager.readTexture', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      return this.toTensorData(dataType, data);\n    });\n  }\n  async readTextureAsync(td: TextureData, dataType: Tensor.DataType, channels?: number): Promise<Tensor.NumberType> {\n    const dataId = td.tensor.dataId;\n    if (!channels) {\n      channels = 1;\n    }\n    if (this.pendingRead.has(dataId)) {\n      const subscribers = this.pendingRead.get(dataId);\n      return new Promise<Tensor.NumberType>(resolve => subscribers?.push(resolve));\n    }\n    return this.profiler.event('backend', 'TextureManager.readTextureAsync', async () => {\n      this.pendingRead.set(dataId, []);\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      // add a fence waiting for the data to be ready\n      await this.glContext.createAndWaitForFence();\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      const tensorData = this.toTensorData(dataType, data);\n      const subscribers = this.pendingRead.get(dataId);\n      this.pendingRead.delete(dataId);\n      subscribers?.forEach(resolve => resolve(tensorData));\n      return tensorData;\n    });\n  }\n  readUint8TextureAsFloat(td: TextureData): Float32Array {\n    return this.profiler.event('backend', 'TextureManager.readUint8TextureAsFloat', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b);\n      const data = this.glContext.readTexture(td.texture, td.width, td.height, dataSize * 4, 'byte', 4);\n      return new Float32Array(data.buffer, data.byteOffset, dataSize);\n    });\n  }\n  releaseTexture(textureData: TextureData, deleteTexture?: boolean): void {\n    let key: string|undefined;\n    if (this.config.reuseTextures) {\n      key = this.textureLookup.get(textureData.texture);\n      if (key) {\n        if (deleteTexture) {\n          this.textureLookup.delete(key);\n        }\n        const inUseTextures = this.inUseTextures.get(key);\n        if (inUseTextures) {\n          const index = inUseTextures.indexOf(textureData.texture);\n          if (index !== -1) {\n            inUseTextures.splice(index, 1);\n            let idleTextures = this.idleTextures.get(key);\n            if (!idleTextures) {\n              idleTextures = [];\n              this.idleTextures.set(key, idleTextures);\n            }\n            idleTextures.push(textureData.texture);\n          }\n        }\n      }\n    }\n\n    if (!key || deleteTexture) {\n      Logger.verbose('TextureManager', `Deleting texture of size ${textureData.width}x${textureData.height}`);\n      this.glContext.deleteTexture(textureData.texture);\n    }\n  }\n  toTensorData(dataType: Tensor.DataType, data: Encoder.DataArrayType): Tensor.NumberType {\n    switch (dataType) {\n      case 'int16':\n        return data instanceof Int16Array ? data : Int16Array.from(data);\n      case 'int32':\n        return data instanceof Int32Array ? data : Int32Array.from(data);\n      case 'int8':\n        return data instanceof Int8Array ? data : Int8Array.from(data);\n      case 'uint16':\n        return data instanceof Uint16Array ? data : Uint16Array.from(data);\n      case 'uint32':\n        return data instanceof Uint32Array ? data : Uint32Array.from(data);\n      case 'uint8':\n      case 'bool':\n        return data instanceof Uint8Array ? data : Uint8Array.from(data);\n      case 'float32':\n        return data instanceof Float32Array ? data : Float32Array.from(data);\n      case 'float64':\n        return data instanceof Float64Array ? data : Float64Array.from(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n  }\n  toTextureData(dataType: Tensor.DataType, data: Tensor.NumberType|undefined): Encoder.DataArrayType|undefined {\n    if (!data) {\n      return undefined;\n    }\n    return (data instanceof Float32Array) ? data : new Float32Array(data);\n    /*\n    switch (dataType) {\n      case 'int16':\n      case 'int32':\n      case 'uint16':\n      case 'uint32':\n        return (data.constructor === Uint32Array) ? data as Uint32Array : new Uint32Array(data);\n      case 'int8':\n      case 'uint8':\n      case 'bool':\n        return (data.constructor === Uint8Array) ? data as Uint8Array : new Uint8Array(data);\n      case 'float32':\n      case 'float64':\n        return (data.constructor === Float32Array) ? data as Float32Array : new Float32Array(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n    */\n  }\n  toEncoderType(_dataType: Tensor.DataType): Encoder.DataType {\n    return 'float';\n    // switch (dataType) {\n    //   case 'int16':\n    //   case 'int32':\n    //   case 'uint16':\n    //   case 'uint32':\n    //     return 'int';\n    //   case 'uint8':\n    //   case 'bool':\n    //     return 'byte';\n    //   case 'float32':\n    //   case 'float64':\n    //     return 'float';\n    //   default:\n    //     throw new Error(`TensorData type ${dataType} is not supported`);\n    // }\n  }\n  clearActiveTextures(): void {\n    this.glContext.clearActiveTextures();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../tensor';\n\n/**\n * Layout info is used for mapping n-dimensional array to 2D textures\n * The layout is created by the TextureLayoutStrategy based on\n * the Tensor's dimensions and strides\n */\nexport interface TextureLayout {\n  width: number;\n  height: number;\n  /**\n   * specify the number of value that encoded in a single pixel\n   */\n  channels: 1|2|3|4;\n  /**\n   * whether in packed mode or not\n   */\n  isPacked?: boolean;\n  /**\n   * the normalized shape\n   */\n  shape: readonly number[];\n  /**\n   * the stride of each dimensions, calculated according to shape\n   */\n  strides: readonly number[];\n  /**\n   * the original shape(dims) of the corresponding tensor\n   */\n  unpackedShape: readonly number[];\n\n  reversedWH?: boolean;\n}\nexport interface TextureData extends TextureLayout {\n  tensor: Tensor;\n  texture: WebGLTexture;\n}\n\nexport enum TextureType {\n  unpacked,              // <-- normal unpacked texture\n  unpackedReversed,      // <-- unpacked texture used in old ONNX.js implementation (deprecated)\n  packed,                // <-- normal packed texture\n  downloadUint8AsFloat,  // <-- ONLY used in texture downloading for iOS devices\n  packedLastDimension    // <-- ONLY used in old ONNX.js Conv implementation for input W (deprecated)\n}\n\nexport interface TensorInfo {\n  id?: Tensor.Id;\n  dims: readonly number[];\n  type: Tensor.DataType;\n  textureType: TextureType;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * A set of metadata of a shader program.\n */\nexport interface ProgramMetadata {\n  /**\n   * the name of the program. used for debugging and profiling\n   */\n  name: string;\n  /**\n   * texture types for each input\n   */\n  inputTypes: TextureType[];\n  /**\n   * names of each input\n   */\n  inputNames: string[];\n  /**\n   * an optional string as a cache hint in the artifact cache\n   */\n  cacheHint?: string;\n}\n\n/**\n * A ProgramInfoLoader allows\n */\nexport interface ProgramInfoLoader extends ProgramMetadata {\n  /**\n   * a function to get the program info\n   */\n  get(): ProgramInfo;\n}\n\n/**\n * A set of data that represent a shader program\n */\nexport interface ProgramInfo extends ProgramMetadata {\n  /**\n   * information of uniform variables\n   */\n  variables?: ProgramVariable[];\n  /**\n   * tensor info for output\n   */\n  output: TensorInfo;\n  /**\n   * the shader's processing source code\n   */\n  shaderSource: string;\n  /**\n   * whether the shader source contains a customized main function implementation\n   */\n  hasMain?: boolean;\n}\n\nexport interface VariableInfo {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * Information of uniforms that shader uses\n */\nexport interface UniformInfo {\n  type: 'sampler2D'|VariableInfo['type'];\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface UniformLocation extends UniformInfo {\n  location: WebGLUniformLocation;\n}\n\n/**\n * Artifact is the result of compilation\n * It does not contain input of output data\n * However anything that could be run as a \"program\"\n */\nexport interface Artifact {\n  programInfo: ProgramInfo;\n  program: WebGLProgram;\n  uniformLocations: UniformLocation[];\n  attribLocations: {position: number; textureCoord: number};\n}\nexport declare namespace Artifact {\n  type UniformLocations = Artifact['uniformLocations'];\n  type AttribLocations = Artifact['attribLocations'];\n}\n\nexport interface UniformData {\n  [name: string]: number|number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {assert} from '../../util';\n/**\n * Given a non RGBA shape calculate the R version\n * It is assumed that the dimensions are multiples of given channels\n * NOTE: it is always the last dim that gets packed.\n * @param unpackedShape original shape to create a packed version from\n */\nexport function getPackedShape(unpackedShape: readonly number[]): readonly number[] {\n  const len = unpackedShape.length;\n  return unpackedShape.slice(0, len - 1).concat(unpackedShape[len - 1] / 4);\n}\n\nexport async function repeatedTry(\n    checkFn: () => boolean, delayFn = (_counter: number) => 0, maxCounter?: number): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    let tryCount = 0;\n\n    const tryFn = () => {\n      if (checkFn()) {\n        resolve();\n        return;\n      }\n\n      tryCount++;\n\n      const nextBackoff = delayFn(tryCount);\n\n      if (maxCounter != null && tryCount >= maxCounter) {\n        reject();\n        return;\n      }\n      setTimeout(tryFn, nextBackoff);\n    };\n\n    tryFn();\n  });\n}\n\n/**\n * Generates the function name from an input sampler name.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerName(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1);\n}\n\n/**\n * Generates the function name from an input sampler name at output coordinates.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1) + 'AtOutCoords';\n}\n\n/** Returns a new input shape (a copy) that has a squeezed logical shape. */\nexport function squeezeInputShape(inputShape: readonly number[], squeezedShape: number[]): number[] {\n  // Deep copy.\n  let newInputShape: number[] = JSON.parse(JSON.stringify(inputShape));\n  newInputShape = squeezedShape;\n  return newInputShape;\n}\n\n/** Returns a list of squeezed parameters for shader functions */\nexport function getSqueezedParams(params: string[], keptDims: number[]): string {\n  return keptDims.map(d => params[d]).join(', ');\n}\n\n/** Returns the data type for different ranks. */\nexport function getCoordsDataType(rank: number): string {\n  if (rank <= 1) {\n    return 'int';\n  } else if (rank === 2) {\n    return 'ivec2';\n  } else if (rank === 3) {\n    return 'ivec3';\n  } else if (rank === 4) {\n    return 'ivec4';\n  } else if (rank === 5) {\n    return 'ivec5';\n  } else if (rank === 6) {\n    return 'ivec6';\n  } else {\n    throw Error(`GPU for rank ${rank} is not yet supported`);\n  }\n}\n\nexport function getGlChannels(rank = 6): string[] {\n  return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nimport {WebGLContext} from './webgl-context';\n\nconst cache: {[contextId: string]: WebGLContext} = {};\n\n/**\n * This factory function creates proper WebGLRenderingContext based on\n * the current browsers capabilities\n * The order is from higher/most recent versions to most basic\n */\nexport function createWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  let context: WebGLContext|undefined;\n  if ((!contextId || contextId === 'webgl2') && 'webgl2' in cache) {\n    context = cache.webgl2;\n  } else if ((!contextId || contextId === 'webgl') && 'webgl' in cache) {\n    context = cache.webgl;\n  }\n\n  context = context || createNewWebGLContext(contextId);\n  contextId = contextId || context.version === 1 ? 'webgl' : 'webgl2';\n  const gl = context.gl;\n\n  cache[contextId] = context;\n\n  if (gl.isContextLost()) {\n    delete cache[contextId];\n    return createWebGLContext(contextId);\n  }\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST);\n  gl.disable(gl.BLEND);\n  gl.disable(gl.DITHER);\n  gl.disable(gl.POLYGON_OFFSET_FILL);\n  gl.disable(gl.SAMPLE_COVERAGE);\n  gl.enable(gl.SCISSOR_TEST);\n  gl.enable(gl.CULL_FACE);\n  gl.cullFace(gl.BACK);\n\n  return context;\n}\n\nexport function createNewWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  const canvas = createCanvas();\n  const contextAttributes: WebGLContextAttributes = {\n    alpha: false,\n    depth: false,\n    antialias: false,\n    stencil: false,\n    preserveDrawingBuffer: false,\n    premultipliedAlpha: false,\n    failIfMajorPerformanceCaveat: false\n  };\n  let gl: WebGLRenderingContext|null;\n  const ca = contextAttributes;\n  if (!contextId || contextId === 'webgl2') {\n    gl = canvas.getContext('webgl2', ca);\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 2);\n      } catch (err) {\n        Logger.warning('GlContextFactory', `failed to create WebGLContext using contextId 'webgl2'. Error: ${err}`);\n      }\n    }\n  }\n  if (!contextId || contextId === 'webgl') {\n    gl = canvas.getContext('webgl', ca) || canvas.getContext('experimental-webgl', ca) as WebGLRenderingContext;\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 1);\n      } catch (err) {\n        Logger.warning(\n            'GlContextFactory',\n            `failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${err}`);\n      }\n    }\n  }\n\n  throw new Error('WebGL is not supported');\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ndeclare let OffscreenCanvas: {new (width: number, height: number): HTMLCanvasElement};\n\nfunction createCanvas(): HTMLCanvasElement {\n  if (typeof document === 'undefined') {\n    if (typeof OffscreenCanvas === 'undefined') {\n      throw new TypeError('failed to create canvas: OffscreenCanvas is not supported');\n    }\n    return new OffscreenCanvas(1, 1);\n  }\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  return canvas;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport * as DataEncoders from './texture-data-encoder';\nimport {DataEncoder, Encoder} from './texture-data-encoder';\nimport {repeatedTry} from './utils';\n\nexport interface FenceContext {\n  query: WebGLSync|null;\n  isFencePassed(): boolean;\n}\n\ntype PollItem = {\n  isDoneFn: () => boolean; resolveFn: () => void;\n};\n\nexport function linearSearchLastTrue(arr: Array<() => boolean>): number {\n  let i = 0;\n  for (; i < arr.length; ++i) {\n    const isDone = arr[i]();\n    if (!isDone) {\n      break;\n    }\n  }\n  return i - 1;\n}\n\n/**\n * Abstraction and wrapper around WebGLRenderingContext and its operations\n */\nexport class WebGLContext {\n  gl: WebGLRenderingContext;\n  version: 1|2;\n\n  private vertexbuffer: WebGLBuffer;\n  private framebuffer: WebGLFramebuffer;\n\n  // WebGL flags and vital parameters\n  private isFloatTextureAttachableToFrameBuffer: boolean;\n  isFloat32DownloadSupported: boolean;\n  isRenderFloat32Supported: boolean;\n  isBlendSupported: boolean;\n  maxTextureSize: number;\n  // private maxCombinedTextureImageUnits: number;\n  private maxTextureImageUnits: number;\n  // private maxCubeMapTextureSize: number;\n  // private shadingLanguageVersion: string;\n  // private webglVendor: string;\n  // private webglVersion: string;\n\n  // WebGL2 flags and vital parameters\n  // private max3DTextureSize: number;\n  // private maxArrayTextureLayers: number;\n  // private maxColorAttachments: number;\n  // private maxDrawBuffers: number;\n\n  // WebGL extensions\n  // eslint-disable-next-line camelcase\n  textureFloatExtension: OES_texture_float|null;\n  // eslint-disable-next-line camelcase\n  textureHalfFloatExtension: OES_texture_half_float|null;\n\n  // WebGL2 extensions\n  colorBufferFloatExtension: unknown|null;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  disjointTimerQueryWebgl2Extension: {TIME_ELAPSED_EXT: GLenum; GPU_DISJOINT_EXT: GLenum}|null;\n\n  private disposed: boolean;\n  private frameBufferBound = false;\n\n  constructor(gl: WebGLRenderingContext, version: 1|2) {\n    this.gl = gl;\n    this.version = version;\n\n    this.getExtensions();\n    this.vertexbuffer = this.createVertexbuffer();\n    this.framebuffer = this.createFramebuffer();\n    this.queryVitalParameters();\n  }\n\n  allocateTexture(width: number, height: number, encoder: DataEncoder, data?: Encoder.DataArrayType): WebGLTexture {\n    const gl = this.gl;\n    // create the texture\n    const texture = gl.createTexture();\n    // bind the texture so the following methods effect this texture.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    const buffer = data ? encoder.encode(data, width * height) : null;\n    gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,  // Level of detail.\n        encoder.internalFormat, width, height,\n        0,  // Always 0 in OpenGL ES.\n        encoder.format, encoder.textureType, buffer);\n    this.checkError();\n    return texture as WebGLTexture;\n  }\n  updateTexture(\n      texture: WebGLTexture, width: number, height: number, encoder: DataEncoder, data: Encoder.DataArrayType): void {\n    const gl = this.gl;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    const buffer = encoder.encode(data, width * height);\n    gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,  // level\n        0,  // xoffset\n        0,  // yoffset\n        width, height, encoder.format, encoder.textureType, buffer);\n    this.checkError();\n  }\n  attachFramebuffer(texture: WebGLTexture, width: number, height: number): void {\n    const gl = this.gl;\n    // Make it the target for framebuffer operations - including rendering.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    this.checkError();\n    gl.viewport(0, 0, width, height);\n    gl.scissor(0, 0, width, height);\n  }\n  readTexture(\n      texture: WebGLTexture, width: number, height: number, dataSize: number, dataType: Encoder.DataType,\n      channels: number): Encoder.DataArrayType {\n    const gl = this.gl;\n    if (!channels) {\n      channels = 1;\n    }\n    if (!this.frameBufferBound) {\n      this.attachFramebuffer(texture, width, height);\n    }\n    const encoder = this.getEncoder(dataType, channels);\n    const buffer = encoder.allocate(width * height);\n    // bind texture to framebuffer\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    // TODO: Check if framebuffer is ready\n    gl.readPixels(0, 0, width, height, gl.RGBA, encoder.textureType, buffer);\n    this.checkError();\n    // unbind FB\n    return encoder.decode(buffer, dataSize);\n  }\n\n  isFramebufferReady(): boolean {\n    // TODO: Implement logic to check if the framebuffer is ready\n    return true;\n  }\n  getActiveTexture(): string {\n    const gl = this.gl;\n    const n = gl.getParameter(this.gl.ACTIVE_TEXTURE);\n    return `TEXTURE${(n - gl.TEXTURE0)}`;\n  }\n  getTextureBinding(): WebGLTexture {\n    return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\n  }\n  getFramebufferBinding(): WebGLFramebuffer {\n    return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);\n  }\n  setVertexAttributes(positionHandle: number, textureCoordHandle: number): void {\n    const gl = this.gl;\n    gl.vertexAttribPointer(positionHandle, 3, gl.FLOAT, false, 20, 0);\n    gl.enableVertexAttribArray(positionHandle);\n    if (textureCoordHandle !== -1) {\n      gl.vertexAttribPointer(textureCoordHandle, 2, gl.FLOAT, false, 20, 12);\n      gl.enableVertexAttribArray(textureCoordHandle);\n    }\n    this.checkError();\n  }\n  createProgram(\n      vertexShader: WebGLShader,\n      fragShader: WebGLShader,\n      ): WebGLProgram {\n    const gl = this.gl;\n    const program = gl.createProgram()!;\n\n    // the program consists of our shaders\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    return program;\n  }\n  compileShader(shaderSource: string, shaderType: number): WebGLShader {\n    const gl = this.gl;\n    const shader = gl.createShader(shaderType);\n    if (!shader) {\n      throw new Error(`createShader() returned null with type ${shaderType}`);\n    }\n\n    gl.shaderSource(shader, shaderSource);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n      throw new Error(`Failed to compile shader: ${gl.getShaderInfoLog(shader)}\nShader source:\n${shaderSource}`);\n    }\n    return shader;\n  }\n  deleteShader(shader: WebGLShader): void {\n    this.gl.deleteShader(shader);\n  }\n  bindTextureToUniform(texture: WebGLTexture, position: number, uniformHandle: WebGLUniformLocation): void {\n    const gl = this.gl;\n    gl.activeTexture(gl.TEXTURE0 + position);\n    this.checkError();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    this.checkError();\n    gl.uniform1i(uniformHandle, position);\n    this.checkError();\n  }\n  draw(): void {\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n    this.checkError();\n  }\n  checkError(): void {\n    if (env.debug) {\n      const gl = this.gl;\n      const error = gl.getError();\n      let label = '';\n      switch (error) {\n        case (gl.NO_ERROR):\n          return;\n        case (gl.INVALID_ENUM):\n          label = 'INVALID_ENUM';\n          break;\n        case (gl.INVALID_VALUE):\n          label = 'INVALID_VALUE';\n          break;\n        case (gl.INVALID_OPERATION):\n          label = 'INVALID_OPERATION';\n          break;\n        case (gl.INVALID_FRAMEBUFFER_OPERATION):\n          label = 'INVALID_FRAMEBUFFER_OPERATION';\n          break;\n        case (gl.OUT_OF_MEMORY):\n          label = 'OUT_OF_MEMORY';\n          break;\n        case (gl.CONTEXT_LOST_WEBGL):\n          label = 'CONTEXT_LOST_WEBGL';\n          break;\n        default:\n          label = `Unknown WebGL Error: ${error.toString(16)}`;\n      }\n      throw new Error(label);\n    }\n  }\n  deleteTexture(texture: WebGLTexture): void {\n    this.gl.deleteTexture(texture);\n  }\n  deleteProgram(program: WebGLProgram): void {\n    this.gl.deleteProgram(program);\n  }\n  getEncoder(dataType: Encoder.DataType, channels: number, usage: Encoder.Usage = Encoder.Usage.Default): DataEncoder {\n    if (this.version === 2) {\n      return new DataEncoders.RedFloat32DataEncoder(this.gl as WebGL2RenderingContext, channels);\n    }\n\n    switch (dataType) {\n      case 'float':\n        if (usage === Encoder.Usage.UploadOnly || this.isRenderFloat32Supported) {\n          return new DataEncoders.RGBAFloatDataEncoder(this.gl, channels);\n        } else {\n          return new DataEncoders.RGBAFloatDataEncoder(\n              this.gl, channels, this.textureHalfFloatExtension!.HALF_FLOAT_OES);\n        }\n      case 'int':\n        throw new Error('not implemented');\n      case 'byte':\n        return new DataEncoders.Uint8DataEncoder(this.gl, channels);\n      default:\n        throw new Error(`Invalid dataType: ${dataType}`);\n    }\n  }\n  clearActiveTextures(): void {\n    const gl = this.gl;\n    for (let unit = 0; unit < this.maxTextureImageUnits; ++unit) {\n      gl.activeTexture(gl.TEXTURE0 + unit);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n  }\n  dispose(): void {\n    if (this.disposed) {\n      return;\n    }\n    const gl = this.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteFramebuffer(this.framebuffer);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.deleteBuffer(this.vertexbuffer);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.finish();\n    this.disposed = true;\n  }\n\n  private createDefaultGeometry(): Float32Array {\n    // Sets of x,y,z(=0),s,t coordinates.\n    return new Float32Array([\n      -1.0, 1.0,  0.0, 0.0, 1.0,  // upper left\n      -1.0, -1.0, 0.0, 0.0, 0.0,  // lower left\n      1.0,  1.0,  0.0, 1.0, 1.0,  // upper right\n      1.0,  -1.0, 0.0, 1.0, 0.0   // lower right\n    ]);\n  }\n  private createVertexbuffer(): WebGLBuffer {\n    const gl = this.gl;\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n      throw new Error('createBuffer() returned null');\n    }\n    const geometry = this.createDefaultGeometry();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, geometry, gl.STATIC_DRAW);\n    this.checkError();\n    return buffer;\n  }\n  private createFramebuffer(): WebGLFramebuffer {\n    const fb = this.gl.createFramebuffer();\n    if (!fb) {\n      throw new Error('createFramebuffer returned null');\n    }\n    return fb;\n  }\n\n  private queryVitalParameters(): void {\n    const gl = this.gl;\n\n    this.isFloatTextureAttachableToFrameBuffer = this.checkFloatTextureAttachableToFrameBuffer();\n    this.isRenderFloat32Supported = this.checkRenderFloat32();\n    this.isFloat32DownloadSupported = this.checkFloat32Download();\n\n    if (this.version === 1 && !this.textureHalfFloatExtension && !this.isRenderFloat32Supported) {\n      throw new Error('both float32 and float16 TextureType are not supported');\n    }\n\n    this.isBlendSupported = !this.isRenderFloat32Supported || this.checkFloat32Blend();\n\n    // this.maxCombinedTextureImageUnits = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    this.maxTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    // this.maxCubeMapTextureSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n    // this.shadingLanguageVersion = gl.getParameter(gl.SHADING_LANGUAGE_VERSION);\n    // this.webglVendor = gl.getParameter(gl.VENDOR);\n    // this.webglVersion = gl.getParameter(gl.VERSION);\n\n    if (this.version === 2) {\n      // this.max3DTextureSize = gl.getParameter(WebGL2RenderingContext.MAX_3D_TEXTURE_SIZE);\n      // this.maxArrayTextureLayers = gl.getParameter(WebGL2RenderingContext.MAX_ARRAY_TEXTURE_LAYERS);\n      // this.maxColorAttachments = gl.getParameter(WebGL2RenderingContext.MAX_COLOR_ATTACHMENTS);\n      // this.maxDrawBuffers = gl.getParameter(WebGL2RenderingContext.MAX_DRAW_BUFFERS);\n    }\n  }\n  private getExtensions(): void {\n    if (this.version === 2) {\n      this.colorBufferFloatExtension = this.gl.getExtension('EXT_color_buffer_float');\n      this.disjointTimerQueryWebgl2Extension = this.gl.getExtension('EXT_disjoint_timer_query_webgl2');\n    } else {\n      this.textureFloatExtension = this.gl.getExtension('OES_texture_float');\n      this.textureHalfFloatExtension = this.gl.getExtension('OES_texture_half_float');\n    }\n  }\n\n  private checkFloatTextureAttachableToFrameBuffer(): boolean {\n    // test whether Float32 texture is supported:\n    // STEP.1 create a float texture\n    const gl = this.gl;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n    // STEP.2 bind a frame buffer\n    const frameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    // STEP.3 attach texture to framebuffer\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    // STEP.4 test whether framebuffer is complete\n    const isComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(frameBuffer);\n    return isComplete;\n  }\n\n  private checkRenderFloat32(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  private checkFloat32Download(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n      if (!this.gl.getExtension('WEBGL_color_buffer_float')) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  /**\n   * Check whether GL_BLEND is supported\n   */\n  private checkFloat32Blend(): boolean {\n    // it looks like currently (2019-05-08) there is no easy way to detect whether BLEND is supported\n    // https://github.com/microsoft/onnxjs/issues/145\n\n    const gl = this.gl;\n\n    let texture: WebGLTexture|null|undefined;\n    let frameBuffer: WebGLFramebuffer|null|undefined;\n    let vertexShader: WebGLShader|null|undefined;\n    let fragmentShader: WebGLShader|null|undefined;\n    let program: WebGLProgram|null|undefined;\n\n    try {\n      texture = gl.createTexture();\n      frameBuffer = gl.createFramebuffer();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n      gl.enable(gl.BLEND);\n\n      vertexShader = gl.createShader(gl.VERTEX_SHADER);\n      if (!vertexShader) {\n        return false;\n      }\n      gl.shaderSource(vertexShader, 'void main(){}');\n      gl.compileShader(vertexShader);\n\n      fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n      if (!fragmentShader) {\n        return false;\n      }\n      gl.shaderSource(fragmentShader, 'precision highp float;void main(){gl_FragColor=vec4(0.5);}');\n      gl.compileShader(fragmentShader);\n\n      program = gl.createProgram();\n      if (!program) {\n        return false;\n      }\n      gl.attachShader(program, vertexShader);\n      gl.attachShader(program, fragmentShader);\n      gl.linkProgram(program);\n      gl.useProgram(program);\n\n      gl.drawArrays(gl.POINTS, 0, 1);\n      return gl.getError() === gl.NO_ERROR;\n\n    } finally {\n      gl.disable(gl.BLEND);\n\n      if (program) {\n        gl.deleteProgram(program);\n      }\n      if (vertexShader) {\n        gl.deleteShader(vertexShader);\n      }\n      if (fragmentShader) {\n        gl.deleteShader(fragmentShader);\n      }\n      if (frameBuffer) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.deleteFramebuffer(frameBuffer);\n      }\n      if (texture) {\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.deleteTexture(texture);\n      }\n    }\n  }\n\n  beginTimer(): WebGLQuery {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      const query = gl2.createQuery() as WebGLQuery;\n      gl2.beginQuery(ext.TIME_ELAPSED_EXT, query);\n      return query;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported.');\n    }\n  }\n\n  endTimer() {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n      gl2.endQuery(ext.TIME_ELAPSED_EXT);\n      return;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n  }\n\n  isTimerResultAvailable(query: WebGLQuery): boolean {\n    let available = false, disjoint = false;\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\n      disjoint = gl2.getParameter(ext.GPU_DISJOINT_EXT);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n\n    return available && !disjoint;\n  }\n\n  getTimerResult(query: WebGLQuery): number {\n    let timeElapsed = 0;\n    if (this.version === 2) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      timeElapsed = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\n      gl2.deleteQuery(query);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n    // return miliseconds\n    return timeElapsed / 1000000;\n  }\n\n  async waitForQueryAndGetTime(query: WebGLQuery): Promise<number> {\n    await repeatedTry(() => this.isTimerResultAvailable(query));\n    return this.getTimerResult(query);\n  }\n\n  public async createAndWaitForFence(): Promise<void> {\n    const fenceContext = this.createFence(this.gl);\n    return this.pollFence(fenceContext);\n  }\n\n  private createFence(gl: WebGLRenderingContext): FenceContext {\n    let isFencePassed: () => boolean;\n    const gl2 = gl as WebGL2RenderingContext;\n    const query = gl2.fenceSync(gl2.SYNC_GPU_COMMANDS_COMPLETE, 0);\n    gl.flush();\n    if (query === null) {\n      isFencePassed = () => true;\n    } else {\n      isFencePassed = () => {\n        const status = gl2.clientWaitSync(query, 0, 0);\n        return status === gl2.ALREADY_SIGNALED || status === gl2.CONDITION_SATISFIED;\n      };\n    }\n    return {query, isFencePassed};\n  }\n\n  async pollFence(fenceContext: FenceContext) {\n    return new Promise<void>(resolve => {\n      void this.addItemToPoll(() => fenceContext.isFencePassed(), () => resolve());\n    });\n  }\n\n  private itemsToPoll: PollItem[] = [];\n\n  pollItems(): void {\n    // Find the last query that has finished.\n    const index = linearSearchLastTrue(this.itemsToPoll.map(x => x.isDoneFn));\n    for (let i = 0; i <= index; ++i) {\n      const {resolveFn} = this.itemsToPoll[i];\n      resolveFn();\n    }\n    this.itemsToPoll = this.itemsToPoll.slice(index + 1);\n  }\n\n  private async addItemToPoll(isDoneFn: () => boolean, resolveFn: () => void) {\n    this.itemsToPoll.push({isDoneFn, resolveFn});\n    if (this.itemsToPoll.length > 1) {\n      // We already have a running loop that polls.\n      return;\n    }\n    // Start a new loop that polls.\n    await repeatedTry(() => {\n      this.pollItems();\n      // End the loop if no more items to poll.\n      return this.itemsToPoll.length === 0;\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from './backend';\nimport {Graph} from './graph';\nimport {Logger, Profiler} from './instrument';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nclass KernelOp {\n  constructor(public op: Operator, public node: Graph.Node) {}\n}\n\nexport class ExecutionPlan {\n  constructor(private graph: Graph, ops: Operator[], private profiler: Readonly<Profiler>) {\n    this.initialize(ops);\n  }\n\n  initialize(ops: Operator[]) {\n    this.profiler.event('session', 'ExecutionPlan.initialize', () => {\n      const graphNodes = this.graph.getNodes();\n      if (graphNodes.length !== ops.length) {\n        throw new Error('The size of nodes and OPs do not match.');\n      }\n\n      this._ops = ops.map((op, i) => new KernelOp(op, graphNodes[i]));\n      this.reset();\n\n      // look for starter node(s)\n      this._starter = [];\n      this._ops.forEach((op, i) => {\n        let resolved = true;\n        for (const input of op.node.inputs) {\n          if (\n              !this._values[input]                                   // not an initialized input\n              && this.graph.getInputIndices().indexOf(input) === -1  // not model input\n          ) {\n            resolved = false;\n            break;\n          }\n        }\n        if (resolved) {\n          this._starter.push(i);\n        }\n      });\n    });\n  }\n\n  reset() {\n    this._values = this.graph.getValues().map(i => i.tensor);\n  }\n\n  async execute(sessionHandler: SessionHandler, modelInputs: Tensor[]): Promise<Tensor[]> {\n    return this.profiler.event('session', 'ExecutionPlan.execute', async () => {\n      // reset mediem result\n      this.reset();\n\n      // create inference handler\n      const inferenceHandler = sessionHandler.createInferenceHandler();\n\n      // populate inputs value\n      const graphInputs = this.graph.getInputIndices();\n      if (modelInputs.length !== graphInputs.length) {\n        throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${\n            modelInputs.length} expected: ${graphInputs.length}`);\n      }\n\n      modelInputs.forEach((input, i) => {\n        const index = graphInputs[i];\n        this._values[index] = input;\n      });\n\n      // prepare running sequence\n      const sequence: number[] = this._starter.slice(0);\n\n      // execution iterations\n      const graphValues = this.graph.getValues();\n      const graphNodes = this.graph.getNodes();\n\n      let rear = 0;\n      while (rear < sequence.length) {\n        const thisOpIndex = sequence[rear++];\n        const thisOp = this._ops[thisOpIndex];\n\n        // check input\n        const inputList = thisOp.node.inputs.map(i => this._values[i]);\n        if (inputList.indexOf(undefined) !== -1) {\n          throw new Error(`unresolved input detected: op: ${thisOp.node}`);\n        }\n\n        // run\n        const inputTensors = inputList as Tensor[];\n        Logger.verbose(\n            'ExecPlan',\n            `Runing op:${thisOp.node.name} (${\n                inputTensors.map((t, i) => `'${thisOp.node.inputs[i]}': ${t.type}[${t.dims.join(',')}]`).join(', ')})`);\n\n        const outputList = await this.profiler.event(\n            'node', thisOp.node.name, async () => thisOp.op.impl(inferenceHandler, inputTensors, thisOp.op.context));\n\n        // check output\n        if (outputList.length !== thisOp.node.outputs.length) {\n          throw new Error('the size of output does not match model definition.');\n        }\n\n        // fill value\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          if (this._values[j]) {\n            throw new Error(`output [${j}] already has value: op:${thisOp.node.name}`);\n          }\n          this._values[j] = output;\n        });\n\n        // resolve downstream nodes\n        const downstreamNodes = new Set<number>();\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          for (const currentDownstreamNodeIndex of graphValues[j].to) {\n            const currentDownstreamNode = graphNodes[currentDownstreamNodeIndex];\n            let resolved = true;\n            for (const k of currentDownstreamNode.inputs) {\n              if (!this._values[k]) {\n                resolved = false;\n                break;\n              }\n            }\n            if (resolved) {\n              downstreamNodes.add(currentDownstreamNodeIndex);\n            }\n          }\n        });\n        sequence.push(...downstreamNodes);\n      }\n\n      const output: Tensor[] = [];\n      for (let i = 0; i < this.graph.getOutputIndices().length; i++) {\n        const outputIndex = this.graph.getOutputIndices()[i];\n        const outputTensor = this._values[outputIndex];\n        if (outputTensor === undefined) {\n          throw new Error(`required output [${outputIndex}] does not have value`);\n        }\n        if (outputIndex === 0) {\n          await outputTensor.getData();\n        } else {\n          // eslint-disable-next-line no-unused-expressions\n          outputTensor.data;\n        }\n        output.push(outputTensor);\n      }\n      Logger.verbose('ExecPlan', 'disposing of inferenceHandler');\n      inferenceHandler.dispose();\n      return output;\n    });\n  }\n\n  _values: Array<Tensor|undefined>;\n  _ops: KernelOp[];\n  _starter: number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {onnx} from 'onnx-proto';\n\nimport {Attribute} from './attribute';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\nimport {LongUtil, MAX_CLIP, MIN_CLIP, ProtoUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport declare namespace Graph {\n  export interface Shape {\n    readonly dims: readonly number[];\n  }\n  export interface ValueType {\n    readonly tensorType: Tensor.DataType;\n    readonly shape: Shape;\n  }\n  export interface Value {\n    // the tensor data. empty for non-initialized inputs\n    readonly tensor?: Tensor;\n\n    // index to the Node where the value comes from. -1 for initializer.\n    readonly from: number;\n\n    // indices to the Nodes where the values go to.\n    readonly to: readonly number[];\n\n    // value type specification. empty for non-input values.\n    readonly type?: ValueType;\n  }\n  export interface Node {\n    // name of the node\n    readonly name: string;\n\n    // the operator type\n    readonly opType: string;\n\n    // indices to the Values where the inputs come from.\n    readonly inputs: readonly number[];\n\n    // indices to the Values where the outpus go to.\n    readonly outputs: readonly number[];\n\n    // the attributes that used by the operator\n    readonly attributes: Attribute;\n  }\n\n  /**\n   * a Transformer is an instance that allows all possible transformation operations that applied to a graph\n   */\n  export interface Transformer {\n    removeAllIdentityNodes(): void;\n    removeAllDropoutNodes(): void;\n    fuseConvActivationNodes(): void;\n    // TODO: add generic functions to manipulate the graph\n  }\n\n  // an initializer can use transformer to transform the graph\n  export interface Initializer {\n    transformGraph(transformer: Transformer): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Graph {\n  getInputIndices(): readonly number[];\n  getInputNames(): readonly string[];\n  getOutputIndices(): readonly number[];\n  getOutputNames(): readonly string[];\n  getValues(): readonly Graph.Value[];\n  getNodes(): readonly Graph.Node[];\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-redeclare\nexport const Graph = {\n  /**\n   * construct a graph from a graph protobuf type\n   */\n  from: (graphProto: onnx.IGraphProto|ortFbs.Graph, initializer?: Graph.Initializer) =>\n      new GraphImpl(graphProto, initializer),\n};\n\nclass Value implements Graph.Value {\n  constructor(valueInfo?: onnx.IValueInfoProto) {\n    this._from = undefined;\n    this._to = [];\n    this.tensor = undefined;\n    this.type = undefined;\n\n    if (valueInfo) {\n      this.type = ProtoUtil.tensorValueTypeFromProto(valueInfo.type!.tensorType!);\n    }\n  }\n\n  _from?: number;  // -1 represent from initializer\n  get from() {\n    return this._from!;\n  }\n  _to: number[];\n  get to() {\n    return this._to;\n  }\n  type?: Graph.ValueType;\n  tensor?: Tensor;\n}\n\nclass Node implements Graph.Node {\n  constructor(_nodeProto: onnx.INodeProto|ortFbs.Node, name?: string) {\n    if (_nodeProto instanceof onnx.NodeProto) {\n      this.name = _nodeProto.name;\n      this.opType = _nodeProto.opType;\n      this.attributes = new Attribute(_nodeProto.attribute);\n    } else if (_nodeProto instanceof ortFbs.Node) {\n      this.name = name ?? _nodeProto.name()!;\n      this.opType = _nodeProto.opType()!;\n      this.attributes = new Attribute(ProtoUtil.tensorAttributesFromORTFormat(_nodeProto));\n    }\n\n    this.inputs = [];\n    this.outputs = [];\n    this.executeNode = true;\n  }\n\n  name: string;\n  opType: string;\n  inputs: number[];\n  outputs: number[];\n  attributes: Attribute;\n  executeNode: boolean;\n}\n\nclass GraphImpl implements Graph, Graph.Transformer {\n  private _allData: Value[];\n\n  private _allInputIndices: number[];\n  private _allInputNames: string[];\n\n  private _allOutputIndices: number[];\n  private _allOutputNames: string[];\n\n  private _nodes: Node[];\n\n  constructor(graph: onnx.IGraphProto|ortFbs.Graph, graphInitializer?: Graph.Initializer) {\n    if (!graph) {\n      throw new TypeError('graph is empty');\n    }\n\n    // build the graph - will throw exceptions if something fatal is detected\n    this.buildGraph(graph);\n\n    // execute any transformation logic for the graph (if applicable)\n    this.transformGraph(graphInitializer);\n\n    // check for cycles and other inconsistencies - will throw exceptions if something fatal is detected\n    this.checkIsAcyclic();\n  }\n\n  getInputIndices(): readonly number[] {\n    return this._allInputIndices;\n  }\n\n  getInputNames(): readonly string[] {\n    return this._allInputNames;\n  }\n\n  getOutputIndices(): readonly number[] {\n    return this._allOutputIndices;\n  }\n\n  getOutputNames(): readonly string[] {\n    return this._allOutputNames;\n  }\n\n  getValues(): readonly Graph.Value[] {\n    return this._allData;\n  }\n\n  getNodes(): readonly Graph.Node[] {\n    return this._nodes;\n  }\n\n  private buildGraph(graph: onnx.IGraphProto|ortFbs.Graph) {\n    // build the graph - will throw exceptions if something fatal is detected\n    if (graph instanceof onnx.GraphProto) {\n      this.buildGraphFromOnnxFormat(graph);\n    } else if (graph instanceof ortFbs.Graph) {\n      this.buildGraphFromOrtFormat(graph);\n    } else {\n      throw new TypeError('Graph type is not supported.');\n    }\n  }\n  private buildGraphFromOnnxFormat(graph: onnx.IGraphProto) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    if (!graph.input) {\n      throw new Error('missing information in graph: input');\n    }\n    const inputValueNames = [];\n    for (const i of graph.input) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated input name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      inputValueNames.push(i.name!);\n    }\n\n    // scan all initializers\n    if (!graph.initializer) {\n      throw new Error('missing information in graph: initializer');\n    }\n    for (const i of graph.initializer) {\n      let index = dataIndices.get(i.name!);\n      if (index === undefined) {\n        const value = new Value();\n        value.type = {\n          shape: {dims: ProtoUtil.tensorDimsFromProto(i.dims!)},\n          tensorType: ProtoUtil.tensorDataTypeFromProto(i.dataType!)\n        };\n        index = this._allData.push(value) - 1;\n        dataIndices.set(i.name!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromProto(i);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    if (!graph.output) {\n      throw new Error('missing information in graph: output');\n    }\n    for (const i of graph.output) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated output name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(i.name!);\n    }\n\n    // scan all nodes\n    if (!graph.node) {\n      throw new Error('missing information in graph: node');\n    }\n    for (const nodeProto of graph.node) {\n      if (!nodeProto.name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          const name = `unnamed_${nodeProto.opType}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            nodeProto.name = name;\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(nodeProto.name)) {\n        throw new Error(`duplicated node name: ${nodeProto.name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto)) - 1;\n      nodesIndices.set(nodeProto.name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n      if (!nodeProto.output) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (const output of nodeProto.output) {\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType === 'Constant') {\n          if (!nodeProto.attribute || nodeProto.attribute.length !== 1 || !nodeProto.attribute[0].t) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (!nodeProto.output || nodeProto.output.length !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromProto(nodeProto.attribute[0].t);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n\n      if (!nodeProto.input) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (const input of nodeProto.input) {\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          // handle exception when opset > 9 and roi not given\n          if (input === '' && nodeProto.input.length === 3 && nodeProto.opType === 'Resize') {\n            continue;\n          }\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto.name}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n\n    return true;\n  }\n\n  private buildGraphFromOrtFormat(graph: ortFbs.Graph) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    const inputValueNames = [];\n    for (let i = 0; i < graph.inputsLength(); i++) {\n      const inputName = graph.inputs(i);\n      if (dataIndices.has(inputName)) {\n        throw new Error(`duplicated input name: ${inputName}`);\n      }\n      // Find the input typeInfo from nodeargs\n      for (let j = 0; j < graph.nodeArgsLength(); j++) {\n        if (graph.nodeArgs(j)?.name() === inputName) {\n          const value = new Value();\n          const valueType = graph.nodeArgs(j)?.type()?.valueType();\n          if (valueType !== ortFbs.TypeInfoValue.tensor_type) {\n            throw new Error('Unexpected value type for the nodeArg.');\n          }\n          const valueInfo = graph.nodeArgs(j)!.type()!.value(new ortFbs.TensorTypeAndShape())!;\n          const type = ProtoUtil.tensorDataTypeFromProto(valueInfo.elemType());\n          const shape = valueInfo.shape()!;\n          const dims = [];\n          for (let k = 0; k < shape.dimLength()!; k++) {\n            dims.push(LongUtil.longToNumber(shape.dim(k)!.value()!.dimValue()!));\n          }\n          value.type = {shape: {dims}, tensorType: type};\n          const currentIndex = this._allData.push(value) - 1;\n          dataIndices.set(inputName, currentIndex);\n          inputValueNames.push(inputName);\n        }\n      }\n    }\n    // check initializers\n    for (let i = 0; i < graph.initializersLength(); i++) {\n      const initializer = graph.initializers(i)!;\n      let index = dataIndices.get(initializer.name()!);\n      if (index === undefined) {\n        const value = new Value();\n        const dims = ProtoUtil.tensorDimsFromORTFormat(initializer);\n        const type = ProtoUtil.tensorDataTypeFromProto(initializer.dataType());\n        value.type = {shape: {dims}, tensorType: type};\n        index = this._allData.push(value) - 1;\n        dataIndices.set(initializer.name()!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromOrtTensor(initializer);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    for (let i = 0; i < graph.outputsLength(); i++) {\n      const outputName = graph.outputs(i);\n      if (dataIndices.has(outputName)) {\n        throw new Error(`duplicated output name: ${outputName}`);\n      }\n      const currentIndex = this._allData.push(new Value()) - 1;\n      dataIndices.set(outputName, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(outputName);\n    }\n\n    // scan all nodes\n    if (!graph.nodes) {\n      throw new Error('missing information in graph: node');\n    }\n    for (let i = 0; i < graph.nodesLength(); i++) {\n      const nodeProto = graph.nodes(i);\n      let name = nodeProto!.name();\n      if (!name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          name = `unnamed_${nodeProto!.opType()}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            // an unique name is found. break.\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(name)) {\n        throw new Error(`duplicated node name: ${name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto!, name)) - 1;\n      nodesIndices.set(name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i);\n      if (nodeProto == null) {\n        throw new Error(`No node exists at index ${i}`);\n      }\n      if (nodeProto?.outputsLength() === 0) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto?.outputsLength(); j++) {\n        const output = nodeProto?.outputs(j);\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType() === 'Constant') {\n          if (nodeProto.attributesLength() !== 1 || !nodeProto.attributes(0)!.t()) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (nodeProto.outputsLength() !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromOrtTensor(nodeProto.attributes(0)!.t()!);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i)!;\n\n      if (nodeProto.inputsLength() === 0) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto.inputsLength()!; j++) {\n        const input = nodeProto.inputs(j)!;\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto!.name()}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n  }\n\n  private checkIsAcyclic() {\n    // go through the graph and check for cycles or other fatal inconsistencies\n    const starters: Set<number> = new Set<number>();\n    this._allInputIndices.forEach(i => {\n      const data = this._allData[i];\n      data._to.forEach(j => {\n        starters.add(j);\n      });\n    });\n\n    // Iterative DFS to check for cycles\n    const nodesStack = Array.from(starters);\n    const nodesState = new Array<string>(this._nodes.length).fill('white');\n\n    while (nodesStack.length > 0) {\n      const nodeIndex = nodesStack.pop()!;\n      // this node has now been processed completely. Mark this node 'black' to denote this.\n      if (nodesState[nodeIndex] === 'gray') {\n        nodesState[nodeIndex] = 'black';\n      } else {\n        // this node is under processing stage. mark this node 'gray' to denote this.\n        nodesStack.push(nodeIndex);\n        nodesState[nodeIndex] = 'gray';\n\n        this._nodes[nodeIndex].outputs.forEach((outgoingEdgeIndex) => {\n          const data = this._allData[outgoingEdgeIndex];\n          if (typeof data.tensor !== 'undefined') {\n            throw new Error('node outputs should not be initialized');\n          }\n          if (data._from !== nodeIndex) {\n            throw new Error('from property of the Value object doesn\\'t match index of Node being processed');\n          }\n          data._to.forEach((downstreamNodeIndex) => {\n            // back edge found - cyclic\n            if (nodesState[downstreamNodeIndex] === 'gray') {\n              throw new Error('model graph is cyclic');\n            }\n            // tree edge found - continue processing by adding it to stack\n            else if (nodesState[downstreamNodeIndex] === 'white') {\n              nodesStack.push(downstreamNodeIndex);\n            }\n          });\n        });\n      }\n    }\n  }\n\n  private transformGraph(graphInitializer?: Graph.Initializer): void {\n    // apply common transform\n    this.removeAllIdentityNodes();\n    this.removeAllDropoutNodes();\n    this.fuseConvActivationNodes();\n    // apply initializer specific transform\n    if (graphInitializer) {\n      graphInitializer.transformGraph(this);\n    }\n\n    // finalize graph\n    this.finalizeGraph();\n  }\n\n  /**\n   * finalize the graph.\n   *\n   * this function should be called after all the transformation completed.\n   * this function removes all unnecessary nodes and values from the graph\n   */\n  finalizeGraph() {\n    let offset = 0;\n    // delete all nodes that are not being executed\n    // The graph is represented using these two arrays\n    // this._nodes - Array holding the kernels to execute - each entry is a kernel pointing to this._allData\n    // this._allData - hold 2 fields - to [] & from - these feileds hold the graph map for inputs and outputs per node\n    // newIndices - remapping the graph after reading the flag 'executeNode'\n    const newIndices = new Array<number>(this._nodes.length, 0);\n    let nodePossition = 0;\n\n    for (let i = 0; i < this._nodes.length; i++) {\n      // giving new indexes to the nodes based on execution flag\n      newIndices[i] = nodePossition;\n      if (this._nodes[i].executeNode) {\n        if (nodePossition !== i) {\n          this._nodes[nodePossition] = this._nodes[i];\n        }\n        nodePossition++;\n\n      } else {\n        // delete all output values\n        this._nodes[i].outputs.forEach(ind => {\n          this._allData[ind]._from = -2;\n        });\n      }\n    }\n\n    // removing the unused nodes\n    this._nodes.splice(nodePossition, this._nodes.length - nodePossition);\n\n    // Updating this._allData according to the new this._nodes\n    for (let i = 0; i < this._allData.length; i++) {\n      const currentData = this._allData[i];\n      if (currentData._from !== undefined && currentData._from !== -1 && currentData._from !== -2) {\n        currentData._from = newIndices[currentData._from];\n      }\n\n      for (let j = 0; j < currentData._to.length; j++) {\n        if (currentData._to[j] >= 0) {\n          currentData._to[j] = newIndices[currentData._to[j]];\n        } else {\n          throw new Error('Trying to update a removed node');\n        }\n      }\n    }\n\n    offset = 0;\n    // delete all values that are not being referenced\n    for (let i = 0; i < this._allData.length; i++) {\n      // if current value is neither linked to next node, nor an output value, remove it.\n      if (this._allData[i].from === -2 && this._allOutputIndices.indexOf(i + offset) === -1) {\n        offset++;\n        this._allData.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        let ind = -1;\n        // if current value is neither an input value nor an initializer, find the node it's\n        // coming from and update the corresponding node output\n        if (this._allData[i].from !== undefined && this._allData[i].from !== -1) {\n          ind = this._nodes[this._allData[i].from].outputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[this._allData[i].from].outputs[ind] = i;\n          }\n        } else {\n          // if current value is an input value, update its reference in inputIndices\n          ind = this._allInputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allInputIndices[ind] = i;\n          }\n        }\n\n        // find the node that the current value is linking to and update its input reference\n        this._allData[i].to.forEach(node => {\n          ind = this._nodes[node].inputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[node].inputs[ind] = i;\n          }\n        });\n        if (this._allData[i].to.length === 0) {\n          // if current value is a graph output, update its reference in outputIndices\n          ind = this._allOutputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allOutputIndices[ind] = i;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Delete the specifed node. Assume the node has one incoming input and the first output connected to other nodes.\n   * An input validation must be done before calling this function.\n   * @param nodeIndex The index of node to be deleted\n   */\n  private deleteNode(nodeIndex: number) {\n    const node = this._nodes[nodeIndex];\n    if (node.outputs.length > 1) {\n      for (let i = 1; i < node.outputs.length; i++) {\n        if (this._allData[node.outputs[i]].to.length > 0) {\n          throw new Error('Node deletion with more than one output connected to other nodes is not supported. ');\n        }\n      }\n    }\n\n    // this node wil not be executed\n    node.executeNode = false;\n    const inputValueIndex = node.inputs[0];\n    const outputValueIndex = node.outputs[0];\n    const nodesConsumingOutput = this._allData[outputValueIndex].to;\n\n    // remove this node from the to property of the input Value\n    for (let i = 0; i < node.inputs.length; i++) {\n      const delIndex = this._allData[node.inputs[i]].to.indexOf(nodeIndex);\n      // should not happen\n      if (delIndex === -1) {\n        throw new Error('The Value object doesn\\'t have the current Node in it\\'s \\'to\\' property ');\n      }\n      this._allData[node.inputs[i]].to.splice(delIndex, 1);\n    }\n\n    // clear node indices consuming this output Value\n    this._allData[outputValueIndex]._to = [];\n\n    // if the output of this node is a graph output, adjust the index appropriately\n    const index = this._allOutputIndices.indexOf(outputValueIndex);\n    if (index !== -1) {\n      this._allOutputIndices[index] = inputValueIndex;\n    }\n\n    // override the inputs for nodes consuming this node's output with the input to this node\n    if (nodesConsumingOutput && nodesConsumingOutput.length > 0) {\n      for (const nodeIndex of nodesConsumingOutput) {\n        const replaceIndex = this._nodes[nodeIndex].inputs.indexOf(outputValueIndex);\n        // should not happen\n        if (replaceIndex === -1) {\n          throw new Error('The Node object doesn\\'t have the output Value in it\\'s \\'inputs\\' property ');\n        }\n        this._nodes[nodeIndex].inputs[replaceIndex] = inputValueIndex;\n        this._allData[inputValueIndex].to.push(nodeIndex);\n      }\n    }\n  }\n\n  removeAllDropoutNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Dropout' nodes so that no time is wasted in execution\n      if (node.opType === 'Dropout') {\n        // the node should have exactly 1 input and 1 or 2 outputs\n        if (node.inputs.length !== 1) {\n          throw new Error('Dropout nodes should only contain one input. ');\n        }\n        if (node.outputs.length !== 1 && node.outputs.length !== 2) {\n          throw new Error('Dropout nodes should contain either 1 or 2 output(s)');\n        }\n        // the second output should not be referenced by any other node\n        if (node.outputs.length === 2 && this._allData[node.outputs[1]]._to.length !== 0) {\n          throw new Error('Dropout nodes\\'s second output should not be referenced by other nodes');\n        }\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  removeAllIdentityNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Identity' nodes so that no time is wasted in execution\n      if (node.opType === 'Identity') {\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  isActivation(n: Node): boolean {\n    switch (n.opType) {\n      // TODO: add other activation methods\n      case 'Relu':\n      case 'Sigmoid':\n      case 'Clip':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  fuseConvActivationNodes() {\n    for (const node of this._nodes) {\n      if (node.opType === 'Conv') {\n        const next = this._allData[node.outputs[0]]._to;\n        if (next.length === 1 && this.isActivation(this._nodes[next[0]])) {\n          const child = this._nodes[next[0]];\n          if (child.opType === 'Clip') {\n            if (child.inputs.length === 1) {\n              try {\n                node.attributes.set(\n                    'activation_params', 'floats',\n                    [child.attributes.getFloat('min'), child.attributes.getFloat('max')]);\n              } catch (e) {\n                node.attributes.set('activation_params', 'floats', [MIN_CLIP, MAX_CLIP]);\n              }\n            } else if (\n                child.inputs.length >= 3 && this._allData[child.inputs[1]].tensor !== undefined &&\n                this._allData[child.inputs[2]].tensor !== undefined) {\n              node.attributes.set('activation_params', 'floats', [\n                this._allData[child.inputs[1]].tensor!.floatData[0], this._allData[child.inputs[2]].tensor!.floatData[0]\n              ]);\n            } else {\n              // Skip fusion with clip node since clip min and clip max are not coming from initializer\n              continue;\n            }\n          }\n          node.attributes.set('activation', 'string', (child.opType));\n          this.deleteNode(next[0]);\n        }\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {WebGLContext} from './backends/webgl/webgl-context';\n\nexport declare namespace Logger {\n  export interface SeverityTypeMap {\n    verbose: 'v';\n    info: 'i';\n    warning: 'w';\n    error: 'e';\n    fatal: 'f';\n  }\n\n  export type Severity = keyof SeverityTypeMap;\n\n  export type Provider = 'none'|'console';\n\n  /**\n   * Logging config that used to control the behavior of logger\n   */\n  export interface Config {\n    /**\n     * Specify the logging provider. 'console' by default\n     */\n    provider?: Provider;\n    /**\n     * Specify the minimal logger serverity. 'warning' by default\n     */\n    minimalSeverity?: Logger.Severity;\n    /**\n     * Whether to output date time in log. true by default\n     */\n    logDateTime?: boolean;\n    /**\n     * Whether to output source information (Not yet supported). false by default\n     */\n    logSourceLocation?: boolean;\n  }\n\n  export interface CategorizedLogger {\n    verbose(content: string): void;\n    info(content: string): void;\n    warning(content: string): void;\n    error(content: string): void;\n    fatal(content: string): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Logger {\n  (category: string): Logger.CategorizedLogger;\n\n  verbose(content: string): void;\n  verbose(category: string, content: string): void;\n  info(content: string): void;\n  info(category: string, content: string): void;\n  warning(content: string): void;\n  warning(category: string, content: string): void;\n  error(content: string): void;\n  error(category: string, content: string): void;\n  fatal(content: string): void;\n  fatal(category: string, content: string): void;\n\n  /**\n   * Reset the logger configuration.\n   * @param config specify an optional default config\n   */\n  reset(config?: Logger.Config): void;\n  /**\n   * Set the logger's behavior on the given category\n   * @param category specify a category string. If '*' is specified, all previous configuration will be overwritten. If\n   * '' is specified, the default behavior will be updated.\n   * @param config the config object to indicate the logger's behavior\n   */\n  set(category: string, config: Logger.Config): void;\n\n  /**\n   * Set the logger's behavior from ort-common env\n   * @param env the env used to set logger. Currently only setting loglevel is supported through Env.\n   */\n  setWithEnv(env: Env): void;\n}\n\ninterface LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string): void;\n}\nclass NoOpLoggerProvider implements LoggerProvider {\n  log(_severity: Logger.Severity, _content: string, _category?: string) {\n    // do nothing\n  }\n}\nclass ConsoleLoggerProvider implements LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string) {\n    // eslint-disable-next-line no-console\n    console.log(`${this.color(severity)} ${category ? '\\x1b[35m' + category + '\\x1b[0m ' : ''}${content}`);\n  }\n\n  private color(severity: Logger.Severity) {\n    switch (severity) {\n      case 'verbose':\n        return '\\x1b[34;40mv\\x1b[0m';\n      case 'info':\n        return '\\x1b[32mi\\x1b[0m';\n      case 'warning':\n        return '\\x1b[30;43mw\\x1b[0m';\n      case 'error':\n        return '\\x1b[31;40me\\x1b[0m';\n      case 'fatal':\n        return '\\x1b[101mf\\x1b[0m';\n      default:\n        throw new Error(`unsupported severity: ${severity}`);\n    }\n  }\n}\n\nconst SEVERITY_VALUE = {\n  verbose: 1000,\n  info: 2000,\n  warning: 4000,\n  error: 5000,\n  fatal: 6000\n};\n\nconst LOGGER_PROVIDER_MAP: {readonly [provider: string]: Readonly<LoggerProvider>} = {\n  ['none']: new NoOpLoggerProvider(),\n  ['console']: new ConsoleLoggerProvider()\n};\nconst LOGGER_DEFAULT_CONFIG = {\n  provider: 'console',\n  minimalSeverity: 'warning',\n  logDateTime: true,\n  logSourceLocation: false\n};\nlet LOGGER_CONFIG_MAP:\n    {[category: string]: Readonly<Required<Logger.Config>>} = {['']: LOGGER_DEFAULT_CONFIG as Required<Logger.Config>};\n\nfunction log(category: string): Logger.CategorizedLogger;\nfunction log(severity: Logger.Severity, content: string): void;\nfunction log(severity: Logger.Severity, category: string, content: string): void;\nfunction log(severity: Logger.Severity, arg1: string, arg2?: string): void;\nfunction log(\n    arg0: string|Logger.Severity, arg1?: string, arg2?: string|number, arg3?: number): Logger.CategorizedLogger|void {\n  if (arg1 === undefined) {\n    // log(category: string): Logger.CategorizedLogger;\n    return createCategorizedLogger(arg0);\n  } else if (arg2 === undefined) {\n    // log(severity, content);\n    logInternal(arg0 as Logger.Severity, arg1, 1);\n  } else if (typeof arg2 === 'number' && arg3 === undefined) {\n    // log(severity, content, stack)\n    logInternal(arg0 as Logger.Severity, arg1, arg2);\n  } else if (typeof arg2 === 'string' && arg3 === undefined) {\n    // log(severity, category, content)\n    logInternal(arg0 as Logger.Severity, arg2, 1, arg1);\n  } else if (typeof arg2 === 'string' && typeof arg3 === 'number') {\n    // log(severity, category, content, stack)\n    logInternal(arg0 as Logger.Severity, arg2, arg3, arg1);\n  } else {\n    throw new TypeError('input is valid');\n  }\n}\n\nfunction createCategorizedLogger(category: string): Logger.CategorizedLogger {\n  return {\n    verbose: log.verbose.bind(null, category),\n    info: log.info.bind(null, category),\n    warning: log.warning.bind(null, category),\n    error: log.error.bind(null, category),\n    fatal: log.fatal.bind(null, category)\n  };\n}\n\n// NOTE: argument 'category' is put the last parameter beacause typescript\n// doesn't allow optional argument put in front of required argument. This\n// order is different from a usual logging API.\nfunction logInternal(severity: Logger.Severity, content: string, stack: number, category?: string) {\n  const config = LOGGER_CONFIG_MAP[category || ''] || LOGGER_CONFIG_MAP[''];\n  if (SEVERITY_VALUE[severity] < SEVERITY_VALUE[config.minimalSeverity]) {\n    return;\n  }\n\n  if (config.logDateTime) {\n    content = `${new Date().toISOString()}|${content}`;\n  }\n\n  if (config.logSourceLocation) {\n    // TODO: calculate source location from 'stack'\n  }\n\n  LOGGER_PROVIDER_MAP[config.provider].log(severity, content, category);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace log {\n  export function verbose(content: string): void;\n  export function verbose(category: string, content: string): void;\n  export function verbose(arg0: string, arg1?: string) {\n    log('verbose', arg0, arg1);\n  }\n  export function info(content: string): void;\n  export function info(category: string, content: string): void;\n  export function info(arg0: string, arg1?: string) {\n    log('info', arg0, arg1);\n  }\n  export function warning(content: string): void;\n  export function warning(category: string, content: string): void;\n  export function warning(arg0: string, arg1?: string) {\n    log('warning', arg0, arg1);\n  }\n  export function error(content: string): void;\n  export function error(category: string, content: string): void;\n  export function error(arg0: string, arg1?: string) {\n    log('error', arg0, arg1);\n  }\n  export function fatal(content: string): void;\n  export function fatal(category: string, content: string): void;\n  export function fatal(arg0: string, arg1?: string) {\n    log('fatal', arg0, arg1);\n  }\n\n  export function reset(config?: Logger.Config): void {\n    LOGGER_CONFIG_MAP = {};\n    set('', config || {});\n  }\n  export function set(category: string, config: Logger.Config): void {\n    if (category === '*') {\n      reset(config);\n    } else {\n      const previousConfig = LOGGER_CONFIG_MAP[category] || LOGGER_DEFAULT_CONFIG;\n      LOGGER_CONFIG_MAP[category] = {\n        provider: config.provider || previousConfig.provider,\n        minimalSeverity: config.minimalSeverity || previousConfig.minimalSeverity,\n        logDateTime: (config.logDateTime === undefined) ? previousConfig.logDateTime : config.logDateTime,\n        logSourceLocation: (config.logSourceLocation === undefined) ? previousConfig.logSourceLocation :\n                                                                      config.logSourceLocation\n      };\n    }\n\n    // TODO: we want to support wildcard or regex?\n  }\n\n  export function setWithEnv(env: Env): void {\n    const config: Logger.Config = {};\n    if (env.logLevel) {\n      config.minimalSeverity = env.logLevel as Logger.Severity;\n    }\n    set('', config);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare, @typescript-eslint/naming-convention\nexport const Logger: Logger = log;\n\nexport declare namespace Profiler {\n  export interface Config {\n    maxNumberEvents?: number;\n    flushBatchSize?: number;\n    flushIntervalInMilliseconds?: number;\n  }\n\n  export type EventCategory = 'session'|'node'|'op'|'backend';\n\n  export interface Event {\n    end(): void|Promise<void>;\n  }\n}\n// TODO\n// class WebGLEvent implements Profiler.Event {}\n\nclass Event implements Profiler.Event {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number,\n      private endCallback: (e: Event) => void|Promise<void>, public timer?: WebGLQuery, public ctx?: WebGLContext) {}\n\n  async end() {\n    return this.endCallback(this);\n  }\n\n  async checkTimer(): Promise<number> {\n    if (this.ctx === undefined || this.timer === undefined) {\n      throw new Error('No webgl timer found');\n    } else {\n      this.ctx.endTimer();\n      return this.ctx.waitForQueryAndGetTime(this.timer);\n    }\n  }\n}\n\nclass EventRecord {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number, public endTime: number) {}\n}\n\nexport class Profiler {\n  static create(config?: Profiler.Config): Profiler {\n    if (config === undefined) {\n      return new this();\n    }\n    return new this(config.maxNumberEvents, config.flushBatchSize, config.flushIntervalInMilliseconds);\n  }\n\n  private constructor(maxNumberEvents?: number, flushBatchSize?: number, flushIntervalInMilliseconds?: number) {\n    this._started = false;\n    this._maxNumberEvents = maxNumberEvents === undefined ? 10000 : maxNumberEvents;\n    this._flushBatchSize = flushBatchSize === undefined ? 10 : flushBatchSize;\n    this._flushIntervalInMilliseconds = flushIntervalInMilliseconds === undefined ? 5000 : flushIntervalInMilliseconds;\n  }\n\n  // start profiling\n  start() {\n    this._started = true;\n    this._timingEvents = [];\n    this._flushTime = now();\n    this._flushPointer = 0;\n  }\n\n  // stop profiling\n  stop() {\n    this._started = false;\n    for (; this._flushPointer < this._timingEvents.length; this._flushPointer++) {\n      this.logOneEvent(this._timingEvents[this._flushPointer]);\n    }\n  }\n\n  // create an event scope for the specific function\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T, ctx?: WebGLContext): T;\n  event<T>(category: Profiler.EventCategory, name: string, func: () => Promise<T>, ctx?: WebGLContext): Promise<T>;\n\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T | Promise<T>, ctx?: WebGLContext): T\n      |Promise<T> {\n    const event = this._started ? this.begin(category, name, ctx) : undefined;\n    let isPromise = false;\n\n    const res = func();\n\n    // we consider a then-able object is a promise\n    if (res && typeof (res as Promise<T>).then === 'function') {\n      isPromise = true;\n      return new Promise<T>((resolve, reject) => {\n        (res as Promise<T>)\n            .then(\n                async value => {  // fulfilled\n                  if (event) {\n                    await event.end();\n                  }\n                  resolve(value);\n                },\n                async reason => {  // rejected\n                  if (event) {\n                    await event.end();\n                  }\n                  reject(reason);\n                });\n      });\n    }\n    if (!isPromise && event) {\n      const eventRes = event.end();\n      if (eventRes && typeof eventRes.then === 'function') {\n        return new Promise<T>((resolve, reject) => {\n          (eventRes).then(\n              () => {  // fulfilled\n                resolve(res);\n              },\n              (reason) => {  // rejected\n                reject(reason);\n              });\n        });\n      }\n    }\n    return res;\n  }\n\n  // begin an event\n  begin(category: Profiler.EventCategory, name: string, ctx?: WebGLContext): Event {\n    if (!this._started) {\n      throw new Error('profiler is not started yet');\n    }\n    if (ctx === undefined) {\n      const startTime = now();\n      this.flush(startTime);\n      return new Event(category, name, startTime, e => this.endSync(e));\n    } else {\n      const timer: WebGLQuery = ctx.beginTimer();\n      return new Event(category, name, 0, async e => this.end(e), timer, ctx);\n    }\n  }\n\n  // end the specific event\n  private async end(event: Event): Promise<void> {\n    const endTime: number = await event.checkTimer();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private endSync(event: Event): void {\n    const endTime: number = now();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private logOneEvent(event: EventRecord) {\n    Logger.verbose(\n        `Profiler.${event.category}`,\n        `${(event.endTime - event.startTime).toFixed(2)}ms on event '${event.name}' at ${event.endTime.toFixed(2)}`);\n  }\n\n  private flush(currentTime: number) {\n    if (this._timingEvents.length - this._flushPointer >= this._flushBatchSize ||\n        currentTime - this._flushTime >= this._flushIntervalInMilliseconds) {\n      // should flush when either batch size accumlated or interval elepsed\n\n      for (const previousPointer = this._flushPointer; this._flushPointer < previousPointer + this._flushBatchSize &&\n           this._flushPointer < this._timingEvents.length;\n           this._flushPointer++) {\n        this.logOneEvent(this._timingEvents[this._flushPointer]);\n      }\n\n      this._flushTime = now();\n    }\n  }\n\n  get started() {\n    return this._started;\n  }\n  private _started = false;\n  private _timingEvents: EventRecord[];\n\n  private readonly _maxNumberEvents: number;\n\n  private readonly _flushBatchSize: number;\n  private readonly _flushIntervalInMilliseconds: number;\n\n  private _flushTime: number;\n  private _flushPointer = 0;\n}\n\n/**\n * returns a number to represent the current timestamp in a resolution as high as possible.\n */\nexport const now = (typeof performance !== 'undefined' && performance.now) ? () => performance.now() : Date.now;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {OpSet} from './opset';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {LongUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport class Model {\n  // empty model\n  constructor() {}\n\n  load(buf: Uint8Array, graphInitializer?: Graph.Initializer, isOrtFormat?: boolean): void {\n    if (!isOrtFormat) {\n      // isOrtFormat === false || isOrtFormat === undefined\n      try {\n        this.loadFromOnnxFormat(buf, graphInitializer);\n        return;\n      } catch (e) {\n        if (isOrtFormat !== undefined) {\n          throw e;\n        }\n      }\n    }\n\n    this.loadFromOrtFormat(buf, graphInitializer);\n  }\n\n  private loadFromOnnxFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const modelProto = onnx.ModelProto.decode(buf);\n    const irVersion = LongUtil.longToNumber(modelProto.irVersion);\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n\n    this._opsets =\n        modelProto.opsetImport.map(i => ({domain: i.domain as string, version: LongUtil.longToNumber(i.version!)}));\n\n    this._graph = Graph.from(modelProto.graph!, graphInitializer);\n  }\n\n  private loadFromOrtFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const fb = new flatbuffers.ByteBuffer(buf);\n    const ortModel = ortFbs.InferenceSession.getRootAsInferenceSession(fb).model()!;\n    const irVersion = LongUtil.longToNumber(ortModel.irVersion());\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n    this._opsets = [];\n    for (let i = 0; i < ortModel.opsetImportLength(); i++) {\n      const opsetId = ortModel.opsetImport(i)!;\n      this._opsets.push({domain: opsetId?.domain() as string, version: LongUtil.longToNumber(opsetId.version()!)});\n    }\n\n    this._graph = Graph.from(ortModel.graph()!, graphInitializer);\n  }\n\n  private _graph: Graph;\n  get graph(): Graph {\n    return this._graph;\n  }\n\n  private _opsets: OpSet[];\n  get opsets(): readonly OpSet[] {\n    return this._opsets;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from './backend';\nimport {Graph} from './graph';\nimport {Tensor} from './tensor';\n\nexport type OperatorImplementation<T> = (inferenceHandler: InferenceHandler, inputs: Tensor[], context: T) => Tensor[];\nexport type OperatorInitialization<T> = (node: Graph.Node, graph: Graph) => T;\n\nexport interface Operator {\n  readonly impl: OperatorImplementation<unknown>;\n  readonly context: Graph.Node|unknown;\n}\n\nexport const NUMBER_TYPES: readonly Tensor.DataType[] =\n    ['float32', 'float64', 'int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const INT_TYPES: readonly Tensor.DataType[] = ['int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const FLOAT_TYPES: readonly Tensor.DataType[] = ['float32', 'float64'];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from './graph';\nimport {OperatorImplementation, OperatorInitialization} from './operators';\n\nexport interface OpSet {\n  domain: string;\n  version: number;\n}\nexport declare namespace OpSet {\n  /**\n   * Domain of an opset, it can be an empty string(default value, represent for ai.onnx), or 'ai.onnx.ml'\n   */\n  type Domain = ''|'ai.onnx.ml'|'com.microsoft';\n  /**\n   * A resolve rule consists of 4 or 5 items: opType, opSetDomain, versionSelector, operatorImplementation and\n   * operatorInitialization (optional)\n   */\n  type ResolveRule = [\n    string, Domain, string, OperatorImplementation<Graph.Node>\n  ]|[string, Domain, string, OperatorImplementation<unknown>, OperatorInitialization<unknown>];\n}\n\nexport function resolveOperator(node: Graph.Node, opsets: readonly OpSet[], rules: readonly OpSet.ResolveRule[]) {\n  for (const rule of rules) {\n    const opType = rule[0];\n    const domain = rule[1];\n    const versionSelector = rule[2];\n    const opImpl = rule[3];\n    const opInit = rule[4];\n\n    if (node.opType === opType) {  // operator type matches\n      for (const opset of opsets) {\n        // opset '' and 'ai.onnx' are considered the same.\n        if (opset.domain === domain || (opset.domain === 'ai.onnx' && domain === '')) {  // opset domain found\n          if (matchSelector(opset.version, versionSelector)) {\n            return {opImpl, opInit};\n          }\n        }\n      }\n    }\n  }\n\n  throw new TypeError(`cannot resolve operator '${node.opType}' with opsets: ${\n      opsets.map(set => `${set.domain || 'ai.onnx'} v${set.version}`).join(', ')}`);\n}\n\nfunction matchSelector(version: number, selector: string): boolean {\n  if (selector.endsWith('+')) {\n    // minimum version match ('7+' expects version>=7)\n    const rangeStart = Number.parseInt(selector.substring(0, selector.length - 1), 10);\n    return !isNaN(rangeStart) && rangeStart <= version;\n  } else if (selector.split('-').length === 2) {\n    // range match ('6-8' expects 6<=version<=8)\n    const pair = selector.split('-');\n    const rangeStart = Number.parseInt(pair[0], 10);\n    const rangeEnd = Number.parseInt(pair[1], 10);\n    return !isNaN(rangeStart) && !isNaN(rangeEnd) && rangeStart <= version && version <= rangeEnd;\n  } else {\n    // exact match ('7' expects version===7)\n    return Number.parseInt(selector, 10) === version;\n  }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n/* eslint-disable */\n\nimport {flatbuffers} from 'flatbuffers';\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum AttributeType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    INT = 2,\n    STRING = 3,\n    TENSOR = 4,\n    GRAPH = 5,\n    FLOATS = 6,\n    INTS = 7,\n    STRINGS = 8,\n    TENSORS = 9,\n    GRAPHS = 10,\n    SPARSE_TENSOR = 11,\n    SPARSE_TENSORS = 12\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum DimensionValueType {UNKNOWN = 0, VALUE = 1, PARAM = 2}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TensorDataType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    UINT8 = 2,\n    INT8 = 3,\n    UINT16 = 4,\n    INT16 = 5,\n    INT32 = 6,\n    INT64 = 7,\n    STRING = 8,\n    BOOL = 9,\n    FLOAT16 = 10,\n    DOUBLE = 11,\n    UINT32 = 12,\n    UINT64 = 13,\n    COMPLEX64 = 14,\n    COMPLEX128 = 15,\n    BFLOAT16 = 16\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum NodeType {Primitive = 0, Fused = 1}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TypeInfoValue {NONE = 0, tensor_type = 1, sequence_type = 2, map_type = 3}\n}\n\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Shape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Shape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Shape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getSizePrefixedRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Dimension= obj\n     * @returns onnxruntime.experimental.fbs.Dimension\n     */\n    dim(index: number, obj?: onnxruntime.experimental.fbs.Dimension): onnxruntime.experimental.fbs.Dimension|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Dimension())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    dimLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startShape(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimOffset\n     */\n    static addDim(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, dimOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createShape(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Shape.startShape(builder);\n      Shape.addDim(builder, dimOffset);\n      return Shape.endShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Dimension {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Dimension\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Dimension {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getSizePrefixedRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.DimensionValue= obj\n     * @returns onnxruntime.experimental.fbs.DimensionValue|null\n     */\n    value(obj?: onnxruntime.experimental.fbs.DimensionValue): onnxruntime.experimental.fbs.DimensionValue|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.DimensionValue())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimension(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimension(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimension(\n        builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset,\n        denotationOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Dimension.startDimension(builder);\n      Dimension.addValue(builder, valueOffset);\n      Dimension.addDenotation(builder, denotationOffset);\n      return Dimension.endDimension(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class DimensionValue {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns DimensionValue\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): DimensionValue {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getSizePrefixedRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.DimensionValueType\n     */\n    dimType(): onnxruntime.experimental.fbs.DimensionValueType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    dimValue(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    dimParam(): string|null;\n    dimParam(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    dimParam(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimensionValue(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.DimensionValueType dimType\n     */\n    static addDimType(builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType) {\n      builder.addFieldInt8(0, dimType, onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long dimValue\n     */\n    static addDimValue(builder: flatbuffers.Builder, dimValue: flatbuffers.Long) {\n      builder.addFieldInt64(1, dimValue, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimParamOffset\n     */\n    static addDimParam(builder: flatbuffers.Builder, dimParamOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimParamOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimensionValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimensionValue(\n        builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType,\n        dimValue: flatbuffers.Long, dimParamOffset: flatbuffers.Offset): flatbuffers.Offset {\n      DimensionValue.startDimensionValue(builder);\n      DimensionValue.addDimType(builder, dimType);\n      DimensionValue.addDimValue(builder, dimValue);\n      DimensionValue.addDimParam(builder, dimParamOffset);\n      return DimensionValue.endDimensionValue(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TensorTypeAndShape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TensorTypeAndShape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TensorTypeAndShape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape): TensorTypeAndShape {\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getSizePrefixedRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape):\n        TensorTypeAndShape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    elemType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Shape= obj\n     * @returns onnxruntime.experimental.fbs.Shape|null\n     */\n    shape(obj?: onnxruntime.experimental.fbs.Shape): onnxruntime.experimental.fbs.Shape|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Shape())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensorTypeAndShape(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType elemType\n     */\n    static addElemType(builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, elemType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset shapeOffset\n     */\n    static addShape(builder: flatbuffers.Builder, shapeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, shapeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensorTypeAndShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensorTypeAndShape(\n        builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType,\n        shapeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TensorTypeAndShape.startTensorTypeAndShape(builder);\n      TensorTypeAndShape.addElemType(builder, elemType);\n      TensorTypeAndShape.addShape(builder, shapeOffset);\n      return TensorTypeAndShape.endTensorTypeAndShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class MapType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns MapType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): MapType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getSizePrefixedRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    keyType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    valueType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startMapType(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType keyType\n     */\n    static addKeyType(builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, keyType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueTypeOffset\n     */\n    static addValueType(builder: flatbuffers.Builder, valueTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, valueTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endMapType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createMapType(\n        builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType,\n        valueTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      MapType.startMapType(builder);\n      MapType.addKeyType(builder, keyType);\n      MapType.addValueType(builder, valueTypeOffset);\n      return MapType.endMapType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SequenceType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SequenceType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SequenceType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getSizePrefixedRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    elemType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSequenceType(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset elemTypeOffset\n     */\n    static addElemType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, elemTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSequenceType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSequenceType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SequenceType.startSequenceType(builder);\n      SequenceType.addElemType(builder, elemTypeOffset);\n      return SequenceType.endSequenceType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class EdgeEnd {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns EdgeEnd\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): EdgeEnd {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      return this.bb!.readUint32(this.bb_pos);\n    }\n\n    /**\n     * @returns number\n     */\n    srcArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 4);\n    }\n\n    /**\n     * @returns number\n     */\n    dstArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number node_index\n     * @param number src_arg_index\n     * @param number dst_arg_index\n     * @returns flatbuffers.Offset\n     */\n    static createEdgeEnd(\n        builder: flatbuffers.Builder, node_index: number, src_arg_index: number,\n        dst_arg_index: number): flatbuffers.Offset {\n      builder.prep(4, 12);\n      builder.writeInt32(dst_arg_index);\n      builder.writeInt32(src_arg_index);\n      builder.writeInt32(node_index);\n      return builder.offset();\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class NodeEdge {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns NodeEdge\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): NodeEdge {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getSizePrefixedRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    inputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    outputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNodeEdge(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number nodeIndex\n     */\n    static addNodeIndex(builder: flatbuffers.Builder, nodeIndex: number) {\n      builder.addFieldInt32(0, nodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputEdgesOffset\n     */\n    static addInputEdges(builder: flatbuffers.Builder, inputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, inputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputEdgesOffset\n     */\n    static addOutputEdges(builder: flatbuffers.Builder, outputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, outputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNodeEdge(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNodeEdge(\n        builder: flatbuffers.Builder, nodeIndex: number, inputEdgesOffset: flatbuffers.Offset,\n        outputEdgesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      NodeEdge.startNodeEdge(builder);\n      NodeEdge.addNodeIndex(builder, nodeIndex);\n      NodeEdge.addInputEdges(builder, inputEdgesOffset);\n      NodeEdge.addOutputEdges(builder, outputEdgesOffset);\n      return NodeEdge.endNodeEdge(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Node {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Node\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Node {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getSizePrefixedRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    sinceVersion(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    index(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    opType(): string|null;\n    opType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    opType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.NodeType\n     */\n    type(): onnxruntime.experimental.fbs.NodeType {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.NodeType.Primitive;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    executionProviderType(): string|null;\n    executionProviderType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    executionProviderType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Attribute= obj\n     * @returns onnxruntime.experimental.fbs.Attribute\n     */\n    attributes(index: number, obj?: onnxruntime.experimental.fbs.Attribute): onnxruntime.experimental.fbs.Attribute\n        |null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Attribute())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    attributesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    inputArgCounts(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    inputArgCountsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Int32Array\n     */\n    inputArgCountsArray(): Int32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ?\n          new Int32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    implicitInputs(index: number): string;\n    implicitInputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    implicitInputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    implicitInputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNode(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number sinceVersion\n     */\n    static addSinceVersion(builder: flatbuffers.Builder, sinceVersion: number) {\n      builder.addFieldInt32(3, sinceVersion, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number index\n     */\n    static addIndex(builder: flatbuffers.Builder, index: number) {\n      builder.addFieldInt32(4, index, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opTypeOffset\n     */\n    static addOpType(builder: flatbuffers.Builder, opTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, opTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.NodeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.NodeType) {\n      builder.addFieldInt32(6, type, onnxruntime.experimental.fbs.NodeType.Primitive);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset executionProviderTypeOffset\n     */\n    static addExecutionProviderType(builder: flatbuffers.Builder, executionProviderTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, executionProviderTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset attributesOffset\n     */\n    static addAttributes(builder: flatbuffers.Builder, attributesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, attributesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createAttributesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startAttributesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputArgCountsOffset\n     */\n    static addInputArgCounts(builder: flatbuffers.Builder, inputArgCountsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, inputArgCountsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputArgCountsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputArgCountsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset implicitInputsOffset\n     */\n    static addImplicitInputs(builder: flatbuffers.Builder, implicitInputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, implicitInputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createImplicitInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startImplicitInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNode(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNode(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, sinceVersion: number, index: number, opTypeOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.NodeType, executionProviderTypeOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset, attributesOffset: flatbuffers.Offset,\n        inputArgCountsOffset: flatbuffers.Offset, implicitInputsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Node.startNode(builder);\n      Node.addName(builder, nameOffset);\n      Node.addDocString(builder, docStringOffset);\n      Node.addDomain(builder, domainOffset);\n      Node.addSinceVersion(builder, sinceVersion);\n      Node.addIndex(builder, index);\n      Node.addOpType(builder, opTypeOffset);\n      Node.addType(builder, type);\n      Node.addExecutionProviderType(builder, executionProviderTypeOffset);\n      Node.addInputs(builder, inputsOffset);\n      Node.addOutputs(builder, outputsOffset);\n      Node.addAttributes(builder, attributesOffset);\n      Node.addInputArgCounts(builder, inputArgCountsOffset);\n      Node.addImplicitInputs(builder, implicitInputsOffset);\n      return Node.endNode(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class ValueInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns ValueInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): ValueInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getSizePrefixedRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    type(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startValueInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset typeOffset\n     */\n    static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, typeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endValueInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createValueInfo(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        typeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      ValueInfo.startValueInfo(builder);\n      ValueInfo.addName(builder, nameOffset);\n      ValueInfo.addDocString(builder, docStringOffset);\n      ValueInfo.addType(builder, typeOffset);\n      return ValueInfo.endValueInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TypeInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TypeInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TypeInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getSizePrefixedRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TypeInfoValue\n     */\n    valueType(): onnxruntime.experimental.fbs.TypeInfoValue {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TypeInfoValue.NONE;\n    }\n\n    /**\n     * @param flatbuffers.Table obj\n     * @returns ?flatbuffers.Table\n     */\n    value<T extends flatbuffers.Table>(obj: T): T|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTypeInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TypeInfoValue valueType\n     */\n    static addValueType(builder: flatbuffers.Builder, valueType: onnxruntime.experimental.fbs.TypeInfoValue) {\n      builder.addFieldInt8(1, valueType, onnxruntime.experimental.fbs.TypeInfoValue.NONE);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTypeInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTypeInfo(\n        builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset,\n        valueType: onnxruntime.experimental.fbs.TypeInfoValue, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TypeInfo.startTypeInfo(builder);\n      TypeInfo.addDenotation(builder, denotationOffset);\n      TypeInfo.addValueType(builder, valueType);\n      TypeInfo.addValue(builder, valueOffset);\n      return TypeInfo.endTypeInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class OperatorSetId {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns OperatorSetId\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): OperatorSetId {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getSizePrefixedRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    version(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startOperatorSetId(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long version\n     */\n    static addVersion(builder: flatbuffers.Builder, version: flatbuffers.Long) {\n      builder.addFieldInt64(1, version, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endOperatorSetId(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createOperatorSetId(\n        builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset, version: flatbuffers.Long): flatbuffers.Offset {\n      OperatorSetId.startOperatorSetId(builder);\n      OperatorSetId.addDomain(builder, domainOffset);\n      OperatorSetId.addVersion(builder, version);\n      return OperatorSetId.endOperatorSetId(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Tensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Tensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Tensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getSizePrefixedRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    dataType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    rawData(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    rawDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint8Array\n     */\n    rawDataArray(): Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ?\n          new Uint8Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    stringData(index: number): string;\n    stringData(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    stringData(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensor(builder: flatbuffers.Builder) {\n      builder.startObject(6);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType dataType\n     */\n    static addDataType(builder: flatbuffers.Builder, dataType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(3, dataType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset rawDataOffset\n     */\n    static addRawData(builder: flatbuffers.Builder, rawDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, rawDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createRawDataVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(1, data.length, 1);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt8(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startRawDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(1, numElems, 1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringDataOffset\n     */\n    static addStringData(builder: flatbuffers.Builder, stringDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, stringDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringDataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensor(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset, dataType: onnxruntime.experimental.fbs.TensorDataType,\n        rawDataOffset: flatbuffers.Offset, stringDataOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Tensor.startTensor(builder);\n      Tensor.addName(builder, nameOffset);\n      Tensor.addDocString(builder, docStringOffset);\n      Tensor.addDims(builder, dimsOffset);\n      Tensor.addDataType(builder, dataType);\n      Tensor.addRawData(builder, rawDataOffset);\n      Tensor.addStringData(builder, stringDataOffset);\n      return Tensor.endTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SparseTensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SparseTensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SparseTensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getSizePrefixedRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    values(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    indices(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSparseTensor(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valuesOffset\n     */\n    static addValues(builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valuesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset indicesOffset\n     */\n    static addIndices(builder: flatbuffers.Builder, indicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, indicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSparseTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSparseTensor(\n        builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset, indicesOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SparseTensor.startSparseTensor(builder);\n      SparseTensor.addValues(builder, valuesOffset);\n      SparseTensor.addIndices(builder, indicesOffset);\n      SparseTensor.addDims(builder, dimsOffset);\n      return SparseTensor.endSparseTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Attribute {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Attribute\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Attribute {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getSizePrefixedRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.AttributeType\n     */\n    type(): onnxruntime.experimental.fbs.AttributeType {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.AttributeType.UNDEFINED;\n    }\n\n    /**\n     * @returns number\n     */\n    f(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    i(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    s(): string|null;\n    s(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    s(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    t(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    g(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    floats(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.readFloat32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    floatsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Float32Array\n     */\n    floatsArray(): Float32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ?\n          new Float32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    ints(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    intsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    strings(index: number): string;\n    strings(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    strings(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    tensors(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    tensorsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph\n     */\n    graphs(index: number, obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    graphsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startAttribute(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.AttributeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.AttributeType) {\n      builder.addFieldInt32(2, type, onnxruntime.experimental.fbs.AttributeType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number f\n     */\n    static addF(builder: flatbuffers.Builder, f: number) {\n      builder.addFieldFloat32(3, f, 0.0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long i\n     */\n    static addI(builder: flatbuffers.Builder, i: flatbuffers.Long) {\n      builder.addFieldInt64(4, i, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sOffset\n     */\n    static addS(builder: flatbuffers.Builder, sOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, sOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tOffset\n     */\n    static addT(builder: flatbuffers.Builder, tOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, tOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset gOffset\n     */\n    static addG(builder: flatbuffers.Builder, gOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, gOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset floatsOffset\n     */\n    static addFloats(builder: flatbuffers.Builder, floatsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, floatsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createFloatsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addFloat32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startFloatsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset intsOffset\n     */\n    static addInts(builder: flatbuffers.Builder, intsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, intsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createIntsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startIntsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringsOffset\n     */\n    static addStrings(builder: flatbuffers.Builder, stringsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, stringsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tensorsOffset\n     */\n    static addTensors(builder: flatbuffers.Builder, tensorsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, tensorsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createTensorsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startTensorsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphsOffset\n     */\n    static addGraphs(builder: flatbuffers.Builder, graphsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, graphsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createGraphsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startGraphsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endAttribute(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createAttribute(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.AttributeType, f: number, i: flatbuffers.Long, sOffset: flatbuffers.Offset,\n        tOffset: flatbuffers.Offset, gOffset: flatbuffers.Offset, floatsOffset: flatbuffers.Offset,\n        intsOffset: flatbuffers.Offset, stringsOffset: flatbuffers.Offset, tensorsOffset: flatbuffers.Offset,\n        graphsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Attribute.startAttribute(builder);\n      Attribute.addName(builder, nameOffset);\n      Attribute.addDocString(builder, docStringOffset);\n      Attribute.addType(builder, type);\n      Attribute.addF(builder, f);\n      Attribute.addI(builder, i);\n      Attribute.addS(builder, sOffset);\n      Attribute.addT(builder, tOffset);\n      Attribute.addG(builder, gOffset);\n      Attribute.addFloats(builder, floatsOffset);\n      Attribute.addInts(builder, intsOffset);\n      Attribute.addStrings(builder, stringsOffset);\n      Attribute.addTensors(builder, tensorsOffset);\n      Attribute.addGraphs(builder, graphsOffset);\n      return Attribute.endAttribute(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Graph {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Graph\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Graph {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getSizePrefixedRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    initializers(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    initializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.ValueInfo= obj\n     * @returns onnxruntime.experimental.fbs.ValueInfo\n     */\n    nodeArgs(index: number, obj?: onnxruntime.experimental.fbs.ValueInfo): onnxruntime.experimental.fbs.ValueInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.ValueInfo())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeArgsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Node= obj\n     * @returns onnxruntime.experimental.fbs.Node\n     */\n    nodes(index: number, obj?: onnxruntime.experimental.fbs.Node): onnxruntime.experimental.fbs.Node|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Node())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    maxNodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.NodeEdge= obj\n     * @returns onnxruntime.experimental.fbs.NodeEdge\n     */\n    nodeEdges(index: number, obj?: onnxruntime.experimental.fbs.NodeEdge): onnxruntime.experimental.fbs.NodeEdge|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? (obj || new onnxruntime.experimental.fbs.NodeEdge())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SparseTensor= obj\n     * @returns onnxruntime.experimental.fbs.SparseTensor\n     */\n    sparseInitializers(index: number, obj?: onnxruntime.experimental.fbs.SparseTensor):\n        onnxruntime.experimental.fbs.SparseTensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SparseTensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    sparseInitializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startGraph(builder: flatbuffers.Builder) {\n      builder.startObject(8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset initializersOffset\n     */\n    static addInitializers(builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, initializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeArgsOffset\n     */\n    static addNodeArgs(builder: flatbuffers.Builder, nodeArgsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, nodeArgsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeArgsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeArgsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodesOffset\n     */\n    static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, nodesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number maxNodeIndex\n     */\n    static addMaxNodeIndex(builder: flatbuffers.Builder, maxNodeIndex: number) {\n      builder.addFieldInt32(3, maxNodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeEdgesOffset\n     */\n    static addNodeEdges(builder: flatbuffers.Builder, nodeEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, nodeEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeEdgesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sparseInitializersOffset\n     */\n    static addSparseInitializers(builder: flatbuffers.Builder, sparseInitializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, sparseInitializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSparseInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSparseInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endGraph(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createGraph(\n        builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset, nodeArgsOffset: flatbuffers.Offset,\n        nodesOffset: flatbuffers.Offset, maxNodeIndex: number, nodeEdgesOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset,\n        sparseInitializersOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Graph.startGraph(builder);\n      Graph.addInitializers(builder, initializersOffset);\n      Graph.addNodeArgs(builder, nodeArgsOffset);\n      Graph.addNodes(builder, nodesOffset);\n      Graph.addMaxNodeIndex(builder, maxNodeIndex);\n      Graph.addNodeEdges(builder, nodeEdgesOffset);\n      Graph.addInputs(builder, inputsOffset);\n      Graph.addOutputs(builder, outputsOffset);\n      Graph.addSparseInitializers(builder, sparseInitializersOffset);\n      return Graph.endGraph(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Model {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Model\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Model {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getSizePrefixedRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    irVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.OperatorSetId= obj\n     * @returns onnxruntime.experimental.fbs.OperatorSetId\n     */\n    opsetImport(index: number, obj?: onnxruntime.experimental.fbs.OperatorSetId):\n        onnxruntime.experimental.fbs.OperatorSetId|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.OperatorSetId())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    opsetImportLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerName(): string|null;\n    producerName(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerName(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerVersion(): string|null;\n    producerVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    modelVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    graph(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphDocString(): string|null;\n    graphDocString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphDocString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startModel(builder: flatbuffers.Builder) {\n      builder.startObject(9);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long irVersion\n     */\n    static addIrVersion(builder: flatbuffers.Builder, irVersion: flatbuffers.Long) {\n      builder.addFieldInt64(0, irVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opsetImportOffset\n     */\n    static addOpsetImport(builder: flatbuffers.Builder, opsetImportOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, opsetImportOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOpsetImportVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOpsetImportVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerNameOffset\n     */\n    static addProducerName(builder: flatbuffers.Builder, producerNameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, producerNameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerVersionOffset\n     */\n    static addProducerVersion(builder: flatbuffers.Builder, producerVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(3, producerVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long modelVersion\n     */\n    static addModelVersion(builder: flatbuffers.Builder, modelVersion: flatbuffers.Long) {\n      builder.addFieldInt64(5, modelVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphOffset\n     */\n    static addGraph(builder: flatbuffers.Builder, graphOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, graphOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphDocStringOffset\n     */\n    static addGraphDocString(builder: flatbuffers.Builder, graphDocStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, graphDocStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endModel(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createModel(\n        builder: flatbuffers.Builder, irVersion: flatbuffers.Long, opsetImportOffset: flatbuffers.Offset,\n        producerNameOffset: flatbuffers.Offset, producerVersionOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, modelVersion: flatbuffers.Long, docStringOffset: flatbuffers.Offset,\n        graphOffset: flatbuffers.Offset, graphDocStringOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Model.startModel(builder);\n      Model.addIrVersion(builder, irVersion);\n      Model.addOpsetImport(builder, opsetImportOffset);\n      Model.addProducerName(builder, producerNameOffset);\n      Model.addProducerVersion(builder, producerVersionOffset);\n      Model.addDomain(builder, domainOffset);\n      Model.addModelVersion(builder, modelVersion);\n      Model.addDocString(builder, docStringOffset);\n      Model.addGraph(builder, graphOffset);\n      Model.addGraphDocString(builder, graphDocStringOffset);\n      return Model.endModel(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class KernelCreateInfos {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns KernelCreateInfos\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): KernelCreateInfos {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos): KernelCreateInfos {\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getSizePrefixedRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos):\n        KernelCreateInfos {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    nodeIndices(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndicesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint32Array\n     */\n    nodeIndicesArray(): Uint32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ?\n          new Uint32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    kernelDefHashes(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readUint64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    kernelDefHashesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startKernelCreateInfos(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeIndicesOffset\n     */\n    static addNodeIndices(builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nodeIndicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeIndicesVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeIndicesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelDefHashesOffset\n     */\n    static addKernelDefHashes(builder: flatbuffers.Builder, kernelDefHashesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, kernelDefHashesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createKernelDefHashesVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startKernelDefHashesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endKernelCreateInfos(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createKernelCreateInfos(\n        builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset,\n        kernelDefHashesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      KernelCreateInfos.startKernelCreateInfos(builder);\n      KernelCreateInfos.addNodeIndices(builder, nodeIndicesOffset);\n      KernelCreateInfos.addKernelDefHashes(builder, kernelDefHashesOffset);\n      return KernelCreateInfos.endKernelCreateInfos(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SubGraphSessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SubGraphSessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SubGraphSessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState): SubGraphSessionState {\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getSizePrefixedRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState):\n        SubGraphSessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphId(): string|null;\n    graphId(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphId(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSubGraphSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphIdOffset\n     */\n    static addGraphId(builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, graphIdOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSubGraphSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      builder.requiredField(offset, 4);  // graph_id\n      return offset;\n    }\n\n    static createSubGraphSessionState(\n        builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SubGraphSessionState.startSubGraphSessionState(builder);\n      SubGraphSessionState.addGraphId(builder, graphIdOffset);\n      SubGraphSessionState.addSessionState(builder, sessionStateOffset);\n      return SubGraphSessionState.endSubGraphSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getSizePrefixedRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.KernelCreateInfos= obj\n     * @returns onnxruntime.experimental.fbs.KernelCreateInfos|null\n     */\n    kernels(obj?: onnxruntime.experimental.fbs.KernelCreateInfos): onnxruntime.experimental.fbs.KernelCreateInfos|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.KernelCreateInfos())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SubGraphSessionState= obj\n     * @returns onnxruntime.experimental.fbs.SubGraphSessionState\n     */\n    subGraphSessionStates(index: number, obj?: onnxruntime.experimental.fbs.SubGraphSessionState):\n        onnxruntime.experimental.fbs.SubGraphSessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SubGraphSessionState())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    subGraphSessionStatesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelsOffset\n     */\n    static addKernels(builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, kernelsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset subGraphSessionStatesOffset\n     */\n    static addSubGraphSessionStates(builder: flatbuffers.Builder, subGraphSessionStatesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, subGraphSessionStatesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSubGraphSessionStatesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSubGraphSessionStatesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSessionState(\n        builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset,\n        subGraphSessionStatesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SessionState.startSessionState(builder);\n      SessionState.addKernels(builder, kernelsOffset);\n      SessionState.addSubGraphSessionStates(builder, subGraphSessionStatesOffset);\n      return SessionState.endSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class InferenceSession {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns InferenceSession\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): InferenceSession {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getSizePrefixedRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @returns boolean\n     */\n    static bufferHasIdentifier(bb: flatbuffers.ByteBuffer): boolean {\n      return bb.__has_identifier('ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    ortVersion(): string|null;\n    ortVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    ortVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Model= obj\n     * @returns onnxruntime.experimental.fbs.Model|null\n     */\n    model(obj?: onnxruntime.experimental.fbs.Model): onnxruntime.experimental.fbs.Model|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Model())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startInferenceSession(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset ortVersionOffset\n     */\n    static addOrtVersion(builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, ortVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset modelOffset\n     */\n    static addModel(builder: flatbuffers.Builder, modelOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, modelOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endInferenceSession(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishSizePrefixedInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM', true);\n    }\n\n    static createInferenceSession(\n        builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset, modelOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      InferenceSession.startInferenceSession(builder);\n      InferenceSession.addOrtVersion(builder, ortVersionOffset);\n      InferenceSession.addModel(builder, modelOffset);\n      InferenceSession.addSessionState(builder, sessionStateOffset);\n      return InferenceSession.endInferenceSession(builder);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\n\nimport {Session} from './session';\nimport {Tensor as OnnxjsTensor} from './tensor';\n\nexport class OnnxjsSessionHandler implements SessionHandler {\n  constructor(private session: Session) {\n    this.inputNames = this.session.inputNames;\n    this.outputNames = this.session.outputNames;\n  }\n\n  async dispose(): Promise<void> {}\n  inputNames: readonly string[];\n  outputNames: readonly string[];\n  async run(\n      feeds: SessionHandler.FeedsType, _fetches: SessionHandler.FetchesType,\n      _options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType> {\n    const inputMap = new Map<string, OnnxjsTensor>();\n    for (const name in feeds) {\n      if (Object.hasOwnProperty.call(feeds, name)) {\n        const feed = feeds[name];\n        inputMap.set(\n            name,\n            new OnnxjsTensor(\n                feed.dims, feed.type as OnnxjsTensor.DataType, undefined, undefined,\n                feed.data as OnnxjsTensor.NumberType));\n      }\n    }\n    const outputMap = await this.session.run(inputMap);\n    const output: SessionHandler.ReturnType = {};\n    outputMap.forEach((tensor, name) => {\n      output[name] = new Tensor(tensor.type, tensor.data, tensor.dims);\n    });\n    return output;\n  }\n  startProfiling(): void {\n    this.session.startProfiling();\n  }\n  endProfiling(): void {\n    this.session.endProfiling();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {promisify} from 'util';\n\nimport {resolveBackend, SessionHandlerType} from './backend';\nimport {ExecutionPlan} from './execution-plan';\nimport {Graph} from './graph';\nimport {Profiler} from './instrument';\nimport {Model} from './model';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nexport declare namespace Session {\n  export interface Config {\n    backendHint?: string;\n    profiler?: Profiler.Config;\n  }\n\n  export interface Context {\n    profiler: Readonly<Profiler>;\n    graphInputTypes?: Tensor.DataType[];\n    graphInputDims?: Array<readonly number[]>;\n  }\n}\n\nexport class Session {\n  constructor(config: Session.Config = {}) {\n    this._initialized = false;\n    this.backendHint = config.backendHint;\n    this.profiler = Profiler.create(config.profiler);\n    this.context = {profiler: this.profiler, graphInputTypes: [], graphInputDims: []};\n  }\n\n  get inputNames(): readonly string[] {\n    return this._model.graph.getInputNames();\n  }\n  get outputNames(): readonly string[] {\n    return this._model.graph.getOutputNames();\n  }\n\n  startProfiling() {\n    this.profiler.start();\n  }\n\n  endProfiling() {\n    this.profiler.stop();\n  }\n\n  async loadModel(uri: string): Promise<void>;\n  async loadModel(buffer: ArrayBuffer, byteOffset?: number, length?: number): Promise<void>;\n  async loadModel(buffer: Uint8Array): Promise<void>;\n  async loadModel(arg: string|ArrayBuffer|Uint8Array, byteOffset?: number, length?: number): Promise<void> {\n    await this.profiler.event('session', 'Session.loadModel', async () => {\n      // resolve backend and session handler\n      const backend = await resolveBackend(this.backendHint);\n      this.sessionHandler = backend.createSessionHandler(this.context);\n\n      this._model = new Model();\n      if (typeof arg === 'string') {\n        const isOrtFormat = arg.endsWith('.ort');\n        if (typeof fetch === 'undefined') {\n          // node\n          const buf = await promisify(readFile)(arg);\n          this.initialize(buf, isOrtFormat);\n        } else {\n          // browser\n          const response = await fetch(arg);\n          const buf = await response.arrayBuffer();\n          this.initialize(new Uint8Array(buf), isOrtFormat);\n        }\n      } else if (!ArrayBuffer.isView(arg)) {\n        // load model from ArrayBuffer\n        const arr = new Uint8Array(arg, byteOffset || 0, length || arg.byteLength);\n        this.initialize(arr);\n      } else {\n        // load model from Uint8array\n        this.initialize(arg);\n      }\n    });\n  }\n\n  private initialize(modelProtoBlob: Uint8Array, isOrtFormat?: boolean): void {\n    if (this._initialized) {\n      throw new Error('already initialized');\n    }\n\n    this.profiler.event('session', 'Session.initialize', () => {\n      // load graph\n      const graphInitializer =\n          this.sessionHandler.transformGraph ? this.sessionHandler as Graph.Initializer : undefined;\n      this._model.load(modelProtoBlob, graphInitializer, isOrtFormat);\n\n      // graph is completely initialzied at this stage , let the interested handlers know\n      if (this.sessionHandler.onGraphInitialized) {\n        this.sessionHandler.onGraphInitialized(this._model.graph);\n      }\n      // initialize each operator in the graph\n      this.initializeOps(this._model.graph);\n\n      // instantiate an ExecutionPlan object to be used by the Session object\n      this._executionPlan = new ExecutionPlan(this._model.graph, this._ops, this.profiler);\n    });\n\n    this._initialized = true;\n  }\n\n  async run(inputs: Map<string, Tensor>|Tensor[]): Promise<Map<string, Tensor>> {\n    if (!this._initialized) {\n      throw new Error('session not initialized yet');\n    }\n\n    return this.profiler.event('session', 'Session.run', async () => {\n      const inputTensors = this.normalizeAndValidateInputs(inputs);\n\n      const outputTensors = await this._executionPlan.execute(this.sessionHandler, inputTensors);\n\n      return this.createOutput(outputTensors);\n    });\n  }\n\n  private normalizeAndValidateInputs(inputs: Map<string, Tensor>|Tensor[]): Tensor[] {\n    const modelInputNames = this._model.graph.getInputNames();\n\n    // normalize inputs\n    // inputs: Tensor[]\n    if (Array.isArray(inputs)) {\n      if (inputs.length !== modelInputNames.length) {\n        throw new Error(`incorrect input array length: expected ${modelInputNames.length} but got ${inputs.length}`);\n      }\n    }\n    // convert map to array\n    // inputs: Map<string, Tensor>\n    else {\n      if (inputs.size !== modelInputNames.length) {\n        throw new Error(`incorrect input map size: expected ${modelInputNames.length} but got ${inputs.size}`);\n      }\n\n      const sortedInputs = new Array<Tensor>(inputs.size);\n      let sortedInputsIndex = 0;\n      for (let i = 0; i < modelInputNames.length; ++i) {\n        const tensor = inputs.get(modelInputNames[i]);\n        if (!tensor) {\n          throw new Error(`missing input tensor for: '${name}'`);\n        }\n        sortedInputs[sortedInputsIndex++] = tensor;\n      }\n\n      inputs = sortedInputs;\n    }\n\n    // validate dims requirements\n    // First session run - graph input data is not cached for the session\n    if (!this.context.graphInputTypes || this.context.graphInputTypes.length === 0 || !this.context.graphInputDims ||\n        this.context.graphInputDims.length === 0) {\n      const modelInputIndices = this._model.graph.getInputIndices();\n      const modelValues = this._model.graph.getValues();\n\n      const graphInputDims = new Array<readonly number[]>(modelInputIndices.length);\n\n      for (let i = 0; i < modelInputIndices.length; ++i) {\n        const graphInput = modelValues[modelInputIndices[i]];\n        graphInputDims[i] = graphInput.type!.shape.dims;\n\n        // cached for second and subsequent runs.\n        // Some parts of the framework works on the assumption that the graph and types and shapes are static\n        this.context.graphInputTypes!.push(graphInput.type!.tensorType);\n        this.context.graphInputDims!.push(inputs[i].dims);\n      }\n\n      this.validateInputTensorDims(graphInputDims, inputs, true);\n    }\n\n    // Second and subsequent session runs - graph input data is cached for the session\n    else {\n      this.validateInputTensorDims(this.context.graphInputDims, inputs, false);\n    }\n\n    // validate types requirement\n    this.validateInputTensorTypes(this.context.graphInputTypes!, inputs);\n\n    return inputs;\n  }\n\n  private validateInputTensorTypes(graphInputTypes: Tensor.DataType[], givenInputs: Tensor[]) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedType = graphInputTypes[i];\n      const actualType = givenInputs[i].type;\n      if (expectedType !== actualType) {\n        throw new Error(`input tensor[${i}] check failed: expected type '${expectedType}' but got ${actualType}`);\n      }\n    }\n  }\n\n  private validateInputTensorDims(\n      graphInputDims: Array<readonly number[]>, givenInputs: Tensor[], noneDimSupported: boolean) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedDims = graphInputDims[i];\n      const actualDims = givenInputs[i].dims;\n      if (!this.compareTensorDims(expectedDims, actualDims, noneDimSupported)) {\n        throw new Error(`input tensor[${i}] check failed: expected shape '[${expectedDims.join(',')}]' but got [${\n            actualDims.join(',')}]`);\n      }\n    }\n  }\n\n  private compareTensorDims(expectedDims: readonly number[], actualDims: readonly number[], noneDimSupported: boolean):\n      boolean {\n    if (expectedDims.length !== actualDims.length) {\n      return false;\n    }\n\n    for (let i = 0; i < expectedDims.length; ++i) {\n      if (expectedDims[i] !== actualDims[i] && (!noneDimSupported || expectedDims[i] !== 0)) {\n        // data shape mis-match AND not a 'None' dimension.\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private createOutput(outputTensors: Tensor[]): Map<string, Tensor> {\n    const modelOutputNames = this._model.graph.getOutputNames();\n    if (outputTensors.length !== modelOutputNames.length) {\n      throw new Error('expected number of outputs do not match number of generated outputs');\n    }\n\n    const output = new Map<string, Tensor>();\n    for (let i = 0; i < modelOutputNames.length; ++i) {\n      output.set(modelOutputNames[i], outputTensors[i]);\n    }\n\n    return output;\n  }\n\n  private initializeOps(graph: Graph): void {\n    const nodes = graph.getNodes();\n    this._ops = new Array(nodes.length);\n\n    for (let i = 0; i < nodes.length; i++) {\n      this._ops[i] = this.sessionHandler.resolve(nodes[i], this._model.opsets, graph);\n    }\n  }\n\n  private _model: Model;\n  private _initialized: boolean;\n\n  private _ops: Operator[];\n  private _executionPlan: ExecutionPlan;\n\n  private backendHint?: string;\n\n  private sessionHandler: SessionHandlerType;\n  private context: Session.Context;\n  private profiler: Readonly<Profiler>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Guid} from 'guid-typescript';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {decodeUtf8String, ProtoUtil, ShapeUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport declare namespace Tensor {\n  export interface DataTypeMap {\n    bool: Uint8Array;\n    float32: Float32Array;\n    float64: Float64Array;\n    string: string[];\n    int8: Int8Array;\n    uint8: Uint8Array;\n    int16: Int16Array;\n    uint16: Uint16Array;\n    int32: Int32Array;\n    uint32: Uint32Array;\n  }\n\n  export type DataType = keyof DataTypeMap;\n\n  export type StringType = Tensor.DataTypeMap['string'];\n  export type BooleanType = Tensor.DataTypeMap['bool'];\n  export type IntegerType = Tensor.DataTypeMap['int8']|Tensor.DataTypeMap['uint8']|Tensor.DataTypeMap['int16']|\n                            Tensor.DataTypeMap['uint16']|Tensor.DataTypeMap['int32']|Tensor.DataTypeMap['uint32'];\n  export type FloatType = Tensor.DataTypeMap['float32']|Tensor.DataTypeMap['float64'];\n  export type NumberType = BooleanType|IntegerType|FloatType;\n\n  export type Id = Guid;\n}\n\ntype TensorData = Tensor.DataTypeMap[Tensor.DataType];\n\ntype DataProvider = (id: Tensor.Id) => TensorData;\ntype AsyncDataProvider = (id: Tensor.Id) => Promise<TensorData>;\n\nexport class Tensor {\n  /**\n   * get the underlying tensor data\n   */\n  get data(): TensorData {\n    if (this.cache === undefined) {\n      const data = this.dataProvider!(this.dataId);\n      if (data.length !== this.size) {\n        throw new Error('Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.');\n      }\n      this.cache = data;\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the underlying string tensor data. Should only use when type is STRING\n   */\n  get stringData() {\n    if (this.type !== 'string') {\n      throw new TypeError('data type is not string');\n    }\n\n    return this.data as Tensor.StringType;\n  }\n\n  /**\n   * get the underlying integer tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL)\n   */\n  get integerData() {\n    switch (this.type) {\n      case 'uint8':\n      case 'int8':\n      case 'uint16':\n      case 'int16':\n      case 'int32':\n      case 'uint32':\n      case 'bool':\n        return this.data as Tensor.IntegerType;\n\n      default:\n        throw new TypeError('data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)');\n    }\n  }\n\n  /**\n   * get the underlying float tensor data. Should only use when type is one of the following: (FLOAT, DOUBLE)\n   */\n  get floatData() {\n    switch (this.type) {\n      case 'float32':\n      case 'float64':\n        return this.data as Tensor.FloatType;\n\n      default:\n        throw new TypeError('data type is not float (float32, float64)');\n    }\n  }\n\n  /**\n   * get the underlying number tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL, FLOAT, DOUBLE)\n   */\n  get numberData() {\n    if (this.type !== 'string') {\n      return this.data as Tensor.NumberType;\n    }\n    throw new TypeError('type cannot be non-number (string)');\n  }\n\n  /**\n   * get value of an element at the given indices\n   */\n  get(indices: readonly number[]): Tensor.DataTypeMap[Tensor.DataType][number] {\n    return this.data[ShapeUtil.indicesToOffset(indices, this.strides)];\n  }\n\n  /**\n   * set value of an element at the given indices\n   */\n  set(indices: readonly number[], value: Tensor.DataTypeMap[Tensor.DataType][number]) {\n    this.data[ShapeUtil.indicesToOffset(indices, this.strides)] = value;\n  }\n\n  /**\n   * get the underlying tensor data asynchronously\n   */\n  async getData(): Promise<TensorData> {\n    if (this.cache === undefined) {\n      this.cache = await this.asyncDataProvider!(this.dataId);\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the number of elements in the tensor\n   */\n  public readonly size: number;\n\n  private _strides: readonly number[];\n  /**\n   * get the strides for each dimension\n   */\n  get strides(): readonly number[] {\n    if (!this._strides) {\n      this._strides = ShapeUtil.computeStrides(this.dims);\n    }\n    return this._strides;\n  }\n\n  constructor(\n      /**\n       * get the dimensions of the tensor\n       */\n      public readonly dims: readonly number[],\n      /**\n       * get the type of the tensor\n       */\n      public readonly type: Tensor.DataType, private dataProvider?: DataProvider,\n      private asyncDataProvider?: AsyncDataProvider, private cache?: TensorData,\n      /**\n       * get the data ID that used to map to a tensor data\n       */\n      public readonly dataId: Guid = Guid.create()) {\n    this.size = ShapeUtil.validateDimsAndCalcSize(dims);\n    const size = this.size;\n    const empty = (dataProvider === undefined && asyncDataProvider === undefined && cache === undefined);\n\n    if (cache !== undefined) {\n      if (cache.length !== size) {\n        throw new RangeError('Input dims doesn\\'t match data length.');\n      }\n    }\n\n    if (type === 'string') {\n      if (cache !== undefined && (!Array.isArray(cache) || !cache.every(i => typeof i === 'string'))) {\n        throw new TypeError('cache should be a string array');\n      }\n\n      if (empty) {\n        this.cache = new Array<string>(size);\n      }\n    } else {\n      if (cache !== undefined) {\n        const constructor = dataviewConstructor(type);\n        if (!(cache instanceof constructor)) {\n          throw new TypeError(`cache should be type ${constructor.name}`);\n        }\n      }\n\n      if (empty) {\n        const buf = new ArrayBuffer(size * sizeof(type));\n        this.cache = createView(buf, type);\n      }\n    }\n  }\n\n  /**\n   * Construct new Tensor from a ONNX Tensor object\n   * @param tensorProto the ONNX Tensor\n   */\n  static fromProto(tensorProto: onnx.ITensorProto): Tensor {\n    if (!tensorProto) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const type = ProtoUtil.tensorDataTypeFromProto(tensorProto.dataType!);\n    const dims = ProtoUtil.tensorDimsFromProto(tensorProto.dims!);\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      tensorProto.stringData!.forEach((str, i) => {\n        value.data[i] = decodeUtf8String(str);\n      });\n\n    } else if (\n        tensorProto.rawData && typeof tensorProto.rawData.byteLength === 'number' &&\n        tensorProto.rawData.byteLength > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource =\n          new DataView(tensorProto.rawData.buffer, tensorProto.rawData.byteOffset, tensorProto.rawData.byteLength);\n      const elementSize = sizeofProto(tensorProto.dataType!);\n      const length = tensorProto.rawData.byteLength / elementSize;\n\n      if (tensorProto.rawData.byteLength % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, tensorProto.dataType!, i * elementSize);\n        dataDest[i] = n;\n      }\n    } else {\n      // populate value from array\n      let array: Array<number|Long>;\n      switch (tensorProto.dataType) {\n        case onnx.TensorProto.DataType.FLOAT:\n          array = tensorProto.floatData!;\n          break;\n        case onnx.TensorProto.DataType.INT32:\n        case onnx.TensorProto.DataType.INT16:\n        case onnx.TensorProto.DataType.UINT16:\n        case onnx.TensorProto.DataType.INT8:\n        case onnx.TensorProto.DataType.UINT8:\n        case onnx.TensorProto.DataType.BOOL:\n          array = tensorProto.int32Data!;\n          break;\n        case onnx.TensorProto.DataType.INT64:\n          array = tensorProto.int64Data!;\n          break;\n        case onnx.TensorProto.DataType.DOUBLE:\n          array = tensorProto.doubleData!;\n          break;\n        case onnx.TensorProto.DataType.UINT32:\n        case onnx.TensorProto.DataType.UINT64:\n          array = tensorProto.uint64Data!;\n          break;\n        default:\n          // should never run here\n          throw new Error('unspecific error');\n      }\n\n      if (array === null || array === undefined) {\n        throw new Error('failed to populate data from a tensorproto value');\n      }\n\n      const data = value.data;\n      if (data.length !== array.length) {\n        throw new Error('array length mismatch');\n      }\n\n      for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (Long.isLong(element)) {\n          data[i] = longToNumber(element, tensorProto.dataType);\n        } else {\n          data[i] = element;\n        }\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Construct new Tensor from raw data\n   * @param data the raw data object. Should be a string array for 'string' tensor, and the corresponding typed array\n   * for other types of tensor.\n   * @param dims the dimensions of the tensor\n   * @param type the type of the tensor\n   */\n  static fromData(data: Tensor.DataTypeMap[Tensor.DataType], dims: readonly number[], type: Tensor.DataType) {\n    return new Tensor(dims, type, undefined, undefined, data);\n  }\n\n  static fromOrtTensor(ortTensor: ortFbs.Tensor) {\n    if (!ortTensor) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const dims = ProtoUtil.tensorDimsFromORTFormat(ortTensor);\n    const type = ProtoUtil.tensorDataTypeFromProto(ortTensor.dataType());\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      for (let i = 0; i < ortTensor.stringDataLength(); i++) {\n        value.data[i] = ortTensor.stringData(i);\n      }\n\n    } else if (\n        ortTensor.rawDataArray() && typeof ortTensor.rawDataLength() === 'number' && ortTensor.rawDataLength() > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource = new DataView(\n          ortTensor.rawDataArray()!.buffer, ortTensor.rawDataArray()!.byteOffset, ortTensor.rawDataLength());\n      const elementSize = sizeofProto(ortTensor.dataType());\n      const length = ortTensor.rawDataLength() / elementSize;\n\n      if (ortTensor.rawDataLength() % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, ortTensor.dataType(), i * elementSize);\n        dataDest[i] = n;\n      }\n    }\n    return value;\n  }\n}\n\nfunction sizeof(type: Tensor.DataType): number {\n  switch (type) {\n    case 'bool':\n    case 'int8':\n    case 'uint8':\n      return 1;\n    case 'int16':\n    case 'uint16':\n      return 2;\n    case 'int32':\n    case 'uint32':\n    case 'float32':\n      return 4;\n    case 'float64':\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${type}`);\n  }\n}\n\nfunction sizeofProto(type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.UINT8:\n    case onnx.TensorProto.DataType.INT8:\n    case onnx.TensorProto.DataType.BOOL:\n      return 1;\n    case onnx.TensorProto.DataType.UINT16:\n    case onnx.TensorProto.DataType.INT16:\n      return 2;\n    case onnx.TensorProto.DataType.FLOAT:\n    case onnx.TensorProto.DataType.INT32:\n    case onnx.TensorProto.DataType.UINT32:\n      return 4;\n    case onnx.TensorProto.DataType.INT64:\n    case onnx.TensorProto.DataType.DOUBLE:\n    case onnx.TensorProto.DataType.UINT64:\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n\nfunction createView(dataBuffer: ArrayBuffer, type: Tensor.DataType) {\n  return new (dataviewConstructor(type))(dataBuffer);\n}\n\nfunction dataviewConstructor(type: Tensor.DataType) {\n  switch (type) {\n    case 'bool':\n    case 'uint8':\n      return Uint8Array;\n    case 'int8':\n      return Int8Array;\n    case 'int16':\n      return Int16Array;\n    case 'uint16':\n      return Uint16Array;\n    case 'int32':\n      return Int32Array;\n    case 'uint32':\n      return Uint32Array;\n    case 'float32':\n      return Float32Array;\n    case 'float64':\n      return Float64Array;\n    default:\n      // should never run to here\n      throw new Error('unspecified error');\n  }\n}\n\n// convert a long number to a 32-bit integer (cast-down)\nfunction longToNumber(i: Long, type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  // INT64, UINT32, UINT64\n  if (type === onnx.TensorProto.DataType.INT64 || type === ortFbs.TensorDataType.INT64) {\n    if (i.greaterThanOrEqual(2147483648) || i.lessThan(-2147483648)) {\n      throw new TypeError('int64 is not supported');\n    }\n  } else if (\n      type === onnx.TensorProto.DataType.UINT32 || type === ortFbs.TensorDataType.UINT32 ||\n      type === onnx.TensorProto.DataType.UINT64 || type === ortFbs.TensorDataType.UINT64) {\n    if (i.greaterThanOrEqual(4294967296) || i.lessThan(0)) {\n      throw new TypeError('uint64 is not supported');\n    }\n  } else {\n    throw new TypeError(`not a LONG type: ${onnx.TensorProto.DataType[type]}`);\n  }\n\n  return i.toNumber();\n}\n\n// read one value from TensorProto\nfunction readProto(view: DataView, type: onnx.TensorProto.DataType|ortFbs.TensorDataType, byteOffset: number): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.BOOL:\n    case onnx.TensorProto.DataType.UINT8:\n      return view.getUint8(byteOffset);\n    case onnx.TensorProto.DataType.INT8:\n      return view.getInt8(byteOffset);\n    case onnx.TensorProto.DataType.UINT16:\n      return view.getUint16(byteOffset, true);\n    case onnx.TensorProto.DataType.INT16:\n      return view.getInt16(byteOffset, true);\n    case onnx.TensorProto.DataType.FLOAT:\n      return view.getFloat32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT32:\n      return view.getInt32(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT32:\n      return view.getUint32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), false), type);\n    case onnx.TensorProto.DataType.DOUBLE:\n      return view.getFloat64(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), true), type);\n    default:\n      throw new Error(`cannot read from DataView for type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\n\n// check the inputs shape before running an OP.\n// return true when the inputs pass the check\n// return false when the inputs do not fit the requirement\n// throw exception when fatal error or not implemented\nexport function checkInputsShape(inputs: Tensor[], ...expectedDimensions: number[]): boolean {\n  if (!inputs || inputs.length !== expectedDimensions.length) {\n    return false;\n  }\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].dims || inputs[i].dims.length !== expectedDimensions[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Evaluates the given expression and asserts error message if condition is unmet.\nexport function assert(expr: boolean, msg: () => string) {\n  if (!expr) {\n    throw new Error(typeof msg === 'string' ? msg : msg());\n  }\n}\n\nexport class ArrayUtil {\n  /**\n   * Verifies if 2 input arrays contain the same elements.\n   * @param n1 Array 1\n   * @param n2 Array 2\n   * @returns Whether these 2 are equal\n   */\n  static arraysEqual(\n      n1: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array,\n      n2: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array) {\n    if (n1.length !== n2.length) {\n      return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n      if (n1[i] !== n2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nexport class MatMulUtil {\n  /**\n   * Fix the input shapes for MatMul operation if they need fixing\n   * @param dimsA The shape of tensor A. Should be an array of positive integers\n   * @param dimsB The shape of tensor B. Should be an array of positive integers\n   * @returns A tuple containing the preprocessed input shapes as required by ONNX specifications\n   */\n  static preprocessInputShapes(dimsA: readonly number[], dimsB: readonly number[]):\n      [readonly number[], readonly number[]] {\n    // If the first argument is 1-D, it is promoted to a matrix by prepending\n    // a 1 to its dimensions. After matrix multiplication the prepended 1 is\n    // removed.\n    const a = (dimsA.length === 1) ? [1, dimsA[0]] : dimsA;\n\n    // If the second argument is 1-D, it is promoted to a matrix by appending\n    // a 1 to its dimensions. After matrix multiplication the appended 1 is\n    // removed.\n    const b = (dimsB.length === 1) ? [dimsB[0], 1] : dimsB;\n\n    return [a, b];\n  }\n\n  /**\n   * Fix the output shape computed for MatMul operation if it needs fixing\n   * @param outputShape The computed outputShape. Should be an array (atleast of length 2) of positive integers.\n   * This will be mutated.\n   * @param aRank The rank of tensor A.\n   * @param bRank The rank of tensor B.\n   */\n  static postprocessOutputShape(outputShape: number[], aRank: number, bRank: number) {\n    // Remove prepended dimension if first input is 1d\n    if (aRank === 1) {\n      // outputShape = outputShape.slice(0, outputShape.length - 2).concat(outputShape.slice(outputShape.length - 1));\n      outputShape.splice(outputShape.length - 2, 1);\n    }\n    // Remove appended dimension if second input is 1d\n    if (bRank === 1) {\n      outputShape.pop();\n    }\n  }\n\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n}\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    if (arank === 0) {\n      return bdims;\n    }\n    if (brank === 0) {\n      return adims;\n    }\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcas\n   * @returns The calculated indices that maps to the original tensor.\n   */\n  static index(broadcastedIndices: readonly number[], originalShape: readonly number[]): number[] {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same\n    // length as the broadcasted shape, and for each dimension the index should\n    // not be out of range.\n    const originalIndices = new Array(originalShape.length);\n    BroadcastUtil.fillIndex(broadcastedIndices, originalShape, originalIndices);\n    return originalIndices;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcast\n   * @param originalIndices The mapping of broadcastedIndices to the originalIndices (output parameter - will be\n   *     mutated).\n   */\n  static fillIndex(broadcastedIndices: readonly number[], originalShape: readonly number[], originalIndices: number[]) {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same length as the\n    // broadcasted shape, and for each dimension the index should not be out of range.\n    // NOTE 2: we assume the parameter originalIndices has the same length as the originalShape\n    const dimOffset = broadcastedIndices.length - originalShape.length;\n    for (let i = 0; i < originalShape.length; i++) {\n      originalIndices[i] = broadcastedIndices[dimOffset + i] % originalShape[i];\n    }\n  }\n\n  /**\n   * Perform the broadcasting operation on the specific operator\n   * @param a The input tensor A\n   * @param b The input tensor B\n   * @param op The operator lambda function\n   * @param inplace Whether to write the result back to A.\n   * @returns The result tensor, or undefined if input not broadcastable.\n   */\n  static calc(\n      a: Tensor, b: Tensor, op: (a: string|number, b: string|number) => (string | number), inplace: boolean,\n      resultType?: Tensor.DataType): Tensor|undefined {\n    const outputShape = BroadcastUtil.calcShape(a.dims, b.dims);\n\n    if (outputShape) {\n      if (inplace && !ShapeUtil.areEqual(outputShape, a.dims)) {\n        // B is not broadcastable to A, failed to calculate inplace.\n        return undefined;\n      }\n\n      const size = ShapeUtil.size(outputShape);\n      const c = inplace ? a : new Tensor(outputShape, resultType || a.type);\n\n      // both inputs are scalars\n      if (outputShape.length === 0) {\n        c.set([], op(a.get([]), b.get([])));\n      }\n\n      // atleast one input is a non-scalar\n      else {\n        const outputIndices = new Array<number>(outputShape.length);\n        const originalIndicesA = new Array(a.dims.length);\n        const originalIndicesB = new Array(b.dims.length);\n        let valA: string|number = 0;\n        let valB: string|number = 0;\n        let isAScalar = false;\n        let isBScalar = false;\n        if (a.dims.length === 0) {\n          valA = a.get([]);\n          isAScalar = true;\n        }\n        if (b.dims.length === 0) {\n          valB = b.get([]);\n          isBScalar = true;\n        }\n        let rest: number;\n        for (let i = 0; i < size; i++) {\n          // traversal indices\n          rest = i;\n          for (let j = outputShape.length - 1; j >= 0; j--) {\n            outputIndices[j] = rest % outputShape[j];\n            rest = Math.floor(rest / outputShape[j]);\n          }\n\n          if (!isAScalar) {\n            // map outputIndices (which is actually broadcasted) to the originalIndices\n            BroadcastUtil.fillIndex(outputIndices, a.dims, originalIndicesA);\n            valA = a.get(originalIndicesA);\n          }\n          if (!isBScalar) {\n            BroadcastUtil.fillIndex(outputIndices, b.dims, originalIndicesB);\n            valB = b.get(originalIndicesB);\n          }\n\n          c.set(outputIndices, op(valA, valB));\n        }\n      }\n\n      return c;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determine the broadcasted dims in input shape based on the given output shape.\n   * Note that this function only returns the broadcasted dims.\n   * @param inputShape The input shape\n   * @param outputShape The output shape\n   * @returns The broadcasted dims in input shape.\n   */\n  static getBroadcastDims(inputShape: readonly number[], outputShape: readonly number[]): number[] {\n    const inRank = inputShape.length;\n    const dims: number[] = [];\n    for (let i = 0; i < inRank; i++) {\n      const dim = inRank - 1 - i;\n      const a = inputShape[dim] || 1;\n      const b = outputShape[outputShape.length - 1 - i] || 1;\n      if (b > 1 && a === 1) {\n        dims.unshift(dim);\n      }\n    }\n    return dims;\n  }\n}\n\n// copy array helper\n// mimics memcpy as much as possible\nexport function arrayCopyHelper(\n    target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n    blockSize: number) {\n  if (sourceIndex < 0 || sourceIndex >= source.length) {\n    throw new Error('sourceIndex out of bounds');\n  }\n  if (targetIndex < 0 || targetIndex >= target.length) {\n    throw new Error('targetIndex out of bounds');\n  }\n  if (sourceIndex + blockSize > source.length) {\n    throw new Error('source indices to be copied are outside bounds');\n  }\n  if (targetIndex + blockSize > target.length) {\n    throw new Error('target array is too small to hold result');\n  }\n\n  for (let offset = 0; offset < blockSize; offset++) {\n    target[targetIndex + offset] = source[sourceIndex + offset];\n  }\n}\n\nexport class GemmUtil {\n  // will make sure input shapes are compatible for this op\n  // and return back the shape of the output in the form of a tuple\n  // will throw exception if the input shapes are not compatible\n  static getShapeOfGemmResult(\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\n      biasShape?: readonly number[]): readonly number[] {\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\n      throw new Error('shape need to be of size 2');\n    }\n\n    let M: number;\n    let K: number;\n    let N: number;\n\n    if (transLeft) {\n      M = leftShape[1];\n      K = leftShape[0];\n    } else {\n      M = leftShape[0];\n      K = leftShape[1];\n    }\n\n    let kDim = -1;\n\n    if (transRight) {\n      N = rightShape[0];\n      kDim = 1;\n    } else {\n      N = rightShape[1];\n      kDim = 0;\n    }\n\n    if (rightShape[kDim] !== K) {\n      throw new Error('dimension mismatch');\n    }\n\n    if (M <= 0 || N <= 0 || K <= 0) {\n      throw new Error('invalid shape specified');\n    }\n\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\n      throw new Error('gemm: invalid bias shape for broadcast');\n    }\n\n    return [M, N, K];\n  }\n}\n\nexport class ProtoUtil {\n  static tensorDataTypeFromProto(typeProto: onnx.TensorProto.DataType|\n                                 onnxruntime.experimental.fbs.TensorDataType): Tensor.DataType {\n    switch (typeProto) {\n      case onnx.TensorProto.DataType.INT8:\n        return 'int8';\n      case onnx.TensorProto.DataType.UINT8:\n        return 'uint8';\n      case onnx.TensorProto.DataType.BOOL:\n        return 'bool';\n      case onnx.TensorProto.DataType.INT16:\n        return 'int16';\n      case onnx.TensorProto.DataType.UINT16:\n        return 'uint16';\n      case onnx.TensorProto.DataType.INT32:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT32:\n        return 'uint32';\n      case onnx.TensorProto.DataType.FLOAT:\n        return 'float32';\n      case onnx.TensorProto.DataType.DOUBLE:\n        return 'float64';\n      case onnx.TensorProto.DataType.STRING:\n        return 'string';\n\n      // For INT64/UINT64, reduce their value to 32-bits.\n      // Should throw exception when overflow\n      case onnx.TensorProto.DataType.INT64:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT64:\n        return 'uint32';\n\n      default:\n        throw new Error(`unsupported data type: ${onnx.TensorProto.DataType[typeProto]}`);\n    }\n  }\n\n  static tensorDataTypeStringToEnum(type: string): onnx.TensorProto.DataType {\n    switch (type) {\n      case 'int8':\n        return onnx.TensorProto.DataType.INT8;\n      case 'uint8':\n        return onnx.TensorProto.DataType.UINT8;\n      case 'bool':\n        return onnx.TensorProto.DataType.BOOL;\n      case 'int16':\n        return onnx.TensorProto.DataType.INT16;\n      case 'uint16':\n        return onnx.TensorProto.DataType.UINT16;\n      case 'int32':\n        return onnx.TensorProto.DataType.INT32;\n      case 'uint32':\n        return onnx.TensorProto.DataType.UINT32;\n      case 'float32':\n        return onnx.TensorProto.DataType.FLOAT;\n      case 'float64':\n        return onnx.TensorProto.DataType.DOUBLE;\n      case 'string':\n        return onnx.TensorProto.DataType.STRING;\n      case 'int64':\n        return onnx.TensorProto.DataType.INT64;\n      case 'uint64':\n        return onnx.TensorProto.DataType.UINT64;\n\n      default:\n        throw new Error(`unsupported data type: ${type}`);\n    }\n  }\n\n  static tensorDimsFromProto(dims: Array<number|Long>): number[] {\n    // get rid of Long type for dims\n    return dims.map(d => Long.isLong(d) ? d.toNumber() : d);\n  }\n\n  static tensorValueTypeFromProto(valueType: onnx.TypeProto.ITensor): Graph.ValueType {\n    return {\n      tensorType: ProtoUtil.tensorDataTypeFromProto(valueType.elemType!),\n      shape: {dims: ProtoUtil.tensorDimsFromProto(valueType.shape!.dim!.map(d => d.dimValue!))}\n    };\n  }\n\n  static tensorDimsFromORTFormat(tensor: onnxruntime.experimental.fbs.Tensor) {\n    const dims = [];\n    for (let i = 0; i < tensor.dimsLength(); i++) {\n      dims.push(LongUtil.longToNumber(tensor.dims(i)!));\n    }\n    return dims;\n  }\n\n  static tensorAttributesFromORTFormat(node: onnxruntime.experimental.fbs.Node) {\n    const attributes = [];\n    for (let i = 0; i < node.attributesLength(); i++) {\n      attributes.push(node.attributes(i)!);\n    }\n    return attributes;\n  }\n}\n\nexport class LongUtil {\n  // This function is called to get a number from long type of data for attribute, dim, and ir version,\n  // which values are signed integers.\n  // To make it more generic, add an optional paramter to convert to a unsigned number.\n  static longToNumber(n: Long|flatbuffers.Long|number, unsigned?: boolean) {\n    if (Long.isLong(n)) {\n      return n.toNumber();\n    } else if (n instanceof flatbuffers.Long) {\n      return Long.fromValue({low: n.low, high: n.high, unsigned: unsigned ?? false}).toNumber();\n    }\n    return n;\n  }\n  static isLong(n: unknown) {\n    return Long.isLong(n) || n instanceof flatbuffers.Long;\n  }\n}\n\nexport class ShapeUtil {\n  static size(dims: readonly number[]): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  // `axis` inclusive\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  // `axis` exclusive\n  static sizeToDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be 0 or negative.\n      if (dims[i] <= 0) {\n        throw new Error(\n            // eslint-disable-next-line max-len\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  static computeStrides(dims: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [1];\n    }\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = dims[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * dims[i + 1];\n    }\n    return strides;\n  }\n\n  static transpose(dims: readonly number[]): readonly number[] {\n    const copy = dims.slice();\n    return copy.reverse();\n  }\n\n  static indicesToOffset(indices: readonly number[], strides: readonly number[], axis?: number): number {\n    if (axis === undefined) {\n      axis = indices.length;\n    }\n    let offset = 0;\n    for (let i = 0; i < axis; ++i) {\n      offset += strides[i] * indices[i];\n    }\n    return offset;\n  }\n\n  static offsetToIndices(offset: number, strides: readonly number[]): readonly number[] {\n    const rank = strides.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [offset * strides[0]];\n    }\n    const indices: number[] = new Array(strides.length);\n    for (let i = 0; i < indices.length - 1; ++i) {\n      indices[i] = Math.floor(offset / strides[i]);\n      offset -= indices[i] * strides[i];\n    }\n    indices[indices.length - 1] = offset;\n    return indices;\n  }\n\n  /**\n   * normailze axis of range [-r, r) into [0, r).\n   */\n  static normalizeAxis(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  static normalizeAxes(axes: readonly number[], tensorRank: number): number[] {\n    return axes.map(x => this.normalizeAxis(x, tensorRank));\n  }\n\n  // Increment an index into a tensor (in lexicographic\n  // ordering), wrapping around the specified upper_bound.\n  /**\n   * Increment an index into a tensor (in lexicographic ordering), wrapping around the specified upper_bound.\n   * @param index Given index to increment (Will be mutated)\n   * @param dims The dimensions of the tensor for which the given index corresponds to\n   * @param axisToIncrementOn The 1-indexed axis to increment on. If undefined, axisToIncrementOn == rank\n   */\n  static incrementIndex(index: number[], dims: readonly number[], axisToIncrementOn?: number) {\n    if (dims.length === 0 || index.length === 0) {\n      throw new Error('Index incrementing unsupported for scalar Tensor');\n    }\n    if (axisToIncrementOn === undefined) {\n      axisToIncrementOn = dims.length;\n    } else {\n      if (axisToIncrementOn <= 0 || axisToIncrementOn > dims.length) {\n        throw new Error('Incorrect axis to increment on');\n      }\n    }\n\n    for (let k = axisToIncrementOn - 1; k >= 0; --k) {\n      index[k]++;\n      if (index[k] < dims[k]) {\n        break;\n      }\n      index[k] = 0;\n    }\n  }\n\n  /**\n   * Produces a new dimensions array based on the values in the 'originalDimensions' and 'shape' array\n   * Used in Reshape\n   * @param originalDims Original Shape array\n   * @param shapeHints array containing values to compute the new dimensions\n   * For example:\n   * originalDims = [2,2] and shapeHints = [0,-1] will return [2,2]\n   * originalDims = [2,2] and shapeHints = [4] will return [4]\n   * originalDims = [2,2] and shapeHints = [5] will throw an exception\n   * https://github.com/onnx/onnx/blob/main/docs/Operators.md#Reshape\n   */\n\n  static calculateReshapedDims(originalDims: readonly number[], shapeHints: ArrayLike<number>): number[] {\n    // reshape to a Scalar Tensor\n    if (shapeHints.length === 0) {\n      if (originalDims.length === 0 || ShapeUtil.size(originalDims) === 1) {\n        return [];\n      } else {\n        throw new Error('cannot reshape to a scalar Tensor');\n      }\n    }\n\n    const nDims = shapeHints.length;\n    const reshapedDims = new Array<number>(nDims);\n    let unknownDimension = -1;\n    let newTensorSize = 1;\n    for (let i = 0; i < nDims; i++) {\n      if (shapeHints[i] < -1) {\n        throw new Error('a dimension in shape hints cannot be less than -1');\n      }\n      if (shapeHints[i] === -1) {\n        if (unknownDimension !== -1) {\n          throw new Error('at most one dimension in shape hints can be -1');\n        }\n        unknownDimension = i;\n      } else {\n        if (shapeHints[i] === 0) {\n          if (i >= originalDims.length) {\n            throw new Error('the dimension with value zero exceeds the dimension size of the input tensor');\n          }\n          reshapedDims[i] = originalDims[i];\n        } else {\n          reshapedDims[i] = shapeHints[i];\n        }\n        newTensorSize *= reshapedDims[i];\n      }\n    }\n\n    const oldTensorSize = ShapeUtil.size(originalDims);\n    if (unknownDimension !== -1) {\n      if (oldTensorSize % newTensorSize !== 0) {\n        throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${\n            originalDims}] Output shape: [${shapeHints}]`);\n      }\n      reshapedDims[unknownDimension] = oldTensorSize / newTensorSize;\n    }\n    // validate sizes from originalDims and reshapedDims match\n    else {\n      if (newTensorSize !== oldTensorSize) {\n        throw new Error('reshapedDims and originalDims don\\'t have matching sizes');\n      }\n    }\n    return reshapedDims;\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n\n  /**\n   * Validates if the given `dims` or `shape` is valid in ONNX.js context and returns data size\n   * @param dims - input `dims` that needs to be checked\n   */\n  static validateDimsAndCalcSize(dims: readonly number[]): number {\n    if (dims.length > 6) {\n      throw new TypeError('Only rank 0 to 6 is supported for tensor shape.');\n    }\n    let size = 1;\n    for (const n of dims) {\n      if (!Number.isInteger(n)) {\n        throw new TypeError(`Invalid shape: ${n} is not an integer`);\n      }\n      if (n < 0 || n > 2147483647) {\n        throw new TypeError(`Invalid shape: length ${n} is not allowed`);\n      }\n      size *= n;\n    }\n    return size;\n  }\n\n  /**\n   * Determines the shape of output tensor y = flatten(x, axis)\n   * @param dims - shape of input tensor\n   * @param axis - flatten axis, in the range [-r, r]\n   */\n  static flattenShape(dims: readonly number[], axis: number): readonly number[] {\n    if (axis < 0) {\n      axis += dims.length;\n    }\n    const total = dims.reduce((x, y) => x * y, 1);\n    const right = dims.slice(axis).reduce((x, y) => x * y, 1);\n    const outputDims = [total / right, right];\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = squeeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - squeeze axes\n   */\n  static squeezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>();\n\n    // sanity check\n    axes = ShapeUtil.normalizeAxes(axes, dims.length);\n\n    for (let i = 0; i < dims.length; i++) {\n      const inSqueezeList = axes.indexOf(i) >= 0;\n      if (inSqueezeList && dims[i] !== 1) {\n        throw new Error('squeeze an axis of size different than 1');\n      }\n\n      if ((axes.length === 0 && dims[i] > 1) || (axes.length > 0 && !inSqueezeList)) {\n        outputDims.push(dims[i]);\n      }\n    }\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = unsqueeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - unsqueeze axes\n   */\n  static unsqueezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>(dims.length + axes.length);\n\n    // initialize the array elements to 0\n    outputDims.fill(0);\n\n    // set all axes indices to 1 in outputDims and check for duplicates\n    for (let i = 0; i < axes.length; i++) {\n      const axis = ShapeUtil.normalizeAxis(axes[i], outputDims.length);\n      if (axis >= outputDims.length) {\n        throw new Error('\\'axes\\' has an out of range axis');\n      }\n      if (outputDims[axis] !== 0) {\n        throw new Error('\\'axes\\' has a duplicate axis');\n      }\n\n      outputDims[axis] = 1;\n    }\n\n    // fill in the zero entries of outputDims with the input tensor's shape\n    let inputDimsIterator = 0;\n    for (let i = 0; i < outputDims.length; i++) {\n      if (outputDims[i] === 0) {\n        outputDims[i] = dims[inputDimsIterator++];\n      }\n    }\n\n    // sanity check assertion. 'inputDimsIterator'\n    // should be equal to the length of 'dims'\n    if (inputDimsIterator !== dims.length) {\n      throw new Error('the unsqueezed dimension could not be established');\n    }\n\n    return outputDims;\n  }\n}\n\n// bunch of helper methods that do a variety of math operations\nexport class MathUtil {\n  // y = (x*x) + y\n  static sqr(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += Math.pow(source[sourceIndex + offset], 2);\n    }\n  }\n\n  // y = ax + y\n  static axpy(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, alpha: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += (alpha * source[sourceIndex + offset]);\n    }\n  }\n\n  // y = pow(x, b)\n  static powx(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, b: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = Math.pow(source[sourceIndex + offset], b);\n    }\n  }\n\n  // y = x * y\n  static mul(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = (source[sourceIndex + offset] * target[targetIndex + offset]);\n    }\n  }\n}\n\nexport class SplitUtil {\n  /**\n   * Calculates new Shapes from existing one and the splits given along the axis provides\n   * @param dims Shape of the Tensor to be splitted into two or more Shapes\n   * @param axis The dimension along which the Tensor will be split\n   * @param splits Offsets for the start of each split\n   */\n  static splitShape(dims: readonly number[], axis: number, split: number[], numOutputs?: number):\n      [number[][], number[]] {\n    if (split.length === 0) {\n      if (!numOutputs) {\n        throw new Error('need to know number of outputs when the \\'split\\' attribute is not specified');\n      }\n      SplitUtil.determineSplit(dims[axis], numOutputs, split);\n    }\n\n    const shapes: number[][] = [];\n    const offsets = [0];\n    for (let i = 0; i < split.length; ++i) {\n      if (i !== 0) {\n        offsets.push(offsets[i - 1] + split[i - 1]);\n      }\n      const shape = dims.slice();\n      shape[axis] = split[i];\n      shapes.push(shape);\n    }\n    return [shapes, offsets];\n  }\n\n  static determineSplit(numElementsAlongAxis: number, numOutputs: number, split: number[]) {\n    // If 'split' is not specified by the user, we need to partition the number of elements equally among the outputs\n    if (numElementsAlongAxis % numOutputs !== 0) {\n      throw new Error('cannot split tensor to equal sized parts');\n    }\n    for (let i = 0; i < numOutputs; ++i) {\n      split.push(numElementsAlongAxis / numOutputs);\n    }\n  }\n}\n\nexport class ReduceUtil {\n  /**\n   * Perform reduce operations on the specific operator\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduce(\n      a: Tensor, axes: number[], keepdims: boolean, op1: (b: number) => number,\n      op2: (a: number, b: number) => number): Tensor {\n    const dims = a.dims.slice(0);\n    // if axes is not set, perform reduce on all axes\n    if (axes.length === 0) {\n      dims.forEach((d, ind) => axes.push(ind));\n    }\n    // get a temporary broadcastable output shape\n    const outputDims = ReduceUtil.calcReduceShape(dims, axes, true);\n\n    // loop through the output and calculate result one by one\n    const size = ShapeUtil.size(outputDims);\n    const y = new Tensor(outputDims, a.type);\n    const strides = ShapeUtil.computeStrides(outputDims);\n    const inputStrides = ShapeUtil.computeStrides(dims);\n    const indicesY = new Array(dims.length);\n    for (let i = 0; i < size; i++) {\n      const indices = ShapeUtil.offsetToIndices(i, strides);\n      // map index\n      BroadcastUtil.fillIndex(indices, dims, indicesY);\n      y.set(\n          indices,\n          ReduceUtil.calcReduceByAxis(\n              a.numberData, axes, dims, 0, ShapeUtil.indicesToOffset(indicesY, inputStrides), op1, op2));\n    }\n\n    if (keepdims) {\n      return y;\n    } else {\n      // keepdims == 0, calculate the expected shape\n      return new Tensor(\n          ReduceUtil.calcReduceShape(dims, axes, keepdims), y.type, undefined, undefined, y.data, y.dataId);\n    }\n  }\n\n  /**\n   * Perform reduce operations on the specific operator on specific axes\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param dims The input dimension.\n   * @param curAxisInd Index in axes specifying the current dimension along\n   *      which the tensor will be reduced\n   * @param pos The current index of element to perform operation\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduceByAxis(\n      input: Tensor.NumberType, axes: number[], dims: number[], curAxisInd: number, pos: number,\n      op1: (b: number) => number, op2: (a: number, b: number) => number): number {\n    let res = 0;\n    if (curAxisInd >= axes.length) {\n      return op1(input[pos]);\n    }\n    const axis = axes[curAxisInd];\n    const step = axis >= dims.length ? 1 : ShapeUtil.size(dims.slice(axis + 1));\n    for (let i = 0; i < dims[axis]; i++) {\n      res = i === 0 ? ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2) :\n                      op2(res, ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2));\n      pos += step;\n    }\n    return res;\n  }\n\n  /**\n   * Calculate the expected shape of a reduce operation\n   * @param dims The input tensor dimension\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   */\n  static calcReduceShape(dims: readonly number[], axes: readonly number[], keepDims: boolean): number[] {\n    const outputDims = dims.slice();\n    for (let i = 0; i < axes.length; i++) {\n      if (keepDims) {\n        outputDims[axes[i]] = 1;\n      } else {\n        outputDims[axes[i]] = 0;\n      }\n    }\n    return outputDims.filter(dim => dim !== 0);\n  }\n}\n\nexport class PoolConvUtil {\n  /**\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   */\n  static adjustPoolAttributes(\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\n      dilations: number[], pads: number[]) {\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\n    }\n\n    if (isGlobalOperator) {\n      // adjust kernel shape to cover the input dims\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        if (dim >= kernelShape.length) {\n          kernelShape.push(inputDims[dim + 2]);\n        } else {\n          kernelShape[dim] = inputDims[dim + 2];\n        }\n      }\n    }\n\n    // adjust strides length to match kernel shape length\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < strides.length) {\n        if (strides[dim] < 0) {\n          throw new Error('strides should be greater than or equal to 1');\n        }\n      } else {\n        strides.push(1);\n      }\n    }\n\n    // adjust dilation value\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < dilations.length) {\n        if (dilations[dim] < 0) {\n          throw new Error('dilations should be greater than or equal to 1');\n        }\n      } else {\n        dilations.push(1);\n      }\n    }\n\n    // adjust pads length to match 2 * kernel shape length\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\n      if (dim < pads.length) {\n        if (pads[dim] < 0) {\n          throw new Error('pad should be greater than or equal to 1');\n        }\n      } else {\n        pads.push(0);\n      }\n    }\n\n    // sanity checks for values in kernel shapes and pads\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (kernelShape[dim] <= 0) {\n        throw new Error('kernel shapes need to be greater than 0');\n      }\n\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\n        throw new Error('pads should be smaller than kernel');\n      }\n    }\n  }\n\n  // adjust pad values based on 'autoPad' attribute\n  static adjustPadsBasedOnAutoPad(\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\n      kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (!autoPad) {\n      return;\n    }\n\n    if (pads.length !== 2 * (inputDims.length - 2)) {\n      throw new Error('length of pads should be twice the length of data dimensions');\n    }\n\n    if (strides.length !== (inputDims.length - 2)) {\n      throw new Error('length of strides should be the length of data dimensions');\n    }\n\n    if (kernelShape.length !== (inputDims.length - 2)) {\n      throw new Error('length of kernel shapes should be the length of data dimensions');\n    }\n\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\n      PoolConvUtil.adjustPadAndReturnShape(\n          inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n          autoPad);\n    }\n  }\n\n  /**\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computePoolOutputShape(\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0) {\n      throw new Error('input shape must be of size greater than 0');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], inputDims[1]];\n\n    PoolConvUtil.computeShapeHelper(\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  /**\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computeConvOutputShape(\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], filterDims[0]];\n\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\n  // called by computePoolOutputShape() and computeConvOutputShape()\n  // adjust pads based on 'autoPad' attribute prior to shape computation\n  private static computeShapeHelper(\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (isGlobalOperator) {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(1);\n      }\n    } else {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n            autoPad));\n      }\n    }\n  }\n\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\n  private static adjustPadAndReturnShape(\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\n      padTailIndex: number, autoPad?: string): number {\n    const dkernel = dilation * (kernel - 1) + 1;\n    if (autoPad && autoPad !== 'NOTSET') {\n      switch (autoPad) {\n        case 'VALID':\n          pads[padHeadIndex] = 0;\n          pads[padTailIndex] = 0;\n          return Math.floor(((inSize - dkernel) / stride) + 1);\n        case 'SAME_LOWER':\n        case 'SAME_UPPER':\n          if (dilation !== 1) {\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\n          } else {\n            const legacyTargetSize = (inSize + stride - 1) / stride;\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\n            pads[padHeadIndex] =\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\n          }\n        default:\n          throw new Error('Unsupported AutoPad type');\n      }\n    } else {\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\n    }\n  }\n}\n\nexport const MIN_CLIP = -3.4028234663852886e+38;\nexport const MAX_CLIP = 3.4028234663852886e+38;\n\nexport function decodeUtf8String(buffer: Uint8Array): string {\n  return new TextDecoder().decode(buffer);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport {LOG_DEBUG} from './log';\nimport {TensorView} from './tensor';\nimport {createGpuDataManager, GpuDataManager} from './webgpu/gpu-data-manager';\nimport {RunFunction, WEBGPU_OP_RESOLVE_RULES} from './webgpu/op-resolve-rules';\nimport {ProgramManager} from './webgpu/program-manager';\nimport {ComputeContext, GpuData, GpuDataType, ProgramInfo, ProgramInfoLoader} from './webgpu/types';\n\n/**\n * get a unique key representing the program from the program info,input shapes and types.\n *\n * @returns a unique key is a shorter string than the shader source, which contains all the information to identify a\n * program. if the key is the same, the program shader source should be the same, so we can reuse the program.\n *\n */\nconst getProgramInfoUniqueKey =\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTensorShapes: ReadonlyArray<TensorView['dims']>,\n     inputGpuDataTypes: readonly GpuDataType[]): string => {\n      const inputTensorShapesToString = inputTensorShapes.map(d => `${d.join(',')}`).join('_');\n      const inputGpuDataTypesToString = inputGpuDataTypes.join('_');\n      let key = programInfo.name;\n      if (programInfo.cacheHint) {\n        key += '[' + programInfo.cacheHint + ']';\n      }\n      key += ':' + inputTensorShapesToString + ';' + inputGpuDataTypesToString;\n      return key;\n    };\n\n/**\n * this class is designed to store status and being used as a singleton for JSEP. It will be passed to jsepInit() as\n * the first parameter so that it is stored for future use.\n */\nexport class WebGpuBackend {\n  device: GPUDevice;\n  /**\n   * an instance of GpuDataManager to manage a GpuDataId -> GpuBuffer mapping\n   */\n  gpuDataManager: GpuDataManager;\n  /**\n   * an instance of ProgramManager to build and run WebGPU compute shader program, and manage a ProgramKey -> Program\n   * artifacts mapping\n   */\n  programManager: ProgramManager;\n\n  /**\n   * representing the kernel ID of which is currently being computed (CPU code perspective).\n   * `null` means no kernel is being computed.\n   * only one kernel can be computed at a moment.\n   */\n  currentKernelId: number|null = null;\n  /**\n   * a list of temporary GPU data for the current kernel. should release when the kernel done computation.\n   */\n  private temporaryData: GpuData[];\n  /**\n   * a KernelID -> a GPU data list, which stores persistent GPU data owned by the specific kernel.\n   */\n  private kernelPersistentData: Map<number, GpuData[]>;\n  /**\n   * a KernelID -> a custom data, which stores custom data owned by the specific kernel.\n   */\n  private kernelCustomData: Map<number, {[key: string]: unknown}>;\n  /**\n   * get the custom data of the current kernel\n   */\n  get currentKernelCustomData(): {[key: string]: unknown} {\n    if (this.currentKernelId === null) {\n      throw new Error('currentKernelCustomData(): currentKernelId is null. (should not happen)');\n    }\n\n    let data = this.kernelCustomData.get(this.currentKernelId);\n    if (!data) {\n      data = {};\n      this.kernelCustomData.set(this.currentKernelId, data);\n    }\n\n    return data;\n  }\n\n  /**\n   * a KernelID -> kernel info mapping. value is [ name, run function, [optional] preprocess_attribute_once function ]\n   */\n  kernels: Map<number, [string, RunFunction, [((attribute: unknown) => unknown) | undefined, unknown]]>;\n\n  commandEncoder: GPUCommandEncoder|null = null;\n  computePassEncoder: GPUComputePassEncoder|null = null;\n  pendingDispatchNumber = 0;\n\n  profilingEnabled = false;\n  profilingQuerySet: GPUQuerySet;\n  profilingTimeBase?: bigint;\n\n  async initialize(): Promise<void> {\n    if (!navigator.gpu) {\n      // WebGPU is not available.\n      throw new Error('WebGpuBackend: WebGPU is not available.');\n    }\n\n    const adapter = await navigator.gpu.requestAdapter();\n    if (!adapter) {\n      throw new Error('WebGpuBackend: Failed to get GPU adapter.');\n    }\n\n    const deviceDescriptor: GPUDeviceDescriptor = {\n      requiredLimits: {\n        maxComputeWorkgroupStorageSize: adapter.limits.maxComputeWorkgroupStorageSize,\n        maxComputeWorkgroupsPerDimension: adapter.limits.maxComputeWorkgroupsPerDimension,\n        maxStorageBufferBindingSize: adapter.limits.maxStorageBufferBindingSize,\n      }\n    };\n    // WebGPU Spec: Timestamp Queries Inside Passes\n    // https://github.com/gpuweb/gpuweb/blob/main/proposals/timestamp-query-inside-passes.md\n    if (adapter.features.has('timestamp-query-inside-passes') && env.webgpu.profilingMode === 'default') {\n      this.profilingEnabled = true;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      deviceDescriptor.requiredFeatures = ['timestamp-query-inside-passes' as any];\n    }\n\n    this.device = await adapter.requestDevice(deviceDescriptor);\n    this.gpuDataManager = createGpuDataManager(this);\n    this.programManager = new ProgramManager(this);\n    this.kernels = new Map();\n    this.kernelPersistentData = new Map();\n    this.kernelCustomData = new Map();\n    // TODO: set up flags\n\n    this.device.onuncapturederror = ev => {\n      if (ev.error instanceof GPUValidationError) {\n        // eslint-disable-next-line no-console\n        console.error(`An uncaught WebGPU validation error was raised: ${ev.error.message}`);\n      }\n    };\n\n    if (this.profilingEnabled) {\n      this.profilingQuerySet = this.device.createQuerySet({\n        type: 'timestamp',\n        count: 2,\n      });\n    }\n  }\n\n  dispose(): void {\n    // currently, we do not do anything in this function. In all known use cases, we don't have the requirement to\n    // actually dispose the WebGpuBackend instance, because it's always used as a singleton.\n    //\n    // revisit this place if we get real requirement to dispose the instance.\n  }\n\n  getCommandEncoder(): GPUCommandEncoder {\n    if (!this.commandEncoder) {\n      this.commandEncoder = this.device.createCommandEncoder();\n    }\n    return this.commandEncoder;\n  }\n\n  getComputePassEncoder(): GPUComputePassEncoder {\n    if (!this.computePassEncoder) {\n      this.computePassEncoder = this.getCommandEncoder().beginComputePass();\n    }\n    return this.computePassEncoder;\n  }\n\n  endComputePass(): void {\n    if (this.computePassEncoder) {\n      this.computePassEncoder.end();\n      this.computePassEncoder = null;\n    }\n  }\n\n  flush(): void {\n    this.endComputePass();\n    this.device.queue.submit([this.getCommandEncoder().finish()]);\n    this.gpuDataManager.refreshPendingBuffers();\n    this.commandEncoder = null;\n    this.pendingDispatchNumber = 0;\n  }\n\n  /**\n   * run a WebGPU program.\n   * @param program either a ProgramInfo instance containing metadata including the shader code, or a function that\n   * can be called and return a ProgramInfo instance\n   * @param inputs a TensorView array. each element represents a value already exists in GPU.\n   * @param outputIndices an indices array. each element can be either -1 (temporary data), -2 (persistent data) or an\n   * index to the kernel's output.\n   * @param createKernelOutput a callback function that create a value to kernel's output with the given index\n   * @param createIntermediateOutput a callback function that create a value as a intermediate value, either temporary\n   * or persistent (owned by the current kernel)\n   * @returns a TensorView array representing the result.\n   */\n  run(program: ProgramInfoLoader|ProgramInfo, inputs: readonly TensorView[], outputIndices: readonly number[],\n      createKernelOutput: (index: number, dataType: number, dims: readonly number[]) => TensorView,\n      createIntermediateOutput: (dataType: number, dims: readonly number[]) => TensorView): TensorView[] {\n    if (inputs.length !== program.inputTypes.length) {\n      throw new Error(`Input size must be equal to ${program.inputTypes.length}.`);\n    }\n\n    // create info for inputs\n    const inputDatas: GpuData[] = [];\n    for (let i = 0; i < inputs.length; ++i) {\n      const gpuData = this.gpuDataManager.get(inputs[i].data);\n      if (!gpuData) {\n        throw new Error(`no GPU data for input: ${inputs[i].data}`);\n      }\n      inputDatas[i] = gpuData;\n    }\n\n    const key = getProgramInfoUniqueKey(program, inputs.map(i => i.dims), inputDatas.map(i => i.type));\n    let artifact = this.programManager.getArtifact(key);\n    const programInfo = artifact ?\n        artifact.programInfo :\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\n                                                                    (program as ProgramInfo));\n\n    // check output indices\n    const validatedOutputIndices = outputIndices.length === 0 ? programInfo.outputs.map((_, i) => i) : outputIndices;\n    if (validatedOutputIndices.length !== programInfo.outputs.length) {\n      throw new Error(`Output size ${validatedOutputIndices.length} must be equal to ${programInfo.outputs.length}.`);\n    }\n\n    // create info for outputs\n    const outputTensorViews: TensorView[] = [];\n    const outputDatas: GpuData[] = [];\n    for (let i = 0; i < programInfo.outputs.length; ++i) {\n      // value -1 and -2 are used for creating temporary and persistent outputs. so -2, -1 and 0, 1, 2, ... are valid\n      // output indices. see type definition of ComputeContextInputsOutputsMapping for more details.\n      if (!Number.isInteger(validatedOutputIndices[i]) || validatedOutputIndices[i] < -2 ||\n          validatedOutputIndices[i] >= programInfo.outputs.length) {\n        throw new Error(`Invalid output index: ${validatedOutputIndices[i]}`);\n      }\n      const isTemporary = validatedOutputIndices[i] === -1;\n      const isPersistent = validatedOutputIndices[i] === -2;\n      const tensorView = (isTemporary || isPersistent) ?\n          createIntermediateOutput(programInfo.outputs[i].dataType, programInfo.outputs[i].dims) :\n          createKernelOutput(validatedOutputIndices[i], programInfo.outputs[i].dataType, programInfo.outputs[i].dims);\n      const gpuData = this.gpuDataManager.get(tensorView.data);\n      if (!gpuData) {\n        throw new Error(`no GPU data for output: ${tensorView.data}`);\n      }\n      if (isTemporary) {\n        this.temporaryData.push(gpuData);\n      }\n      if (isPersistent) {\n        let persistentData = this.kernelPersistentData.get(this.currentKernelId!);\n        if (!persistentData) {\n          persistentData = [];\n          this.kernelPersistentData.set(this.currentKernelId!, persistentData);\n        }\n        persistentData.push(gpuData);\n      }\n      outputTensorViews.push(tensorView);\n      outputDatas.push(gpuData);\n    }\n\n    const normalizedDispatchGroup = this.programManager.normalizeDispatchGroupSize(programInfo.dispatchGroup(inputs));\n\n    if (!artifact) {\n      artifact = this.programManager.build(programInfo, normalizedDispatchGroup);\n      this.programManager.setArtifact(key, artifact);\n    }\n\n    LOG_DEBUG(\n        'info',\n        () => `[ProgramManager] run \"${programInfo.name}\" (key=${key}) with ${normalizedDispatchGroup[0]}x${\n            normalizedDispatchGroup[1]}x${normalizedDispatchGroup[2]}`);\n    this.programManager.run(artifact, inputDatas, outputDatas, normalizedDispatchGroup);\n\n    return outputTensorViews;\n  }\n\n  upload(gpuDataId: number, data: Uint8Array): void {\n    this.gpuDataManager.upload(gpuDataId, data);\n  }\n\n  memcpy(src: number, dst: number): void {\n    this.gpuDataManager.memcpy(src, dst);\n  }\n\n  async download(gpuDataId: number, getTargetBuffer: () => Uint8Array): Promise<void> {\n    const arrayBuffer = await this.gpuDataManager.download(gpuDataId);\n\n    // the underlying buffer may be changed after the async function is called. so we use a getter function to make sure\n    // the buffer is up-to-date.\n    const data = getTargetBuffer();\n    data.set(new Uint8Array(arrayBuffer));\n  }\n\n  alloc(size: number): number {\n    return this.gpuDataManager.create(size).id;\n  }\n\n  free(ptr: number): number {\n    return this.gpuDataManager.release(ptr);\n  }\n\n  createKernel(name: string, kernelId: number, attribute: unknown): void {\n    const op = WEBGPU_OP_RESOLVE_RULES.get(name);\n    if (!op) {\n      throw new Error(`kernel not implemented: ${name}`);\n    }\n\n    this.kernels.set(kernelId, [name, op[0], [op[1], attribute]]);\n  }\n\n  releaseKernel(kernelId: number): void {\n    const persistentData = this.kernelPersistentData.get(kernelId);\n    if (persistentData) {\n      for (const data of persistentData) {\n        this.gpuDataManager.release(data.id);\n      }\n      this.kernelPersistentData.delete(kernelId);\n    }\n\n    this.kernelCustomData.delete(kernelId);\n    this.kernels.delete(kernelId);\n  }\n\n  computeKernel(kernelId: number, context: ComputeContext): number {\n    const kernel = this.kernels.get(kernelId);\n    if (!kernel) {\n      throw new Error(`kernel not created: ${kernelId}`);\n    }\n    const [name, kernelEntry, attributes] = kernel;\n    if (this.currentKernelId !== null) {\n      throw new Error(`kernel \"${name}\" is not allowed to be called recursively`);\n    }\n    this.currentKernelId = kernelId;\n\n    // parse attributes if necessary\n    if (attributes[0]) {\n      attributes[1] = attributes[0](attributes[1]);\n      attributes[0] = undefined;\n    }\n\n    LOG_DEBUG('info', () => `[WebGPU] Start to run kernel \"${name}\"...`);\n\n    this.temporaryData = [];\n    try {\n      kernelEntry(context, attributes[1]);\n      return 0;  // ORT_OK\n    } catch (e) {\n      LOG_DEBUG('warning', `[WebGPU] Kernel \"${name}\" failed. Error: ${e}`);\n      return 1;  // ORT_FAIL\n    } finally {\n      for (const data of this.temporaryData) {\n        this.gpuDataManager.release(data.id);\n      }\n      this.temporaryData = [];\n      this.currentKernelId = null;\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OrtWasmModule} from '../binding/ort-wasm';\nimport {getTensorElementSize} from '../wasm-common';\n\nimport {WebGpuBackend} from './backend-webgpu';\nimport {LOG_DEBUG} from './log';\nimport {TensorView} from './tensor';\nimport {ShapeUtil} from './util';\nimport {ComputeContext, ComputeContextInputsOutputsMapping, ProgramInfo, ProgramInfoLoader} from './webgpu/types';\n\n/* eslint-disable no-bitwise */\n\nclass TensorViewImpl implements TensorView {\n  constructor(\n      private module: OrtWasmModule, public readonly dataType: number, public readonly data: number,\n      public readonly dims: readonly number[]) {}\n\n  getFloat32Array(): Float32Array {\n    return new Float32Array(this.module.HEAP8.buffer, this.data, ShapeUtil.size(this.dims));\n  }\n\n  reshape(newDims: readonly number[]): TensorView {\n    if (ShapeUtil.size(newDims) !== ShapeUtil.size(this.dims)) {\n      throw new Error('Invalid new shape');\n    }\n    return new TensorViewImpl(this.module, this.dataType, this.data, newDims);\n  }\n}\n\nclass ComputeContextImpl implements ComputeContext {\n  readonly opKernelContext: number;\n  readonly inputs: readonly TensorView[];\n  get customData(): {[key: string]: unknown} {\n    return this.backend.currentKernelCustomData;\n  }\n  constructor(private module: OrtWasmModule, private backend: WebGpuBackend, contextDataOffset: number) {\n    const heapU32 = module.HEAPU32;\n\n    // extract context data\n    let dataIndex = (contextDataOffset >> 2);\n    this.opKernelContext = heapU32[dataIndex++];\n    const inputCount = heapU32[dataIndex++];\n\n    const inputs: TensorView[] = [];\n    for (let i = 0; i < inputCount; i++) {\n      const dataType = heapU32[dataIndex++];\n      const data = heapU32[dataIndex++];\n      const dim = heapU32[dataIndex++];\n      const dims: number[] = [];\n      for (let d = 0; d < dim; d++) {\n        dims.push(heapU32[dataIndex++]);\n      }\n      inputs.push(new TensorViewImpl(module, dataType, data, dims));\n    }\n    this.inputs = inputs;\n  }\n\n  compute(program: ProgramInfoLoader|ProgramInfo, inputsOutputsMapping?: ComputeContextInputsOutputsMapping):\n      TensorView[] {\n    // prepare inputs. inputs should always be valid data.\n    const mappedInputs =\n        inputsOutputsMapping?.inputs?.map(i => typeof i === 'number' ? this.inputs[i] : i) ?? this.inputs;\n    // prepare outputs.\n    const outputIndices = inputsOutputsMapping?.outputs ?? [];\n    const createKernelOutput = (index: number, dataType: number, dims: readonly number[]): TensorView =>\n        new TensorViewImpl(this.module, dataType, this.output(index, dims), dims);\n    const createTemporaryOutput = (dataType: number, dims: readonly number[]): TensorView => {\n      const elementSize = getTensorElementSize(dataType);\n      if (!elementSize) {\n        throw new Error(`Unsupported data type: ${dataType}`);\n      }\n      const bufferSize = elementSize * ShapeUtil.size(dims);\n      return new TensorViewImpl(this.module, dataType, this.backend.gpuDataManager.create(bufferSize).id, dims);\n    };\n    return this.backend.run(program, mappedInputs, outputIndices, createKernelOutput, createTemporaryOutput);\n  }\n\n  output(index: number, dims: readonly number[]): number {\n    const stack = this.module.stackSave();\n    try {\n      const data = this.module.stackAlloc((1 + dims.length) * 4 /* sizeof(size_t) */);\n      let offset = data >> 2;\n      this.module.HEAPU32[offset++] = dims.length;\n      for (let i = 0; i < dims.length; i++) {\n        this.module.HEAPU32[offset++] = dims[i];\n      }\n      return this.module._JsepOutput(this.opKernelContext, index, data);\n    } finally {\n      this.module.stackRestore(stack);\n    }\n  }\n}\n\nexport const init = async(module: OrtWasmModule): Promise<void> => {\n  const init = module.jsepInit;\n  if (init && navigator.gpu) {\n    const backend = new WebGpuBackend();\n    await backend.initialize();\n\n    init(\n        // backend\n        {backend},\n\n        // jsepAlloc()\n        (size: number) => backend.alloc(size),\n\n        // jsepFree()\n        (ptr: number) => backend.free(ptr),\n\n        // jsepCopy(src, dst, size, isSourceGpu)\n        (src: number, dst: number, size: number, isSourceGpu = false) => {\n          if (isSourceGpu) {\n            LOG_DEBUG('verbose', () => `[WebGPU] jsepCopyGpuToGpu: src=${src}, dst=${dst}, size=${size}`);\n            backend.memcpy(src, dst);\n          } else {\n            LOG_DEBUG('verbose', () => `[WebGPU] jsepCopyCpuToGpu: dataOffset=${src}, gpuDataId=${dst}, size=${size}`);\n            const data = module.HEAPU8.subarray(src, src + size);\n            backend.upload(dst, data);\n          }\n        },\n\n        // jsepCopyAsync(src, dst, size)\n        async(gpuDataId: number, dataOffset: number, size: number):\n            Promise<void> => {\n              LOG_DEBUG(\n                  'verbose',\n                  () => `[WebGPU] jsepCopyGpuToCpu: gpuDataId=${gpuDataId}, dataOffset=${dataOffset}, size=${size}`);\n\n              await backend.download(gpuDataId, () => module.HEAPU8.subarray(dataOffset, dataOffset + size));\n            },\n\n        // jsepCreateKernel\n        (name: string, kernel: number, attribute: unknown) => backend.createKernel(name, kernel, attribute),\n\n        // jsepReleaseKernel\n        (kernel: number) => backend.releaseKernel(kernel),\n\n        // jsepRun\n        (kernel: number, contextDataOffset: number) => {\n          LOG_DEBUG('verbose', () => `[WebGPU] jsepRun: kernel=${kernel}, contextDataOffset=${contextDataOffset}`);\n          const context = new ComputeContextImpl(module, backend, contextDataOffset);\n          return backend.computeKernel(kernel, context);\n        });\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport {logLevelStringToEnum} from '../wasm-common';\n\ntype LogLevel = NonNullable<typeof env.logLevel>;\ntype MessageString = string;\ntype MessageFunction = () => string;\ntype Message = MessageString|MessageFunction;\n\nconst logLevelPrefix = ['V', 'I', 'W', 'E', 'F'];\n\nconst doLog = (level: number, message: string): void => {\n  // eslint-disable-next-line no-console\n  console.log(`[${logLevelPrefix[level]},${new Date().toISOString()}]${message}`);\n};\n\n/**\n * A simple logging utility to log messages to the console.\n */\nexport const LOG = (logLevel: LogLevel, msg: Message): void => {\n  const messageLevel = logLevelStringToEnum(logLevel);\n  const configLevel = logLevelStringToEnum(env.logLevel!);\n  if (messageLevel >= configLevel) {\n    doLog(messageLevel, typeof msg === 'function' ? msg() : msg);\n  }\n};\n\n/**\n * A simple logging utility to log messages to the console. Only logs when debug is enabled.\n */\nexport const LOG_DEBUG: typeof LOG = (...args: Parameters<typeof LOG>) => {\n  if (env.debug) {\n    LOG(...args);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable no-param-reassign */\n\nexport class MatMulUtil {\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n}\n\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    if (arank === 0) {\n      return bdims;\n    }\n    if (brank === 0) {\n      return adims;\n    }\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n\nexport class ShapeUtil {\n  /**\n   * calculate the size (number of elements)\n   */\n  static size(dims: readonly number[]): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  /**\n   * calculate the size (number of elements) from the given axis (inclusive)\n   */\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  /**\n   * calculate the size (number of elements) to the given axis (exclusive)\n   */\n  static sizeToDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  /**\n   * calculate the size (number of elements) from and to the given axis [start, end)\n   */\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be 0 or negative.\n      if (dims[i] <= 0) {\n        throw new Error(\n            // eslint-disable-next-line max-len\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  static computeStrides(dims: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [1];\n    }\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = dims[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * dims[i + 1];\n    }\n    return strides;\n  }\n\n  /**\n   * normailze axis of range [-r, r) into [0, r).\n   */\n  static normalizeAxis(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  static normalizeAxes(axes: readonly number[], tensorRank?: number): number[] {\n    return axes.map(x => this.normalizeAxis(x, tensorRank ?? axes.length));\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n}\n\nexport class PoolConvUtil {\n  /**\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   */\n  static adjustPoolAttributes(\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\n      dilations: number[], pads: number[]): void {\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\n    }\n\n    if (isGlobalOperator) {\n      // adjust kernel shape to cover the input dims\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        if (dim >= kernelShape.length) {\n          kernelShape.push(inputDims[dim + 2]);\n        } else {\n          kernelShape[dim] = inputDims[dim + 2];\n        }\n      }\n    }\n\n    // adjust strides length to match kernel shape length\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < strides.length) {\n        if (strides[dim] < 0) {\n          throw new Error('strides should be greater than or equal to 1');\n        }\n      } else {\n        strides.push(1);\n      }\n    }\n\n    // adjust dilation value\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < dilations.length) {\n        if (dilations[dim] < 0) {\n          throw new Error('dilations should be greater than or equal to 1');\n        }\n      } else {\n        dilations.push(1);\n      }\n    }\n\n    // adjust pads length to match 2 * kernel shape length\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\n      if (dim < pads.length) {\n        if (pads[dim] < 0) {\n          throw new Error('pad should be greater than or equal to 1');\n        }\n      } else {\n        pads.push(0);\n      }\n    }\n\n    // sanity checks for values in kernel shapes and pads\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (kernelShape[dim] <= 0) {\n        throw new Error('kernel shapes need to be greater than 0');\n      }\n\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\n        throw new Error('pads should be smaller than kernel');\n      }\n    }\n  }\n\n  // adjust pad values based on 'autoPad' attribute\n  static adjustPadsBasedOnAutoPad(\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\n      kernelShape: readonly number[], pads: number[], isChannelLast: boolean, autoPad?: string): void {\n    if (!autoPad) {\n      return;\n    }\n\n    if (pads.length !== 2 * (inputDims.length - 2)) {\n      throw new Error('length of pads should be twice the length of data dimensions');\n    }\n\n    if (strides.length !== (inputDims.length - 2)) {\n      throw new Error('length of strides should be the length of data dimensions');\n    }\n\n    if (kernelShape.length !== (inputDims.length - 2)) {\n      throw new Error('length of kernel shapes should be the length of data dimensions');\n    }\n\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\n      PoolConvUtil.adjustPadAndReturnShape(\n          inputDims[dim + (isChannelLast ? 1 : 2)], strides[dim], dilations[dim], kernelShape[dim], pads, dim,\n          dim + inputDims.length - 2, autoPad);\n    }\n  }\n\n  /**\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computePoolOutputShape(\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0) {\n      throw new Error('input shape must be of size greater than 0');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], inputDims[1]];\n\n    PoolConvUtil.computeShapeHelper(\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  /**\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computeConvOutputShape(\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], filterDims[0]];\n\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\n  // called by computePoolOutputShape() and computeConvOutputShape()\n  // adjust pads based on 'autoPad' attribute prior to shape computation\n  private static computeShapeHelper(\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (isGlobalOperator) {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(1);\n      }\n    } else {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n            autoPad));\n      }\n    }\n  }\n\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\n  private static adjustPadAndReturnShape(\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\n      padTailIndex: number, autoPad?: string): number {\n    const dkernel = dilation * (kernel - 1) + 1;\n    if (autoPad && autoPad !== 'NOTSET') {\n      switch (autoPad) {\n        case 'VALID':\n          pads[padHeadIndex] = 0;\n          pads[padTailIndex] = 0;\n          return Math.floor(((inSize - dkernel) / stride) + 1);\n        case 'SAME_LOWER':\n        case 'SAME_UPPER':\n          if (dilation !== 1) {\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\n          } else {\n            const legacyTargetSize = (inSize + stride - 1) / stride;\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\n            pads[padHeadIndex] =\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\n          }\n        default:\n          throw new Error('Unsupported AutoPad type');\n      }\n    } else {\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\n    }\n  }\n}\n\nexport class GemmUtil {\n  // will make sure input shapes are compatible for this op\n  // and return back the shape of the output in the form of a tuple\n  // will throw exception if the input shapes are not compatible\n  static getShapeOfGemmResult(\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\n      biasShape?: readonly number[]): readonly number[] {\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\n      throw new Error('shape need to be of size 2');\n    }\n\n    let M: number;\n    let K: number;\n    let N: number;\n\n    if (transLeft) {\n      M = leftShape[1];\n      K = leftShape[0];\n    } else {\n      M = leftShape[0];\n      K = leftShape[1];\n    }\n\n    let kDim = -1;\n\n    if (transRight) {\n      N = rightShape[0];\n      kDim = 1;\n    } else {\n      N = rightShape[1];\n      kDim = 0;\n    }\n\n    if (rightShape[kDim] !== K) {\n      throw new Error('dimension mismatch');\n    }\n\n    if (M <= 0 || N <= 0 || K <= 0) {\n      throw new Error('invalid shape specified');\n    }\n\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\n      throw new Error('gemm: invalid bias shape for broadcast');\n    }\n\n    return [M, N, K];\n  }\n}\n\n\nexport const MIN_CLIP = -3.4028234663852886e+38;\nexport const MAX_CLIP = 3.4028234663852886e+38;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nclass AttributeWithCacheKeyImpl {\n  constructor(attribute: Record<string, unknown>) {\n    Object.assign(this, attribute);\n  }\n\n  private _cacheKey: string;\n  public get cacheKey(): string {\n    if (!this._cacheKey) {\n      this._cacheKey =\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\n    }\n    return this._cacheKey;\n  }\n}\n\nexport interface AttributeWithCacheKey {\n  readonly cacheKey: string;\n}\n\n/**\n * create a new object from the given attribute, and add a cacheKey property to it\n */\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGpuBackend} from '../backend-webgpu';\nimport {LOG_DEBUG} from '../log';\n\nimport {GpuData, GpuDataId, GpuDataType} from './types';\n\n/**\n * manages GpuDataId -> GpuBuffer\n */\nexport interface GpuDataManager {\n  /**\n   * copy data from CPU to GPU.\n   */\n  upload(id: GpuDataId, data: Uint8Array): void;\n  /**\n   * copy data from GPU to GPU.\n   */\n  memcpy(sourceId: GpuDataId, destinationId: GpuDataId): void;\n  /**\n   * create new data on GPU.\n   */\n  create(size: number, usage?: number): GpuData;\n  /**\n   * get GPU data by ID.\n   */\n  get(id: GpuDataId): GpuData|undefined;\n  /**\n   * release the data on GPU by ID.\n   *\n   * @return size of the data released\n   */\n  release(id: GpuDataId): number;\n  /**\n   * copy data from GPU to CPU.\n   */\n  download(id: GpuDataId): Promise<ArrayBufferLike>;\n\n  /**\n   * refresh the buffers that marked for release.\n   *\n   * when release() is called, the buffer is not released immediately. this is because we need to wait for the commands\n   * to be submitted to the GPU. this function is called after the commands are submitted so that the buffers can be\n   * actually released.\n   */\n  refreshPendingBuffers(): void;\n}\n\ninterface StorageCacheValue {\n  gpuData: GpuData;\n  originalSize: number;\n}\n\ninterface DownloadCacheValue {\n  data: Promise<ArrayBufferLike>;\n}\n\n/**\n * normalize the buffer size so that it fits the 128-bits (16 bytes) alignment.\n */\nconst calcNormalizedBufferSize = (size: number) => Math.ceil(size / 16) * 16;\n\nlet guid = 0;\nconst createNewGpuDataId = () => guid++;\n\nclass GpuDataManagerImpl implements GpuDataManager {\n  // GPU Data ID => GPU Data ( storage buffer )\n  storageCache: Map<GpuDataId, StorageCacheValue>;\n\n  // GPU Data ID => GPU Data ( read buffer )\n  downloadCache: Map<GpuDataId, DownloadCacheValue>;\n\n  // pending buffers for uploading ( data is unmapped )\n  private buffersForUploadingPending: GPUBuffer[];\n  // pending buffers for computing\n  private buffersPending: GPUBuffer[];\n\n  constructor(private backend: WebGpuBackend /* , private reuseBuffer: boolean */) {\n    this.storageCache = new Map();\n    this.downloadCache = new Map();\n    this.buffersForUploadingPending = [];\n    this.buffersPending = [];\n  }\n\n  upload(id: GpuDataId, data: Uint8Array): void {\n    const srcArrayBuffer = data.buffer;\n    const srcOffset = data.byteOffset;\n    const srcLength = data.byteLength;\n    const size = calcNormalizedBufferSize(srcLength);\n\n    // get destination gpu buffer\n    const gpuDataCache = this.storageCache.get(id);\n    if (!gpuDataCache) {\n      throw new Error('gpu data for uploading does not exist');\n    }\n    if (gpuDataCache.originalSize !== srcLength) {\n      throw new Error(`inconsistent data size. gpu data size=${gpuDataCache.originalSize}, data size=${srcLength}`);\n    }\n\n    // create gpu buffer\n    const gpuBufferForUploading = this.backend.device.createBuffer(\n        // eslint-disable-next-line no-bitwise\n        {mappedAtCreation: true, size, usage: GPUBufferUsage.MAP_WRITE | GPUBufferUsage.COPY_SRC});\n\n    // copy (upload) data\n    const arrayBuffer = gpuBufferForUploading.getMappedRange();\n    new Uint8Array(arrayBuffer).set(new Uint8Array(srcArrayBuffer, srcOffset, srcLength));\n    gpuBufferForUploading.unmap();\n\n\n    // GPU copy\n    const commandEncoder = this.backend.getCommandEncoder();\n    this.backend.endComputePass();\n    commandEncoder.copyBufferToBuffer(gpuBufferForUploading, 0, gpuDataCache.gpuData.buffer, 0, size);\n\n    LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.upload(id=${id})`);\n\n    this.buffersForUploadingPending.push(gpuBufferForUploading);\n  }\n\n  memcpy(sourceId: GpuDataId, destinationId: GpuDataId): void {\n    // get source gpu buffer\n    const sourceGpuDataCache = this.storageCache.get(sourceId);\n    if (!sourceGpuDataCache) {\n      throw new Error('source gpu data for memcpy does not exist');\n    }\n    // get destination gpu buffer\n    const destinationGpuDataCache = this.storageCache.get(destinationId);\n    if (!destinationGpuDataCache) {\n      throw new Error('destination gpu data for memcpy does not exist');\n    }\n    if (sourceGpuDataCache.originalSize !== destinationGpuDataCache.originalSize) {\n      throw new Error('inconsistent source and destination gpu data size');\n    }\n    const size = calcNormalizedBufferSize(sourceGpuDataCache.originalSize);\n    // GPU copy\n    this.backend.getCommandEncoder().copyBufferToBuffer(\n        sourceGpuDataCache.gpuData.buffer, 0, destinationGpuDataCache.gpuData.buffer, 0, size);\n  }\n\n  // eslint-disable-next-line no-bitwise\n  create(size: number, usage = GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST): GpuData {\n    // !!!\n    // !!! IMPORTANT: TODO: whether we should keep the storage buffer every time, or always create new ones.\n    // !!!                  This need to be figured out by performance test results.\n    // !!!\n\n    const bufferSize = calcNormalizedBufferSize(size);\n\n    // create gpu buffer\n    const gpuBuffer = this.backend.device.createBuffer({size: bufferSize, usage});\n\n    const gpuData = {id: createNewGpuDataId(), type: GpuDataType.default, buffer: gpuBuffer};\n    this.storageCache.set(gpuData.id, {gpuData, originalSize: size});\n\n    LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.create(size=${size}) => id=${gpuData.id}`);\n    return gpuData;\n  }\n\n  get(id: GpuDataId): GpuData|undefined {\n    return this.storageCache.get(id)?.gpuData;\n  }\n\n  release(id: GpuDataId): number {\n    const cachedData = this.storageCache.get(id);\n    if (!cachedData) {\n      throw new Error('releasing data does not exist');\n    }\n\n    LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.release(id=${id}), gpuDataId=${cachedData.gpuData.id}`);\n\n    this.storageCache.delete(id);\n    this.buffersPending.push(cachedData.gpuData.buffer);\n    // cachedData.gpuData.buffer.destroy();\n\n    const downloadingData = this.downloadCache.get(id);\n    if (downloadingData) {\n      this.downloadCache.delete(id);\n    }\n\n    return cachedData.originalSize;\n  }\n\n  async download(id: GpuDataId): Promise<ArrayBufferLike> {\n    const downloadData = this.downloadCache.get(id);\n    if (downloadData) {\n      return downloadData.data;\n    }\n\n    const cachedData = this.storageCache.get(id);\n    if (!cachedData) {\n      throw new Error('data does not exist');\n    }\n\n    const commandEncoder = this.backend.getCommandEncoder();\n    this.backend.endComputePass();\n    const gpuReadBuffer = this.backend.device.createBuffer(\n        // eslint-disable-next-line no-bitwise\n        {size: cachedData.originalSize, usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ});\n    commandEncoder.copyBufferToBuffer(\n        cachedData.gpuData.buffer /* source buffer */, 0 /* source offset */, gpuReadBuffer /* destination buffer */,\n        0 /* destination offset */, cachedData.originalSize /* size */\n    );\n    this.backend.flush();\n\n    const readDataPromise = new Promise<ArrayBuffer>((resolve) => {\n      gpuReadBuffer.mapAsync(GPUMapMode.READ).then(() => {\n        const data = gpuReadBuffer.getMappedRange().slice(0);\n        gpuReadBuffer.destroy();\n        resolve(data);\n      });\n    });\n\n    this.downloadCache.set(id, {data: readDataPromise});\n\n    return readDataPromise;\n  }\n\n  refreshPendingBuffers(): void {\n    for (const buffer of this.buffersForUploadingPending) {\n      buffer.destroy();\n    }\n    for (const buffer of this.buffersPending) {\n      buffer.destroy();\n    }\n  }\n}\n\nexport const createGpuDataManager = (...args: ConstructorParameters<typeof GpuDataManagerImpl>): GpuDataManager =>\n    new GpuDataManagerImpl(...args);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as binaryOps from './ops/binary-op';\nimport {conv, parseConvAttributes} from './ops/conv';\nimport {gemm, parseGemmAttributes} from './ops/gemm';\nimport {matMul} from './ops/matmul';\nimport * as pool from './ops/pool';\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\nimport * as unaryOps from './ops/unary-op';\nimport {ComputeContext} from './types';\n\nexport type RunFunction = (context: ComputeContext, attribute?: unknown) => void;\nexport type ParseAttributeFunction = (attributeRaw: unknown) => unknown;\nexport type OperatorImplementation = [RunFunction]|[RunFunction, ParseAttributeFunction];\n\nexport const WEBGPU_OP_RESOLVE_RULES: Map<string, OperatorImplementation> = new Map([\n  ['Abs', [unaryOps.abs]],\n  ['Acos', [unaryOps.acos]],\n  ['Acosh', [unaryOps.acosh]],\n  ['Add', [binaryOps.add]],\n  ['Asin', [unaryOps.asin]],\n  ['Asinh', [unaryOps.asinh]],\n  ['Atan', [unaryOps.atan]],\n  ['Atanh', [unaryOps.atanh]],\n  // TODO: support new attributes for AveragePool-10\n  ['AveragePool', [pool.averagePool, pool.parseAveragePoolAttributes]],\n  ['Ceil', [unaryOps.ceil]],\n  ['ClipV10', [unaryOps.clipV10]],\n  ['Clip', [unaryOps.clip]],\n  ['Conv', [conv, parseConvAttributes]],\n  ['Cos', [unaryOps.cos]],\n  ['Cosh', [unaryOps.cosh]],\n  ['Div', [binaryOps.div]],\n  ['Elu', [unaryOps.elu, unaryOps.parseAlphaAttributes]],\n  ['Erf', [unaryOps.erf]],\n  ['Exp', [unaryOps.exp]],\n  ['Floor', [unaryOps.floor]],\n  ['Gemm', [gemm, parseGemmAttributes]],\n  ['GlobalAveragePool', [pool.globalAveragePool, pool.parseGlobalAveragePoolAttributes]],\n  ['GlobalMaxPool', [pool.globalMaxPool, pool.parseGlobalMaxPoolAttributes]],\n  ['LeakyRelu', [unaryOps.leakyRelu, unaryOps.parseAlphaAttributes]],\n  ['MatMul', [matMul]],\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\n  ['MaxPool', [pool.maxPool, pool.parseMaxPoolAttributes]],\n  ['Mul', [binaryOps.mul]],\n  ['Neg', [unaryOps.neg]],\n  ['Pow', [binaryOps.pow]],\n  ['Reciprocal', [unaryOps.reciprocal]],\n  ['Relu', [unaryOps.relu]],\n  ['Sigmoid', [unaryOps.sigmoid]],\n  ['Sin', [unaryOps.sin]],\n  ['Sinh', [unaryOps.sinh]],\n  ['Sqrt', [unaryOps.sqrt]],\n  ['Sub', [binaryOps.sub]],\n  ['Tan', [unaryOps.tan]],\n  ['Tanh', [unaryOps.tanh]],\n  ['ThresholdedRelu', [unaryOps.thresholdedRelu, unaryOps.parseAlphaAttributes]],\n  ['Transpose', [transpose, parseTransposeAttributes]],\n]);\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/activation_util.ts\n//\n// modified to fit the needs of the project\n\nexport declare type Activation = 'linear' | 'relu' | 'prelu' | 'elu' | 'relu6' | 'leakyrelu' | 'sigmoid';\n\nexport const typeSnippet = (component: number) => {\n  switch (component) {\n    case 1:\n      return 'f32';\n    case 2:\n      return 'vec2<f32>';\n    case 3:\n      return 'vec3<f32>';\n    case 4:\n      return 'vec4<f32>';\n    default:\n      throw new Error(`${component}-component is not supported.`);\n  }\n};\n\nexport const activationFnSnippet =\n    (activation?: Activation, _hasPreluActivationWeights = false, _packed = false, _coordsLength = 3): string => {\n      if (!activation) {\n        return '';\n      }\n\n      // TODO: add implementations\n      return '';\n    };\n\nexport const biasActivationSnippet = (hasBias: boolean, activation?: Activation): string => `\n      ${hasBias ? 'value = value + getBiasByOutputCoords(coords);' : ''}\n      ${activation ? 'value = activation(value, coords);' : ''}\n      `;\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/conv2d_mm_webgpu.ts\n//\n// modified to fit the needs of the project\n\nimport {LOG_DEBUG} from '../../../log';\nimport {TensorView} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {GpuDataType, ProgramInfo, ProgramMetadata} from '../../types';\nimport {ConvAttributes} from '../conv';\n\nimport {Activation, activationFnSnippet, biasActivationSnippet, typeSnippet} from './activation_util';\nimport {utilFunctions} from './conv_util';\nimport {makeMatMulPackedSource, makeMatMulPackedVec4Source} from './matmul_packed_webgpu';\n\nconst conv2dCommonSnippet =\n    (isChannelsLast: boolean, fitAOuter: boolean, fitBOuter: boolean, fitInner: boolean, addBias = false,\n     activation?: Activation, hasPreluActivationWeights = false, innerElementSizeX = 4, innerElementSizeW = 4,\n     innerElementSize = 4): string => {\n      const getXSnippet = (innerElementSize: number) => {\n        switch (innerElementSize) {\n          case 1:\n            return 'resData = x[xIndex];';\n          case 3:\n            return 'resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);';\n          case 4:\n            return 'resData = x[xIndex / 4];';\n          default:\n            throw new Error(`innerElementSize ${innerElementSize} is not supported.`);\n        }\n      };\n      const getWSnippet = (innerElementSize: number) => {\n        switch (innerElementSize) {\n          case 1:\n            return 'return w[row * wShape[3] + colIn];';\n          case 4:\n            return 'return w[row * wShape[3] / 4 + colIn];';\n          default:\n            throw new Error(`innerElementSize ${innerElementSize} is not supported.`);\n        }\n      };\n      const coordASnippet = isChannelsLast ? `\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    ` :\n                                             `\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `;\n\n      const coordResSnippet = isChannelsLast ? `\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ` :\n                                               `\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `;\n\n      const xHeight = isChannelsLast ? 'xShape[1]' : 'xShape[2]';\n      const xWidth = isChannelsLast ? 'xShape[2]' : 'xShape[3]';\n      const row = isChannelsLast ? 'row' : 'col';\n      const col = isChannelsLast ? 'col' : 'row';\n      const readXSnippet = `\n    let inChannels = wShape[2];\n    let outWidth = ${isChannelsLast ? 'outShape[2]' : 'outShape[3]'};\n    let outRow = ${row} / outWidth;\n    let outCol = ${row} % outWidth;\n\n    let WRow = ${col} / (filterDims[1] * inChannels);\n    let WCol = ${col} / inChannels % filterDims[1];\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\n    let xCh = ${col} % inChannels;\n    var resData = ${typeSnippet(innerElementSizeX)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the 'same' padding type.\n    if (xRow >= 0 && xRow < ${xHeight} && xCol >= 0 && xCol < ${xWidth}) {\n      ${coordASnippet}\n      let xIndex = getIndexFromCoords4D(coord, xShape);\n      ${getXSnippet(innerElementSizeX)}\n    }\n    return resData;`;\n\n      const sampleX = isChannelsLast ? (fitAOuter && fitInner ? `\n    let col = colIn * ${innerElementSizeX};\n    ${readXSnippet}` :\n                                                                `\n    let col = colIn * ${innerElementSizeX};\n    if (row < dimAOuter && col < dimInner) {\n      ${readXSnippet}\n    }\n    return ${typeSnippet(innerElementSizeX)}(0.0);`) :\n                                       (fitInner && fitBOuter ? `\n    let col = colIn * ${innerElementSizeX};\n    ${readXSnippet}` :\n                                                                `\n    let col = colIn * ${innerElementSizeX};\n    if (row < dimInner && col < dimBOuter) {\n      ${readXSnippet}\n    }\n    return ${typeSnippet(innerElementSizeX)}(0.0);`);\n\n      const sampleW = `${getWSnippet(innerElementSizeW)}`;\n\n      const resType = typeSnippet(innerElementSize);\n      const aType = isChannelsLast ? typeSnippet(innerElementSizeX) : typeSnippet(innerElementSizeW);\n      const bType = isChannelsLast ? typeSnippet(innerElementSizeW) : typeSnippet(innerElementSizeX);\n      const userCode = `\n    ${activationFnSnippet(activation, hasPreluActivationWeights, innerElementSize === 4, 4)}\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${aType} {\n      ${isChannelsLast ? sampleX : sampleW}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${bType} {\n      ${isChannelsLast ? sampleW : sampleX}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${resType}) {\n      let col = colIn * ${innerElementSize};\n      if (row < dimAOuter && col < dimBOuter)\n      {\n      var value = valueIn;\n      let outWidth = ${isChannelsLast ? 'outShape[2]' : 'outShape[3]'};\n      ${coordResSnippet}\n      ${biasActivationSnippet(addBias, activation)}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`;\n      return userCode;\n    };\n\nexport const createConv2DMatMulProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, attributes: ConvAttributes,\n     outputShape: readonly number[], dimAOuter: number, dimBOuter: number, dimInner: number, hasBias: boolean,\n     sequentialAccessByThreads: boolean): ProgramInfo => {\n      const isChannelsLast = attributes.format === 'NHWC';\n      const inChannels = isChannelsLast ? inputs[0].dims[3] : inputs[0].dims[1];\n      const batchSize = outputShape[0];\n      const outWidth = isChannelsLast ? outputShape[2] : outputShape[3];\n      const outHeight = isChannelsLast ? outputShape[1] : outputShape[2];\n      const outChannels = isChannelsLast ? outputShape[3] : outputShape[1];\n      const isVec4 = (((inChannels % 4 === 0 || inChannels % 3 === 0) && isChannelsLast) ||\n                      (outWidth % 4 === 0 && !isChannelsLast)) &&\n          outChannels % 4 === 0;\n\n      // TODO: fine tune size\n      const dispatchX = isChannelsLast ? outChannels : outWidth * outHeight;\n      const dispatchY = isChannelsLast ? outWidth * outHeight : outChannels;\n      const workGroupSize: [number, number, number] =\n          isVec4 ? [8, 8, 1] : [dispatchX <= 4 ? 4 : 16, dispatchX > 4 && dispatchY <= 4 ? 4 : 16, 1];\n      const elementsPerThread =\n          isVec4 ? [4, 4, 1] : [dispatchX <= 4 ? 1 : 2, dispatchX > 4 && dispatchY <= 4 ? 1 : 2, 1];\n      const dispatch = [\n        Math.ceil(dispatchX / workGroupSize[0] / elementsPerThread[0]),\n        Math.ceil(dispatchY / workGroupSize[1] / elementsPerThread[1]),\n        Math.ceil(batchSize / workGroupSize[2] / elementsPerThread[1])\n      ];\n\n      LOG_DEBUG('verbose', () => `[conv2d_mm_webgpu] dispatch = ${dispatch}`);\n\n      const innerElementSize = isVec4 ? (isChannelsLast && inChannels % 4 !== 0 ? 3 : 4) : elementsPerThread[0];\n\n      const tileAOuter = workGroupSize[1] * elementsPerThread[1];\n      const tileBOuter = workGroupSize[0] * elementsPerThread[0];\n      const tileInner = Math.max(workGroupSize[0] * innerElementSize, workGroupSize[1]);\n\n      const fitAOuter = dimAOuter % tileAOuter === 0;\n      const fitBOuter = dimBOuter % tileBOuter === 0;\n      const fitInner = dimInner % tileInner === 0;\n\n      const elementsSize = isVec4 ? [innerElementSize, 4, 4] : [1, 1, 1];\n\n      const declareInputs = [\n        `@group(0) @binding(0) var<storage, read> x: array<${isVec4 && innerElementSize === 4 ? 'vec4<f32>' : 'f32'}>;`,\n        `@group(0) @binding(1) var<storage, read> w: array<${isVec4 ? 'vec4<f32>' : 'f32'}>;`\n      ];\n      let declareFunctions = `\n      fn setOutputAtIndex(flatIndex : i32, value : ${isVec4 ? 'vec4<f32>' : 'f32'}) {\n        result[flatIndex] = ${isVec4 ? 'vec4<f32>' : 'f32'}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${isVec4 ? 'vec4<f32>' : 'f32'}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${isVec4 ? '/ 4' : ''}, value);\n      }`;\n      if (hasBias) {\n        declareInputs.push(`@group(0) @binding(2) var<storage, read> bias: array<${isVec4 ? 'vec4<f32>' : 'f32'}>;`);\n        declareFunctions += `\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${isVec4 ? 'vec4<f32>' : 'f32'} {\n          return bias[coords.${isChannelsLast ? 'w' : 'y'}${isVec4 ? '/ 4' : ''}];\n        }`;\n      }\n\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        dispatchGroup: () => ({x: dispatch[0], y: dispatch[1], z: dispatch[2]}),\n        getShaderSource: () => `\n        ${utilFunctions}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${declareInputs.join('')}\n        @group(0) @binding(${declareInputs.length}) var<storage, read_write> result: array<${\n            isVec4 ? 'vec4<f32>' : 'f32'}>;\n        //@group(0) @binding(${declareInputs.length + 1}) var<uniform> uniforms: Uniforms;\n\n        const xShape : vec4<i32> = vec4<i32>(${inputs[0].dims.join(',')});\n        const wShape : vec4<i32> = vec4<i32>(${inputs[1].dims.join(',')});\n        const outShape : vec4<i32> = vec4<i32>(${outputShape.join(',')});\n        const outShapeStrides : vec3<i32> = vec3<i32>(${ShapeUtil.computeStrides(outputShape).slice(0, 3).join(',')});\n        const filterDims : vec2<i32> = vec2<i32>(${attributes.kernelShape[0]}, ${attributes.kernelShape[1]});\n        const pad : vec2<i32> = vec2<i32>(${attributes.pads[0]}, ${attributes.pads[1]});\n        const stride : vec2<i32> = vec2<i32>(${attributes.strides[0]}, ${attributes.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${attributes.dilations[0]}, ${attributes.dilations[1]});\n        const dimAOuter : i32 = ${dimAOuter};\n        const dimBOuter : i32 = ${dimBOuter};\n        const dimInner : i32 = ${dimInner};\n        ${declareFunctions}\n        ${\n            conv2dCommonSnippet(\n                isChannelsLast, fitAOuter, fitBOuter, fitInner, hasBias, undefined, false, elementsSize[0],\n                elementsSize[1], elementsSize[2])}\n            ${\n            isVec4 ? makeMatMulPackedVec4Source(elementsPerThread, workGroupSize, !isChannelsLast, tileInner) :\n                     makeMatMulPackedSource(\n                         elementsPerThread, workGroupSize, !isChannelsLast, tileInner, false, undefined,\n                         sequentialAccessByThreads)}`\n      };\n    };\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-core/src/ops/conv_util.ts\n//\n// modified to fit the needs of the project\n\nexport const utilFunctions = `\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));\n}\n`;\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/matmul_packed_webgpu.ts\n//\n// modified to fit the needs of the project\n\nconst writeDataToSubAVec4Snippet = (transpose: boolean) => {\n  if (transpose) {\n    return `\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol);\n        `;\n\n  } else {\n    return `\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol);\n        `;\n  }\n};\n\nconst calculateResultSnippet = (transposeA: boolean, innerElementSize: number) => {\n  if (transposeA) {\n    return `\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${innerElementSize === 3 ? '' : 'let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];'}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${innerElementSize === 3 ? '' : 'acc[i] = BCached3 * ACached3[i] + acc[i];'}\n        }`;\n  } else {\n    return `\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${innerElementSize === 3 ? '' : 'acc[i] = BCached3 * ACached.w + acc[i];'}\n        }`;\n  }\n};\n\nexport const makeMatMulPackedVec4Source =\n    (workPerThread: number[], workgroupSize: [number, number, number], transposeA = false, tileInner = 32,\n     splitK = false, splitedDimInner = 32, isVectorA = false): string => {\n      const tileAOuter = workgroupSize[1] * workPerThread[1];\n      const tileBOuter = workgroupSize[0] * workPerThread[0];\n      const tileAWidth = transposeA ? tileAOuter : tileInner;\n      const tileAHight = transposeA ? tileInner : tileAOuter;\n      const innerElementSize = tileAWidth / workgroupSize[0];\n      const rowPerThreadB = tileInner / workgroupSize[1];\n\n      if (!(((transposeA && innerElementSize === 4 && workPerThread[1] === 4) ||\n             (!transposeA && (innerElementSize === 3 || innerElementSize === 4))) &&\n            tileAWidth % workgroupSize[0] === 0 && tileInner % workgroupSize[1] === 0 && workPerThread[0] === 4)) {\n        throw new Error(`If transposeA ${transposeA} is true, innerElementSize ${\n            innerElementSize} and workPerThread[1] ${workPerThread[1]} must be 4.\n      Otherwise, innerElementSize ${innerElementSize} must be 3 or 4.\n  tileAWidth ${tileAWidth} must be divisible by workgroupSize[0]${workgroupSize[0]}. tileInner ${\n            tileInner} must be divisible by workgroupSize[1] ${workgroupSize[1]}. colPerThread ${\n            workPerThread[0]} must be 4.`);\n      }\n      return `\nvar<workgroup> mm_Asub : array<array<vec${innerElementSize}<f32>, ${tileAWidth / innerElementSize}>, ${tileAHight}>;\nvar<workgroup> mm_Bsub : array<array<vec4<f32>, ${tileBOuter / workPerThread[0]}>, ${tileInner}>;\n\nconst rowPerThread = ${workPerThread[1]};\nconst colPerThread = ${workPerThread[0]};\nconst innerElementSize = ${innerElementSize};\nconst tileInner = ${tileInner};\n\n@compute @workgroup_size(${workgroupSize[0]}, ${workgroupSize[1]}, ${workgroupSize[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = ${isVectorA ? '0' : 'localRow * rowPerThread'};\n  let tileCol = i32(localId.x);\n\n  let globalRow = ${isVectorA ? '0' : 'i32(globalId.y) * rowPerThread'};\n  let globalCol = i32(globalId.x);\n  let batch = ${splitK ? '0' : 'i32(globalId.z)'};\n  let globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n\n  let numTiles = ${splitK ? `${Math.ceil(splitedDimInner / tileInner)}` : '(dimInner - 1) / tileInner + 1'};\n  var kStart = ${splitK ? `i32(globalId.z) * ${splitedDimInner}` : '0'};\n\n  var acc: array<vec4<f32>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${rowPerThreadB};\n  for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${writeDataToSubAVec4Snippet(transposeA)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${rowPerThreadB}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol);\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${innerElementSize === 3 ? '' : 'let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];'}\n\n          ${calculateResultSnippet(transposeA, innerElementSize)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`;\n    };\n\nconst writeDataToSubASnippet = (transpose: boolean) => {\n  if (transpose) {\n    return `\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol);\n            `;\n\n  } else {\n    return `\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol);\n            `;\n  }\n};\n\nconst readDataFromSubASnippet = (transposeA: boolean) =>\n    transposeA ? 'let ACached = mm_Asub[k][tileRow + innerRow];' : 'let ACached = mm_Asub[tileRow + innerRow][k];';\n\n// sequentialAccessByThreads means sequential data in memory is accessed by\n// threads, instead of a single thread (default behavior).\nexport const makeMatMulPackedSource =\n    (workPerThread: number[], workgroupSize: [number, number, number], transposeA = false, tileInner = 32,\n     splitK = false, splitedDimInner = 32, sequentialAccessByThreads = false): string => {\n      const tileAOuter = workPerThread[1] * workgroupSize[1];\n      const tileBOuter = workPerThread[0] * workgroupSize[0];\n      const tileAWidth = transposeA ? tileAOuter : tileInner;\n      const tileAHight = transposeA ? tileInner : tileAOuter;\n\n      if (!(tileAHight % workgroupSize[1] === 0 && tileAWidth % workgroupSize[0] === 0 &&\n            tileInner % workgroupSize[1] === 0)) {\n        throw new Error(`tileAHight ${tileAHight} must be divisible by workgroupSize[1]${\n            workgroupSize[1]}, tileAWidth ${tileAWidth} must be divisible by workgroupSize[0]${\n            workgroupSize[0]}, tileInner ${tileInner} must be divisible by workgroupSize[1]${workgroupSize[1]}`);\n      }\n      const rowPerThreadA = tileAHight / workgroupSize[1];\n      const colPerThreadA = tileAWidth / workgroupSize[0];\n      const rowPerThreadB = tileInner / workgroupSize[1];\n      const matmulSnippet = sequentialAccessByThreads ?\n          `\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n    let globalColStart = i32(workgroupId.x) * ${tileBOuter};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${tileAHight}; inputRow = inputRow + ${workgroupSize[1]}) {\n        for (var inputCol = localCol; inputCol < ${tileAWidth}; inputCol = inputCol + ${workgroupSize[0]}) {\n          ${writeDataToSubASnippet(transposeA)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${tileInner}; inputRow = inputRow + ${workgroupSize[1]}) {\n            for (var inputCol = localCol; inputCol < ${tileBOuter}; inputCol = inputCol + ${workgroupSize[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol);\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<f32, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${workgroupSize[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${\n              transposeA ? `mm_Asub[k][localRow + innerRow * ${workgroupSize[1]}];` :\n                           `mm_Asub[localRow + innerRow * ${workgroupSize[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${workgroupSize[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${workgroupSize[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    ` :\n          `\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n\nlet tileRowA = i32(localId.y) * ${rowPerThreadA};\nlet tileColA = i32(localId.x) * ${colPerThreadA};\nlet tileRowB = i32(localId.y) * ${rowPerThreadB};\n// Loop over shared dimension.\nfor (var t = 0; t < numTiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${rowPerThreadA}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${colPerThreadA}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${writeDataToSubASnippet(transposeA)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${rowPerThreadB}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol);\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<f32, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${readDataFromSubASnippet(transposeA)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;\n\n      return `\n  var<workgroup> mm_Asub : array<array<f32, ${tileAWidth}>, ${tileAHight}>;\n  var<workgroup> mm_Bsub : array<array<f32, ${tileBOuter}>, ${tileInner}>;\n  const rowPerThread = ${workPerThread[1]};\n  const colPerThread = ${workPerThread[0]};\n  const tileInner = ${tileInner};\n\n@compute @workgroup_size(${workgroupSize[0]}, ${workgroupSize[1]}, ${workgroupSize[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${splitK ? '0' : 'i32(globalId.z)'};\n    let numTiles = ${splitK ? `${Math.ceil(splitedDimInner / tileInner)}` : '(dimInner - 1) / tileInner + 1'};\n    var kStart = ${splitK ? `i32(globalId.z) * ${splitedDimInner}` : '0'};\n\n    var acc : array<array<f32, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${matmulSnippet}\n  }\n`;\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../util';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\n\ntype BuiltinFunctionName = string;\ntype BinaryCustomExpression = (expressionA: string, expressionB: string) => string;\ntype BinaryFunctionCall = BuiltinFunctionName|BinaryCustomExpression|{\n  scalar: BinaryCustomExpression;\n  vector: BinaryCustomExpression;\n};\n\nconst createBinaryOpProgramShader =\n    (shaderHelper: ShaderHelper, dimsA: readonly number[], dimsB: readonly number[], dimsOutput: readonly number[],\n     vectorize: boolean, doBroadcast: boolean, funcCall: BinaryFunctionCall, additionalImplementation?: string,\n     typeA = 'f32', typeB = 'f32', typeOutput = 'f32') => {\n      const outputSize = ShapeUtil.size(dimsOutput);\n      const vecSize = Math.ceil(outputSize / 4);\n\n      let expressionScalar: BinaryCustomExpression;\n      let expressionVector: BinaryCustomExpression;\n      if (typeof funcCall === 'string') {\n        expressionScalar = expressionVector = (a, b) => `${funcCall}((${a}),(${b}))`;\n      } else if (typeof funcCall === 'function') {\n        expressionScalar = expressionVector = funcCall;\n      } else {\n        expressionScalar = funcCall.scalar;\n        expressionVector = funcCall.vector;\n      }\n\n      let broadcastImpl = '';\n      const outputIndicesHelper = createIndicesHelper('output', dimsOutput);\n      if (doBroadcast) {\n        const calcOffsetImpl = (dims: readonly number[]) => {\n          const strides = ShapeUtil.computeStrides(dims);\n          const offsets: string[] = [];\n          for (let i = dims.length - 1; i >= 0; i--) {\n            const idx = dimsOutput.length === 0 ? '0u' :\n                (dimsOutput.length === 1)       ? '(*outputIndices)' :\n                                                  `(*outputIndices)[${i + dimsOutput.length - dims.length}]`;\n            offsets.push(`${strides[i]}u * (${idx} % ${dims[i]}u)`);\n          }\n          return offsets.length > 0 ? offsets.join('+') : '0u';\n        };\n\n        broadcastImpl = `\n  ${outputIndicesHelper.o2iImpl}\n\n  fn calcOffsetA(outputIndices: ptr<function, ${outputIndicesHelper.iType}>) -> u32 {\n    return ${calcOffsetImpl(dimsA)};\n  }\n\n  fn calcOffsetB(outputIndices: ptr<function, ${outputIndicesHelper.iType}>) -> u32 {\n    return ${calcOffsetImpl(dimsB)};\n  }\n  `;\n      }\n\n      let assignment: string;\n      if (vectorize) {\n        if (doBroadcast) {\n          assignment = `\n      ${outputIndicesHelper.indicesVariableDeclaration('outputIndices')}\n      ${outputIndicesHelper.o2iCall('global_idx * 4u', 'outputIndices')}\n      let offsetA = calcOffsetA(&outputIndices);\n      let offsetB = calcOffsetB(&outputIndices);\n      outputData[global_idx] = ${expressionVector('aData[offsetA / 4u]', 'bData[offsetB / 4u]')};`;\n        } else {\n          assignment = `outputData[global_idx] = ${expressionVector('aData[global_idx]', 'bData[global_idx]')};`;\n        }\n      } else {\n        if (!doBroadcast) {\n          throw new Error('no necessary to use scalar implementation for element-wise binary op implementation.');\n        }\n        const singleAssignment = (x: number) => {\n          const expressionA = `aData[indexA${x}][componentA${x}]`;\n          const expressionB = `bData[indexB${x}][componentB${x}]`;\n          return `\n      ${outputIndicesHelper.o2iCall(`global_idx * 4u + ${x}u`, 'outputIndices')}\n      let offsetA${x} = calcOffsetA(&outputIndices);\n      let offsetB${x} = calcOffsetB(&outputIndices);\n      let indexA${x} = offsetA${x} / 4u;\n      let indexB${x} = offsetB${x} / 4u;\n      let componentA${x} = offsetA${x} % 4u;\n      let componentB${x} = offsetB${x} % 4u;\n      outputData[global_idx][${x}] = ${expressionScalar(expressionA, expressionB)};`;\n        };\n\n        assignment = `\n      ${outputIndicesHelper.indicesVariableDeclaration('outputIndices')}\n      ${singleAssignment(0)}\n      ${singleAssignment(1)}\n      ${singleAssignment(2)}\n      ${singleAssignment(3)}`;\n      }\n\n      return `\n  @group(0) @binding(0) var<storage, read> aData : array<vec4<${typeA}>>;\n  @group(0) @binding(1) var<storage, read> bData : array<vec4<${typeB}>>;\n  @group(0) @binding(2) var<storage, read_write> outputData : array<vec4<${typeOutput}>>;\n\n  ${additionalImplementation ?? ''}\n  ${broadcastImpl}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(vecSize)}\n    ${assignment}\n  }`;\n    };\n\nconst createBinaryOpProgramInfo =\n    (metadata: ProgramMetadata, a: TensorView, b: TensorView, funcCall: BinaryFunctionCall,\n     additionalImplementation?: string, outputDataType: number = a.dataType): ProgramInfo => {\n      const isBroadcast = !ShapeUtil.areEqual(a.dims, b.dims);\n      let outputShape = a.dims;\n      let outputSize = ShapeUtil.size(a.dims);\n\n      let vectorize = false;\n\n      // TODO: deal with zero-sized tensors (eg. dims=[1,0])\n\n      if (isBroadcast) {\n        const calculatedShape = BroadcastUtil.calcShape(a.dims, b.dims, false);\n        if (!calculatedShape) {\n          throw new Error('Can\\'t perform binary op on the given tensors');\n        }\n        outputShape = calculatedShape;\n        outputSize = ShapeUtil.size(outputShape);\n\n        // check whether vectorize can be enabled\n        let sharedDimension = 1;\n        for (let i = 0; i < outputShape.length; i++) {\n          const dimA = a.dims[a.dims.length - i] ?? 1;\n          const dimB = b.dims[b.dims.length - i] ?? 1;\n          if (dimA === dimB) {\n            sharedDimension *= dimA;\n          } else {\n            break;\n          }\n        }\n        if (sharedDimension % 4 === 0) {\n          vectorize = true;\n        }\n\n\n      } else {\n        // element-wise\n        vectorize = true;\n      }\n\n      return {\n        ...metadata,\n        getShaderSource: (shaderHelper) => createBinaryOpProgramShader(\n            shaderHelper, a.dims, b.dims, outputShape, vectorize, isBroadcast, funcCall, additionalImplementation),\n        outputs: [{dims: outputShape, dataType: outputDataType, gpuDataType: GpuDataType.default}],\n        dispatchGroup: () =>\n            ({x: Math.ceil(outputSize / 64 /* workgroup size */ / (vectorize ? 4 : 1) /* vec size */)})\n      };\n    };\n\nconst createBinaryOpProgramInfoLoader =\n    (inputs: readonly TensorView[], name: string, funcCall: BinaryFunctionCall, additionalImplementation?: string,\n     cacheKey?: string): ProgramInfoLoader => {\n      const metadata:\n          ProgramMetadata = {name, inputTypes: [GpuDataType.default, GpuDataType.default], cacheHint: cacheKey};\n      return {\n        ...metadata,\n        get: () => createBinaryOpProgramInfo(metadata, inputs[0], inputs[1], funcCall, additionalImplementation)\n      };\n    };\n\nexport const add = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Add', (a, b) => `${a}+${b}`));\n};\n\nexport const div = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Div', (a, b) => `${a}/${b}`));\n};\n\nexport const mul = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Mul', (a, b) => `${a}*${b}`));\n};\n\nexport const pow = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(\n      context.inputs, 'Pow', ({scalar: (a, b) => `pow_f32(${a},${b})`, vector: (a, b) => `pow_vf32(${a},${b})`}), `\n    fn pow_f32(a : f32, b : f32) -> f32 {\n      if (b == 0.0) {\n        return 1.0;\n      } else if (a < 0.0 && b != floor(b)) {\n        return pow(a, b); // NaN\n      }\n      return select(sign(a), 1.0, round(abs(b) % 2.0) != 1.0) * pow(abs(a), b);\n    }\n    fn pow_vf32(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {\n      // TODO: implement vectorized pow\n      return vec4<f32>(pow_f32(a.x, b.x), pow_f32(a.y, b.y), pow_f32(a.z, b.z), pow_f32(a.w, b.w));\n    }\n      `));\n};\n\nexport const sub = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Sub', (a, b) => `${a}-${b}`));\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ShapeUtil} from '../../util';\n\n/**\n * constant value for a workgroup size.\n *\n * We definitely can do further optimization in future, but for now we use 64.\n *\n * rule of thumb: Use [a workgroup size of] 64 unless you know what GPU you are targeting or that your workload\n *                needs something different.\n *\n * from: https://surma.dev/things/webgpu/\n **/\nexport const WORKGROUP_SIZE = 64;\n\nexport interface IndicesHelper {\n  /**\n   * WGSL code of function implementation for offset-to-indices\n   */\n  o2iImpl: string;\n  /**\n   * WGSL code of function call for offset-to-indices\n   */\n  o2iCall: (varOffset: string, varIndices: string) => string;\n  /**\n   * WGSL code of function implementation for indices-to-offset\n   */\n  i2oImpl: string;\n  /**\n   * WGSL code of function implementation for indices-to-offset\n   *\n   * @param isPtr - whether the variable is a pointer. default is false.\n   */\n  i2oExpression: (varIndices: string, isPtr?: boolean) => string;\n  /**\n   * WGSL code of indices variable declaration\n   *\n   * @param v - variable name.\n   * @param init - initial value.\n   */\n  indicesVariableDeclaration: (v: string, init?: string[]) => string;\n  /**\n   * data type of indices\n   */\n  iType: string;\n}\n\nexport const createIndicesHelper = (name: string, shape: readonly number[]): IndicesHelper => {\n  const iType = shape.length < 2 ? 'u32' : `array<u32, ${shape.length}>`;\n\n  const strides = ShapeUtil.computeStrides(shape);\n  let o2iSnippet = '';\n  for (let i = 0; i < shape.length - 1; i++) {\n    o2iSnippet += `\n    let dim${i} = current / ${strides[i]}u;\n    let rest${i} = current % ${strides[i]}u;\n    (*indices)[${i}] = dim${i};\n    current = rest${i};\n    `;\n  }\n  o2iSnippet += `(*indices)[${shape.length - 1}] = current;`;\n\n  const o2iImpl = shape.length < 2 ? '' : `\n  fn ih_o2i_${name}(offset: u32, indices: ptr<function, ${iType}>) {\n    var current = offset;\n    ${o2iSnippet}\n  }`;\n\n  const o2iCall = (varOffset: string, varIndices: string) =>\n      shape.length < 2 ? `${varIndices}=${varOffset};` : `ih_o2i_${name}(${varOffset}, &${varIndices});`;\n\n  const offsets: string[] = [];\n  if (shape.length === 0) {\n    offsets.push('0u');\n  } else if (shape.length < 2) {\n    offsets.push('(*indices)');\n  } else {\n    for (let i = shape.length - 1; i >= 0; i--) {\n      offsets.push(`${strides[i]}u * ((*indices)[${i}])`);\n    }\n  }\n\n  const i2oImpl = shape.length < 2 ? '' : `\n  fn ih_i2o_${name}(indices: ptr<function, ${iType}>) -> u32 {\n    return ${offsets.join('+')};\n  }`;\n\n  const i2oExpression = (varIndices: string, isPtr?: boolean) =>\n      shape.length < 2 ? `(${isPtr ? '*' : ''}${varIndices})` : `ih_i2o_${name}(${isPtr ? '' : '&'}${varIndices})`;\n\n  const indicesVariableDeclaration = (v: string, init?: string[]) =>\n      `var ${v}:${iType}${init ? `=${iType}(${init.join(',')})` : ''};`;\n\n  return {o2iImpl, o2iCall, i2oImpl, i2oExpression, indicesVariableDeclaration, iType};\n};\n\n/**\n * A ShaderHelper is a helper class for generating WGSL code.\n */\nexport interface ShaderHelper {\n  mainStart(workgroupSize?: number|[number, number, number]): string;\n  guardAgainstOutOfBoundsWorkgroupSizes(size: unknown): string;\n}\n\nclass ShaderHelperImpl implements ShaderHelper {\n  constructor(private normalizedDispatchGroup: [number, number, number]) {}\n  guardAgainstOutOfBoundsWorkgroupSizes(size: number|string): string {\n    // Guard against out-of-bounds work group sizes\n    const sizeInCode = typeof size === 'number' ? `${size}u` : size;\n    return `if (global_idx >= ${sizeInCode}) { return; }`;\n  }\n  mainStart(workgroupSize: number|[number, number, number] = WORKGROUP_SIZE) {\n    const workgroupSizeX = typeof workgroupSize === 'number' ? workgroupSize : workgroupSize[0];\n    const workgroupSizeY = typeof workgroupSize === 'number' ? 1 : workgroupSize[1];\n    const workgroupSizeZ = typeof workgroupSize === 'number' ? 1 : workgroupSize[2];\n\n    const is1DimensionDispatch = this.normalizedDispatchGroup[1] === 1 && this.normalizedDispatchGroup[2] === 1;\n    const paramList = is1DimensionDispatch ? '@builtin(global_invocation_id) global_id : vec3<u32>' :\n                                             `@builtin(local_invocation_index) local_index : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>`;\n    const globalIdxDefinition = is1DimensionDispatch ?\n        'let global_idx = global_id.x;' :\n        `let global_idx = (workgroup_id.z * ${this.normalizedDispatchGroup[0] * this.normalizedDispatchGroup[1]}u +\n          workgroup_id.y * ${this.normalizedDispatchGroup[0]}u + workgroup_id.x) * ${\n            workgroupSizeX * workgroupSizeY * workgroupSizeZ}u + local_index;`;\n\n    return `@compute @workgroup_size(${workgroupSizeX}, ${workgroupSizeY}, ${workgroupSizeZ})\n  fn main(${paramList}) {\n    ${globalIdxDefinition}\n  `;\n  }\n}\n\nexport const createShaderHelper = (dispatchGroup: [number, number, number]): ShaderHelper =>\n    new ShaderHelperImpl(dispatchGroup);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {ShapeUtil} from '../../util';\nimport {GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {getActicationSnippet} from './fuse-utils';\n\nconst createGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'GroupedConv',\n  inputTypes: hasBias ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                        [GpuDataType.default, GpuDataType.default],\n  cacheHint\n});\n\nconst createGroupedConvProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, attributes: ConvAttributes,\n     squeezeOutputShapeFunction?: (shape: readonly number[]) => number[]): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += b[output_channel];' : '';\n      const xShape = inputs[0].dims;\n      const wShape = inputs[1].dims;\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\n\n      const dataType = 'f32';  // TODO: support other data type\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\n      const inputStorageBuffersDeclarations = [\n        `@group(0) @binding(0) var<storage, read> x : array<${dataType}>;`,\n        `@group(0) @binding(1) var<storage, read> w : array<${dataType}>;`\n      ];\n      if (hasBias) {\n        inputStorageBuffersDeclarations.push(`@group(0) @binding(2) var<storage, read> b : array<${dataType}>;`);\n      }\n\n      const isChannelLast = attributes.format === 'NHWC';\n      const outputShape = calculateOutputShape(\n          xShape, wShape, attributes.dilations, attributes.pads, attributes.strides, isChannelLast);\n      const outputSize = ShapeUtil.size(outputShape);\n      const outputIndicesHelper = createIndicesHelper('output', outputShape);\n      const xIndicesHelper = createIndicesHelper('x', xShape);\n      const wIndicesHelper = createIndicesHelper('w', wShape);\n\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const strides: vec2<u32> = vec2(${attributes.strides[0]}u, ${attributes.strides[1]}u);\n  const pads: vec2<u32> = vec2(${attributes.pads[0]}u, ${attributes.pads[1]}u);\n\n  ${inputStorageBuffersDeclarations.join('\\n')}\n  @group(0) @binding(${inputStorageBuffersDeclarations.length}) var<storage, read_write> output : array<${dataType}>;\n\n  ${activationFunction}\n  ${outputIndicesHelper.o2iImpl}\n  ${xIndicesHelper.i2oImpl}\n  ${wIndicesHelper.i2oImpl}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    ${outputIndicesHelper.indicesVariableDeclaration('outputIndices')}\n    ${outputIndicesHelper.o2iCall('global_idx', 'outputIndices')}\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${isChannelLast ? 3 : 1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${isChannelLast ? 1 : 2}], outputIndices[${\n          isChannelLast ? 2 : 3}]) * strides - pads;\n    let group_id: u32 = output_channel / ${outputChannelsPerGroup}u;\n\n    var value: ${dataType} = ${dataType}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < ${wShape[1]}u; wInChannel++) {\n      let input_channel = group_id * ${wShape[1]}u + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < ${wShape[2]}u; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]}u;\n\n        if (xHeight < 0u || xHeight >= ${xShape[isChannelLast ? 1 : 2]}u) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < ${wShape[3]}u; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]}u;\n          if (xWidth < 0u || xWidth >= ${xShape[isChannelLast ? 2 : 3]}u) {\n            continue;\n          }\n\n          ${\n          xIndicesHelper.indicesVariableDeclaration(\n              'xIndices',\n              isChannelLast ? ['batch', 'xHeight', 'xWidth', 'input_channel'] :\n                              [\n                                'batch', 'input_channel', 'xHeight', 'xWidth'\n                              ])}\n          let xVal = x[${xIndicesHelper.i2oExpression('xIndices')}];\n          ${\n          wIndicesHelper.indicesVariableDeclaration('wIndices', [\n            'output_channel', 'wInChannel', 'wHeight', 'wWidth'\n          ])}\n          let wVal = w[${wIndicesHelper.i2oExpression('wIndices')}];\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${processBias}\n    ${applyActivation}\n    output[global_idx] = value;\n  }`;\n      return {\n        ...metadata,\n        outputs: [{\n          dims: squeezeOutputShapeFunction ? squeezeOutputShapeFunction(outputShape) : outputShape,\n          dataType: inputs[0].dataType,\n          gpuDataType: GpuDataType.default\n        }],\n        getShaderSource,\n        dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n      };\n    };\n\n/**\n * naive grouped conv implementation, supports 1d/2d conv\n * @param squeezeOutputShapeFunction - an optional function to squeeze the output shape, only used in conv1d\n */\nexport const createGroupedConvProgramInfoLoader =\n    (inputs: readonly TensorView[], attributes: ConvAttributes,\n     squeezeOutputShapeFunction?: (shape: readonly number[]) => number[]): ProgramInfoLoader => {\n      const metadata = createGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createGroupedConvProgramInfo(inputs, metadata, attributes, squeezeOutputShapeFunction)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {PoolConvUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext} from '../types';\n\nimport {createGroupedConvProgramInfoLoader} from './conv-grouped';\nimport {createConv2DMatMulProgramInfoLoader} from './conv2d-mm';\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createTransposeProgramInfo, TransposeAttributes, transposeProgramMetadata} from './transpose';\n\nexport const calculateOutputShape =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\n     adjustPads: readonly number[], strides: readonly number[], isChannelLast: boolean): number[] => {\n      const batchSize = inputShape[0];\n      const inputSpatialShape = inputShape.slice(isChannelLast ? 1 : 2, isChannelLast ? 3 : 4);\n      const spatialRank = inputSpatialShape.length;\n      const outChannels = kernelShape[0];\n      const kernelSpatialShape = kernelShape.slice(2);\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\n      const outputShape =\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\n      outputShape.splice(0, 0, batchSize);\n      outputShape.splice(isChannelLast ? 3 : 1, 0, outChannels);\n      return outputShape;\n    };\n\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly dilations: readonly number[];\n  readonly format: 'NHWC'|'NCHW';\n  readonly group: number;\n  readonly kernelShape: readonly number[];\n  readonly pads: readonly number[];\n  readonly strides: readonly number[];\n  readonly wIsConst: boolean;\n}\n\n// for transposing weight tensor from [M, C/group, KH, KW] to [KH, KW, C/group, M]\nconst weightTransposeAttribute: TransposeAttributes = createAttributeWithCacheKey({perm: [2, 3, 1, 0]});\n\nconst validateInputs = (inputs: readonly TensorView[], attributes: ConvAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/master/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 && inputs[0].dims.length !== 3) {\n    throw new Error('currently only support conv 1D and 2D');\n  }\n\n  if (inputs[0].dims.length !== inputs[1].dims.length) {\n    throw new Error('filter does not have same dimension as input');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[attributes.format === 'NHWC' ? inputs[0].dims.length - 1 : 1];\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].dataType !== DataType.float || inputs[1].dataType !== DataType.float) {\n    throw new Error('Conv input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].dataType !== DataType.float) {\n    throw new Error('Conv input(bias) should be float tensor');\n  }\n};\n\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: readonly TensorView[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  for (let i = 2; i < inputs[1].dims.length; ++i) {\n    if (kernelShape[i - 2] === 0) {\n      kernelShape[i - 2] = inputs[1].dims[i];\n    }\n  }\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.format === 'NHWC',\n      attributes.autoPad);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvAttributes = (attributes: Record<string, unknown>): ConvAttributes => {\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const format = attributes.format as 'NHWC' | 'NCHW';\n  const autoPad = ['NOTSET', 'VALID', 'SAME_UPPER', 'SAME_LOWER'][attributes.auto_pad as number];\n  const dilations = attributes.dilations as [number, number];\n  const group = attributes.group as number;\n  const kernelShape = attributes.kernel_shape as [number, number];\n  const pads = attributes.pads as [number, number, number, number];\n  const strides = attributes.strides as [number, number];\n  const wIsConst = (attributes.w_is_const as () => boolean)();\n\n  return createAttributeWithCacheKey(\n      {autoPad, format, dilations, group, kernelShape, pads, strides, wIsConst, ...activationAttributes});\n};\n\nconst conv2d = (context: ComputeContext, inputs: readonly TensorView[], attributes: ConvAttributes): void => {\n  const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\n\n  // check attributes\n\n  const hasBias = inputs.length === 3;\n  // const hasPreluActivationWeights = false; /* TODO: add support for prelu activation weights */\n  const isChannelsLast = attributes.format === 'NHWC';\n\n  // const batchSize = context.inputs[0].dims[0];\n  const inputHeight = inputs[0].dims[isChannelsLast ? 1 : 2];\n  const inputWidth = inputs[0].dims[isChannelsLast ? 2 : 3];\n  const inputChannels = inputs[0].dims[isChannelsLast ? 3 : 1];\n  const weightHeight = inputs[1].dims[2];\n  const weightWidth = inputs[1].dims[3];\n\n  const outputShape = calculateOutputShape(\n      inputs[0].dims, inputs[1].dims, attributes.dilations, adjustedAttributes.pads, attributes.strides,\n      isChannelsLast);\n  const outHeight = outputShape[isChannelsLast ? 1 : 2];\n  const outWidth = outputShape[isChannelsLast ? 2 : 3];\n  const outChannels = outputShape[isChannelsLast ? 3 : 1];\n\n  const sameSize =\n      isChannelsLast && weightHeight === inputHeight && weightWidth === inputWidth && attributes.autoPad === 'VALID';\n  if (sameSize ||\n      (weightHeight === 1 && weightWidth === 1 && attributes.dilations[0] === 1 && attributes.dilations[1] === 1 &&\n       attributes.strides[0] === 1 && attributes.strides[1] === 1 &&\n       (attributes.autoPad === 'SAME_UPPER' || attributes.autoPad === 'SAME_LOWER' ||\n        attributes.autoPad === 'VALID'))) {\n    // TODO: implement conv2dByMatMul()\n    context.compute(createGroupedConvProgramInfoLoader(inputs, adjustedAttributes));\n    return;\n  }\n\n  if (!isChannelsLast || attributes.group !== 1) {\n    context.compute(createGroupedConvProgramInfoLoader(inputs, adjustedAttributes));\n    return;\n  }\n\n  // TODO: implement conv2dWithIm2Col()\n\n  const dimAOuter = isChannelsLast ? outHeight * outWidth : outChannels;\n  const dimBOuter = isChannelsLast ? outChannels : outHeight * outWidth;\n  const dimInner = weightHeight * weightWidth * inputChannels;\n\n  const sequentialAccessByThreads = /* backend.adapterInfo.isIntel() */ true;\n\n  // STEP.1: transpose weight\n  const transposedWeight = (context.customData.wT as TensorView | undefined) ??\n      context.compute(\n          {\n            ...transposeProgramMetadata,\n            cacheHint: weightTransposeAttribute.cacheKey,\n            get: () => createTransposeProgramInfo(inputs[1], weightTransposeAttribute.perm)\n          },\n          {inputs: [1], outputs: [attributes.wIsConst ? -2 : -1]})[0];\n  if (attributes.wIsConst && !context.customData.wT) {\n    context.customData.wT = transposedWeight;\n  }\n\n  // STEP.2: prepare reshaped inputs\n  const convInputs = [inputs[0], transposedWeight];\n  if (hasBias) {\n    if (!isChannelsLast && inputs[2].dims.length === 1) {\n      convInputs.push(inputs[2].reshape([inputs[2].dims[0], 1, 1]));\n    } else {\n      convInputs.push(inputs[2]);\n    }\n  }\n\n  // STEP.3: compute matmul\n  context.compute(\n      createConv2DMatMulProgramInfoLoader(\n          convInputs, adjustedAttributes, outputShape, dimAOuter, dimBOuter, dimInner, hasBias,\n          sequentialAccessByThreads),\n      {inputs: convInputs});\n};\n\nconst conv1d = (context: ComputeContext, attributes: ConvAttributes): void => {\n  // extend the input to 2D by adding H dimension\n  const isChannelLast = attributes.format === 'NHWC';\n  const inputs = [\n    context.inputs[0].reshape(\n        isChannelLast ?\n            // [N, W, C] -> [N, H=1, W, C]\n            [context.inputs[0].dims[0], 1, context.inputs[0].dims[1], context.inputs[0].dims[2]] :\n            // [N, C, W] -> [N, C, H=1, W]\n            [context.inputs[0].dims[0], context.inputs[0].dims[1], 1, context.inputs[0].dims[2]]),\n    //[FILTER_OUT_CHANNEL, FILTER_IN_CHANNEL, kW] -> [FILTER_OUT_CHANNEL, FILTER_IN_CHANNEL, kH=1, kW]\n    context.inputs[1].reshape([context.inputs[1].dims[0], context.inputs[1].dims[1], 1, context.inputs[1].dims[2]])\n  ];\n  if (context.inputs.length === 3) {\n    inputs.push(context.inputs[2]);\n  }\n  const pads = [0, attributes.pads[0], 0, attributes.pads[1]];\n  const strides = [1].concat(attributes.strides);\n  const dilations = [1].concat(attributes.dilations);\n  const kernelShape = [1].concat(attributes.kernelShape);\n  const adjustedAttributes = getAdjustedConvAttributes({...attributes, pads, strides, dilations, kernelShape}, inputs);\n  context.compute(createGroupedConvProgramInfoLoader(\n      inputs, adjustedAttributes,\n      outputShape => isChannelLast ? [outputShape[0], outputShape[2], outputShape[3]] : []));\n};\n\nexport const conv = (context: ComputeContext, attributes: ConvAttributes): void => {\n  validateInputs(context.inputs, attributes);  // currently will fail if not conv1D/2D\n  if (context.inputs[0].dims.length === 3) {\n    conv1d(context, attributes);\n  } else {\n    conv2d(context, context.inputs, attributes);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {GpuDataType, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {createConv2DMatMulProgramInfo} from './3rd-party/conv2d_mm_webgpu';\nimport {ConvAttributes} from './conv';\n\n\nconst createConv2DMatMulProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'Conv2DMatMul',\n  inputTypes: hasBias ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                        [GpuDataType.default, GpuDataType.default],\n  cacheHint\n});\n\nexport const createConv2DMatMulProgramInfoLoader =\n    (inputs: readonly TensorView[], attributes: ConvAttributes, outputShape: readonly number[], dimAOuter: number,\n     dimBOuter: number, dimInner: number, hasBias: boolean, sequentialAccessByThreads: boolean): ProgramInfoLoader => {\n      const metadata = createConv2DMatMulProgramMetadata(hasBias, attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createConv2DMatMulProgramInfo(\n            inputs, metadata, attributes, outputShape, dimAOuter, dimBOuter, dimInner, hasBias,\n            sequentialAccessByThreads)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {MAX_CLIP, MIN_CLIP} from '../../util';\n\nexport interface InternalActivationAttributes {\n  readonly activation: string;\n  readonly clipMin?: number;\n  readonly clipMax?: number;\n  readonly activationCacheKey: string;\n}\n\nexport const getActicationSnippet =\n    (attributes: InternalActivationAttributes): {activationFunction: string; applyActivation: string} => {\n      switch (attributes.activation) {\n        case 'Relu':\n          return {activationFunction: '', applyActivation: 'value = max(value, 0.0);'};\n        case 'Sigmoid':\n          return {activationFunction: '', applyActivation: 'value = (1.0 / (1.0 + exp(-value)));'};\n        case 'Clip':\n          return {\n            activationFunction:\n                `const clip_min_=f32(${attributes.clipMin!});const clip_max_=f32(${attributes.clipMax!});`,\n            applyActivation: 'value = clamp(value, clip_min_, clip_max_);'\n          };\n          // TODO: adding other activations that can be fused.\n        default:\n          return {activationFunction: '', applyActivation: ''};\n      }\n    };\n\nexport const parseInternalActivationAttributes =\n    (attributes: Record<string, unknown>|undefined): InternalActivationAttributes => {\n      const activation = attributes?.activation as string || '';\n\n      if (activation === 'Clip') {\n        const [clipMin, clipMax] = attributes?.activation_params as [number, number] || [MIN_CLIP, MAX_CLIP];\n        return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\n      }\n      return {activation, activationCacheKey: activation};\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {GemmUtil, ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {ShaderHelper} from './common';\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs) {\n    throw new Error('Input is missing');\n  }\n  if (inputs.length < 2 || inputs.length > 3) {\n    throw new Error('Invaid input number.');\n  }\n\n  // 'C' can be of dimensionality 0, 1 or 2 only\n  if (inputs.length === 3 && inputs[2].dims.length > 2) {\n    throw new Error('Invalid input shape of C');\n  }\n\n  if ((inputs[0].dataType !== DataType.float) || (inputs[1].dataType !== DataType.float) ||\n      (inputs.length === 3 && inputs[2].dataType !== DataType.float)) {\n    throw new Error('Invalid input type.');\n  }\n\n  if ((inputs[0].dataType !== inputs[1].dataType) ||\n      (inputs.length === 3 && inputs[0].dataType !== inputs[2].dataType)) {\n    throw new Error('Input types are mismatched');\n  }\n};\n\nexport interface GemmAttributes extends AttributeWithCacheKey {\n  transA: boolean;\n  transB: boolean;\n  alpha: number;\n  beta: number;\n}\n\nconst offsetC = (m: number, n: number, dims: readonly number[]): string => {\n  if (dims.length === 0) {\n    return '0u';\n  }\n\n  const broadcastM = (dims.length === 1 && m !== 1) || (dims.length === 2 && dims[0] !== m);\n  const broadcastN = dims[dims.length - 1] !== n;\n\n  let offset = '0u';\n  if (!broadcastM) {\n    offset += `+ m * ${dims[dims.length - 1]}u`;\n  }\n  if (!broadcastN) {\n    offset += '+n';\n  }\n\n  return offset;\n};\n\nconst createGemmProgramInfo =\n    (metadata: ProgramMetadata, inputs: readonly TensorView[], attributes: GemmAttributes): ProgramInfo => {\n      const aShape = inputs[0].dims.slice();\n      const bShape = inputs[1].dims.slice();\n      const [M, N, K] = GemmUtil.getShapeOfGemmResult(\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\n      const outputShape = [M, N];\n      if (!outputShape) {\n        throw new Error('Can\\'t use gemm on the given tensors');\n      }\n      const outputSize = ShapeUtil.size(outputShape);\n      let line = '';\n      if (attributes.transA && attributes.transB) {\n        line = 'value += a[k * M + m] * b[n * K + k];';\n      } else if (attributes.transA && !attributes.transB) {\n        line = 'value += a[k * M + m] * b[k * N + n];';\n      } else if (!attributes.transA && attributes.transB) {\n        line = 'value += a[m * K + k] * b[n * K + k];';\n      } else if (!attributes.transA && !attributes.transB) {\n        line = 'value += a[m * K + k] * b[k * N + n];';\n      }\n\n      const dataType = 'f32';  // TODO: support other data type\n      const calculateAlpha = attributes.alpha === 1 ? '' : 'value *= alpha;';\n      const calculateC = inputs.length === 3 ? `value += beta * c[${offsetC(M, N, inputs[2].dims)}];` : '';\n      const inputStorageBuffersDeclarations = [\n        `@group(0) @binding(0) var<storage, read> a : array<${dataType}>;`,\n        `@group(0) @binding(1) var<storage, read> b : array<${dataType}>;`\n      ];\n      if (inputs.length === 3) {\n        inputStorageBuffersDeclarations.push(`@group(0) @binding(2) var<storage, read> c : array<${dataType}>;`);\n      }\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const M: u32 = ${M}u;\n  const N: u32 = ${N}u;\n  const K: u32 = ${K}u;\n  const alpha = ${dataType}(${attributes.alpha});\n  const beta = ${dataType}(${attributes.beta});\n\n  ${inputStorageBuffersDeclarations.join('\\n')}\n  @group(0) @binding(${inputs.length}) var<storage, read_write> output : array<${dataType}>;\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    let m = global_id.x / N;\n    let n = global_id.x % N;\n\n    var value = ${dataType}(0);\n    for (var k: u32 = 0u; k<${K}u; k++) {\n      ${line}\n    }\n\n    ${calculateAlpha}\n    ${calculateC}\n    output[global_id.x] = value;\n\n  }`;\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        getShaderSource,\n        dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n      };\n    };\n\nconst createGemmProgramInfoLoader = (inputs: readonly TensorView[], attributes: GemmAttributes): ProgramInfoLoader => {\n  const metadata = {\n    name: 'Gemm',\n    inputTypes: inputs.length === 3 ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                                      [GpuDataType.default, GpuDataType.default],\n    cacheHint: attributes.cacheKey\n  };\n\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\n};\n\nexport const gemm = (context: ComputeContext, attributes: GemmAttributes): void => {\n  validateInputs(context.inputs);\n  context.compute(createGemmProgramInfoLoader(context.inputs, attributes));\n};\n\nexport const parseGemmAttributes = (attributes: Record<string, unknown>): GemmAttributes =>\n    createAttributeWithCacheKey(attributes as Omit<GemmAttributes, keyof AttributeWithCacheKey>);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../util';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {ShaderHelper} from './common';\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\n\n\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul',\n  inputTypes: hasBias ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                        [GpuDataType.default, GpuDataType.default],\n  cacheHint\n});\n\nconst createMatmulProgramInfo =\n    (metadata: ProgramMetadata, inputs: readonly TensorView[], activationAttributes: InternalActivationAttributes):\n        ProgramInfo => {\n          const aShape = inputs[0].dims;\n          const bShape = inputs[1].dims;\n          const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n          if (!outputShape) {\n            throw new Error('Can\\'t use matmul on the given tensors');\n          }\n          const outputSize = ShapeUtil.size(outputShape);\n          // TODO: support broadcasting\n\n          const dataType = 'f32';  // TODO: support other data type\n          const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\n\n          const M = outputShape[outputShape.length - 2];\n          const K = aShape[aShape.length - 1];\n          const N = outputShape[outputShape.length - 1];\n          const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const M: u32 = ${M}u;\n  const N: u32 = ${N}u;\n  const K: u32 = ${K}u;\n\n  @group(0) @binding(0) var<storage, read> a : array<${dataType}>;\n  @group(0) @binding(1) var<storage, read> b : array<${dataType}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${dataType}>;\n\n  ${activationFunction}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    let stack = global_idx / (M * N);\n    let mn = global_idx % (M * N);\n    let n = global_idx % N;\n    let m = mn / N;\n\n    let offsetA = stack * (M * K);\n    let offsetB = stack * (K * N);\n\n    var value = ${dataType}(0);\n    for (var k: u32 = 0u; k<${K}u; k++) {\n      value += a[offsetA + m * K + k] * b[offsetB + k * N + n];\n    }\n    ${applyActivation}\n    output[global_idx] = value;\n  }`;\n          return {\n            ...metadata,\n            outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n            getShaderSource,\n            dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n          };\n        };\n\nexport const createMatmulProgramInfoLoader =\n    (inputs: readonly TensorView[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n      return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\n    };\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('MatMul requires 2 inputs.');\n  }\n\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\n    throw new Error('shared dimension does not match.');\n  }\n\n  if (inputs[0].dataType !== DataType.float || inputs[1].dataType !== DataType.float) {\n    throw new Error('inputs should be float type');\n  }\n};\n\nexport const matMul = (context: ComputeContext): void => {\n  validateInputs(context.inputs);\n\n  context.compute(createMatmulProgramInfoLoader(context.inputs, {activation: '', activationCacheKey: ''}));\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {PoolConvUtil, ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramMetadata} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\n\n// TODO: support:\n// - ceil_mode                 \"test_maxpool_2d_ceil\"\n// - storage_order             \"test_maxpool_with_argmax_2d_precomputed_strides\"\n// - [MaxPool] dilations       \"test_maxpool_2d_dilations\"\n// - [MaxPool] output[1]       \"test_maxpool_with_argmax_2d_precomputed_pads\"\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pool ops requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Pool ops supports 2-D inputs only for now.');\n  }\n  if (inputs[0].dataType !== DataType.float) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst getAdjustedPoolAttributesAndOutputShape = <AttributeType extends AveragePoolAttributes|MaxPoolAttributes>(\n    inputs: readonly TensorView[], attributes: AttributeType, isGlobalOperator: boolean): [AttributeType, number[]] => {\n  const isChannelsLast = attributes.format === 'NHWC';\n  const inputShapeAsChannelFirst = isChannelsLast ?\n      [inputs[0].dims[0], inputs[0].dims[3], inputs[0].dims[1], inputs[0].dims[2]] :\n      inputs[0].dims.slice();\n  const hasDilations = Object.hasOwnProperty.call(attributes, 'dilations');\n  const kernelShape = attributes.kernelShape.slice();\n  const strides = attributes.strides.slice();\n  const dilations: number[] = hasDilations ? (attributes as MaxPoolAttributes).dilations.slice() : [];\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPoolAttributes(isGlobalOperator, inputShapeAsChannelFirst, kernelShape, strides, dilations, pads);\n\n  const outputShapeAsChannelFirst = PoolConvUtil.computePoolOutputShape(\n      isGlobalOperator, inputShapeAsChannelFirst, strides, dilations, kernelShape, pads, attributes.autoPad);\n\n  const newAttributes = Object.assign({}, attributes);\n  if (hasDilations) {\n    Object.assign(newAttributes, {kernelShape, strides, pads, dilations, cacheKey: attributes.cacheKey});\n  } else {\n    Object.assign(newAttributes, {kernelShape, strides, pads, cacheKey: attributes.cacheKey});\n  }\n  return [\n    newAttributes,\n    isChannelsLast ?\n        [\n          outputShapeAsChannelFirst[0], outputShapeAsChannelFirst[2], outputShapeAsChannelFirst[3],\n          outputShapeAsChannelFirst[1]\n        ] :\n        outputShapeAsChannelFirst\n  ];\n};\n\nconst generatePoolingCode = <AttributeType extends AveragePoolAttributes|MaxPoolAttributes>(\n    shaderHelper: ShaderHelper, inputDims: readonly number[], outputShape: readonly number[], attributes: AttributeType,\n    op1: string, op2: string, dataType: string, start: string): string => {\n  const isChannelsLast = attributes.format === 'NHWC';\n  const rank = inputDims.length;\n  const outputSize = ShapeUtil.size(outputShape);\n  const outputIndicesHelper = createIndicesHelper('output', outputShape);\n  const xIndicesHelper = createIndicesHelper('x', inputDims);\n\n  if (attributes.kernelShape.length <= 2) {\n    const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\n    const sw = attributes.strides[attributes.strides.length - 1];\n    const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\n    const pwEnd = attributes.pads[attributes.pads.length - 1];\n    const dimIdxW = rank - (isChannelsLast ? 2 : 1);\n    let codeW = '';\n    let codeH = '';\n    let codeHEnd = '';\n    if (pwStart + pwEnd !== 0) {\n      codeW = `\n              for (var i: u32 = 0u; i < ${kw}u; i++) {\n                xIndices[${dimIdxW}] = indices[${dimIdxW}] * ${sw} - ${pwStart} + i;\n                if (xIndices[${dimIdxW}] < 0 || xIndices[${dimIdxW}] >= ${inputDims[dimIdxW]}) {\n                  pad++;\n                  continue;\n                }\n                let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n                ${op1}\n              }`;\n    } else {\n      codeW = `\n              for (var i: u32 = 0u; i < ${kw}u; i++) {\n                xIndices[${dimIdxW}] = indices[${dimIdxW}] * ${sw} - ${pwStart} + i;\n                let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n                ${op1}\n              }`;\n    }\n\n    if (attributes.kernelShape.length === 2) {\n      const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\n      const sh = attributes.strides[attributes.strides.length - 2];\n      const phStart = attributes.pads[attributes.pads.length / 2 - 2];\n      const phEnd = attributes.pads[attributes.pads.length - 2];\n      const dimIdxH = rank - (isChannelsLast ? 3 : 2);\n      const dimH = inputDims[dimIdxH];\n      if (phStart + phEnd !== 0) {\n        codeH = `\n                for (var j: u32 = 0u; j < ${kh}u; j++) {\n                  xIndices[${dimIdxH}] = indices[${dimIdxH}] * ${sh} - ${phStart} + j;\n                  if (xIndices[${dimIdxH}] < 0 || xIndices[${dimIdxH}] >= ${dimH}) {\n                    pad+= ${kw};\n                    continue;\n                  }\n              `;\n      } else {\n        codeH = `\n                for (var j: u32 = 0u; j < ${kh}u; j++) {\n                  xIndices[${dimIdxH}] = indices[${dimIdxH}] * ${sh} - ${phStart} + j;\n                `;\n      }\n      codeHEnd = `\n              }\n            `;\n    }\n\n    const poolingCode = `\n            @group(0) @binding(0) var<storage, read> x : array<${dataType}>;\n            @group(0) @binding(1) var<storage, read_write> output : array<${dataType}>;\n\n            ${outputIndicesHelper.o2iImpl}\n            ${xIndicesHelper.i2oImpl}\n\n            ${shaderHelper.mainStart()}\n              ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n              ${outputIndicesHelper.indicesVariableDeclaration('indices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'indices')}\n              ${outputIndicesHelper.indicesVariableDeclaration('xIndices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'xIndices')}\n\n              var value: ${dataType} = ${dataType}(${start});\n              var pad = 0;\n              ${codeH}\n              ${codeW}\n              ${codeHEnd}\n              ${op2}\n\n              output[global_idx] = value;\n            }`;\n    return poolingCode;\n  } else {\n    if (isChannelsLast) {\n      throw new Error('Pooling with kernelShape.length > 2 is not supported for NHWC format.');\n    }\n    const kernelSize = ShapeUtil.size(attributes.kernelShape);\n    const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\n    const stridesRank = kernelStrides.length;\n    const padsRank = attributes.pads.length;\n    const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\n    let padCode = '';\n    if (hasPads) {\n      padCode = `\n                if (xIndices[j] >= inputDims[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n                ${op1}\n              }`;\n    } else {\n      padCode = `\n              }\n              let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n              ${op1}\n            `;\n    }\n    const poolingCode = `\n            @group(0) @binding(0) var<storage, read> x : array<${dataType}>;\n            @group(0) @binding(1) var<storage, read_write> output : array<${dataType}>;\n\n            ${outputIndicesHelper.o2iImpl}\n            ${xIndicesHelper.i2oImpl}\n\n            const pads = array<u32, ${padsRank}>(${attributes.pads.map(i => `${i}u`).join(',')});\n            const inputDims = array<u32, ${rank}>(${inputDims.map(i => `${i}u`).join(',')});\n            const kernelStrides = array<u32, ${stridesRank}>(${kernelStrides.map(i => `${i}u`).join(',')});\n            const strides = array<u32, ${stridesRank}>(${attributes.strides.map(i => `${i}u`).join(',')});\n\n            ${shaderHelper.mainStart()}\n              ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n              ${outputIndicesHelper.indicesVariableDeclaration('indices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'indices')}\n              ${outputIndicesHelper.indicesVariableDeclaration('xIndices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'xIndices')}\n\n              var offsets: array<u32, ${stridesRank}>;\n\n              var value = ${dataType}(${start});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < ${kernelSize}u; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${stridesRank - 1}u; j++) {\n                  offsets[j] = offset / kernelStrides[j];\n                  offset -= offsets[j] * kernelStrides[j];\n                }\n                offsets[${stridesRank - 1}] = offset;\n\n                isPad = false;\n                for (var j = ${rank - stridesRank}u; j < ${rank}u; j++) {\n                  xIndices[j] = indices[j] * strides[j - ${rank - stridesRank}u]\n                    + offsets[j - ${rank - stridesRank}u] - pads[j - 2u];\n                  ${padCode}\n              }\n              ${op2}\n\n              output[global_idx] = value;\n            }`;\n    return poolingCode;\n  }\n};\n\nexport interface FormatAttributes {\n  readonly format: 'NHWC'|'NCHW';\n}\n\nexport interface PoolCommonAttributes extends FormatAttributes {\n  readonly autoPad: string;\n  readonly ceilMode: number;\n  readonly kernelShape: readonly number[];\n  readonly strides: readonly number[];\n  readonly pads: readonly number[];\n}\n\nconst parsePoolCommonAttributes = (attributes: Record<string, unknown>): PoolCommonAttributes => ({\n  format: attributes.format as FormatAttributes['format'],\n  autoPad: ['NOTSET', 'VALID', 'SAME_UPPER', 'SAME_LOWER'][attributes.auto_pad as number],\n  ceilMode: attributes.ceil_mode as number,\n  kernelShape: attributes.kernel_shape as [number, number],\n  strides: attributes.strides as [number, number],\n  pads: attributes.pads as [number, number, number, number]\n});\n\nexport interface AveragePoolAttributes extends PoolCommonAttributes, AttributeWithCacheKey {\n  readonly countIncludePad: boolean;\n}\n\nconst createAveragePoolProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, isGlobalOperator: boolean,\n     attributes: AveragePoolAttributes): ProgramInfo => {\n      const [adjustedAttributes, outputShape] =\n          getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n      const kernelSize = ShapeUtil.size(adjustedAttributes.kernelShape);\n\n      const dataType = 'f32';\n\n      const op1 = 'value += x_val;';\n      let op2 = '';\n      if (adjustedAttributes.countIncludePad) {\n        op2 += `value /= ${dataType}(${kernelSize});`;\n      } else {\n        op2 += `value /= ${dataType}(${kernelSize} - pad);`;\n      }\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        getShaderSource: shaderHelper => generatePoolingCode(\n            shaderHelper, inputs[0].dims, outputShape, adjustedAttributes, op1, op2, dataType, '0.0'),\n        dispatchGroup: () => ({x: Math.ceil(ShapeUtil.size(outputShape) / 64 /* workgroup size */)})\n      };\n    };\n\nexport const parseAveragePoolAttributes = (attributes: Record<string, unknown>): AveragePoolAttributes => {\n  const countIncludePad = (attributes.count_include_pad as number) === 0 ? false : true;\n\n  const attr = parsePoolCommonAttributes(attributes);\n  // TODO: support attribute 'ceil_mode'\n  if (attr.ceilMode !== 0) {\n    throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\n  }\n\n  return createAttributeWithCacheKey({countIncludePad, ...attr});\n};\n\nexport const averagePool = (context: ComputeContext, attributes: AveragePoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'AveragePool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createAveragePoolProgramInfo(context.inputs, metadata, false, attributes)});\n};\n\nconst globalPoolAttributes = {\n  autoPad: '',\n  ceilMode: 0,\n  countIncludePad: false,\n  kernelShape: [],\n  strides: [],\n  pads: [],\n  storageOrder: 0,\n  dilations: [],\n  cacheKey: ''\n};\n\nexport const parseGlobalAveragePoolAttributes = (attributes: Record<string, unknown>): AveragePoolAttributes => {\n  const format = attributes.format as FormatAttributes['format'];\n  return {format, ...globalPoolAttributes, cacheKey: format};\n};\n\nexport const globalAveragePool = (context: ComputeContext, attributes: AveragePoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'GlobalAveragePool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createAveragePoolProgramInfo(context.inputs, metadata, true, attributes)});\n};\n\nexport interface MaxPoolAttributes extends PoolCommonAttributes, AttributeWithCacheKey {\n  readonly storageOrder: number;\n  readonly dilations: number[];\n}\n\nconst createMaxPoolProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, isGlobalOperator: boolean,\n     attributes: MaxPoolAttributes): ProgramInfo => {\n      const [adjustedAttributes, outputShape] =\n          getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n      const op1 = `\n      value = max(x_val, value);\n    `;\n      const op2 = '';\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        getShaderSource: shaderHelper =>\n            generatePoolingCode(shaderHelper, inputs[0].dims, outputShape, adjustedAttributes, op1, op2, 'f32', '-1e5'),\n        dispatchGroup: () => ({x: Math.ceil(ShapeUtil.size(outputShape) / 64 /* workgroup size */)})\n      };\n    };\n\nexport const maxPool = (context: ComputeContext, attributes: MaxPoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'MaxPool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createMaxPoolProgramInfo(context.inputs, metadata, false, attributes)});\n};\n\nexport const parseMaxPoolAttributes = (attributes: Record<string, unknown>): MaxPoolAttributes => {\n  const storageOrder = attributes.storage_order as number;\n  const dilations = attributes.dilations as [number, number];\n\n  const attr = parsePoolCommonAttributes(attributes);\n  // TODO: support attribute 'ceil_mode' and 'storage_order'\n  if (storageOrder !== 0) {\n    throw new Error('column major storage order is not yet supported for MaxPool');\n  }\n  if (attr.ceilMode !== 0) {\n    throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\n  }\n\n  return createAttributeWithCacheKey({storageOrder, dilations, ...attr});\n};\n\nexport const parseGlobalMaxPoolAttributes = (attributes: Record<string, unknown>): MaxPoolAttributes => {\n  const format = attributes.format as FormatAttributes['format'];\n  return {format, ...globalPoolAttributes, cacheKey: format};\n};\n\nexport const globalMaxPool = (context: ComputeContext, attributes: MaxPoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'GlobalMaxPool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createMaxPoolProgramInfo(context.inputs, metadata, true, attributes)});\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\n\nexport interface TransposeAttributes extends AttributeWithCacheKey {\n  readonly perm: number[];\n}\n\nexport const transposeProgramMetadata = {\n  name: 'Transpose',\n  inputTypes: [GpuDataType.default]\n};\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Transpose requires 1 input.');\n  }\n\n  if (inputs[0].dataType !== DataType.float) {\n    throw new Error('input should be float tensor');\n  }\n};\n\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] =>\n    (perm && perm.length !== inputShape.length) ? [...(inputShape.keys())].reverse() : perm;\n\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] =>\n    ShapeUtil.sortBasedOnPerm(inputShape, getAdjustedPerm(inputShape, perm));\n\nconst permFunctionBody = (perm: number[], rank: number): string => {\n  const reverseFunc = [];\n  reverseFunc.push(`fn perm(a: ptr<function, array<u32, ${rank}>>, i: ptr<function, array<u32, ${rank}>>) {`);\n  for (let i = 0; i < rank; ++i) {\n    reverseFunc.push(`\\t(*a)[${perm[i]}]=(*i)[${i}];`);\n  }\n  reverseFunc.push('\\t}');\n  return reverseFunc.join('\\n');\n};\n\nexport const createTransposeProgramInfo = (input: TensorView, permAttr: number[]): ProgramInfo => {\n  const dataType = 'f32';  // TODO: support other data type\n  const inputShape = input.dims;\n  const perm = getAdjustedPerm(inputShape, permAttr);\n  const outputShape = getOutputShape(inputShape, perm);\n  const rank = inputShape.length;\n  const outputSize = ShapeUtil.size(outputShape);\n  // A dims=[${inputs[0].dims.toString()}]\n  // out Dims=[${unpackedOutputShape.toString()}]\n  // based on perm=[${perm.toString()}]\n\n  const outputIndicesHelper = createIndicesHelper('output', outputShape);\n  const inputIndicesHelper = createIndicesHelper('a', inputShape);\n\n  const getShaderSource = (shaderHelper: ShaderHelper) => `\n  @group(0) @binding(0) var<storage, read> a : array<${dataType}>;\n  @group(0) @binding(1) var<storage, read_write> output : array<${dataType}>;\n\n  ${permFunctionBody(perm, rank)}\n  ${outputIndicesHelper.o2iImpl}\n  ${inputIndicesHelper.i2oImpl}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    ${outputIndicesHelper.indicesVariableDeclaration('indices')}\n    ${outputIndicesHelper.o2iCall('global_idx', 'indices')}\n    ${inputIndicesHelper.indicesVariableDeclaration('aIndices')}\n    perm(&aIndices, &indices);\n\n    output[global_idx] = a[${inputIndicesHelper.i2oExpression('aIndices')}];\n  }`;\n  return {\n    ...transposeProgramMetadata,\n    outputs: [{dims: outputShape, dataType: input.dataType, gpuDataType: GpuDataType.default}],\n    getShaderSource,\n    dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n  };\n};\n\nexport const transpose = (context: ComputeContext, attributes: TransposeAttributes): void => {\n  validateInputs(context.inputs);\n  context.compute({\n    ...transposeProgramMetadata,\n    cacheHint: attributes.cacheKey,\n    get: () => createTransposeProgramInfo(context.inputs[0], attributes.perm)\n  });\n};\n\nexport const parseTransposeAttributes = (attributes: Record<string, unknown>): TransposeAttributes =>\n    createAttributeWithCacheKey({perm: attributes.perm as number[]});\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {MAX_CLIP, MIN_CLIP, ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {ShaderHelper} from './common';\n\ntype BuiltinFunctionName = string;\ntype ElementwiseCustomExpression = (expression: string) => string;\ntype ElementwiseFunctionCall = BuiltinFunctionName|ElementwiseCustomExpression;\n\nconst createElementwiseProgramShader =\n    (shaderHelper: ShaderHelper, datasize: number, funcCall: ElementwiseFunctionCall,\n     additionalImplementation?: string): string => {\n      const vecSize = Math.ceil(datasize / 4);\n\n      let expression = '';\n      if (typeof funcCall === 'string') {\n        expression = `${funcCall}(a)`;\n      } else {\n        expression = funcCall('a');\n      }\n      return `\n  @group(0) @binding(0) var<storage, read> inputData : array<vec4<f32>>;\n  @group(0) @binding(1) var<storage, read_write> outputData : array<vec4<f32>>;\n\n  ${additionalImplementation ?? ''}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(vecSize)}\n\n    let a = inputData[global_idx];\n    outputData[global_idx] = ${expression};\n  }`;\n    };\n\nconst createElementwiseProgramInfo =\n    (metadata: ProgramMetadata, input: TensorView, funcCall: ElementwiseFunctionCall,\n     additionalImplementation?: string): ProgramInfo => ({\n      ...metadata,\n      getShaderSource: shaderHelper =>\n          createElementwiseProgramShader(shaderHelper, ShapeUtil.size(input.dims), funcCall, additionalImplementation),\n      outputs: [{dims: input.dims, dataType: input.dataType, gpuDataType: GpuDataType.default}],\n      dispatchGroup: (inputTensors) =>\n          ({x: Math.ceil(ShapeUtil.size(inputTensors[0].dims) / 64 /* workgroup size */ / 4 /* vec size */)})\n    });\n\nconst createElementwiseProgramInfoLoader =\n    (input: TensorView, name: string, funcCall: ElementwiseFunctionCall, additionalImplementation?: string,\n     cacheKey?: string): ProgramInfoLoader => {\n      const metadata: ProgramMetadata = {name, inputTypes: [GpuDataType.default], cacheHint: cacheKey};\n      return {\n        ...metadata,\n        get: () => createElementwiseProgramInfo(metadata, input, funcCall, additionalImplementation)\n      };\n    };\n\nexport const abs = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Abs', 'abs'));\n};\n\nexport const acos = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Acos', 'acos'));\n};\n\nexport const acosh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Acosh', 'acosh'));\n};\n\nexport const asin = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Asin', 'asin'));\n};\n\nexport const asinh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Asinh', 'asinh'));\n};\n\nexport const atan = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Atan', 'atan'));\n};\nexport const atanh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Atanh', 'atanh'));\n};\n\nexport interface ClipAttributes extends AttributeWithCacheKey {\n  readonly min: number;\n  readonly max: number;\n}\n\nexport const clipV10 = (context: ComputeContext, attributes: ClipAttributes): void => {\n  context.compute(\n      createElementwiseProgramInfoLoader(\n          context.inputs[0], 'Clip', a => `clamp(${a}, clip_min_, clip_max_)`, `\n    const clip_min_: vec4<f32> = vec4(f32(${attributes.min}));\n    const clip_max_: vec4<f32> = vec4(f32(${attributes.max}));\n`,\n          attributes.cacheKey),\n      {inputs: [0]});\n};\nconst generateClipAttributesFromInputs = (inputs: readonly TensorView[]): ClipAttributes => {\n  const min = (inputs.length >= 2) ? inputs[1].getFloat32Array()[0] : MIN_CLIP;\n  const max = (inputs.length >= 3) ? inputs[2].getFloat32Array()[0] : MAX_CLIP;\n  return createAttributeWithCacheKey({min, max});\n};\n\nexport const clip = (context: ComputeContext): void => {\n  const attributes = generateClipAttributesFromInputs(context.inputs);\n  clipV10(context, attributes);\n};\n\nexport const ceil = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Ceil', 'ceil'));\n};\n\nexport const cos = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Cos', 'cos'));\n};\n\nexport const cosh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Cosh', 'cosh'));\n};\n\nexport interface AlphaAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const parseAlphaAttributes = (attributes: Record<string, unknown>): AlphaAttributes =>\n    createAttributeWithCacheKey(attributes as {alpha: number});\n\nexport const elu = (context: ComputeContext, attributes: AlphaAttributes): void => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'Elu', a => `elu_vf32(${a})`, `\n  const elu_alpha_: f32 = f32(${attributes.alpha});\n\n  fn elu_f32(a: f32) -> f32 {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,\n      attributes.cacheKey));\n};\n\nexport const erf = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Erf', a => `erf_vf32(${a})`, `\n  const r0: f32 = 0.3275911;\n  const r1: f32 = 0.254829592;\n  const r2: f32 = -0.284496736;\n  const r3: f32 = 1.421413741;\n  const r4: f32 = -1.453152027;\n  const r5: f32 = 1.061405429;\n\n  fn erf_vf32(v: vec4<f32>) -> vec4<f32> {\n    let absv = abs(v);\n    let x = 1.0 / (1.0 + r0 * absv);\n    return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n  }`));\n};\n\nexport const exp = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Exp', 'exp'));\n};\n\nexport const floor = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Floor', 'floor'));\n};\n\nexport const leakyRelu = (context: ComputeContext, attributes: AlphaAttributes): void => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'LeakyRelu', a => `select(leaky_relu_alpha_ * ${a}, ${a}, ${a} >= vec4<f32>(0.0))`,\n      `const leaky_relu_alpha_: f32 = f32(${attributes.alpha});`, attributes.cacheKey));\n};\n\nexport const neg = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Neg', a => `-${a}`));\n};\n\nexport const reciprocal = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Reciprocal', a => `1.0/${a}`));\n};\n\nexport const relu = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'Relu', a => `select(vec4<f32>(0.0), ${a}, ${a} > vec4<f32>(0.0))`));\n};\n\nexport const sigmoid = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sigmoid', a => `(1.0 / (1.0 + exp(-${a})))`));\n};\n\nexport const sin = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sin', 'sin'));\n};\n\nexport const sinh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sinh', 'sinh'));\n};\n\nexport const sqrt = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sqrt', 'sqrt'));\n};\n\nexport const tan = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Tan', 'tan'));\n};\n\nexport const tanh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Tanh', 'tanh'));\n};\n\nexport const thresholdedRelu = (context: ComputeContext, attributes: AlphaAttributes): number => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'ThresholdedRelu', a => `select(vec4<f32>(0.0), ${a}, ${a} > thresholded_relu_alpha_)`,\n      `const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${attributes.alpha});`, attributes.cacheKey));\n  return 0;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGpuBackend} from '../backend-webgpu';\nimport {LOG_DEBUG} from '../log';\n\nimport {createShaderHelper} from './ops/common';\nimport {Artifact, GpuData, ProgramInfo} from './types';\n\n/**\n * ProgramManager is the main class behind running computations\n * It builds ProgramInfo's into Artifacts\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\n * Uses the artifact to run the computation by calling Draw on\n * the WebGL drawing buffer\n * ProgramManager automatically maps (binds) input variables to their\n * corresponding Location's in the binary program\n */\nexport class ProgramManager {\n  repo: Map<unknown, Artifact>;  // this should be per-session object\n  attributesBound: boolean;\n\n  constructor(private backend: WebGpuBackend) {\n    this.repo = new Map();\n    this.attributesBound = false;\n  }\n  getArtifact(key: unknown): Artifact|undefined {\n    return this.repo.get(key);\n  }\n  setArtifact(key: unknown, artifact: Artifact): void {\n    this.repo.set(key, artifact);\n  }\n  run(buildArtifact: Artifact, inputs: GpuData[], outputs: GpuData[], dispatchGroup: [number, number, number]): void {\n    const device = this.backend.device;\n    const computePassEncoder = this.backend.getComputePassEncoder();\n\n    if (this.backend.profilingEnabled) {\n      // profiling write start timestamp\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (computePassEncoder as any).writeTimestamp(this.backend.profilingQuerySet, 0);\n    }\n\n    computePassEncoder.setPipeline(buildArtifact.computePipeline);\n    const entries = [];\n    for (const input of inputs) {\n      entries.push({binding: entries.length, resource: {buffer: input.buffer}});\n    }\n    for (const output of outputs) {\n      entries.push({binding: entries.length, resource: {buffer: output.buffer}});\n    }\n    const bindGroup = device.createBindGroup({layout: buildArtifact.computePipeline.getBindGroupLayout(0), entries});\n    computePassEncoder.setBindGroup(0, bindGroup);\n\n    computePassEncoder.dispatchWorkgroups(...dispatchGroup);\n\n    this.backend.pendingDispatchNumber++;\n\n    if (this.backend.profilingEnabled) {\n      // profiling write end timestamp\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (computePassEncoder as any).writeTimestamp(this.backend.profilingQuerySet, 1);\n      // eslint-disable-next-line no-bitwise\n      const queryData = this.backend.gpuDataManager.create(16, GPUBufferUsage.COPY_SRC | GPUBufferUsage.QUERY_RESOLVE);\n      // eslint-disable-next-line no-bitwise\n      const syncData = this.backend.gpuDataManager.create(16, GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST);\n\n      this.backend.endComputePass();\n      this.backend.getCommandEncoder().resolveQuerySet(this.backend.profilingQuerySet, 0, 2, queryData.buffer, 0);\n      this.backend.getCommandEncoder().copyBufferToBuffer(queryData.buffer, 0, syncData.buffer, 0, 16);\n      this.backend.flush();\n\n      const kernelId = this.backend.currentKernelId!;\n      const kernelName = this.backend.kernels.get(kernelId)![0];\n\n      syncData.buffer.mapAsync(GPUMapMode.READ).then(() => {\n        const mappedData = new BigUint64Array(syncData.buffer.getMappedRange());\n        const startTimeU64 = mappedData[0];\n        const endTimeU64 = mappedData[1];\n\n        syncData.buffer.unmap();\n\n        if (typeof this.backend.profilingTimeBase === 'undefined') {\n          this.backend.profilingTimeBase = startTimeU64;\n        }\n\n        const startTime = Number(startTimeU64 - this.backend.profilingTimeBase);\n        const endTime = Number(endTimeU64 - this.backend.profilingTimeBase);\n\n        if (!Number.isSafeInteger(startTime) || !Number.isSafeInteger(endTime)) {\n          throw new RangeError('incorrect timestamp range');\n        }\n\n        this.backend.gpuDataManager.release(queryData.id);\n        this.backend.gpuDataManager.release(syncData.id);\n\n        // eslint-disable-next-line no-console\n        console.log(`[profiling] kernel \"${kernelId}|${kernelName}\" execution time: ${endTime - startTime} ns`);\n      });\n    }\n\n    if (this.backend.pendingDispatchNumber >= 16) {\n      this.backend.flush();\n    }\n  }\n  dispose(): void {\n    // this.repo.forEach(a => this.glContext.deleteProgram(a.program));\n  }\n  build(programInfo: ProgramInfo, normalizedDispatchGroupSize: [number, number, number]): Artifact {\n    const device = this.backend.device;\n\n    const code = programInfo.getShaderSource(createShaderHelper(normalizedDispatchGroupSize));\n    const shaderModule = device.createShaderModule({code});\n    LOG_DEBUG('verbose', () => `[WebGPU] shader code: ${code}`);\n\n    const computePipeline =\n        device.createComputePipeline({compute: {module: shaderModule, entryPoint: 'main'}, layout: 'auto'});\n\n    return {programInfo, computePipeline};\n  }\n\n  normalizeDispatchGroupSize(dispatchGroup: ReturnType<ProgramInfo['dispatchGroup']>): [number, number, number] {\n    const x = typeof dispatchGroup === 'number' ? dispatchGroup : dispatchGroup.x;\n    const y = typeof dispatchGroup === 'number' ? 1 : (dispatchGroup.y || 1);\n    const z = typeof dispatchGroup === 'number' ? 1 : (dispatchGroup.z || 1);\n    const limitPerDimension = this.backend.device.limits.maxComputeWorkgroupsPerDimension;\n    if (x <= limitPerDimension && y <= limitPerDimension && z <= limitPerDimension) {\n      return [x, y, z];\n    }\n    const size = x * y * z;\n    let dispatchAverage = Math.ceil(Math.sqrt(size));\n    if (dispatchAverage > limitPerDimension) {\n      dispatchAverage = Math.ceil(Math.cbrt(size));\n      if (dispatchAverage > limitPerDimension) {\n        throw new Error('Total dispatch size exceeds WebGPU maximum.');\n      }\n      return [dispatchAverage, dispatchAverage, dispatchAverage];\n    } else {\n      return [dispatchAverage, dispatchAverage, 1];\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor, TensorView} from '../tensor';\n\nimport {ShaderHelper} from './ops/common';\n\nexport enum GpuDataType {\n  default = 0,\n  upload = 1,\n  profile = 2\n}\nexport type GpuDataId = number;\n\nexport interface GpuData {\n  type: GpuDataType;\n  id: GpuDataId;\n  buffer: GPUBuffer;\n}\n\nexport interface TensorInfo {\n  id?: Tensor.Id;\n  dims: readonly number[];\n  dataType: number;\n  gpuDataType: GpuDataType;\n}\n\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n\nexport interface ProgramMetadata {\n  /**\n   * the name of the program. used for debugging and profiling\n   */\n  name: string;\n\n  /**\n   * gpu data types for each input\n   */\n  inputTypes: GpuDataType[];\n  /**\n   * an optional string as a cache hint in the artifact cache\n   */\n  cacheHint?: string;\n}\n\n/**\n * A ProgramInfoLoader allows\n */\nexport interface ProgramInfoLoader extends ProgramMetadata {\n  /**\n   * a function to get the program info\n   */\n  get(): ProgramInfo;\n}\n\n/**\n * A set of data that represent a shader program\n */\nexport interface ProgramInfo extends ProgramMetadata {\n  /**\n   * information of uniform variables\n   */\n  variables?: ProgramVariable[];\n  /**\n   * tensor info for outputs\n   */\n  outputs: TensorInfo[];\n  /**\n   * the shader's processing source code\n   */\n  getShaderSource: (shaderHelper: ShaderHelper) => string;\n  /**\n   * default is \"main\"\n   */\n  // entryPoint: string;\n\n  dispatchGroup: (inputs: readonly TensorView[]) => {\n    x: number;\n    y?: number;\n    z?: number;\n  };\n}\n\nexport interface Artifact {\n  programInfo: ProgramInfo;\n  computePipeline: GPUComputePipeline;\n}\n\nexport interface ComputeContextInputsOutputsMapping {\n  /**\n   * specify the mapping to the program's inputs. the value can be a number or a tensor view.\n   * - if it's a number, it's the index of the kernel's input\n   * - if it's a tensor view, it's an existing tensor view that will be used as the input\n   *\n   * if inputs is not specified, the mapping will be the kernel's inputs in order.\n   */\n  readonly inputs?: ReadonlyArray<TensorView|number>;\n  /**\n   * specify the mapping to the program's outputs. the value must be a number.\n   * - if it's a non-negative number, it's the index of the kernel's output\n   * - if it's -1, it's an output that will be created as a temporary value. this value will be released after\n   * the kernel is executed.\n   * - if it's -2, it's an output that will be created as a persistent value. this value will be released when the\n   * kernel is released.\n   *\n   * if outputs is not specified, the mapping will be the kernel's outputs in order.\n   */\n  readonly outputs?: readonly number[];\n}\n\n/**\n * A ComputeContext instance carries the states that representing the current running of a kernel.\n */\nexport interface ComputeContext {\n  /**\n   * stores the pointer to OpKernelContext\n   */\n  readonly opKernelContext: number;\n\n  /**\n   * a list of inputs, each input is an instance of TensorView\n   */\n  readonly inputs: readonly TensorView[];\n\n  /**\n   * a custom data object that can be used to store any data that is needed by the kernel\n   */\n  readonly customData: {[key: string]: unknown};\n\n  compute(program: ProgramInfoLoader|ProgramInfo, inputsOutputsMapping?: ComputeContextInputsOutputsMapping):\n      TensorView[];\n  output(index: number, dims: readonly number[]): number;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession} from 'onnxruntime-common';\n\nimport {init as initJsep} from './jsep/init';\nimport {OrtWasmMessage, SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {getInstance, initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionAllocateCallbacks: Array<PromiseCallbacks<SerializableModeldata>> = [];\nconst createSessionFinalizeCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create_allocate':\n      if (ev.data.err) {\n        createSessionAllocateCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionAllocateCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create_finalize':\n      if (ev.data.err) {\n        createSessionFinalizeCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionFinalizeCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initWasm = async(): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, +(scriptSrc).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initOrt = async(numThreads: number, loggingLevel: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : {numThreads, loggingLevel}};\n      proxyWorker!.postMessage(message);\n\n      // TODO: support JSEP in worker\n    });\n  } else {\n    core.initOrt(numThreads, loggingLevel);\n\n    // init JSEP if available\n    await initJsep(getInstance());\n  }\n};\n\nexport const createSessionAllocate = async(model: Uint8Array): Promise<SerializableModeldata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableModeldata>((resolve, reject) => {\n      createSessionAllocateCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create_allocate', in : {model}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSessionAllocate(model);\n  }\n};\n\nexport const createSessionFinalize = async(modeldata: SerializableModeldata, options?: InferenceSession.SessionOptions):\n    Promise<SerializableSessionMetadata> => {\n      if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n        ensureWorker();\n        return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n          createSessionFinalizeCallbacks.push([resolve, reject]);\n          const message: OrtWasmMessage = {type: 'create_finalize', in : {modeldata, options}};\n          proxyWorker!.postMessage(message);\n        });\n      } else {\n        return core.createSessionFinalize(modeldata, options);\n      }\n    };\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      throw new Error('Can\\'t create run options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a run config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\nimport {promisify} from 'util';\n\nimport {SerializableModeldata} from './proxy-messages';\nimport {createSession, createSessionAllocate, createSessionFinalize, endProfiling, initOrt, releaseSession, run} from './proxy-wrapper';\nimport {logLevelStringToEnum} from './wasm-common';\n\nlet ortInit: boolean;\n\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async createSessionAllocate(path: string): Promise<SerializableModeldata> {\n    // fetch model from url and move to wasm heap. The arraybufffer that held the http\n    // response is freed once we return\n    const response = await fetch(path);\n    const arrayBuffer = await response.arrayBuffer();\n    return createSessionAllocate(new Uint8Array(arrayBuffer));\n  }\n\n  async loadModel(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!ortInit) {\n      await initOrt(env.wasm.numThreads!, logLevelStringToEnum(env.logLevel!));\n      ortInit = true;\n    }\n\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof fetch === 'undefined') {\n        // node\n        const model = await promisify(readFile)(pathOrBuffer);\n        [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n      } else {\n        // browser\n        // fetch model and move to wasm heap.\n        const modelData: SerializableModeldata = await this.createSessionAllocate(pathOrBuffer);\n        // create the session\n        [this.sessionId, this.inputNames, this.outputNames] = await createSessionFinalize(modelData, options);\n      }\n    } else {\n      [this.sessionId, this.inputNames, this.outputNames] = await createSession(pathOrBuffer, options);\n    }\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      // TODO: support pre-allocated output\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputIndices.push(index);\n    });\n\n    const outputs =\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\n\n    const result: SessionHandler.ReturnType = {};\n    for (let i = 0; i < outputs.length; i++) {\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\n    }\n    return result;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n\n  // if using JSEP with WebGPU, always disable memory pattern\n  if (options.executionProviders &&\n      options.executionProviders.some(ep => (typeof ep === 'string' ? ep : ep.name) === 'webgpu')) {\n    options.enableMemPattern = false;\n  }\n};\n\nconst setExecutionProviders =\n    (sessionOptionsHandle: number, executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n     allocs: number[]): void => {\n      for (const ep of executionProviders) {\n        let epName = typeof ep === 'string' ? ep : ep.name;\n\n        // check EP name\n        switch (epName) {\n          case 'xnnpack':\n            epName = 'XNNPACK';\n            break;\n          case 'webgpu':\n            epName = 'JS';\n            break;\n          case 'wasm':\n          case 'cpu':\n            continue;\n          default:\n            throw new Error(`not supported EP: ${epName}`);\n        }\n\n        const epNameDataOffset = allocWasmString(epName, allocs);\n        if (getInstance()._OrtAppendExecutionProvider(sessionOptionsHandle, epNameDataOffset) !== 0) {\n          throw new Error(`Can't append execution provider: ${epName}`);\n        }\n      }\n    };\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel ?? 'all');\n    const executionMode = getExecutionMode(sessionOptions.executionMode ?? 'sequential');\n    const logIdDataOffset =\n        typeof sessionOptions.logId === 'string' ? allocWasmString(sessionOptions.logId, allocs) : 0;\n\n    const logSeverityLevel = sessionOptions.logSeverityLevel ?? 2;  // Default to 2 - warning\n    if (!Number.isInteger(logSeverityLevel) || logSeverityLevel < 0 || logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${logSeverityLevel}`);\n    }\n\n    const logVerbosityLevel = sessionOptions.logVerbosityLevel ?? 0;  // Default to 0 - verbose\n    if (!Number.isInteger(logVerbosityLevel) || logVerbosityLevel < 0 || logVerbosityLevel > 4) {\n      throw new Error(`log verbosity level is not valid: ${logVerbosityLevel}`);\n    }\n\n    const optimizedModelFilePathOffset = typeof sessionOptions.optimizedModelFilePath === 'string' ?\n        allocWasmString(sessionOptions.optimizedModelFilePath, allocs) :\n        0;\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena, !!sessionOptions.enableMemPattern, executionMode,\n        !!sessionOptions.enableProfiling, 0, logIdDataOffset, logSeverityLevel, logVerbosityLevel,\n        optimizedModelFilePathOffset);\n    if (sessionOptionsHandle === 0) {\n      throw new Error('Can\\'t create session options');\n    }\n\n    if (sessionOptions.executionProviders) {\n      setExecutionProviders(sessionOptionsHandle, sessionOptions.executionProviders, allocs);\n    }\n\n    if (sessionOptions.extra !== undefined) {\n      iterateExtraOptions(sessionOptions.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a session config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from 'onnxruntime-common';\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nexport const enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n/**\n * Map string tensor data to enum value\n */\nexport const tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\n/**\n * Map enum value to string tensor data\n */\nexport const tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\n/**\n * get tensor element size in bytes by the given data type\n * @returns size in integer or undefined if the data type is not supported\n */\nexport const getTensorElementSize = (dateType: number): number|\n    undefined => [undefined, 4, 1, 1, 2, 2, 4, 8, undefined, 1, 2, 8, 4, 8, undefined, undefined, undefined][dateType];\n\n/**\n * get typed array constructor by the given tensor type\n */\nexport const tensorTypeToTypedArrayConstructor = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * Map string log level to integer value\n */\nexport const logLevelStringToEnum = (logLevel: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {allocWasmString} from './string-utils';\nimport {tensorDataTypeEnumToString, tensorDataTypeStringToEnum, tensorTypeToTypedArrayConstructor} from './wasm-common';\nimport {getInstance} from './wasm-factory';\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nexport const initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    throw new Error(`Can't initialize onnxruntime. error code = ${errorCode}`);\n  }\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\n */\ntype SessionMetadata = [number, number[], number[]];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSessionAllocate = (model: Uint8Array): [number, number] => {\n  const wasm = getInstance();\n  const modelDataOffset = wasm._malloc(model.byteLength);\n  wasm.HEAPU8.set(model, modelDataOffset);\n  return [modelDataOffset, model.byteLength];\n};\n\nexport const createSessionFinalize =\n    (modelData: SerializableModeldata, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        sessionHandle = wasm._OrtCreateSession(modelData[0], modelData[1], sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          throw new Error('Can\\'t create a session');\n        }\n      } finally {\n        wasm._free(modelData[0]);\n        if (sessionOptionsHandle !== 0) {\n          wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        }\n        allocs.forEach(wasm._free);\n      }\n\n      const inputCount = wasm._OrtGetInputCount(sessionHandle);\n      const outputCount = wasm._OrtGetOutputCount(sessionHandle);\n\n      const inputNames = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNames = [];\n      const outputNamesUTF8Encoded = [];\n      for (let i = 0; i < inputCount; i++) {\n        const name = wasm._OrtGetInputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an input name');\n        }\n        inputNamesUTF8Encoded.push(name);\n        inputNames.push(wasm.UTF8ToString(name));\n      }\n      for (let i = 0; i < outputCount; i++) {\n        const name = wasm._OrtGetOutputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an output name');\n        }\n        outputNamesUTF8Encoded.push(name);\n        outputNames.push(wasm.UTF8ToString(name));\n      }\n\n      activeSessions.set(sessionHandle, [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\n      return [sessionHandle, inputNames, outputNames];\n    };\n\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const modelData: SerializableModeldata = createSessionAllocate(model);\n      return createSessionFinalize(modelData, options);\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  inputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  outputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions.delete(sessionId);\n};\n\n/**\n * perform inference run\n */\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  const inputCount = inputIndices.length;\n  const outputCount = outputIndices.length;\n\n  let runOptionsHandle = 0;\n  let runOptionsAllocs: number[] = [];\n\n  const inputValues: number[] = [];\n  const inputAllocs: number[] = [];\n\n  try {\n    [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n    // create input tensors\n    for (let i = 0; i < inputCount; i++) {\n      const dataType = inputs[i][0];\n      const dims = inputs[i][1];\n      const data = inputs[i][2];\n\n      let dataOffset: number;\n      let dataByteLength: number;\n\n      if (Array.isArray(data)) {\n        // string tensor\n        dataByteLength = 4 * data.length;\n        dataOffset = wasm._malloc(dataByteLength);\n        inputAllocs.push(dataOffset);\n        let dataIndex = dataOffset / 4;\n        for (let i = 0; i < data.length; i++) {\n          if (typeof data[i] !== 'string') {\n            throw new TypeError(`tensor data at index ${i} is not a string`);\n          }\n          wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\n        }\n      } else {\n        dataByteLength = data.byteLength;\n        dataOffset = wasm._malloc(dataByteLength);\n        inputAllocs.push(dataOffset);\n        wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\n      }\n\n      const stack = wasm.stackSave();\n      const dimsOffset = wasm.stackAlloc(4 * dims.length);\n      try {\n        let dimIndex = dimsOffset / 4;\n        dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n        const tensor = wasm._OrtCreateTensor(\n            tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\n        if (tensor === 0) {\n          throw new Error('Can\\'t create a tensor');\n        }\n        inputValues.push(tensor);\n      } finally {\n        wasm.stackRestore(stack);\n      }\n    }\n\n    const beforeRunStack = wasm.stackSave();\n    const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n    const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n    const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n    const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n    try {\n      let inputValuesIndex = inputValuesOffset / 4;\n      let inputNamesIndex = inputNamesOffset / 4;\n      let outputValuesIndex = outputValuesOffset / 4;\n      let outputNamesIndex = outputNamesOffset / 4;\n      for (let i = 0; i < inputCount; i++) {\n        wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\n        wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n      }\n      for (let i = 0; i < outputCount; i++) {\n        wasm.HEAPU32[outputValuesIndex++] = 0;\n        wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n      }\n\n      // support RunOptions\n      let errorCode = wasm._OrtRun(\n          sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n          outputValuesOffset, runOptionsHandle);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const runPromise = wasm.jsepRunPromise;\n      if (runPromise && typeof runPromise.then !== 'undefined') {\n        errorCode = await runPromise;\n      }\n\n      const output: SerializableTensor[] = [];\n\n      if (errorCode === 0) {\n        for (let i = 0; i < outputCount; i++) {\n          const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n\n          const beforeGetTensorDataStack = wasm.stackSave();\n          // stack allocate 4 pointer value\n          const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n          let type: Tensor.Type|undefined, dataOffset = 0;\n          try {\n            errorCode = wasm._OrtGetTensorData(\n                tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n            if (errorCode !== 0) {\n              throw new Error(`Can't access output tensor data. error code = ${errorCode}`);\n            }\n            let tensorDataIndex = tensorDataOffset / 4;\n            const dataType = wasm.HEAPU32[tensorDataIndex++];\n            dataOffset = wasm.HEAPU32[tensorDataIndex++];\n            const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n            const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n            const dims = [];\n            for (let i = 0; i < dimsLength; i++) {\n              dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n            }\n            wasm._OrtFree(dimsOffset);\n\n            const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\n            type = tensorDataTypeEnumToString(dataType);\n            if (type === 'string') {\n              const stringData: string[] = [];\n              let dataIndex = dataOffset / 4;\n              for (let i = 0; i < size; i++) {\n                const offset = wasm.HEAPU32[dataIndex++];\n                const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n                stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n              }\n              output.push([type, dims, stringData]);\n            } else {\n              const typedArrayConstructor = tensorTypeToTypedArrayConstructor(type);\n              const data = new typedArrayConstructor(size);\n              new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                  .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n              output.push([type, dims, data]);\n            }\n          } finally {\n            wasm.stackRestore(beforeGetTensorDataStack);\n            if (type === 'string' && dataOffset) {\n              wasm._free(dataOffset);\n            }\n            wasm._OrtReleaseTensor(tensor);\n          }\n        }\n      }\n\n      if (errorCode === 0) {\n        return output;\n      } else {\n        throw new Error(`failed to call OrtRun(). error code = ${errorCode}.`);\n      }\n    } finally {\n      wasm.stackRestore(beforeRunStack);\n    }\n  } finally {\n    inputValues.forEach(wasm._OrtReleaseTensor);\n    inputAllocs.forEach(wasm._free);\n\n    wasm._OrtReleaseRunOptions(runOptionsHandle);\n    runOptionsAllocs.forEach(wasm._free);\n  }\n};\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    throw new Error('Can\\'t get an profile file name');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && data.buffer) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\nimport * as path from 'path';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\n\n/* eslint-disable @typescript-eslint/no-require-imports */\nconst ortWasmFactory: EmscriptenModuleFactory<OrtWasmModule> =\n    BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm.js') : require('./binding/ort-wasm-simd.jsep.js');\n\nconst ortWasmFactoryThreaded: EmscriptenModuleFactory<OrtWasmModule> = !BUILD_DEFS.DISABLE_WASM_THREAD ?\n    (BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm-threaded.js') :\n                                 require('./binding/ort-wasm-simd-threaded.jsep.js')) :\n    ortWasmFactory;\n/* eslint-enable @typescript-eslint/no-require-imports */\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(new Uint8Array([\n      0,   97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1,   28,  0, 65, 0,\n      253, 15, 253, 12,  0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0,  0,  253, 186, 1, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPaths = flags.wasmPaths;\n  const wasmPrefixOverride = typeof wasmPaths === 'string' ? wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof wasmPaths === 'object' ? wasmPaths[wasmFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads && fileName.endsWith('.worker.js') &&\n            typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName.endsWith('.wasm')) {\n          if (wasmPathOverride) {\n            return wasmPathOverride;\n          }\n\n          const prefix = wasmPrefixOverride ?? scriptDirectory;\n\n          if (!BUILD_DEFS.DISABLE_WEBGPU) {\n            if (wasmFileName === 'ort-wasm-simd.wasm') {\n              return prefix + 'ort-wasm-simd.jsep.wasm';\n            } else if (wasmFileName === 'ort-wasm-simd-threaded.wasm') {\n              return prefix + 'ort-wasm-simd-threaded.jsep.wasm';\n            }\n          }\n\n          return prefix + wasmFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode = `var ortWasmThreaded=(function(){var _scriptDir;return ${factory.toString()}})();`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","\nimport worker from \"!!../../../../node_modules/worker-loader/dist/runtime/inline.js\";\n\nexport default function Worker_fn() {\n  return worker(\"/*!\\n* ONNX Runtime Web v1.16.0\\n* Copyright (c) Microsoft Corporation. All rights reserved.\\n* Licensed under the MIT License.\\n*/\\n!function(){var t={899:function(t,n){\\\"use strict\\\";var e=this&&this.__read||function(t,n){var e=\\\"function\\\"==typeof Symbol&&t[Symbol.iterator];if(!e)return t;var r,i,a=e.call(t),o=[];try{for(;(void 0===n||n-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(t){i={error:t}}finally{try{r&&!r.done&&(e=a.return)&&e.call(a)}finally{if(i)throw i.error}}return o};Object.defineProperty(n,\\\"__esModule\\\",{value:!0}),n.iterateExtraOptions=void 0,n.iterateExtraOptions=function(t,r,i,a){if(\\\"object\\\"==typeof t&&null!==t){if(i.has(t))throw new Error(\\\"Circular reference in options\\\");i.add(t)}Object.entries(t).forEach((function(t){var o=e(t,2),u=o[0],c=o[1],l=r?r+u:u;if(\\\"object\\\"==typeof c)(0,n.iterateExtraOptions)(c,l+\\\".\\\",i,a);else if(\\\"string\\\"==typeof c||\\\"number\\\"==typeof c)a(l,c.toString());else{if(\\\"boolean\\\"!=typeof c)throw new Error(\\\"Can't handle extra config type: \\\".concat(typeof c));a(l,c?\\\"1\\\":\\\"0\\\")}}))}},918:function(t,n,e){\\\"use strict\\\";Object.defineProperty(n,\\\"__esModule\\\",{value:!0}),n.setRunOptions=void 0;var r=e(899),i=e(444),a=e(263);n.setRunOptions=function(t){var n=(0,a.getInstance)(),e=0,o=[],u=t||{};try{if(void 0===(null==t?void 0:t.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof t.logSeverityLevel||!Number.isInteger(t.logSeverityLevel)||t.logSeverityLevel<0||t.logSeverityLevel>4)throw new Error(\\\"log serverity level is not valid: \\\".concat(t.logSeverityLevel));if(void 0===(null==t?void 0:t.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof t.logVerbosityLevel||!Number.isInteger(t.logVerbosityLevel))throw new Error(\\\"log verbosity level is not valid: \\\".concat(t.logVerbosityLevel));void 0===(null==t?void 0:t.terminate)&&(u.terminate=!1);var c=0;if(void 0!==(null==t?void 0:t.tag)&&(c=(0,i.allocWasmString)(t.tag,o)),0===(e=n._OrtCreateRunOptions(u.logSeverityLevel,u.logVerbosityLevel,!!u.terminate,c)))throw new Error(\\\"Can't create run options\\\");return void 0!==(null==t?void 0:t.extra)&&(0,r.iterateExtraOptions)(t.extra,\\\"\\\",new WeakSet,(function(t,r){var a=(0,i.allocWasmString)(t,o),u=(0,i.allocWasmString)(r,o);if(0!==n._OrtAddRunConfigEntry(e,a,u))throw new Error(\\\"Can't set a run config entry: \\\".concat(t,\\\" - \\\").concat(r))})),[e,o]}catch(t){throw 0!==e&&n._OrtReleaseRunOptions(e),o.forEach(n._free),t}}},622:function(t,n,e){\\\"use strict\\\";var r=this&&this.__values||function(t){var n=\\\"function\\\"==typeof Symbol&&Symbol.iterator,e=n&&t[n],r=0;if(e)return e.call(t);if(t&&\\\"number\\\"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(n?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")};Object.defineProperty(n,\\\"__esModule\\\",{value:!0}),n.setSessionOptions=void 0;var i=e(899),a=e(444),o=e(263);n.setSessionOptions=function(t){var n,e,u,c,l=(0,o.getInstance)(),f=0,s=[],p=t||{};!function(t){t.extra||(t.extra={}),t.extra.session||(t.extra.session={});var n=t.extra.session;n.use_ort_model_bytes_directly||(n.use_ort_model_bytes_directly=\\\"1\\\"),t.executionProviders&&t.executionProviders.some((function(t){return\\\"webgpu\\\"===(\\\"string\\\"==typeof t?t:t.name)}))&&(t.enableMemPattern=!1)}(p);try{var h=function(t){switch(t){case\\\"disabled\\\":return 0;case\\\"basic\\\":return 1;case\\\"extended\\\":return 2;case\\\"all\\\":return 99;default:throw new Error(\\\"unsupported graph optimization level: \\\".concat(t))}}(null!==(n=p.graphOptimizationLevel)&&void 0!==n?n:\\\"all\\\"),d=function(t){switch(t){case\\\"sequential\\\":return 0;case\\\"parallel\\\":return 1;default:throw new Error(\\\"unsupported execution mode: \\\".concat(t))}}(null!==(e=p.executionMode)&&void 0!==e?e:\\\"sequential\\\"),y=\\\"string\\\"==typeof p.logId?(0,a.allocWasmString)(p.logId,s):0,v=null!==(u=p.logSeverityLevel)&&void 0!==u?u:2;if(!Number.isInteger(v)||v<0||v>4)throw new Error(\\\"log serverity level is not valid: \\\".concat(v));var m=null!==(c=p.logVerbosityLevel)&&void 0!==c?c:0;if(!Number.isInteger(m)||m<0||m>4)throw new Error(\\\"log verbosity level is not valid: \\\".concat(m));var g=\\\"string\\\"==typeof p.optimizedModelFilePath?(0,a.allocWasmString)(p.optimizedModelFilePath,s):0;if(0===(f=l._OrtCreateSessionOptions(h,!!p.enableCpuMemArena,!!p.enableMemPattern,d,!!p.enableProfiling,0,y,v,m,g)))throw new Error(\\\"Can't create session options\\\");return p.executionProviders&&function(t,n,e){var i,u;try{for(var c=r(n),l=c.next();!l.done;l=c.next()){var f=l.value,s=\\\"string\\\"==typeof f?f:f.name;switch(s){case\\\"xnnpack\\\":s=\\\"XNNPACK\\\";break;case\\\"webgpu\\\":s=\\\"JS\\\";break;case\\\"wasm\\\":case\\\"cpu\\\":continue;default:throw new Error(\\\"not supported EP: \\\".concat(s))}var p=(0,a.allocWasmString)(s,e);if(0!==(0,o.getInstance)()._OrtAppendExecutionProvider(t,p))throw new Error(\\\"Can't append execution provider: \\\".concat(s))}}catch(t){i={error:t}}finally{try{l&&!l.done&&(u=c.return)&&u.call(c)}finally{if(i)throw i.error}}}(f,p.executionProviders,s),void 0!==p.extra&&(0,i.iterateExtraOptions)(p.extra,\\\"\\\",new WeakSet,(function(t,n){var e=(0,a.allocWasmString)(t,s),r=(0,a.allocWasmString)(n,s);if(0!==l._OrtAddSessionConfigEntry(f,e,r))throw new Error(\\\"Can't set a session config entry: \\\".concat(t,\\\" - \\\").concat(n))})),[f,s]}catch(t){throw 0!==f&&l._OrtReleaseSessionOptions(f),s.forEach(l._free),t}}},444:function(t,n,e){\\\"use strict\\\";Object.defineProperty(n,\\\"__esModule\\\",{value:!0}),n.allocWasmString=void 0;var r=e(263);n.allocWasmString=function(t,n){var e=(0,r.getInstance)(),i=e.lengthBytesUTF8(t)+1,a=e._malloc(i);return e.stringToUTF8(t,a,i),n.push(a),a}},917:function(t,n){\\\"use strict\\\";Object.defineProperty(n,\\\"__esModule\\\",{value:!0}),n.logLevelStringToEnum=n.tensorTypeToTypedArrayConstructor=n.getTensorElementSize=n.tensorDataTypeEnumToString=n.tensorDataTypeStringToEnum=void 0,n.tensorDataTypeStringToEnum=function(t){switch(t){case\\\"int8\\\":return 3;case\\\"uint8\\\":return 2;case\\\"bool\\\":return 9;case\\\"int16\\\":return 5;case\\\"uint16\\\":return 4;case\\\"int32\\\":return 6;case\\\"uint32\\\":return 12;case\\\"float32\\\":return 1;case\\\"float64\\\":return 11;case\\\"string\\\":return 8;case\\\"int64\\\":return 7;case\\\"uint64\\\":return 13;default:throw new Error(\\\"unsupported data type: \\\".concat(t))}},n.tensorDataTypeEnumToString=function(t){switch(t){case 3:return\\\"int8\\\";case 2:return\\\"uint8\\\";case 9:return\\\"bool\\\";case 5:return\\\"int16\\\";case 4:return\\\"uint16\\\";case 6:return\\\"int32\\\";case 12:return\\\"uint32\\\";case 1:return\\\"float32\\\";case 11:return\\\"float64\\\";case 8:return\\\"string\\\";case 7:return\\\"int64\\\";case 13:return\\\"uint64\\\";default:throw new Error(\\\"unsupported data type: \\\".concat(t))}},n.getTensorElementSize=function(t){return[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][t]},n.tensorTypeToTypedArrayConstructor=function(t){switch(t){case\\\"float32\\\":return Float32Array;case\\\"uint8\\\":case\\\"bool\\\":return Uint8Array;case\\\"int8\\\":return Int8Array;case\\\"uint16\\\":return Uint16Array;case\\\"int16\\\":return Int16Array;case\\\"int32\\\":return Int32Array;case\\\"float64\\\":return Float64Array;case\\\"uint32\\\":return Uint32Array;case\\\"int64\\\":return BigInt64Array;case\\\"uint64\\\":return BigUint64Array;default:throw new Error(\\\"unsupported type: \\\".concat(t))}},n.logLevelStringToEnum=function(t){switch(t){case\\\"verbose\\\":return 0;case\\\"info\\\":return 1;case\\\"warning\\\":return 2;case\\\"error\\\":return 3;case\\\"fatal\\\":return 4;default:throw new Error(\\\"unsupported logging level: \\\".concat(t))}}},259:function(t,n,e){\\\"use strict\\\";var r=this&&this.__awaiter||function(t,n,e,r){return new(e||(e=Promise))((function(i,a){function o(t){try{c(r.next(t))}catch(t){a(t)}}function u(t){try{c(r.throw(t))}catch(t){a(t)}}function c(t){var n;t.done?i(t.value):(n=t.value,n instanceof e?n:new e((function(t){t(n)}))).then(o,u)}c((r=r.apply(t,n||[])).next())}))},i=this&&this.__generator||function(t,n){var e,r,i,a,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:u(0),throw:u(1),return:u(2)},\\\"function\\\"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function u(u){return function(c){return function(u){if(e)throw new TypeError(\\\"Generator is already executing.\\\");for(;a&&(a=0,u[0]&&(o=0)),o;)try{if(e=1,r&&(i=2&u[0]?r.return:u[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,u[1])).done)return i;switch(r=0,i&&(u=[2&u[0],i.value]),u[0]){case 0:case 1:i=u;break;case 4:return o.label++,{value:u[1],done:!1};case 5:o.label++,r=u[1],u=[0];continue;case 7:u=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==u[0]&&2!==u[0])){o=0;continue}if(3===u[0]&&(!i||u[1]>i[0]&&u[1]<i[3])){o.label=u[1];break}if(6===u[0]&&o.label<i[1]){o.label=i[1],i=u;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(u);break}i[2]&&o.ops.pop(),o.trys.pop();continue}u=n.call(t,o)}catch(t){u=[6,t],r=0}finally{e=i=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,c])}}},a=this&&this.__read||function(t,n){var e=\\\"function\\\"==typeof Symbol&&t[Symbol.iterator];if(!e)return t;var r,i,a=e.call(t),o=[];try{for(;(void 0===n||n-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(t){i={error:t}}finally{try{r&&!r.done&&(e=a.return)&&e.call(a)}finally{if(i)throw i.error}}return o},o=this&&this.__values||function(t){var n=\\\"function\\\"==typeof Symbol&&Symbol.iterator,e=n&&t[n],r=0;if(e)return e.call(t);if(t&&\\\"number\\\"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(n?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")};Object.defineProperty(n,\\\"__esModule\\\",{value:!0}),n.extractTransferableBuffers=n.endProfiling=n.run=n.releaseSession=n.createSession=n.createSessionFinalize=n.createSessionAllocate=n.initOrt=void 0;var u=e(918),c=e(622),l=e(444),f=e(917),s=e(263);n.initOrt=function(t,n){var e=(0,s.getInstance)()._OrtInit(t,n);if(0!==e)throw new Error(\\\"Can't initialize onnxruntime. error code = \\\".concat(e))};var p=new Map;n.createSessionAllocate=function(t){var n=(0,s.getInstance)(),e=n._malloc(t.byteLength);return n.HEAPU8.set(t,e),[e,t.byteLength]},n.createSessionFinalize=function(t,n){var e,r=(0,s.getInstance)(),i=0,o=0,u=[];try{if(o=(e=a((0,c.setSessionOptions)(n),2))[0],u=e[1],0===(i=r._OrtCreateSession(t[0],t[1],o)))throw new Error(\\\"Can't create a session\\\")}finally{r._free(t[0]),0!==o&&r._OrtReleaseSessionOptions(o),u.forEach(r._free)}for(var l=r._OrtGetInputCount(i),f=r._OrtGetOutputCount(i),h=[],d=[],y=[],v=[],m=0;m<l;m++){var g=r._OrtGetInputName(i,m);if(0===g)throw new Error(\\\"Can't get an input name\\\");d.push(g),h.push(r.UTF8ToString(g))}for(m=0;m<f;m++){var w=r._OrtGetOutputName(i,m);if(0===w)throw new Error(\\\"Can't get an output name\\\");v.push(w),y.push(r.UTF8ToString(w))}return p.set(i,[i,d,v]),[i,h,y]},n.createSession=function(t,e){var r=(0,n.createSessionAllocate)(t);return(0,n.createSessionFinalize)(r,e)},n.releaseSession=function(t){var n=(0,s.getInstance)(),e=p.get(t);if(!e)throw new Error(\\\"invalid session id\\\");var r=e[0],i=e[1],a=e[2];i.forEach(n._OrtFree),a.forEach(n._OrtFree),n._OrtReleaseSession(r),p.delete(t)},n.run=function(t,n,e,o,c){return r(void 0,void 0,void 0,(function(){var r,h,d,y,v,m,g,w,_,b,j,C,O,S,T,A,E,M,x,R,k,D,P,F,I,U,W,H,Y,L,z,G,B,N,V,q,X,J,Z,Q,$,K,tt,nt,et;return i(this,(function(i){switch(i.label){case 0:if(r=(0,s.getInstance)(),!(h=p.get(t)))throw new Error(\\\"invalid session id\\\");d=h[0],y=h[1],v=h[2],m=n.length,g=o.length,w=0,_=[],b=[],j=[],i.label=1;case 1:for(i.trys.push([1,,7,8]),et=a((0,u.setRunOptions)(c),2),w=et[0],_=et[1],C=function(t){var n=e[t][0],i=e[t][1],a=e[t][2],o=void 0,u=void 0;if(Array.isArray(a)){u=4*a.length,o=r._malloc(u),j.push(o);for(var c=o/4,s=0;s<a.length;s++){if(\\\"string\\\"!=typeof a[s])throw new TypeError(\\\"tensor data at index \\\".concat(s,\\\" is not a string\\\"));r.HEAPU32[c++]=(0,l.allocWasmString)(a[s],j)}}else u=a.byteLength,o=r._malloc(u),j.push(o),r.HEAPU8.set(new Uint8Array(a.buffer,a.byteOffset,u),o);var p=r.stackSave(),h=r.stackAlloc(4*i.length);try{var d=h/4;i.forEach((function(t){return r.HEAP32[d++]=t}));var y=r._OrtCreateTensor((0,f.tensorDataTypeStringToEnum)(n),o,u,h,i.length);if(0===y)throw new Error(\\\"Can't create a tensor\\\");b.push(y)}finally{r.stackRestore(p)}},I=0;I<m;I++)C(I);O=r.stackSave(),S=r.stackAlloc(4*m),T=r.stackAlloc(4*m),A=r.stackAlloc(4*g),E=r.stackAlloc(4*g),i.label=2;case 2:for(i.trys.push([2,,5,6]),M=S/4,x=T/4,R=A/4,k=E/4,I=0;I<m;I++)r.HEAPU32[M++]=b[I],r.HEAPU32[x++]=y[n[I]];for(I=0;I<g;I++)r.HEAPU32[R++]=0,r.HEAPU32[k++]=v[o[I]];return D=r._OrtRun(d,T,S,m,E,g,A,w),(P=r.jsepRunPromise)&&void 0!==P.then?[4,P]:[3,4];case 3:D=i.sent(),i.label=4;case 4:if(F=[],0===D)for(I=0;I<g;I++){U=r.HEAPU32[A/4+I],W=r.stackSave(),H=r.stackAlloc(16),Y=void 0,L=0;try{if(0!==(D=r._OrtGetTensorData(U,H,H+4,H+8,H+12)))throw new Error(\\\"Can't access output tensor data. error code = \\\".concat(D));for(z=H/4,G=r.HEAPU32[z++],L=r.HEAPU32[z++],B=r.HEAPU32[z++],N=r.HEAPU32[z++],V=[],q=0;q<N;q++)V.push(r.HEAPU32[B/4+q]);if(r._OrtFree(B),X=0===V.length?1:V.reduce((function(t,n){return t*n})),\\\"string\\\"===(Y=(0,f.tensorDataTypeEnumToString)(G))){for(J=[],Z=L/4,Q=0;Q<X;Q++)$=r.HEAPU32[Z++],K=Q===X-1?void 0:r.HEAPU32[Z]-$,J.push(r.UTF8ToString($,K));F.push([Y,V,J])}else tt=(0,f.tensorTypeToTypedArrayConstructor)(Y),nt=new tt(X),new Uint8Array(nt.buffer,nt.byteOffset,nt.byteLength).set(r.HEAPU8.subarray(L,L+nt.byteLength)),F.push([Y,V,nt])}finally{r.stackRestore(W),\\\"string\\\"===Y&&L&&r._free(L),r._OrtReleaseTensor(U)}}if(0===D)return[2,F];throw new Error(\\\"failed to call OrtRun(). error code = \\\".concat(D,\\\".\\\"));case 5:return r.stackRestore(O),[7];case 6:return[3,8];case 7:return b.forEach(r._OrtReleaseTensor),j.forEach(r._free),r._OrtReleaseRunOptions(w),_.forEach(r._free),[7];case 8:return[2]}}))}))},n.endProfiling=function(t){var n=(0,s.getInstance)(),e=p.get(t);if(!e)throw new Error(\\\"invalid session id\\\");var r=e[0],i=n._OrtEndProfiling(r);if(0===i)throw new Error(\\\"Can't get an profile file name\\\");n._OrtFree(i)},n.extractTransferableBuffers=function(t){var n,e,r=[];try{for(var i=o(t),a=i.next();!a.done;a=i.next()){var u=a.value[2];!Array.isArray(u)&&u.buffer&&r.push(u.buffer)}}catch(t){n={error:t}}finally{try{a&&!a.done&&(e=i.return)&&e.call(i)}finally{if(n)throw n.error}}return r}},263:function(t,n,e){\\\"use strict\\\";var r=this&&this.__createBinding||(Object.create?function(t,n,e,r){void 0===r&&(r=e);var i=Object.getOwnPropertyDescriptor(n,e);i&&!(\\\"get\\\"in i?!n.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return n[e]}}),Object.defineProperty(t,r,i)}:function(t,n,e,r){void 0===r&&(r=e),t[r]=n[e]}),i=this&&this.__setModuleDefault||(Object.create?function(t,n){Object.defineProperty(t,\\\"default\\\",{enumerable:!0,value:n})}:function(t,n){t.default=n}),a=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var e in t)\\\"default\\\"!==e&&Object.prototype.hasOwnProperty.call(t,e)&&r(n,t,e);return i(n,t),n},o=this&&this.__awaiter||function(t,n,e,r){return new(e||(e=Promise))((function(i,a){function o(t){try{c(r.next(t))}catch(t){a(t)}}function u(t){try{c(r.throw(t))}catch(t){a(t)}}function c(t){var n;t.done?i(t.value):(n=t.value,n instanceof e?n:new e((function(t){t(n)}))).then(o,u)}c((r=r.apply(t,n||[])).next())}))},u=this&&this.__generator||function(t,n){var e,r,i,a,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:u(0),throw:u(1),return:u(2)},\\\"function\\\"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function u(u){return function(c){return function(u){if(e)throw new TypeError(\\\"Generator is already executing.\\\");for(;a&&(a=0,u[0]&&(o=0)),o;)try{if(e=1,r&&(i=2&u[0]?r.return:u[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,u[1])).done)return i;switch(r=0,i&&(u=[2&u[0],i.value]),u[0]){case 0:case 1:i=u;break;case 4:return o.label++,{value:u[1],done:!1};case 5:o.label++,r=u[1],u=[0];continue;case 7:u=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==u[0]&&2!==u[0])){o=0;continue}if(3===u[0]&&(!i||u[1]>i[0]&&u[1]<i[3])){o.label=u[1];break}if(6===u[0]&&o.label<i[1]){o.label=i[1],i=u;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(u);break}i[2]&&o.ops.pop(),o.trys.pop();continue}u=n.call(t,o)}catch(t){u=[6,t],r=0}finally{e=i=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,c])}}};Object.defineProperty(n,\\\"__esModule\\\",{value:!0}),n.dispose=n.getInstance=n.initializeWebAssembly=void 0;var c,l=a(e(449)),f=e(932),s=e(474),p=!1,h=!1,d=!1;n.initializeWebAssembly=function(t){return o(void 0,void 0,void 0,(function(){var n,r,i,a,o,y,v,m,g,w,_;return u(this,(function(u){switch(u.label){case 0:if(p)return[2,Promise.resolve()];if(h)throw new Error(\\\"multiple calls to 'initializeWebAssembly()' detected.\\\");if(d)throw new Error(\\\"previous call to 'initializeWebAssembly()' failed.\\\");return h=!0,n=t.initTimeout,r=t.numThreads,i=t.simd,a=r>1&&function(){try{return\\\"undefined\\\"!=typeof SharedArrayBuffer&&(\\\"undefined\\\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(t){return!1}}(),o=i&&function(){try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch(t){return!1}}(),y=t.wasmPaths,v=\\\"string\\\"==typeof y?y:void 0,m=function(t,n){return n?t?\\\"ort-wasm-simd-threaded.wasm\\\":\\\"ort-wasm-threaded.wasm\\\":t?\\\"ort-wasm-simd.wasm\\\":\\\"ort-wasm.wasm\\\"}(o,a),g=\\\"object\\\"==typeof y?y[m]:void 0,w=!1,_=[],n>0&&_.push(new Promise((function(t){setTimeout((function(){w=!0,t()}),n)}))),_.push(new Promise((function(t,n){var r=a?s:f,i={locateFile:function(t,n){return a&&t.endsWith(\\\".worker.js\\\")&&\\\"undefined\\\"!=typeof Blob?URL.createObjectURL(new Blob([e(154)],{type:\\\"text/javascript\\\"})):t.endsWith(\\\".wasm\\\")?g||(null!=v?v:n)+m:n+t}};if(a)if(\\\"undefined\\\"==typeof Blob)i.mainScriptUrlOrBlob=l.join(\\\"/\\\",\\\"ort-wasm-threaded.js\\\");else{var o=\\\"var ortWasmThreaded=(function(){var _scriptDir;return \\\".concat(r.toString(),\\\"})();\\\");i.mainScriptUrlOrBlob=new Blob([o],{type:\\\"text/javascript\\\"})}r(i).then((function(n){h=!1,p=!0,c=n,t()}),(function(t){h=!1,d=!0,n(t)}))}))),[4,Promise.race(_)];case 1:if(u.sent(),w)throw new Error(\\\"WebAssembly backend initializing failed due to timeout: \\\".concat(n,\\\"ms\\\"));return[2]}}))}))},n.getInstance=function(){if(p&&c)return c;throw new Error(\\\"WebAssembly is not initialized yet.\\\")},n.dispose=function(){var t;!p||h||d||(h=!0,null===(t=c.PThread)||void 0===t||t.terminateAllThreads(),c=void 0,h=!1,p=!1,d=!0)}},474:function(t,n,e){var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(t){function n(){return R.buffer!=D&&N(R.buffer),P}function r(){return R.buffer!=D&&N(R.buffer),F}function i(){return R.buffer!=D&&N(R.buffer),I}function a(){return R.buffer!=D&&N(R.buffer),U}function o(){return R.buffer!=D&&N(R.buffer),W}var u,c,l;t=t||{},u||(u=void 0!==t?t:{}),u.ready=new Promise((function(t,n){c=t,l=n}));var f,s,p,h,d,y,v=Object.assign({},u),m=\\\"./this.program\\\",g=(t,n)=>{throw n},w=\\\"object\\\"==typeof window,_=\\\"function\\\"==typeof importScripts,b=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,j=u.ENVIRONMENT_IS_PTHREAD||!1,C=\\\"\\\";function O(t){return u.locateFile?u.locateFile(t,C):C+t}if(b){let n;C=_?e(908).dirname(C)+\\\"/\\\":\\\"//\\\",y=()=>{d||(h=e(384),d=e(908))},f=function(t,n){return y(),t=d.normalize(t),h.readFileSync(t,n?void 0:\\\"utf8\\\")},p=t=>((t=f(t,!0)).buffer||(t=new Uint8Array(t)),t),s=(t,n,e)=>{y(),t=d.normalize(t),h.readFile(t,(function(t,r){t?e(t):n(r.buffer)}))},1<process.argv.length&&(m=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(t){if(!(t instanceof ot))throw t})),process.on(\\\"unhandledRejection\\\",(function(t){throw t})),g=(t,n)=>{if(x)throw process.exitCode=t,n;n instanceof ot||M(\\\"exiting due to exception: \\\"+n),process.exit(t)},u.inspect=function(){return\\\"[Emscripten Module object]\\\"};try{n=e(925)}catch(t){throw console.error('The \\\"worker_threads\\\" module is not supported in this node.js build - perhaps a newer version is needed?'),t}e.g.Worker=n.Worker}else(w||_)&&(_?C=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(C=document.currentScript.src),_scriptDir&&(C=_scriptDir),C=0!==C.indexOf(\\\"blob:\\\")?C.substr(0,C.replace(/[?#].*/,\\\"\\\").lastIndexOf(\\\"/\\\")+1):\\\"\\\",b||(f=t=>{var n=new XMLHttpRequest;return n.open(\\\"GET\\\",t,!1),n.send(null),n.responseText},_&&(p=t=>{var n=new XMLHttpRequest;return n.open(\\\"GET\\\",t,!1),n.responseType=\\\"arraybuffer\\\",n.send(null),new Uint8Array(n.response)}),s=(t,n,e)=>{var r=new XMLHttpRequest;r.open(\\\"GET\\\",t,!0),r.responseType=\\\"arraybuffer\\\",r.onload=()=>{200==r.status||0==r.status&&r.response?n(r.response):e()},r.onerror=e,r.send(null)}));b&&\\\"undefined\\\"==typeof performance&&(e.g.performance=e(953).performance);var S=console.log.bind(console),T=console.warn.bind(console);b&&(y(),S=t=>h.writeSync(1,t+\\\"\\\\n\\\"),T=t=>h.writeSync(2,t+\\\"\\\\n\\\"));var A,E=u.print||S,M=u.printErr||T;Object.assign(u,v),v=null,u.thisProgram&&(m=u.thisProgram),u.quit&&(g=u.quit),u.wasmBinary&&(A=u.wasmBinary);var x=u.noExitRuntime||!0;\\\"object\\\"!=typeof WebAssembly&&et(\\\"no native wasm support detected\\\");var R,k,D,P,F,I,U,W,H=!1,Y=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function L(t,n,e){var r=(n>>>=0)+e;for(e=n;t[e]&&!(e>=r);)++e;if(16<e-n&&t.buffer&&Y)return Y.decode(t.buffer instanceof SharedArrayBuffer?t.slice(n,e):t.subarray(n,e));for(r=\\\"\\\";n<e;){var i=t[n++];if(128&i){var a=63&t[n++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var o=63&t[n++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&t[n++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function z(t,n){return(t>>>=0)?L(r(),t,n):\\\"\\\"}function G(t,n,e,r){if(!(0<r))return 0;var i=e>>>=0;r=e+r-1;for(var a=0;a<t.length;++a){var o=t.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&t.charCodeAt(++a)),127>=o){if(e>=r)break;n[e++>>>0]=o}else{if(2047>=o){if(e+1>=r)break;n[e++>>>0]=192|o>>6}else{if(65535>=o){if(e+2>=r)break;n[e++>>>0]=224|o>>12}else{if(e+3>=r)break;n[e++>>>0]=240|o>>18,n[e++>>>0]=128|o>>12&63}n[e++>>>0]=128|o>>6&63}n[e++>>>0]=128|63&o}}return n[e>>>0]=0,e-i}function B(t){for(var n=0,e=0;e<t.length;++e){var r=t.charCodeAt(e);127>=r?n++:2047>=r?n+=2:55296<=r&&57343>=r?(n+=4,++e):n+=3}return n}function N(t){D=t,u.HEAP8=P=new Int8Array(t),u.HEAP16=new Int16Array(t),u.HEAP32=I=new Int32Array(t),u.HEAPU8=F=new Uint8Array(t),u.HEAPU16=new Uint16Array(t),u.HEAPU32=U=new Uint32Array(t),u.HEAPF32=new Float32Array(t),u.HEAPF64=W=new Float64Array(t)}j&&(D=u.buffer);var V=u.INITIAL_MEMORY||16777216;if(j)R=u.wasmMemory,D=u.buffer;else if(u.wasmMemory)R=u.wasmMemory;else if(!((R=new WebAssembly.Memory({initial:V/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw M(\\\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\\\"),b&&console.log(\\\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\\\"),Error(\\\"bad memory\\\");R&&(D=R.buffer),V=D.byteLength,N(D);var q,X=[],J=[],Z=[];function Q(){var t=u.preRun.shift();X.unshift(t)}var $,K=0,tt=null,nt=null;function et(t){throw j?postMessage({cmd:\\\"onAbort\\\",arg:t}):u.onAbort&&u.onAbort(t),M(t=\\\"Aborted(\\\"+t+\\\")\\\"),H=!0,t=new WebAssembly.RuntimeError(t+\\\". Build with -sASSERTIONS for more info.\\\"),l(t),t}function rt(){return $.startsWith(\\\"data:application/octet-stream;base64,\\\")}function it(){var t=$;try{if(t==$&&A)return new Uint8Array(A);if(p)return p(t);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(t){et(t)}}$=\\\"ort-wasm-threaded.wasm\\\",rt()||($=O($));var at={};function ot(t){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+t+\\\")\\\",this.status=t}function ut(t){(t=st.Yc[t])||et(),st.pd(t)}function ct(t){var n=st.Ed();if(!n)return 6;st.gd.push(n),st.Yc[t.Xc]=n,n.Xc=t.Xc;var e={cmd:\\\"run\\\",start_routine:t.Kd,arg:t.yd,pthread_ptr:t.Xc};return n.ed=()=>{e.time=performance.now(),n.postMessage(e,t.Qd)},n.loaded&&(n.ed(),delete n.ed),0}function lt(t){if(j)return Bt(1,1,t);x||(st.Ld(),u.onExit&&u.onExit(t),H=!0),g(t,new ot(t))}function ft(t,n){if(!n&&j)throw ht(t),\\\"unwind\\\";lt(t)}var st={ad:[],gd:[],sd:[],Yc:{},kd:function(){j&&st.Gd()},Sd:function(){},Gd:function(){st.receiveObjectTransfer=st.Id,st.threadInitTLS=st.rd,st.setExitStatus=st.qd,x=!1},qd:function(){},Ld:function(){for(var t of Object.values(st.Yc))st.pd(t);for(t of st.ad)t.terminate();st.ad=[]},pd:function(t){var n=t.Xc;delete st.Yc[n],st.ad.push(t),st.gd.splice(st.gd.indexOf(t),1),t.Xc=0,mn(n)},Id:function(){},rd:function(){st.sd.forEach((t=>t()))},Hd:function(t,n){t.onmessage=e=>{var r=(e=e.data).cmd;if(t.Xc&&(st.Cd=t.Xc),e.targetThread&&e.targetThread!=fn()){var i=st.Yc[e.Td];i?i.postMessage(e,e.transferList):M('Internal error! Worker sent a message \\\"'+r+'\\\" to target pthread '+e.targetThread+\\\", but that thread no longer exists!\\\")}else\\\"processProxyingQueue\\\"===r?Wt(e.queue):\\\"spawnThread\\\"===r?ct(e):\\\"cleanupThread\\\"===r?ut(e.thread):\\\"killThread\\\"===r?(e=e.thread,r=st.Yc[e],delete st.Yc[e],r.terminate(),mn(e),st.gd.splice(st.gd.indexOf(r),1),r.Xc=0):\\\"cancelThread\\\"===r?st.Yc[e.thread].postMessage({cmd:\\\"cancel\\\"}):\\\"loaded\\\"===r?(t.loaded=!0,n&&n(t),t.ed&&(t.ed(),delete t.ed)):\\\"print\\\"===r?E(\\\"Thread \\\"+e.threadId+\\\": \\\"+e.text):\\\"printErr\\\"===r?M(\\\"Thread \\\"+e.threadId+\\\": \\\"+e.text):\\\"alert\\\"===r?alert(\\\"Thread \\\"+e.threadId+\\\": \\\"+e.text):\\\"setimmediate\\\"===e.target?t.postMessage(e):\\\"onAbort\\\"===r?u.onAbort&&u.onAbort(e.arg):r&&M(\\\"worker sent an unknown command \\\"+r);st.Cd=void 0},t.onerror=t=>{throw M(\\\"worker sent an error! \\\"+t.filename+\\\":\\\"+t.lineno+\\\": \\\"+t.message),t},b&&(t.on(\\\"message\\\",(function(n){t.onmessage({data:n})})),t.on(\\\"error\\\",(function(n){t.onerror(n)})),t.on(\\\"detachedExit\\\",(function(){}))),t.postMessage({cmd:\\\"load\\\",urlOrBlob:u.mainScriptUrlOrBlob||_scriptDir,wasmMemory:R,wasmModule:k})},xd:function(){var t=O(\\\"ort-wasm-threaded.worker.js\\\");st.ad.push(new Worker(t))},Ed:function(){return 0==st.ad.length&&(st.xd(),st.Hd(st.ad[0])),st.ad.pop()}};function pt(t){for(;0<t.length;)t.shift()(u)}function ht(t){if(j)return Bt(2,0,t);try{ft(t)}catch(t){t instanceof ot||\\\"unwind\\\"==t||g(1,t)}}u.PThread=st,u.establishStackSpace=function(){var t=fn(),n=i()[t+44>>2>>>0];t=i()[t+48>>2>>>0],_n(n,n-t),jn(n)};var dt=[];function yt(t){var n=dt[t];return n||(t>=dt.length&&(dt.length=t+1),dt[t]=n=q.get(t)),n}u.invokeEntryPoint=function(t,n){t=yt(t)(n),x?st.qd(t):gn(t)};var vt,mt,gt=[],wt=0,_t=0;function bt(t){this.dd=t,this.Vc=t-24,this.Dd=function(t){a()[this.Vc+4>>2>>>0]=t},this.bd=function(){return a()[this.Vc+4>>2>>>0]},this.zd=function(t){a()[this.Vc+8>>2>>>0]=t},this.Fd=function(){return a()[this.Vc+8>>2>>>0]},this.Bd=function(){i()[this.Vc>>2>>>0]=0},this.ld=function(t){t=t?1:0,n()[this.Vc+12>>0>>>0]=t},this.td=function(){return 0!=n()[this.Vc+12>>0>>>0]},this.md=function(t){t=t?1:0,n()[this.Vc+13>>0>>>0]=t},this.od=function(){return 0!=n()[this.Vc+13>>0>>>0]},this.kd=function(t,n){this.cd(0),this.Dd(t),this.zd(n),this.Bd(),this.ld(!1),this.md(!1)},this.ud=function(){Atomics.add(i(),this.Vc>>2,1)},this.Jd=function(){return 1===Atomics.sub(i(),this.Vc>>2,1)},this.cd=function(t){a()[this.Vc+16>>2>>>0]=t},this.vd=function(){return a()[this.Vc+16>>2>>>0]},this.wd=function(){if(Sn(this.bd()))return a()[this.dd>>2>>>0];var t=this.vd();return 0!==t?t:this.dd}}function jt(t){return pn(new bt(t).Vc)}function Ct(t,n,e,r){return j?Bt(3,1,t,n,e,r):Ot(t,n,e,r)}function Ot(t,n,e,r){if(\\\"undefined\\\"==typeof SharedArrayBuffer)return M(\\\"Current environment does not support SharedArrayBuffer, pthreads are not available!\\\"),6;var i=[];return j&&0===i.length?Ct(t,n,e,r):(t={Kd:e,Xc:t,yd:r,Qd:i},j?(t.Rd=\\\"spawnThread\\\",postMessage(t,i),0):ct(t))}function St(t,n,e){return j?Bt(4,1,t,n,e):0}function Tt(t,n){if(j)return Bt(5,1,t,n)}function At(t,n){if(j)return Bt(6,1,t,n)}function Et(t,n,e){if(j)return Bt(7,1,t,n,e)}function Mt(t,n,e){return j?Bt(8,1,t,n,e):0}function xt(t,n){if(j)return Bt(9,1,t,n)}function Rt(t,n,e){if(j)return Bt(10,1,t,n,e)}function kt(t,n,e,r){if(j)return Bt(11,1,t,n,e,r)}function Dt(t,n,e,r){if(j)return Bt(12,1,t,n,e,r)}function Pt(t,n,e,r){if(j)return Bt(13,1,t,n,e,r)}function Ft(t){if(j)return Bt(14,1,t)}function It(t,n){if(j)return Bt(15,1,t,n)}function Ut(t,n,e){if(j)return Bt(16,1,t,n,e)}function Wt(t){Atomics.store(i(),t>>2,1),fn()&&vn(t),Atomics.compareExchange(i(),t>>2,1,0)}function Ht(t){return a()[t>>>2]+4294967296*i()[t+4>>>2]}function Yt(t,n,e,r,i,a){return j?Bt(17,1,t,n,e,r,i,a):-52}function Lt(t,n,e,r,i,a){if(j)return Bt(18,1,t,n,e,r,i,a)}function zt(t){var e=B(t)+1,r=sn(e);return r&&G(t,n(),r,e),r}function Gt(t,n,e){function r(t){return(t=t.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?t[1]:\\\"GMT\\\"}if(j)return Bt(19,1,t,n,e);var o=(new Date).getFullYear(),u=new Date(o,0,1),c=new Date(o,6,1);o=u.getTimezoneOffset();var l=c.getTimezoneOffset(),f=Math.max(o,l);i()[t>>2>>>0]=60*f,i()[n>>2>>>0]=Number(o!=l),t=r(u),n=r(c),t=zt(t),n=zt(n),l<o?(a()[e>>2>>>0]=t,a()[e+4>>2>>>0]=n):(a()[e>>2>>>0]=n,a()[e+4>>2>>>0]=t)}function Bt(t,n){var e=arguments.length-2,r=arguments;return function(t){var n=bn();return t=t(),jn(n),t}((()=>{for(var i=Cn(8*e),a=i>>3,u=0;u<e;u++){var c=r[2+u];o()[a+u>>>0]=c}return yn(t,e,i,n)}))}u.executeNotifiedProxyingQueue=Wt,mt=b?()=>{var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:j?()=>performance.now()-u.__performance_now_clock_drift:()=>performance.now();var Nt,Vt=[],qt={};function Xt(){if(!Nt){var t,n={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:m||\\\"./this.program\\\"};for(t in qt)void 0===qt[t]?delete n[t]:n[t]=qt[t];var e=[];for(t in n)e.push(t+\\\"=\\\"+n[t]);Nt=e}return Nt}function Jt(t,e){if(j)return Bt(20,1,t,e);var r=0;return Xt().forEach((function(i,o){var u=e+r;for(o=a()[t+4*o>>2>>>0]=u,u=0;u<i.length;++u)n()[o++>>0>>>0]=i.charCodeAt(u);n()[o>>0>>>0]=0,r+=i.length+1})),0}function Zt(t,n){if(j)return Bt(21,1,t,n);var e=Xt();a()[t>>2>>>0]=e.length;var r=0;return e.forEach((function(t){r+=t.length+1})),a()[n>>2>>>0]=r,0}function Qt(t){return j?Bt(22,1,t):52}function $t(t,n,e,r){return j?Bt(23,1,t,n,e,r):52}function Kt(t,n,e,r,i){return j?Bt(24,1,t,n,e,r,i):70}var tn=[null,[],[]];function nn(t,n,e,i){if(j)return Bt(25,1,t,n,e,i);for(var o=0,u=0;u<e;u++){var c=a()[n>>2>>>0],l=a()[n+4>>2>>>0];n+=8;for(var f=0;f<l;f++){var s=r()[c+f>>>0],p=tn[t];0===s||10===s?((1===t?E:M)(L(p,0)),p.length=0):p.push(s)}o+=l}return a()[i>>2>>>0]=o,0}var en=0;function rn(t){return 0==t%4&&(0!=t%100||0==t%400)}var an=[31,29,31,30,31,30,31,31,30,31,30,31],on=[31,28,31,30,31,30,31,31,30,31,30,31];function un(t,e,r,a){function o(t,n,e){for(t=\\\"number\\\"==typeof t?t.toString():t||\\\"\\\";t.length<n;)t=e[0]+t;return t}function u(t,n){return o(t,n,\\\"0\\\")}function c(t,n){function e(t){return 0>t?-1:0<t?1:0}var r;return 0===(r=e(t.getFullYear()-n.getFullYear()))&&0===(r=e(t.getMonth()-n.getMonth()))&&(r=e(t.getDate()-n.getDate())),r}function l(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function f(t){var n=t.Zc;for(t=new Date(new Date(t.$c+1900,0,1).getTime());0<n;){var e=t.getMonth(),r=(rn(t.getFullYear())?an:on)[e];if(!(n>r-t.getDate())){t.setDate(t.getDate()+n);break}n-=r-t.getDate()+1,t.setDate(1),11>e?t.setMonth(e+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return e=new Date(t.getFullYear()+1,0,4),n=l(new Date(t.getFullYear(),0,4)),e=l(e),0>=c(n,t)?0>=c(e,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var s=i()[a+40>>2>>>0];for(var p in a={Od:i()[a>>2>>>0],Nd:i()[a+4>>2>>>0],hd:i()[a+8>>2>>>0],nd:i()[a+12>>2>>>0],jd:i()[a+16>>2>>>0],$c:i()[a+20>>2>>>0],Wc:i()[a+24>>2>>>0],Zc:i()[a+28>>2>>>0],Ud:i()[a+32>>2>>>0],Md:i()[a+36>>2>>>0],Pd:s?z(s):\\\"\\\"},r=z(r),s={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})r=r.replace(new RegExp(p,\\\"g\\\"),s[p]);var h=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),d=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(p in s={\\\"%a\\\":function(t){return h[t.Wc].substring(0,3)},\\\"%A\\\":function(t){return h[t.Wc]},\\\"%b\\\":function(t){return d[t.jd].substring(0,3)},\\\"%B\\\":function(t){return d[t.jd]},\\\"%C\\\":function(t){return u((t.$c+1900)/100|0,2)},\\\"%d\\\":function(t){return u(t.nd,2)},\\\"%e\\\":function(t){return o(t.nd,2,\\\" \\\")},\\\"%g\\\":function(t){return f(t).toString().substring(2)},\\\"%G\\\":function(t){return f(t)},\\\"%H\\\":function(t){return u(t.hd,2)},\\\"%I\\\":function(t){return 0==(t=t.hd)?t=12:12<t&&(t-=12),u(t,2)},\\\"%j\\\":function(t){for(var n=0,e=0;e<=t.jd-1;n+=(rn(t.$c+1900)?an:on)[e++]);return u(t.nd+n,3)},\\\"%m\\\":function(t){return u(t.jd+1,2)},\\\"%M\\\":function(t){return u(t.Nd,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(t){return 0<=t.hd&&12>t.hd?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(t){return u(t.Od,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(t){return t.Wc||7},\\\"%U\\\":function(t){return u(Math.floor((t.Zc+7-t.Wc)/7),2)},\\\"%V\\\":function(t){var n=Math.floor((t.Zc+7-(t.Wc+6)%7)/7);if(2>=(t.Wc+371-t.Zc-2)%7&&n++,n)53==n&&(4==(e=(t.Wc+371-t.Zc)%7)||3==e&&rn(t.$c)||(n=1));else{n=52;var e=(t.Wc+7-t.Zc-1)%7;(4==e||5==e&&rn(t.$c%400-1))&&n++}return u(n,2)},\\\"%w\\\":function(t){return t.Wc},\\\"%W\\\":function(t){return u(Math.floor((t.Zc+7-(t.Wc+6)%7)/7),2)},\\\"%y\\\":function(t){return(t.$c+1900).toString().substring(2)},\\\"%Y\\\":function(t){return t.$c+1900},\\\"%z\\\":function(t){var n=0<=(t=t.Md);return t=Math.abs(t)/60,(n?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(t/60*100+t%60)).slice(-4)},\\\"%Z\\\":function(t){return t.Pd},\\\"%%\\\":function(){return\\\"%\\\"}},r=r.replace(/%%/g,\\\"\\\\0\\\\0\\\"),s)r.includes(p)&&(r=r.replace(new RegExp(p,\\\"g\\\"),s[p](a)));return p=function(t){var n=Array(B(t)+1);return G(t,n,0,n.length),n}(r=r.replace(/\\\\0\\\\0/g,\\\"%\\\")),p.length>e?0:(function(t,e){n().set(t,e>>>0)}(p,t),p.length-1)}st.kd();var cn=[null,lt,ht,Ct,St,Tt,At,Et,Mt,xt,Rt,kt,Dt,Pt,Ft,It,Ut,Yt,Lt,Gt,Jt,Zt,Qt,$t,Kt,nn],ln={k:function(t){return sn(t+24)+24},r:function(t){return(t=new bt(t)).td()||(t.ld(!0),wt--),t.md(!1),gt.push(t),t.ud(),t.wd()},ja:function(t){throw M(\\\"Unexpected exception thrown, this is not properly supported - aborting\\\"),H=!0,t},C:function(){wn(0);var t=gt.pop();if(t.Jd()&&!t.od()){var n=t.Fd();n&&yt(n)(t.dd),jt(t.dd)}_t=0},c:function(){var t=_t;if(!t)return en=0;var n=new bt(t);n.cd(t);var e=n.bd();if(!e)return en=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(On(a,e,n.Vc+16))return en=a,t}return en=e,t},m:function(){var t=_t;if(!t)return en=0;var n=new bt(t);n.cd(t);var e=n.bd();if(!e)return en=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(On(a,e,n.Vc+16))return en=a,t}return en=e,t},v:function(){var t=_t;if(!t)return en=0;var n=new bt(t);n.cd(t);var e=n.bd();if(!e)return en=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(On(a,e,n.Vc+16))return en=a,t}return en=e,t},o:function(){var t=_t;if(!t)return en=0;var n=new bt(t);n.cd(t);var e=n.bd();if(!e)return en=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(On(a,e,n.Vc+16))return en=a,t}return en=e,t},n:jt,U:function(){var t=gt.pop();t||et(\\\"no exception to throw\\\");var n=t.dd;throw t.od()||(gt.push(t),t.md(!0),t.ld(!1),wt++),_t=n,n},w:function(t,n,e){throw new bt(t).kd(n,e),_t=t,wt++,t},ma:function(){return wt},Ga:function(t){hn(t,!_,1,!w),st.rd()},aa:function(t){j?postMessage({cmd:\\\"cleanupThread\\\",thread:t}):ut(t)},xa:Ot,g:function(t){throw _t||(_t=t),t},V:St,Ma:Tt,ta:At,va:Et,la:Mt,Ka:xt,Da:Rt,Ja:kt,ca:Dt,ua:Pt,ra:Ft,La:It,sa:Ut,qb:function(){},X:function(){et(\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Bb:function(){et(\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},da:function(){return Date.now()},ya:function(){return 2097152},Oa:function(){return!0},za:function(t,n,e,r){if(t==n)setTimeout((()=>Wt(r)));else if(j)postMessage({targetThread:t,cmd:\\\"processProxyingQueue\\\",queue:r});else{if(!(t=st.Yc[t]))return;t.postMessage({cmd:\\\"processProxyingQueue\\\",queue:r})}return 1},Fa:function(){return-1},Pa:function(t,n){t=new Date(1e3*Ht(t)),i()[n>>2>>>0]=t.getUTCSeconds(),i()[n+4>>2>>>0]=t.getUTCMinutes(),i()[n+8>>2>>>0]=t.getUTCHours(),i()[n+12>>2>>>0]=t.getUTCDate(),i()[n+16>>2>>>0]=t.getUTCMonth(),i()[n+20>>2>>>0]=t.getUTCFullYear()-1900,i()[n+24>>2>>>0]=t.getUTCDay(),t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,i()[n+28>>2>>>0]=t},Qa:function(t,n){t=new Date(1e3*Ht(t)),i()[n>>2>>>0]=t.getSeconds(),i()[n+4>>2>>>0]=t.getMinutes(),i()[n+8>>2>>>0]=t.getHours(),i()[n+12>>2>>>0]=t.getDate(),i()[n+16>>2>>>0]=t.getMonth(),i()[n+20>>2>>>0]=t.getFullYear()-1900,i()[n+24>>2>>>0]=t.getDay();var e=new Date(t.getFullYear(),0,1),r=(t.getTime()-e.getTime())/864e5|0;i()[n+28>>2>>>0]=r,i()[n+36>>2>>>0]=-60*t.getTimezoneOffset(),r=new Date(t.getFullYear(),6,1).getTimezoneOffset(),t=0|(r!=(e=e.getTimezoneOffset())&&t.getTimezoneOffset()==Math.min(e,r)),i()[n+32>>2>>>0]=t},Ra:function(t){var n=new Date(i()[t+20>>2>>>0]+1900,i()[t+16>>2>>>0],i()[t+12>>2>>>0],i()[t+8>>2>>>0],i()[t+4>>2>>>0],i()[t>>2>>>0],0),e=i()[t+32>>2>>>0],r=n.getTimezoneOffset(),a=new Date(n.getFullYear(),0,1),o=new Date(n.getFullYear(),6,1).getTimezoneOffset(),u=a.getTimezoneOffset(),c=Math.min(u,o);return 0>e?i()[t+32>>2>>>0]=Number(o!=u&&c==r):0<e!=(c==r)&&(o=Math.max(u,o),n.setTime(n.getTime()+6e4*((0<e?c:o)-r))),i()[t+24>>2>>>0]=n.getDay(),e=(n.getTime()-a.getTime())/864e5|0,i()[t+28>>2>>>0]=e,i()[t>>2>>>0]=n.getSeconds(),i()[t+4>>2>>>0]=n.getMinutes(),i()[t+8>>2>>>0]=n.getHours(),i()[t+12>>2>>>0]=n.getDate(),i()[t+16>>2>>>0]=n.getMonth(),n.getTime()/1e3|0},Ba:Yt,Ca:Lt,Xa:function t(n,e,r){t.Ad||(t.Ad=!0,Gt(n,e,r))},R:function(){et(\\\"\\\")},ba:function(){if(!b&&!_){var t=\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\";vt||(vt={}),vt[t]||(vt[t]=1,b&&(t=\\\"warning: \\\"+t),M(t))}},oa:function(){return 4294901760},F:mt,Aa:function(t,n,e){r().copyWithin(t>>>0,n>>>0,n+e>>>0)},pa:function(){return b?e(993).cpus().length:navigator.hardwareConcurrency},Ea:function(t,n,e){Vt.length=n,e>>=3;for(var r=0;r<n;r++)Vt[r]=o()[e+r>>>0];return(0>t?at[-t-1]:cn[t]).apply(null,Vt)},na:function(t){var n=r().length;if((t>>>=0)<=n||4294901760<t)return!1;for(var e=1;4>=e;e*=2){var i=n*(1+.2/e);i=Math.min(i,t+100663296);var a=Math;i=Math.max(t,i),a=a.min.call(a,4294901760,i+(65536-i%65536)%65536);t:{try{R.grow(a-D.byteLength+65535>>>16),N(R.buffer);var o=1;break t}catch(t){}o=void 0}if(o)return!0}return!1},Na:function(){throw\\\"unwind\\\"},Ha:Jt,Ia:Zt,wa:ft,T:Qt,$:$t,Ab:Kt,qa:nn,b:function(){return en},ea:function(t,n,e){var r=bn();try{return yt(t)(n,e)}catch(t){if(jn(r),t!==t+0)throw t;wn(1,0)}},E:function(t,n,e,r,i,a,o){var u=bn();try{return yt(t)(n,e,r,i,a,o)}catch(t){if(jn(u),t!==t+0)throw t;wn(1,0)}},y:function(t){var n=bn();try{return yt(t)()}catch(t){if(jn(n),t!==t+0)throw t;wn(1,0)}},d:function(t,n){var e=bn();try{return yt(t)(n)}catch(t){if(jn(e),t!==t+0)throw t;wn(1,0)}},W:function(t,n,e){var r=bn();try{return yt(t)(n,e)}catch(t){if(jn(r),t!==t+0)throw t;wn(1,0)}},S:function(t,n,e){var r=bn();try{return yt(t)(n,e)}catch(t){if(jn(r),t!==t+0)throw t;wn(1,0)}},l:function(t,n,e){var r=bn();try{return yt(t)(n,e)}catch(t){if(jn(r),t!==t+0)throw t;wn(1,0)}},h:function(t,n,e,r){var i=bn();try{return yt(t)(n,e,r)}catch(t){if(jn(i),t!==t+0)throw t;wn(1,0)}},j:function(t,n,e,r,i){var a=bn();try{return yt(t)(n,e,r,i)}catch(t){if(jn(a),t!==t+0)throw t;wn(1,0)}},p:function(t,n,e,r,i,a){var o=bn();try{return yt(t)(n,e,r,i,a)}catch(t){if(jn(o),t!==t+0)throw t;wn(1,0)}},z:function(t,n,e,r,i,a,o){var u=bn();try{return yt(t)(n,e,r,i,a,o)}catch(t){if(jn(u),t!==t+0)throw t;wn(1,0)}},M:function(t,n,e,r,i,a,o,u){var c=bn();try{return yt(t)(n,e,r,i,a,o,u)}catch(t){if(jn(c),t!==t+0)throw t;wn(1,0)}},_:function(t,n,e,r,i,a,o,u,c,l,f){var s=bn();try{return yt(t)(n,e,r,i,a,o,u,c,l,f)}catch(t){if(jn(s),t!==t+0)throw t;wn(1,0)}},O:function(t,n,e,r,i,a,o,u,c,l,f,s){var p=bn();try{return yt(t)(n,e,r,i,a,o,u,c,l,f,s)}catch(t){if(jn(p),t!==t+0)throw t;wn(1,0)}},wb:function(t,n,e,r,i,a,o){var u=bn();try{return En(t,n,e,r,i,a,o)}catch(t){if(jn(u),t!==t+0)throw t;wn(1,0)}},kb:function(t,n,e,r,i,a,o,u,c,l){var f=bn();try{return Yn(t,n,e,r,i,a,o,u,c,l)}catch(t){if(jn(f),t!==t+0)throw t;wn(1,0)}},Sa:function(t,n,e,r,i){var a=bn();try{return ne(t,n,e,r,i)}catch(t){if(jn(a),t!==t+0)throw t;wn(1,0)}},jb:function(t,n,e,r,i,a,o,u,c){var l=bn();try{return Ln(t,n,e,r,i,a,o,u,c)}catch(t){if(jn(l),t!==t+0)throw t;wn(1,0)}},zb:function(t,n,e,r){var i=bn();try{return An(t,n,e,r)}catch(t){if(jn(i),t!==t+0)throw t;wn(1,0)}},Ta:function(t){var n=bn();try{return Tn(t)}catch(t){if(jn(n),t!==t+0)throw t;wn(1,0)}},Za:function(t,n,e){var r=bn();try{return ie(t,n,e)}catch(t){if(jn(r),t!==t+0)throw t;wn(1,0)}},ub:function(t,n){var e=bn();try{return Dn(t,n)}catch(t){if(jn(e),t!==t+0)throw t;wn(1,0)}},tb:function(t,n,e){var r=bn();try{return xn(t,n,e)}catch(t){if(jn(r),t!==t+0)throw t;wn(1,0)}},ib:function(t,n,e,r){var i=bn();try{return zn(t,n,e,r)}catch(t){if(jn(i),t!==t+0)throw t;wn(1,0)}},lb:function(t,n,e,r,i){var a=bn();try{return Hn(t,n,e,r,i)}catch(t){if(jn(a),t!==t+0)throw t;wn(1,0)}},e:function(t){var n=bn();try{yt(t)()}catch(t){if(jn(n),t!==t+0)throw t;wn(1,0)}},u:function(t,n){var e=bn();try{yt(t)(n)}catch(t){if(jn(e),t!==t+0)throw t;wn(1,0)}},i:function(t,n,e){var r=bn();try{yt(t)(n,e)}catch(t){if(jn(r),t!==t+0)throw t;wn(1,0)}},G:function(t,n,e,r,i){var a=bn();try{yt(t)(n,e,r,i)}catch(t){if(jn(a),t!==t+0)throw t;wn(1,0)}},f:function(t,n,e,r){var i=bn();try{yt(t)(n,e,r)}catch(t){if(jn(i),t!==t+0)throw t;wn(1,0)}},Z:function(t,n,e,r,i){var a=bn();try{yt(t)(n,e,r,i)}catch(t){if(jn(a),t!==t+0)throw t;wn(1,0)}},s:function(t,n,e,r,i){var a=bn();try{yt(t)(n,e,r,i)}catch(t){if(jn(a),t!==t+0)throw t;wn(1,0)}},q:function(t,n,e,r,i,a){var o=bn();try{yt(t)(n,e,r,i,a)}catch(t){if(jn(o),t!==t+0)throw t;wn(1,0)}},x:function(t,n,e,r,i,a,o){var u=bn();try{yt(t)(n,e,r,i,a,o)}catch(t){if(jn(u),t!==t+0)throw t;wn(1,0)}},I:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y){var v=bn();try{yt(t)(n,e,r,i,a,o,u,c,l,f,s,p,h,d,y)}catch(t){if(jn(v),t!==t+0)throw t;wn(1,0)}},P:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v){var m=bn();try{yt(t)(n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v)}catch(t){if(jn(m),t!==t+0)throw t;wn(1,0)}},H:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d){var y=bn();try{yt(t)(n,e,r,i,a,o,u,c,l,f,s,p,h,d)}catch(t){if(jn(y),t!==t+0)throw t;wn(1,0)}},A:function(t,n,e,r,i,a,o,u){var c=bn();try{yt(t)(n,e,r,i,a,o,u)}catch(t){if(jn(c),t!==t+0)throw t;wn(1,0)}},D:function(t,n,e,r,i,a,o,u,c){var l=bn();try{yt(t)(n,e,r,i,a,o,u,c)}catch(t){if(jn(l),t!==t+0)throw t;wn(1,0)}},J:function(t,n,e,r,i,a,o,u,c,l){var f=bn();try{yt(t)(n,e,r,i,a,o,u,c,l)}catch(t){if(jn(f),t!==t+0)throw t;wn(1,0)}},Y:function(t,n,e,r,i,a,o,u,c,l,f,s){var p=bn();try{yt(t)(n,e,r,i,a,o,u,c,l,f,s)}catch(t){if(jn(p),t!==t+0)throw t;wn(1,0)}},fa:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h){var d=bn();try{yt(t)(n,e,r,i,a,o,u,c,l,f,s,p,h)}catch(t){if(jn(d),t!==t+0)throw t;wn(1,0)}},L:function(t,n,e,r,i,a,o,u,c,l,f){var s=bn();try{yt(t)(n,e,r,i,a,o,u,c,l,f)}catch(t){if(jn(s),t!==t+0)throw t;wn(1,0)}},ga:function(t,n,e,r,i,a,o,u,c,l,f,s){var p=bn();try{yt(t)(n,e,r,i,a,o,u,c,l,f,s)}catch(t){if(jn(p),t!==t+0)throw t;wn(1,0)}},B:function(t,n,e,r,i,a,o,u,c,l,f,s,p){var h=bn();try{yt(t)(n,e,r,i,a,o,u,c,l,f,s,p)}catch(t){if(jn(h),t!==t+0)throw t;wn(1,0)}},Q:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h){var d=bn();try{yt(t)(n,e,r,i,a,o,u,c,l,f,s,p,h)}catch(t){if(jn(d),t!==t+0)throw t;wn(1,0)}},ha:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v){var m=bn();try{yt(t)(n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v)}catch(t){if(jn(m),t!==t+0)throw t;wn(1,0)}},N:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y){var v=bn();try{yt(t)(n,e,r,i,a,o,u,c,l,f,s,p,h,d,y)}catch(t){if(jn(v),t!==t+0)throw t;wn(1,0)}},mb:function(t,n,e,r,i,a,o,u,c,l,f,s,p){var h=bn();try{Wn(t,n,e,r,i,a,o,u,c,l,f,s,p)}catch(t){if(jn(h),t!==t+0)throw t;wn(1,0)}},vb:function(t,n,e,r,i,a,o){var u=bn();try{kn(t,n,e,r,i,a,o)}catch(t){if(jn(u),t!==t+0)throw t;wn(1,0)}},nb:function(t,n,e,r,i,a){var o=bn();try{Un(t,n,e,r,i,a)}catch(t){if(jn(o),t!==t+0)throw t;wn(1,0)}},pb:function(t,n,e,r,i,a,o){var u=bn();try{Fn(t,n,e,r,i,a,o)}catch(t){if(jn(u),t!==t+0)throw t;wn(1,0)}},xb:function(t,n,e,r,i,a,o,u){var c=bn();try{ee(t,n,e,r,i,a,o,u)}catch(t){if(jn(c),t!==t+0)throw t;wn(1,0)}},Ya:function(t,n,e,r,i,a,o,u,c,l){var f=bn();try{Kn(t,n,e,r,i,a,o,u,c,l)}catch(t){if(jn(f),t!==t+0)throw t;wn(1,0)}},Wa:function(t,n,e,r,i,a,o,u,c,l,f,s){var p=bn();try{te(t,n,e,r,i,a,o,u,c,l,f,s)}catch(t){if(jn(p),t!==t+0)throw t;wn(1,0)}},rb:function(t,n,e,r,i,a){var o=bn();try{Rn(t,n,e,r,i,a)}catch(t){if(jn(o),t!==t+0)throw t;wn(1,0)}},Ua:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h){var d=bn();try{re(t,n,e,r,i,a,o,u,c,l,f,s,p,h)}catch(t){if(jn(d),t!==t+0)throw t;wn(1,0)}},sb:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h){var d=bn();try{Pn(t,n,e,r,i,a,o,u,c,l,f,s,p,h)}catch(t){if(jn(d),t!==t+0)throw t;wn(1,0)}},yb:function(t,n,e,r){var i=bn();try{Mn(t,n,e,r)}catch(t){if(jn(i),t!==t+0)throw t;wn(1,0)}},Va:function(t,n,e,r,i){var a=bn();try{ae(t,n,e,r,i)}catch(t){if(jn(a),t!==t+0)throw t;wn(1,0)}},ob:function(t,n,e,r,i,a,o){var u=bn();try{In(t,n,e,r,i,a,o)}catch(t){if(jn(u),t!==t+0)throw t;wn(1,0)}},bb:function(t,n,e,r,i,a,o,u,c,l,f,s){var p=bn();try{Jn(t,n,e,r,i,a,o,u,c,l,f,s)}catch(t){if(jn(p),t!==t+0)throw t;wn(1,0)}},cb:function(t,n,e,r,i,a,o,u,c,l,f,s){var p=bn();try{Xn(t,n,e,r,i,a,o,u,c,l,f,s)}catch(t){if(jn(p),t!==t+0)throw t;wn(1,0)}},ab:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_){var b=bn();try{Zn(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_)}catch(t){if(jn(b),t!==t+0)throw t;wn(1,0)}},_a:function(t,n,e,r,i,a,o,u,c,l,f,s,p){var h=bn();try{$n(t,n,e,r,i,a,o,u,c,l,f,s,p)}catch(t){if(jn(h),t!==t+0)throw t;wn(1,0)}},$a:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d){var y=bn();try{Qn(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d)}catch(t){if(jn(y),t!==t+0)throw t;wn(1,0)}},eb:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j){var C=bn();try{Vn(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j)}catch(t){if(jn(C),t!==t+0)throw t;wn(1,0)}},fb:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C,O){var S=bn();try{Nn(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C,O)}catch(t){if(jn(S),t!==t+0)throw t;wn(1,0)}},hb:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C){var O=bn();try{Gn(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C)}catch(t){if(jn(O),t!==t+0)throw t;wn(1,0)}},db:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C,O,S,T,A){var E=bn();try{qn(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C,O,S,T,A)}catch(t){if(jn(E),t!==t+0)throw t;wn(1,0)}},gb:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C,O,S,T,A,E){var M=bn();try{Bn(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C,O,S,T,A,E)}catch(t){if(jn(M),t!==t+0)throw t;wn(1,0)}},t:function(t){return t},a:R||u.wasmMemory,K:function(t){en=t},ia:un,ka:function(t,n,e,r){return un(t,n,e,r)}};!function(){function t(t,n){u.asm=t.exports,st.sd.push(u.asm._b),q=u.asm.cc,J.unshift(u.asm.Cb),k=n,j||(K--,u.monitorRunDependencies&&u.monitorRunDependencies(K),0==K&&(null!==tt&&(clearInterval(tt),tt=null),nt&&(t=nt,nt=null,t())))}function n(n){t(n.instance,n.module)}function e(t){return function(){if(!A&&(w||_)){if(\\\"function\\\"==typeof fetch&&!$.startsWith(\\\"file://\\\"))return fetch($,{credentials:\\\"same-origin\\\"}).then((function(t){if(!t.ok)throw\\\"failed to load wasm binary file at '\\\"+$+\\\"'\\\";return t.arrayBuffer()})).catch((function(){return it()}));if(s)return new Promise((function(t,n){s($,(function(n){t(new Uint8Array(n))}),n)}))}return Promise.resolve().then((function(){return it()}))}().then((function(t){return WebAssembly.instantiate(t,r)})).then((function(t){return t})).then(t,(function(t){M(\\\"failed to asynchronously prepare wasm: \\\"+t),et(t)}))}var r={a:ln};if(j||(K++,u.monitorRunDependencies&&u.monitorRunDependencies(K)),u.instantiateWasm)try{return u.instantiateWasm(r,t)}catch(t){return M(\\\"Module.instantiateWasm callback failed with error: \\\"+t),!1}(A||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||rt()||$.startsWith(\\\"file://\\\")||b||\\\"function\\\"!=typeof fetch?e(n):fetch($,{credentials:\\\"same-origin\\\"}).then((function(t){return WebAssembly.instantiateStreaming(t,r).then(n,(function(t){return M(\\\"wasm streaming compile failed: \\\"+t),M(\\\"falling back to ArrayBuffer instantiation\\\"),e(n)}))}))).catch(l)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.Cb).apply(null,arguments)},u._OrtInit=function(){return(u._OrtInit=u.asm.Db).apply(null,arguments)},u._OrtCreateSessionOptions=function(){return(u._OrtCreateSessionOptions=u.asm.Eb).apply(null,arguments)},u._OrtAppendExecutionProvider=function(){return(u._OrtAppendExecutionProvider=u.asm.Fb).apply(null,arguments)},u._OrtAddSessionConfigEntry=function(){return(u._OrtAddSessionConfigEntry=u.asm.Gb).apply(null,arguments)},u._OrtReleaseSessionOptions=function(){return(u._OrtReleaseSessionOptions=u.asm.Hb).apply(null,arguments)},u._OrtCreateSession=function(){return(u._OrtCreateSession=u.asm.Ib).apply(null,arguments)},u._OrtReleaseSession=function(){return(u._OrtReleaseSession=u.asm.Jb).apply(null,arguments)},u._OrtGetInputCount=function(){return(u._OrtGetInputCount=u.asm.Kb).apply(null,arguments)},u._OrtGetOutputCount=function(){return(u._OrtGetOutputCount=u.asm.Lb).apply(null,arguments)},u._OrtGetInputName=function(){return(u._OrtGetInputName=u.asm.Mb).apply(null,arguments)},u._OrtGetOutputName=function(){return(u._OrtGetOutputName=u.asm.Nb).apply(null,arguments)},u._OrtFree=function(){return(u._OrtFree=u.asm.Ob).apply(null,arguments)},u._OrtCreateTensor=function(){return(u._OrtCreateTensor=u.asm.Pb).apply(null,arguments)},u._OrtGetTensorData=function(){return(u._OrtGetTensorData=u.asm.Qb).apply(null,arguments)},u._OrtReleaseTensor=function(){return(u._OrtReleaseTensor=u.asm.Rb).apply(null,arguments)},u._OrtCreateRunOptions=function(){return(u._OrtCreateRunOptions=u.asm.Sb).apply(null,arguments)},u._OrtAddRunConfigEntry=function(){return(u._OrtAddRunConfigEntry=u.asm.Tb).apply(null,arguments)},u._OrtReleaseRunOptions=function(){return(u._OrtReleaseRunOptions=u.asm.Ub).apply(null,arguments)},u._OrtRun=function(){return(u._OrtRun=u.asm.Vb).apply(null,arguments)},u._OrtEndProfiling=function(){return(u._OrtEndProfiling=u.asm.Wb).apply(null,arguments)};var fn=u._pthread_self=function(){return(fn=u._pthread_self=u.asm.Xb).apply(null,arguments)},sn=u._malloc=function(){return(sn=u._malloc=u.asm.Yb).apply(null,arguments)},pn=u._free=function(){return(pn=u._free=u.asm.Zb).apply(null,arguments)};u.__emscripten_tls_init=function(){return(u.__emscripten_tls_init=u.asm._b).apply(null,arguments)};var hn=u.__emscripten_thread_init=function(){return(hn=u.__emscripten_thread_init=u.asm.$b).apply(null,arguments)};u.__emscripten_thread_crashed=function(){return(u.__emscripten_thread_crashed=u.asm.ac).apply(null,arguments)};var dn,yn=u._emscripten_run_in_main_runtime_thread_js=function(){return(yn=u._emscripten_run_in_main_runtime_thread_js=u.asm.bc).apply(null,arguments)},vn=u.__emscripten_proxy_execute_task_queue=function(){return(vn=u.__emscripten_proxy_execute_task_queue=u.asm.dc).apply(null,arguments)},mn=u.__emscripten_thread_free_data=function(){return(mn=u.__emscripten_thread_free_data=u.asm.ec).apply(null,arguments)},gn=u.__emscripten_thread_exit=function(){return(gn=u.__emscripten_thread_exit=u.asm.fc).apply(null,arguments)},wn=u._setThrew=function(){return(wn=u._setThrew=u.asm.gc).apply(null,arguments)},_n=u._emscripten_stack_set_limits=function(){return(_n=u._emscripten_stack_set_limits=u.asm.hc).apply(null,arguments)},bn=u.stackSave=function(){return(bn=u.stackSave=u.asm.ic).apply(null,arguments)},jn=u.stackRestore=function(){return(jn=u.stackRestore=u.asm.jc).apply(null,arguments)},Cn=u.stackAlloc=function(){return(Cn=u.stackAlloc=u.asm.kc).apply(null,arguments)},On=u.___cxa_can_catch=function(){return(On=u.___cxa_can_catch=u.asm.lc).apply(null,arguments)},Sn=u.___cxa_is_pointer_type=function(){return(Sn=u.___cxa_is_pointer_type=u.asm.mc).apply(null,arguments)},Tn=u.dynCall_j=function(){return(Tn=u.dynCall_j=u.asm.nc).apply(null,arguments)},An=u.dynCall_iij=function(){return(An=u.dynCall_iij=u.asm.oc).apply(null,arguments)},En=u.dynCall_iiiiij=function(){return(En=u.dynCall_iiiiij=u.asm.pc).apply(null,arguments)},Mn=u.dynCall_vij=function(){return(Mn=u.dynCall_vij=u.asm.qc).apply(null,arguments)},xn=u.dynCall_jii=function(){return(xn=u.dynCall_jii=u.asm.rc).apply(null,arguments)},Rn=u.dynCall_viiji=function(){return(Rn=u.dynCall_viiji=u.asm.sc).apply(null,arguments)},kn=u.dynCall_viiiij=function(){return(kn=u.dynCall_viiiij=u.asm.tc).apply(null,arguments)},Dn=u.dynCall_ji=function(){return(Dn=u.dynCall_ji=u.asm.uc).apply(null,arguments)},Pn=u.dynCall_viijjjiiiii=function(){return(Pn=u.dynCall_viijjjiiiii=u.asm.vc).apply(null,arguments)},Fn=u.dynCall_viiiji=function(){return(Fn=u.dynCall_viiiji=u.asm.wc).apply(null,arguments)},In=u.dynCall_vijiii=function(){return(In=u.dynCall_vijiii=u.asm.xc).apply(null,arguments)},Un=u.dynCall_viiij=function(){return(Un=u.dynCall_viiij=u.asm.yc).apply(null,arguments)},Wn=u.dynCall_viiiiiiiiiji=function(){return(Wn=u.dynCall_viiiiiiiiiji=u.asm.zc).apply(null,arguments)},Hn=u.dynCall_jjj=function(){return(Hn=u.dynCall_jjj=u.asm.Ac).apply(null,arguments)},Yn=u.dynCall_iiiijjj=function(){return(Yn=u.dynCall_iiiijjj=u.asm.Bc).apply(null,arguments)},Ln=u.dynCall_iiijjj=function(){return(Ln=u.dynCall_iiijjj=u.asm.Cc).apply(null,arguments)},zn=u.dynCall_jiii=function(){return(zn=u.dynCall_jiii=u.asm.Dc).apply(null,arguments)},Gn=u.dynCall_vjjjjjjffiifiiiiii=function(){return(Gn=u.dynCall_vjjjjjjffiifiiiiii=u.asm.Ec).apply(null,arguments)},Bn=u.dynCall_vjjjjjjjjfffiifiiiiii=function(){return(Bn=u.dynCall_vjjjjjjjjfffiifiiiiii=u.asm.Fc).apply(null,arguments)},Nn=u.dynCall_vjjjjjjfffifiiiiiii=function(){return(Nn=u.dynCall_vjjjjjjfffifiiiiiii=u.asm.Gc).apply(null,arguments)},Vn=u.dynCall_vjjjjjjfffifiiiii=function(){return(Vn=u.dynCall_vjjjjjjfffifiiiii=u.asm.Hc).apply(null,arguments)},qn=u.dynCall_vjjjjjjjjfffiifiiiii=function(){return(qn=u.dynCall_vjjjjjjjjfffiifiiiii=u.asm.Ic).apply(null,arguments)},Xn=u.dynCall_vijjfffiii=function(){return(Xn=u.dynCall_vijjfffiii=u.asm.Jc).apply(null,arguments)},Jn=u.dynCall_vijiiiiiiii=function(){return(Jn=u.dynCall_vijiiiiiiii=u.asm.Kc).apply(null,arguments)},Zn=u.dynCall_vijjjjjjifiiiii=function(){return(Zn=u.dynCall_vijjjjjjifiiiii=u.asm.Lc).apply(null,arguments)},Qn=u.dynCall_vjjjjjiiii=function(){return(Qn=u.dynCall_vjjjjjiiii=u.asm.Mc).apply(null,arguments)},$n=u.dynCall_vjjjjfiii=function(){return($n=u.dynCall_vjjjjfiii=u.asm.Nc).apply(null,arguments)},Kn=u.dynCall_viiijiiii=function(){return(Kn=u.dynCall_viiijiiii=u.asm.Oc).apply(null,arguments)},te=u.dynCall_viiijjjii=function(){return(te=u.dynCall_viiijjjii=u.asm.Pc).apply(null,arguments)},ne=u.dynCall_iiij=function(){return(ne=u.dynCall_iiij=u.asm.Qc).apply(null,arguments)},ee=u.dynCall_viiijii=function(){return(ee=u.dynCall_viiijii=u.asm.Rc).apply(null,arguments)},re=u.dynCall_viijiiiiiiiii=function(){return(re=u.dynCall_viijiiiiiiiii=u.asm.Sc).apply(null,arguments)},ie=u.dynCall_jfi=function(){return(ie=u.dynCall_jfi=u.asm.Tc).apply(null,arguments)},ae=u.dynCall_viji=function(){return(ae=u.dynCall_viji=u.asm.Uc).apply(null,arguments)};function oe(){function t(){if(!dn&&(dn=!0,u.calledRun=!0,!H)&&(j||pt(J),c(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),!j)){if(u.postRun)for(\\\"function\\\"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;){var t=u.postRun.shift();Z.unshift(t)}pt(Z)}}if(!(0<K))if(j)c(u),j||pt(J),postMessage({cmd:\\\"loaded\\\"});else{if(u.preRun)for(\\\"function\\\"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)Q();pt(X),0<K||(u.setStatus?(u.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){u.setStatus(\\\"\\\")}),1),t()}),1)):t())}}if(u.UTF8ToString=z,u.stringToUTF8=function(t,n,e){return G(t,r(),n,e)},u.lengthBytesUTF8=B,u.keepRuntimeAlive=function(){return x},u.wasmMemory=R,u.stackSave=bn,u.stackRestore=jn,u.stackAlloc=Cn,u.ExitStatus=ot,u.PThread=st,nt=function t(){dn||oe(),dn||(nt=t)},u.preInit)for(\\\"function\\\"==typeof u.preInit&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();return oe(),t.ready});t.exports=r},932:function(t,n,e){var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(t){var n,r,i;t=t||{},n||(n=void 0!==t?t:{}),n.ready=new Promise((function(t,n){r=t,i=n}));var a,o,u,c,l,f,s=Object.assign({},n),p=\\\"./this.program\\\",h=\\\"object\\\"==typeof window,d=\\\"function\\\"==typeof importScripts,y=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,v=\\\"\\\";y?(v=d?e(908).dirname(v)+\\\"/\\\":\\\"//\\\",f=()=>{l||(c=e(384),l=e(908))},a=function(t,n){return f(),t=l.normalize(t),c.readFileSync(t,n?void 0:\\\"utf8\\\")},u=t=>((t=a(t,!0)).buffer||(t=new Uint8Array(t)),t),o=(t,n,e)=>{f(),t=l.normalize(t),c.readFile(t,(function(t,r){t?e(t):n(r.buffer)}))},1<process.argv.length&&(p=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(t){throw t})),process.on(\\\"unhandledRejection\\\",(function(t){throw t})),n.inspect=function(){return\\\"[Emscripten Module object]\\\"}):(h||d)&&(d?v=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(v=document.currentScript.src),_scriptDir&&(v=_scriptDir),v=0!==v.indexOf(\\\"blob:\\\")?v.substr(0,v.replace(/[?#].*/,\\\"\\\").lastIndexOf(\\\"/\\\")+1):\\\"\\\",a=t=>{var n=new XMLHttpRequest;return n.open(\\\"GET\\\",t,!1),n.send(null),n.responseText},d&&(u=t=>{var n=new XMLHttpRequest;return n.open(\\\"GET\\\",t,!1),n.responseType=\\\"arraybuffer\\\",n.send(null),new Uint8Array(n.response)}),o=(t,n,e)=>{var r=new XMLHttpRequest;r.open(\\\"GET\\\",t,!0),r.responseType=\\\"arraybuffer\\\",r.onload=()=>{200==r.status||0==r.status&&r.response?n(r.response):e()},r.onerror=e,r.send(null)});var m,g=n.print||console.log.bind(console),w=n.printErr||console.warn.bind(console);Object.assign(n,s),s=null,n.thisProgram&&(p=n.thisProgram),n.wasmBinary&&(m=n.wasmBinary),n.noExitRuntime,\\\"object\\\"!=typeof WebAssembly&&z(\\\"no native wasm support detected\\\");var _,b,j,C,O,S,T=!1,A=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function E(t,n,e){var r=(n>>>=0)+e;for(e=n;t[e]&&!(e>=r);)++e;if(16<e-n&&t.buffer&&A)return A.decode(t.subarray(n,e));for(r=\\\"\\\";n<e;){var i=t[n++];if(128&i){var a=63&t[n++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var o=63&t[n++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&t[n++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function M(t,n){return(t>>>=0)?E(C,t,n):\\\"\\\"}function x(t,n,e,r){if(!(0<r))return 0;var i=e>>>=0;r=e+r-1;for(var a=0;a<t.length;++a){var o=t.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&t.charCodeAt(++a)),127>=o){if(e>=r)break;n[e++>>>0]=o}else{if(2047>=o){if(e+1>=r)break;n[e++>>>0]=192|o>>6}else{if(65535>=o){if(e+2>=r)break;n[e++>>>0]=224|o>>12}else{if(e+3>=r)break;n[e++>>>0]=240|o>>18,n[e++>>>0]=128|o>>12&63}n[e++>>>0]=128|o>>6&63}n[e++>>>0]=128|63&o}}return n[e>>>0]=0,e-i}function R(t){for(var n=0,e=0;e<t.length;++e){var r=t.charCodeAt(e);127>=r?n++:2047>=r?n+=2:55296<=r&&57343>=r?(n+=4,++e):n+=3}return n}function k(){var t=_.buffer;b=t,n.HEAP8=j=new Int8Array(t),n.HEAP16=new Int16Array(t),n.HEAP32=O=new Int32Array(t),n.HEAPU8=C=new Uint8Array(t),n.HEAPU16=new Uint16Array(t),n.HEAPU32=S=new Uint32Array(t),n.HEAPF32=new Float32Array(t),n.HEAPF64=new Float64Array(t)}var D,P=[],F=[],I=[];function U(){var t=n.preRun.shift();P.unshift(t)}var W,H=0,Y=null,L=null;function z(t){throw n.onAbort&&n.onAbort(t),w(t=\\\"Aborted(\\\"+t+\\\")\\\"),T=!0,t=new WebAssembly.RuntimeError(t+\\\". Build with -sASSERTIONS for more info.\\\"),i(t),t}function G(){return W.startsWith(\\\"data:application/octet-stream;base64,\\\")}if(W=\\\"ort-wasm.wasm\\\",!G()){var B=W;W=n.locateFile?n.locateFile(B,v):v+B}function N(){var t=W;try{if(t==W&&m)return new Uint8Array(m);if(u)return u(t);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(t){z(t)}}function V(t){for(;0<t.length;)t.shift()(n)}var q=[],X=0,J=0;function Z(t){this.Ic=t,this.Cc=t-24,this.Wc=function(t){S[this.Cc+4>>2>>>0]=t},this.Gc=function(){return S[this.Cc+4>>2>>>0]},this.Uc=function(t){S[this.Cc+8>>2>>>0]=t},this.Yc=function(){return S[this.Cc+8>>2>>>0]},this.Vc=function(){O[this.Cc>>2>>>0]=0},this.Lc=function(t){j[this.Cc+12>>0>>>0]=t?1:0},this.Rc=function(){return 0!=j[this.Cc+12>>0>>>0]},this.Mc=function(t){j[this.Cc+13>>0>>>0]=t?1:0},this.Oc=function(){return 0!=j[this.Cc+13>>0>>>0]},this.Tc=function(t,n){this.Hc(0),this.Wc(t),this.Uc(n),this.Vc(),this.Lc(!1),this.Mc(!1)},this.Pc=function(){O[this.Cc>>2>>>0]+=1},this.Zc=function(){var t=O[this.Cc>>2>>>0];return O[this.Cc>>2>>>0]=t-1,1===t},this.Hc=function(t){S[this.Cc+16>>2>>>0]=t},this.Qc=function(){return S[this.Cc+16>>2>>>0]},this.Sc=function(){if(wt(this.Gc()))return S[this.Ic>>2>>>0];var t=this.Qc();return 0!==t?t:this.Ic}}function Q(t){return ht(new Z(t).Cc)}var $=[];function K(t){var n=$[t];return n||(t>=$.length&&($.length=t+1),$[t]=n=D.get(t)),n}function tt(t){var n=R(t)+1,e=pt(n);return e&&x(t,j,e,n),e}var nt={};function et(){if(!rt){var t,n={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:p||\\\"./this.program\\\"};for(t in nt)void 0===nt[t]?delete n[t]:n[t]=nt[t];var e=[];for(t in n)e.push(t+\\\"=\\\"+n[t]);rt=e}return rt}var rt,it=[null,[],[]],at=0;function ot(t){return 0==t%4&&(0!=t%100||0==t%400)}var ut=[31,29,31,30,31,30,31,31,30,31,30,31],ct=[31,28,31,30,31,30,31,31,30,31,30,31];function lt(t,n,e,r){function i(t,n,e){for(t=\\\"number\\\"==typeof t?t.toString():t||\\\"\\\";t.length<n;)t=e[0]+t;return t}function a(t,n){return i(t,n,\\\"0\\\")}function o(t,n){function e(t){return 0>t?-1:0<t?1:0}var r;return 0===(r=e(t.getFullYear()-n.getFullYear()))&&0===(r=e(t.getMonth()-n.getMonth()))&&(r=e(t.getDate()-n.getDate())),r}function u(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function c(t){var n=t.Ec;for(t=new Date(new Date(t.Fc+1900,0,1).getTime());0<n;){var e=t.getMonth(),r=(ot(t.getFullYear())?ut:ct)[e];if(!(n>r-t.getDate())){t.setDate(t.getDate()+n);break}n-=r-t.getDate()+1,t.setDate(1),11>e?t.setMonth(e+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return e=new Date(t.getFullYear()+1,0,4),n=u(new Date(t.getFullYear(),0,4)),e=u(e),0>=o(n,t)?0>=o(e,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var l=O[r+40>>2>>>0];for(var f in r={bd:O[r>>2>>>0],ad:O[r+4>>2>>>0],Jc:O[r+8>>2>>>0],Nc:O[r+12>>2>>>0],Kc:O[r+16>>2>>>0],Fc:O[r+20>>2>>>0],Dc:O[r+24>>2>>>0],Ec:O[r+28>>2>>>0],dd:O[r+32>>2>>>0],$c:O[r+36>>2>>>0],cd:l?M(l):\\\"\\\"},e=M(e),l={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})e=e.replace(new RegExp(f,\\\"g\\\"),l[f]);var s=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),p=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(f in l={\\\"%a\\\":function(t){return s[t.Dc].substring(0,3)},\\\"%A\\\":function(t){return s[t.Dc]},\\\"%b\\\":function(t){return p[t.Kc].substring(0,3)},\\\"%B\\\":function(t){return p[t.Kc]},\\\"%C\\\":function(t){return a((t.Fc+1900)/100|0,2)},\\\"%d\\\":function(t){return a(t.Nc,2)},\\\"%e\\\":function(t){return i(t.Nc,2,\\\" \\\")},\\\"%g\\\":function(t){return c(t).toString().substring(2)},\\\"%G\\\":function(t){return c(t)},\\\"%H\\\":function(t){return a(t.Jc,2)},\\\"%I\\\":function(t){return 0==(t=t.Jc)?t=12:12<t&&(t-=12),a(t,2)},\\\"%j\\\":function(t){for(var n=0,e=0;e<=t.Kc-1;n+=(ot(t.Fc+1900)?ut:ct)[e++]);return a(t.Nc+n,3)},\\\"%m\\\":function(t){return a(t.Kc+1,2)},\\\"%M\\\":function(t){return a(t.ad,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(t){return 0<=t.Jc&&12>t.Jc?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(t){return a(t.bd,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(t){return t.Dc||7},\\\"%U\\\":function(t){return a(Math.floor((t.Ec+7-t.Dc)/7),2)},\\\"%V\\\":function(t){var n=Math.floor((t.Ec+7-(t.Dc+6)%7)/7);if(2>=(t.Dc+371-t.Ec-2)%7&&n++,n)53==n&&(4==(e=(t.Dc+371-t.Ec)%7)||3==e&&ot(t.Fc)||(n=1));else{n=52;var e=(t.Dc+7-t.Ec-1)%7;(4==e||5==e&&ot(t.Fc%400-1))&&n++}return a(n,2)},\\\"%w\\\":function(t){return t.Dc},\\\"%W\\\":function(t){return a(Math.floor((t.Ec+7-(t.Dc+6)%7)/7),2)},\\\"%y\\\":function(t){return(t.Fc+1900).toString().substring(2)},\\\"%Y\\\":function(t){return t.Fc+1900},\\\"%z\\\":function(t){var n=0<=(t=t.$c);return t=Math.abs(t)/60,(n?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(t/60*100+t%60)).slice(-4)},\\\"%Z\\\":function(t){return t.cd},\\\"%%\\\":function(){return\\\"%\\\"}},e=e.replace(/%%/g,\\\"\\\\0\\\\0\\\"),l)e.includes(f)&&(e=e.replace(new RegExp(f,\\\"g\\\"),l[f](r)));return f=function(t){var n=Array(R(t)+1);return x(t,n,0,n.length),n}(e=e.replace(/\\\\0\\\\0/g,\\\"%\\\")),f.length>n?0:(j.set(f,t>>>0),f.length-1)}var ft={j:function(t){return pt(t+24)+24},p:function(t){return(t=new Z(t)).Rc()||(t.Lc(!0),X--),t.Mc(!1),q.push(t),t.Pc(),t.Sc()},sa:function(t){throw w(\\\"Unexpected exception thrown, this is not properly supported - aborting\\\"),T=!0,t},B:function(){dt(0);var t=q.pop();if(t.Zc()&&!t.Oc()){var n=t.Yc();n&&K(n)(t.Ic),Q(t.Ic)}J=0},b:function(){var t=J;if(!t)return at=0;var n=new Z(t);n.Hc(t);var e=n.Gc();if(!e)return at=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(gt(a,e,n.Cc+16))return at=a,t}return at=e,t},l:function(){var t=J;if(!t)return at=0;var n=new Z(t);n.Hc(t);var e=n.Gc();if(!e)return at=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(gt(a,e,n.Cc+16))return at=a,t}return at=e,t},v:function(){var t=J;if(!t)return at=0;var n=new Z(t);n.Hc(t);var e=n.Gc();if(!e)return at=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(gt(a,e,n.Cc+16))return at=a,t}return at=e,t},n:function(){var t=J;if(!t)return at=0;var n=new Z(t);n.Hc(t);var e=n.Gc();if(!e)return at=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(gt(a,e,n.Cc+16))return at=a,t}return at=e,t},m:Q,S:function(){var t=q.pop();t||z(\\\"no exception to throw\\\");var n=t.Ic;throw t.Oc()||(q.push(t),t.Mc(!0),t.Lc(!1),X++),J=n,n},w:function(t,n,e){throw new Z(t).Tc(n,e),J=t,X++,t},va:function(){return X},f:function(t){throw J||(J=t),t},U:function(){return 0},Ma:function(){},Aa:function(){},Ca:function(){},ua:function(){return 0},Ka:function(){},Ga:function(){},Ja:function(){},$:function(){},Ba:function(){},ya:function(){},La:function(){},za:function(){},eb:function(){},la:function(){z(\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},pb:function(){z(\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},aa:function(){return Date.now()},Na:function(){return!0},Oa:function(t,n){t=new Date(1e3*(S[t>>>2]+4294967296*O[t+4>>>2])),O[n>>2>>>0]=t.getUTCSeconds(),O[n+4>>2>>>0]=t.getUTCMinutes(),O[n+8>>2>>>0]=t.getUTCHours(),O[n+12>>2>>>0]=t.getUTCDate(),O[n+16>>2>>>0]=t.getUTCMonth(),O[n+20>>2>>>0]=t.getUTCFullYear()-1900,O[n+24>>2>>>0]=t.getUTCDay(),O[n+28>>2>>>0]=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},Pa:function(t,n){t=new Date(1e3*(S[t>>>2]+4294967296*O[t+4>>>2])),O[n>>2>>>0]=t.getSeconds(),O[n+4>>2>>>0]=t.getMinutes(),O[n+8>>2>>>0]=t.getHours(),O[n+12>>2>>>0]=t.getDate(),O[n+16>>2>>>0]=t.getMonth(),O[n+20>>2>>>0]=t.getFullYear()-1900,O[n+24>>2>>>0]=t.getDay();var e=new Date(t.getFullYear(),0,1);O[n+28>>2>>>0]=(t.getTime()-e.getTime())/864e5|0,O[n+36>>2>>>0]=-60*t.getTimezoneOffset();var r=new Date(t.getFullYear(),6,1).getTimezoneOffset();e=e.getTimezoneOffset(),O[n+32>>2>>>0]=0|(r!=e&&t.getTimezoneOffset()==Math.min(e,r))},Qa:function(t){var n=new Date(O[t+20>>2>>>0]+1900,O[t+16>>2>>>0],O[t+12>>2>>>0],O[t+8>>2>>>0],O[t+4>>2>>>0],O[t>>2>>>0],0),e=O[t+32>>2>>>0],r=n.getTimezoneOffset(),i=new Date(n.getFullYear(),0,1),a=new Date(n.getFullYear(),6,1).getTimezoneOffset(),o=i.getTimezoneOffset(),u=Math.min(o,a);return 0>e?O[t+32>>2>>>0]=Number(a!=o&&u==r):0<e!=(u==r)&&(a=Math.max(o,a),n.setTime(n.getTime()+6e4*((0<e?u:a)-r))),O[t+24>>2>>>0]=n.getDay(),O[t+28>>2>>>0]=(n.getTime()-i.getTime())/864e5|0,O[t>>2>>>0]=n.getSeconds(),O[t+4>>2>>>0]=n.getMinutes(),O[t+8>>2>>>0]=n.getHours(),O[t+12>>2>>>0]=n.getDate(),O[t+16>>2>>>0]=n.getMonth(),n.getTime()/1e3|0},Ea:function(){return-52},Fa:function(){},Va:function t(n,e,r){t.Xc||(t.Xc=!0,function(t,n,e){function r(t){return(t=t.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?t[1]:\\\"GMT\\\"}var i=(new Date).getFullYear(),a=new Date(i,0,1),o=new Date(i,6,1);i=a.getTimezoneOffset();var u=o.getTimezoneOffset();O[t>>2>>>0]=60*Math.max(i,u),O[n>>2>>>0]=Number(i!=u),t=r(a),n=r(o),t=tt(t),n=tt(n),u<i?(S[e>>2>>>0]=t,S[e+4>>2>>>0]=n):(S[e>>2>>>0]=n,S[e+4>>2>>>0]=t)}(n,e,r))},P:function(){z(\\\"\\\")},wa:function(){return 4294901760},V:y?()=>{var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:()=>performance.now(),Da:function(t,n,e){C.copyWithin(t>>>0,n>>>0,n+e>>>0)},T:function(t){var n=C.length;if(4294901760<(t>>>=0))return!1;for(var e=1;4>=e;e*=2){var r=n*(1+.2/e);r=Math.min(r,t+100663296);var i=Math;r=Math.max(t,r),i=i.min.call(i,4294901760,r+(65536-r%65536)%65536);t:{try{_.grow(i-b.byteLength+65535>>>16),k();var a=1;break t}catch(t){}a=void 0}if(a)return!0}return!1},Ha:function(t,n){var e=0;return et().forEach((function(r,i){var a=n+e;for(i=S[t+4*i>>2>>>0]=a,a=0;a<r.length;++a)j[i++>>0>>>0]=r.charCodeAt(a);j[i>>0>>>0]=0,e+=r.length+1})),0},Ia:function(t,n){var e=et();S[t>>2>>>0]=e.length;var r=0;return e.forEach((function(t){r+=t.length+1})),S[n>>2>>>0]=r,0},R:function(){return 52},_:function(){return 52},na:function(){return 70},xa:function(t,n,e,r){for(var i=0,a=0;a<e;a++){var o=S[n>>2>>>0],u=S[n+4>>2>>>0];n+=8;for(var c=0;c<u;c++){var l=C[o+c>>>0],f=it[t];0===l||10===l?((1===t?g:w)(E(f,0)),f.length=0):f.push(l)}i+=u}return S[r>>2>>>0]=i,0},a:function(){return at},oa:function(t,n,e){var r=yt();try{return K(t)(n,e)}catch(t){if(vt(r),t!==t+0)throw t;dt(1,0)}},C:function(t,n,e,r,i,a,o){var u=yt();try{return K(t)(n,e,r,i,a,o)}catch(t){if(vt(u),t!==t+0)throw t;dt(1,0)}},x:function(t){var n=yt();try{return K(t)()}catch(t){if(vt(n),t!==t+0)throw t;dt(1,0)}},c:function(t,n){var e=yt();try{return K(t)(n)}catch(t){if(vt(e),t!==t+0)throw t;dt(1,0)}},W:function(t,n,e){var r=yt();try{return K(t)(n,e)}catch(t){if(vt(r),t!==t+0)throw t;dt(1,0)}},Q:function(t,n,e){var r=yt();try{return K(t)(n,e)}catch(t){if(vt(r),t!==t+0)throw t;dt(1,0)}},k:function(t,n,e){var r=yt();try{return K(t)(n,e)}catch(t){if(vt(r),t!==t+0)throw t;dt(1,0)}},g:function(t,n,e,r){var i=yt();try{return K(t)(n,e,r)}catch(t){if(vt(i),t!==t+0)throw t;dt(1,0)}},i:function(t,n,e,r,i){var a=yt();try{return K(t)(n,e,r,i)}catch(t){if(vt(a),t!==t+0)throw t;dt(1,0)}},o:function(t,n,e,r,i,a){var o=yt();try{return K(t)(n,e,r,i,a)}catch(t){if(vt(o),t!==t+0)throw t;dt(1,0)}},y:function(t,n,e,r,i,a,o){var u=yt();try{return K(t)(n,e,r,i,a,o)}catch(t){if(vt(u),t!==t+0)throw t;dt(1,0)}},K:function(t,n,e,r,i,a,o,u){var c=yt();try{return K(t)(n,e,r,i,a,o,u)}catch(t){if(vt(c),t!==t+0)throw t;dt(1,0)}},Z:function(t,n,e,r,i,a,o,u,c,l,f){var s=yt();try{return K(t)(n,e,r,i,a,o,u,c,l,f)}catch(t){if(vt(s),t!==t+0)throw t;dt(1,0)}},M:function(t,n,e,r,i,a,o,u,c,l,f,s){var p=yt();try{return K(t)(n,e,r,i,a,o,u,c,l,f,s)}catch(t){if(vt(p),t!==t+0)throw t;dt(1,0)}},ia:function(t,n,e,r,i,a,o){var u=yt();try{return jt(t,n,e,r,i,a,o)}catch(t){if(vt(u),t!==t+0)throw t;dt(1,0)}},kb:function(t,n,e,r,i,a,o,u,c,l){var f=yt();try{return Ft(t,n,e,r,i,a,o,u,c,l)}catch(t){if(vt(f),t!==t+0)throw t;dt(1,0)}},Ra:function(t,n,e,r,i){var a=yt();try{return Zt(t,n,e,r,i)}catch(t){if(vt(a),t!==t+0)throw t;dt(1,0)}},jb:function(t,n,e,r,i,a,o,u,c){var l=yt();try{return It(t,n,e,r,i,a,o,u,c)}catch(t){if(vt(l),t!==t+0)throw t;dt(1,0)}},ma:function(t,n,e,r){var i=yt();try{return bt(t,n,e,r)}catch(t){if(vt(i),t!==t+0)throw t;dt(1,0)}},Sa:function(t){var n=yt();try{return _t(t)}catch(t){if(vt(n),t!==t+0)throw t;dt(1,0)}},Ya:function(t,n,e){var r=yt();try{return Kt(t,n,e)}catch(t){if(vt(r),t!==t+0)throw t;dt(1,0)}},fa:function(t,n){var e=yt();try{return Et(t,n)}catch(t){if(vt(e),t!==t+0)throw t;dt(1,0)}},ea:function(t,n,e){var r=yt();try{return Ot(t,n,e)}catch(t){if(vt(r),t!==t+0)throw t;dt(1,0)}},ib:function(t,n,e,r){var i=yt();try{return Ut(t,n,e,r)}catch(t){if(vt(i),t!==t+0)throw t;dt(1,0)}},lb:function(t,n,e,r,i){var a=yt();try{return Pt(t,n,e,r,i)}catch(t){if(vt(a),t!==t+0)throw t;dt(1,0)}},d:function(t){var n=yt();try{K(t)()}catch(t){if(vt(n),t!==t+0)throw t;dt(1,0)}},t:function(t,n){var e=yt();try{K(t)(n)}catch(t){if(vt(e),t!==t+0)throw t;dt(1,0)}},h:function(t,n,e){var r=yt();try{K(t)(n,e)}catch(t){if(vt(r),t!==t+0)throw t;dt(1,0)}},E:function(t,n,e,r,i){var a=yt();try{K(t)(n,e,r,i)}catch(t){if(vt(a),t!==t+0)throw t;dt(1,0)}},e:function(t,n,e,r){var i=yt();try{K(t)(n,e,r)}catch(t){if(vt(i),t!==t+0)throw t;dt(1,0)}},Y:function(t,n,e,r,i){var a=yt();try{K(t)(n,e,r,i)}catch(t){if(vt(a),t!==t+0)throw t;dt(1,0)}},s:function(t,n,e,r,i){var a=yt();try{K(t)(n,e,r,i)}catch(t){if(vt(a),t!==t+0)throw t;dt(1,0)}},u:function(t,n,e,r,i,a){var o=yt();try{K(t)(n,e,r,i,a)}catch(t){if(vt(o),t!==t+0)throw t;dt(1,0)}},q:function(t,n,e,r,i,a,o){var u=yt();try{K(t)(n,e,r,i,a,o)}catch(t){if(vt(u),t!==t+0)throw t;dt(1,0)}},G:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y){var v=yt();try{K(t)(n,e,r,i,a,o,u,c,l,f,s,p,h,d,y)}catch(t){if(vt(v),t!==t+0)throw t;dt(1,0)}},N:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v){var m=yt();try{K(t)(n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v)}catch(t){if(vt(m),t!==t+0)throw t;dt(1,0)}},F:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d){var y=yt();try{K(t)(n,e,r,i,a,o,u,c,l,f,s,p,h,d)}catch(t){if(vt(y),t!==t+0)throw t;dt(1,0)}},z:function(t,n,e,r,i,a,o,u){var c=yt();try{K(t)(n,e,r,i,a,o,u)}catch(t){if(vt(c),t!==t+0)throw t;dt(1,0)}},D:function(t,n,e,r,i,a,o,u,c){var l=yt();try{K(t)(n,e,r,i,a,o,u,c)}catch(t){if(vt(l),t!==t+0)throw t;dt(1,0)}},H:function(t,n,e,r,i,a,o,u,c,l){var f=yt();try{K(t)(n,e,r,i,a,o,u,c,l)}catch(t){if(vt(f),t!==t+0)throw t;dt(1,0)}},X:function(t,n,e,r,i,a,o,u,c,l,f,s){var p=yt();try{K(t)(n,e,r,i,a,o,u,c,l,f,s)}catch(t){if(vt(p),t!==t+0)throw t;dt(1,0)}},pa:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h){var d=yt();try{K(t)(n,e,r,i,a,o,u,c,l,f,s,p,h)}catch(t){if(vt(d),t!==t+0)throw t;dt(1,0)}},J:function(t,n,e,r,i,a,o,u,c,l,f){var s=yt();try{K(t)(n,e,r,i,a,o,u,c,l,f)}catch(t){if(vt(s),t!==t+0)throw t;dt(1,0)}},qa:function(t,n,e,r,i,a,o,u,c,l,f,s){var p=yt();try{K(t)(n,e,r,i,a,o,u,c,l,f,s)}catch(t){if(vt(p),t!==t+0)throw t;dt(1,0)}},A:function(t,n,e,r,i,a,o,u,c,l,f,s,p){var h=yt();try{K(t)(n,e,r,i,a,o,u,c,l,f,s,p)}catch(t){if(vt(h),t!==t+0)throw t;dt(1,0)}},O:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h){var d=yt();try{K(t)(n,e,r,i,a,o,u,c,l,f,s,p,h)}catch(t){if(vt(d),t!==t+0)throw t;dt(1,0)}},L:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y){var v=yt();try{K(t)(n,e,r,i,a,o,u,c,l,f,s,p,h,d,y)}catch(t){if(vt(v),t!==t+0)throw t;dt(1,0)}},mb:function(t,n,e,r,i,a,o,u,c,l,f,s,p){var h=yt();try{Dt(t,n,e,r,i,a,o,u,c,l,f,s,p)}catch(t){if(vt(h),t!==t+0)throw t;dt(1,0)}},ga:function(t,n,e,r,i,a,o,u){var c=yt();try{At(t,n,e,r,i,a,o,u)}catch(t){if(vt(c),t!==t+0)throw t;dt(1,0)}},ha:function(t,n,e,r,i,a,o){var u=yt();try{Tt(t,n,e,r,i,a,o)}catch(t){if(vt(u),t!==t+0)throw t;dt(1,0)}},nb:function(t,n,e,r,i,a){var o=yt();try{kt(t,n,e,r,i,a)}catch(t){if(vt(o),t!==t+0)throw t;dt(1,0)}},ba:function(t,n,e,r,i,a,o){var u=yt();try{xt(t,n,e,r,i,a,o)}catch(t){if(vt(u),t!==t+0)throw t;dt(1,0)}},ja:function(t,n,e,r,i,a,o,u){var c=yt();try{Qt(t,n,e,r,i,a,o,u)}catch(t){if(vt(c),t!==t+0)throw t;dt(1,0)}},Xa:function(t,n,e,r,i,a,o,u,c,l){var f=yt();try{Xt(t,n,e,r,i,a,o,u,c,l)}catch(t){if(vt(f),t!==t+0)throw t;dt(1,0)}},Wa:function(t,n,e,r,i,a,o,u,c,l,f,s){var p=yt();try{Jt(t,n,e,r,i,a,o,u,c,l,f,s)}catch(t){if(vt(p),t!==t+0)throw t;dt(1,0)}},ca:function(t,n,e,r,i,a){var o=yt();try{St(t,n,e,r,i,a)}catch(t){if(vt(o),t!==t+0)throw t;dt(1,0)}},Ta:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h){var d=yt();try{$t(t,n,e,r,i,a,o,u,c,l,f,s,p,h)}catch(t){if(vt(d),t!==t+0)throw t;dt(1,0)}},da:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h){var d=yt();try{Mt(t,n,e,r,i,a,o,u,c,l,f,s,p,h)}catch(t){if(vt(d),t!==t+0)throw t;dt(1,0)}},ka:function(t,n,e,r){var i=yt();try{Ct(t,n,e,r)}catch(t){if(vt(i),t!==t+0)throw t;dt(1,0)}},Ua:function(t,n,e,r,i){var a=yt();try{tn(t,n,e,r,i)}catch(t){if(vt(a),t!==t+0)throw t;dt(1,0)}},ob:function(t,n,e,r,i,a,o){var u=yt();try{Rt(t,n,e,r,i,a,o)}catch(t){if(vt(u),t!==t+0)throw t;dt(1,0)}},ab:function(t,n,e,r,i,a,o,u,c,l,f,s){var p=yt();try{Bt(t,n,e,r,i,a,o,u,c,l,f,s)}catch(t){if(vt(p),t!==t+0)throw t;dt(1,0)}},bb:function(t,n,e,r,i,a,o,u,c,l,f,s){var p=yt();try{Gt(t,n,e,r,i,a,o,u,c,l,f,s)}catch(t){if(vt(p),t!==t+0)throw t;dt(1,0)}},$a:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_){var b=yt();try{Nt(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_)}catch(t){if(vt(b),t!==t+0)throw t;dt(1,0)}},Za:function(t,n,e,r,i,a,o,u,c,l,f,s,p){var h=yt();try{qt(t,n,e,r,i,a,o,u,c,l,f,s,p)}catch(t){if(vt(h),t!==t+0)throw t;dt(1,0)}},_a:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d){var y=yt();try{Vt(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d)}catch(t){if(vt(y),t!==t+0)throw t;dt(1,0)}},db:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j){var C=yt();try{Lt(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j)}catch(t){if(vt(C),t!==t+0)throw t;dt(1,0)}},fb:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C,O){var S=yt();try{Yt(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C,O)}catch(t){if(vt(S),t!==t+0)throw t;dt(1,0)}},hb:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C){var O=yt();try{Wt(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C)}catch(t){if(vt(O),t!==t+0)throw t;dt(1,0)}},cb:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C,O,S,T,A){var E=yt();try{zt(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C,O,S,T,A)}catch(t){if(vt(E),t!==t+0)throw t;dt(1,0)}},gb:function(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C,O,S,T,A,E){var M=yt();try{Ht(t,n,e,r,i,a,o,u,c,l,f,s,p,h,d,y,v,m,g,w,_,b,j,C,O,S,T,A,E)}catch(t){if(vt(M),t!==t+0)throw t;dt(1,0)}},r:function(t){return t},I:function(t){at=t},ra:lt,ta:function(t,n,e,r){return lt(t,n,e,r)}};!function(){function t(t){n.asm=t.exports,_=n.asm.qb,k(),D=n.asm.Ob,F.unshift(n.asm.rb),H--,n.monitorRunDependencies&&n.monitorRunDependencies(H),0==H&&(null!==Y&&(clearInterval(Y),Y=null),L&&(t=L,L=null,t()))}function e(n){t(n.instance)}function r(t){return function(){if(!m&&(h||d)){if(\\\"function\\\"==typeof fetch&&!W.startsWith(\\\"file://\\\"))return fetch(W,{credentials:\\\"same-origin\\\"}).then((function(t){if(!t.ok)throw\\\"failed to load wasm binary file at '\\\"+W+\\\"'\\\";return t.arrayBuffer()})).catch((function(){return N()}));if(o)return new Promise((function(t,n){o(W,(function(n){t(new Uint8Array(n))}),n)}))}return Promise.resolve().then((function(){return N()}))}().then((function(t){return WebAssembly.instantiate(t,a)})).then((function(t){return t})).then(t,(function(t){w(\\\"failed to asynchronously prepare wasm: \\\"+t),z(t)}))}var a={a:ft};if(H++,n.monitorRunDependencies&&n.monitorRunDependencies(H),n.instantiateWasm)try{return n.instantiateWasm(a,t)}catch(t){return w(\\\"Module.instantiateWasm callback failed with error: \\\"+t),!1}(m||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||G()||W.startsWith(\\\"file://\\\")||y||\\\"function\\\"!=typeof fetch?r(e):fetch(W,{credentials:\\\"same-origin\\\"}).then((function(t){return WebAssembly.instantiateStreaming(t,a).then(e,(function(t){return w(\\\"wasm streaming compile failed: \\\"+t),w(\\\"falling back to ArrayBuffer instantiation\\\"),r(e)}))}))).catch(i)}(),n.___wasm_call_ctors=function(){return(n.___wasm_call_ctors=n.asm.rb).apply(null,arguments)},n._OrtInit=function(){return(n._OrtInit=n.asm.sb).apply(null,arguments)},n._OrtCreateSessionOptions=function(){return(n._OrtCreateSessionOptions=n.asm.tb).apply(null,arguments)},n._OrtAppendExecutionProvider=function(){return(n._OrtAppendExecutionProvider=n.asm.ub).apply(null,arguments)},n._OrtAddSessionConfigEntry=function(){return(n._OrtAddSessionConfigEntry=n.asm.vb).apply(null,arguments)},n._OrtReleaseSessionOptions=function(){return(n._OrtReleaseSessionOptions=n.asm.wb).apply(null,arguments)},n._OrtCreateSession=function(){return(n._OrtCreateSession=n.asm.xb).apply(null,arguments)},n._OrtReleaseSession=function(){return(n._OrtReleaseSession=n.asm.yb).apply(null,arguments)},n._OrtGetInputCount=function(){return(n._OrtGetInputCount=n.asm.zb).apply(null,arguments)},n._OrtGetOutputCount=function(){return(n._OrtGetOutputCount=n.asm.Ab).apply(null,arguments)},n._OrtGetInputName=function(){return(n._OrtGetInputName=n.asm.Bb).apply(null,arguments)},n._OrtGetOutputName=function(){return(n._OrtGetOutputName=n.asm.Cb).apply(null,arguments)},n._OrtFree=function(){return(n._OrtFree=n.asm.Db).apply(null,arguments)},n._OrtCreateTensor=function(){return(n._OrtCreateTensor=n.asm.Eb).apply(null,arguments)},n._OrtGetTensorData=function(){return(n._OrtGetTensorData=n.asm.Fb).apply(null,arguments)},n._OrtReleaseTensor=function(){return(n._OrtReleaseTensor=n.asm.Gb).apply(null,arguments)},n._OrtCreateRunOptions=function(){return(n._OrtCreateRunOptions=n.asm.Hb).apply(null,arguments)},n._OrtAddRunConfigEntry=function(){return(n._OrtAddRunConfigEntry=n.asm.Ib).apply(null,arguments)},n._OrtReleaseRunOptions=function(){return(n._OrtReleaseRunOptions=n.asm.Jb).apply(null,arguments)},n._OrtRun=function(){return(n._OrtRun=n.asm.Kb).apply(null,arguments)},n._OrtEndProfiling=function(){return(n._OrtEndProfiling=n.asm.Lb).apply(null,arguments)};var st,pt=n._malloc=function(){return(pt=n._malloc=n.asm.Mb).apply(null,arguments)},ht=n._free=function(){return(ht=n._free=n.asm.Nb).apply(null,arguments)},dt=n._setThrew=function(){return(dt=n._setThrew=n.asm.Pb).apply(null,arguments)},yt=n.stackSave=function(){return(yt=n.stackSave=n.asm.Qb).apply(null,arguments)},vt=n.stackRestore=function(){return(vt=n.stackRestore=n.asm.Rb).apply(null,arguments)},mt=n.stackAlloc=function(){return(mt=n.stackAlloc=n.asm.Sb).apply(null,arguments)},gt=n.___cxa_can_catch=function(){return(gt=n.___cxa_can_catch=n.asm.Tb).apply(null,arguments)},wt=n.___cxa_is_pointer_type=function(){return(wt=n.___cxa_is_pointer_type=n.asm.Ub).apply(null,arguments)},_t=n.dynCall_j=function(){return(_t=n.dynCall_j=n.asm.Vb).apply(null,arguments)},bt=n.dynCall_iij=function(){return(bt=n.dynCall_iij=n.asm.Wb).apply(null,arguments)},jt=n.dynCall_iiiiij=function(){return(jt=n.dynCall_iiiiij=n.asm.Xb).apply(null,arguments)},Ct=n.dynCall_vij=function(){return(Ct=n.dynCall_vij=n.asm.Yb).apply(null,arguments)},Ot=n.dynCall_jii=function(){return(Ot=n.dynCall_jii=n.asm.Zb).apply(null,arguments)},St=n.dynCall_viiji=function(){return(St=n.dynCall_viiji=n.asm._b).apply(null,arguments)},Tt=n.dynCall_viiiij=function(){return(Tt=n.dynCall_viiiij=n.asm.$b).apply(null,arguments)},At=n.dynCall_viiiiij=function(){return(At=n.dynCall_viiiiij=n.asm.ac).apply(null,arguments)},Et=n.dynCall_ji=function(){return(Et=n.dynCall_ji=n.asm.bc).apply(null,arguments)},Mt=n.dynCall_viijjjiiiii=function(){return(Mt=n.dynCall_viijjjiiiii=n.asm.cc).apply(null,arguments)},xt=n.dynCall_viiiji=function(){return(xt=n.dynCall_viiiji=n.asm.dc).apply(null,arguments)},Rt=n.dynCall_vijiii=function(){return(Rt=n.dynCall_vijiii=n.asm.ec).apply(null,arguments)},kt=n.dynCall_viiij=function(){return(kt=n.dynCall_viiij=n.asm.fc).apply(null,arguments)},Dt=n.dynCall_viiiiiiiiiji=function(){return(Dt=n.dynCall_viiiiiiiiiji=n.asm.gc).apply(null,arguments)},Pt=n.dynCall_jjj=function(){return(Pt=n.dynCall_jjj=n.asm.hc).apply(null,arguments)},Ft=n.dynCall_iiiijjj=function(){return(Ft=n.dynCall_iiiijjj=n.asm.ic).apply(null,arguments)},It=n.dynCall_iiijjj=function(){return(It=n.dynCall_iiijjj=n.asm.jc).apply(null,arguments)},Ut=n.dynCall_jiii=function(){return(Ut=n.dynCall_jiii=n.asm.kc).apply(null,arguments)},Wt=n.dynCall_vjjjjjjffiifiiiiii=function(){return(Wt=n.dynCall_vjjjjjjffiifiiiiii=n.asm.lc).apply(null,arguments)},Ht=n.dynCall_vjjjjjjjjfffiifiiiiii=function(){return(Ht=n.dynCall_vjjjjjjjjfffiifiiiiii=n.asm.mc).apply(null,arguments)},Yt=n.dynCall_vjjjjjjfffifiiiiiii=function(){return(Yt=n.dynCall_vjjjjjjfffifiiiiiii=n.asm.nc).apply(null,arguments)},Lt=n.dynCall_vjjjjjjfffifiiiii=function(){return(Lt=n.dynCall_vjjjjjjfffifiiiii=n.asm.oc).apply(null,arguments)},zt=n.dynCall_vjjjjjjjjfffiifiiiii=function(){return(zt=n.dynCall_vjjjjjjjjfffiifiiiii=n.asm.pc).apply(null,arguments)},Gt=n.dynCall_vijjfffiii=function(){return(Gt=n.dynCall_vijjfffiii=n.asm.qc).apply(null,arguments)},Bt=n.dynCall_vijiiiiiiii=function(){return(Bt=n.dynCall_vijiiiiiiii=n.asm.rc).apply(null,arguments)},Nt=n.dynCall_vijjjjjjifiiiii=function(){return(Nt=n.dynCall_vijjjjjjifiiiii=n.asm.sc).apply(null,arguments)},Vt=n.dynCall_vjjjjjiiii=function(){return(Vt=n.dynCall_vjjjjjiiii=n.asm.tc).apply(null,arguments)},qt=n.dynCall_vjjjjfiii=function(){return(qt=n.dynCall_vjjjjfiii=n.asm.uc).apply(null,arguments)},Xt=n.dynCall_viiijiiii=function(){return(Xt=n.dynCall_viiijiiii=n.asm.vc).apply(null,arguments)},Jt=n.dynCall_viiijjjii=function(){return(Jt=n.dynCall_viiijjjii=n.asm.wc).apply(null,arguments)},Zt=n.dynCall_iiij=function(){return(Zt=n.dynCall_iiij=n.asm.xc).apply(null,arguments)},Qt=n.dynCall_viiijii=function(){return(Qt=n.dynCall_viiijii=n.asm.yc).apply(null,arguments)},$t=n.dynCall_viijiiiiiiiii=function(){return($t=n.dynCall_viijiiiiiiiii=n.asm.zc).apply(null,arguments)},Kt=n.dynCall_jfi=function(){return(Kt=n.dynCall_jfi=n.asm.Ac).apply(null,arguments)},tn=n.dynCall_viji=function(){return(tn=n.dynCall_viji=n.asm.Bc).apply(null,arguments)};function nn(){function t(){if(!st&&(st=!0,n.calledRun=!0,!T)){if(V(F),r(n),n.onRuntimeInitialized&&n.onRuntimeInitialized(),n.postRun)for(\\\"function\\\"==typeof n.postRun&&(n.postRun=[n.postRun]);n.postRun.length;){var t=n.postRun.shift();I.unshift(t)}V(I)}}if(!(0<H)){if(n.preRun)for(\\\"function\\\"==typeof n.preRun&&(n.preRun=[n.preRun]);n.preRun.length;)U();V(P),0<H||(n.setStatus?(n.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){n.setStatus(\\\"\\\")}),1),t()}),1)):t())}}if(n.UTF8ToString=M,n.stringToUTF8=function(t,n,e){return x(t,C,n,e)},n.lengthBytesUTF8=R,n.stackSave=yt,n.stackRestore=vt,n.stackAlloc=mt,L=function t(){st||nn(),st||(L=t)},n.preInit)for(\\\"function\\\"==typeof n.preInit&&(n.preInit=[n.preInit]);0<n.preInit.length;)n.preInit.pop()();return nn(),t.ready});t.exports=r},154:function(t){\\\"use strict\\\";t.exports='\\\"use strict\\\";var e={},t=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node;if(t){var r=require(\\\"worker_threads\\\"),a=r.parentPort;a.on(\\\"message\\\",(e=>onmessage({data:e})));var o=require(\\\"fs\\\");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:r.Worker,importScripts:function(e){(0,eval)(o.readFileSync(e,\\\"utf8\\\"))},postMessage:function(e){a.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var s=!1,n=[],i=function(){var e=Array.prototype.slice.call(arguments).join(\\\" \\\");t?o.writeSync(2,e+\\\"\\\\\\\\n\\\"):console.error(e)};self.alert=function(){var t=Array.prototype.slice.call(arguments).join(\\\" \\\");postMessage({cmd:\\\"alert\\\",text:t,threadId:e._pthread_self()})},e.instantiateWasm=(t,r)=>{var a=new WebAssembly.Instance(e.wasmModule,t);return r(a),e.wasmModule=null,a.exports},self.onunhandledrejection=e=>{throw e.reason??e},self.onmessage=t=>{try{if(\\\"load\\\"===t.data.cmd){if(e.wasmModule=t.data.wasmModule,e.wasmMemory=t.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,\\\"string\\\"==typeof t.data.urlOrBlob)importScripts(t.data.urlOrBlob);else{var r=URL.createObjectURL(t.data.urlOrBlob);importScripts(r),URL.revokeObjectURL(r)}ortWasmThreaded(e).then((function(t){e=t}))}else if(\\\"run\\\"===t.data.cmd){e.__performance_now_clock_drift=performance.now()-t.data.time,e.__emscripten_thread_init(t.data.pthread_ptr,0,0,1),e.establishStackSpace(),e.PThread.receiveObjectTransfer(t.data),e.PThread.threadInitTLS(),s||(n.forEach((t=>{e.executeNotifiedProxyingQueue(t)})),n=[],s=!0);try{e.invokeEntryPoint(t.data.start_routine,t.data.arg)}catch(t){if(\\\"unwind\\\"!=t){if(!(t instanceof e.ExitStatus))throw t;e.keepRuntimeAlive()||e.__emscripten_thread_exit(t.status)}}}else\\\"cancel\\\"===t.data.cmd?e._pthread_self()&&e.__emscripten_thread_exit(-1):\\\"setimmediate\\\"===t.data.target||(\\\"processProxyingQueue\\\"===t.data.cmd?s?e.executeNotifiedProxyingQueue(t.data.queue):n.push(t.data.queue):(i(\\\"worker.js received unknown command \\\"+t.data.cmd),i(t.data)))}catch(t){throw i(\\\"worker.js onmessage() captured an uncaught exception: \\\"+t),t&&t.stack&&i(t.stack),e.__emscripten_thread_crashed&&e.__emscripten_thread_crashed(),t}};\\\\n'},384:function(){},993:function(){},908:function(){},953:function(){},925:function(){},449:function(){}},n={};function e(r){var i=n[r];if(void 0!==i)return i.exports;var a=n[r]={exports:{}};return t[r].call(a.exports,a,a.exports,e),a.exports}e.g=function(){if(\\\"object\\\"==typeof globalThis)return globalThis;try{return this||new Function(\\\"return this\\\")()}catch(t){if(\\\"object\\\"==typeof window)return window}}(),function(){\\\"use strict\\\";var t=e(259),n=e(263);self.onmessage=function(e){switch(e.data.type){case\\\"init-wasm\\\":(0,n.initializeWebAssembly)(e.data.in).then((function(){return postMessage({type:\\\"init-wasm\\\"})}),(function(t){return postMessage({type:\\\"init-wasm\\\",err:t})}));break;case\\\"init-ort\\\":try{var r=e.data.in,i=r.numThreads,a=r.loggingLevel;(0,t.initOrt)(i,a),postMessage({type:\\\"init-ort\\\"})}catch(t){postMessage({type:\\\"init-ort\\\",err:t})}break;case\\\"create_allocate\\\":try{var o=e.data.in.model,u=(0,t.createSessionAllocate)(o);postMessage({type:\\\"create_allocate\\\",out:u})}catch(t){postMessage({type:\\\"create_allocate\\\",err:t})}break;case\\\"create_finalize\\\":try{var c=e.data.in,l=(u=c.modeldata,c.options),f=(0,t.createSessionFinalize)(u,l);postMessage({type:\\\"create_finalize\\\",out:f})}catch(t){postMessage({type:\\\"create_finalize\\\",err:t})}break;case\\\"create\\\":try{var s=e.data.in;o=s.model,l=s.options,f=(0,t.createSession)(o,l),postMessage({type:\\\"create\\\",out:f})}catch(t){postMessage({type:\\\"create\\\",err:t})}break;case\\\"release\\\":try{var p=e.data.in;(0,t.releaseSession)(p),postMessage({type:\\\"release\\\"})}catch(t){postMessage({type:\\\"release\\\",err:t})}break;case\\\"run\\\":try{var h=e.data.in,d=h.sessionId,y=h.inputIndices,v=h.inputs,m=h.outputIndices;l=h.options,(0,t.run)(d,y,v,m,l).then((function(n){postMessage({type:\\\"run\\\",out:n},(0,t.extractTransferableBuffers)(n))}),(function(t){postMessage({type:\\\"run\\\",err:t})}))}catch(t){postMessage({type:\\\"run\\\",err:t})}break;case\\\"end-profiling\\\":try{p=e.data.in,(0,t.endProfiling)(p),postMessage({type:\\\"end-profiling\\\"})}catch(t){postMessage({type:\\\"end-profiling\\\",err:t})}}}}()}();\\n\", \"Worker\", undefined, undefined);\n}\n","\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","var _scriptDir,t=(_scriptDir=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\"undefined\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(t){function n(){return k.buffer!=R&&B(k.buffer),D}function r(){return k.buffer!=R&&B(k.buffer),F}function e(){return k.buffer!=R&&B(k.buffer),Y}function i(){return k.buffer!=R&&B(k.buffer),I}function a(){return k.buffer!=R&&B(k.buffer),W}var u,o,c;t=t||{},u||(u=void 0!==t?t:{}),u.ready=new Promise((function(t,n){o=t,c=n}));var f,l,s,d,h,p,y=Object.assign({},u),m=\"./this.program\",v=(t,n)=>{throw n},_=\"object\"==typeof window,g=\"function\"==typeof importScripts,w=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,j=u.ENVIRONMENT_IS_PTHREAD||!1,b=\"\";function C(t){return u.locateFile?u.locateFile(t,b):b+t}if(w){let t;b=g?require(\"path\").dirname(b)+\"/\":__dirname+\"/\",p=()=>{h||(d=require(\"fs\"),h=require(\"path\"))},f=function(t,n){return p(),t=h.normalize(t),d.readFileSync(t,n?void 0:\"utf8\")},s=t=>((t=f(t,!0)).buffer||(t=new Uint8Array(t)),t),l=(t,n,r)=>{p(),t=h.normalize(t),d.readFile(t,(function(t,e){t?r(t):n(e.buffer)}))},1<process.argv.length&&(m=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",(function(t){if(!(t instanceof at))throw t})),process.on(\"unhandledRejection\",(function(t){throw t})),v=(t,n)=>{if(x)throw process.exitCode=t,n;n instanceof at||S(\"exiting due to exception: \"+n),process.exit(t)},u.inspect=function(){return\"[Emscripten Module object]\"};try{t=require(\"worker_threads\")}catch(t){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),t}global.Worker=t.Worker}else(_||g)&&(g?b=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(b=document.currentScript.src),_scriptDir&&(b=_scriptDir),b=0!==b.indexOf(\"blob:\")?b.substr(0,b.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):\"\",w||(f=t=>{var n=new XMLHttpRequest;return n.open(\"GET\",t,!1),n.send(null),n.responseText},g&&(s=t=>{var n=new XMLHttpRequest;return n.open(\"GET\",t,!1),n.responseType=\"arraybuffer\",n.send(null),new Uint8Array(n.response)}),l=(t,n,r)=>{var e=new XMLHttpRequest;e.open(\"GET\",t,!0),e.responseType=\"arraybuffer\",e.onload=()=>{200==e.status||0==e.status&&e.response?n(e.response):r()},e.onerror=r,e.send(null)}));w&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);var O=console.log.bind(console),T=console.warn.bind(console);w&&(p(),O=t=>d.writeSync(1,t+\"\\n\"),T=t=>d.writeSync(2,t+\"\\n\"));var A,M=u.print||O,S=u.printErr||T;Object.assign(u,y),y=null,u.thisProgram&&(m=u.thisProgram),u.quit&&(v=u.quit),u.wasmBinary&&(A=u.wasmBinary);var x=u.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&nt(\"no native wasm support detected\");var k,E,R,D,F,Y,I,W,P=!1,U=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function H(t,n,r){var e=(n>>>=0)+r;for(r=n;t[r]&&!(r>=e);)++r;if(16<r-n&&t.buffer&&U)return U.decode(t.buffer instanceof SharedArrayBuffer?t.slice(n,r):t.subarray(n,r));for(e=\"\";n<r;){var i=t[n++];if(128&i){var a=63&t[n++];if(192==(224&i))e+=String.fromCharCode((31&i)<<6|a);else{var u=63&t[n++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|u:(7&i)<<18|a<<12|u<<6|63&t[n++])?e+=String.fromCharCode(i):(i-=65536,e+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else e+=String.fromCharCode(i)}return e}function V(t,n){return(t>>>=0)?H(r(),t,n):\"\"}function q(t,n,r,e){if(!(0<e))return 0;var i=r>>>=0;e=r+e-1;for(var a=0;a<t.length;++a){var u=t.charCodeAt(a);if(55296<=u&&57343>=u&&(u=65536+((1023&u)<<10)|1023&t.charCodeAt(++a)),127>=u){if(r>=e)break;n[r++>>>0]=u}else{if(2047>=u){if(r+1>=e)break;n[r++>>>0]=192|u>>6}else{if(65535>=u){if(r+2>=e)break;n[r++>>>0]=224|u>>12}else{if(r+3>=e)break;n[r++>>>0]=240|u>>18,n[r++>>>0]=128|u>>12&63}n[r++>>>0]=128|u>>6&63}n[r++>>>0]=128|63&u}}return n[r>>>0]=0,r-i}function G(t){for(var n=0,r=0;r<t.length;++r){var e=t.charCodeAt(r);127>=e?n++:2047>=e?n+=2:55296<=e&&57343>=e?(n+=4,++r):n+=3}return n}function B(t){R=t,u.HEAP8=D=new Int8Array(t),u.HEAP16=new Int16Array(t),u.HEAP32=Y=new Int32Array(t),u.HEAPU8=F=new Uint8Array(t),u.HEAPU16=new Uint16Array(t),u.HEAPU32=I=new Uint32Array(t),u.HEAPF32=new Float32Array(t),u.HEAPF64=W=new Float64Array(t)}j&&(R=u.buffer);var z=u.INITIAL_MEMORY||16777216;if(j)k=u.wasmMemory,R=u.buffer;else if(u.wasmMemory)k=u.wasmMemory;else if(!((k=new WebAssembly.Memory({initial:z/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw S(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),w&&console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\"),Error(\"bad memory\");k&&(R=k.buffer),z=R.byteLength,B(R);var N,L=[],X=[],Z=[];function $(){var t=u.preRun.shift();L.unshift(t)}var Q,J=0,K=null,tt=null;function nt(t){throw j?postMessage({cmd:\"onAbort\",arg:t}):u.onAbort&&u.onAbort(t),S(t=\"Aborted(\"+t+\")\"),P=!0,t=new WebAssembly.RuntimeError(t+\". Build with -sASSERTIONS for more info.\"),c(t),t}function rt(){return Q.startsWith(\"data:application/octet-stream;base64,\")}function et(){var t=Q;try{if(t==Q&&A)return new Uint8Array(A);if(s)return s(t);throw\"both async and sync fetching of the wasm failed\"}catch(t){nt(t)}}Q=\"ort-wasm-threaded.wasm\",rt()||(Q=C(Q));var it={};function at(t){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+t+\")\",this.status=t}function ut(t){(t=lt.Yc[t])||nt(),lt.pd(t)}function ot(t){var n=lt.Ed();if(!n)return 6;lt.gd.push(n),lt.Yc[t.Xc]=n,n.Xc=t.Xc;var r={cmd:\"run\",start_routine:t.Kd,arg:t.yd,pthread_ptr:t.Xc};return n.ed=()=>{r.time=performance.now(),n.postMessage(r,t.Qd)},n.loaded&&(n.ed(),delete n.ed),0}function ct(t){if(j)return Gt(1,1,t);x||(lt.Ld(),u.onExit&&u.onExit(t),P=!0),v(t,new at(t))}function ft(t,n){if(!n&&j)throw dt(t),\"unwind\";ct(t)}var lt={ad:[],gd:[],sd:[],Yc:{},kd:function(){j&&lt.Gd()},Sd:function(){},Gd:function(){lt.receiveObjectTransfer=lt.Id,lt.threadInitTLS=lt.rd,lt.setExitStatus=lt.qd,x=!1},qd:function(){},Ld:function(){for(var t of Object.values(lt.Yc))lt.pd(t);for(t of lt.ad)t.terminate();lt.ad=[]},pd:function(t){var n=t.Xc;delete lt.Yc[n],lt.ad.push(t),lt.gd.splice(lt.gd.indexOf(t),1),t.Xc=0,mn(n)},Id:function(){},rd:function(){lt.sd.forEach((t=>t()))},Hd:function(t,n){t.onmessage=r=>{var e=(r=r.data).cmd;if(t.Xc&&(lt.Cd=t.Xc),r.targetThread&&r.targetThread!=fn()){var i=lt.Yc[r.Td];i?i.postMessage(r,r.transferList):S('Internal error! Worker sent a message \"'+e+'\" to target pthread '+r.targetThread+\", but that thread no longer exists!\")}else\"processProxyingQueue\"===e?Wt(r.queue):\"spawnThread\"===e?ot(r):\"cleanupThread\"===e?ut(r.thread):\"killThread\"===e?(r=r.thread,e=lt.Yc[r],delete lt.Yc[r],e.terminate(),mn(r),lt.gd.splice(lt.gd.indexOf(e),1),e.Xc=0):\"cancelThread\"===e?lt.Yc[r.thread].postMessage({cmd:\"cancel\"}):\"loaded\"===e?(t.loaded=!0,n&&n(t),t.ed&&(t.ed(),delete t.ed)):\"print\"===e?M(\"Thread \"+r.threadId+\": \"+r.text):\"printErr\"===e?S(\"Thread \"+r.threadId+\": \"+r.text):\"alert\"===e?alert(\"Thread \"+r.threadId+\": \"+r.text):\"setimmediate\"===r.target?t.postMessage(r):\"onAbort\"===e?u.onAbort&&u.onAbort(r.arg):e&&S(\"worker sent an unknown command \"+e);lt.Cd=void 0},t.onerror=t=>{throw S(\"worker sent an error! \"+t.filename+\":\"+t.lineno+\": \"+t.message),t},w&&(t.on(\"message\",(function(n){t.onmessage({data:n})})),t.on(\"error\",(function(n){t.onerror(n)})),t.on(\"detachedExit\",(function(){}))),t.postMessage({cmd:\"load\",urlOrBlob:u.mainScriptUrlOrBlob||_scriptDir,wasmMemory:k,wasmModule:E})},xd:function(){var t=C(\"ort-wasm-threaded.worker.js\");lt.ad.push(new Worker(t))},Ed:function(){return 0==lt.ad.length&&(lt.xd(),lt.Hd(lt.ad[0])),lt.ad.pop()}};function st(t){for(;0<t.length;)t.shift()(u)}function dt(t){if(j)return Gt(2,0,t);try{ft(t)}catch(t){t instanceof at||\"unwind\"==t||v(1,t)}}u.PThread=lt,u.establishStackSpace=function(){var t=fn(),n=e()[t+44>>2>>>0];t=e()[t+48>>2>>>0],gn(n,n-t),jn(n)};var ht=[];function pt(t){var n=ht[t];return n||(t>=ht.length&&(ht.length=t+1),ht[t]=n=N.get(t)),n}u.invokeEntryPoint=function(t,n){t=pt(t)(n),x?lt.qd(t):vn(t)};var yt,mt,vt=[],_t=0,gt=0;function wt(t){this.dd=t,this.Vc=t-24,this.Dd=function(t){i()[this.Vc+4>>2>>>0]=t},this.bd=function(){return i()[this.Vc+4>>2>>>0]},this.zd=function(t){i()[this.Vc+8>>2>>>0]=t},this.Fd=function(){return i()[this.Vc+8>>2>>>0]},this.Bd=function(){e()[this.Vc>>2>>>0]=0},this.ld=function(t){t=t?1:0,n()[this.Vc+12>>0>>>0]=t},this.td=function(){return 0!=n()[this.Vc+12>>0>>>0]},this.md=function(t){t=t?1:0,n()[this.Vc+13>>0>>>0]=t},this.od=function(){return 0!=n()[this.Vc+13>>0>>>0]},this.kd=function(t,n){this.cd(0),this.Dd(t),this.zd(n),this.Bd(),this.ld(!1),this.md(!1)},this.ud=function(){Atomics.add(e(),this.Vc>>2,1)},this.Jd=function(){return 1===Atomics.sub(e(),this.Vc>>2,1)},this.cd=function(t){i()[this.Vc+16>>2>>>0]=t},this.vd=function(){return i()[this.Vc+16>>2>>>0]},this.wd=function(){if(On(this.bd()))return i()[this.dd>>2>>>0];var t=this.vd();return 0!==t?t:this.dd}}function jt(t){return sn(new wt(t).Vc)}function bt(t,n,r,e){return j?Gt(3,1,t,n,r,e):Ct(t,n,r,e)}function Ct(t,n,r,e){if(\"undefined\"==typeof SharedArrayBuffer)return S(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;var i=[];return j&&0===i.length?bt(t,n,r,e):(t={Kd:r,Xc:t,yd:e,Qd:i},j?(t.Rd=\"spawnThread\",postMessage(t,i),0):ot(t))}function Ot(t,n,r){return j?Gt(4,1,t,n,r):0}function Tt(t,n){if(j)return Gt(5,1,t,n)}function At(t,n){if(j)return Gt(6,1,t,n)}function Mt(t,n,r){if(j)return Gt(7,1,t,n,r)}function St(t,n,r){return j?Gt(8,1,t,n,r):0}function xt(t,n){if(j)return Gt(9,1,t,n)}function kt(t,n,r){if(j)return Gt(10,1,t,n,r)}function Et(t,n,r,e){if(j)return Gt(11,1,t,n,r,e)}function Rt(t,n,r,e){if(j)return Gt(12,1,t,n,r,e)}function Dt(t,n,r,e){if(j)return Gt(13,1,t,n,r,e)}function Ft(t){if(j)return Gt(14,1,t)}function Yt(t,n){if(j)return Gt(15,1,t,n)}function It(t,n,r){if(j)return Gt(16,1,t,n,r)}function Wt(t){Atomics.store(e(),t>>2,1),fn()&&yn(t),Atomics.compareExchange(e(),t>>2,1,0)}function Pt(t){return i()[t>>>2]+4294967296*e()[t+4>>>2]}function Ut(t,n,r,e,i,a){return j?Gt(17,1,t,n,r,e,i,a):-52}function Ht(t,n,r,e,i,a){if(j)return Gt(18,1,t,n,r,e,i,a)}function Vt(t){var r=G(t)+1,e=ln(r);return e&&q(t,n(),e,r),e}function qt(t,n,r){function a(t){return(t=t.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?t[1]:\"GMT\"}if(j)return Gt(19,1,t,n,r);var u=(new Date).getFullYear(),o=new Date(u,0,1),c=new Date(u,6,1);u=o.getTimezoneOffset();var f=c.getTimezoneOffset(),l=Math.max(u,f);e()[t>>2>>>0]=60*l,e()[n>>2>>>0]=Number(u!=f),t=a(o),n=a(c),t=Vt(t),n=Vt(n),f<u?(i()[r>>2>>>0]=t,i()[r+4>>2>>>0]=n):(i()[r>>2>>>0]=n,i()[r+4>>2>>>0]=t)}function Gt(t,n){var r=arguments.length-2,e=arguments;return function(t){var n=wn();return t=t(),jn(n),t}((()=>{for(var i=bn(8*r),u=i>>3,o=0;o<r;o++){var c=e[2+o];a()[u+o>>>0]=c}return pn(t,r,i,n)}))}u.executeNotifiedProxyingQueue=Wt,mt=w?()=>{var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:j?()=>performance.now()-u.__performance_now_clock_drift:()=>performance.now();var Bt,zt=[],Nt={};function Lt(){if(!Bt){var t,n={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:m||\"./this.program\"};for(t in Nt)void 0===Nt[t]?delete n[t]:n[t]=Nt[t];var r=[];for(t in n)r.push(t+\"=\"+n[t]);Bt=r}return Bt}function Xt(t,r){if(j)return Gt(20,1,t,r);var e=0;return Lt().forEach((function(a,u){var o=r+e;for(u=i()[t+4*u>>2>>>0]=o,o=0;o<a.length;++o)n()[u++>>0>>>0]=a.charCodeAt(o);n()[u>>0>>>0]=0,e+=a.length+1})),0}function Zt(t,n){if(j)return Gt(21,1,t,n);var r=Lt();i()[t>>2>>>0]=r.length;var e=0;return r.forEach((function(t){e+=t.length+1})),i()[n>>2>>>0]=e,0}function $t(t){return j?Gt(22,1,t):52}function Qt(t,n,r,e){return j?Gt(23,1,t,n,r,e):52}function Jt(t,n,r,e,i){return j?Gt(24,1,t,n,r,e,i):70}var Kt=[null,[],[]];function tn(t,n,e,a){if(j)return Gt(25,1,t,n,e,a);for(var u=0,o=0;o<e;o++){var c=i()[n>>2>>>0],f=i()[n+4>>2>>>0];n+=8;for(var l=0;l<f;l++){var s=r()[c+l>>>0],d=Kt[t];0===s||10===s?((1===t?M:S)(H(d,0)),d.length=0):d.push(s)}u+=f}return i()[a>>2>>>0]=u,0}var nn=0;function rn(t){return 0==t%4&&(0!=t%100||0==t%400)}var en=[31,29,31,30,31,30,31,31,30,31,30,31],an=[31,28,31,30,31,30,31,31,30,31,30,31];function un(t,r,i,a){function u(t,n,r){for(t=\"number\"==typeof t?t.toString():t||\"\";t.length<n;)t=r[0]+t;return t}function o(t,n){return u(t,n,\"0\")}function c(t,n){function r(t){return 0>t?-1:0<t?1:0}var e;return 0===(e=r(t.getFullYear()-n.getFullYear()))&&0===(e=r(t.getMonth()-n.getMonth()))&&(e=r(t.getDate()-n.getDate())),e}function f(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function l(t){var n=t.Zc;for(t=new Date(new Date(t.$c+1900,0,1).getTime());0<n;){var r=t.getMonth(),e=(rn(t.getFullYear())?en:an)[r];if(!(n>e-t.getDate())){t.setDate(t.getDate()+n);break}n-=e-t.getDate()+1,t.setDate(1),11>r?t.setMonth(r+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return r=new Date(t.getFullYear()+1,0,4),n=f(new Date(t.getFullYear(),0,4)),r=f(r),0>=c(n,t)?0>=c(r,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var s=e()[a+40>>2>>>0];for(var d in a={Od:e()[a>>2>>>0],Nd:e()[a+4>>2>>>0],hd:e()[a+8>>2>>>0],nd:e()[a+12>>2>>>0],jd:e()[a+16>>2>>>0],$c:e()[a+20>>2>>>0],Wc:e()[a+24>>2>>>0],Zc:e()[a+28>>2>>>0],Ud:e()[a+32>>2>>>0],Md:e()[a+36>>2>>>0],Pd:s?V(s):\"\"},i=V(i),s={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"})i=i.replace(new RegExp(d,\"g\"),s[d]);var h=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),p=\"January February March April May June July August September October November December\".split(\" \");for(d in s={\"%a\":function(t){return h[t.Wc].substring(0,3)},\"%A\":function(t){return h[t.Wc]},\"%b\":function(t){return p[t.jd].substring(0,3)},\"%B\":function(t){return p[t.jd]},\"%C\":function(t){return o((t.$c+1900)/100|0,2)},\"%d\":function(t){return o(t.nd,2)},\"%e\":function(t){return u(t.nd,2,\" \")},\"%g\":function(t){return l(t).toString().substring(2)},\"%G\":function(t){return l(t)},\"%H\":function(t){return o(t.hd,2)},\"%I\":function(t){return 0==(t=t.hd)?t=12:12<t&&(t-=12),o(t,2)},\"%j\":function(t){for(var n=0,r=0;r<=t.jd-1;n+=(rn(t.$c+1900)?en:an)[r++]);return o(t.nd+n,3)},\"%m\":function(t){return o(t.jd+1,2)},\"%M\":function(t){return o(t.Nd,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(t){return 0<=t.hd&&12>t.hd?\"AM\":\"PM\"},\"%S\":function(t){return o(t.Od,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(t){return t.Wc||7},\"%U\":function(t){return o(Math.floor((t.Zc+7-t.Wc)/7),2)},\"%V\":function(t){var n=Math.floor((t.Zc+7-(t.Wc+6)%7)/7);if(2>=(t.Wc+371-t.Zc-2)%7&&n++,n)53==n&&(4==(r=(t.Wc+371-t.Zc)%7)||3==r&&rn(t.$c)||(n=1));else{n=52;var r=(t.Wc+7-t.Zc-1)%7;(4==r||5==r&&rn(t.$c%400-1))&&n++}return o(n,2)},\"%w\":function(t){return t.Wc},\"%W\":function(t){return o(Math.floor((t.Zc+7-(t.Wc+6)%7)/7),2)},\"%y\":function(t){return(t.$c+1900).toString().substring(2)},\"%Y\":function(t){return t.$c+1900},\"%z\":function(t){var n=0<=(t=t.Md);return t=Math.abs(t)/60,(n?\"+\":\"-\")+String(\"0000\"+(t/60*100+t%60)).slice(-4)},\"%Z\":function(t){return t.Pd},\"%%\":function(){return\"%\"}},i=i.replace(/%%/g,\"\\0\\0\"),s)i.includes(d)&&(i=i.replace(new RegExp(d,\"g\"),s[d](a)));return d=function(t){var n=Array(G(t)+1);return q(t,n,0,n.length),n}(i=i.replace(/\\0\\0/g,\"%\")),d.length>r?0:(function(t,r){n().set(t,r>>>0)}(d,t),d.length-1)}lt.kd();var on=[null,ct,dt,bt,Ot,Tt,At,Mt,St,xt,kt,Et,Rt,Dt,Ft,Yt,It,Ut,Ht,qt,Xt,Zt,$t,Qt,Jt,tn],cn={k:function(t){return ln(t+24)+24},r:function(t){return(t=new wt(t)).td()||(t.ld(!0),_t--),t.md(!1),vt.push(t),t.ud(),t.wd()},ja:function(t){throw S(\"Unexpected exception thrown, this is not properly supported - aborting\"),P=!0,t},C:function(){_n(0);var t=vt.pop();if(t.Jd()&&!t.od()){var n=t.Fd();n&&pt(n)(t.dd),jt(t.dd)}gt=0},c:function(){var t=gt;if(!t)return nn=0;var n=new wt(t);n.cd(t);var r=n.bd();if(!r)return nn=0,t;for(var e=Array.prototype.slice.call(arguments),i=0;i<e.length;i++){var a=e[i];if(0===a||a===r)break;if(Cn(a,r,n.Vc+16))return nn=a,t}return nn=r,t},m:function(){var t=gt;if(!t)return nn=0;var n=new wt(t);n.cd(t);var r=n.bd();if(!r)return nn=0,t;for(var e=Array.prototype.slice.call(arguments),i=0;i<e.length;i++){var a=e[i];if(0===a||a===r)break;if(Cn(a,r,n.Vc+16))return nn=a,t}return nn=r,t},v:function(){var t=gt;if(!t)return nn=0;var n=new wt(t);n.cd(t);var r=n.bd();if(!r)return nn=0,t;for(var e=Array.prototype.slice.call(arguments),i=0;i<e.length;i++){var a=e[i];if(0===a||a===r)break;if(Cn(a,r,n.Vc+16))return nn=a,t}return nn=r,t},o:function(){var t=gt;if(!t)return nn=0;var n=new wt(t);n.cd(t);var r=n.bd();if(!r)return nn=0,t;for(var e=Array.prototype.slice.call(arguments),i=0;i<e.length;i++){var a=e[i];if(0===a||a===r)break;if(Cn(a,r,n.Vc+16))return nn=a,t}return nn=r,t},n:jt,U:function(){var t=vt.pop();t||nt(\"no exception to throw\");var n=t.dd;throw t.od()||(vt.push(t),t.md(!0),t.ld(!1),_t++),gt=n,n},w:function(t,n,r){throw new wt(t).kd(n,r),gt=t,_t++,t},ma:function(){return _t},Ga:function(t){dn(t,!g,1,!_),lt.rd()},aa:function(t){j?postMessage({cmd:\"cleanupThread\",thread:t}):ut(t)},xa:Ct,g:function(t){throw gt||(gt=t),t},V:Ot,Ma:Tt,ta:At,va:Mt,la:St,Ka:xt,Da:kt,Ja:Et,ca:Rt,ua:Dt,ra:Ft,La:Yt,sa:It,qb:function(){},X:function(){nt(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Bb:function(){nt(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},da:function(){return Date.now()},ya:function(){return 2097152},Oa:function(){return!0},za:function(t,n,r,e){if(t==n)setTimeout((()=>Wt(e)));else if(j)postMessage({targetThread:t,cmd:\"processProxyingQueue\",queue:e});else{if(!(t=lt.Yc[t]))return;t.postMessage({cmd:\"processProxyingQueue\",queue:e})}return 1},Fa:function(){return-1},Pa:function(t,n){t=new Date(1e3*Pt(t)),e()[n>>2>>>0]=t.getUTCSeconds(),e()[n+4>>2>>>0]=t.getUTCMinutes(),e()[n+8>>2>>>0]=t.getUTCHours(),e()[n+12>>2>>>0]=t.getUTCDate(),e()[n+16>>2>>>0]=t.getUTCMonth(),e()[n+20>>2>>>0]=t.getUTCFullYear()-1900,e()[n+24>>2>>>0]=t.getUTCDay(),t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,e()[n+28>>2>>>0]=t},Qa:function(t,n){t=new Date(1e3*Pt(t)),e()[n>>2>>>0]=t.getSeconds(),e()[n+4>>2>>>0]=t.getMinutes(),e()[n+8>>2>>>0]=t.getHours(),e()[n+12>>2>>>0]=t.getDate(),e()[n+16>>2>>>0]=t.getMonth(),e()[n+20>>2>>>0]=t.getFullYear()-1900,e()[n+24>>2>>>0]=t.getDay();var r=new Date(t.getFullYear(),0,1),i=(t.getTime()-r.getTime())/864e5|0;e()[n+28>>2>>>0]=i,e()[n+36>>2>>>0]=-60*t.getTimezoneOffset(),i=new Date(t.getFullYear(),6,1).getTimezoneOffset(),t=0|(i!=(r=r.getTimezoneOffset())&&t.getTimezoneOffset()==Math.min(r,i)),e()[n+32>>2>>>0]=t},Ra:function(t){var n=new Date(e()[t+20>>2>>>0]+1900,e()[t+16>>2>>>0],e()[t+12>>2>>>0],e()[t+8>>2>>>0],e()[t+4>>2>>>0],e()[t>>2>>>0],0),r=e()[t+32>>2>>>0],i=n.getTimezoneOffset(),a=new Date(n.getFullYear(),0,1),u=new Date(n.getFullYear(),6,1).getTimezoneOffset(),o=a.getTimezoneOffset(),c=Math.min(o,u);return 0>r?e()[t+32>>2>>>0]=Number(u!=o&&c==i):0<r!=(c==i)&&(u=Math.max(o,u),n.setTime(n.getTime()+6e4*((0<r?c:u)-i))),e()[t+24>>2>>>0]=n.getDay(),r=(n.getTime()-a.getTime())/864e5|0,e()[t+28>>2>>>0]=r,e()[t>>2>>>0]=n.getSeconds(),e()[t+4>>2>>>0]=n.getMinutes(),e()[t+8>>2>>>0]=n.getHours(),e()[t+12>>2>>>0]=n.getDate(),e()[t+16>>2>>>0]=n.getMonth(),n.getTime()/1e3|0},Ba:Ut,Ca:Ht,Xa:function t(n,r,e){t.Ad||(t.Ad=!0,qt(n,r,e))},R:function(){nt(\"\")},ba:function(){if(!w&&!g){var t=\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\";yt||(yt={}),yt[t]||(yt[t]=1,w&&(t=\"warning: \"+t),S(t))}},oa:function(){return 4294901760},F:mt,Aa:function(t,n,e){r().copyWithin(t>>>0,n>>>0,n+e>>>0)},pa:function(){return w?require(\"os\").cpus().length:navigator.hardwareConcurrency},Ea:function(t,n,r){zt.length=n,r>>=3;for(var e=0;e<n;e++)zt[e]=a()[r+e>>>0];return(0>t?it[-t-1]:on[t]).apply(null,zt)},na:function(t){var n=r().length;if((t>>>=0)<=n||4294901760<t)return!1;for(var e=1;4>=e;e*=2){var i=n*(1+.2/e);i=Math.min(i,t+100663296);var a=Math;i=Math.max(t,i),a=a.min.call(a,4294901760,i+(65536-i%65536)%65536);t:{try{k.grow(a-R.byteLength+65535>>>16),B(k.buffer);var u=1;break t}catch(t){}u=void 0}if(u)return!0}return!1},Na:function(){throw\"unwind\"},Ha:Xt,Ia:Zt,wa:ft,T:$t,$:Qt,Ab:Jt,qa:tn,b:function(){return nn},ea:function(t,n,r){var e=wn();try{return pt(t)(n,r)}catch(t){if(jn(e),t!==t+0)throw t;_n(1,0)}},E:function(t,n,r,e,i,a,u){var o=wn();try{return pt(t)(n,r,e,i,a,u)}catch(t){if(jn(o),t!==t+0)throw t;_n(1,0)}},y:function(t){var n=wn();try{return pt(t)()}catch(t){if(jn(n),t!==t+0)throw t;_n(1,0)}},d:function(t,n){var r=wn();try{return pt(t)(n)}catch(t){if(jn(r),t!==t+0)throw t;_n(1,0)}},W:function(t,n,r){var e=wn();try{return pt(t)(n,r)}catch(t){if(jn(e),t!==t+0)throw t;_n(1,0)}},S:function(t,n,r){var e=wn();try{return pt(t)(n,r)}catch(t){if(jn(e),t!==t+0)throw t;_n(1,0)}},l:function(t,n,r){var e=wn();try{return pt(t)(n,r)}catch(t){if(jn(e),t!==t+0)throw t;_n(1,0)}},h:function(t,n,r,e){var i=wn();try{return pt(t)(n,r,e)}catch(t){if(jn(i),t!==t+0)throw t;_n(1,0)}},j:function(t,n,r,e,i){var a=wn();try{return pt(t)(n,r,e,i)}catch(t){if(jn(a),t!==t+0)throw t;_n(1,0)}},p:function(t,n,r,e,i,a){var u=wn();try{return pt(t)(n,r,e,i,a)}catch(t){if(jn(u),t!==t+0)throw t;_n(1,0)}},z:function(t,n,r,e,i,a,u){var o=wn();try{return pt(t)(n,r,e,i,a,u)}catch(t){if(jn(o),t!==t+0)throw t;_n(1,0)}},M:function(t,n,r,e,i,a,u,o){var c=wn();try{return pt(t)(n,r,e,i,a,u,o)}catch(t){if(jn(c),t!==t+0)throw t;_n(1,0)}},_:function(t,n,r,e,i,a,u,o,c,f,l){var s=wn();try{return pt(t)(n,r,e,i,a,u,o,c,f,l)}catch(t){if(jn(s),t!==t+0)throw t;_n(1,0)}},O:function(t,n,r,e,i,a,u,o,c,f,l,s){var d=wn();try{return pt(t)(n,r,e,i,a,u,o,c,f,l,s)}catch(t){if(jn(d),t!==t+0)throw t;_n(1,0)}},wb:function(t,n,r,e,i,a,u){var o=wn();try{return Mn(t,n,r,e,i,a,u)}catch(t){if(jn(o),t!==t+0)throw t;_n(1,0)}},kb:function(t,n,r,e,i,a,u,o,c,f){var l=wn();try{return Un(t,n,r,e,i,a,u,o,c,f)}catch(t){if(jn(l),t!==t+0)throw t;_n(1,0)}},Sa:function(t,n,r,e,i){var a=wn();try{return tr(t,n,r,e,i)}catch(t){if(jn(a),t!==t+0)throw t;_n(1,0)}},jb:function(t,n,r,e,i,a,u,o,c){var f=wn();try{return Hn(t,n,r,e,i,a,u,o,c)}catch(t){if(jn(f),t!==t+0)throw t;_n(1,0)}},zb:function(t,n,r,e){var i=wn();try{return An(t,n,r,e)}catch(t){if(jn(i),t!==t+0)throw t;_n(1,0)}},Ta:function(t){var n=wn();try{return Tn(t)}catch(t){if(jn(n),t!==t+0)throw t;_n(1,0)}},Za:function(t,n,r){var e=wn();try{return er(t,n,r)}catch(t){if(jn(e),t!==t+0)throw t;_n(1,0)}},ub:function(t,n){var r=wn();try{return Rn(t,n)}catch(t){if(jn(r),t!==t+0)throw t;_n(1,0)}},tb:function(t,n,r){var e=wn();try{return xn(t,n,r)}catch(t){if(jn(e),t!==t+0)throw t;_n(1,0)}},ib:function(t,n,r,e){var i=wn();try{return Vn(t,n,r,e)}catch(t){if(jn(i),t!==t+0)throw t;_n(1,0)}},lb:function(t,n,r,e,i){var a=wn();try{return Pn(t,n,r,e,i)}catch(t){if(jn(a),t!==t+0)throw t;_n(1,0)}},e:function(t){var n=wn();try{pt(t)()}catch(t){if(jn(n),t!==t+0)throw t;_n(1,0)}},u:function(t,n){var r=wn();try{pt(t)(n)}catch(t){if(jn(r),t!==t+0)throw t;_n(1,0)}},i:function(t,n,r){var e=wn();try{pt(t)(n,r)}catch(t){if(jn(e),t!==t+0)throw t;_n(1,0)}},G:function(t,n,r,e,i){var a=wn();try{pt(t)(n,r,e,i)}catch(t){if(jn(a),t!==t+0)throw t;_n(1,0)}},f:function(t,n,r,e){var i=wn();try{pt(t)(n,r,e)}catch(t){if(jn(i),t!==t+0)throw t;_n(1,0)}},Z:function(t,n,r,e,i){var a=wn();try{pt(t)(n,r,e,i)}catch(t){if(jn(a),t!==t+0)throw t;_n(1,0)}},s:function(t,n,r,e,i){var a=wn();try{pt(t)(n,r,e,i)}catch(t){if(jn(a),t!==t+0)throw t;_n(1,0)}},q:function(t,n,r,e,i,a){var u=wn();try{pt(t)(n,r,e,i,a)}catch(t){if(jn(u),t!==t+0)throw t;_n(1,0)}},x:function(t,n,r,e,i,a,u){var o=wn();try{pt(t)(n,r,e,i,a,u)}catch(t){if(jn(o),t!==t+0)throw t;_n(1,0)}},I:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y){var m=wn();try{pt(t)(n,r,e,i,a,u,o,c,f,l,s,d,h,p,y)}catch(t){if(jn(m),t!==t+0)throw t;_n(1,0)}},P:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m){var v=wn();try{pt(t)(n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m)}catch(t){if(jn(v),t!==t+0)throw t;_n(1,0)}},H:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p){var y=wn();try{pt(t)(n,r,e,i,a,u,o,c,f,l,s,d,h,p)}catch(t){if(jn(y),t!==t+0)throw t;_n(1,0)}},A:function(t,n,r,e,i,a,u,o){var c=wn();try{pt(t)(n,r,e,i,a,u,o)}catch(t){if(jn(c),t!==t+0)throw t;_n(1,0)}},D:function(t,n,r,e,i,a,u,o,c){var f=wn();try{pt(t)(n,r,e,i,a,u,o,c)}catch(t){if(jn(f),t!==t+0)throw t;_n(1,0)}},J:function(t,n,r,e,i,a,u,o,c,f){var l=wn();try{pt(t)(n,r,e,i,a,u,o,c,f)}catch(t){if(jn(l),t!==t+0)throw t;_n(1,0)}},Y:function(t,n,r,e,i,a,u,o,c,f,l,s){var d=wn();try{pt(t)(n,r,e,i,a,u,o,c,f,l,s)}catch(t){if(jn(d),t!==t+0)throw t;_n(1,0)}},fa:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h){var p=wn();try{pt(t)(n,r,e,i,a,u,o,c,f,l,s,d,h)}catch(t){if(jn(p),t!==t+0)throw t;_n(1,0)}},L:function(t,n,r,e,i,a,u,o,c,f,l){var s=wn();try{pt(t)(n,r,e,i,a,u,o,c,f,l)}catch(t){if(jn(s),t!==t+0)throw t;_n(1,0)}},ga:function(t,n,r,e,i,a,u,o,c,f,l,s){var d=wn();try{pt(t)(n,r,e,i,a,u,o,c,f,l,s)}catch(t){if(jn(d),t!==t+0)throw t;_n(1,0)}},B:function(t,n,r,e,i,a,u,o,c,f,l,s,d){var h=wn();try{pt(t)(n,r,e,i,a,u,o,c,f,l,s,d)}catch(t){if(jn(h),t!==t+0)throw t;_n(1,0)}},Q:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h){var p=wn();try{pt(t)(n,r,e,i,a,u,o,c,f,l,s,d,h)}catch(t){if(jn(p),t!==t+0)throw t;_n(1,0)}},ha:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m){var v=wn();try{pt(t)(n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m)}catch(t){if(jn(v),t!==t+0)throw t;_n(1,0)}},N:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y){var m=wn();try{pt(t)(n,r,e,i,a,u,o,c,f,l,s,d,h,p,y)}catch(t){if(jn(m),t!==t+0)throw t;_n(1,0)}},mb:function(t,n,r,e,i,a,u,o,c,f,l,s,d){var h=wn();try{Wn(t,n,r,e,i,a,u,o,c,f,l,s,d)}catch(t){if(jn(h),t!==t+0)throw t;_n(1,0)}},vb:function(t,n,r,e,i,a,u){var o=wn();try{En(t,n,r,e,i,a,u)}catch(t){if(jn(o),t!==t+0)throw t;_n(1,0)}},nb:function(t,n,r,e,i,a){var u=wn();try{In(t,n,r,e,i,a)}catch(t){if(jn(u),t!==t+0)throw t;_n(1,0)}},pb:function(t,n,r,e,i,a,u){var o=wn();try{Fn(t,n,r,e,i,a,u)}catch(t){if(jn(o),t!==t+0)throw t;_n(1,0)}},xb:function(t,n,r,e,i,a,u,o){var c=wn();try{nr(t,n,r,e,i,a,u,o)}catch(t){if(jn(c),t!==t+0)throw t;_n(1,0)}},Ya:function(t,n,r,e,i,a,u,o,c,f){var l=wn();try{Jn(t,n,r,e,i,a,u,o,c,f)}catch(t){if(jn(l),t!==t+0)throw t;_n(1,0)}},Wa:function(t,n,r,e,i,a,u,o,c,f,l,s){var d=wn();try{Kn(t,n,r,e,i,a,u,o,c,f,l,s)}catch(t){if(jn(d),t!==t+0)throw t;_n(1,0)}},rb:function(t,n,r,e,i,a){var u=wn();try{kn(t,n,r,e,i,a)}catch(t){if(jn(u),t!==t+0)throw t;_n(1,0)}},Ua:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h){var p=wn();try{rr(t,n,r,e,i,a,u,o,c,f,l,s,d,h)}catch(t){if(jn(p),t!==t+0)throw t;_n(1,0)}},sb:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h){var p=wn();try{Dn(t,n,r,e,i,a,u,o,c,f,l,s,d,h)}catch(t){if(jn(p),t!==t+0)throw t;_n(1,0)}},yb:function(t,n,r,e){var i=wn();try{Sn(t,n,r,e)}catch(t){if(jn(i),t!==t+0)throw t;_n(1,0)}},Va:function(t,n,r,e,i){var a=wn();try{ir(t,n,r,e,i)}catch(t){if(jn(a),t!==t+0)throw t;_n(1,0)}},ob:function(t,n,r,e,i,a,u){var o=wn();try{Yn(t,n,r,e,i,a,u)}catch(t){if(jn(o),t!==t+0)throw t;_n(1,0)}},bb:function(t,n,r,e,i,a,u,o,c,f,l,s){var d=wn();try{Xn(t,n,r,e,i,a,u,o,c,f,l,s)}catch(t){if(jn(d),t!==t+0)throw t;_n(1,0)}},cb:function(t,n,r,e,i,a,u,o,c,f,l,s){var d=wn();try{Ln(t,n,r,e,i,a,u,o,c,f,l,s)}catch(t){if(jn(d),t!==t+0)throw t;_n(1,0)}},ab:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m,v,_,g,w){var j=wn();try{Zn(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m,v,_,g,w)}catch(t){if(jn(j),t!==t+0)throw t;_n(1,0)}},_a:function(t,n,r,e,i,a,u,o,c,f,l,s,d){var h=wn();try{Qn(t,n,r,e,i,a,u,o,c,f,l,s,d)}catch(t){if(jn(h),t!==t+0)throw t;_n(1,0)}},$a:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p){var y=wn();try{$n(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p)}catch(t){if(jn(y),t!==t+0)throw t;_n(1,0)}},eb:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m,v,_,g,w,j,b){var C=wn();try{zn(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m,v,_,g,w,j,b)}catch(t){if(jn(C),t!==t+0)throw t;_n(1,0)}},fb:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m,v,_,g,w,j,b,C,O){var T=wn();try{Bn(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m,v,_,g,w,j,b,C,O)}catch(t){if(jn(T),t!==t+0)throw t;_n(1,0)}},hb:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m,v,_,g,w,j,b,C){var O=wn();try{qn(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m,v,_,g,w,j,b,C)}catch(t){if(jn(O),t!==t+0)throw t;_n(1,0)}},db:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m,v,_,g,w,j,b,C,O,T,A,M){var S=wn();try{Nn(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m,v,_,g,w,j,b,C,O,T,A,M)}catch(t){if(jn(S),t!==t+0)throw t;_n(1,0)}},gb:function(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m,v,_,g,w,j,b,C,O,T,A,M,S){var x=wn();try{Gn(t,n,r,e,i,a,u,o,c,f,l,s,d,h,p,y,m,v,_,g,w,j,b,C,O,T,A,M,S)}catch(t){if(jn(x),t!==t+0)throw t;_n(1,0)}},t:function(t){return t},a:k||u.wasmMemory,K:function(t){nn=t},ia:un,ka:function(t,n,r,e){return un(t,n,r,e)}};!function(){function t(t,n){u.asm=t.exports,lt.sd.push(u.asm._b),N=u.asm.cc,X.unshift(u.asm.Cb),E=n,j||(J--,u.monitorRunDependencies&&u.monitorRunDependencies(J),0==J&&(null!==K&&(clearInterval(K),K=null),tt&&(t=tt,tt=null,t())))}function n(n){t(n.instance,n.module)}function r(t){return function(){if(!A&&(_||g)){if(\"function\"==typeof fetch&&!Q.startsWith(\"file://\"))return fetch(Q,{credentials:\"same-origin\"}).then((function(t){if(!t.ok)throw\"failed to load wasm binary file at '\"+Q+\"'\";return t.arrayBuffer()})).catch((function(){return et()}));if(l)return new Promise((function(t,n){l(Q,(function(n){t(new Uint8Array(n))}),n)}))}return Promise.resolve().then((function(){return et()}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(t){return t})).then(t,(function(t){S(\"failed to asynchronously prepare wasm: \"+t),nt(t)}))}var e={a:cn};if(j||(J++,u.monitorRunDependencies&&u.monitorRunDependencies(J)),u.instantiateWasm)try{return u.instantiateWasm(e,t)}catch(t){return S(\"Module.instantiateWasm callback failed with error: \"+t),!1}(A||\"function\"!=typeof WebAssembly.instantiateStreaming||rt()||Q.startsWith(\"file://\")||w||\"function\"!=typeof fetch?r(n):fetch(Q,{credentials:\"same-origin\"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(t){return S(\"wasm streaming compile failed: \"+t),S(\"falling back to ArrayBuffer instantiation\"),r(n)}))}))).catch(c)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.Cb).apply(null,arguments)},u._OrtInit=function(){return(u._OrtInit=u.asm.Db).apply(null,arguments)},u._OrtCreateSessionOptions=function(){return(u._OrtCreateSessionOptions=u.asm.Eb).apply(null,arguments)},u._OrtAppendExecutionProvider=function(){return(u._OrtAppendExecutionProvider=u.asm.Fb).apply(null,arguments)},u._OrtAddSessionConfigEntry=function(){return(u._OrtAddSessionConfigEntry=u.asm.Gb).apply(null,arguments)},u._OrtReleaseSessionOptions=function(){return(u._OrtReleaseSessionOptions=u.asm.Hb).apply(null,arguments)},u._OrtCreateSession=function(){return(u._OrtCreateSession=u.asm.Ib).apply(null,arguments)},u._OrtReleaseSession=function(){return(u._OrtReleaseSession=u.asm.Jb).apply(null,arguments)},u._OrtGetInputCount=function(){return(u._OrtGetInputCount=u.asm.Kb).apply(null,arguments)},u._OrtGetOutputCount=function(){return(u._OrtGetOutputCount=u.asm.Lb).apply(null,arguments)},u._OrtGetInputName=function(){return(u._OrtGetInputName=u.asm.Mb).apply(null,arguments)},u._OrtGetOutputName=function(){return(u._OrtGetOutputName=u.asm.Nb).apply(null,arguments)},u._OrtFree=function(){return(u._OrtFree=u.asm.Ob).apply(null,arguments)},u._OrtCreateTensor=function(){return(u._OrtCreateTensor=u.asm.Pb).apply(null,arguments)},u._OrtGetTensorData=function(){return(u._OrtGetTensorData=u.asm.Qb).apply(null,arguments)},u._OrtReleaseTensor=function(){return(u._OrtReleaseTensor=u.asm.Rb).apply(null,arguments)},u._OrtCreateRunOptions=function(){return(u._OrtCreateRunOptions=u.asm.Sb).apply(null,arguments)},u._OrtAddRunConfigEntry=function(){return(u._OrtAddRunConfigEntry=u.asm.Tb).apply(null,arguments)},u._OrtReleaseRunOptions=function(){return(u._OrtReleaseRunOptions=u.asm.Ub).apply(null,arguments)},u._OrtRun=function(){return(u._OrtRun=u.asm.Vb).apply(null,arguments)},u._OrtEndProfiling=function(){return(u._OrtEndProfiling=u.asm.Wb).apply(null,arguments)};var fn=u._pthread_self=function(){return(fn=u._pthread_self=u.asm.Xb).apply(null,arguments)},ln=u._malloc=function(){return(ln=u._malloc=u.asm.Yb).apply(null,arguments)},sn=u._free=function(){return(sn=u._free=u.asm.Zb).apply(null,arguments)};u.__emscripten_tls_init=function(){return(u.__emscripten_tls_init=u.asm._b).apply(null,arguments)};var dn=u.__emscripten_thread_init=function(){return(dn=u.__emscripten_thread_init=u.asm.$b).apply(null,arguments)};u.__emscripten_thread_crashed=function(){return(u.__emscripten_thread_crashed=u.asm.ac).apply(null,arguments)};var hn,pn=u._emscripten_run_in_main_runtime_thread_js=function(){return(pn=u._emscripten_run_in_main_runtime_thread_js=u.asm.bc).apply(null,arguments)},yn=u.__emscripten_proxy_execute_task_queue=function(){return(yn=u.__emscripten_proxy_execute_task_queue=u.asm.dc).apply(null,arguments)},mn=u.__emscripten_thread_free_data=function(){return(mn=u.__emscripten_thread_free_data=u.asm.ec).apply(null,arguments)},vn=u.__emscripten_thread_exit=function(){return(vn=u.__emscripten_thread_exit=u.asm.fc).apply(null,arguments)},_n=u._setThrew=function(){return(_n=u._setThrew=u.asm.gc).apply(null,arguments)},gn=u._emscripten_stack_set_limits=function(){return(gn=u._emscripten_stack_set_limits=u.asm.hc).apply(null,arguments)},wn=u.stackSave=function(){return(wn=u.stackSave=u.asm.ic).apply(null,arguments)},jn=u.stackRestore=function(){return(jn=u.stackRestore=u.asm.jc).apply(null,arguments)},bn=u.stackAlloc=function(){return(bn=u.stackAlloc=u.asm.kc).apply(null,arguments)},Cn=u.___cxa_can_catch=function(){return(Cn=u.___cxa_can_catch=u.asm.lc).apply(null,arguments)},On=u.___cxa_is_pointer_type=function(){return(On=u.___cxa_is_pointer_type=u.asm.mc).apply(null,arguments)},Tn=u.dynCall_j=function(){return(Tn=u.dynCall_j=u.asm.nc).apply(null,arguments)},An=u.dynCall_iij=function(){return(An=u.dynCall_iij=u.asm.oc).apply(null,arguments)},Mn=u.dynCall_iiiiij=function(){return(Mn=u.dynCall_iiiiij=u.asm.pc).apply(null,arguments)},Sn=u.dynCall_vij=function(){return(Sn=u.dynCall_vij=u.asm.qc).apply(null,arguments)},xn=u.dynCall_jii=function(){return(xn=u.dynCall_jii=u.asm.rc).apply(null,arguments)},kn=u.dynCall_viiji=function(){return(kn=u.dynCall_viiji=u.asm.sc).apply(null,arguments)},En=u.dynCall_viiiij=function(){return(En=u.dynCall_viiiij=u.asm.tc).apply(null,arguments)},Rn=u.dynCall_ji=function(){return(Rn=u.dynCall_ji=u.asm.uc).apply(null,arguments)},Dn=u.dynCall_viijjjiiiii=function(){return(Dn=u.dynCall_viijjjiiiii=u.asm.vc).apply(null,arguments)},Fn=u.dynCall_viiiji=function(){return(Fn=u.dynCall_viiiji=u.asm.wc).apply(null,arguments)},Yn=u.dynCall_vijiii=function(){return(Yn=u.dynCall_vijiii=u.asm.xc).apply(null,arguments)},In=u.dynCall_viiij=function(){return(In=u.dynCall_viiij=u.asm.yc).apply(null,arguments)},Wn=u.dynCall_viiiiiiiiiji=function(){return(Wn=u.dynCall_viiiiiiiiiji=u.asm.zc).apply(null,arguments)},Pn=u.dynCall_jjj=function(){return(Pn=u.dynCall_jjj=u.asm.Ac).apply(null,arguments)},Un=u.dynCall_iiiijjj=function(){return(Un=u.dynCall_iiiijjj=u.asm.Bc).apply(null,arguments)},Hn=u.dynCall_iiijjj=function(){return(Hn=u.dynCall_iiijjj=u.asm.Cc).apply(null,arguments)},Vn=u.dynCall_jiii=function(){return(Vn=u.dynCall_jiii=u.asm.Dc).apply(null,arguments)},qn=u.dynCall_vjjjjjjffiifiiiiii=function(){return(qn=u.dynCall_vjjjjjjffiifiiiiii=u.asm.Ec).apply(null,arguments)},Gn=u.dynCall_vjjjjjjjjfffiifiiiiii=function(){return(Gn=u.dynCall_vjjjjjjjjfffiifiiiiii=u.asm.Fc).apply(null,arguments)},Bn=u.dynCall_vjjjjjjfffifiiiiiii=function(){return(Bn=u.dynCall_vjjjjjjfffifiiiiiii=u.asm.Gc).apply(null,arguments)},zn=u.dynCall_vjjjjjjfffifiiiii=function(){return(zn=u.dynCall_vjjjjjjfffifiiiii=u.asm.Hc).apply(null,arguments)},Nn=u.dynCall_vjjjjjjjjfffiifiiiii=function(){return(Nn=u.dynCall_vjjjjjjjjfffiifiiiii=u.asm.Ic).apply(null,arguments)},Ln=u.dynCall_vijjfffiii=function(){return(Ln=u.dynCall_vijjfffiii=u.asm.Jc).apply(null,arguments)},Xn=u.dynCall_vijiiiiiiii=function(){return(Xn=u.dynCall_vijiiiiiiii=u.asm.Kc).apply(null,arguments)},Zn=u.dynCall_vijjjjjjifiiiii=function(){return(Zn=u.dynCall_vijjjjjjifiiiii=u.asm.Lc).apply(null,arguments)},$n=u.dynCall_vjjjjjiiii=function(){return($n=u.dynCall_vjjjjjiiii=u.asm.Mc).apply(null,arguments)},Qn=u.dynCall_vjjjjfiii=function(){return(Qn=u.dynCall_vjjjjfiii=u.asm.Nc).apply(null,arguments)},Jn=u.dynCall_viiijiiii=function(){return(Jn=u.dynCall_viiijiiii=u.asm.Oc).apply(null,arguments)},Kn=u.dynCall_viiijjjii=function(){return(Kn=u.dynCall_viiijjjii=u.asm.Pc).apply(null,arguments)},tr=u.dynCall_iiij=function(){return(tr=u.dynCall_iiij=u.asm.Qc).apply(null,arguments)},nr=u.dynCall_viiijii=function(){return(nr=u.dynCall_viiijii=u.asm.Rc).apply(null,arguments)},rr=u.dynCall_viijiiiiiiiii=function(){return(rr=u.dynCall_viijiiiiiiiii=u.asm.Sc).apply(null,arguments)},er=u.dynCall_jfi=function(){return(er=u.dynCall_jfi=u.asm.Tc).apply(null,arguments)},ir=u.dynCall_viji=function(){return(ir=u.dynCall_viji=u.asm.Uc).apply(null,arguments)};function ar(){function t(){if(!hn&&(hn=!0,u.calledRun=!0,!P)&&(j||st(X),o(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),!j)){if(u.postRun)for(\"function\"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;){var t=u.postRun.shift();Z.unshift(t)}st(Z)}}if(!(0<J))if(j)o(u),j||st(X),postMessage({cmd:\"loaded\"});else{if(u.preRun)for(\"function\"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)$();st(L),0<J||(u.setStatus?(u.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){u.setStatus(\"\")}),1),t()}),1)):t())}}if(u.UTF8ToString=V,u.stringToUTF8=function(t,n,e){return q(t,r(),n,e)},u.lengthBytesUTF8=G,u.keepRuntimeAlive=function(){return x},u.wasmMemory=k,u.stackSave=wn,u.stackRestore=jn,u.stackAlloc=bn,u.ExitStatus=at,u.PThread=lt,tt=function t(){hn||ar(),hn||(tt=t)},u.preInit)for(\"function\"==typeof u.preInit&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();return ar(),t.ready});\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t:\"function\"==typeof define&&define.amd?define([],(function(){return t})):\"object\"==typeof exports&&(exports.ortWasmThreaded=t);\n","\nvar ortWasm = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(ortWasm) {\n  ortWasm = ortWasm || {};\n\n\nnull;var d;d||(d=typeof ortWasm !== 'undefined' ? ortWasm : {});var ba,ca;d.ready=new Promise(function(a,b){ba=a;ca=b});var da=Object.assign({},d),ea=\"./this.program\",fa=\"object\"==typeof window,q=\"function\"==typeof importScripts,ha=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,r=\"\",ia,ja,ka,fs,la,ma;\nif(ha)r=q?require(\"path\").dirname(r)+\"/\":__dirname+\"/\",ma=()=>{la||(fs=require(\"fs\"),la=require(\"path\"))},ia=function(a,b){ma();a=la.normalize(a);return fs.readFileSync(a,b?void 0:\"utf8\")},ka=a=>{a=ia(a,!0);a.buffer||(a=new Uint8Array(a));return a},ja=(a,b,c)=>{ma();a=la.normalize(a);fs.readFile(a,function(e,f){e?c(e):b(f.buffer)})},1<process.argv.length&&(ea=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",function(a){throw a;}),process.on(\"unhandledRejection\",\nfunction(a){throw a;}),d.inspect=function(){return\"[Emscripten Module object]\"};else if(fa||q)q?r=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(r=document.currentScript.src),_scriptDir&&(r=_scriptDir),0!==r.indexOf(\"blob:\")?r=r.substr(0,r.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):r=\"\",ia=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},q&&(ka=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),\nja=(a,b,c)=>{var e=new XMLHttpRequest;e.open(\"GET\",a,!0);e.responseType=\"arraybuffer\";e.onload=()=>{200==e.status||0==e.status&&e.response?b(e.response):c()};e.onerror=c;e.send(null)};var na=d.print||console.log.bind(console),t=d.printErr||console.warn.bind(console);Object.assign(d,da);da=null;d.thisProgram&&(ea=d.thisProgram);var y;d.wasmBinary&&(y=d.wasmBinary);var noExitRuntime=d.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&z(\"no native wasm support detected\");\nvar oa,pa=!1,qa=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction ra(a,b,c){b>>>=0;var e=b+c;for(c=b;a[c]&&!(c>=e);)++c;if(16<c-b&&a.buffer&&qa)return qa.decode(a.subarray(b,c));for(e=\"\";b<c;){var f=a[b++];if(f&128){var g=a[b++]&63;if(192==(f&224))e+=String.fromCharCode((f&31)<<6|g);else{var k=a[b++]&63;f=224==(f&240)?(f&15)<<12|g<<6|k:(f&7)<<18|g<<12|k<<6|a[b++]&63;65536>f?e+=String.fromCharCode(f):(f-=65536,e+=String.fromCharCode(55296|f>>10,56320|f&1023))}}else e+=String.fromCharCode(f)}return e}function sa(a,b){return(a>>>=0)?ra(C,a,b):\"\"}\nfunction ta(a,b,c,e){c>>>=0;if(!(0<e))return 0;var f=c;e=c+e-1;for(var g=0;g<a.length;++g){var k=a.charCodeAt(g);if(55296<=k&&57343>=k){var l=a.charCodeAt(++g);k=65536+((k&1023)<<10)|l&1023}if(127>=k){if(c>=e)break;b[c++>>>0]=k}else{if(2047>=k){if(c+1>=e)break;b[c++>>>0]=192|k>>6}else{if(65535>=k){if(c+2>=e)break;b[c++>>>0]=224|k>>12}else{if(c+3>=e)break;b[c++>>>0]=240|k>>18;b[c++>>>0]=128|k>>12&63}b[c++>>>0]=128|k>>6&63}b[c++>>>0]=128|k&63}}b[c>>>0]=0;return c-f}\nfunction ua(a){for(var b=0,c=0;c<a.length;++c){var e=a.charCodeAt(c);127>=e?b++:2047>=e?b+=2:55296<=e&&57343>=e?(b+=4,++c):b+=3}return b}var va,D,C,G,H;function wa(){var a=oa.buffer;va=a;d.HEAP8=D=new Int8Array(a);d.HEAP16=new Int16Array(a);d.HEAP32=G=new Int32Array(a);d.HEAPU8=C=new Uint8Array(a);d.HEAPU16=new Uint16Array(a);d.HEAPU32=H=new Uint32Array(a);d.HEAPF32=new Float32Array(a);d.HEAPF64=new Float64Array(a)}var xa,ya=[],za=[],Da=[];function Ea(){var a=d.preRun.shift();ya.unshift(a)}\nvar M=0,Fa=null,N=null;function z(a){if(d.onAbort)d.onAbort(a);a=\"Aborted(\"+a+\")\";t(a);pa=!0;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");ca(a);throw a;}function Ga(){return Q.startsWith(\"data:application/octet-stream;base64,\")}var Q;Q=\"ort-wasm.wasm\";if(!Ga()){var Ha=Q;Q=d.locateFile?d.locateFile(Ha,r):r+Ha}function Ia(){var a=Q;try{if(a==Q&&y)return new Uint8Array(y);if(ka)return ka(a);throw\"both async and sync fetching of the wasm failed\";}catch(b){z(b)}}\nfunction Ja(){if(!y&&(fa||q)){if(\"function\"==typeof fetch&&!Q.startsWith(\"file://\"))return fetch(Q,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+Q+\"'\";return a.arrayBuffer()}).catch(function(){return Ia()});if(ja)return new Promise(function(a,b){ja(Q,function(c){a(new Uint8Array(c))},b)})}return Promise.resolve().then(function(){return Ia()})}function Ka(a){for(;0<a.length;)a.shift()(d)}var La=[],Ma=0,R=0;\nfunction S(a){this.Ic=a;this.Cc=a-24;this.Wc=function(b){H[this.Cc+4>>2>>>0]=b};this.Gc=function(){return H[this.Cc+4>>2>>>0]};this.Uc=function(b){H[this.Cc+8>>2>>>0]=b};this.Yc=function(){return H[this.Cc+8>>2>>>0]};this.Vc=function(){G[this.Cc>>2>>>0]=0};this.Lc=function(b){D[this.Cc+12>>0>>>0]=b?1:0};this.Rc=function(){return 0!=D[this.Cc+12>>0>>>0]};this.Mc=function(b){D[this.Cc+13>>0>>>0]=b?1:0};this.Oc=function(){return 0!=D[this.Cc+13>>0>>>0]};this.Tc=function(b,c){this.Hc(0);this.Wc(b);this.Uc(c);\nthis.Vc();this.Lc(!1);this.Mc(!1)};this.Pc=function(){G[this.Cc>>2>>>0]+=1};this.Zc=function(){var b=G[this.Cc>>2>>>0];G[this.Cc>>2>>>0]=b-1;return 1===b};this.Hc=function(b){H[this.Cc+16>>2>>>0]=b};this.Qc=function(){return H[this.Cc+16>>2>>>0]};this.Sc=function(){if(Na(this.Gc()))return H[this.Ic>>2>>>0];var b=this.Qc();return 0!==b?b:this.Ic}}function Oa(a){return Pa((new S(a)).Cc)}var Qa=[];function T(a){var b=Qa[a];b||(a>=Qa.length&&(Qa.length=a+1),Qa[a]=b=xa.get(a));return b}\nfunction Ra(a){var b=ua(a)+1,c=Sa(b);c&&ta(a,D,c,b);return c}function Ta(a,b,c){function e(m){return(m=m.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?m[1]:\"GMT\"}var f=(new Date).getFullYear(),g=new Date(f,0,1),k=new Date(f,6,1);f=g.getTimezoneOffset();var l=k.getTimezoneOffset();G[a>>2>>>0]=60*Math.max(f,l);G[b>>2>>>0]=Number(f!=l);a=e(g);b=e(k);a=Ra(a);b=Ra(b);l<f?(H[c>>2>>>0]=a,H[c+4>>2>>>0]=b):(H[c>>2>>>0]=b,H[c+4>>2>>>0]=a)}function Ua(a,b,c){Ua.Xc||(Ua.Xc=!0,Ta(a,b,c))}var Va={};\nfunction Wa(){if(!Xa){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ea||\"./this.program\"},b;for(b in Va)void 0===Va[b]?delete a[b]:a[b]=Va[b];var c=[];for(b in a)c.push(b+\"=\"+a[b]);Xa=c}return Xa}var Xa,Ya=[null,[],[]],V=0;function Za(a){return 0===a%4&&(0!==a%100||0===a%400)}\nvar $a=[31,29,31,30,31,30,31,31,30,31,30,31],ab=[31,28,31,30,31,30,31,31,30,31,30,31];function bb(a){var b=Array(ua(a)+1);ta(a,b,0,b.length);return b}\nfunction cb(a,b,c,e){function f(h,u,w){for(h=\"number\"==typeof h?h.toString():h||\"\";h.length<u;)h=w[0]+h;return h}function g(h,u){return f(h,u,\"0\")}function k(h,u){function w(B){return 0>B?-1:0<B?1:0}var A;0===(A=w(h.getFullYear()-u.getFullYear()))&&0===(A=w(h.getMonth()-u.getMonth()))&&(A=w(h.getDate()-u.getDate()));return A}function l(h){switch(h.getDay()){case 0:return new Date(h.getFullYear()-1,11,29);case 1:return h;case 2:return new Date(h.getFullYear(),0,3);case 3:return new Date(h.getFullYear(),\n0,2);case 4:return new Date(h.getFullYear(),0,1);case 5:return new Date(h.getFullYear()-1,11,31);case 6:return new Date(h.getFullYear()-1,11,30)}}function m(h){var u=h.Ec;for(h=new Date((new Date(h.Fc+1900,0,1)).getTime());0<u;){var w=h.getMonth(),A=(Za(h.getFullYear())?$a:ab)[w];if(u>A-h.getDate())u-=A-h.getDate()+1,h.setDate(1),11>w?h.setMonth(w+1):(h.setMonth(0),h.setFullYear(h.getFullYear()+1));else{h.setDate(h.getDate()+u);break}}w=new Date(h.getFullYear()+1,0,4);u=l(new Date(h.getFullYear(),\n0,4));w=l(w);return 0>=k(u,h)?0>=k(w,h)?h.getFullYear()+1:h.getFullYear():h.getFullYear()-1}var n=G[e+40>>2>>>0];e={bd:G[e>>2>>>0],ad:G[e+4>>2>>>0],Jc:G[e+8>>2>>>0],Nc:G[e+12>>2>>>0],Kc:G[e+16>>2>>>0],Fc:G[e+20>>2>>>0],Dc:G[e+24>>2>>>0],Ec:G[e+28>>2>>>0],dd:G[e+32>>2>>>0],$c:G[e+36>>2>>>0],cd:n?sa(n):\"\"};c=sa(c);n={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\n\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var p in n)c=c.replace(new RegExp(p,\"g\"),n[p]);var v=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),x=\"January February March April May June July August September October November December\".split(\" \");n={\"%a\":function(h){return v[h.Dc].substring(0,3)},\"%A\":function(h){return v[h.Dc]},\"%b\":function(h){return x[h.Kc].substring(0,\n3)},\"%B\":function(h){return x[h.Kc]},\"%C\":function(h){return g((h.Fc+1900)/100|0,2)},\"%d\":function(h){return g(h.Nc,2)},\"%e\":function(h){return f(h.Nc,2,\" \")},\"%g\":function(h){return m(h).toString().substring(2)},\"%G\":function(h){return m(h)},\"%H\":function(h){return g(h.Jc,2)},\"%I\":function(h){h=h.Jc;0==h?h=12:12<h&&(h-=12);return g(h,2)},\"%j\":function(h){for(var u=0,w=0;w<=h.Kc-1;u+=(Za(h.Fc+1900)?$a:ab)[w++]);return g(h.Nc+u,3)},\"%m\":function(h){return g(h.Kc+1,2)},\"%M\":function(h){return g(h.ad,\n2)},\"%n\":function(){return\"\\n\"},\"%p\":function(h){return 0<=h.Jc&&12>h.Jc?\"AM\":\"PM\"},\"%S\":function(h){return g(h.bd,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(h){return h.Dc||7},\"%U\":function(h){return g(Math.floor((h.Ec+7-h.Dc)/7),2)},\"%V\":function(h){var u=Math.floor((h.Ec+7-(h.Dc+6)%7)/7);2>=(h.Dc+371-h.Ec-2)%7&&u++;if(u)53==u&&(w=(h.Dc+371-h.Ec)%7,4==w||3==w&&Za(h.Fc)||(u=1));else{u=52;var w=(h.Dc+7-h.Ec-1)%7;(4==w||5==w&&Za(h.Fc%400-1))&&u++}return g(u,2)},\"%w\":function(h){return h.Dc},\"%W\":function(h){return g(Math.floor((h.Ec+\n7-(h.Dc+6)%7)/7),2)},\"%y\":function(h){return(h.Fc+1900).toString().substring(2)},\"%Y\":function(h){return h.Fc+1900},\"%z\":function(h){h=h.$c;var u=0<=h;h=Math.abs(h)/60;return(u?\"+\":\"-\")+String(\"0000\"+(h/60*100+h%60)).slice(-4)},\"%Z\":function(h){return h.cd},\"%%\":function(){return\"%\"}};c=c.replace(/%%/g,\"\\x00\\x00\");for(p in n)c.includes(p)&&(c=c.replace(new RegExp(p,\"g\"),n[p](e)));c=c.replace(/\\0\\0/g,\"%\");p=bb(c);if(p.length>b)return 0;D.set(p,a>>>0);return p.length-1}\nvar vc={j:function(a){return Sa(a+24)+24},p:function(a){a=new S(a);a.Rc()||(a.Lc(!0),Ma--);a.Mc(!1);La.push(a);a.Pc();return a.Sc()},sa:function(a){t(\"Unexpected exception thrown, this is not properly supported - aborting\");pa=!0;throw a;},B:function(){W(0);var a=La.pop();if(a.Zc()&&!a.Oc()){var b=a.Yc();b&&T(b)(a.Ic);Oa(a.Ic)}R=0},b:function(){var a=R;if(!a)return V=0;var b=new S(a);b.Hc(a);var c=b.Gc();if(!c)return V=0,a;for(var e=Array.prototype.slice.call(arguments),f=0;f<e.length;f++){var g=\ne[f];if(0===g||g===c)break;if(X(g,c,b.Cc+16))return V=g,a}V=c;return a},l:function(){var a=R;if(!a)return V=0;var b=new S(a);b.Hc(a);var c=b.Gc();if(!c)return V=0,a;for(var e=Array.prototype.slice.call(arguments),f=0;f<e.length;f++){var g=e[f];if(0===g||g===c)break;if(X(g,c,b.Cc+16))return V=g,a}V=c;return a},v:function(){var a=R;if(!a)return V=0;var b=new S(a);b.Hc(a);var c=b.Gc();if(!c)return V=0,a;for(var e=Array.prototype.slice.call(arguments),f=0;f<e.length;f++){var g=e[f];if(0===g||g===c)break;\nif(X(g,c,b.Cc+16))return V=g,a}V=c;return a},n:function(){var a=R;if(!a)return V=0;var b=new S(a);b.Hc(a);var c=b.Gc();if(!c)return V=0,a;for(var e=Array.prototype.slice.call(arguments),f=0;f<e.length;f++){var g=e[f];if(0===g||g===c)break;if(X(g,c,b.Cc+16))return V=g,a}V=c;return a},m:Oa,S:function(){var a=La.pop();a||z(\"no exception to throw\");var b=a.Ic;a.Oc()||(La.push(a),a.Mc(!0),a.Lc(!1),Ma++);R=b;throw b;},w:function(a,b,c){(new S(a)).Tc(b,c);R=a;Ma++;throw a;},va:function(){return Ma},f:function(a){R||\n(R=a);throw a;},U:function(){return 0},Ma:function(){},Aa:function(){},Ca:function(){},ua:function(){return 0},Ka:function(){},Ga:function(){},Ja:function(){},$:function(){},Ba:function(){},ya:function(){},La:function(){},za:function(){},eb:function(){},la:function(){z(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},pb:function(){z(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},\naa:function(){return Date.now()},Na:function(){return!0},Oa:function(a,b){a=new Date(1E3*(H[a>>>2]+4294967296*G[a+4>>>2]));G[b>>2>>>0]=a.getUTCSeconds();G[b+4>>2>>>0]=a.getUTCMinutes();G[b+8>>2>>>0]=a.getUTCHours();G[b+12>>2>>>0]=a.getUTCDate();G[b+16>>2>>>0]=a.getUTCMonth();G[b+20>>2>>>0]=a.getUTCFullYear()-1900;G[b+24>>2>>>0]=a.getUTCDay();G[b+28>>2>>>0]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0},Pa:function(a,b){a=new Date(1E3*(H[a>>>2]+4294967296*G[a+4>>>2]));G[b>>2>>>0]=\na.getSeconds();G[b+4>>2>>>0]=a.getMinutes();G[b+8>>2>>>0]=a.getHours();G[b+12>>2>>>0]=a.getDate();G[b+16>>2>>>0]=a.getMonth();G[b+20>>2>>>0]=a.getFullYear()-1900;G[b+24>>2>>>0]=a.getDay();var c=new Date(a.getFullYear(),0,1);G[b+28>>2>>>0]=(a.getTime()-c.getTime())/864E5|0;G[b+36>>2>>>0]=-(60*a.getTimezoneOffset());var e=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();c=c.getTimezoneOffset();G[b+32>>2>>>0]=(e!=c&&a.getTimezoneOffset()==Math.min(c,e))|0},Qa:function(a){var b=new Date(G[a+20>>2>>>\n0]+1900,G[a+16>>2>>>0],G[a+12>>2>>>0],G[a+8>>2>>>0],G[a+4>>2>>>0],G[a>>2>>>0],0),c=G[a+32>>2>>>0],e=b.getTimezoneOffset(),f=new Date(b.getFullYear(),0,1),g=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),k=f.getTimezoneOffset(),l=Math.min(k,g);0>c?G[a+32>>2>>>0]=Number(g!=k&&l==e):0<c!=(l==e)&&(g=Math.max(k,g),b.setTime(b.getTime()+6E4*((0<c?l:g)-e)));G[a+24>>2>>>0]=b.getDay();G[a+28>>2>>>0]=(b.getTime()-f.getTime())/864E5|0;G[a>>2>>>0]=b.getSeconds();G[a+4>>2>>>0]=b.getMinutes();G[a+8>>2>>>0]=\nb.getHours();G[a+12>>2>>>0]=b.getDate();G[a+16>>2>>>0]=b.getMonth();return b.getTime()/1E3|0},Ea:function(){return-52},Fa:function(){},Va:Ua,P:function(){z(\"\")},wa:function(){return 4294901760},V:ha?()=>{var a=process.hrtime();return 1E3*a[0]+a[1]/1E6}:()=>performance.now(),Da:function(a,b,c){C.copyWithin(a>>>0,b>>>0,b+c>>>0)},T:function(a){var b=C.length;a>>>=0;if(4294901760<a)return!1;for(var c=1;4>=c;c*=2){var e=b*(1+.2/c);e=Math.min(e,a+100663296);var f=Math;e=Math.max(a,e);f=f.min.call(f,4294901760,\ne+(65536-e%65536)%65536);a:{try{oa.grow(f-va.byteLength+65535>>>16);wa();var g=1;break a}catch(k){}g=void 0}if(g)return!0}return!1},Ha:function(a,b){var c=0;Wa().forEach(function(e,f){var g=b+c;f=H[a+4*f>>2>>>0]=g;for(g=0;g<e.length;++g)D[f++>>0>>>0]=e.charCodeAt(g);D[f>>0>>>0]=0;c+=e.length+1});return 0},Ia:function(a,b){var c=Wa();H[a>>2>>>0]=c.length;var e=0;c.forEach(function(f){e+=f.length+1});H[b>>2>>>0]=e;return 0},R:function(){return 52},_:function(){return 52},na:function(){return 70},xa:function(a,\nb,c,e){for(var f=0,g=0;g<c;g++){var k=H[b>>2>>>0],l=H[b+4>>2>>>0];b+=8;for(var m=0;m<l;m++){var n=C[k+m>>>0],p=Ya[a];0===n||10===n?((1===a?na:t)(ra(p,0)),p.length=0):p.push(n)}f+=l}H[e>>2>>>0]=f;return 0},a:function(){return V},oa:db,C:eb,x:fb,c:gb,W:hb,Q:ib,k:jb,g:kb,i:lb,o:mb,y:nb,K:ob,Z:pb,M:qb,ia:rb,kb:sb,Ra:tb,jb:ub,ma:vb,Sa:wb,Ya:xb,fa:yb,ea:zb,ib:Ab,lb:Bb,d:Cb,t:Db,h:Eb,E:Fb,e:Gb,Y:Hb,s:Ib,u:Jb,q:Kb,G:Lb,N:Mb,F:Nb,z:Ob,D:Pb,H:Qb,X:Rb,pa:Sb,J:Tb,qa:Ub,A:Vb,O:Wb,L:Xb,mb:Yb,ga:Zb,ha:$b,nb:ac,\nba:bc,ja:cc,Xa:dc,Wa:ec,ca:fc,Ta:gc,da:hc,ka:ic,Ua:jc,ob:kc,ab:lc,bb:mc,$a:nc,Za:oc,_a:pc,db:qc,fb:rc,hb:sc,cb:tc,gb:uc,r:function(a){return a},I:function(a){V=a},ra:cb,ta:function(a,b,c,e){return cb(a,b,c,e)}};\n(function(){function a(f){d.asm=f.exports;oa=d.asm.qb;wa();xa=d.asm.Ob;za.unshift(d.asm.rb);M--;d.monitorRunDependencies&&d.monitorRunDependencies(M);0==M&&(null!==Fa&&(clearInterval(Fa),Fa=null),N&&(f=N,N=null,f()))}function b(f){a(f.instance)}function c(f){return Ja().then(function(g){return WebAssembly.instantiate(g,e)}).then(function(g){return g}).then(f,function(g){t(\"failed to asynchronously prepare wasm: \"+g);z(g)})}var e={a:vc};M++;d.monitorRunDependencies&&d.monitorRunDependencies(M);if(d.instantiateWasm)try{return d.instantiateWasm(e,\na)}catch(f){return t(\"Module.instantiateWasm callback failed with error: \"+f),!1}(function(){return y||\"function\"!=typeof WebAssembly.instantiateStreaming||Ga()||Q.startsWith(\"file://\")||ha||\"function\"!=typeof fetch?c(b):fetch(Q,{credentials:\"same-origin\"}).then(function(f){return WebAssembly.instantiateStreaming(f,e).then(b,function(g){t(\"wasm streaming compile failed: \"+g);t(\"falling back to ArrayBuffer instantiation\");return c(b)})})})().catch(ca);return{}})();\nd.___wasm_call_ctors=function(){return(d.___wasm_call_ctors=d.asm.rb).apply(null,arguments)};d._OrtInit=function(){return(d._OrtInit=d.asm.sb).apply(null,arguments)};d._OrtCreateSessionOptions=function(){return(d._OrtCreateSessionOptions=d.asm.tb).apply(null,arguments)};d._OrtAppendExecutionProvider=function(){return(d._OrtAppendExecutionProvider=d.asm.ub).apply(null,arguments)};d._OrtAddSessionConfigEntry=function(){return(d._OrtAddSessionConfigEntry=d.asm.vb).apply(null,arguments)};\nd._OrtReleaseSessionOptions=function(){return(d._OrtReleaseSessionOptions=d.asm.wb).apply(null,arguments)};d._OrtCreateSession=function(){return(d._OrtCreateSession=d.asm.xb).apply(null,arguments)};d._OrtReleaseSession=function(){return(d._OrtReleaseSession=d.asm.yb).apply(null,arguments)};d._OrtGetInputCount=function(){return(d._OrtGetInputCount=d.asm.zb).apply(null,arguments)};d._OrtGetOutputCount=function(){return(d._OrtGetOutputCount=d.asm.Ab).apply(null,arguments)};\nd._OrtGetInputName=function(){return(d._OrtGetInputName=d.asm.Bb).apply(null,arguments)};d._OrtGetOutputName=function(){return(d._OrtGetOutputName=d.asm.Cb).apply(null,arguments)};d._OrtFree=function(){return(d._OrtFree=d.asm.Db).apply(null,arguments)};d._OrtCreateTensor=function(){return(d._OrtCreateTensor=d.asm.Eb).apply(null,arguments)};d._OrtGetTensorData=function(){return(d._OrtGetTensorData=d.asm.Fb).apply(null,arguments)};\nd._OrtReleaseTensor=function(){return(d._OrtReleaseTensor=d.asm.Gb).apply(null,arguments)};d._OrtCreateRunOptions=function(){return(d._OrtCreateRunOptions=d.asm.Hb).apply(null,arguments)};d._OrtAddRunConfigEntry=function(){return(d._OrtAddRunConfigEntry=d.asm.Ib).apply(null,arguments)};d._OrtReleaseRunOptions=function(){return(d._OrtReleaseRunOptions=d.asm.Jb).apply(null,arguments)};d._OrtRun=function(){return(d._OrtRun=d.asm.Kb).apply(null,arguments)};\nd._OrtEndProfiling=function(){return(d._OrtEndProfiling=d.asm.Lb).apply(null,arguments)};\nvar Sa=d._malloc=function(){return(Sa=d._malloc=d.asm.Mb).apply(null,arguments)},Pa=d._free=function(){return(Pa=d._free=d.asm.Nb).apply(null,arguments)},W=d._setThrew=function(){return(W=d._setThrew=d.asm.Pb).apply(null,arguments)},Y=d.stackSave=function(){return(Y=d.stackSave=d.asm.Qb).apply(null,arguments)},Z=d.stackRestore=function(){return(Z=d.stackRestore=d.asm.Rb).apply(null,arguments)},wc=d.stackAlloc=function(){return(wc=d.stackAlloc=d.asm.Sb).apply(null,arguments)},X=d.___cxa_can_catch=\nfunction(){return(X=d.___cxa_can_catch=d.asm.Tb).apply(null,arguments)},Na=d.___cxa_is_pointer_type=function(){return(Na=d.___cxa_is_pointer_type=d.asm.Ub).apply(null,arguments)},xc=d.dynCall_j=function(){return(xc=d.dynCall_j=d.asm.Vb).apply(null,arguments)},yc=d.dynCall_iij=function(){return(yc=d.dynCall_iij=d.asm.Wb).apply(null,arguments)},zc=d.dynCall_iiiiij=function(){return(zc=d.dynCall_iiiiij=d.asm.Xb).apply(null,arguments)},Ac=d.dynCall_vij=function(){return(Ac=d.dynCall_vij=d.asm.Yb).apply(null,\narguments)},Bc=d.dynCall_jii=function(){return(Bc=d.dynCall_jii=d.asm.Zb).apply(null,arguments)},Cc=d.dynCall_viiji=function(){return(Cc=d.dynCall_viiji=d.asm._b).apply(null,arguments)},Dc=d.dynCall_viiiij=function(){return(Dc=d.dynCall_viiiij=d.asm.$b).apply(null,arguments)},Ec=d.dynCall_viiiiij=function(){return(Ec=d.dynCall_viiiiij=d.asm.ac).apply(null,arguments)},Fc=d.dynCall_ji=function(){return(Fc=d.dynCall_ji=d.asm.bc).apply(null,arguments)},Gc=d.dynCall_viijjjiiiii=function(){return(Gc=d.dynCall_viijjjiiiii=\nd.asm.cc).apply(null,arguments)},Hc=d.dynCall_viiiji=function(){return(Hc=d.dynCall_viiiji=d.asm.dc).apply(null,arguments)},Ic=d.dynCall_vijiii=function(){return(Ic=d.dynCall_vijiii=d.asm.ec).apply(null,arguments)},Jc=d.dynCall_viiij=function(){return(Jc=d.dynCall_viiij=d.asm.fc).apply(null,arguments)},Kc=d.dynCall_viiiiiiiiiji=function(){return(Kc=d.dynCall_viiiiiiiiiji=d.asm.gc).apply(null,arguments)},Lc=d.dynCall_jjj=function(){return(Lc=d.dynCall_jjj=d.asm.hc).apply(null,arguments)},Mc=d.dynCall_iiiijjj=\nfunction(){return(Mc=d.dynCall_iiiijjj=d.asm.ic).apply(null,arguments)},Nc=d.dynCall_iiijjj=function(){return(Nc=d.dynCall_iiijjj=d.asm.jc).apply(null,arguments)},Oc=d.dynCall_jiii=function(){return(Oc=d.dynCall_jiii=d.asm.kc).apply(null,arguments)},Pc=d.dynCall_vjjjjjjffiifiiiiii=function(){return(Pc=d.dynCall_vjjjjjjffiifiiiiii=d.asm.lc).apply(null,arguments)},Qc=d.dynCall_vjjjjjjjjfffiifiiiiii=function(){return(Qc=d.dynCall_vjjjjjjjjfffiifiiiiii=d.asm.mc).apply(null,arguments)},Rc=d.dynCall_vjjjjjjfffifiiiiiii=\nfunction(){return(Rc=d.dynCall_vjjjjjjfffifiiiiiii=d.asm.nc).apply(null,arguments)},Sc=d.dynCall_vjjjjjjfffifiiiii=function(){return(Sc=d.dynCall_vjjjjjjfffifiiiii=d.asm.oc).apply(null,arguments)},Tc=d.dynCall_vjjjjjjjjfffiifiiiii=function(){return(Tc=d.dynCall_vjjjjjjjjfffiifiiiii=d.asm.pc).apply(null,arguments)},Uc=d.dynCall_vijjfffiii=function(){return(Uc=d.dynCall_vijjfffiii=d.asm.qc).apply(null,arguments)},Vc=d.dynCall_vijiiiiiiii=function(){return(Vc=d.dynCall_vijiiiiiiii=d.asm.rc).apply(null,\narguments)},Wc=d.dynCall_vijjjjjjifiiiii=function(){return(Wc=d.dynCall_vijjjjjjifiiiii=d.asm.sc).apply(null,arguments)},Xc=d.dynCall_vjjjjjiiii=function(){return(Xc=d.dynCall_vjjjjjiiii=d.asm.tc).apply(null,arguments)},Yc=d.dynCall_vjjjjfiii=function(){return(Yc=d.dynCall_vjjjjfiii=d.asm.uc).apply(null,arguments)},Zc=d.dynCall_viiijiiii=function(){return(Zc=d.dynCall_viiijiiii=d.asm.vc).apply(null,arguments)},$c=d.dynCall_viiijjjii=function(){return($c=d.dynCall_viiijjjii=d.asm.wc).apply(null,arguments)},\nad=d.dynCall_iiij=function(){return(ad=d.dynCall_iiij=d.asm.xc).apply(null,arguments)},bd=d.dynCall_viiijii=function(){return(bd=d.dynCall_viiijii=d.asm.yc).apply(null,arguments)},cd=d.dynCall_viijiiiiiiiii=function(){return(cd=d.dynCall_viijiiiiiiiii=d.asm.zc).apply(null,arguments)},dd=d.dynCall_jfi=function(){return(dd=d.dynCall_jfi=d.asm.Ac).apply(null,arguments)},ed=d.dynCall_viji=function(){return(ed=d.dynCall_viji=d.asm.Bc).apply(null,arguments)};\nfunction gb(a,b){var c=Y();try{return T(a)(b)}catch(e){Z(c);if(e!==e+0)throw e;W(1,0)}}function Db(a,b){var c=Y();try{T(a)(b)}catch(e){Z(c);if(e!==e+0)throw e;W(1,0)}}function Eb(a,b,c){var e=Y();try{T(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;W(1,0)}}function jb(a,b,c){var e=Y();try{return T(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;W(1,0)}}function kb(a,b,c,e){var f=Y();try{return T(a)(b,c,e)}catch(g){Z(f);if(g!==g+0)throw g;W(1,0)}}\nfunction nb(a,b,c,e,f,g,k){var l=Y();try{return T(a)(b,c,e,f,g,k)}catch(m){Z(l);if(m!==m+0)throw m;W(1,0)}}function Cb(a){var b=Y();try{T(a)()}catch(c){Z(b);if(c!==c+0)throw c;W(1,0)}}function mb(a,b,c,e,f,g){var k=Y();try{return T(a)(b,c,e,f,g)}catch(l){Z(k);if(l!==l+0)throw l;W(1,0)}}function lb(a,b,c,e,f){var g=Y();try{return T(a)(b,c,e,f)}catch(k){Z(g);if(k!==k+0)throw k;W(1,0)}}function Gb(a,b,c,e){var f=Y();try{T(a)(b,c,e)}catch(g){Z(f);if(g!==g+0)throw g;W(1,0)}}\nfunction Ib(a,b,c,e,f){var g=Y();try{T(a)(b,c,e,f)}catch(k){Z(g);if(k!==k+0)throw k;W(1,0)}}function fb(a){var b=Y();try{return T(a)()}catch(c){Z(b);if(c!==c+0)throw c;W(1,0)}}function Jb(a,b,c,e,f,g){var k=Y();try{T(a)(b,c,e,f,g)}catch(l){Z(k);if(l!==l+0)throw l;W(1,0)}}function Kb(a,b,c,e,f,g,k){var l=Y();try{T(a)(b,c,e,f,g,k)}catch(m){Z(l);if(m!==m+0)throw m;W(1,0)}}function Ob(a,b,c,e,f,g,k,l){var m=Y();try{T(a)(b,c,e,f,g,k,l)}catch(n){Z(m);if(n!==n+0)throw n;W(1,0)}}\nfunction ob(a,b,c,e,f,g,k,l){var m=Y();try{return T(a)(b,c,e,f,g,k,l)}catch(n){Z(m);if(n!==n+0)throw n;W(1,0)}}function Qb(a,b,c,e,f,g,k,l,m,n){var p=Y();try{T(a)(b,c,e,f,g,k,l,m,n)}catch(v){Z(p);if(v!==v+0)throw v;W(1,0)}}function Pb(a,b,c,e,f,g,k,l,m){var n=Y();try{T(a)(b,c,e,f,g,k,l,m)}catch(p){Z(n);if(p!==p+0)throw p;W(1,0)}}function pb(a,b,c,e,f,g,k,l,m,n,p){var v=Y();try{return T(a)(b,c,e,f,g,k,l,m,n,p)}catch(x){Z(v);if(x!==x+0)throw x;W(1,0)}}\nfunction Wb(a,b,c,e,f,g,k,l,m,n,p,v,x,h){var u=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v,x,h)}catch(w){Z(u);if(w!==w+0)throw w;W(1,0)}}function Hb(a,b,c,e,f){var g=Y();try{T(a)(b,c,e,f)}catch(k){Z(g);if(k!==k+0)throw k;W(1,0)}}function Rb(a,b,c,e,f,g,k,l,m,n,p,v){var x=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v)}catch(h){Z(x);if(h!==h+0)throw h;W(1,0)}}function Ub(a,b,c,e,f,g,k,l,m,n,p,v){var x=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v)}catch(h){Z(x);if(h!==h+0)throw h;W(1,0)}}\nfunction eb(a,b,c,e,f,g,k){var l=Y();try{return T(a)(b,c,e,f,g,k)}catch(m){Z(l);if(m!==m+0)throw m;W(1,0)}}function Sb(a,b,c,e,f,g,k,l,m,n,p,v,x,h){var u=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v,x,h)}catch(w){Z(u);if(w!==w+0)throw w;W(1,0)}}function Mb(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A){var B=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A)}catch(E){Z(B);if(E!==E+0)throw E;W(1,0)}}\nfunction Lb(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w){var A=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v,x,h,u,w)}catch(B){Z(A);if(B!==B+0)throw B;W(1,0)}}function Nb(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u){var w=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v,x,h,u)}catch(A){Z(w);if(A!==A+0)throw A;W(1,0)}}function Vb(a,b,c,e,f,g,k,l,m,n,p,v,x){var h=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v,x)}catch(u){Z(h);if(u!==u+0)throw u;W(1,0)}}function Fb(a,b,c,e,f){var g=Y();try{T(a)(b,c,e,f)}catch(k){Z(g);if(k!==k+0)throw k;W(1,0)}}\nfunction ib(a,b,c){var e=Y();try{return T(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;W(1,0)}}function hb(a,b,c){var e=Y();try{return T(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;W(1,0)}}function qb(a,b,c,e,f,g,k,l,m,n,p,v){var x=Y();try{return T(a)(b,c,e,f,g,k,l,m,n,p,v)}catch(h){Z(x);if(h!==h+0)throw h;W(1,0)}}function Tb(a,b,c,e,f,g,k,l,m,n,p){var v=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p)}catch(x){Z(v);if(x!==x+0)throw x;W(1,0)}}\nfunction Xb(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w){var A=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v,x,h,u,w)}catch(B){Z(A);if(B!==B+0)throw B;W(1,0)}}function db(a,b,c){var e=Y();try{return T(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;W(1,0)}}function vb(a,b,c,e){var f=Y();try{return yc(a,b,c,e)}catch(g){Z(f);if(g!==g+0)throw g;W(1,0)}}function ic(a,b,c,e){var f=Y();try{Ac(a,b,c,e)}catch(g){Z(f);if(g!==g+0)throw g;W(1,0)}}\nfunction cc(a,b,c,e,f,g,k,l){var m=Y();try{bd(a,b,c,e,f,g,k,l)}catch(n){Z(m);if(n!==n+0)throw n;W(1,0)}}function rb(a,b,c,e,f,g,k){var l=Y();try{return zc(a,b,c,e,f,g,k)}catch(m){Z(l);if(m!==m+0)throw m;W(1,0)}}function $b(a,b,c,e,f,g,k){var l=Y();try{Dc(a,b,c,e,f,g,k)}catch(m){Z(l);if(m!==m+0)throw m;W(1,0)}}function Zb(a,b,c,e,f,g,k,l){var m=Y();try{Ec(a,b,c,e,f,g,k,l)}catch(n){Z(m);if(n!==n+0)throw n;W(1,0)}}\nfunction yb(a,b){var c=Y();try{return Fc(a,b)}catch(e){Z(c);if(e!==e+0)throw e;W(1,0)}}function zb(a,b,c){var e=Y();try{return Bc(a,b,c)}catch(f){Z(e);if(f!==f+0)throw f;W(1,0)}}function hc(a,b,c,e,f,g,k,l,m,n,p,v,x,h){var u=Y();try{Gc(a,b,c,e,f,g,k,l,m,n,p,v,x,h)}catch(w){Z(u);if(w!==w+0)throw w;W(1,0)}}function fc(a,b,c,e,f,g){var k=Y();try{Cc(a,b,c,e,f,g)}catch(l){Z(k);if(l!==l+0)throw l;W(1,0)}}\nfunction bc(a,b,c,e,f,g,k){var l=Y();try{Hc(a,b,c,e,f,g,k)}catch(m){Z(l);if(m!==m+0)throw m;W(1,0)}}function kc(a,b,c,e,f,g,k){var l=Y();try{Ic(a,b,c,e,f,g,k)}catch(m){Z(l);if(m!==m+0)throw m;W(1,0)}}function ac(a,b,c,e,f,g){var k=Y();try{Jc(a,b,c,e,f,g)}catch(l){Z(k);if(l!==l+0)throw l;W(1,0)}}function Yb(a,b,c,e,f,g,k,l,m,n,p,v,x){var h=Y();try{Kc(a,b,c,e,f,g,k,l,m,n,p,v,x)}catch(u){Z(h);if(u!==u+0)throw u;W(1,0)}}\nfunction Bb(a,b,c,e,f){var g=Y();try{return Lc(a,b,c,e,f)}catch(k){Z(g);if(k!==k+0)throw k;W(1,0)}}function sb(a,b,c,e,f,g,k,l,m,n){var p=Y();try{return Mc(a,b,c,e,f,g,k,l,m,n)}catch(v){Z(p);if(v!==v+0)throw v;W(1,0)}}function ub(a,b,c,e,f,g,k,l,m){var n=Y();try{return Nc(a,b,c,e,f,g,k,l,m)}catch(p){Z(n);if(p!==p+0)throw p;W(1,0)}}function Ab(a,b,c,e){var f=Y();try{return Oc(a,b,c,e)}catch(g){Z(f);if(g!==g+0)throw g;W(1,0)}}\nfunction sc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F,O){var L=Y();try{Pc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F,O)}catch(P){Z(L);if(P!==P+0)throw P;W(1,0)}}function uc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F,O,L,P,U,Aa,Ba){var aa=Y();try{Qc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F,O,L,P,U,Aa,Ba)}catch(Ca){Z(aa);if(Ca!==Ca+0)throw Ca;W(1,0)}}\nfunction rc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F,O,L){var P=Y();try{Rc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F,O,L)}catch(U){Z(P);if(U!==U+0)throw U;W(1,0)}}function qc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F){var O=Y();try{Sc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F)}catch(L){Z(O);if(L!==L+0)throw L;W(1,0)}}\nfunction tc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F,O,L,P,U,Aa){var Ba=Y();try{Tc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F,O,L,P,U,Aa)}catch(aa){Z(Ba);if(aa!==aa+0)throw aa;W(1,0)}}function mc(a,b,c,e,f,g,k,l,m,n,p,v){var x=Y();try{Uc(a,b,c,e,f,g,k,l,m,n,p,v)}catch(h){Z(x);if(h!==h+0)throw h;W(1,0)}}function lc(a,b,c,e,f,g,k,l,m,n,p,v){var x=Y();try{Vc(a,b,c,e,f,g,k,l,m,n,p,v)}catch(h){Z(x);if(h!==h+0)throw h;W(1,0)}}\nfunction nc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J){var K=Y();try{Wc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J)}catch(F){Z(K);if(F!==F+0)throw F;W(1,0)}}function pc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u){var w=Y();try{Xc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u)}catch(A){Z(w);if(A!==A+0)throw A;W(1,0)}}function oc(a,b,c,e,f,g,k,l,m,n,p,v,x){var h=Y();try{Yc(a,b,c,e,f,g,k,l,m,n,p,v,x)}catch(u){Z(h);if(u!==u+0)throw u;W(1,0)}}\nfunction xb(a,b,c){var e=Y();try{return dd(a,b,c)}catch(f){Z(e);if(f!==f+0)throw f;W(1,0)}}function dc(a,b,c,e,f,g,k,l,m,n){var p=Y();try{Zc(a,b,c,e,f,g,k,l,m,n)}catch(v){Z(p);if(v!==v+0)throw v;W(1,0)}}function ec(a,b,c,e,f,g,k,l,m,n,p,v){var x=Y();try{$c(a,b,c,e,f,g,k,l,m,n,p,v)}catch(h){Z(x);if(h!==h+0)throw h;W(1,0)}}function jc(a,b,c,e,f){var g=Y();try{ed(a,b,c,e,f)}catch(k){Z(g);if(k!==k+0)throw k;W(1,0)}}\nfunction gc(a,b,c,e,f,g,k,l,m,n,p,v,x,h){var u=Y();try{cd(a,b,c,e,f,g,k,l,m,n,p,v,x,h)}catch(w){Z(u);if(w!==w+0)throw w;W(1,0)}}function wb(a){var b=Y();try{return xc(a)}catch(c){Z(b);if(c!==c+0)throw c;W(1,0)}}function tb(a,b,c,e,f){var g=Y();try{return ad(a,b,c,e,f)}catch(k){Z(g);if(k!==k+0)throw k;W(1,0)}}d.UTF8ToString=sa;d.stringToUTF8=function(a,b,c){return ta(a,C,b,c)};d.lengthBytesUTF8=ua;d.stackSave=Y;d.stackRestore=Z;d.stackAlloc=wc;var fd;N=function gd(){fd||hd();fd||(N=gd)};\nfunction hd(){function a(){if(!fd&&(fd=!0,d.calledRun=!0,!pa)){Ka(za);ba(d);if(d.onRuntimeInitialized)d.onRuntimeInitialized();if(d.postRun)for(\"function\"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;){var b=d.postRun.shift();Da.unshift(b)}Ka(Da)}}if(!(0<M)){if(d.preRun)for(\"function\"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)Ea();Ka(ya);0<M||(d.setStatus?(d.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){d.setStatus(\"\")},1);a()},1)):a())}}\nif(d.preInit)for(\"function\"==typeof d.preInit&&(d.preInit=[d.preInit]);0<d.preInit.length;)d.preInit.pop()();hd();\n\n\n  return ortWasm.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasm;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return ortWasm; });\nelse if (typeof exports === 'object')\n  exports[\"ortWasm\"] = ortWasm;\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nexports.__esModule = true;\r\nvar Guid = /** @class */ (function () {\r\n    function Guid(guid) {\r\n        if (!guid) {\r\n            throw new TypeError(\"Invalid argument; `value` has no value.\");\r\n        }\r\n        this.value = Guid.EMPTY;\r\n        if (guid && Guid.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n    Guid.isGuid = function (guid) {\r\n        var value = guid.toString();\r\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\r\n    };\r\n    Guid.create = function () {\r\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\"));\r\n    };\r\n    Guid.createEmpty = function () {\r\n        return new Guid(\"emptyguid\");\r\n    };\r\n    Guid.parse = function (guid) {\r\n        return new Guid(guid);\r\n    };\r\n    Guid.raw = function () {\r\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\");\r\n    };\r\n    Guid.gen = function (count) {\r\n        var out = \"\";\r\n        for (var i = 0; i < count; i++) {\r\n            // tslint:disable-next-line:no-bitwise\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    };\r\n    Guid.prototype.equals = function (other) {\r\n        // Comparing string `value` against provided `guid` will auto-call\r\n        // toString on `guid` for comparison\r\n        return Guid.isGuid(other) && this.value === other.toString();\r\n    };\r\n    Guid.prototype.isEmpty = function () {\r\n        return this.value === Guid.EMPTY;\r\n    };\r\n    Guid.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Guid.prototype.toJSON = function () {\r\n        return {\r\n            value: this.value\r\n        };\r\n    };\r\n    Guid.validator = new RegExp(\"^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$\", \"i\");\r\n    Guid.EMPTY = \"00000000-0000-0000-0000-000000000000\";\r\n    return Guid;\r\n}());\r\nexports.Guid = Guid;\r\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.onnx = (function() {\n\n    /**\n     * Namespace onnx.\n     * @exports onnx\n     * @namespace\n     */\n    var onnx = {};\n\n    /**\n     * Version enum.\n     * @name onnx.Version\n     * @enum {string}\n     * @property {number} _START_VERSION=0 _START_VERSION value\n     * @property {number} IR_VERSION_2017_10_10=1 IR_VERSION_2017_10_10 value\n     * @property {number} IR_VERSION_2017_10_30=2 IR_VERSION_2017_10_30 value\n     * @property {number} IR_VERSION_2017_11_3=3 IR_VERSION_2017_11_3 value\n     * @property {number} IR_VERSION_2019_1_22=4 IR_VERSION_2019_1_22 value\n     * @property {number} IR_VERSION=5 IR_VERSION value\n     */\n    onnx.Version = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"_START_VERSION\"] = 0;\n        values[valuesById[1] = \"IR_VERSION_2017_10_10\"] = 1;\n        values[valuesById[2] = \"IR_VERSION_2017_10_30\"] = 2;\n        values[valuesById[3] = \"IR_VERSION_2017_11_3\"] = 3;\n        values[valuesById[4] = \"IR_VERSION_2019_1_22\"] = 4;\n        values[valuesById[5] = \"IR_VERSION\"] = 5;\n        return values;\n    })();\n\n    onnx.AttributeProto = (function() {\n\n        /**\n         * Properties of an AttributeProto.\n         * @memberof onnx\n         * @interface IAttributeProto\n         * @property {string|null} [name] AttributeProto name\n         * @property {string|null} [refAttrName] AttributeProto refAttrName\n         * @property {string|null} [docString] AttributeProto docString\n         * @property {onnx.AttributeProto.AttributeType|null} [type] AttributeProto type\n         * @property {number|null} [f] AttributeProto f\n         * @property {number|Long|null} [i] AttributeProto i\n         * @property {Uint8Array|null} [s] AttributeProto s\n         * @property {onnx.ITensorProto|null} [t] AttributeProto t\n         * @property {onnx.IGraphProto|null} [g] AttributeProto g\n         * @property {Array.<number>|null} [floats] AttributeProto floats\n         * @property {Array.<number|Long>|null} [ints] AttributeProto ints\n         * @property {Array.<Uint8Array>|null} [strings] AttributeProto strings\n         * @property {Array.<onnx.ITensorProto>|null} [tensors] AttributeProto tensors\n         * @property {Array.<onnx.IGraphProto>|null} [graphs] AttributeProto graphs\n         */\n\n        /**\n         * Constructs a new AttributeProto.\n         * @memberof onnx\n         * @classdesc Represents an AttributeProto.\n         * @implements IAttributeProto\n         * @constructor\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         */\n        function AttributeProto(properties) {\n            this.floats = [];\n            this.ints = [];\n            this.strings = [];\n            this.tensors = [];\n            this.graphs = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * AttributeProto name.\n         * @member {string} name\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.name = \"\";\n\n        /**\n         * AttributeProto refAttrName.\n         * @member {string} refAttrName\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.refAttrName = \"\";\n\n        /**\n         * AttributeProto docString.\n         * @member {string} docString\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.docString = \"\";\n\n        /**\n         * AttributeProto type.\n         * @member {onnx.AttributeProto.AttributeType} type\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.type = 0;\n\n        /**\n         * AttributeProto f.\n         * @member {number} f\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.f = 0;\n\n        /**\n         * AttributeProto i.\n         * @member {number|Long} i\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.i = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * AttributeProto s.\n         * @member {Uint8Array} s\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.s = $util.newBuffer([]);\n\n        /**\n         * AttributeProto t.\n         * @member {onnx.ITensorProto|null|undefined} t\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.t = null;\n\n        /**\n         * AttributeProto g.\n         * @member {onnx.IGraphProto|null|undefined} g\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.g = null;\n\n        /**\n         * AttributeProto floats.\n         * @member {Array.<number>} floats\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.floats = $util.emptyArray;\n\n        /**\n         * AttributeProto ints.\n         * @member {Array.<number|Long>} ints\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.ints = $util.emptyArray;\n\n        /**\n         * AttributeProto strings.\n         * @member {Array.<Uint8Array>} strings\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.strings = $util.emptyArray;\n\n        /**\n         * AttributeProto tensors.\n         * @member {Array.<onnx.ITensorProto>} tensors\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.tensors = $util.emptyArray;\n\n        /**\n         * AttributeProto graphs.\n         * @member {Array.<onnx.IGraphProto>} graphs\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.graphs = $util.emptyArray;\n\n        /**\n         * Creates a new AttributeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         * @returns {onnx.AttributeProto} AttributeProto instance\n         */\n        AttributeProto.create = function create(properties) {\n            return new AttributeProto(properties);\n        };\n\n        /**\n         * Encodes the specified AttributeProto message. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.f);\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.i);\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.s);\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                $root.onnx.TensorProto.encode(message.t, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                $root.onnx.GraphProto.encode(message.g, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.floats != null && message.floats.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.floats.length; ++i)\n                    writer.float(message.floats[i]);\n                writer.ldelim();\n            }\n            if (message.ints != null && message.ints.length) {\n                writer.uint32(/* id 8, wireType 2 =*/66).fork();\n                for (var i = 0; i < message.ints.length; ++i)\n                    writer.int64(message.ints[i]);\n                writer.ldelim();\n            }\n            if (message.strings != null && message.strings.length)\n                for (var i = 0; i < message.strings.length; ++i)\n                    writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.strings[i]);\n            if (message.tensors != null && message.tensors.length)\n                for (var i = 0; i < message.tensors.length; ++i)\n                    $root.onnx.TensorProto.encode(message.tensors[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.graphs != null && message.graphs.length)\n                for (var i = 0; i < message.graphs.length; ++i)\n                    $root.onnx.GraphProto.encode(message.graphs[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 13, wireType 2 =*/106).string(message.docString);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.type);\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                writer.uint32(/* id 21, wireType 2 =*/170).string(message.refAttrName);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified AttributeProto message, length delimited. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.AttributeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 21:\n                    message.refAttrName = reader.string();\n                    break;\n                case 13:\n                    message.docString = reader.string();\n                    break;\n                case 20:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.f = reader.float();\n                    break;\n                case 3:\n                    message.i = reader.int64();\n                    break;\n                case 4:\n                    message.s = reader.bytes();\n                    break;\n                case 5:\n                    message.t = $root.onnx.TensorProto.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.g = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    if (!(message.floats && message.floats.length))\n                        message.floats = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floats.push(reader.float());\n                    } else\n                        message.floats.push(reader.float());\n                    break;\n                case 8:\n                    if (!(message.ints && message.ints.length))\n                        message.ints = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.ints.push(reader.int64());\n                    } else\n                        message.ints.push(reader.int64());\n                    break;\n                case 9:\n                    if (!(message.strings && message.strings.length))\n                        message.strings = [];\n                    message.strings.push(reader.bytes());\n                    break;\n                case 10:\n                    if (!(message.tensors && message.tensors.length))\n                        message.tensors = [];\n                    message.tensors.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 11:\n                    if (!(message.graphs && message.graphs.length))\n                        message.graphs = [];\n                    message.graphs.push($root.onnx.GraphProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an AttributeProto message.\n         * @function verify\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        AttributeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                if (!$util.isString(message.refAttrName))\n                    return \"refAttrName: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                switch (message.type) {\n                default:\n                    return \"type: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                    break;\n                }\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                if (typeof message.f !== \"number\")\n                    return \"f: number expected\";\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (!$util.isInteger(message.i) && !(message.i && $util.isInteger(message.i.low) && $util.isInteger(message.i.high)))\n                    return \"i: integer|Long expected\";\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                if (!(message.s && typeof message.s.length === \"number\" || $util.isString(message.s)))\n                    return \"s: buffer expected\";\n            if (message.t != null && message.hasOwnProperty(\"t\")) {\n                var error = $root.onnx.TensorProto.verify(message.t);\n                if (error)\n                    return \"t.\" + error;\n            }\n            if (message.g != null && message.hasOwnProperty(\"g\")) {\n                var error = $root.onnx.GraphProto.verify(message.g);\n                if (error)\n                    return \"g.\" + error;\n            }\n            if (message.floats != null && message.hasOwnProperty(\"floats\")) {\n                if (!Array.isArray(message.floats))\n                    return \"floats: array expected\";\n                for (var i = 0; i < message.floats.length; ++i)\n                    if (typeof message.floats[i] !== \"number\")\n                        return \"floats: number[] expected\";\n            }\n            if (message.ints != null && message.hasOwnProperty(\"ints\")) {\n                if (!Array.isArray(message.ints))\n                    return \"ints: array expected\";\n                for (var i = 0; i < message.ints.length; ++i)\n                    if (!$util.isInteger(message.ints[i]) && !(message.ints[i] && $util.isInteger(message.ints[i].low) && $util.isInteger(message.ints[i].high)))\n                        return \"ints: integer|Long[] expected\";\n            }\n            if (message.strings != null && message.hasOwnProperty(\"strings\")) {\n                if (!Array.isArray(message.strings))\n                    return \"strings: array expected\";\n                for (var i = 0; i < message.strings.length; ++i)\n                    if (!(message.strings[i] && typeof message.strings[i].length === \"number\" || $util.isString(message.strings[i])))\n                        return \"strings: buffer[] expected\";\n            }\n            if (message.tensors != null && message.hasOwnProperty(\"tensors\")) {\n                if (!Array.isArray(message.tensors))\n                    return \"tensors: array expected\";\n                for (var i = 0; i < message.tensors.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.tensors[i]);\n                    if (error)\n                        return \"tensors.\" + error;\n                }\n            }\n            if (message.graphs != null && message.hasOwnProperty(\"graphs\")) {\n                if (!Array.isArray(message.graphs))\n                    return \"graphs: array expected\";\n                for (var i = 0; i < message.graphs.length; ++i) {\n                    var error = $root.onnx.GraphProto.verify(message.graphs[i]);\n                    if (error)\n                        return \"graphs.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates an AttributeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.AttributeProto} AttributeProto\n         */\n        AttributeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.AttributeProto)\n                return object;\n            var message = new $root.onnx.AttributeProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.refAttrName != null)\n                message.refAttrName = String(object.refAttrName);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            switch (object.type) {\n            case \"UNDEFINED\":\n            case 0:\n                message.type = 0;\n                break;\n            case \"FLOAT\":\n            case 1:\n                message.type = 1;\n                break;\n            case \"INT\":\n            case 2:\n                message.type = 2;\n                break;\n            case \"STRING\":\n            case 3:\n                message.type = 3;\n                break;\n            case \"TENSOR\":\n            case 4:\n                message.type = 4;\n                break;\n            case \"GRAPH\":\n            case 5:\n                message.type = 5;\n                break;\n            case \"FLOATS\":\n            case 6:\n                message.type = 6;\n                break;\n            case \"INTS\":\n            case 7:\n                message.type = 7;\n                break;\n            case \"STRINGS\":\n            case 8:\n                message.type = 8;\n                break;\n            case \"TENSORS\":\n            case 9:\n                message.type = 9;\n                break;\n            case \"GRAPHS\":\n            case 10:\n                message.type = 10;\n                break;\n            }\n            if (object.f != null)\n                message.f = Number(object.f);\n            if (object.i != null)\n                if ($util.Long)\n                    (message.i = $util.Long.fromValue(object.i)).unsigned = false;\n                else if (typeof object.i === \"string\")\n                    message.i = parseInt(object.i, 10);\n                else if (typeof object.i === \"number\")\n                    message.i = object.i;\n                else if (typeof object.i === \"object\")\n                    message.i = new $util.LongBits(object.i.low >>> 0, object.i.high >>> 0).toNumber();\n            if (object.s != null)\n                if (typeof object.s === \"string\")\n                    $util.base64.decode(object.s, message.s = $util.newBuffer($util.base64.length(object.s)), 0);\n                else if (object.s.length)\n                    message.s = object.s;\n            if (object.t != null) {\n                if (typeof object.t !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.t: object expected\");\n                message.t = $root.onnx.TensorProto.fromObject(object.t);\n            }\n            if (object.g != null) {\n                if (typeof object.g !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.g: object expected\");\n                message.g = $root.onnx.GraphProto.fromObject(object.g);\n            }\n            if (object.floats) {\n                if (!Array.isArray(object.floats))\n                    throw TypeError(\".onnx.AttributeProto.floats: array expected\");\n                message.floats = [];\n                for (var i = 0; i < object.floats.length; ++i)\n                    message.floats[i] = Number(object.floats[i]);\n            }\n            if (object.ints) {\n                if (!Array.isArray(object.ints))\n                    throw TypeError(\".onnx.AttributeProto.ints: array expected\");\n                message.ints = [];\n                for (var i = 0; i < object.ints.length; ++i)\n                    if ($util.Long)\n                        (message.ints[i] = $util.Long.fromValue(object.ints[i])).unsigned = false;\n                    else if (typeof object.ints[i] === \"string\")\n                        message.ints[i] = parseInt(object.ints[i], 10);\n                    else if (typeof object.ints[i] === \"number\")\n                        message.ints[i] = object.ints[i];\n                    else if (typeof object.ints[i] === \"object\")\n                        message.ints[i] = new $util.LongBits(object.ints[i].low >>> 0, object.ints[i].high >>> 0).toNumber();\n            }\n            if (object.strings) {\n                if (!Array.isArray(object.strings))\n                    throw TypeError(\".onnx.AttributeProto.strings: array expected\");\n                message.strings = [];\n                for (var i = 0; i < object.strings.length; ++i)\n                    if (typeof object.strings[i] === \"string\")\n                        $util.base64.decode(object.strings[i], message.strings[i] = $util.newBuffer($util.base64.length(object.strings[i])), 0);\n                    else if (object.strings[i].length)\n                        message.strings[i] = object.strings[i];\n            }\n            if (object.tensors) {\n                if (!Array.isArray(object.tensors))\n                    throw TypeError(\".onnx.AttributeProto.tensors: array expected\");\n                message.tensors = [];\n                for (var i = 0; i < object.tensors.length; ++i) {\n                    if (typeof object.tensors[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.tensors: object expected\");\n                    message.tensors[i] = $root.onnx.TensorProto.fromObject(object.tensors[i]);\n                }\n            }\n            if (object.graphs) {\n                if (!Array.isArray(object.graphs))\n                    throw TypeError(\".onnx.AttributeProto.graphs: array expected\");\n                message.graphs = [];\n                for (var i = 0; i < object.graphs.length; ++i) {\n                    if (typeof object.graphs[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.graphs: object expected\");\n                    message.graphs[i] = $root.onnx.GraphProto.fromObject(object.graphs[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an AttributeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.AttributeProto} message AttributeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AttributeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.floats = [];\n                object.ints = [];\n                object.strings = [];\n                object.tensors = [];\n                object.graphs = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.f = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.i = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.i = options.longs === String ? \"0\" : 0;\n                if (options.bytes === String)\n                    object.s = \"\";\n                else {\n                    object.s = [];\n                    if (options.bytes !== Array)\n                        object.s = $util.newBuffer(object.s);\n                }\n                object.t = null;\n                object.g = null;\n                object.docString = \"\";\n                object.type = options.enums === String ? \"UNDEFINED\" : 0;\n                object.refAttrName = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                object.f = options.json && !isFinite(message.f) ? String(message.f) : message.f;\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (typeof message.i === \"number\")\n                    object.i = options.longs === String ? String(message.i) : message.i;\n                else\n                    object.i = options.longs === String ? $util.Long.prototype.toString.call(message.i) : options.longs === Number ? new $util.LongBits(message.i.low >>> 0, message.i.high >>> 0).toNumber() : message.i;\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                object.s = options.bytes === String ? $util.base64.encode(message.s, 0, message.s.length) : options.bytes === Array ? Array.prototype.slice.call(message.s) : message.s;\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                object.t = $root.onnx.TensorProto.toObject(message.t, options);\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                object.g = $root.onnx.GraphProto.toObject(message.g, options);\n            if (message.floats && message.floats.length) {\n                object.floats = [];\n                for (var j = 0; j < message.floats.length; ++j)\n                    object.floats[j] = options.json && !isFinite(message.floats[j]) ? String(message.floats[j]) : message.floats[j];\n            }\n            if (message.ints && message.ints.length) {\n                object.ints = [];\n                for (var j = 0; j < message.ints.length; ++j)\n                    if (typeof message.ints[j] === \"number\")\n                        object.ints[j] = options.longs === String ? String(message.ints[j]) : message.ints[j];\n                    else\n                        object.ints[j] = options.longs === String ? $util.Long.prototype.toString.call(message.ints[j]) : options.longs === Number ? new $util.LongBits(message.ints[j].low >>> 0, message.ints[j].high >>> 0).toNumber() : message.ints[j];\n            }\n            if (message.strings && message.strings.length) {\n                object.strings = [];\n                for (var j = 0; j < message.strings.length; ++j)\n                    object.strings[j] = options.bytes === String ? $util.base64.encode(message.strings[j], 0, message.strings[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.strings[j]) : message.strings[j];\n            }\n            if (message.tensors && message.tensors.length) {\n                object.tensors = [];\n                for (var j = 0; j < message.tensors.length; ++j)\n                    object.tensors[j] = $root.onnx.TensorProto.toObject(message.tensors[j], options);\n            }\n            if (message.graphs && message.graphs.length) {\n                object.graphs = [];\n                for (var j = 0; j < message.graphs.length; ++j)\n                    object.graphs[j] = $root.onnx.GraphProto.toObject(message.graphs[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = options.enums === String ? $root.onnx.AttributeProto.AttributeType[message.type] : message.type;\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                object.refAttrName = message.refAttrName;\n            return object;\n        };\n\n        /**\n         * Converts this AttributeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.AttributeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AttributeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * AttributeType enum.\n         * @name onnx.AttributeProto.AttributeType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} INT=2 INT value\n         * @property {number} STRING=3 STRING value\n         * @property {number} TENSOR=4 TENSOR value\n         * @property {number} GRAPH=5 GRAPH value\n         * @property {number} FLOATS=6 FLOATS value\n         * @property {number} INTS=7 INTS value\n         * @property {number} STRINGS=8 STRINGS value\n         * @property {number} TENSORS=9 TENSORS value\n         * @property {number} GRAPHS=10 GRAPHS value\n         */\n        AttributeProto.AttributeType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"INT\"] = 2;\n            values[valuesById[3] = \"STRING\"] = 3;\n            values[valuesById[4] = \"TENSOR\"] = 4;\n            values[valuesById[5] = \"GRAPH\"] = 5;\n            values[valuesById[6] = \"FLOATS\"] = 6;\n            values[valuesById[7] = \"INTS\"] = 7;\n            values[valuesById[8] = \"STRINGS\"] = 8;\n            values[valuesById[9] = \"TENSORS\"] = 9;\n            values[valuesById[10] = \"GRAPHS\"] = 10;\n            return values;\n        })();\n\n        return AttributeProto;\n    })();\n\n    onnx.ValueInfoProto = (function() {\n\n        /**\n         * Properties of a ValueInfoProto.\n         * @memberof onnx\n         * @interface IValueInfoProto\n         * @property {string|null} [name] ValueInfoProto name\n         * @property {onnx.ITypeProto|null} [type] ValueInfoProto type\n         * @property {string|null} [docString] ValueInfoProto docString\n         */\n\n        /**\n         * Constructs a new ValueInfoProto.\n         * @memberof onnx\n         * @classdesc Represents a ValueInfoProto.\n         * @implements IValueInfoProto\n         * @constructor\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         */\n        function ValueInfoProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ValueInfoProto name.\n         * @member {string} name\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.name = \"\";\n\n        /**\n         * ValueInfoProto type.\n         * @member {onnx.ITypeProto|null|undefined} type\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.type = null;\n\n        /**\n         * ValueInfoProto docString.\n         * @member {string} docString\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new ValueInfoProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         * @returns {onnx.ValueInfoProto} ValueInfoProto instance\n         */\n        ValueInfoProto.create = function create(properties) {\n            return new ValueInfoProto(properties);\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                $root.onnx.TypeProto.encode(message.type, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.docString);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message, length delimited. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ValueInfoProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.type = $root.onnx.TypeProto.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ValueInfoProto message.\n         * @function verify\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ValueInfoProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\")) {\n                var error = $root.onnx.TypeProto.verify(message.type);\n                if (error)\n                    return \"type.\" + error;\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ValueInfoProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         */\n        ValueInfoProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ValueInfoProto)\n                return object;\n            var message = new $root.onnx.ValueInfoProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.type != null) {\n                if (typeof object.type !== \"object\")\n                    throw TypeError(\".onnx.ValueInfoProto.type: object expected\");\n                message.type = $root.onnx.TypeProto.fromObject(object.type);\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ValueInfoProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.ValueInfoProto} message ValueInfoProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ValueInfoProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.name = \"\";\n                object.type = null;\n                object.docString = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = $root.onnx.TypeProto.toObject(message.type, options);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            return object;\n        };\n\n        /**\n         * Converts this ValueInfoProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ValueInfoProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ValueInfoProto;\n    })();\n\n    onnx.NodeProto = (function() {\n\n        /**\n         * Properties of a NodeProto.\n         * @memberof onnx\n         * @interface INodeProto\n         * @property {Array.<string>|null} [input] NodeProto input\n         * @property {Array.<string>|null} [output] NodeProto output\n         * @property {string|null} [name] NodeProto name\n         * @property {string|null} [opType] NodeProto opType\n         * @property {string|null} [domain] NodeProto domain\n         * @property {Array.<onnx.IAttributeProto>|null} [attribute] NodeProto attribute\n         * @property {string|null} [docString] NodeProto docString\n         */\n\n        /**\n         * Constructs a new NodeProto.\n         * @memberof onnx\n         * @classdesc Represents a NodeProto.\n         * @implements INodeProto\n         * @constructor\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         */\n        function NodeProto(properties) {\n            this.input = [];\n            this.output = [];\n            this.attribute = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * NodeProto input.\n         * @member {Array.<string>} input\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.input = $util.emptyArray;\n\n        /**\n         * NodeProto output.\n         * @member {Array.<string>} output\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.output = $util.emptyArray;\n\n        /**\n         * NodeProto name.\n         * @member {string} name\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.name = \"\";\n\n        /**\n         * NodeProto opType.\n         * @member {string} opType\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.opType = \"\";\n\n        /**\n         * NodeProto domain.\n         * @member {string} domain\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.domain = \"\";\n\n        /**\n         * NodeProto attribute.\n         * @member {Array.<onnx.IAttributeProto>} attribute\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.attribute = $util.emptyArray;\n\n        /**\n         * NodeProto docString.\n         * @member {string} docString\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new NodeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         * @returns {onnx.NodeProto} NodeProto instance\n         */\n        NodeProto.create = function create(properties) {\n            return new NodeProto(properties);\n        };\n\n        /**\n         * Encodes the specified NodeProto message. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.input[i]);\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.output[i]);\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.opType);\n            if (message.attribute != null && message.attribute.length)\n                for (var i = 0; i < message.attribute.length; ++i)\n                    $root.onnx.AttributeProto.encode(message.attribute[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 7, wireType 2 =*/58).string(message.domain);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified NodeProto message, length delimited. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.NodeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push(reader.string());\n                    break;\n                case 2:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push(reader.string());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.opType = reader.string();\n                    break;\n                case 7:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    if (!(message.attribute && message.attribute.length))\n                        message.attribute = [];\n                    message.attribute.push($root.onnx.AttributeProto.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a NodeProto message.\n         * @function verify\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        NodeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i)\n                    if (!$util.isString(message.input[i]))\n                        return \"input: string[] expected\";\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i)\n                    if (!$util.isString(message.output[i]))\n                        return \"output: string[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                if (!$util.isString(message.opType))\n                    return \"opType: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.attribute != null && message.hasOwnProperty(\"attribute\")) {\n                if (!Array.isArray(message.attribute))\n                    return \"attribute: array expected\";\n                for (var i = 0; i < message.attribute.length; ++i) {\n                    var error = $root.onnx.AttributeProto.verify(message.attribute[i]);\n                    if (error)\n                        return \"attribute.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a NodeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.NodeProto} NodeProto\n         */\n        NodeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.NodeProto)\n                return object;\n            var message = new $root.onnx.NodeProto();\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.NodeProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i)\n                    message.input[i] = String(object.input[i]);\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.NodeProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i)\n                    message.output[i] = String(object.output[i]);\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.opType != null)\n                message.opType = String(object.opType);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.attribute) {\n                if (!Array.isArray(object.attribute))\n                    throw TypeError(\".onnx.NodeProto.attribute: array expected\");\n                message.attribute = [];\n                for (var i = 0; i < object.attribute.length; ++i) {\n                    if (typeof object.attribute[i] !== \"object\")\n                        throw TypeError(\".onnx.NodeProto.attribute: object expected\");\n                    message.attribute[i] = $root.onnx.AttributeProto.fromObject(object.attribute[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a NodeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.NodeProto} message NodeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        NodeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.input = [];\n                object.output = [];\n                object.attribute = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.opType = \"\";\n                object.docString = \"\";\n                object.domain = \"\";\n            }\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = message.input[j];\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = message.output[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                object.opType = message.opType;\n            if (message.attribute && message.attribute.length) {\n                object.attribute = [];\n                for (var j = 0; j < message.attribute.length; ++j)\n                    object.attribute[j] = $root.onnx.AttributeProto.toObject(message.attribute[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            return object;\n        };\n\n        /**\n         * Converts this NodeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.NodeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        NodeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return NodeProto;\n    })();\n\n    onnx.ModelProto = (function() {\n\n        /**\n         * Properties of a ModelProto.\n         * @memberof onnx\n         * @interface IModelProto\n         * @property {number|Long|null} [irVersion] ModelProto irVersion\n         * @property {Array.<onnx.IOperatorSetIdProto>|null} [opsetImport] ModelProto opsetImport\n         * @property {string|null} [producerName] ModelProto producerName\n         * @property {string|null} [producerVersion] ModelProto producerVersion\n         * @property {string|null} [domain] ModelProto domain\n         * @property {number|Long|null} [modelVersion] ModelProto modelVersion\n         * @property {string|null} [docString] ModelProto docString\n         * @property {onnx.IGraphProto|null} [graph] ModelProto graph\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [metadataProps] ModelProto metadataProps\n         */\n\n        /**\n         * Constructs a new ModelProto.\n         * @memberof onnx\n         * @classdesc Represents a ModelProto.\n         * @implements IModelProto\n         * @constructor\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         */\n        function ModelProto(properties) {\n            this.opsetImport = [];\n            this.metadataProps = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ModelProto irVersion.\n         * @member {number|Long} irVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.irVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto opsetImport.\n         * @member {Array.<onnx.IOperatorSetIdProto>} opsetImport\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.opsetImport = $util.emptyArray;\n\n        /**\n         * ModelProto producerName.\n         * @member {string} producerName\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerName = \"\";\n\n        /**\n         * ModelProto producerVersion.\n         * @member {string} producerVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerVersion = \"\";\n\n        /**\n         * ModelProto domain.\n         * @member {string} domain\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.domain = \"\";\n\n        /**\n         * ModelProto modelVersion.\n         * @member {number|Long} modelVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.modelVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto docString.\n         * @member {string} docString\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.docString = \"\";\n\n        /**\n         * ModelProto graph.\n         * @member {onnx.IGraphProto|null|undefined} graph\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.graph = null;\n\n        /**\n         * ModelProto metadataProps.\n         * @member {Array.<onnx.IStringStringEntryProto>} metadataProps\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.metadataProps = $util.emptyArray;\n\n        /**\n         * Creates a new ModelProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         * @returns {onnx.ModelProto} ModelProto instance\n         */\n        ModelProto.create = function create(properties) {\n            return new ModelProto(properties);\n        };\n\n        /**\n         * Encodes the specified ModelProto message. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.irVersion);\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.producerName);\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.producerVersion);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.domain);\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.modelVersion);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                $root.onnx.GraphProto.encode(message.graph, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.opsetImport != null && message.opsetImport.length)\n                for (var i = 0; i < message.opsetImport.length; ++i)\n                    $root.onnx.OperatorSetIdProto.encode(message.opsetImport[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.metadataProps != null && message.metadataProps.length)\n                for (var i = 0; i < message.metadataProps.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.metadataProps[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ModelProto message, length delimited. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ModelProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.irVersion = reader.int64();\n                    break;\n                case 8:\n                    if (!(message.opsetImport && message.opsetImport.length))\n                        message.opsetImport = [];\n                    message.opsetImport.push($root.onnx.OperatorSetIdProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.producerName = reader.string();\n                    break;\n                case 3:\n                    message.producerVersion = reader.string();\n                    break;\n                case 4:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    message.modelVersion = reader.int64();\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                case 7:\n                    message.graph = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    if (!(message.metadataProps && message.metadataProps.length))\n                        message.metadataProps = [];\n                    message.metadataProps.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ModelProto message.\n         * @function verify\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ModelProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (!$util.isInteger(message.irVersion) && !(message.irVersion && $util.isInteger(message.irVersion.low) && $util.isInteger(message.irVersion.high)))\n                    return \"irVersion: integer|Long expected\";\n            if (message.opsetImport != null && message.hasOwnProperty(\"opsetImport\")) {\n                if (!Array.isArray(message.opsetImport))\n                    return \"opsetImport: array expected\";\n                for (var i = 0; i < message.opsetImport.length; ++i) {\n                    var error = $root.onnx.OperatorSetIdProto.verify(message.opsetImport[i]);\n                    if (error)\n                        return \"opsetImport.\" + error;\n                }\n            }\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                if (!$util.isString(message.producerName))\n                    return \"producerName: string expected\";\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                if (!$util.isString(message.producerVersion))\n                    return \"producerVersion: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (!$util.isInteger(message.modelVersion) && !(message.modelVersion && $util.isInteger(message.modelVersion.low) && $util.isInteger(message.modelVersion.high)))\n                    return \"modelVersion: integer|Long expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.graph != null && message.hasOwnProperty(\"graph\")) {\n                var error = $root.onnx.GraphProto.verify(message.graph);\n                if (error)\n                    return \"graph.\" + error;\n            }\n            if (message.metadataProps != null && message.hasOwnProperty(\"metadataProps\")) {\n                if (!Array.isArray(message.metadataProps))\n                    return \"metadataProps: array expected\";\n                for (var i = 0; i < message.metadataProps.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.metadataProps[i]);\n                    if (error)\n                        return \"metadataProps.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a ModelProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ModelProto} ModelProto\n         */\n        ModelProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ModelProto)\n                return object;\n            var message = new $root.onnx.ModelProto();\n            if (object.irVersion != null)\n                if ($util.Long)\n                    (message.irVersion = $util.Long.fromValue(object.irVersion)).unsigned = false;\n                else if (typeof object.irVersion === \"string\")\n                    message.irVersion = parseInt(object.irVersion, 10);\n                else if (typeof object.irVersion === \"number\")\n                    message.irVersion = object.irVersion;\n                else if (typeof object.irVersion === \"object\")\n                    message.irVersion = new $util.LongBits(object.irVersion.low >>> 0, object.irVersion.high >>> 0).toNumber();\n            if (object.opsetImport) {\n                if (!Array.isArray(object.opsetImport))\n                    throw TypeError(\".onnx.ModelProto.opsetImport: array expected\");\n                message.opsetImport = [];\n                for (var i = 0; i < object.opsetImport.length; ++i) {\n                    if (typeof object.opsetImport[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.opsetImport: object expected\");\n                    message.opsetImport[i] = $root.onnx.OperatorSetIdProto.fromObject(object.opsetImport[i]);\n                }\n            }\n            if (object.producerName != null)\n                message.producerName = String(object.producerName);\n            if (object.producerVersion != null)\n                message.producerVersion = String(object.producerVersion);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.modelVersion != null)\n                if ($util.Long)\n                    (message.modelVersion = $util.Long.fromValue(object.modelVersion)).unsigned = false;\n                else if (typeof object.modelVersion === \"string\")\n                    message.modelVersion = parseInt(object.modelVersion, 10);\n                else if (typeof object.modelVersion === \"number\")\n                    message.modelVersion = object.modelVersion;\n                else if (typeof object.modelVersion === \"object\")\n                    message.modelVersion = new $util.LongBits(object.modelVersion.low >>> 0, object.modelVersion.high >>> 0).toNumber();\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.graph != null) {\n                if (typeof object.graph !== \"object\")\n                    throw TypeError(\".onnx.ModelProto.graph: object expected\");\n                message.graph = $root.onnx.GraphProto.fromObject(object.graph);\n            }\n            if (object.metadataProps) {\n                if (!Array.isArray(object.metadataProps))\n                    throw TypeError(\".onnx.ModelProto.metadataProps: array expected\");\n                message.metadataProps = [];\n                for (var i = 0; i < object.metadataProps.length; ++i) {\n                    if (typeof object.metadataProps[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.metadataProps: object expected\");\n                    message.metadataProps[i] = $root.onnx.StringStringEntryProto.fromObject(object.metadataProps[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ModelProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.ModelProto} message ModelProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ModelProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.opsetImport = [];\n                object.metadataProps = [];\n            }\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.irVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.irVersion = options.longs === String ? \"0\" : 0;\n                object.producerName = \"\";\n                object.producerVersion = \"\";\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.modelVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.modelVersion = options.longs === String ? \"0\" : 0;\n                object.docString = \"\";\n                object.graph = null;\n            }\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (typeof message.irVersion === \"number\")\n                    object.irVersion = options.longs === String ? String(message.irVersion) : message.irVersion;\n                else\n                    object.irVersion = options.longs === String ? $util.Long.prototype.toString.call(message.irVersion) : options.longs === Number ? new $util.LongBits(message.irVersion.low >>> 0, message.irVersion.high >>> 0).toNumber() : message.irVersion;\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                object.producerName = message.producerName;\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                object.producerVersion = message.producerVersion;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (typeof message.modelVersion === \"number\")\n                    object.modelVersion = options.longs === String ? String(message.modelVersion) : message.modelVersion;\n                else\n                    object.modelVersion = options.longs === String ? $util.Long.prototype.toString.call(message.modelVersion) : options.longs === Number ? new $util.LongBits(message.modelVersion.low >>> 0, message.modelVersion.high >>> 0).toNumber() : message.modelVersion;\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                object.graph = $root.onnx.GraphProto.toObject(message.graph, options);\n            if (message.opsetImport && message.opsetImport.length) {\n                object.opsetImport = [];\n                for (var j = 0; j < message.opsetImport.length; ++j)\n                    object.opsetImport[j] = $root.onnx.OperatorSetIdProto.toObject(message.opsetImport[j], options);\n            }\n            if (message.metadataProps && message.metadataProps.length) {\n                object.metadataProps = [];\n                for (var j = 0; j < message.metadataProps.length; ++j)\n                    object.metadataProps[j] = $root.onnx.StringStringEntryProto.toObject(message.metadataProps[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this ModelProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ModelProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ModelProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ModelProto;\n    })();\n\n    onnx.StringStringEntryProto = (function() {\n\n        /**\n         * Properties of a StringStringEntryProto.\n         * @memberof onnx\n         * @interface IStringStringEntryProto\n         * @property {string|null} [key] StringStringEntryProto key\n         * @property {string|null} [value] StringStringEntryProto value\n         */\n\n        /**\n         * Constructs a new StringStringEntryProto.\n         * @memberof onnx\n         * @classdesc Represents a StringStringEntryProto.\n         * @implements IStringStringEntryProto\n         * @constructor\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         */\n        function StringStringEntryProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * StringStringEntryProto key.\n         * @member {string} key\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.key = \"\";\n\n        /**\n         * StringStringEntryProto value.\n         * @member {string} value\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.value = \"\";\n\n        /**\n         * Creates a new StringStringEntryProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto instance\n         */\n        StringStringEntryProto.create = function create(properties) {\n            return new StringStringEntryProto(properties);\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message, length delimited. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.StringStringEntryProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StringStringEntryProto message.\n         * @function verify\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StringStringEntryProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                if (!$util.isString(message.key))\n                    return \"key: string expected\";\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                if (!$util.isString(message.value))\n                    return \"value: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StringStringEntryProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         */\n        StringStringEntryProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.StringStringEntryProto)\n                return object;\n            var message = new $root.onnx.StringStringEntryProto();\n            if (object.key != null)\n                message.key = String(object.key);\n            if (object.value != null)\n                message.value = String(object.value);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a StringStringEntryProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.StringStringEntryProto} message StringStringEntryProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StringStringEntryProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.key = \"\";\n                object.value = \"\";\n            }\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                object.key = message.key;\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                object.value = message.value;\n            return object;\n        };\n\n        /**\n         * Converts this StringStringEntryProto to JSON.\n         * @function toJSON\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StringStringEntryProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return StringStringEntryProto;\n    })();\n\n    onnx.TensorAnnotation = (function() {\n\n        /**\n         * Properties of a TensorAnnotation.\n         * @memberof onnx\n         * @interface ITensorAnnotation\n         * @property {string|null} [tensorName] TensorAnnotation tensorName\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [quantParameterTensorNames] TensorAnnotation quantParameterTensorNames\n         */\n\n        /**\n         * Constructs a new TensorAnnotation.\n         * @memberof onnx\n         * @classdesc Represents a TensorAnnotation.\n         * @implements ITensorAnnotation\n         * @constructor\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         */\n        function TensorAnnotation(properties) {\n            this.quantParameterTensorNames = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorAnnotation tensorName.\n         * @member {string} tensorName\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.tensorName = \"\";\n\n        /**\n         * TensorAnnotation quantParameterTensorNames.\n         * @member {Array.<onnx.IStringStringEntryProto>} quantParameterTensorNames\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.quantParameterTensorNames = $util.emptyArray;\n\n        /**\n         * Creates a new TensorAnnotation instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         * @returns {onnx.TensorAnnotation} TensorAnnotation instance\n         */\n        TensorAnnotation.create = function create(properties) {\n            return new TensorAnnotation(properties);\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.tensorName);\n            if (message.quantParameterTensorNames != null && message.quantParameterTensorNames.length)\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.quantParameterTensorNames[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message, length delimited. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorAnnotation();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorName = reader.string();\n                    break;\n                case 2:\n                    if (!(message.quantParameterTensorNames && message.quantParameterTensorNames.length))\n                        message.quantParameterTensorNames = [];\n                    message.quantParameterTensorNames.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorAnnotation message.\n         * @function verify\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorAnnotation.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                if (!$util.isString(message.tensorName))\n                    return \"tensorName: string expected\";\n            if (message.quantParameterTensorNames != null && message.hasOwnProperty(\"quantParameterTensorNames\")) {\n                if (!Array.isArray(message.quantParameterTensorNames))\n                    return \"quantParameterTensorNames: array expected\";\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.quantParameterTensorNames[i]);\n                    if (error)\n                        return \"quantParameterTensorNames.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorAnnotation message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         */\n        TensorAnnotation.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorAnnotation)\n                return object;\n            var message = new $root.onnx.TensorAnnotation();\n            if (object.tensorName != null)\n                message.tensorName = String(object.tensorName);\n            if (object.quantParameterTensorNames) {\n                if (!Array.isArray(object.quantParameterTensorNames))\n                    throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: array expected\");\n                message.quantParameterTensorNames = [];\n                for (var i = 0; i < object.quantParameterTensorNames.length; ++i) {\n                    if (typeof object.quantParameterTensorNames[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: object expected\");\n                    message.quantParameterTensorNames[i] = $root.onnx.StringStringEntryProto.fromObject(object.quantParameterTensorNames[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorAnnotation message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.TensorAnnotation} message TensorAnnotation\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorAnnotation.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.quantParameterTensorNames = [];\n            if (options.defaults)\n                object.tensorName = \"\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                object.tensorName = message.tensorName;\n            if (message.quantParameterTensorNames && message.quantParameterTensorNames.length) {\n                object.quantParameterTensorNames = [];\n                for (var j = 0; j < message.quantParameterTensorNames.length; ++j)\n                    object.quantParameterTensorNames[j] = $root.onnx.StringStringEntryProto.toObject(message.quantParameterTensorNames[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorAnnotation to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorAnnotation.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return TensorAnnotation;\n    })();\n\n    onnx.GraphProto = (function() {\n\n        /**\n         * Properties of a GraphProto.\n         * @memberof onnx\n         * @interface IGraphProto\n         * @property {Array.<onnx.INodeProto>|null} [node] GraphProto node\n         * @property {string|null} [name] GraphProto name\n         * @property {Array.<onnx.ITensorProto>|null} [initializer] GraphProto initializer\n         * @property {string|null} [docString] GraphProto docString\n         * @property {Array.<onnx.IValueInfoProto>|null} [input] GraphProto input\n         * @property {Array.<onnx.IValueInfoProto>|null} [output] GraphProto output\n         * @property {Array.<onnx.IValueInfoProto>|null} [valueInfo] GraphProto valueInfo\n         * @property {Array.<onnx.ITensorAnnotation>|null} [quantizationAnnotation] GraphProto quantizationAnnotation\n         */\n\n        /**\n         * Constructs a new GraphProto.\n         * @memberof onnx\n         * @classdesc Represents a GraphProto.\n         * @implements IGraphProto\n         * @constructor\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         */\n        function GraphProto(properties) {\n            this.node = [];\n            this.initializer = [];\n            this.input = [];\n            this.output = [];\n            this.valueInfo = [];\n            this.quantizationAnnotation = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * GraphProto node.\n         * @member {Array.<onnx.INodeProto>} node\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.node = $util.emptyArray;\n\n        /**\n         * GraphProto name.\n         * @member {string} name\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.name = \"\";\n\n        /**\n         * GraphProto initializer.\n         * @member {Array.<onnx.ITensorProto>} initializer\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.initializer = $util.emptyArray;\n\n        /**\n         * GraphProto docString.\n         * @member {string} docString\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.docString = \"\";\n\n        /**\n         * GraphProto input.\n         * @member {Array.<onnx.IValueInfoProto>} input\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.input = $util.emptyArray;\n\n        /**\n         * GraphProto output.\n         * @member {Array.<onnx.IValueInfoProto>} output\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.output = $util.emptyArray;\n\n        /**\n         * GraphProto valueInfo.\n         * @member {Array.<onnx.IValueInfoProto>} valueInfo\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.valueInfo = $util.emptyArray;\n\n        /**\n         * GraphProto quantizationAnnotation.\n         * @member {Array.<onnx.ITensorAnnotation>} quantizationAnnotation\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.quantizationAnnotation = $util.emptyArray;\n\n        /**\n         * Creates a new GraphProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         * @returns {onnx.GraphProto} GraphProto instance\n         */\n        GraphProto.create = function create(properties) {\n            return new GraphProto(properties);\n        };\n\n        /**\n         * Encodes the specified GraphProto message. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.node != null && message.node.length)\n                for (var i = 0; i < message.node.length; ++i)\n                    $root.onnx.NodeProto.encode(message.node[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n            if (message.initializer != null && message.initializer.length)\n                for (var i = 0; i < message.initializer.length; ++i)\n                    $root.onnx.TensorProto.encode(message.initializer[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 10, wireType 2 =*/82).string(message.docString);\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.input[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.output[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n            if (message.valueInfo != null && message.valueInfo.length)\n                for (var i = 0; i < message.valueInfo.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.valueInfo[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.quantizationAnnotation != null && message.quantizationAnnotation.length)\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i)\n                    $root.onnx.TensorAnnotation.encode(message.quantizationAnnotation[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GraphProto message, length delimited. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.GraphProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.node && message.node.length))\n                        message.node = [];\n                    message.node.push($root.onnx.NodeProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    if (!(message.initializer && message.initializer.length))\n                        message.initializer = [];\n                    message.initializer.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.docString = reader.string();\n                    break;\n                case 11:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 12:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 13:\n                    if (!(message.valueInfo && message.valueInfo.length))\n                        message.valueInfo = [];\n                    message.valueInfo.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    if (!(message.quantizationAnnotation && message.quantizationAnnotation.length))\n                        message.quantizationAnnotation = [];\n                    message.quantizationAnnotation.push($root.onnx.TensorAnnotation.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GraphProto message.\n         * @function verify\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GraphProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.node != null && message.hasOwnProperty(\"node\")) {\n                if (!Array.isArray(message.node))\n                    return \"node: array expected\";\n                for (var i = 0; i < message.node.length; ++i) {\n                    var error = $root.onnx.NodeProto.verify(message.node[i]);\n                    if (error)\n                        return \"node.\" + error;\n                }\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.initializer != null && message.hasOwnProperty(\"initializer\")) {\n                if (!Array.isArray(message.initializer))\n                    return \"initializer: array expected\";\n                for (var i = 0; i < message.initializer.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.initializer[i]);\n                    if (error)\n                        return \"initializer.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.input[i]);\n                    if (error)\n                        return \"input.\" + error;\n                }\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.output[i]);\n                    if (error)\n                        return \"output.\" + error;\n                }\n            }\n            if (message.valueInfo != null && message.hasOwnProperty(\"valueInfo\")) {\n                if (!Array.isArray(message.valueInfo))\n                    return \"valueInfo: array expected\";\n                for (var i = 0; i < message.valueInfo.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.valueInfo[i]);\n                    if (error)\n                        return \"valueInfo.\" + error;\n                }\n            }\n            if (message.quantizationAnnotation != null && message.hasOwnProperty(\"quantizationAnnotation\")) {\n                if (!Array.isArray(message.quantizationAnnotation))\n                    return \"quantizationAnnotation: array expected\";\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i) {\n                    var error = $root.onnx.TensorAnnotation.verify(message.quantizationAnnotation[i]);\n                    if (error)\n                        return \"quantizationAnnotation.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a GraphProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.GraphProto} GraphProto\n         */\n        GraphProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.GraphProto)\n                return object;\n            var message = new $root.onnx.GraphProto();\n            if (object.node) {\n                if (!Array.isArray(object.node))\n                    throw TypeError(\".onnx.GraphProto.node: array expected\");\n                message.node = [];\n                for (var i = 0; i < object.node.length; ++i) {\n                    if (typeof object.node[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.node: object expected\");\n                    message.node[i] = $root.onnx.NodeProto.fromObject(object.node[i]);\n                }\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.initializer) {\n                if (!Array.isArray(object.initializer))\n                    throw TypeError(\".onnx.GraphProto.initializer: array expected\");\n                message.initializer = [];\n                for (var i = 0; i < object.initializer.length; ++i) {\n                    if (typeof object.initializer[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.initializer: object expected\");\n                    message.initializer[i] = $root.onnx.TensorProto.fromObject(object.initializer[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.GraphProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i) {\n                    if (typeof object.input[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.input: object expected\");\n                    message.input[i] = $root.onnx.ValueInfoProto.fromObject(object.input[i]);\n                }\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.GraphProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i) {\n                    if (typeof object.output[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.output: object expected\");\n                    message.output[i] = $root.onnx.ValueInfoProto.fromObject(object.output[i]);\n                }\n            }\n            if (object.valueInfo) {\n                if (!Array.isArray(object.valueInfo))\n                    throw TypeError(\".onnx.GraphProto.valueInfo: array expected\");\n                message.valueInfo = [];\n                for (var i = 0; i < object.valueInfo.length; ++i) {\n                    if (typeof object.valueInfo[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.valueInfo: object expected\");\n                    message.valueInfo[i] = $root.onnx.ValueInfoProto.fromObject(object.valueInfo[i]);\n                }\n            }\n            if (object.quantizationAnnotation) {\n                if (!Array.isArray(object.quantizationAnnotation))\n                    throw TypeError(\".onnx.GraphProto.quantizationAnnotation: array expected\");\n                message.quantizationAnnotation = [];\n                for (var i = 0; i < object.quantizationAnnotation.length; ++i) {\n                    if (typeof object.quantizationAnnotation[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.quantizationAnnotation: object expected\");\n                    message.quantizationAnnotation[i] = $root.onnx.TensorAnnotation.fromObject(object.quantizationAnnotation[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a GraphProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.GraphProto} message GraphProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GraphProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.node = [];\n                object.initializer = [];\n                object.input = [];\n                object.output = [];\n                object.valueInfo = [];\n                object.quantizationAnnotation = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.docString = \"\";\n            }\n            if (message.node && message.node.length) {\n                object.node = [];\n                for (var j = 0; j < message.node.length; ++j)\n                    object.node[j] = $root.onnx.NodeProto.toObject(message.node[j], options);\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.initializer && message.initializer.length) {\n                object.initializer = [];\n                for (var j = 0; j < message.initializer.length; ++j)\n                    object.initializer[j] = $root.onnx.TensorProto.toObject(message.initializer[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = $root.onnx.ValueInfoProto.toObject(message.input[j], options);\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = $root.onnx.ValueInfoProto.toObject(message.output[j], options);\n            }\n            if (message.valueInfo && message.valueInfo.length) {\n                object.valueInfo = [];\n                for (var j = 0; j < message.valueInfo.length; ++j)\n                    object.valueInfo[j] = $root.onnx.ValueInfoProto.toObject(message.valueInfo[j], options);\n            }\n            if (message.quantizationAnnotation && message.quantizationAnnotation.length) {\n                object.quantizationAnnotation = [];\n                for (var j = 0; j < message.quantizationAnnotation.length; ++j)\n                    object.quantizationAnnotation[j] = $root.onnx.TensorAnnotation.toObject(message.quantizationAnnotation[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this GraphProto to JSON.\n         * @function toJSON\n         * @memberof onnx.GraphProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GraphProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return GraphProto;\n    })();\n\n    onnx.TensorProto = (function() {\n\n        /**\n         * Properties of a TensorProto.\n         * @memberof onnx\n         * @interface ITensorProto\n         * @property {Array.<number|Long>|null} [dims] TensorProto dims\n         * @property {number|null} [dataType] TensorProto dataType\n         * @property {onnx.TensorProto.ISegment|null} [segment] TensorProto segment\n         * @property {Array.<number>|null} [floatData] TensorProto floatData\n         * @property {Array.<number>|null} [int32Data] TensorProto int32Data\n         * @property {Array.<Uint8Array>|null} [stringData] TensorProto stringData\n         * @property {Array.<number|Long>|null} [int64Data] TensorProto int64Data\n         * @property {string|null} [name] TensorProto name\n         * @property {string|null} [docString] TensorProto docString\n         * @property {Uint8Array|null} [rawData] TensorProto rawData\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [externalData] TensorProto externalData\n         * @property {onnx.TensorProto.DataLocation|null} [dataLocation] TensorProto dataLocation\n         * @property {Array.<number>|null} [doubleData] TensorProto doubleData\n         * @property {Array.<number|Long>|null} [uint64Data] TensorProto uint64Data\n         */\n\n        /**\n         * Constructs a new TensorProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorProto.\n         * @implements ITensorProto\n         * @constructor\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         */\n        function TensorProto(properties) {\n            this.dims = [];\n            this.floatData = [];\n            this.int32Data = [];\n            this.stringData = [];\n            this.int64Data = [];\n            this.externalData = [];\n            this.doubleData = [];\n            this.uint64Data = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorProto dims.\n         * @member {Array.<number|Long>} dims\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dims = $util.emptyArray;\n\n        /**\n         * TensorProto dataType.\n         * @member {number} dataType\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataType = 0;\n\n        /**\n         * TensorProto segment.\n         * @member {onnx.TensorProto.ISegment|null|undefined} segment\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.segment = null;\n\n        /**\n         * TensorProto floatData.\n         * @member {Array.<number>} floatData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.floatData = $util.emptyArray;\n\n        /**\n         * TensorProto int32Data.\n         * @member {Array.<number>} int32Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int32Data = $util.emptyArray;\n\n        /**\n         * TensorProto stringData.\n         * @member {Array.<Uint8Array>} stringData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.stringData = $util.emptyArray;\n\n        /**\n         * TensorProto int64Data.\n         * @member {Array.<number|Long>} int64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int64Data = $util.emptyArray;\n\n        /**\n         * TensorProto name.\n         * @member {string} name\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.name = \"\";\n\n        /**\n         * TensorProto docString.\n         * @member {string} docString\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.docString = \"\";\n\n        /**\n         * TensorProto rawData.\n         * @member {Uint8Array} rawData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.rawData = $util.newBuffer([]);\n\n        /**\n         * TensorProto externalData.\n         * @member {Array.<onnx.IStringStringEntryProto>} externalData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.externalData = $util.emptyArray;\n\n        /**\n         * TensorProto dataLocation.\n         * @member {onnx.TensorProto.DataLocation} dataLocation\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataLocation = 0;\n\n        /**\n         * TensorProto doubleData.\n         * @member {Array.<number>} doubleData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.doubleData = $util.emptyArray;\n\n        /**\n         * TensorProto uint64Data.\n         * @member {Array.<number|Long>} uint64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.uint64Data = $util.emptyArray;\n\n        /**\n         * Creates a new TensorProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         * @returns {onnx.TensorProto} TensorProto instance\n         */\n        TensorProto.create = function create(properties) {\n            return new TensorProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorProto message. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dims != null && message.dims.length) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                for (var i = 0; i < message.dims.length; ++i)\n                    writer.int64(message.dims[i]);\n                writer.ldelim();\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dataType);\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                $root.onnx.TensorProto.Segment.encode(message.segment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.floatData != null && message.floatData.length) {\n                writer.uint32(/* id 4, wireType 2 =*/34).fork();\n                for (var i = 0; i < message.floatData.length; ++i)\n                    writer.float(message.floatData[i]);\n                writer.ldelim();\n            }\n            if (message.int32Data != null && message.int32Data.length) {\n                writer.uint32(/* id 5, wireType 2 =*/42).fork();\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    writer.int32(message.int32Data[i]);\n                writer.ldelim();\n            }\n            if (message.stringData != null && message.stringData.length)\n                for (var i = 0; i < message.stringData.length; ++i)\n                    writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.stringData[i]);\n            if (message.int64Data != null && message.int64Data.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    writer.int64(message.int64Data[i]);\n                writer.ldelim();\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 8, wireType 2 =*/66).string(message.name);\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.rawData);\n            if (message.doubleData != null && message.doubleData.length) {\n                writer.uint32(/* id 10, wireType 2 =*/82).fork();\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    writer.double(message.doubleData[i]);\n                writer.ldelim();\n            }\n            if (message.uint64Data != null && message.uint64Data.length) {\n                writer.uint32(/* id 11, wireType 2 =*/90).fork();\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    writer.uint64(message.uint64Data[i]);\n                writer.ldelim();\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 12, wireType 2 =*/98).string(message.docString);\n            if (message.externalData != null && message.externalData.length)\n                for (var i = 0; i < message.externalData.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.externalData[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.dataLocation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorProto message, length delimited. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dims && message.dims.length))\n                        message.dims = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.dims.push(reader.int64());\n                    } else\n                        message.dims.push(reader.int64());\n                    break;\n                case 2:\n                    message.dataType = reader.int32();\n                    break;\n                case 3:\n                    message.segment = $root.onnx.TensorProto.Segment.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if (!(message.floatData && message.floatData.length))\n                        message.floatData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floatData.push(reader.float());\n                    } else\n                        message.floatData.push(reader.float());\n                    break;\n                case 5:\n                    if (!(message.int32Data && message.int32Data.length))\n                        message.int32Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int32Data.push(reader.int32());\n                    } else\n                        message.int32Data.push(reader.int32());\n                    break;\n                case 6:\n                    if (!(message.stringData && message.stringData.length))\n                        message.stringData = [];\n                    message.stringData.push(reader.bytes());\n                    break;\n                case 7:\n                    if (!(message.int64Data && message.int64Data.length))\n                        message.int64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int64Data.push(reader.int64());\n                    } else\n                        message.int64Data.push(reader.int64());\n                    break;\n                case 8:\n                    message.name = reader.string();\n                    break;\n                case 12:\n                    message.docString = reader.string();\n                    break;\n                case 9:\n                    message.rawData = reader.bytes();\n                    break;\n                case 13:\n                    if (!(message.externalData && message.externalData.length))\n                        message.externalData = [];\n                    message.externalData.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    message.dataLocation = reader.int32();\n                    break;\n                case 10:\n                    if (!(message.doubleData && message.doubleData.length))\n                        message.doubleData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.doubleData.push(reader.double());\n                    } else\n                        message.doubleData.push(reader.double());\n                    break;\n                case 11:\n                    if (!(message.uint64Data && message.uint64Data.length))\n                        message.uint64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.uint64Data.push(reader.uint64());\n                    } else\n                        message.uint64Data.push(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorProto message.\n         * @function verify\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dims != null && message.hasOwnProperty(\"dims\")) {\n                if (!Array.isArray(message.dims))\n                    return \"dims: array expected\";\n                for (var i = 0; i < message.dims.length; ++i)\n                    if (!$util.isInteger(message.dims[i]) && !(message.dims[i] && $util.isInteger(message.dims[i].low) && $util.isInteger(message.dims[i].high)))\n                        return \"dims: integer|Long[] expected\";\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                if (!$util.isInteger(message.dataType))\n                    return \"dataType: integer expected\";\n            if (message.segment != null && message.hasOwnProperty(\"segment\")) {\n                var error = $root.onnx.TensorProto.Segment.verify(message.segment);\n                if (error)\n                    return \"segment.\" + error;\n            }\n            if (message.floatData != null && message.hasOwnProperty(\"floatData\")) {\n                if (!Array.isArray(message.floatData))\n                    return \"floatData: array expected\";\n                for (var i = 0; i < message.floatData.length; ++i)\n                    if (typeof message.floatData[i] !== \"number\")\n                        return \"floatData: number[] expected\";\n            }\n            if (message.int32Data != null && message.hasOwnProperty(\"int32Data\")) {\n                if (!Array.isArray(message.int32Data))\n                    return \"int32Data: array expected\";\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    if (!$util.isInteger(message.int32Data[i]))\n                        return \"int32Data: integer[] expected\";\n            }\n            if (message.stringData != null && message.hasOwnProperty(\"stringData\")) {\n                if (!Array.isArray(message.stringData))\n                    return \"stringData: array expected\";\n                for (var i = 0; i < message.stringData.length; ++i)\n                    if (!(message.stringData[i] && typeof message.stringData[i].length === \"number\" || $util.isString(message.stringData[i])))\n                        return \"stringData: buffer[] expected\";\n            }\n            if (message.int64Data != null && message.hasOwnProperty(\"int64Data\")) {\n                if (!Array.isArray(message.int64Data))\n                    return \"int64Data: array expected\";\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    if (!$util.isInteger(message.int64Data[i]) && !(message.int64Data[i] && $util.isInteger(message.int64Data[i].low) && $util.isInteger(message.int64Data[i].high)))\n                        return \"int64Data: integer|Long[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                if (!(message.rawData && typeof message.rawData.length === \"number\" || $util.isString(message.rawData)))\n                    return \"rawData: buffer expected\";\n            if (message.externalData != null && message.hasOwnProperty(\"externalData\")) {\n                if (!Array.isArray(message.externalData))\n                    return \"externalData: array expected\";\n                for (var i = 0; i < message.externalData.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.externalData[i]);\n                    if (error)\n                        return \"externalData.\" + error;\n                }\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                switch (message.dataLocation) {\n                default:\n                    return \"dataLocation: enum value expected\";\n                case 0:\n                case 1:\n                    break;\n                }\n            if (message.doubleData != null && message.hasOwnProperty(\"doubleData\")) {\n                if (!Array.isArray(message.doubleData))\n                    return \"doubleData: array expected\";\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    if (typeof message.doubleData[i] !== \"number\")\n                        return \"doubleData: number[] expected\";\n            }\n            if (message.uint64Data != null && message.hasOwnProperty(\"uint64Data\")) {\n                if (!Array.isArray(message.uint64Data))\n                    return \"uint64Data: array expected\";\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    if (!$util.isInteger(message.uint64Data[i]) && !(message.uint64Data[i] && $util.isInteger(message.uint64Data[i].low) && $util.isInteger(message.uint64Data[i].high)))\n                        return \"uint64Data: integer|Long[] expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorProto} TensorProto\n         */\n        TensorProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorProto)\n                return object;\n            var message = new $root.onnx.TensorProto();\n            if (object.dims) {\n                if (!Array.isArray(object.dims))\n                    throw TypeError(\".onnx.TensorProto.dims: array expected\");\n                message.dims = [];\n                for (var i = 0; i < object.dims.length; ++i)\n                    if ($util.Long)\n                        (message.dims[i] = $util.Long.fromValue(object.dims[i])).unsigned = false;\n                    else if (typeof object.dims[i] === \"string\")\n                        message.dims[i] = parseInt(object.dims[i], 10);\n                    else if (typeof object.dims[i] === \"number\")\n                        message.dims[i] = object.dims[i];\n                    else if (typeof object.dims[i] === \"object\")\n                        message.dims[i] = new $util.LongBits(object.dims[i].low >>> 0, object.dims[i].high >>> 0).toNumber();\n            }\n            if (object.dataType != null)\n                message.dataType = object.dataType | 0;\n            if (object.segment != null) {\n                if (typeof object.segment !== \"object\")\n                    throw TypeError(\".onnx.TensorProto.segment: object expected\");\n                message.segment = $root.onnx.TensorProto.Segment.fromObject(object.segment);\n            }\n            if (object.floatData) {\n                if (!Array.isArray(object.floatData))\n                    throw TypeError(\".onnx.TensorProto.floatData: array expected\");\n                message.floatData = [];\n                for (var i = 0; i < object.floatData.length; ++i)\n                    message.floatData[i] = Number(object.floatData[i]);\n            }\n            if (object.int32Data) {\n                if (!Array.isArray(object.int32Data))\n                    throw TypeError(\".onnx.TensorProto.int32Data: array expected\");\n                message.int32Data = [];\n                for (var i = 0; i < object.int32Data.length; ++i)\n                    message.int32Data[i] = object.int32Data[i] | 0;\n            }\n            if (object.stringData) {\n                if (!Array.isArray(object.stringData))\n                    throw TypeError(\".onnx.TensorProto.stringData: array expected\");\n                message.stringData = [];\n                for (var i = 0; i < object.stringData.length; ++i)\n                    if (typeof object.stringData[i] === \"string\")\n                        $util.base64.decode(object.stringData[i], message.stringData[i] = $util.newBuffer($util.base64.length(object.stringData[i])), 0);\n                    else if (object.stringData[i].length)\n                        message.stringData[i] = object.stringData[i];\n            }\n            if (object.int64Data) {\n                if (!Array.isArray(object.int64Data))\n                    throw TypeError(\".onnx.TensorProto.int64Data: array expected\");\n                message.int64Data = [];\n                for (var i = 0; i < object.int64Data.length; ++i)\n                    if ($util.Long)\n                        (message.int64Data[i] = $util.Long.fromValue(object.int64Data[i])).unsigned = false;\n                    else if (typeof object.int64Data[i] === \"string\")\n                        message.int64Data[i] = parseInt(object.int64Data[i], 10);\n                    else if (typeof object.int64Data[i] === \"number\")\n                        message.int64Data[i] = object.int64Data[i];\n                    else if (typeof object.int64Data[i] === \"object\")\n                        message.int64Data[i] = new $util.LongBits(object.int64Data[i].low >>> 0, object.int64Data[i].high >>> 0).toNumber();\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.rawData != null)\n                if (typeof object.rawData === \"string\")\n                    $util.base64.decode(object.rawData, message.rawData = $util.newBuffer($util.base64.length(object.rawData)), 0);\n                else if (object.rawData.length)\n                    message.rawData = object.rawData;\n            if (object.externalData) {\n                if (!Array.isArray(object.externalData))\n                    throw TypeError(\".onnx.TensorProto.externalData: array expected\");\n                message.externalData = [];\n                for (var i = 0; i < object.externalData.length; ++i) {\n                    if (typeof object.externalData[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorProto.externalData: object expected\");\n                    message.externalData[i] = $root.onnx.StringStringEntryProto.fromObject(object.externalData[i]);\n                }\n            }\n            switch (object.dataLocation) {\n            case \"DEFAULT\":\n            case 0:\n                message.dataLocation = 0;\n                break;\n            case \"EXTERNAL\":\n            case 1:\n                message.dataLocation = 1;\n                break;\n            }\n            if (object.doubleData) {\n                if (!Array.isArray(object.doubleData))\n                    throw TypeError(\".onnx.TensorProto.doubleData: array expected\");\n                message.doubleData = [];\n                for (var i = 0; i < object.doubleData.length; ++i)\n                    message.doubleData[i] = Number(object.doubleData[i]);\n            }\n            if (object.uint64Data) {\n                if (!Array.isArray(object.uint64Data))\n                    throw TypeError(\".onnx.TensorProto.uint64Data: array expected\");\n                message.uint64Data = [];\n                for (var i = 0; i < object.uint64Data.length; ++i)\n                    if ($util.Long)\n                        (message.uint64Data[i] = $util.Long.fromValue(object.uint64Data[i])).unsigned = true;\n                    else if (typeof object.uint64Data[i] === \"string\")\n                        message.uint64Data[i] = parseInt(object.uint64Data[i], 10);\n                    else if (typeof object.uint64Data[i] === \"number\")\n                        message.uint64Data[i] = object.uint64Data[i];\n                    else if (typeof object.uint64Data[i] === \"object\")\n                        message.uint64Data[i] = new $util.LongBits(object.uint64Data[i].low >>> 0, object.uint64Data[i].high >>> 0).toNumber(true);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.TensorProto} message TensorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.dims = [];\n                object.floatData = [];\n                object.int32Data = [];\n                object.stringData = [];\n                object.int64Data = [];\n                object.doubleData = [];\n                object.uint64Data = [];\n                object.externalData = [];\n            }\n            if (options.defaults) {\n                object.dataType = 0;\n                object.segment = null;\n                object.name = \"\";\n                if (options.bytes === String)\n                    object.rawData = \"\";\n                else {\n                    object.rawData = [];\n                    if (options.bytes !== Array)\n                        object.rawData = $util.newBuffer(object.rawData);\n                }\n                object.docString = \"\";\n                object.dataLocation = options.enums === String ? \"DEFAULT\" : 0;\n            }\n            if (message.dims && message.dims.length) {\n                object.dims = [];\n                for (var j = 0; j < message.dims.length; ++j)\n                    if (typeof message.dims[j] === \"number\")\n                        object.dims[j] = options.longs === String ? String(message.dims[j]) : message.dims[j];\n                    else\n                        object.dims[j] = options.longs === String ? $util.Long.prototype.toString.call(message.dims[j]) : options.longs === Number ? new $util.LongBits(message.dims[j].low >>> 0, message.dims[j].high >>> 0).toNumber() : message.dims[j];\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                object.dataType = message.dataType;\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                object.segment = $root.onnx.TensorProto.Segment.toObject(message.segment, options);\n            if (message.floatData && message.floatData.length) {\n                object.floatData = [];\n                for (var j = 0; j < message.floatData.length; ++j)\n                    object.floatData[j] = options.json && !isFinite(message.floatData[j]) ? String(message.floatData[j]) : message.floatData[j];\n            }\n            if (message.int32Data && message.int32Data.length) {\n                object.int32Data = [];\n                for (var j = 0; j < message.int32Data.length; ++j)\n                    object.int32Data[j] = message.int32Data[j];\n            }\n            if (message.stringData && message.stringData.length) {\n                object.stringData = [];\n                for (var j = 0; j < message.stringData.length; ++j)\n                    object.stringData[j] = options.bytes === String ? $util.base64.encode(message.stringData[j], 0, message.stringData[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.stringData[j]) : message.stringData[j];\n            }\n            if (message.int64Data && message.int64Data.length) {\n                object.int64Data = [];\n                for (var j = 0; j < message.int64Data.length; ++j)\n                    if (typeof message.int64Data[j] === \"number\")\n                        object.int64Data[j] = options.longs === String ? String(message.int64Data[j]) : message.int64Data[j];\n                    else\n                        object.int64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.int64Data[j]) : options.longs === Number ? new $util.LongBits(message.int64Data[j].low >>> 0, message.int64Data[j].high >>> 0).toNumber() : message.int64Data[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                object.rawData = options.bytes === String ? $util.base64.encode(message.rawData, 0, message.rawData.length) : options.bytes === Array ? Array.prototype.slice.call(message.rawData) : message.rawData;\n            if (message.doubleData && message.doubleData.length) {\n                object.doubleData = [];\n                for (var j = 0; j < message.doubleData.length; ++j)\n                    object.doubleData[j] = options.json && !isFinite(message.doubleData[j]) ? String(message.doubleData[j]) : message.doubleData[j];\n            }\n            if (message.uint64Data && message.uint64Data.length) {\n                object.uint64Data = [];\n                for (var j = 0; j < message.uint64Data.length; ++j)\n                    if (typeof message.uint64Data[j] === \"number\")\n                        object.uint64Data[j] = options.longs === String ? String(message.uint64Data[j]) : message.uint64Data[j];\n                    else\n                        object.uint64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.uint64Data[j]) : options.longs === Number ? new $util.LongBits(message.uint64Data[j].low >>> 0, message.uint64Data[j].high >>> 0).toNumber(true) : message.uint64Data[j];\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.externalData && message.externalData.length) {\n                object.externalData = [];\n                for (var j = 0; j < message.externalData.length; ++j)\n                    object.externalData[j] = $root.onnx.StringStringEntryProto.toObject(message.externalData[j], options);\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                object.dataLocation = options.enums === String ? $root.onnx.TensorProto.DataLocation[message.dataLocation] : message.dataLocation;\n            return object;\n        };\n\n        /**\n         * Converts this TensorProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * DataType enum.\n         * @name onnx.TensorProto.DataType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} UINT8=2 UINT8 value\n         * @property {number} INT8=3 INT8 value\n         * @property {number} UINT16=4 UINT16 value\n         * @property {number} INT16=5 INT16 value\n         * @property {number} INT32=6 INT32 value\n         * @property {number} INT64=7 INT64 value\n         * @property {number} STRING=8 STRING value\n         * @property {number} BOOL=9 BOOL value\n         * @property {number} FLOAT16=10 FLOAT16 value\n         * @property {number} DOUBLE=11 DOUBLE value\n         * @property {number} UINT32=12 UINT32 value\n         * @property {number} UINT64=13 UINT64 value\n         * @property {number} COMPLEX64=14 COMPLEX64 value\n         * @property {number} COMPLEX128=15 COMPLEX128 value\n         * @property {number} BFLOAT16=16 BFLOAT16 value\n         */\n        TensorProto.DataType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"UINT8\"] = 2;\n            values[valuesById[3] = \"INT8\"] = 3;\n            values[valuesById[4] = \"UINT16\"] = 4;\n            values[valuesById[5] = \"INT16\"] = 5;\n            values[valuesById[6] = \"INT32\"] = 6;\n            values[valuesById[7] = \"INT64\"] = 7;\n            values[valuesById[8] = \"STRING\"] = 8;\n            values[valuesById[9] = \"BOOL\"] = 9;\n            values[valuesById[10] = \"FLOAT16\"] = 10;\n            values[valuesById[11] = \"DOUBLE\"] = 11;\n            values[valuesById[12] = \"UINT32\"] = 12;\n            values[valuesById[13] = \"UINT64\"] = 13;\n            values[valuesById[14] = \"COMPLEX64\"] = 14;\n            values[valuesById[15] = \"COMPLEX128\"] = 15;\n            values[valuesById[16] = \"BFLOAT16\"] = 16;\n            return values;\n        })();\n\n        TensorProto.Segment = (function() {\n\n            /**\n             * Properties of a Segment.\n             * @memberof onnx.TensorProto\n             * @interface ISegment\n             * @property {number|Long|null} [begin] Segment begin\n             * @property {number|Long|null} [end] Segment end\n             */\n\n            /**\n             * Constructs a new Segment.\n             * @memberof onnx.TensorProto\n             * @classdesc Represents a Segment.\n             * @implements ISegment\n             * @constructor\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             */\n            function Segment(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Segment begin.\n             * @member {number|Long} begin\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.begin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Segment end.\n             * @member {number|Long} end\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.end = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Creates a new Segment instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             * @returns {onnx.TensorProto.Segment} Segment instance\n             */\n            Segment.create = function create(properties) {\n                return new Segment(properties);\n            };\n\n            /**\n             * Encodes the specified Segment message. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.begin);\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.end);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Segment message, length delimited. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto.Segment();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.begin = reader.int64();\n                        break;\n                    case 2:\n                        message.end = reader.int64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Segment message.\n             * @function verify\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Segment.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (!$util.isInteger(message.begin) && !(message.begin && $util.isInteger(message.begin.low) && $util.isInteger(message.begin.high)))\n                        return \"begin: integer|Long expected\";\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (!$util.isInteger(message.end) && !(message.end && $util.isInteger(message.end.low) && $util.isInteger(message.end.high)))\n                        return \"end: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Segment message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorProto.Segment} Segment\n             */\n            Segment.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorProto.Segment)\n                    return object;\n                var message = new $root.onnx.TensorProto.Segment();\n                if (object.begin != null)\n                    if ($util.Long)\n                        (message.begin = $util.Long.fromValue(object.begin)).unsigned = false;\n                    else if (typeof object.begin === \"string\")\n                        message.begin = parseInt(object.begin, 10);\n                    else if (typeof object.begin === \"number\")\n                        message.begin = object.begin;\n                    else if (typeof object.begin === \"object\")\n                        message.begin = new $util.LongBits(object.begin.low >>> 0, object.begin.high >>> 0).toNumber();\n                if (object.end != null)\n                    if ($util.Long)\n                        (message.end = $util.Long.fromValue(object.end)).unsigned = false;\n                    else if (typeof object.end === \"string\")\n                        message.end = parseInt(object.end, 10);\n                    else if (typeof object.end === \"number\")\n                        message.end = object.end;\n                    else if (typeof object.end === \"object\")\n                        message.end = new $util.LongBits(object.end.low >>> 0, object.end.high >>> 0).toNumber();\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Segment message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.Segment} message Segment\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Segment.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.begin = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.begin = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.end = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.end = options.longs === String ? \"0\" : 0;\n                }\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (typeof message.begin === \"number\")\n                        object.begin = options.longs === String ? String(message.begin) : message.begin;\n                    else\n                        object.begin = options.longs === String ? $util.Long.prototype.toString.call(message.begin) : options.longs === Number ? new $util.LongBits(message.begin.low >>> 0, message.begin.high >>> 0).toNumber() : message.begin;\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (typeof message.end === \"number\")\n                        object.end = options.longs === String ? String(message.end) : message.end;\n                    else\n                        object.end = options.longs === String ? $util.Long.prototype.toString.call(message.end) : options.longs === Number ? new $util.LongBits(message.end.low >>> 0, message.end.high >>> 0).toNumber() : message.end;\n                return object;\n            };\n\n            /**\n             * Converts this Segment to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Segment.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Segment;\n        })();\n\n        /**\n         * DataLocation enum.\n         * @name onnx.TensorProto.DataLocation\n         * @enum {string}\n         * @property {number} DEFAULT=0 DEFAULT value\n         * @property {number} EXTERNAL=1 EXTERNAL value\n         */\n        TensorProto.DataLocation = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"DEFAULT\"] = 0;\n            values[valuesById[1] = \"EXTERNAL\"] = 1;\n            return values;\n        })();\n\n        return TensorProto;\n    })();\n\n    onnx.TensorShapeProto = (function() {\n\n        /**\n         * Properties of a TensorShapeProto.\n         * @memberof onnx\n         * @interface ITensorShapeProto\n         * @property {Array.<onnx.TensorShapeProto.IDimension>|null} [dim] TensorShapeProto dim\n         */\n\n        /**\n         * Constructs a new TensorShapeProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorShapeProto.\n         * @implements ITensorShapeProto\n         * @constructor\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         */\n        function TensorShapeProto(properties) {\n            this.dim = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorShapeProto dim.\n         * @member {Array.<onnx.TensorShapeProto.IDimension>} dim\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         */\n        TensorShapeProto.prototype.dim = $util.emptyArray;\n\n        /**\n         * Creates a new TensorShapeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         * @returns {onnx.TensorShapeProto} TensorShapeProto instance\n         */\n        TensorShapeProto.create = function create(properties) {\n            return new TensorShapeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dim != null && message.dim.length)\n                for (var i = 0; i < message.dim.length; ++i)\n                    $root.onnx.TensorShapeProto.Dimension.encode(message.dim[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dim && message.dim.length))\n                        message.dim = [];\n                    message.dim.push($root.onnx.TensorShapeProto.Dimension.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorShapeProto message.\n         * @function verify\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorShapeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dim != null && message.hasOwnProperty(\"dim\")) {\n                if (!Array.isArray(message.dim))\n                    return \"dim: array expected\";\n                for (var i = 0; i < message.dim.length; ++i) {\n                    var error = $root.onnx.TensorShapeProto.Dimension.verify(message.dim[i]);\n                    if (error)\n                        return \"dim.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorShapeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         */\n        TensorShapeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorShapeProto)\n                return object;\n            var message = new $root.onnx.TensorShapeProto();\n            if (object.dim) {\n                if (!Array.isArray(object.dim))\n                    throw TypeError(\".onnx.TensorShapeProto.dim: array expected\");\n                message.dim = [];\n                for (var i = 0; i < object.dim.length; ++i) {\n                    if (typeof object.dim[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorShapeProto.dim: object expected\");\n                    message.dim[i] = $root.onnx.TensorShapeProto.Dimension.fromObject(object.dim[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorShapeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.TensorShapeProto} message TensorShapeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorShapeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.dim = [];\n            if (message.dim && message.dim.length) {\n                object.dim = [];\n                for (var j = 0; j < message.dim.length; ++j)\n                    object.dim[j] = $root.onnx.TensorShapeProto.Dimension.toObject(message.dim[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorShapeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorShapeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TensorShapeProto.Dimension = (function() {\n\n            /**\n             * Properties of a Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @interface IDimension\n             * @property {number|Long|null} [dimValue] Dimension dimValue\n             * @property {string|null} [dimParam] Dimension dimParam\n             * @property {string|null} [denotation] Dimension denotation\n             */\n\n            /**\n             * Constructs a new Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @classdesc Represents a Dimension.\n             * @implements IDimension\n             * @constructor\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             */\n            function Dimension(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Dimension dimValue.\n             * @member {number|Long} dimValue\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Dimension dimParam.\n             * @member {string} dimParam\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimParam = \"\";\n\n            /**\n             * Dimension denotation.\n             * @member {string} denotation\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.denotation = \"\";\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * Dimension value.\n             * @member {\"dimValue\"|\"dimParam\"|undefined} value\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Object.defineProperty(Dimension.prototype, \"value\", {\n                get: $util.oneOfGetter($oneOfFields = [\"dimValue\", \"dimParam\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new Dimension instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension instance\n             */\n            Dimension.create = function create(properties) {\n                return new Dimension(properties);\n            };\n\n            /**\n             * Encodes the specified Dimension message. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.dimValue);\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.dimParam);\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.denotation);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Dimension message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto.Dimension();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dimValue = reader.int64();\n                        break;\n                    case 2:\n                        message.dimParam = reader.string();\n                        break;\n                    case 3:\n                        message.denotation = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Dimension message.\n             * @function verify\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Dimension.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                var properties = {};\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    properties.value = 1;\n                    if (!$util.isInteger(message.dimValue) && !(message.dimValue && $util.isInteger(message.dimValue.low) && $util.isInteger(message.dimValue.high)))\n                        return \"dimValue: integer|Long expected\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    if (properties.value === 1)\n                        return \"value: multiple values\";\n                    properties.value = 1;\n                    if (!$util.isString(message.dimParam))\n                        return \"dimParam: string expected\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    if (!$util.isString(message.denotation))\n                        return \"denotation: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Dimension message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             */\n            Dimension.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorShapeProto.Dimension)\n                    return object;\n                var message = new $root.onnx.TensorShapeProto.Dimension();\n                if (object.dimValue != null)\n                    if ($util.Long)\n                        (message.dimValue = $util.Long.fromValue(object.dimValue)).unsigned = false;\n                    else if (typeof object.dimValue === \"string\")\n                        message.dimValue = parseInt(object.dimValue, 10);\n                    else if (typeof object.dimValue === \"number\")\n                        message.dimValue = object.dimValue;\n                    else if (typeof object.dimValue === \"object\")\n                        message.dimValue = new $util.LongBits(object.dimValue.low >>> 0, object.dimValue.high >>> 0).toNumber();\n                if (object.dimParam != null)\n                    message.dimParam = String(object.dimParam);\n                if (object.denotation != null)\n                    message.denotation = String(object.denotation);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Dimension message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.Dimension} message Dimension\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Dimension.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.denotation = \"\";\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    if (typeof message.dimValue === \"number\")\n                        object.dimValue = options.longs === String ? String(message.dimValue) : message.dimValue;\n                    else\n                        object.dimValue = options.longs === String ? $util.Long.prototype.toString.call(message.dimValue) : options.longs === Number ? new $util.LongBits(message.dimValue.low >>> 0, message.dimValue.high >>> 0).toNumber() : message.dimValue;\n                    if (options.oneofs)\n                        object.value = \"dimValue\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    object.dimParam = message.dimParam;\n                    if (options.oneofs)\n                        object.value = \"dimParam\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    object.denotation = message.denotation;\n                return object;\n            };\n\n            /**\n             * Converts this Dimension to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Dimension.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Dimension;\n        })();\n\n        return TensorShapeProto;\n    })();\n\n    onnx.TypeProto = (function() {\n\n        /**\n         * Properties of a TypeProto.\n         * @memberof onnx\n         * @interface ITypeProto\n         * @property {onnx.TypeProto.ITensor|null} [tensorType] TypeProto tensorType\n         * @property {string|null} [denotation] TypeProto denotation\n         */\n\n        /**\n         * Constructs a new TypeProto.\n         * @memberof onnx\n         * @classdesc Represents a TypeProto.\n         * @implements ITypeProto\n         * @constructor\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         */\n        function TypeProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TypeProto tensorType.\n         * @member {onnx.TypeProto.ITensor|null|undefined} tensorType\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.tensorType = null;\n\n        /**\n         * TypeProto denotation.\n         * @member {string} denotation\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.denotation = \"\";\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * TypeProto value.\n         * @member {\"tensorType\"|undefined} value\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        Object.defineProperty(TypeProto.prototype, \"value\", {\n            get: $util.oneOfGetter($oneOfFields = [\"tensorType\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new TypeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         * @returns {onnx.TypeProto} TypeProto instance\n         */\n        TypeProto.create = function create(properties) {\n            return new TypeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TypeProto message. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\"))\n                $root.onnx.TypeProto.Tensor.encode(message.tensorType, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.denotation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TypeProto message, length delimited. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorType = $root.onnx.TypeProto.Tensor.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.denotation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TypeProto message.\n         * @function verify\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TypeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            var properties = {};\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                properties.value = 1;\n                {\n                    var error = $root.onnx.TypeProto.Tensor.verify(message.tensorType);\n                    if (error)\n                        return \"tensorType.\" + error;\n                }\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                if (!$util.isString(message.denotation))\n                    return \"denotation: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TypeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TypeProto} TypeProto\n         */\n        TypeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TypeProto)\n                return object;\n            var message = new $root.onnx.TypeProto();\n            if (object.tensorType != null) {\n                if (typeof object.tensorType !== \"object\")\n                    throw TypeError(\".onnx.TypeProto.tensorType: object expected\");\n                message.tensorType = $root.onnx.TypeProto.Tensor.fromObject(object.tensorType);\n            }\n            if (object.denotation != null)\n                message.denotation = String(object.denotation);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TypeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.TypeProto} message TypeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TypeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                object.denotation = \"\";\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                object.tensorType = $root.onnx.TypeProto.Tensor.toObject(message.tensorType, options);\n                if (options.oneofs)\n                    object.value = \"tensorType\";\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                object.denotation = message.denotation;\n            return object;\n        };\n\n        /**\n         * Converts this TypeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TypeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TypeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TypeProto.Tensor = (function() {\n\n            /**\n             * Properties of a Tensor.\n             * @memberof onnx.TypeProto\n             * @interface ITensor\n             * @property {number|null} [elemType] Tensor elemType\n             * @property {onnx.ITensorShapeProto|null} [shape] Tensor shape\n             */\n\n            /**\n             * Constructs a new Tensor.\n             * @memberof onnx.TypeProto\n             * @classdesc Represents a Tensor.\n             * @implements ITensor\n             * @constructor\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             */\n            function Tensor(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Tensor elemType.\n             * @member {number} elemType\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.elemType = 0;\n\n            /**\n             * Tensor shape.\n             * @member {onnx.ITensorShapeProto|null|undefined} shape\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.shape = null;\n\n            /**\n             * Creates a new Tensor instance using the specified properties.\n             * @function create\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             * @returns {onnx.TypeProto.Tensor} Tensor instance\n             */\n            Tensor.create = function create(properties) {\n                return new Tensor(properties);\n            };\n\n            /**\n             * Encodes the specified Tensor message. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.elemType);\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    $root.onnx.TensorShapeProto.encode(message.shape, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Tensor message, length delimited. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto.Tensor();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.elemType = reader.int32();\n                        break;\n                    case 2:\n                        message.shape = $root.onnx.TensorShapeProto.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Tensor message.\n             * @function verify\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Tensor.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    if (!$util.isInteger(message.elemType))\n                        return \"elemType: integer expected\";\n                if (message.shape != null && message.hasOwnProperty(\"shape\")) {\n                    var error = $root.onnx.TensorShapeProto.verify(message.shape);\n                    if (error)\n                        return \"shape.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Tensor message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             */\n            Tensor.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TypeProto.Tensor)\n                    return object;\n                var message = new $root.onnx.TypeProto.Tensor();\n                if (object.elemType != null)\n                    message.elemType = object.elemType | 0;\n                if (object.shape != null) {\n                    if (typeof object.shape !== \"object\")\n                        throw TypeError(\".onnx.TypeProto.Tensor.shape: object expected\");\n                    message.shape = $root.onnx.TensorShapeProto.fromObject(object.shape);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Tensor message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.Tensor} message Tensor\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Tensor.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.elemType = 0;\n                    object.shape = null;\n                }\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    object.elemType = message.elemType;\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    object.shape = $root.onnx.TensorShapeProto.toObject(message.shape, options);\n                return object;\n            };\n\n            /**\n             * Converts this Tensor to JSON.\n             * @function toJSON\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Tensor.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Tensor;\n        })();\n\n        return TypeProto;\n    })();\n\n    onnx.OperatorSetIdProto = (function() {\n\n        /**\n         * Properties of an OperatorSetIdProto.\n         * @memberof onnx\n         * @interface IOperatorSetIdProto\n         * @property {string|null} [domain] OperatorSetIdProto domain\n         * @property {number|Long|null} [version] OperatorSetIdProto version\n         */\n\n        /**\n         * Constructs a new OperatorSetIdProto.\n         * @memberof onnx\n         * @classdesc Represents an OperatorSetIdProto.\n         * @implements IOperatorSetIdProto\n         * @constructor\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         */\n        function OperatorSetIdProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * OperatorSetIdProto domain.\n         * @member {string} domain\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.domain = \"\";\n\n        /**\n         * OperatorSetIdProto version.\n         * @member {number|Long} version\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new OperatorSetIdProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto instance\n         */\n        OperatorSetIdProto.create = function create(properties) {\n            return new OperatorSetIdProto(properties);\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domain);\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.version);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message, length delimited. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.OperatorSetIdProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.domain = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an OperatorSetIdProto message.\n         * @function verify\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        OperatorSetIdProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))\n                    return \"version: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates an OperatorSetIdProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         */\n        OperatorSetIdProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.OperatorSetIdProto)\n                return object;\n            var message = new $root.onnx.OperatorSetIdProto();\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.version != null)\n                if ($util.Long)\n                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;\n                else if (typeof object.version === \"string\")\n                    message.version = parseInt(object.version, 10);\n                else if (typeof object.version === \"number\")\n                    message.version = object.version;\n                else if (typeof object.version === \"object\")\n                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an OperatorSetIdProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.OperatorSetIdProto} message OperatorSetIdProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        OperatorSetIdProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.version = options.longs === String ? \"0\" : 0;\n            }\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (typeof message.version === \"number\")\n                    object.version = options.longs === String ? String(message.version) : message.version;\n                else\n                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;\n            return object;\n        };\n\n        /**\n         * Converts this OperatorSetIdProto to JSON.\n         * @function toJSON\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        OperatorSetIdProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return OperatorSetIdProto;\n    })();\n\n    return onnx;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZE_PREFIX_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {!flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {!Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {!flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n * @param {boolean=} opt_size_prefix\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier, opt_size_prefix) {\n  var size_prefix = opt_size_prefix ? flatbuffers.SIZE_PREFIX_LENGTH : 0;\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH + size_prefix);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT + size_prefix);\n  this.addOffset(root_table);\n  if (size_prefix) {\n    this.addInt32(this.bb.capacity() - this.space);\n  }\n  this.bb.setPosition(this.space);\n};\n\n/**\n * Finalize a size prefixed buffer, pointing to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finishSizePrefixed = function (root_table, opt_file_identifier) {\n  this.finish(root_table, opt_file_identifier, true);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {!flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|!Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(1057);\n"],"names":["root","factory","exports","module","define","amd","self","backends","backendsSortedByPriority","registerBackend","name","backend","priority","init","createSessionHandler","TypeError","currentBackend","undefined","Error","i","indexOf","splice","length","push","env","constructor","this","wasm","webgl","webgpu","logLevelInternal","logLevel","value","NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP","Map","Float32Array","Uint8Array","Int8Array","Uint16Array","Int16Array","Int32Array","Float64Array","Uint32Array","NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP","isBigIntChecked","Tensor","arg0","arg1","arg2","type","data","dims","isBigInt64ArrayAvailable","BigInt64Array","from","isBigUint64ArrayAvailable","BigUint64Array","set","checkBigInt","Array","isArray","typedArrayConstructor","get","firstElementType","mappedType","size","dim","Number","isSafeInteger","RangeError","calculateSize","static","buffer","options","height","width","tensorLayout","norm","mean","bias","normMean","normBias","inputformat","bitmapFormat","outputformat","tensorFormat","stride","float32Data","step","rImagePointer","gImagePointer","bImagePointer","aImagePointer","rTensorPointer","gTensorPointer","bTensorPointer","aTensorPointer","image","isHTMLImageEle","HTMLImageElement","isImageDataEle","ImageData","isImageBitmap","ImageBitmap","isString","tensorConfig","canvas","document","createElement","pixels2DContext","getContext","resizedHeight","resizedWidth","drawImage","getImageData","bufferToTensor","Promise","resolve","reject","context","newImage","Image","crossOrigin","src","onload","img","format","tempCanvas","putImageData","toDataURL","j","R","G","B","A","fillStyle","fillRect","toImageData","channels","createImageData","reshape","InferenceSession","handler","async","feeds","fetches","isFetchesEmpty","outputNames","isFetches","arg1Keys","Object","getOwnPropertyNames","v","inputNames","results","run","returnValue","key","hasOwnProperty","call","arg3","filePathOrUint8Array","ArrayBuffer","SharedArrayBuffer","byteOffset","byteLength","backendHints","executionProviders","map","backendNames","errors","backendName","backendInfo","initialized","aborted","isInitializing","initPromise","e","err","join","resolveBackend","startProfiling","endProfiling","pathOrBuffer","session","Session","loadModel","OnnxjsSessionHandler","onnxjsBackend","OnnxjsBackend","initializeFlags","initTimeout","simd","proxy","numThreads","isInteger","numCpuLogicalCores","navigator","cpus","hardwareConcurrency","Math","min","ceil","initWasm","OnnxruntimeWebAssemblySessionHandler","wasmBackend","OnnxruntimeWebAssemblyBackend","attribute","assign","_cacheKey","sort","createAttributeWithCacheKey","AttributeWithCacheKeyImpl","ortFbs","onnxruntime","experimental","fbs","attributes","_attributes","attr","onnx","AttributeProto","Attribute","getValue","getType","delete","getFloat","defaultValue","getInt","getString","getTensor","getFloats","getInts","getStrings","getTensors","valueAndType","AttributeType","FLOAT","INT","STRING","TENSOR","FLOATS","INTS","STRINGS","TENSORS","attrType","GRAPH","GRAPHS","getValueNoCheck","LongUtil","isLong","longToNumber","arr","numberValue","maybeLong","fromProto","fromOrtTensor","utf8String","decodeUtf8String","getValueNoCheckFromOnnxFormat","getValueNoCheckFromOrtFormat","f","s","t","g","floats","ints","strings","tensors","graphs","floatsArray","intsLength","stringsLength","tensorsLength","backendsCache","tryLoadBackend","backendHint","backendObj","obj","o","initialize","dispose","WebGLBackend","hint","hints","cache","contextId","matmulMaxBatchSize","textureCacheMode","pack","glContext","createWebGLContext","Logger","setWithEnv","verbose","warning","WebGLSessionHandler","getFunctions","offsetToCoords","coordsToOffset","toVec","valueFrom","getCommonUtilFuncs","getInputsSamplingSnippets","getOutputSamplingSnippet","getCustomTypes","GlslLibRoutine","outputLayout","outputTextureLayout","isPacked","getPackedOutputSamplingSnippet","getUnpackedOutputSamplingSnippet","outShape","unpackedShape","outTexShape","result","funcName","getOutputScalarCoords","getOutputPacked1DCoords","getOutputPacked2DCoords","getOutputPacked3DCoords","getOutputPackedNDCoords","glsl","getGlsl","version","floatTextureSetRGBASource","output","getOutputUnpacked1DCoords","getOutputUnpacked2DCoords","getOutputUnpacked3DCoords","getOutputUnpacked4DCoords","getOutputUnpacked5DCoords","getOutputUnpacked6DCoords","floatTextureSetRSource","shape","texShape","packedTexShape","source","ArrayUtil","arraysEqual","texelsInLogicalRow","texelsInBatch","texelsInBatchN","batches","coords","b","rank","strides","coordsToCompute","coordsFromIndexSnippet","line1","line2","texture2D","programInfo","forEach","samplerName","inputLayout","inputTextureLayouts","generateShaderFuncNameFromInputSamplerName","getPackedSamplerFromInput","getUnpackedSamplerFromInput","outCoordFuncName","generateShaderFuncNameFromInputSamplerNameAtOutCoords","getPackedSamplerAtOutputCoords","getUnpackedSamplerAtOutputCoords","coordsSnippet","inShape","texName","texFuncSnippet","inRank","outRank","broadcastDims","BroadcastUtil","getBroadcastDims","getCoordsDataType","rankDiff","fields","getGlChannels","d","unpackedCoordsSnippet","isInputScalar","ShapeUtil","isOutputScalar","rows","cols","swapLastDimsSnippet","inTexShape","getPackedSamplerScalar","getPackedSampler1D","getPackedSampler2D","getPackedSampler3D","getPackedSamplerND","getUnpackedSamplerScalar","getUnpackedSampler1D","getUnpackedSampler2D","getUnpackedSampler3D","getUnpackedSampler4D","getUnpackedSampler5D","getUnpackedSampler6D","texNumR","texNumC","valuesPerRow","squeezedShape","slice","newInputShape","squeezeInputShape","newInputLayout","JSON","parse","stringify","samplerRoutine","routineBody","getSqueezedParams","dependencies","params","index","tNumR","tNumC","squeezeShape","newShape","keptDims","stride0","stride1","routine","revDims","reverse","stride2","stride3","stride4","xScale","yScale","stridesBlock","body","layout","getValueFromSingle","varName","transpose","getPackedValueFrom","GlslLib","CoordsGlslLib","FunctionType","GlslContext","addDependency","node","GlslLibRoutineNode","returnOrderedNodes","nodes","cycleCheck","Set","alreadyTraversed","createOrderedNodes","graphNodes","dfsTraverse","has","add","TopologicalSortGlslRoutines","encodeFloat32","decodeFloat32","encode","decode","encodeUint8","endianness","EncodingGlslLib","isLittleEndian","decodeUint8","a","c","setFragColor","getColorAsFloat","FragColorGlslLib","INLINE_FUNC_DEF_REGEX","script","match","inlineDefs","exec","split","tokens","trim","filter","regexString","replace","regex","RegExp","variable","declLine","newBody","paramRedecLine","replacement","libs","glslLibRoutineDependencyGraph","keys","glslRegistry","lib","libName","routinesInLib","currentNode","preprocess","shaderSource","hasMain","getDefaultFragShaderMain","replaceInlines","getFragShaderPreamble","getUniforms","variables","getImports","routinesIncluded","selectGlslLibRoutinesToBeIncluded","routines","classAndRoutine","samplers","uniformLines","sampler","arrayLength","GlslPreprocessor","VecGlslLib","ShapeUtilsGlslLib","bcastIndex","bcastMatmulIndex","offsetToIndices","indicesToOffset","incrementIndices","outputRank","dimOffset","block","indexToOffsetSingle","offsetToIndicesSingle","shapeInit","GLSL_ES_2_0","varyingVertex","varyingFrag","outputDeclaration","GLSL_ES_3_0","outputShapeLength","binaryVecFunctions","copyVec","setVecItem","getVecItem","nameOp","sub","mul","div","fname","assignmentBlock","packedTextureDataCache","unpackedTextureDataCache","calculateTextureWidthAndHeight","textureType","layoutStrategy","executeProgram","program","inputs","inputTypes","inputTextureDatas","getOrCreateTextureData","texture","cacheHint","getProgramInfoUniqueKey","artifact","programManager","getArtifact","createTextureLayoutFromTextureType","outputTextureData","createTextureData","build","setArtifact","runProgram","tensor","TextureType","packed","td","getTextureData","dataId","unpack","packedLastDimension","adjustedKernelShape","adjustedLayout","numberData","numFeatureMaps","oldRowSize","newRowSize","oldOffset","newOffset","subarray","unpackedTextureLayout","createTextureLayoutFromShape","reverseWH","unpackedTextureData","createTextureDataFromLayoutBindTensor","dataType","usage","textureManager","createTextureFromLayout","createTextureDataFromTexture","reshapeUnpacked","input","reshapedDims","inputTD","unpacked","newTextureLayout","computeStrides","reshapePacked","isReshapeCheap","squeezedInputShape","processDims3D","squeezedOutputShape","squeezedInputTensor","squeezedOutputTensor","createPackedReshape3DProgramInfoLoader","cast","tensorId","textureData","_id","readTexture","readTextureAsync","setTextureData","isInitializer","isTextureLayoutCached","clearActiveTextures","releaseTexture","isFloat32DownloadSupported","readUint8TextureAsFloat","encodeAsUint8","createPackProgramInfoLoader","createUnpackProgramInfoLoader","WebGLInferenceHandler","WEBGL_OP_RESOLVE_RULES","unaryOps","abs","acos","binaryOps","and","asin","atan","averagePool","parseAveragePoolAttributes","batchNormalization","parseBatchNormalizationAttributes","parseCastAttributes","clip","parseClipAttributes","clipV11","concat","parseConcatAttributes","conv","parseConvAttributes","convTranspose","parseConvTransposeAttributes","cos","identity","depthToSpace","parseDepthToSpaceAttributes","equal","elu","parseEluAttributes","exp","flatten","parseFlattenAttributes","floor","gather","parseGatherAttributes","gemm","parseGemmAttributesV7","parseGemmAttributesV11","globalAveragePool","parseGlobalAveragePoolAttributes","globalMaxPool","greater","imageScaler","parseImageScalerAttributes","instanceNormalization","parseInstanceNormalizationAttributes","leakyRelu","parseLeakyReluAttributes","less","lrn","parseLrnAttributes","log","matMul","parseMatMulAttributes","maxPool","parseMaxPoolAttributes","neg","not","or","padV2","parsePadAttributesV2","padV11","parsePadAttributesV11","pow","pRelu","reduceLogSum","parseReduceAttributes","reduceMax","reduceMean","reduceMin","reduceProd","reduceSum","reduceLogSumSquare","relu","resize","parseResizeAttributesV10","parseResizeAttributesV11","sigmoid","sin","sliceV10","parseSliceAttributes","softmax","parseSoftmaxAttributes","softmaxV13","parseSoftmaxAttributesV13","parseSplitAttributes","sqrt","squeeze","parseSqueezeAttributes","squeezeV13","sum","tan","tanh","tile","parseTransposeAttributes","upsample","parseUpsampleAttributesV7","parseUpsampleAttributesV9","unsqueeze","parseUnsqueezeAttributes","unsqueezeV13","xor","batchNormalizationProgramMetadata","inferenceHandler","validateInputs","cacheKey","createBatchNormalizationProgramInfo","epsilon","momentum","spatial","scaleWidth","scaleHeight","X","scale","var_","glslAdd","ValueBased","glslDiv","glslMul","glslSub","glslEqual","glslGreater","glslLess","glslAnd","glslOr","glslXor","glslPow","glslBuiltinBinary","glslPRelu","createBinaryProgramInfoLoader","glslFunc","outputTensorType","createBinaryProgramInfo","isBroadcast","areEqual","outputShape","usePackedTexture","calculatedShape","calcShape","aRank","bRank","aBcast","bBcast","to","ProtoUtil","tensorDataTypeFromProto","createPackedConcatProgramInfoLoader","inputCount","metadata","fill","axis","inputShape","dataNShape","axisIndex","getChannels","dtype","unpackChannel","unpackFromChannel","shapes","offsets","channel","lastChannels","allChannels","getValueSnippet","getShiftedChannelsSnippet","lastIndex","shift","x","createPackedConcatProgramInfo","channelIdx","idx","createUnpackedConcatProgramInfoLoader","sizeInConcatAxis","previousSum","getTextureIndexWhereDataResidesMethod","getTextureIndexWhereDataResidesLinearSearch","getTextureIndexWhereDataResidesBinarySearch","fetchDataFromCorrectTextureMethod","getFetchDataFromCorrectTextureMethod","getSizeInConcatAxisValueFromIndexMethod","getGetSizeInConcatAxisValueFromIndexMethod","createUnpackedConcatProgramInfo","searchAxis","numberOfTensors","tensorRank","codeLines","inputType","inputDimensionality","createUnpackedGroupedConvProgramInfoLoader","hasBias","processBias","xShape","wShape","outputChannelsPerGroup","group","autoPad","dilations","kernelShape","pads","calculateOutputShape","getActivationSnippet","activationFunction","applyActivation","createUnpackedGroupedConvProgramInfo","conv2DPackedPointwise","xshape","kshape","reshapedX","reshapedK","matmulInputs","matmulOutput","createPackedMatmulProgramInfoLoader","conv2DPacked","im2colOutput","createPackedIm2ColProgramInfoLoader","kernelReshaped","computeTotalPad","inDim","adj","kernel","dilation","outSize","distributePadding","totalPad","head","tail","smallPad","convTranspose2d","adjustedAttributes","getAdjustedConvTransposeAttributes","convTranspose2DUnpacked","valueInit","inputChannelsPerGroup","createUnpackedConvTransposeProgramInfo","createUnpackedConvTransposeProgramInfoLoader","outputPadding","spatialRank","updateShape","calculateOutputShapeAndPads","newAttributes","activationAttributes","parseInternalActivationAttributes","featureMaps","adjustPads","batchSize","inputSpatialShape","outChannels","dilatedKernelShape","outputSpatialShape","conv2d","getAdjustedConvAttributes","packMode","isPointwise","conv2DUnpackedPointwise","conv2DUnpacked","createMatmulProgramInfoLoader","xIm2Col","createIm2ColProgramInfoLoader","dotProductInputs","createDotProductProgramInfoLoader","PoolConvUtil","adjustPadsBasedOnAutoPad","blocksize","blocksizeSqr","transposePerm","mode","firstReshapeShape","firstReshapedTensor","transposeAttributes","perm","transposeOutput","secondReshapeShape","activationCacheKey","createDotProductProgramMetadata","im2colShape","calculateIm2ColDims","kWidth","kHeight","im2colStrides","im2colWidth","im2colHeight","initValue","sharedDim","createDotProductProgramInfo","outputDims","flattenShape","r","func","activation","glslRelu","glslSigmoid","glslClip","clipMin","clipMax","activationName","MIN_CLIP","MAX_CLIP","createGatherProgramInfoLoader","gatherProgramMetadata","indexDataShape","normalizeAxis","indexCopyOps","orank","irank","iDrank","createGatherProgramInfo","NUMBER_TYPES","createGemmProgramInfoLoader","parseGemmAttributes","isOptionalC","transA","transB","alpha","beta","createGemmProgramInfo","aShape","bShape","GemmUtil","getShapeOfGemmResult","line","declareC","broadcastC","calculateC","w","wshape","kernelSize","unrolled","row","col","createPackedIm2ColProgramInfo","im2colDims","createIm2ColProgramInfo","createImageScalerProgramInfoLoader","imageScalerProgramMetadata","getBiasMethod","createGetBiasMethod","createImageScalerProgramInfo","numChannels","meanAndVariance","createMeanAndVarianceProgramInfoLoader","createComputeOutputProgramInfoLoader","meanAndVarianceProgramMetadata","xDims","channelSize","createMeanAndVarianceProgramInfo","computeOutputProgramMetadata","meanAndVarianceShape","textureWidth","textureHeight","meanAndVarianceWidth","meanAndVarianceHeight","createComputeOutputProgramInfo","createLrnProgramInfoLoader","lrnProgramMetadata","C","createLrnProgramInfo","sharedDimIndex","coordsDataType","allGlChannels","getBiasForMatmulSnippet","getBiasForMatmul","getBcastedSamplerForMatmulSnippet","unpackedACoordsSnippet","unpackedBCoordsSnippet","inAShape","inBShape","inARank","inBRank","rankADiff","rankBDiff","broadcastADims","broadcastBDims","coordsASnippet","coordsBSnippet","swapDimSnippet","getBcastSamplerForMatmul","getSamplerAInLoopSnippet","res","getA","getSamplerBInLoopSnippet","getB","getOutputCoordsSnippet","createPackedMatmulProgramInfo","createMatmulProgramMetadata","arank","brank","createMatmulProgramInfo","packProgramMetadata","unpackedReversed","inputRank","setup","outOfBoundsCondition","cond","getOutOfBoundsCondition","D","getOutput","createPackProgramInfo","getVecChannels","padProgramMetadata","validateInputsV2","createPadProgramInfo","validateInputsV11","attrubutes","generatePadAttributesFromInputs","integerData","floatData","padShape","padFunction","getPadFunction","getPadConstant","getPadReflect","getPadEdge","createAveragePoolProgramInfo","ceilMode","countIncludePad","isGlobalOperator","getAdjustedPoolAttributesAndOutputShape","op2","poolingCode","generatePoolingCode","createMaxPoolProgramInfo","storageOrder","hasDilations","adjustPoolAttributes","computePoolOutputShape","globalMaxPoolAttributes","globalMaxPoolMetadata","inputDims","op1","start","codeW","kw","sw","pwStart","pwEnd","dimW","codeH","codeHEnd","kh","sh","phStart","phEnd","dimH","padCode","kernelStrides","stridesRank","padsRank","offsetToIndicesFunction","copyInputDims","copyArray","copyPads","copyKernelStrides","copyStrides","reduce","cur","array","arrayName","reduceOp","reduceProgramMetadata","createReduceProgramInfo","axes","keepDims","iRank","idxCopy","normalizeAxes","ops","reduceOps","k","oRank","idxZero","input3D","outputShape3D","createPackedReshape3DProgramMetadata","inputShape3D","mainLoop","outputCoords","getFlattenedIndexFrom3D","createPackedReshape3DProgramInfo","batch","calculateReshapedDims","resizeProgramMetadata","createPackedResizeProgramInfo","parseUpsampleAttributes","prepareInputs","scales","every","coordinateTransformMode","outputHeight","outputWidth","inputHeight","inputWidth","scalesHeight","scalesWidth","getSourceFracIndex","outputSizes","scalesTensor","scalesInputIdx","sizesInputIdx","parseScalesData","isResize","sizesTensor","parseScalesDataFromOutputSize","yDims","scalesValidation","end","sliceProgramMetadata","createSliceProgramInfo","starts","ends","val","normalizedAxes","sliceOps","validateInputsV10","generateSliceAttributesFromInputs","some","softmaxComputeMaxProgramMetadata","softmaxComputeScaleProgramMetadata","softmaxProgramMetadata","logicalRowCount","sizeToDimension","featureCount","sizeFromDimension","computeSoftmax","transposeAttribute","isTransposeRequired","transposedInputShape","transposedInputs","_","p","computeMaxProgramInfo","createComputeMaxProgramInfo","max","computeScaleProgramInfo","createComputScaleProgramInfo","softMaxProgramInfo","createSoftMaxProgramInfo","maxElementPerLogicalRow","normalizationPerLogicalRow","splitProgramMetadata","count","getProgramCount","createSplitProgramInfo","numOutputs","outputs","SplitUtil","splitShape","offset","validateInputsV13","sumProgramMetadata","createSumProgramInfo","sumLine","tileProgramMetadata","createTileProgramInfo","tileOps","transposeProgramMetadata","createTransposeProgramInfo","getAdjustedPerm","unpackedOutputShape","getOutputShape","getPermFunctionBody","sortBasedOnPerm","reverseFunc","downloadUint8AsFloat","glslAbs","glslBuiltinUnary","glslAcos","glslAsin","glslAtan","glslCeil","glslCos","glslElu","glslExp","glslFloor","glslIdentity","glslLeakyRelu","glslLog","glslNeg","glslNot","glslSin","glslSqrt","glslTan","glslTanh","createElementwiseProgramInfoLoader","createElementwiseProgramInfo","generateClipAttributesFromInputs","unpackProgramMetadata","createUnpackProgramInfo","innerDims","sourceCoords","getSourceCoords","unsqueezeShape","upsampleProgramMetadata","createUpsampleProgramInfo","opset","extrapolationValue","needRoiInput","useExtrapolation","nearestMode","cubicCoefficientA","excludeOutside","useNearest2xOptimization","roiInputIdx","outputPitches","inputPitches","precalculatedPitches","getInputFloatFunction","profiler","textureLayoutStrategy","repo","attributesBound","buildArtifact","event","gl","useProgram","bindOutput","bindAttributes","attribLocations","bindUniforms","uniformLocations","error","draw","vertexShader","deleteShader","deleteProgram","preprocessor","fragScript","compile","getUniformLocations","getAttribLocations","fragShaderScript","vertexShaderScript","getVertexShaderSource","compileShader","VERTEX_SHADER","debug","fragShader","FRAGMENT_SHADER","createProgram","attachFramebuffer","positionHandle","position","textureCoordHandle","textureCoord","setVertexAttributes","textures","texturePosition","find","bindTexture","uniform1fv","uniform1f","uniform1iv","uniform1i","uniformHandle","bindTextureToUniform","getAttribLocation","location","getUniformLocation","reference","ProgramManager","PreferLogicalStrategy","maxTextureSize","TextureManager","reuseTextures","pack2unpackMap","unpack2packMap","createInferenceHandler","onGraphInitialized","graph","initializers","getValues","addInitializer","opsets","op","resolveOperator","impl","opImpl","opInit","internalFormat","R32F","RED","RGBA32F","RGBA","textureSize","allocate","dataSize","RedFloat32DataEncoder","dest","RGBAFloatDataEncoder","ALPHA","UNSIGNED_BYTE","_textureSize","Uint8DataEncoder","computeTextureWH","prefs","breakAxis","wsize","hsize","totalSize","AlwaysKeepOriginalSizeStrategy","wh","computeTexture","logShape","squeezeResult","sizeFromShape","sizeToSquarishShape","isEmptyArray","parseAxisParam","assert","ax","isInt","dimsToSkip","inferredDims","reversedWH","config","pendingRead","inUseTextures","idleTextures","textureLookup","textureDataType","toEncoderType","encoder","getEncoder","pop","updateTexture","toTextureData","allocateTexture","toTensorData","createAndWaitForFence","tensorData","subscribers","deleteTexture","_dataType","len","checkFn","delayFn","maxCounter","_counter","tryCount","tryFn","nextBackoff","setTimeout","charAt","toUpperCase","createNewWebGLContext","OffscreenCanvas","createCanvas","ca","depth","antialias","stencil","preserveDrawingBuffer","premultipliedAlpha","failIfMajorPerformanceCaveat","WebGLContext","webgl2","isContextLost","disable","DEPTH_TEST","STENCIL_TEST","BLEND","DITHER","POLYGON_OFFSET_FILL","SAMPLE_COVERAGE","enable","SCISSOR_TEST","CULL_FACE","cullFace","BACK","linearSearchLastTrue","frameBufferBound","itemsToPoll","getExtensions","vertexbuffer","createVertexbuffer","framebuffer","createFramebuffer","queryVitalParameters","createTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","checkError","texSubImage2D","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","viewport","scissor","readPixels","isFramebufferReady","getActiveTexture","n","getParameter","ACTIVE_TEXTURE","TEXTURE0","getTextureBinding","TEXTURE_BINDING_2D","getFramebufferBinding","FRAMEBUFFER_BINDING","vertexAttribPointer","enableVertexAttribArray","attachShader","linkProgram","shaderType","shader","createShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","activeTexture","drawArrays","TRIANGLE_STRIP","getError","label","toString","DataEncoders","isRenderFloat32Supported","textureHalfFloatExtension","HALF_FLOAT_OES","unit","maxTextureImageUnits","disposed","deleteFramebuffer","bindBuffer","ARRAY_BUFFER","deleteBuffer","ELEMENT_ARRAY_BUFFER","finish","createDefaultGeometry","createBuffer","geometry","bufferData","STATIC_DRAW","fb","isFloatTextureAttachableToFrameBuffer","checkFloatTextureAttachableToFrameBuffer","checkRenderFloat32","checkFloat32Download","isBlendSupported","checkFloat32Blend","MAX_TEXTURE_SIZE","MAX_TEXTURE_IMAGE_UNITS","colorBufferFloatExtension","getExtension","disjointTimerQueryWebgl2Extension","textureFloatExtension","frameBuffer","isComplete","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","fragmentShader","POINTS","NO_ERROR","beginTimer","gl2","ext","query","createQuery","beginQuery","TIME_ELAPSED_EXT","endTimer","endQuery","isTimerResultAvailable","available","disjoint","getQueryParameter","QUERY_RESULT_AVAILABLE","GPU_DISJOINT_EXT","getTimerResult","timeElapsed","QUERY_RESULT","deleteQuery","waitForQueryAndGetTime","repeatedTry","fenceContext","createFence","pollFence","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","isFencePassed","status","clientWaitSync","ALREADY_SIGNALED","CONDITION_SATISFIED","addItemToPoll","pollItems","isDoneFn","resolveFn","getNodes","_ops","KernelOp","reset","_starter","resolved","_values","getInputIndices","execute","sessionHandler","modelInputs","graphInputs","sequence","graphValues","rear","thisOpIndex","thisOp","inputList","inputTensors","outputList","downstreamNodes","currentDownstreamNodeIndex","currentDownstreamNode","getOutputIndices","outputIndex","outputTensor","getData","ExecutionPlan","Graph","graphProto","initializer","GraphImpl","valueInfo","_from","_to","tensorValueTypeFromProto","tensorType","_nodeProto","NodeProto","opType","Node","tensorAttributesFromORTFormat","executeNode","graphInitializer","buildGraph","transformGraph","checkIsAcyclic","_allInputIndices","getInputNames","_allInputNames","_allOutputIndices","getOutputNames","_allOutputNames","_allData","_nodes","GraphProto","buildGraphFromOnnxFormat","buildGraphFromOrtFormat","dataIndices","nodesIndices","inputValueNames","currentIndex","Value","tensorDimsFromProto","nodeProto","pick","dataIndex","inputsLength","inputName","nodeArgsLength","nodeArgs","valueType","TypeInfoValue","tensor_type","TensorTypeAndShape","elemType","dimLength","dimValue","initializersLength","tensorDimsFromORTFormat","outputsLength","outputName","nodesLength","attributesLength","starters","nodesStack","nodesState","nodeIndex","outgoingEdgeIndex","downstreamNodeIndex","removeAllIdentityNodes","removeAllDropoutNodes","fuseConvActivationNodes","finalizeGraph","newIndices","nodePossition","ind","currentData","deleteNode","inputValueIndex","outputValueIndex","nodesConsumingOutput","delIndex","replaceIndex","isActivation","next","child","_severity","_content","_category","severity","content","category","console","color","SEVERITY_VALUE","info","fatal","LOGGER_PROVIDER_MAP","NoOpLoggerProvider","ConsoleLoggerProvider","LOGGER_DEFAULT_CONFIG","provider","minimalSeverity","logDateTime","logSourceLocation","LOGGER_CONFIG_MAP","bind","logInternal","stack","Date","toISOString","previousConfig","startTime","endCallback","timer","ctx","checkTimer","endTime","maxNumberEvents","flushBatchSize","flushIntervalInMilliseconds","_started","_flushPointer","_maxNumberEvents","_flushBatchSize","_flushIntervalInMilliseconds","create","_timingEvents","_flushTime","now","stop","logOneEvent","begin","isPromise","then","reason","Event","endSync","EventRecord","toFixed","currentTime","previousPointer","Profiler","performance","load","buf","isOrtFormat","loadFromOnnxFormat","loadFromOrtFormat","modelProto","ModelProto","irVersion","_opsets","opsetImport","domain","_graph","flatbuffers","ByteBuffer","ortModel","getRootAsInferenceSession","model","opsetImportLength","opsetId","Model","INT_TYPES","FLOAT_TYPES","matchSelector","selector","endsWith","rangeStart","parseInt","substring","isNaN","pair","rangeEnd","rules","rule","versionSelector","DimensionValueType","TensorDataType","NodeType","bb","bb_pos","__init","getRootAsShape","Shape","readInt32","getSizePrefixedRootAsShape","setPosition","SIZE_PREFIX_LENGTH","__offset","Dimension","__indirect","__vector","__vector_len","startShape","builder","startObject","addDim","addFieldOffset","createDimVector","startVector","addOffset","endVector","startDimVector","numElems","endShape","endObject","createShape","getRootAsDimension","getSizePrefixedRootAsDimension","DimensionValue","denotation","optionalEncoding","__string","startDimension","addValue","valueOffset","addDenotation","denotationOffset","endDimension","createDimension","getRootAsDimensionValue","getSizePrefixedRootAsDimensionValue","dimType","readInt8","UNKNOWN","readInt64","createLong","dimParam","startDimensionValue","addDimType","addFieldInt8","addDimValue","addFieldInt64","addDimParam","dimParamOffset","endDimensionValue","createDimensionValue","getRootAsTensorTypeAndShape","getSizePrefixedRootAsTensorTypeAndShape","UNDEFINED","startTensorTypeAndShape","addElemType","addFieldInt32","addShape","shapeOffset","endTensorTypeAndShape","createTensorTypeAndShape","getRootAsMapType","MapType","getSizePrefixedRootAsMapType","keyType","TypeInfo","startMapType","addKeyType","addValueType","valueTypeOffset","endMapType","createMapType","getRootAsSequenceType","SequenceType","getSizePrefixedRootAsSequenceType","startSequenceType","elemTypeOffset","endSequenceType","createSequenceType","readUint32","srcArgIndex","dstArgIndex","createEdgeEnd","node_index","src_arg_index","dst_arg_index","prep","writeInt32","EdgeEnd","getRootAsNodeEdge","NodeEdge","getSizePrefixedRootAsNodeEdge","inputEdges","inputEdgesLength","outputEdges","outputEdgesLength","startNodeEdge","addNodeIndex","addInputEdges","inputEdgesOffset","startInputEdgesVector","addOutputEdges","outputEdgesOffset","startOutputEdgesVector","endNodeEdge","createNodeEdge","getRootAsNode","getSizePrefixedRootAsNode","docString","sinceVersion","Primitive","executionProviderType","inputArgCounts","inputArgCountsLength","inputArgCountsArray","bytes","implicitInputs","implicitInputsLength","startNode","addName","nameOffset","addDocString","docStringOffset","addDomain","domainOffset","addSinceVersion","addIndex","addOpType","opTypeOffset","addType","addExecutionProviderType","executionProviderTypeOffset","addInputs","inputsOffset","createInputsVector","startInputsVector","addOutputs","outputsOffset","createOutputsVector","startOutputsVector","addAttributes","attributesOffset","createAttributesVector","startAttributesVector","addInputArgCounts","inputArgCountsOffset","createInputArgCountsVector","addInt32","startInputArgCountsVector","addImplicitInputs","implicitInputsOffset","createImplicitInputsVector","startImplicitInputsVector","endNode","createNode","getRootAsValueInfo","ValueInfo","getSizePrefixedRootAsValueInfo","startValueInfo","typeOffset","endValueInfo","createValueInfo","getRootAsTypeInfo","getSizePrefixedRootAsTypeInfo","readUint8","NONE","__union","startTypeInfo","endTypeInfo","createTypeInfo","getRootAsOperatorSetId","OperatorSetId","getSizePrefixedRootAsOperatorSetId","startOperatorSetId","addVersion","endOperatorSetId","createOperatorSetId","getRootAsTensor","getSizePrefixedRootAsTensor","dimsLength","rawData","rawDataLength","rawDataArray","stringData","stringDataLength","startTensor","addDims","dimsOffset","createDimsVector","addInt64","startDimsVector","addDataType","addRawData","rawDataOffset","createRawDataVector","addInt8","startRawDataVector","addStringData","stringDataOffset","createStringDataVector","startStringDataVector","endTensor","createTensor","getRootAsSparseTensor","SparseTensor","getSizePrefixedRootAsSparseTensor","values","indices","startSparseTensor","addValues","valuesOffset","addIndices","indicesOffset","endSparseTensor","createSparseTensor","getRootAsAttribute","getSizePrefixedRootAsAttribute","readFloat32","floatsLength","graphsLength","startAttribute","addF","addFieldFloat32","addI","addS","sOffset","addT","tOffset","addG","gOffset","addFloats","floatsOffset","createFloatsVector","addFloat32","startFloatsVector","addInts","intsOffset","createIntsVector","startIntsVector","addStrings","stringsOffset","createStringsVector","startStringsVector","addTensors","tensorsOffset","createTensorsVector","startTensorsVector","addGraphs","graphsOffset","createGraphsVector","startGraphsVector","endAttribute","createAttribute","getRootAsGraph","getSizePrefixedRootAsGraph","maxNodeIndex","nodeEdges","nodeEdgesLength","sparseInitializers","sparseInitializersLength","startGraph","addInitializers","initializersOffset","createInitializersVector","startInitializersVector","addNodeArgs","nodeArgsOffset","createNodeArgsVector","startNodeArgsVector","addNodes","nodesOffset","createNodesVector","startNodesVector","addMaxNodeIndex","addNodeEdges","nodeEdgesOffset","createNodeEdgesVector","startNodeEdgesVector","addSparseInitializers","sparseInitializersOffset","createSparseInitializersVector","startSparseInitializersVector","endGraph","createGraph","getRootAsModel","getSizePrefixedRootAsModel","producerName","producerVersion","modelVersion","graphDocString","startModel","addIrVersion","addOpsetImport","opsetImportOffset","createOpsetImportVector","startOpsetImportVector","addProducerName","producerNameOffset","addProducerVersion","producerVersionOffset","addModelVersion","addGraph","graphOffset","addGraphDocString","graphDocStringOffset","endModel","createModel","getRootAsKernelCreateInfos","KernelCreateInfos","getSizePrefixedRootAsKernelCreateInfos","nodeIndices","nodeIndicesLength","nodeIndicesArray","kernelDefHashes","readUint64","kernelDefHashesLength","startKernelCreateInfos","addNodeIndices","nodeIndicesOffset","createNodeIndicesVector","startNodeIndicesVector","addKernelDefHashes","kernelDefHashesOffset","createKernelDefHashesVector","startKernelDefHashesVector","endKernelCreateInfos","createKernelCreateInfos","getRootAsSubGraphSessionState","SubGraphSessionState","getSizePrefixedRootAsSubGraphSessionState","graphId","sessionState","SessionState","startSubGraphSessionState","addGraphId","graphIdOffset","addSessionState","sessionStateOffset","endSubGraphSessionState","requiredField","createSubGraphSessionState","getRootAsSessionState","getSizePrefixedRootAsSessionState","kernels","subGraphSessionStates","subGraphSessionStatesLength","startSessionState","addKernels","kernelsOffset","addSubGraphSessionStates","subGraphSessionStatesOffset","createSubGraphSessionStatesVector","startSubGraphSessionStatesVector","endSessionState","createSessionState","getSizePrefixedRootAsInferenceSession","bufferHasIdentifier","__has_identifier","ortVersion","startInferenceSession","addOrtVersion","ortVersionOffset","addModel","modelOffset","endInferenceSession","finishInferenceSessionBuffer","finishSizePrefixedInferenceSessionBuffer","createInferenceSession","_fetches","_options","inputMap","feed","outputMap","_initialized","graphInputTypes","graphInputDims","_model","arg","fetch","promisify","readFile","arrayBuffer","isView","modelProtoBlob","initializeOps","_executionPlan","normalizeAndValidateInputs","outputTensors","createOutput","modelInputNames","sortedInputs","sortedInputsIndex","validateInputTensorDims","modelInputIndices","modelValues","graphInput","validateInputTensorTypes","givenInputs","expectedType","actualType","noneDimSupported","expectedDims","actualDims","compareTensorDims","modelOutputNames","dataProvider","asyncDataProvider","Guid","validateDimsAndCalcSize","empty","dataviewConstructor","sizeof","dataBuffer","createView","_strides","tensorProto","str","dataDest","dataSource","DataView","elementSize","sizeofProto","readProto","TensorProto","DataType","INT32","INT16","UINT16","INT8","UINT8","BOOL","int32Data","INT64","int64Data","DOUBLE","doubleData","UINT32","UINT64","uint64Data","element","fromData","ortTensor","greaterThanOrEqual","lessThan","toNumber","view","getUint8","getInt8","getUint16","getInt16","getFloat32","getInt32","getUint32","fromBits","getFloat64","expectedDimensions","expr","msg","n1","n2","preprocessInputShapes","dimsA","dimsB","postprocessOutputShape","calcMatMulShape","MatMulUtil","adims","bdims","isMatMul","crank","cdims","cShapeMatMul","aLen","bLen","broadcastedIndices","originalShape","originalIndices","fillIndex","calc","inplace","resultType","outputIndices","originalIndicesA","originalIndicesB","valA","valB","isAScalar","isBScalar","rest","isValidBroadcast","finalShape","finalRank","unshift","target","targetIndex","sourceIndex","blockSize","leftShape","transLeft","rightShape","transRight","biasShape","M","K","N","kDim","typeProto","tensorDataTypeStringToEnum","unsigned","Long","fromValue","low","high","getSizeFromDimensionRange","incrementIndex","axisToIncrementOn","originalDims","shapeHints","nDims","unknownDimension","newTensorSize","oldTensorSize","pad","shape1","shape2","total","y","right","inSqueezeList","inputDimsIterator","sqr","axpy","powx","MathUtil","determineSplit","numElementsAlongAxis","calcReduce","keepdims","ReduceUtil","calcReduceShape","inputStrides","indicesY","calcReduceByAxis","curAxisInd","pos","adjustPadAndReturnShape","computeShapeHelper","computeConvOutputShape","filterDims","inSize","padHeadIndex","padTailIndex","dkernel","padNeeded","TextDecoder","currentKernelId","commandEncoder","computePassEncoder","pendingDispatchNumber","profilingEnabled","kernelCustomData","gpu","requestAdapter","adapter","deviceDescriptor","requiredLimits","maxComputeWorkgroupStorageSize","limits","maxComputeWorkgroupsPerDimension","maxStorageBufferBindingSize","features","profilingMode","requiredFeatures","requestDevice","device","gpuDataManager","createGpuDataManager","kernelPersistentData","onuncapturederror","ev","GPUValidationError","message","profilingQuerySet","createQuerySet","getCommandEncoder","createCommandEncoder","getComputePassEncoder","beginComputePass","endComputePass","queue","submit","refreshPendingBuffers","createKernelOutput","createIntermediateOutput","inputDatas","gpuData","inputTensorShapes","inputGpuDataTypes","inputTensorShapesToString","inputGpuDataTypesToString","validatedOutputIndices","outputTensorViews","outputDatas","isTemporary","isPersistent","tensorView","temporaryData","persistentData","normalizedDispatchGroup","normalizeDispatchGroupSize","dispatchGroup","LOG_DEBUG","upload","gpuDataId","memcpy","dst","download","getTargetBuffer","alloc","id","free","ptr","release","createKernel","kernelId","WEBGPU_OP_RESOLVE_RULES","releaseKernel","computeKernel","kernelEntry","WebGpuBackend","getFloat32Array","HEAP8","newDims","TensorViewImpl","contextDataOffset","heapU32","HEAPU32","opKernelContext","currentKernelCustomData","compute","inputsOutputsMapping","mappedInputs","getTensorElementSize","bufferSize","stackSave","stackAlloc","_JsepOutput","stackRestore","jsepInit","isSourceGpu","HEAPU8","dataOffset","ComputeContextImpl","logLevelPrefix","LOG","level","messageLevel","logLevelStringToEnum","args","isChannelLast","calcNormalizedBufferSize","guid","storageCache","downloadCache","buffersForUploadingPending","buffersPending","srcArrayBuffer","srcOffset","srcLength","gpuDataCache","originalSize","gpuBufferForUploading","mappedAtCreation","GPUBufferUsage","MAP_WRITE","COPY_SRC","getMappedRange","unmap","copyBufferToBuffer","sourceId","destinationId","sourceGpuDataCache","destinationGpuDataCache","STORAGE","COPY_DST","gpuBuffer","GpuDataType","default","cachedData","downloadData","gpuReadBuffer","MAP_READ","readDataPromise","mapAsync","GPUMapMode","READ","destroy","GpuDataManagerImpl","acosh","asinh","atanh","pool","clipV10","cosh","parseAlphaAttributes","erf","parseGlobalMaxPoolAttributes","reciprocal","sinh","thresholdedRelu","typeSnippet","component","activationFnSnippet","_hasPreluActivationWeights","_packed","_coordsLength","biasActivationSnippet","createConv2DMatMulProgramInfo","dimAOuter","dimBOuter","dimInner","sequentialAccessByThreads","isChannelsLast","inChannels","outWidth","outHeight","isVec4","dispatchX","dispatchY","workGroupSize","elementsPerThread","dispatch","innerElementSize","tileAOuter","tileBOuter","tileInner","fitAOuter","fitBOuter","fitInner","elementsSize","declareInputs","declareFunctions","gpuDataType","z","getShaderSource","utilFunctions","addBias","hasPreluActivationWeights","innerElementSizeX","innerElementSizeW","coordASnippet","coordResSnippet","xHeight","xWidth","readXSnippet","getXSnippet","sampleX","sampleW","getWSnippet","resType","aType","bType","conv2dCommonSnippet","makeMatMulPackedVec4Source","makeMatMulPackedSource","workPerThread","workgroupSize","transposeA","splitK","splitedDimInner","isVectorA","tileAWidth","tileAHight","rowPerThreadB","calculateResultSnippet","writeDataToSubASnippet","rowPerThreadA","colPerThreadA","matmulSnippet","readDataFromSubASnippet","createBinaryOpProgramInfoLoader","funcCall","additionalImplementation","outputDataType","outputSize","vectorize","sharedDimension","dimA","shaderHelper","dimsOutput","doBroadcast","typeA","typeB","typeOutput","expressionScalar","expressionVector","vecSize","scalar","vector","assignment","broadcastImpl","outputIndicesHelper","createIndicesHelper","calcOffsetImpl","o2iImpl","iType","indicesVariableDeclaration","o2iCall","singleAssignment","expressionA","expressionB","mainStart","guardAgainstOutOfBoundsWorkgroupSizes","createBinaryOpProgramShader","createBinaryOpProgramInfo","WORKGROUP_SIZE","o2iSnippet","varOffset","varIndices","i2oImpl","i2oExpression","isPtr","sizeInCode","workgroupSizeX","workgroupSizeY","workgroupSizeZ","is1DimensionDispatch","paramList","globalIdxDefinition","createShaderHelper","ShaderHelperImpl","createGroupedConvProgramInfoLoader","squeezeOutputShapeFunction","getActicationSnippet","inputStorageBuffersDeclarations","xIndicesHelper","wIndicesHelper","createGroupedConvProgramInfo","weightTransposeAttribute","auto_pad","kernel_shape","wIsConst","w_is_const","conv1d","inputChannels","weightHeight","weightWidth","transposedWeight","customData","wT","convInputs","createConv2DMatMulProgramInfoLoader","createConv2DMatMulProgramMetadata","activation_params","calculateAlpha","m","broadcastM","broadcastN","offsetC","inputShapeAsChannelFirst","outputShapeAsChannelFirst","dimIdxW","dimIdxH","parsePoolCommonAttributes","ceil_mode","count_include_pad","globalPoolAttributes","storage_order","permAttr","inputIndicesHelper","permFunctionBody","datasize","expression","createElementwiseProgramShader","writeTimestamp","setPipeline","computePipeline","entries","binding","resource","bindGroup","createBindGroup","getBindGroupLayout","setBindGroup","dispatchWorkgroups","QUERY_RESOLVE","resolveQuerySet","mappedData","startTimeU64","endTimeU64","profilingTimeBase","normalizedDispatchGroupSize","code","shaderModule","createShaderModule","createComputePipeline","entryPoint","limitPerDimension","dispatchAverage","cbrt","iterateExtraOptions","prefix","seen","proxyWorker","initWasmCallbacks","initOrtCallbacks","isProxy","initializing","createSessionAllocateCallbacks","createSessionFinalizeCallbacks","createSessionCallbacks","releaseSessionCallbacks","runCallbacks","endProfilingCallbacks","ensureWorker","onProxyWorkerMessage","out","scriptSrc","currentScript","wasmPaths","substr","lastIndexOf","terminate","onmessage","in","postMessage","initializeWebAssembly","initOrt","loggingLevel","core","getInstance","createSessionAllocate","createSessionFinalize","modeldata","createSession","releaseSession","sessionId","inputIndices","extractTransferableBuffers","setRunOptions","runOptionsHandle","allocs","runOptions","logSeverityLevel","logVerbosityLevel","tagDataOffset","tag","allocWasmString","_OrtCreateRunOptions","extra","WeakSet","keyDataOffset","valueDataOffset","_OrtAddRunConfigEntry","_OrtReleaseRunOptions","_free","ortInit","path","modelData","inputArray","kvp","setSessionOptions","sessionOptionsHandle","sessionOptions","use_ort_model_bytes_directly","ep","enableMemPattern","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","executionMode","getExecutionMode","logIdDataOffset","logId","optimizedModelFilePathOffset","optimizedModelFilePath","_OrtCreateSessionOptions","enableCpuMemArena","enableProfiling","epName","epNameDataOffset","_OrtAppendExecutionProvider","setExecutionProviders","_OrtAddSessionConfigEntry","_OrtReleaseSessionOptions","dataLength","lengthBytesUTF8","_malloc","stringToUTF8","tensorDataTypeEnumToString","dateType","tensorTypeToTypedArrayConstructor","errorCode","_OrtInit","activeSessions","modelDataOffset","sessionHandle","_OrtCreateSession","_OrtGetInputCount","outputCount","_OrtGetOutputCount","inputNamesUTF8Encoded","outputNamesUTF8Encoded","_OrtGetInputName","UTF8ToString","_OrtGetOutputName","_OrtFree","_OrtReleaseSession","runOptionsAllocs","inputValues","inputAllocs","dataByteLength","HEAP32","_OrtCreateTensor","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","_OrtRun","runPromise","jsepRunPromise","beforeGetTensorDataStack","tensorDataOffset","_OrtGetTensorData","tensorDataIndex","maxBytesToRead","_OrtReleaseTensor","profileFileName","_OrtEndProfiling","buffers","ortWasmFactory","ortWasmFactoryThreaded","flags","timeout","useThreads","MessageChannel","port1","WebAssembly","validate","isMultiThreadSupported","useSimd","isSimdSupported","wasmPrefixOverride","wasmFileName","getWasmFileName","wasmPathOverride","isTimeout","tasks","locateFile","fileName","scriptDirectory","Blob","URL","createObjectURL","mainScriptUrlOrBlob","scriptSourceCode","what","race","PThread","terminateAllThreads","Worker_fn","workerConstructor","workerOptions","url","globalScope","window","blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","webkitURL","objectURL","worker","revokeObjectURL","encodeURIComponent","_scriptDir","F","Y","I","W","u","ready","l","h","importScripts","process","versions","ENVIRONMENT_IS_PTHREAD","__dirname","normalize","readFileSync","argv","on","at","exitCode","S","exit","inspect","Worker","href","XMLHttpRequest","open","send","responseText","responseType","response","onerror","O","T","warn","writeSync","print","printErr","thisProgram","quit","wasmBinary","noExitRuntime","nt","E","P","U","H","String","fromCharCode","V","q","charCodeAt","HEAP16","HEAPU16","HEAPF32","HEAPF64","INITIAL_MEMORY","wasmMemory","Memory","initial","maximum","shared","L","Z","$","preRun","Q","J","tt","cmd","onAbort","RuntimeError","rt","startsWith","et","it","ut","lt","Yc","pd","ot","Ed","gd","Xc","start_routine","Kd","yd","pthread_ptr","ed","time","Qd","loaded","ct","Gt","Ld","onExit","ft","dt","ad","sd","kd","Gd","Sd","receiveObjectTransfer","Id","threadInitTLS","rd","setExitStatus","qd","mn","Hd","Cd","targetThread","fn","Td","transferList","Wt","thread","threadId","text","alert","filename","lineno","urlOrBlob","wasmModule","xd","st","establishStackSpace","gn","jn","ht","pt","invokeEntryPoint","vn","yt","mt","vt","_t","gt","wt","dd","Vc","Dd","bd","zd","Fd","Bd","ld","md","od","cd","ud","Atomics","Jd","vd","wd","On","jt","sn","bt","Ct","Rd","Ot","Tt","At","Mt","St","xt","kt","Et","Rt","Dt","Ft","Yt","It","store","yn","compareExchange","Pt","Ut","Ht","Vt","ln","qt","toTimeString","getFullYear","getTimezoneOffset","arguments","wn","bn","pn","executeNotifiedProxyingQueue","hrtime","__performance_now_clock_drift","Bt","zt","Nt","Lt","USER","LOGNAME","PATH","PWD","HOME","LANG","languages","Xt","Zt","$t","Qt","Jt","Kt","tn","nn","rn","en","an","un","getMonth","getDate","getDay","Zc","$c","getTime","setDate","setMonth","setFullYear","Od","Nd","hd","nd","jd","Wc","Ud","Md","Pd","includes","cn","ja","_n","prototype","Cn","ma","Ga","dn","aa","xa","Ma","ta","va","la","Ka","Da","Ja","ua","ra","La","sa","qb","Bb","da","ya","Oa","za","Fa","Pa","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","Qa","getSeconds","getMinutes","getHours","Ra","setTime","Ba","Ca","Xa","Ad","ba","oa","Aa","copyWithin","pa","Ea","apply","na","grow","Na","Ha","Ia","wa","Ab","qa","ea","wb","Mn","kb","Un","Sa","tr","jb","Hn","zb","An","Ta","Tn","Za","er","ub","Rn","tb","xn","ib","Vn","lb","Pn","fa","ga","ha","mb","Wn","vb","En","nb","In","pb","Fn","xb","nr","Ya","Jn","Wa","Kn","rb","kn","Ua","rr","sb","Dn","yb","Sn","Va","ir","ob","Yn","Xn","cb","Ln","ab","Zn","_a","Qn","$a","$n","eb","zn","Bn","hb","qn","db","Nn","gb","Gn","ia","ka","asm","_b","cc","Cb","monitorRunDependencies","clearInterval","instance","credentials","ok","catch","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","Ob","Pb","Qb","Rb","Sb","Tb","Ub","Vb","Wb","_pthread_self","Xb","Yb","Zb","__emscripten_tls_init","__emscripten_thread_init","$b","__emscripten_thread_crashed","ac","hn","_emscripten_run_in_main_runtime_thread_js","bc","__emscripten_proxy_execute_task_queue","dc","__emscripten_thread_free_data","ec","__emscripten_thread_exit","fc","_setThrew","gc","_emscripten_stack_set_limits","hc","ic","jc","kc","___cxa_can_catch","lc","___cxa_is_pointer_type","mc","dynCall_j","nc","dynCall_iij","oc","dynCall_iiiiij","pc","dynCall_vij","qc","dynCall_jii","rc","dynCall_viiji","sc","dynCall_viiiij","tc","dynCall_ji","uc","dynCall_viijjjiiiii","vc","dynCall_viiiji","wc","dynCall_vijiii","xc","dynCall_viiij","yc","dynCall_viiiiiiiiiji","zc","dynCall_jjj","Ac","dynCall_iiiijjj","Bc","dynCall_iiijjj","Cc","dynCall_jiii","Dc","dynCall_vjjjjjjffiifiiiiii","Ec","dynCall_vjjjjjjjjfffiifiiiiii","Fc","dynCall_vjjjjjjfffifiiiiiii","Gc","dynCall_vjjjjjjfffifiiiii","Hc","dynCall_vjjjjjjjjfffiifiiiii","Ic","dynCall_vijjfffiii","Jc","dynCall_vijiiiiiiii","Kc","dynCall_vijjjjjjifiiiii","Lc","dynCall_vjjjjjiiii","Mc","dynCall_vjjjjfiii","Nc","dynCall_viiijiiii","Oc","dynCall_viiijjjii","Pc","dynCall_iiij","Qc","dynCall_viiijii","Rc","dynCall_viijiiiiiiiii","Sc","dynCall_jfi","Tc","dynCall_viji","Uc","ar","calledRun","onRuntimeInitialized","postRun","setStatus","keepRuntimeAlive","ExitStatus","preInit","ortWasm","fs","fd","dynCall_viiiiij","pending","base64","string","b64","s64","parts","chunk","invalidEncoding","test","EventEmitter","_listeners","evt","off","listeners","emit","f32","f8b","le","writeFloat_f32_cpy","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","round","exponent","LN2","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","SIZE","MAX","slab","utf8","read","write","c1","c2","__esModule","EMPTY","isGuid","validator","gen","createEmpty","raw","random","equals","other","isEmpty","toJSON","Instance","Module","__isLong__","defineProperty","INT_CACHE","UINT_CACHE","fromInt","cachedObj","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","radix","radixToPower","power","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","isZero","isNegative","eq","radixLong","rem1","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","notEquals","neq","ne","comp","lessThanOrEqual","lte","greaterThan","gte","ge","compare","thisNeg","otherNeg","negate","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","div_u","div_s","toUnsigned","shru","shr","shl","log2","delta","approxRes","approxRem","modulo","rem_u","rem_s","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","valuesById","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","Version","properties","refAttrName","newBuffer","emptyArray","writer","uint32","float","int64","fork","ldelim","int32","encodeDelimited","reader","end2","skipType","decodeDelimited","verify","fromObject","object","LongBits","toObject","arrays","defaults","long","longs","enums","json","isFinite","toJSONOptions","ValueInfoProto","TypeProto","metadataProps","OperatorSetIdProto","StringStringEntryProto","TensorAnnotation","quantParameterTensorNames","tensorName","quantizationAnnotation","externalData","segment","dataLocation","Segment","double","uint64","DataLocation","TensorShapeProto","$oneOfFields","oneOfGetter","oneOfSetter","oneofs","protobuf","configure","_configure","BufferWriter","BufferReader","rpc","indexOutOfRange","writeLength","create_array","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","sint32","bool","fixed32","sfixed32","skip","wireType","BufferReader_","merge","sint64","zzDecode","fixed64","sfixed64","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","Boolean","rpcCall","method","requestCtor","responseCtor","request","callback","asPromise","endedByRPC","zero","zzEncode","zeroHash","toLong","fromHash","hash","toHash","mask","part0","part1","part2","ifNotSet","newError","CustomError","captureStackTrace","isNode","global","freeze","emptyObject","isObject","isset","isSet","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","lcFirst","toLowerCase","ProtocolError","fieldNames","fieldMap","encoding","allocUnsafe","Op","noop","State","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","float32","float64","toFloat64","Builder","opt_initial_size","initial_size","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","asUint8Array","additional_bytes","align_size","old_buf_size","growByteBuffer","byte_size","writeInt8","writeInt16","writeInt64","writeFloat32","writeFloat64","addInt16","addFloat64","voffset","slot","addFieldInt16","addFieldFloat64","addFieldStruct","nested","notNested","new_buf_size","nbb","numfields","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","readInt16","root_table","opt_file_identifier","opt_size_prefix","size_prefix","file_identifier","finishSizePrefixed","table","field","table_start","vtable_start","elem_size","num_elems","alignment","createString","codePoint","bytes_","position_","readUint16","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","vtable_offset","opt_encoding","ident","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","enumerable","globalThis","Function","Symbol","toStringTag","__webpack_exports__"],"sourceRoot":""}