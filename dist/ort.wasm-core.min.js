/*!
* ONNX Runtime Web v1.16.0
* Copyright (c) Microsoft Corporation. All rights reserved.
* Licensed under the MIT License.
*/
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.ort=t():e.ort=t()}(self,(()=>(()=>{var e={453:(e,t,n)=>{"use strict";n.r(t),n.d(t,{InferenceSession:()=>f,Tensor:()=>d,env:()=>o,registerBackend:()=>a});const r={},i=[],a=(e,t,n)=>{if(!t||"function"!=typeof t.init||"function"!=typeof t.createSessionHandler)throw new TypeError("not a valid backend");{const a=r[e];if(void 0===a)r[e]={backend:t,priority:n};else{if(a.priority>n)return;if(a.priority===n&&a.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${n}`)}if(n>=0){const t=i.indexOf(e);-1!==t&&i.splice(t,1);for(let t=0;t<i.length;t++)if(r[i[t]].priority<=n)return void i.splice(t,0,e);i.push(e)}}},o=new class{constructor(){this.wasm={},this.webgl={},this.webgpu={},this.logLevelInternal="warning"}set logLevel(e){if(void 0!==e){if("string"!=typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw new Error(`Unsupported logging level: ${e}`);this.logLevelInternal=e}}get logLevel(){return this.logLevelInternal}},s=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),u=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let l=!1;class c{constructor(e,t,n){let r,i,a;if((()=>{if(!l){l=!0;const e="undefined"!=typeof BigInt64Array&&"function"==typeof BigInt64Array.from,t="undefined"!=typeof BigUint64Array&&"function"==typeof BigUint64Array.from;e&&(s.set("int64",BigInt64Array),u.set(BigInt64Array,"int64")),t&&(s.set("uint64",BigUint64Array),u.set(BigUint64Array,"uint64"))}})(),"string"==typeof e)if(r=e,a=n,"string"===e){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");i=t}else{const n=s.get(e);if(void 0===n)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t))i=n.from(t);else{if(!(t instanceof n))throw new TypeError(`A ${r} tensor's data must be type of ${n}`);i=t}}else if(a=t,Array.isArray(e)){if(0===e.length)throw new TypeError("Tensor type cannot be inferred from an empty array.");const t=typeof e[0];if("string"===t)r="string",i=e;else{if("boolean"!==t)throw new TypeError(`Invalid element type of data array: ${t}.`);r="bool",i=Uint8Array.from(e)}}else{const t=u.get(e.constructor);if(void 0===t)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);r=t,i=e}if(void 0===a)a=[i.length];else if(!Array.isArray(a))throw new TypeError("A tensor's dims must be a number array");const o=(e=>{let t=1;for(let n=0;n<e.length;n++){const r=e[n];if("number"!=typeof r||!Number.isSafeInteger(r))throw new TypeError(`dims[${n}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${r}`);t*=r}return t})(a);if(o!==i.length)throw new Error(`Tensor's size(${o}) does not match data length(${i.length}).`);this.dims=a,this.type=r,this.data=i,this.size=o}static bufferToTensor(e,t){if(void 0===e)throw new Error("Image buffer must be defined");if(void 0===t.height||void 0===t.width)throw new Error("Image height and width must be defined");if("NHWC"===t.tensorLayout)throw new Error("NHWC Tensor layout is not supported yet");const{height:n,width:r}=t,i=t.norm??{mean:255,bias:0};let a,o;a="number"==typeof i.mean?[i.mean,i.mean,i.mean,i.mean]:[i.mean[0],i.mean[1],i.mean[2],i.mean[3]??255],o="number"==typeof i.bias?[i.bias,i.bias,i.bias,i.bias]:[i.bias[0],i.bias[1],i.bias[2],i.bias[3]??0];const s=void 0!==t.bitmapFormat?t.bitmapFormat:"RGBA",u=void 0!==t.tensorFormat&&void 0!==t.tensorFormat?t.tensorFormat:"RGB",l=n*r,d="RGBA"===u?new Float32Array(4*l):new Float32Array(3*l);let p=4,f=0,h=1,g=2,m=3,y=0,w=l,v=2*l,b=-1;"RGB"===s&&(p=3,f=0,h=1,g=2,m=-1),"RGBA"===u?b=3*l:"RBG"===u?(y=0,v=l,w=2*l):"BGR"===u&&(v=0,w=l,y=2*l);for(let t=0;t<l;t++,f+=p,g+=p,h+=p,m+=p)d[y++]=(e[f]+o[0])/a[0],d[w++]=(e[h]+o[1])/a[1],d[v++]=(e[g]+o[2])/a[2],-1!==b&&-1!==m&&(d[b++]=(e[m]+o[3])/a[3]);return new c("float32",d,"RGBA"===u?[1,4,n,r]:[1,3,n,r])}static async fromImage(e,t){const n="undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement,r="undefined"!=typeof ImageData&&e instanceof ImageData,i="undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap,a="string"==typeof e;let o,s=t??{};if(n){const n=document.createElement("canvas");n.width=e.width,n.height=e.height;const r=n.getContext("2d");if(null==r)throw new Error("Can not access image data");{let n=e.height,i=e.width;if(void 0!==t&&void 0!==t.resizedHeight&&void 0!==t.resizedWidth&&(n=t.resizedHeight,i=t.resizedWidth),void 0!==t){if(s=t,void 0!==t.tensorFormat)throw new Error("Image input config format must be RGBA for HTMLImageElement");if(s.tensorFormat="RGBA",void 0!==t.height&&t.height!==n)throw new Error("Image input config height doesn't match HTMLImageElement height");if(s.height=n,void 0!==t.width&&t.width!==i)throw new Error("Image input config width doesn't match HTMLImageElement width");s.width=i}else s.tensorFormat="RGBA",s.height=n,s.width=i;r.drawImage(e,0,0),o=r.getImageData(0,0,i,n).data}}else{if(!r){if(i){if(void 0===t)throw new Error("Please provide image config with format for Imagebitmap");if(void 0!==t.bitmapFormat)throw new Error("Image input config format must be defined for ImageBitmap");const n=document.createElement("canvas").getContext("2d");if(null!=n){const r=e.height,i=e.width;if(n.drawImage(e,0,0,i,r),o=n.getImageData(0,0,i,r).data,void 0!==t){if(void 0!==t.height&&t.height!==r)throw new Error("Image input config height doesn't match ImageBitmap height");if(s.height=r,void 0!==t.width&&t.width!==i)throw new Error("Image input config width doesn't match ImageBitmap width");s.width=i}else s.height=r,s.width=i;return c.bufferToTensor(o,s)}throw new Error("Can not access image data")}if(a)return new Promise(((n,r)=>{const i=document.createElement("canvas"),a=i.getContext("2d");if(!e||!a)return r();const o=new Image;o.crossOrigin="Anonymous",o.src=e,o.onload=()=>{i.width=o.width,i.height=o.height,a.drawImage(o,0,0,i.width,i.height);const e=a.getImageData(0,0,i.width,i.height);if(void 0!==t){if(void 0!==t.height&&t.height!==i.height)throw new Error("Image input config height doesn't match height");if(s.height=i.height,void 0!==t.width&&t.width!==i.width)throw new Error("Image input config width doesn't match width");s.width=i.width}else s.height=i.height,s.width=i.width;n(c.bufferToTensor(e.data,s))}}));throw new Error("Input data provided is not supported - aborted tensor creation")}{const n="RGBA";let r,i;if(void 0!==t&&void 0!==t.resizedWidth&&void 0!==t.resizedHeight?(r=t.resizedHeight,i=t.resizedWidth):(r=e.height,i=e.width),void 0!==t){if(s=t,void 0!==t.bitmapFormat&&t.bitmapFormat!==n)throw new Error("Image input config format must be RGBA for ImageData");s.bitmapFormat="RGBA"}else s.bitmapFormat="RGBA";if(s.height=r,s.width=i,void 0!==t){const t=document.createElement("canvas");t.width=i,t.height=r;const n=t.getContext("2d");if(null==n)throw new Error("Can not access image data");n.putImageData(e,0,0),o=n.getImageData(0,0,i,r).data}else o=e.data}}if(void 0!==o)return c.bufferToTensor(o,s);throw new Error("Input data provided is not supported - aborted tensor creation")}toDataURL(e){const t=document.createElement("canvas");t.width=this.dims[3],t.height=this.dims[2];const n=t.getContext("2d");if(null!=n){let r,i;void 0!==e?.tensorLayout&&"NHWC"===e.tensorLayout?(r=this.dims[2],i=this.dims[3]):(r=this.dims[3],i=this.dims[2]);const a=void 0!==e?.format?e.format:"RGB",o=e?.norm;let s,u;void 0===o||void 0===o.mean?s=[255,255,255,255]:"number"==typeof o.mean?s=[o.mean,o.mean,o.mean,o.mean]:(s=[o.mean[0],o.mean[1],o.mean[2],0],void 0!==o.mean[3]&&(s[3]=o.mean[3])),void 0===o||void 0===o.bias?u=[0,0,0,0]:"number"==typeof o.bias?u=[o.bias,o.bias,o.bias,o.bias]:(u=[o.bias[0],o.bias[1],o.bias[2],0],void 0!==o.bias[3]&&(u[3]=o.bias[3]));const l=i*r;let c=0,d=l,p=2*l,f=-1;"RGBA"===a?(c=0,d=l,p=2*l,f=3*l):"RGB"===a?(c=0,d=l,p=2*l):"RBG"===a&&(c=0,p=l,d=2*l);for(let e=0;e<i;e++)for(let t=0;t<r;t++){const r=(this.data[c++]-u[0])*s[0],i=(this.data[d++]-u[1])*s[1],a=(this.data[p++]-u[2])*s[2],o=-1===f?255:(this.data[f++]-u[3])*s[3];n.fillStyle="rgba("+r+","+i+","+a+","+o+")",n.fillRect(t,e,1,1)}return t.toDataURL()}throw new Error("Can not access image data")}toImageData(e){const t=document.createElement("canvas").getContext("2d");let n;if(null==t)throw new Error("Can not access image data");{let r,i,a;void 0!==e?.tensorLayout&&"NHWC"===e.tensorLayout?(r=this.dims[2],i=this.dims[1],a=this.dims[3]):(r=this.dims[3],i=this.dims[2],a=this.dims[1]);const o=void 0!==e&&void 0!==e.format?e.format:"RGB",s=e?.norm;let u,l;void 0===s||void 0===s.mean?u=[255,255,255,255]:"number"==typeof s.mean?u=[s.mean,s.mean,s.mean,s.mean]:(u=[s.mean[0],s.mean[1],s.mean[2],255],void 0!==s.mean[3]&&(u[3]=s.mean[3])),void 0===s||void 0===s.bias?l=[0,0,0,0]:"number"==typeof s.bias?l=[s.bias,s.bias,s.bias,s.bias]:(l=[s.bias[0],s.bias[1],s.bias[2],0],void 0!==s.bias[3]&&(l[3]=s.bias[3]));const c=i*r;if(void 0!==e){if(void 0!==e.height&&e.height!==i)throw new Error("Image output config height doesn't match tensor height");if(void 0!==e.width&&e.width!==r)throw new Error("Image output config width doesn't match tensor width");if(void 0!==e.format&&4===a&&"RGBA"!==e.format||3===a&&"RGB"!==e.format&&"BGR"!==e.format)throw new Error("Tensor format doesn't match input tensor dims")}const d=4;let p=0,f=1,h=2,g=3,m=0,y=c,w=2*c,v=-1;"RGBA"===o?(m=0,y=c,w=2*c,v=3*c):"RGB"===o?(m=0,y=c,w=2*c):"RBG"===o&&(m=0,w=c,y=2*c),n=t.createImageData(r,i);for(let e=0;e<i*r;p+=d,f+=d,h+=d,g+=d,e++)n.data[p]=(this.data[m++]-l[0])*u[0],n.data[f]=(this.data[y++]-l[1])*u[1],n.data[h]=(this.data[w++]-l[2])*u[2],n.data[g]=-1===v?255:(this.data[v++]-l[3])*u[3]}return n}reshape(e){return new c(this.type,this.data,e)}}const d=c;class p{constructor(e){this.handler=e}async run(e,t,n){const r={};let i={};if("object"!=typeof e||null===e||e instanceof d||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let a=!0;if("object"==typeof t){if(null===t)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof d)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(0===t.length)throw new TypeError("'fetches' cannot be an empty array.");a=!1;for(const e of t){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);r[e]=null}if("object"==typeof n&&null!==n)i=n;else if(void 0!==n)throw new TypeError("'options' must be an object.")}else{let e=!1;const o=Object.getOwnPropertyNames(t);for(const n of this.outputNames)if(-1!==o.indexOf(n)){const i=t[n];(null===i||i instanceof d)&&(e=!0,a=!1,r[n]=i)}if(e){if("object"==typeof n&&null!==n)i=n;else if(void 0!==n)throw new TypeError("'options' must be an object.")}else i=t}}else if(void 0!==t)throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const t of this.inputNames)if(void 0===e[t])throw new Error(`input '${t}' is missing in 'feeds'.`);if(a)for(const e of this.outputNames)r[e]=null;const o=await this.handler.run(e,r,i),s={};for(const e in o)Object.hasOwnProperty.call(o,e)&&(s[e]=new d(o[e].type,o[e].data,o[e].dims));return s}static async create(e,t,n,a){let o,s={};if("string"==typeof e){if(o=e,"object"==typeof t&&null!==t)s=t;else if(void 0!==t)throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(o=e,"object"==typeof t&&null!==t)s=t;else if(void 0!==t)throw new TypeError("'options' must be an object.")}else{if(!(e instanceof ArrayBuffer||"undefined"!=typeof SharedArrayBuffer&&e instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{const r=e;let i=0,u=e.byteLength;if("object"==typeof t&&null!==t)s=t;else if("number"==typeof t){if(i=t,!Number.isSafeInteger(i))throw new RangeError("'byteOffset' must be an integer.");if(i<0||i>=r.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${r.byteLength}).`);if(u=e.byteLength-i,"number"==typeof n){if(u=n,!Number.isSafeInteger(u))throw new RangeError("'byteLength' must be an integer.");if(u<=0||i+u>r.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${r.byteLength-i}].`);if("object"==typeof a&&null!==a)s=a;else if(void 0!==a)throw new TypeError("'options' must be an object.")}else if(void 0!==n)throw new TypeError("'byteLength' must be a number.")}else if(void 0!==t)throw new TypeError("'options' must be an object.");o=new Uint8Array(r,i,u)}}const u=(s.executionProviders||[]).map((e=>"string"==typeof e?e:e.name)),l=await(async e=>{const t=0===e.length?i:e,n=[];for(const e of t){const t=r[e];if(t){if(t.initialized)return t.backend;if(t.aborted)continue;const r=!!t.initPromise;try{return r||(t.initPromise=t.backend.init()),await t.initPromise,t.initialized=!0,t.backend}catch(i){r||n.push({name:e,err:i}),t.aborted=!0}finally{delete t.initPromise}}}throw new Error(`no available backend found. ERR: ${n.map((e=>`[${e.name}] ${e.err}`)).join(", ")}`)})(u),c=await l.createSessionHandler(o,s);return new p(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}const f=p},818:(e,t,n)=>{"use strict";t.c8=t.rX=void 0;const r=n(453),i=n(381),a=n(544),o=n(640);t.rX=()=>{if(("number"!=typeof r.env.wasm.initTimeout||r.env.wasm.initTimeout<0)&&(r.env.wasm.initTimeout=0),"boolean"!=typeof r.env.wasm.simd&&(r.env.wasm.simd=!0),"boolean"!=typeof r.env.wasm.proxy&&(r.env.wasm.proxy=!1),"number"!=typeof r.env.wasm.numThreads||!Number.isInteger(r.env.wasm.numThreads)||r.env.wasm.numThreads<=0){const e="undefined"==typeof navigator?(0,i.cpus)().length:navigator.hardwareConcurrency;r.env.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},t.c8=new class{async init(){(0,t.rX)(),await(0,a.initWasm)()}async createSessionHandler(e,t){const n=new o.OnnxruntimeWebAssemblySessionHandler;return await n.loadModel(e,t),Promise.resolve(n)}}},57:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(t,n);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,i)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),i(n(453),t);const a=n(453);{const e=n(818).c8;(0,a.registerBackend)("cpu",e,10),(0,a.registerBackend)("wasm",e,10),(0,a.registerBackend)("xnnpack",e,9)}},838:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.WebGpuBackend=void 0;const r=n(453),i=n(955),a=n(771),o=n(510),s=n(305);t.WebGpuBackend=class{constructor(){this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.pendingDispatchNumber=0,this.profilingEnabled=!1}get currentKernelCustomData(){if(null===this.currentKernelId)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(){if(!navigator.gpu)throw new Error("WebGpuBackend: WebGPU is not available.");const e=await navigator.gpu.requestAdapter();if(!e)throw new Error("WebGpuBackend: Failed to get GPU adapter.");const t={requiredLimits:{maxComputeWorkgroupStorageSize:e.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:e.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:e.limits.maxStorageBufferBindingSize}};e.features.has("timestamp-query-inside-passes")&&"default"===r.env.webgpu.profilingMode&&(this.profilingEnabled=!0,t.requiredFeatures=["timestamp-query-inside-passes"]),this.device=await e.requestDevice(t),this.gpuDataManager=(0,a.createGpuDataManager)(this),this.programManager=new s.ProgramManager(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,this.device.onuncapturederror=e=>{e.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${e.error.message}`)},this.profilingEnabled&&(this.profilingQuerySet=this.device.createQuerySet({type:"timestamp",count:2}))}dispose(){}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){return this.computePassEncoder||(this.computePassEncoder=this.getCommandEncoder().beginComputePass()),this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){this.endComputePass(),this.device.queue.submit([this.getCommandEncoder().finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0}run(e,t,n,r,a){if(t.length!==e.inputTypes.length)throw new Error(`Input size must be equal to ${e.inputTypes.length}.`);const o=[];for(let e=0;e<t.length;++e){const n=this.gpuDataManager.get(t[e].data);if(!n)throw new Error(`no GPU data for input: ${t[e].data}`);o[e]=n}const s=((e,t,n)=>{const r=t.map((e=>`${e.join(",")}`)).join("_"),i=n.join("_");let a=e.name;return e.cacheHint&&(a+="["+e.cacheHint+"]"),a+=":"+r+";"+i,a})(e,t.map((e=>e.dims)),o.map((e=>e.type)));let u=this.programManager.getArtifact(s);const l=u?u.programInfo:"function"==typeof e.get?e.get():e,c=0===n.length?l.outputs.map(((e,t)=>t)):n;if(c.length!==l.outputs.length)throw new Error(`Output size ${c.length} must be equal to ${l.outputs.length}.`);const d=[],p=[];for(let e=0;e<l.outputs.length;++e){if(!Number.isInteger(c[e])||c[e]<-2||c[e]>=l.outputs.length)throw new Error(`Invalid output index: ${c[e]}`);const t=-1===c[e],n=-2===c[e],i=t||n?a(l.outputs[e].dataType,l.outputs[e].dims):r(c[e],l.outputs[e].dataType,l.outputs[e].dims),o=this.gpuDataManager.get(i.data);if(!o)throw new Error(`no GPU data for output: ${i.data}`);if(t&&this.temporaryData.push(o),n){let e=this.kernelPersistentData.get(this.currentKernelId);e||(e=[],this.kernelPersistentData.set(this.currentKernelId,e)),e.push(o)}d.push(i),p.push(o)}const f=this.programManager.normalizeDispatchGroupSize(l.dispatchGroup(t));return u||(u=this.programManager.build(l,f),this.programManager.setArtifact(s,u)),(0,i.LOG_DEBUG)("info",(()=>`[ProgramManager] run "${l.name}" (key=${s}) with ${f[0]}x${f[1]}x${f[2]}`)),this.programManager.run(u,o,p,f),d}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){const n=await this.gpuDataManager.download(e);t().set(new Uint8Array(n))}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,n){const r=o.WEBGPU_OP_RESOLVE_RULES.get(e);if(!r)throw new Error(`kernel not implemented: ${e}`);this.kernels.set(t,[e,r[0],[r[1],n]])}releaseKernel(e){const t=this.kernelPersistentData.get(e);if(t){for(const e of t)this.gpuDataManager.release(e.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t){const n=this.kernels.get(e);if(!n)throw new Error(`kernel not created: ${e}`);const[r,a,o]=n;if(null!==this.currentKernelId)throw new Error(`kernel "${r}" is not allowed to be called recursively`);this.currentKernelId=e,o[0]&&(o[1]=o[0](o[1]),o[0]=void 0),(0,i.LOG_DEBUG)("info",(()=>`[WebGPU] Start to run kernel "${r}"...`)),this.temporaryData=[];try{return a(t,o[1]),0}catch(e){return(0,i.LOG_DEBUG)("warning",`[WebGPU] Kernel "${r}" failed. Error: ${e}`),1}finally{for(const e of this.temporaryData)this.gpuDataManager.release(e.id);this.temporaryData=[],this.currentKernelId=null}}}},675:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.init=void 0;const r=n(917),i=n(838),a=n(955),o=n(952);class s{constructor(e,t,n,r){this.module=e,this.dataType=t,this.data=n,this.dims=r}getFloat32Array(){return new Float32Array(this.module.HEAP8.buffer,this.data,o.ShapeUtil.size(this.dims))}reshape(e){if(o.ShapeUtil.size(e)!==o.ShapeUtil.size(this.dims))throw new Error("Invalid new shape");return new s(this.module,this.dataType,this.data,e)}}class u{get customData(){return this.backend.currentKernelCustomData}constructor(e,t,n){this.module=e,this.backend=t;const r=e.HEAPU32;let i=n>>2;this.opKernelContext=r[i++];const a=r[i++],o=[];for(let t=0;t<a;t++){const t=r[i++],n=r[i++],a=r[i++],u=[];for(let e=0;e<a;e++)u.push(r[i++]);o.push(new s(e,t,n,u))}this.inputs=o}compute(e,t){var n,i,a;const u=null!==(i=null===(n=null==t?void 0:t.inputs)||void 0===n?void 0:n.map((e=>"number"==typeof e?this.inputs[e]:e)))&&void 0!==i?i:this.inputs,l=null!==(a=null==t?void 0:t.outputs)&&void 0!==a?a:[];return this.backend.run(e,u,l,((e,t,n)=>new s(this.module,t,this.output(e,n),n)),((e,t)=>{const n=(0,r.getTensorElementSize)(e);if(!n)throw new Error(`Unsupported data type: ${e}`);const i=n*o.ShapeUtil.size(t);return new s(this.module,e,this.backend.gpuDataManager.create(i).id,t)}))}output(e,t){const n=this.module.stackSave();try{const n=this.module.stackAlloc(4*(1+t.length));let r=n>>2;this.module.HEAPU32[r++]=t.length;for(let e=0;e<t.length;e++)this.module.HEAPU32[r++]=t[e];return this.module._JsepOutput(this.opKernelContext,e,n)}finally{this.module.stackRestore(n)}}}t.init=async e=>{const t=e.jsepInit;if(t&&navigator.gpu){const n=new i.WebGpuBackend;await n.initialize(),t({backend:n},(e=>n.alloc(e)),(e=>n.free(e)),((t,r,i,o=!1)=>{if(o)(0,a.LOG_DEBUG)("verbose",(()=>`[WebGPU] jsepCopyGpuToGpu: src=${t}, dst=${r}, size=${i}`)),n.memcpy(t,r);else{(0,a.LOG_DEBUG)("verbose",(()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${t}, gpuDataId=${r}, size=${i}`));const o=e.HEAPU8.subarray(t,t+i);n.upload(r,o)}}),(async(t,r,i)=>{(0,a.LOG_DEBUG)("verbose",(()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${t}, dataOffset=${r}, size=${i}`)),await n.download(t,(()=>e.HEAPU8.subarray(r,r+i)))}),((e,t,r)=>n.createKernel(e,t,r)),(e=>n.releaseKernel(e)),((t,r)=>{(0,a.LOG_DEBUG)("verbose",(()=>`[WebGPU] jsepRun: kernel=${t}, contextDataOffset=${r}`));const i=new u(e,n,r);return n.computeKernel(t,i)}))}}},955:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.LOG_DEBUG=t.LOG=void 0;const r=n(453),i=n(917),a=["V","I","W","E","F"];t.LOG=(e,t)=>{const n=(0,i.logLevelStringToEnum)(e);var o,s;n>=(0,i.logLevelStringToEnum)(r.env.logLevel)&&(o=n,s="function"==typeof t?t():t,console.log(`[${a[o]},${(new Date).toISOString()}]${s}`))},t.LOG_DEBUG=(...e)=>{r.env.debug&&(0,t.LOG)(...e)}},952:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MAX_CLIP=t.MIN_CLIP=t.GemmUtil=t.PoolConvUtil=t.ShapeUtil=t.BroadcastUtil=t.MatMulUtil=void 0;class n{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}}t.MatMulUtil=n;class r{static calcShape(e,t,r=!1){const i=e.length,a=t.length;if(0===i)return t;if(0===a)return e;const o=Math.max(e.length,t.length),s=new Array(o);if(r){if(i<2||a<2)return;const r=n.calcMatMulShape([e[i-2],e[i-1]],[t[a-2],t[a-1]]);if(void 0===r)return;[s[o-2],s[o-1]]=r}for(let n=r?3:1;n<=o;n++){const r=i-n<0?1:e[i-n],u=a-n<0?1:t[a-n];if(r!==u&&r>1&&u>1)return;s[o-n]=Math.max(r,u)}return s}static isValidBroadcast(e,t){const n=e.length,r=t.length;if(n>r)return!1;for(let i=1;i<=n;i++)if(1!==e[n-i]&&e[n-i]!==t[r-i])return!1;return!0}}t.BroadcastUtil=r;class i{static size(e){return i.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,t){if(t<0||t>e.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return i.getSizeFromDimensionRange(e,t,e.length)}static sizeToDimension(e,t){if(t<0||t>e.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${e.length} dimensions.`);return i.getSizeFromDimensionRange(e,0,t)}static getSizeFromDimensionRange(e,t,n){let r=1;for(let i=t;i<n;i++){if(e[i]<=0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.");r*=e[i]}return r}static computeStrides(e){const t=e.length;if(0===t)return[];if(1===t)return[1];const n=new Array(t);n[t-1]=1,n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}static normalizeAxis(e,t){if(e<-t&&e>=t)throw new Error("unsupported axis for this operation.");return e<0?e+t:e}static normalizeAxes(e,t){return e.map((n=>this.normalizeAxis(n,null!=t?t:e.length)))}static sortBasedOnPerm(e,t){return t?t.map((t=>e[t])):e.slice().reverse()}static padShape(e,t){const n=e.length;return e.map(((e,r)=>e+t[r]+t[r+n]))}static areEqual(e,t){return e.length===t.length&&e.every(((e,n)=>e===t[n]))}}t.ShapeUtil=i;class a{static adjustPoolAttributes(e,t,n,r,i,a){if(!e&&n.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let e=0;e<t.length-2;e++)e>=n.length?n.push(t[e+2]):n[e]=t[e+2];for(let e=0;e<n.length;e++)if(e<r.length){if(r[e]<0)throw new Error("strides should be greater than or equal to 1")}else r.push(1);for(let e=0;e<n.length;e++)if(e<i.length){if(i[e]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let e=0;e<2*n.length;e++)if(e<a.length){if(a[e]<0)throw new Error("pad should be greater than or equal to 1")}else a.push(0);for(let e=0;e<n.length;e++){if(n[e]<=0)throw new Error("kernel shapes need to be greater than 0");if(a[e]>=n[e]||a[e+n.length]>=n[e])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,t,n,r,i,o,s){if(s){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(t.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(r.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let u=0;u<e.length-2;u++)a.adjustPadAndReturnShape(e[u+(o?1:2)],t[u],n[u],r[u],i,u,u+e.length-2,s)}}static computePoolOutputShape(e,t,n,r,i,o,s){if(t.length<=0)throw new Error("input shape must be of size greater than 0");const u=[t[0],t[1]];return a.computeShapeHelper(e,t,u,n,r,i,o,s),u}static computeConvOutputShape(e,t,n,r,i,o,s){if(e.length<=0||t.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");const u=[e[0],t[0]];return a.computeShapeHelper(!1,e,u,n,r,i,o,s),u}static computeShapeHelper(e,t,n,r,i,o,s,u){if(e)for(let e=0;e<t.length-2;e++)n.push(1);else for(let e=0;e<t.length-2;e++)n.push(a.adjustPadAndReturnShape(t[e+2],r[e],i[e],o[e],s,e,e+t.length-2,u))}static adjustPadAndReturnShape(e,t,n,r,i,a,o,s){const u=n*(r-1)+1;if(!s||"NOTSET"===s)return Math.floor((e+i[a]+i[o]-u)/t+1);switch(s){case"VALID":return i[a]=0,i[o]=0,Math.floor((e-u)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(1!==n)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{const n=((e+t-1)/t-1)*t+r-e;return i[a]="SAME_LOWER"===s?Math.floor((n+1)/2):Math.floor(n/2),i[o]=n-i[a],Math.floor((e+n-r)/t+1)}default:throw new Error("Unsupported AutoPad type")}}}t.PoolConvUtil=a,t.GemmUtil=class{static getShapeOfGemmResult(e,t,n,i,a){if(2!==e.length||2!==n.length)throw new Error("shape need to be of size 2");let o,s,u;t?(o=e[1],s=e[0]):(o=e[0],s=e[1]);let l=-1;if(i?(u=n[0],l=1):(u=n[1],l=0),n[l]!==s)throw new Error("dimension mismatch");if(o<=0||u<=0||s<=0)throw new Error("invalid shape specified");if(a&&!r.isValidBroadcast(a,[o,u]))throw new Error("gemm: invalid bias shape for broadcast");return[o,u,s]}},t.MIN_CLIP=-34028234663852886e22,t.MAX_CLIP=34028234663852886e22},387:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createAttributeWithCacheKey=void 0;class n{constructor(e){Object.assign(this,e)}get cacheKey(){return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map((e=>`${this[e]}`)).join(";")),this._cacheKey}}t.createAttributeWithCacheKey=e=>new n(e)},771:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createGpuDataManager=void 0;const r=n(955),i=n(163),a=e=>16*Math.ceil(e/16);let o=0;class s{constructor(e){this.backend=e,this.storageCache=new Map,this.downloadCache=new Map,this.buffersForUploadingPending=[],this.buffersPending=[]}upload(e,t){const n=t.buffer,i=t.byteOffset,o=t.byteLength,s=a(o),u=this.storageCache.get(e);if(!u)throw new Error("gpu data for uploading does not exist");if(u.originalSize!==o)throw new Error(`inconsistent data size. gpu data size=${u.originalSize}, data size=${o}`);const l=this.backend.device.createBuffer({mappedAtCreation:!0,size:s,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),c=l.getMappedRange();new Uint8Array(c).set(new Uint8Array(n,i,o)),l.unmap();const d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(l,0,u.gpuData.buffer,0,s),(0,r.LOG_DEBUG)("verbose",(()=>`[WebGPU] GpuDataManager.upload(id=${e})`)),this.buffersForUploadingPending.push(l)}memcpy(e,t){const n=this.storageCache.get(e);if(!n)throw new Error("source gpu data for memcpy does not exist");const r=this.storageCache.get(t);if(!r)throw new Error("destination gpu data for memcpy does not exist");if(n.originalSize!==r.originalSize)throw new Error("inconsistent source and destination gpu data size");const i=a(n.originalSize);this.backend.getCommandEncoder().copyBufferToBuffer(n.gpuData.buffer,0,r.gpuData.buffer,0,i)}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){const n=a(e),s=this.backend.device.createBuffer({size:n,usage:t}),u={id:o++,type:i.GpuDataType.default,buffer:s};return this.storageCache.set(u.id,{gpuData:u,originalSize:e}),(0,r.LOG_DEBUG)("verbose",(()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${u.id}`)),u}get(e){var t;return null===(t=this.storageCache.get(e))||void 0===t?void 0:t.gpuData}release(e){const t=this.storageCache.get(e);if(!t)throw new Error("releasing data does not exist");return(0,r.LOG_DEBUG)("verbose",(()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${t.gpuData.id}`)),this.storageCache.delete(e),this.buffersPending.push(t.gpuData.buffer),this.downloadCache.get(e)&&this.downloadCache.delete(e),t.originalSize}async download(e){const t=this.downloadCache.get(e);if(t)return t.data;const n=this.storageCache.get(e);if(!n)throw new Error("data does not exist");const r=this.backend.getCommandEncoder();this.backend.endComputePass();const i=this.backend.device.createBuffer({size:n.originalSize,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});r.copyBufferToBuffer(n.gpuData.buffer,0,i,0,n.originalSize),this.backend.flush();const a=new Promise((e=>{i.mapAsync(GPUMapMode.READ).then((()=>{const t=i.getMappedRange().slice(0);i.destroy(),e(t)}))}));return this.downloadCache.set(e,{data:a}),a}refreshPendingBuffers(){for(const e of this.buffersForUploadingPending)e.destroy();for(const e of this.buffersPending)e.destroy()}}t.createGpuDataManager=(...e)=>new s(...e)},510:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(t,n);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,i)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.WEBGPU_OP_RESOLVE_RULES=void 0;const o=a(n(504)),s=n(770),u=n(271),l=n(522),c=a(n(262)),d=n(625),p=a(n(302));t.WEBGPU_OP_RESOLVE_RULES=new Map([["Abs",[p.abs]],["Acos",[p.acos]],["Acosh",[p.acosh]],["Add",[o.add]],["Asin",[p.asin]],["Asinh",[p.asinh]],["Atan",[p.atan]],["Atanh",[p.atanh]],["AveragePool",[c.averagePool,c.parseAveragePoolAttributes]],["Ceil",[p.ceil]],["ClipV10",[p.clipV10]],["Clip",[p.clip]],["Conv",[s.conv,s.parseConvAttributes]],["Cos",[p.cos]],["Cosh",[p.cosh]],["Div",[o.div]],["Elu",[p.elu,p.parseAlphaAttributes]],["Erf",[p.erf]],["Exp",[p.exp]],["Floor",[p.floor]],["Gemm",[u.gemm,u.parseGemmAttributes]],["GlobalAveragePool",[c.globalAveragePool,c.parseGlobalAveragePoolAttributes]],["GlobalMaxPool",[c.globalMaxPool,c.parseGlobalMaxPoolAttributes]],["LeakyRelu",[p.leakyRelu,p.parseAlphaAttributes]],["MatMul",[l.matMul]],["MaxPool",[c.maxPool,c.parseMaxPoolAttributes]],["Mul",[o.mul]],["Neg",[p.neg]],["Pow",[o.pow]],["Reciprocal",[p.reciprocal]],["Relu",[p.relu]],["Sigmoid",[p.sigmoid]],["Sin",[p.sin]],["Sinh",[p.sinh]],["Sqrt",[p.sqrt]],["Sub",[o.sub]],["Tan",[p.tan]],["Tanh",[p.tanh]],["ThresholdedRelu",[p.thresholdedRelu,p.parseAlphaAttributes]],["Transpose",[d.transpose,d.parseTransposeAttributes]]])},427:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.biasActivationSnippet=t.activationFnSnippet=t.typeSnippet=void 0,t.typeSnippet=e=>{switch(e){case 1:return"f32";case 2:return"vec2<f32>";case 3:return"vec3<f32>";case 4:return"vec4<f32>";default:throw new Error(`${e}-component is not supported.`)}},t.activationFnSnippet=(e,t=!1,n=!1,r=3)=>"",t.biasActivationSnippet=(e,t)=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      ${t?"value = activation(value, coords);":""}\n      `},456:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createConv2DMatMulProgramInfo=void 0;const r=n(955),i=n(952),a=n(163),o=n(427),s=n(85),u=n(158);t.createConv2DMatMulProgramInfo=(e,t,n,l,c,d,p,f,h)=>{const g="NHWC"===n.format,m=g?e[0].dims[3]:e[0].dims[1],y=l[0],w=g?l[2]:l[3],v=g?l[1]:l[2],b=g?l[3]:l[1],$=((m%4==0||m%3==0)&&g||w%4==0&&!g)&&b%4==0,_=g?b:w*v,C=g?w*v:b,S=$?[8,8,1]:[_<=4?4:16,_>4&&C<=4?4:16,1],A=$?[4,4,1]:[_<=4?1:2,_>4&&C<=4?1:2,1],E=[Math.ceil(_/S[0]/A[0]),Math.ceil(C/S[1]/A[1]),Math.ceil(y/S[2]/A[1])];(0,r.LOG_DEBUG)("verbose",(()=>`[conv2d_mm_webgpu] dispatch = ${E}`));const O=$?g&&m%4!=0?3:4:A[0],j=S[1]*A[1],P=S[0]*A[0],T=Math.max(S[0]*O,S[1]),I=c%j==0,x=d%P==0,R=p%T==0,k=$?[O,4,4]:[1,1,1],D=[`@group(0) @binding(0) var<storage, read> x: array<${$&&4===O?"vec4<f32>":"f32"}>;`,`@group(0) @binding(1) var<storage, read> w: array<${$?"vec4<f32>":"f32"}>;`];let M=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${$?"vec4<f32>":"f32"}) {\n        result[flatIndex] = ${$?"vec4<f32>":"f32"}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${$?"vec4<f32>":"f32"}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${$?"/ 4":""}, value);\n      }`;return f&&(D.push(`@group(0) @binding(2) var<storage, read> bias: array<${$?"vec4<f32>":"f32"}>;`),M+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${$?"vec4<f32>":"f32"} {\n          return bias[coords.${g?"w":"y"}${$?"/ 4":""}];\n        }`),Object.assign(Object.assign({},t),{outputs:[{dims:l,dataType:e[0].dataType,gpuDataType:a.GpuDataType.default}],dispatchGroup:()=>({x:E[0],y:E[1],z:E[2]}),getShaderSource:()=>`\n        ${s.utilFunctions}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${D.join("")}\n        @group(0) @binding(${D.length}) var<storage, read_write> result: array<${$?"vec4<f32>":"f32"}>;\n        //@group(0) @binding(${D.length+1}) var<uniform> uniforms: Uniforms;\n\n        const xShape : vec4<i32> = vec4<i32>(${e[0].dims.join(",")});\n        const wShape : vec4<i32> = vec4<i32>(${e[1].dims.join(",")});\n        const outShape : vec4<i32> = vec4<i32>(${l.join(",")});\n        const outShapeStrides : vec3<i32> = vec3<i32>(${i.ShapeUtil.computeStrides(l).slice(0,3).join(",")});\n        const filterDims : vec2<i32> = vec2<i32>(${n.kernelShape[0]}, ${n.kernelShape[1]});\n        const pad : vec2<i32> = vec2<i32>(${n.pads[0]}, ${n.pads[1]});\n        const stride : vec2<i32> = vec2<i32>(${n.strides[0]}, ${n.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${n.dilations[0]}, ${n.dilations[1]});\n        const dimAOuter : i32 = ${c};\n        const dimBOuter : i32 = ${d};\n        const dimInner : i32 = ${p};\n        ${M}\n        ${((e,t,n,r,i=!1,a,s=!1,u=4,l=4,c=4)=>{const d=e?"\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    ":"\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    ",p=e?"\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ":"\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    ",f=e?"xShape[1]":"xShape[2]",h=e?"xShape[2]":"xShape[3]",g=e?"row":"col",m=e?"col":"row",y=`\n    let inChannels = wShape[2];\n    let outWidth = ${e?"outShape[2]":"outShape[3]"};\n    let outRow = ${g} / outWidth;\n    let outCol = ${g} % outWidth;\n\n    let WRow = ${m} / (filterDims[1] * inChannels);\n    let WCol = ${m} / inChannels % filterDims[1];\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\n    let xCh = ${m} % inChannels;\n    var resData = ${(0,o.typeSnippet)(u)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the 'same' padding type.\n    if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${h}) {\n      ${d}\n      let xIndex = getIndexFromCoords4D(coord, xShape);\n      ${(e=>{switch(e){case 1:return"resData = x[xIndex];";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(u)}\n    }\n    return resData;`,w=e?t&&r?`\n    let col = colIn * ${u};\n    ${y}`:`\n    let col = colIn * ${u};\n    if (row < dimAOuter && col < dimInner) {\n      ${y}\n    }\n    return ${(0,o.typeSnippet)(u)}(0.0);`:r&&n?`\n    let col = colIn * ${u};\n    ${y}`:`\n    let col = colIn * ${u};\n    if (row < dimInner && col < dimBOuter) {\n      ${y}\n    }\n    return ${(0,o.typeSnippet)(u)}(0.0);`,v=`${(e=>{switch(e){case 1:return"return w[row * wShape[3] + colIn];";case 4:return"return w[row * wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(l)}`,b=(0,o.typeSnippet)(c),$=e?(0,o.typeSnippet)(u):(0,o.typeSnippet)(l),_=e?(0,o.typeSnippet)(l):(0,o.typeSnippet)(u);return`\n    ${(0,o.activationFnSnippet)(a,s,4===c,4)}\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${$} {\n      ${e?w:v}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${_} {\n      ${e?v:w}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${b}) {\n      let col = colIn * ${c};\n      if (row < dimAOuter && col < dimBOuter)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"outShape[2]":"outShape[3]"};\n      ${p}\n      ${(0,o.biasActivationSnippet)(i,a)}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`})(g,I,x,R,f,void 0,!1,k[0],k[1],k[2])}\n            ${$?(0,u.makeMatMulPackedVec4Source)(A,S,!g,T):(0,u.makeMatMulPackedSource)(A,S,!g,T,!1,void 0,h)}`})}},85:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.utilFunctions=void 0,t.utilFunctions="\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));\n}\n"},158:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.makeMatMulPackedSource=t.makeMatMulPackedVec4Source=void 0,t.makeMatMulPackedVec4Source=(e,t,n=!1,r=32,i=!1,a=32,o=!1)=>{const s=t[1]*e[1],u=t[0]*e[0],l=n?s:r,c=n?r:s,d=l/t[0],p=r/t[1];if((!n||4!==d||4!==e[1])&&(n||3!==d&&4!==d)||l%t[0]!=0||r%t[1]!=0||4!==e[0])throw new Error(`If transposeA ${n} is true, innerElementSize ${d} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${d} must be 3 or 4.\n  tileAWidth ${l} must be divisible by workgroupSize[0]${t[0]}. tileInner ${r} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub : array<array<vec${d}<f32>, ${l/d}>, ${c}>;\nvar<workgroup> mm_Bsub : array<array<vec4<f32>, ${u/e[0]}>, ${r}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${d};\nconst tileInner = ${r};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = ${o?"0":"localRow * rowPerThread"};\n  let tileCol = i32(localId.x);\n\n  let globalRow = ${o?"0":"i32(globalId.y) * rowPerThread"};\n  let globalCol = i32(globalId.x);\n  let batch = ${i?"0":"i32(globalId.z)"};\n  let globalRowStart = i32(workgroupId.y) * ${s};\n\n  let numTiles = ${i?`${Math.ceil(a/r)}`:"(dimInner - 1) / tileInner + 1"};\n  var kStart = ${i?`i32(globalId.z) * ${a}`:"0"};\n\n  var acc: array<vec4<f32>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${p};\n  for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${f=n,f?"\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol);\n        ":"\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol);\n        "}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${p}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol);\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${3===d?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${((e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${3===t?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`)(n,d)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`;var f};const n=e=>e?"\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol);\n            ":"\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol);\n            ";t.makeMatMulPackedSource=(e,t,r=!1,i=32,a=!1,o=32,s=!1)=>{const u=e[1]*t[1],l=e[0]*t[0],c=r?u:i,d=r?i:u;if(d%t[1]!=0||c%t[0]!=0||i%t[1]!=0)throw new Error(`tileAHight ${d} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${t[0]}, tileInner ${i} must be divisible by workgroupSize[1]${t[1]}`);const p=d/t[1],f=c/t[0],h=i/t[1],g=s?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${u};\n    let globalColStart = i32(workgroupId.x) * ${l};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${d}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${t[0]}) {\n          ${n(r)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${i}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${l}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol);\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<f32, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${r?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${u};\n\nlet tileRowA = i32(localId.y) * ${p};\nlet tileColA = i32(localId.x) * ${f};\nlet tileRowB = i32(localId.y) * ${h};\n// Loop over shared dimension.\nfor (var t = 0; t < numTiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${p}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${f}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${n(r)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${h}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol);\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<f32, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${(e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];")(r)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<f32, ${c}>, ${d}>;\n  var<workgroup> mm_Bsub : array<array<f32, ${l}>, ${i}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${i};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${a?"0":"i32(globalId.z)"};\n    let numTiles = ${a?`${Math.ceil(o/i)}`:"(dimInner - 1) / tileInner + 1"};\n    var kStart = ${a?`i32(globalId.z) * ${o}`:"0"};\n\n    var acc : array<array<f32, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${g}\n  }\n`}},504:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sub=t.pow=t.mul=t.div=t.add=void 0;const r=n(952),i=n(163),a=n(75),o=(e,t,n,o,s)=>{const u={name:t,inputTypes:[i.GpuDataType.default,i.GpuDataType.default],cacheHint:s};return Object.assign(Object.assign({},u),{get:()=>((e,t,n,o,s,u=t.dataType)=>{var l,c;const d=!r.ShapeUtil.areEqual(t.dims,n.dims);let p=t.dims,f=r.ShapeUtil.size(t.dims),h=!1;if(d){const e=r.BroadcastUtil.calcShape(t.dims,n.dims,!1);if(!e)throw new Error("Can't perform binary op on the given tensors");p=e,f=r.ShapeUtil.size(p);let i=1;for(let e=0;e<p.length;e++){const r=null!==(l=t.dims[t.dims.length-e])&&void 0!==l?l:1;if(r!==(null!==(c=n.dims[n.dims.length-e])&&void 0!==c?c:1))break;i*=r}i%4==0&&(h=!0)}else h=!0;return Object.assign(Object.assign({},e),{getShaderSource:e=>((e,t,n,i,o,s,u,l,c="f32",d="f32",p="f32")=>{const f=r.ShapeUtil.size(i),h=Math.ceil(f/4);let g,m;"string"==typeof u?g=m=(e,t)=>`${u}((${e}),(${t}))`:"function"==typeof u?g=m=u:(g=u.scalar,m=u.vector);let y="";const w=(0,a.createIndicesHelper)("output",i);if(s){const e=e=>{const t=r.ShapeUtil.computeStrides(e),n=[];for(let r=e.length-1;r>=0;r--){const a=0===i.length?"0u":1===i.length?"(*outputIndices)":`(*outputIndices)[${r+i.length-e.length}]`;n.push(`${t[r]}u * (${a} % ${e[r]}u)`)}return n.length>0?n.join("+"):"0u"};y=`\n  ${w.o2iImpl}\n\n  fn calcOffsetA(outputIndices: ptr<function, ${w.iType}>) -> u32 {\n    return ${e(t)};\n  }\n\n  fn calcOffsetB(outputIndices: ptr<function, ${w.iType}>) -> u32 {\n    return ${e(n)};\n  }\n  `}let v;if(o)v=s?`\n      ${w.indicesVariableDeclaration("outputIndices")}\n      ${w.o2iCall("global_idx * 4u","outputIndices")}\n      let offsetA = calcOffsetA(&outputIndices);\n      let offsetB = calcOffsetB(&outputIndices);\n      outputData[global_idx] = ${m("aData[offsetA / 4u]","bData[offsetB / 4u]")};`:`outputData[global_idx] = ${m("aData[global_idx]","bData[global_idx]")};`;else{if(!s)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");const e=e=>{const t=`aData[indexA${e}][componentA${e}]`,n=`bData[indexB${e}][componentB${e}]`;return`\n      ${w.o2iCall(`global_idx * 4u + ${e}u`,"outputIndices")}\n      let offsetA${e} = calcOffsetA(&outputIndices);\n      let offsetB${e} = calcOffsetB(&outputIndices);\n      let indexA${e} = offsetA${e} / 4u;\n      let indexB${e} = offsetB${e} / 4u;\n      let componentA${e} = offsetA${e} % 4u;\n      let componentB${e} = offsetB${e} % 4u;\n      outputData[global_idx][${e}] = ${g(t,n)};`};v=`\n      ${w.indicesVariableDeclaration("outputIndices")}\n      ${e(0)}\n      ${e(1)}\n      ${e(2)}\n      ${e(3)}`}return`\n  @group(0) @binding(0) var<storage, read> aData : array<vec4<${c}>>;\n  @group(0) @binding(1) var<storage, read> bData : array<vec4<${d}>>;\n  @group(0) @binding(2) var<storage, read_write> outputData : array<vec4<${p}>>;\n\n  ${null!=l?l:""}\n  ${y}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(h)}\n    ${v}\n  }`})(e,t.dims,n.dims,p,h,d,o,s),outputs:[{dims:p,dataType:u,gpuDataType:i.GpuDataType.default}],dispatchGroup:()=>({x:Math.ceil(f/64/(h?4:1))})})})(u,e[0],e[1],n,o)})};t.add=e=>{e.compute(o(e.inputs,"Add",((e,t)=>`${e}+${t}`)))},t.div=e=>{e.compute(o(e.inputs,"Div",((e,t)=>`${e}/${t}`)))},t.mul=e=>{e.compute(o(e.inputs,"Mul",((e,t)=>`${e}*${t}`)))},t.pow=e=>{e.compute(o(e.inputs,"Pow",{scalar:(e,t)=>`pow_f32(${e},${t})`,vector:(e,t)=>`pow_vf32(${e},${t})`},"\n    fn pow_f32(a : f32, b : f32) -> f32 {\n      if (b == 0.0) {\n        return 1.0;\n      } else if (a < 0.0 && b != floor(b)) {\n        return pow(a, b); // NaN\n      }\n      return select(sign(a), 1.0, round(abs(b) % 2.0) != 1.0) * pow(abs(a), b);\n    }\n    fn pow_vf32(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {\n      // TODO: implement vectorized pow\n      return vec4<f32>(pow_f32(a.x, b.x), pow_f32(a.y, b.y), pow_f32(a.z, b.z), pow_f32(a.w, b.w));\n    }\n      "))},t.sub=e=>{e.compute(o(e.inputs,"Sub",((e,t)=>`${e}-${t}`)))}},75:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createShaderHelper=t.createIndicesHelper=t.WORKGROUP_SIZE=void 0;const r=n(952);t.WORKGROUP_SIZE=64,t.createIndicesHelper=(e,t)=>{const n=t.length<2?"u32":`array<u32, ${t.length}>`,i=r.ShapeUtil.computeStrides(t);let a="";for(let e=0;e<t.length-1;e++)a+=`\n    let dim${e} = current / ${i[e]}u;\n    let rest${e} = current % ${i[e]}u;\n    (*indices)[${e}] = dim${e};\n    current = rest${e};\n    `;a+=`(*indices)[${t.length-1}] = current;`;const o=t.length<2?"":`\n  fn ih_o2i_${e}(offset: u32, indices: ptr<function, ${n}>) {\n    var current = offset;\n    ${a}\n  }`,s=[];if(0===t.length)s.push("0u");else if(t.length<2)s.push("(*indices)");else for(let e=t.length-1;e>=0;e--)s.push(`${i[e]}u * ((*indices)[${e}])`);return{o2iImpl:o,o2iCall:(n,r)=>t.length<2?`${r}=${n};`:`ih_o2i_${e}(${n}, &${r});`,i2oImpl:t.length<2?"":`\n  fn ih_i2o_${e}(indices: ptr<function, ${n}>) -> u32 {\n    return ${s.join("+")};\n  }`,i2oExpression:(n,r)=>t.length<2?`(${r?"*":""}${n})`:`ih_i2o_${e}(${r?"":"&"}${n})`,indicesVariableDeclaration:(e,t)=>`var ${e}:${n}${t?`=${n}(${t.join(",")})`:""};`,iType:n}};class i{constructor(e){this.normalizedDispatchGroup=e}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${"number"==typeof e?`${e}u`:e}) { return; }`}mainStart(e=t.WORKGROUP_SIZE){const n="number"==typeof e?e:e[0],r="number"==typeof e?1:e[1],i="number"==typeof e?1:e[2],a=1===this.normalizedDispatchGroup[1]&&1===this.normalizedDispatchGroup[2];return`@compute @workgroup_size(${n}, ${r}, ${i})\n  fn main(${a?"@builtin(global_invocation_id) global_id : vec3<u32>":"@builtin(local_invocation_index) local_index : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>"}) {\n    ${a?"let global_idx = global_id.x;":`let global_idx = (workgroup_id.z * ${this.normalizedDispatchGroup[0]*this.normalizedDispatchGroup[1]}u +\n          workgroup_id.y * ${this.normalizedDispatchGroup[0]}u + workgroup_id.x) * ${n*r*i}u + local_index;`}\n  `}}t.createShaderHelper=e=>new i(e)},192:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createGroupedConvProgramInfoLoader=void 0;const r=n(952),i=n(163),a=n(75),o=n(770),s=n(997);t.createGroupedConvProgramInfoLoader=(e,t,n)=>{const u=(l=e.length>2,c=t.cacheKey,{name:"GroupedConv",inputTypes:l?[i.GpuDataType.default,i.GpuDataType.default,i.GpuDataType.default]:[i.GpuDataType.default,i.GpuDataType.default],cacheHint:c});var l,c;return Object.assign(Object.assign({},u),{get:()=>((e,t,n,u)=>{const l=e.length>2,c=l?"value += b[output_channel];":"",d=e[0].dims,p=e[1].dims,f=p[0]/n.group,h="f32",{activationFunction:g,applyActivation:m}=(0,s.getActicationSnippet)(n),y=[`@group(0) @binding(0) var<storage, read> x : array<${h}>;`,`@group(0) @binding(1) var<storage, read> w : array<${h}>;`];l&&y.push(`@group(0) @binding(2) var<storage, read> b : array<${h}>;`);const w="NHWC"===n.format,v=(0,o.calculateOutputShape)(d,p,n.dilations,n.pads,n.strides,w),b=r.ShapeUtil.size(v),$=(0,a.createIndicesHelper)("output",v),_=(0,a.createIndicesHelper)("x",d),C=(0,a.createIndicesHelper)("w",p);return Object.assign(Object.assign({},t),{outputs:[{dims:u?u(v):v,dataType:e[0].dataType,gpuDataType:i.GpuDataType.default}],getShaderSource:e=>`\n  const strides: vec2<u32> = vec2(${n.strides[0]}u, ${n.strides[1]}u);\n  const pads: vec2<u32> = vec2(${n.pads[0]}u, ${n.pads[1]}u);\n\n  ${y.join("\n")}\n  @group(0) @binding(${y.length}) var<storage, read_write> output : array<${h}>;\n\n  ${g}\n  ${$.o2iImpl}\n  ${_.i2oImpl}\n  ${C.i2oImpl}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(b)}\n\n    ${$.indicesVariableDeclaration("outputIndices")}\n    ${$.o2iCall("global_idx","outputIndices")}\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${w?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${w?1:2}], outputIndices[${w?2:3}]) * strides - pads;\n    let group_id: u32 = output_channel / ${f}u;\n\n    var value: ${h} = ${h}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < ${p[1]}u; wInChannel++) {\n      let input_channel = group_id * ${p[1]}u + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < ${p[2]}u; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * ${n.dilations[0]}u;\n\n        if (xHeight < 0u || xHeight >= ${d[w?1:2]}u) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < ${p[3]}u; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * ${n.dilations[1]}u;\n          if (xWidth < 0u || xWidth >= ${d[w?2:3]}u) {\n            continue;\n          }\n\n          ${_.indicesVariableDeclaration("xIndices",w?["batch","xHeight","xWidth","input_channel"]:["batch","input_channel","xHeight","xWidth"])}\n          let xVal = x[${_.i2oExpression("xIndices")}];\n          ${C.indicesVariableDeclaration("wIndices",["output_channel","wInChannel","wHeight","wWidth"])}\n          let wVal = w[${C.i2oExpression("wIndices")}];\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${c}\n    ${m}\n    output[global_idx] = value;\n  }`,dispatchGroup:()=>({x:Math.ceil(b/64)})})})(e,u,t,n)})}},770:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.conv=t.parseConvAttributes=t.calculateOutputShape=void 0;const r=n(952),i=n(387),a=n(192),o=n(822),s=n(997),u=n(625);t.calculateOutputShape=(e,t,n,r,i,a)=>{const o=e[0],s=e.slice(a?1:2,a?3:4),u=s.length,l=t[0],c=t.slice(2).map(((e,t)=>e+(e-1)*(n[t]-1))),d=s.map(((e,t)=>e+r[t]+r[t+u])).map(((e,t)=>Math.floor((e-c[t]+i[t])/i[t])));return d.splice(0,0,o),d.splice(a?3:1,0,l),d};const l=(0,i.createAttributeWithCacheKey)({perm:[2,3,1,0]}),c=(e,t)=>{const n=e.kernelShape.slice();for(let e=2;e<t[1].dims.length;++e)0===n[e-2]&&(n[e-2]=t[1].dims[e]);const i=e.pads.slice();r.PoolConvUtil.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,n,i,"NHWC"===e.format,e.autoPad);const a=Object.assign({},e);return Object.assign(a,{kernelShape:n,pads:i,cacheKey:e.cacheKey}),a};t.parseConvAttributes=e=>{const t=(0,s.parseInternalActivationAttributes)(e),n=e.format,r=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],a=e.dilations,o=e.group,u=e.kernel_shape,l=e.pads,c=e.strides,d=e.w_is_const();return(0,i.createAttributeWithCacheKey)(Object.assign({autoPad:r,format:n,dilations:a,group:o,kernelShape:u,pads:l,strides:c,wIsConst:d},t))},t.conv=(e,n)=>{((e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length&&3!==e[0].dims.length)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[1]*t.group)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(3===e.length&&(1!==e[2].dims.length||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");const n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==2*n)throw new Error(`pads should be ${2*n}D`);if(0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("Conv input(X,W) should be float tensor");if(3===e.length&&1!==e[2].dataType)throw new Error("Conv input(bias) should be float tensor")})(e.inputs,n),3===e.inputs[0].dims.length?((e,t)=>{const n="NHWC"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===e.inputs.length&&r.push(e.inputs[2]);const i=[0,t.pads[0],0,t.pads[1]],o=[1].concat(t.strides),s=[1].concat(t.dilations),u=[1].concat(t.kernelShape),l=c(Object.assign(Object.assign({},t),{pads:i,strides:o,dilations:s,kernelShape:u}),r);e.compute((0,a.createGroupedConvProgramInfoLoader)(r,l,(e=>n?[e[0],e[2],e[3]]:[])))})(e,n):((e,n,r)=>{var i;const s=c(r,n),d=3===n.length,p="NHWC"===r.format,f=n[0].dims[p?1:2],h=n[0].dims[p?2:3],g=n[0].dims[p?3:1],m=n[1].dims[2],y=n[1].dims[3],w=(0,t.calculateOutputShape)(n[0].dims,n[1].dims,r.dilations,s.pads,r.strides,p),v=w[p?1:2],b=w[p?2:3],$=w[p?3:1];if(p&&m===f&&y===h&&"VALID"===r.autoPad||1===m&&1===y&&1===r.dilations[0]&&1===r.dilations[1]&&1===r.strides[0]&&1===r.strides[1]&&("SAME_UPPER"===r.autoPad||"SAME_LOWER"===r.autoPad||"VALID"===r.autoPad))return void e.compute((0,a.createGroupedConvProgramInfoLoader)(n,s));if(!p||1!==r.group)return void e.compute((0,a.createGroupedConvProgramInfoLoader)(n,s));const _=p?v*b:$,C=p?$:v*b,S=m*y*g,A=null!==(i=e.customData.wT)&&void 0!==i?i:e.compute(Object.assign(Object.assign({},u.transposeProgramMetadata),{cacheHint:l.cacheKey,get:()=>(0,u.createTransposeProgramInfo)(n[1],l.perm)}),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.customData.wT&&(e.customData.wT=A);const E=[n[0],A];d&&(p||1!==n[2].dims.length?E.push(n[2]):E.push(n[2].reshape([n[2].dims[0],1,1]))),e.compute((0,o.createConv2DMatMulProgramInfoLoader)(E,s,w,_,C,S,d,!0),{inputs:E})})(e,e.inputs,n)}},822:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createConv2DMatMulProgramInfoLoader=void 0;const r=n(163),i=n(456);t.createConv2DMatMulProgramInfoLoader=(e,t,n,a,o,s,u,l)=>{const c=((e,t)=>({name:"Conv2DMatMul",inputTypes:e?[r.GpuDataType.default,r.GpuDataType.default,r.GpuDataType.default]:[r.GpuDataType.default,r.GpuDataType.default],cacheHint:t}))(u,t.cacheKey);return Object.assign(Object.assign({},c),{get:()=>(0,i.createConv2DMatMulProgramInfo)(e,c,t,n,a,o,s,u,l)})}},997:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseInternalActivationAttributes=t.getActicationSnippet=void 0;const r=n(952);t.getActicationSnippet=e=>{switch(e.activation){case"Relu":return{activationFunction:"",applyActivation:"value = max(value, 0.0);"};case"Sigmoid":return{activationFunction:"",applyActivation:"value = (1.0 / (1.0 + exp(-value)));"};case"Clip":return{activationFunction:`const clip_min_=f32(${e.clipMin});const clip_max_=f32(${e.clipMax});`,applyActivation:"value = clamp(value, clip_min_, clip_max_);"};default:return{activationFunction:"",applyActivation:""}}},t.parseInternalActivationAttributes=e=>{const t=(null==e?void 0:e.activation)||"";if("Clip"===t){const[n,i]=(null==e?void 0:e.activation_params)||[r.MIN_CLIP,r.MAX_CLIP];return{activation:t,clipMax:i,clipMin:n,activationCacheKey:`${t}:${n},${i}`}}return{activation:t,activationCacheKey:t}}},271:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseGemmAttributes=t.gemm=void 0;const r=n(952),i=n(387),a=n(163);t.gemm=(e,t)=>{(e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(3===e.length&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(1!==e[0].dataType||1!==e[1].dataType||3===e.length&&1!==e[2].dataType)throw new Error("Invalid input type.");if(e[0].dataType!==e[1].dataType||3===e.length&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")})(e.inputs),e.compute(((e,t)=>{const n={name:"Gemm",inputTypes:3===e.length?[a.GpuDataType.default,a.GpuDataType.default,a.GpuDataType.default]:[a.GpuDataType.default,a.GpuDataType.default],cacheHint:t.cacheKey};return Object.assign(Object.assign({},n),{get:()=>((e,t,n)=>{const i=t[0].dims.slice(),o=t[1].dims.slice(),[s,u,l]=r.GemmUtil.getShapeOfGemmResult(i,n.transA,o,n.transB,3===t.length?t[2].dims:void 0),c=[s,u];if(!c)throw new Error("Can't use gemm on the given tensors");const d=r.ShapeUtil.size(c);let p="";n.transA&&n.transB?p="value += a[k * M + m] * b[n * K + k];":n.transA&&!n.transB?p="value += a[k * M + m] * b[k * N + n];":!n.transA&&n.transB?p="value += a[m * K + k] * b[n * K + k];":n.transA||n.transB||(p="value += a[m * K + k] * b[k * N + n];");const f="f32",h=1===n.alpha?"":"value *= alpha;",g=3===t.length?`value += beta * c[${((e,t,n)=>{if(0===n.length)return"0u";const r=1===n.length&&1!==e||2===n.length&&n[0]!==e,i=n[n.length-1]!==t;let a="0u";return r||(a+=`+ m * ${n[n.length-1]}u`),i||(a+="+n"),a})(s,u,t[2].dims)}];`:"",m=[`@group(0) @binding(0) var<storage, read> a : array<${f}>;`,`@group(0) @binding(1) var<storage, read> b : array<${f}>;`];return 3===t.length&&m.push(`@group(0) @binding(2) var<storage, read> c : array<${f}>;`),Object.assign(Object.assign({},e),{outputs:[{dims:c,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>`\n  const M: u32 = ${s}u;\n  const N: u32 = ${u}u;\n  const K: u32 = ${l}u;\n  const alpha = ${f}(${n.alpha});\n  const beta = ${f}(${n.beta});\n\n  ${m.join("\n")}\n  @group(0) @binding(${t.length}) var<storage, read_write> output : array<${f}>;\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(d)}\n\n    let m = global_id.x / N;\n    let n = global_id.x % N;\n\n    var value = ${f}(0);\n    for (var k: u32 = 0u; k<${l}u; k++) {\n      ${p}\n    }\n\n    ${h}\n    ${g}\n    output[global_id.x] = value;\n\n  }`,dispatchGroup:()=>({x:Math.ceil(d/64)})})})(n,e,t)})})(e.inputs,t))},t.parseGemmAttributes=e=>(0,i.createAttributeWithCacheKey)(e)},522:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.matMul=t.createMatmulProgramInfoLoader=void 0;const r=n(952),i=n(163),a=n(997);t.createMatmulProgramInfoLoader=(e,t)=>{const n=(o=e.length>2,s=t.activationCacheKey,{name:"MatMul",inputTypes:o?[i.GpuDataType.default,i.GpuDataType.default,i.GpuDataType.default]:[i.GpuDataType.default,i.GpuDataType.default],cacheHint:s});var o,s;return Object.assign(Object.assign({},n),{get:()=>((e,t,n)=>{const o=t[0].dims,s=t[1].dims,u=r.BroadcastUtil.calcShape(o,s,!0);if(!u)throw new Error("Can't use matmul on the given tensors");const l=r.ShapeUtil.size(u),c="f32",{activationFunction:d,applyActivation:p}=(0,a.getActicationSnippet)(n),f=u[u.length-2],h=o[o.length-1],g=u[u.length-1];return Object.assign(Object.assign({},e),{outputs:[{dims:u,dataType:t[0].dataType,gpuDataType:i.GpuDataType.default}],getShaderSource:e=>`\n  const M: u32 = ${f}u;\n  const N: u32 = ${g}u;\n  const K: u32 = ${h}u;\n\n  @group(0) @binding(0) var<storage, read> a : array<${c}>;\n  @group(0) @binding(1) var<storage, read> b : array<${c}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${c}>;\n\n  ${d}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(l)}\n\n    let stack = global_idx / (M * N);\n    let mn = global_idx % (M * N);\n    let n = global_idx % N;\n    let m = mn / N;\n\n    let offsetA = stack * (M * K);\n    let offsetB = stack * (K * N);\n\n    var value = ${c}(0);\n    for (var k: u32 = 0u; k<${h}u; k++) {\n      value += a[offsetA + m * K + k] * b[offsetB + k * N + n];\n    }\n    ${p}\n    output[global_idx] = value;\n  }`,dispatchGroup:()=>({x:Math.ceil(l/64)})})})(n,e,t)})},t.matMul=e=>{(e=>{if(!e||2!==e.length)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("inputs should be float type")})(e.inputs),e.compute((0,t.createMatmulProgramInfoLoader)(e.inputs,{activation:"",activationCacheKey:""}))}},262:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.globalMaxPool=t.parseGlobalMaxPoolAttributes=t.parseMaxPoolAttributes=t.maxPool=t.globalAveragePool=t.parseGlobalAveragePoolAttributes=t.averagePool=t.parseAveragePoolAttributes=void 0;const r=n(952),i=n(387),a=n(163),o=n(75),s=e=>{if(!e||1!==e.length)throw new Error("Pool ops requires 1 input.");if(4!==e[0].dims.length)throw new Error("Pool ops supports 2-D inputs only for now.");if(1!==e[0].dataType)throw new Error("Invalid input type.")},u=(e,t,n)=>{const i="NHWC"===t.format,a=i?[e[0].dims[0],e[0].dims[3],e[0].dims[1],e[0].dims[2]]:e[0].dims.slice(),o=Object.hasOwnProperty.call(t,"dilations"),s=t.kernelShape.slice(),u=t.strides.slice(),l=o?t.dilations.slice():[],c=t.pads.slice();r.PoolConvUtil.adjustPoolAttributes(n,a,s,u,l,c);const d=r.PoolConvUtil.computePoolOutputShape(n,a,u,l,s,c,t.autoPad),p=Object.assign({},t);return o?Object.assign(p,{kernelShape:s,strides:u,pads:c,dilations:l,cacheKey:t.cacheKey}):Object.assign(p,{kernelShape:s,strides:u,pads:c,cacheKey:t.cacheKey}),[p,i?[d[0],d[2],d[3],d[1]]:d]},l=(e,t,n,i,a,s,u,l)=>{const c="NHWC"===i.format,d=t.length,p=r.ShapeUtil.size(n),f=(0,o.createIndicesHelper)("output",n),h=(0,o.createIndicesHelper)("x",t);if(i.kernelShape.length<=2){const n=i.kernelShape[i.kernelShape.length-1],r=i.strides[i.strides.length-1],o=i.pads[i.pads.length/2-1],g=d-(c?2:1);let m="",y="",w="";if(m=o+i.pads[i.pads.length-1]!==0?`\n              for (var i: u32 = 0u; i < ${n}u; i++) {\n                xIndices[${g}] = indices[${g}] * ${r} - ${o} + i;\n                if (xIndices[${g}] < 0 || xIndices[${g}] >= ${t[g]}) {\n                  pad++;\n                  continue;\n                }\n                let x_val = x[${h.i2oExpression("xIndices")}];\n                ${a}\n              }`:`\n              for (var i: u32 = 0u; i < ${n}u; i++) {\n                xIndices[${g}] = indices[${g}] * ${r} - ${o} + i;\n                let x_val = x[${h.i2oExpression("xIndices")}];\n                ${a}\n              }`,2===i.kernelShape.length){const e=i.kernelShape[i.kernelShape.length-2],r=i.strides[i.strides.length-2],a=i.pads[i.pads.length/2-2],o=i.pads[i.pads.length-2],s=d-(c?3:2),u=t[s];y=a+o!==0?`\n                for (var j: u32 = 0u; j < ${e}u; j++) {\n                  xIndices[${s}] = indices[${s}] * ${r} - ${a} + j;\n                  if (xIndices[${s}] < 0 || xIndices[${s}] >= ${u}) {\n                    pad+= ${n};\n                    continue;\n                  }\n              `:`\n                for (var j: u32 = 0u; j < ${e}u; j++) {\n                  xIndices[${s}] = indices[${s}] * ${r} - ${a} + j;\n                `,w="\n              }\n            "}return`\n            @group(0) @binding(0) var<storage, read> x : array<${u}>;\n            @group(0) @binding(1) var<storage, read_write> output : array<${u}>;\n\n            ${f.o2iImpl}\n            ${h.i2oImpl}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(p)}\n\n              ${f.indicesVariableDeclaration("indices")}\n              ${f.o2iCall("global_idx","indices")}\n              ${f.indicesVariableDeclaration("xIndices")}\n              ${f.o2iCall("global_idx","xIndices")}\n\n              var value: ${u} = ${u}(${l});\n              var pad = 0;\n              ${y}\n              ${m}\n              ${w}\n              ${s}\n\n              output[global_idx] = value;\n            }`}{if(c)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");const n=r.ShapeUtil.size(i.kernelShape),o=r.ShapeUtil.computeStrides(i.kernelShape),g=o.length,m=i.pads.length;let y="";return y=i.pads.reduce(((e,t)=>e+t))?`\n                if (xIndices[j] >= inputDims[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${h.i2oExpression("xIndices")}];\n                ${a}\n              }`:`\n              }\n              let x_val = x[${h.i2oExpression("xIndices")}];\n              ${a}\n            `,`\n            @group(0) @binding(0) var<storage, read> x : array<${u}>;\n            @group(0) @binding(1) var<storage, read_write> output : array<${u}>;\n\n            ${f.o2iImpl}\n            ${h.i2oImpl}\n\n            const pads = array<u32, ${m}>(${i.pads.map((e=>`${e}u`)).join(",")});\n            const inputDims = array<u32, ${d}>(${t.map((e=>`${e}u`)).join(",")});\n            const kernelStrides = array<u32, ${g}>(${o.map((e=>`${e}u`)).join(",")});\n            const strides = array<u32, ${g}>(${i.strides.map((e=>`${e}u`)).join(",")});\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(p)}\n\n              ${f.indicesVariableDeclaration("indices")}\n              ${f.o2iCall("global_idx","indices")}\n              ${f.indicesVariableDeclaration("xIndices")}\n              ${f.o2iCall("global_idx","xIndices")}\n\n              var offsets: array<u32, ${g}>;\n\n              var value = ${u}(${l});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < ${n}u; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${g-1}u; j++) {\n                  offsets[j] = offset / kernelStrides[j];\n                  offset -= offsets[j] * kernelStrides[j];\n                }\n                offsets[${g-1}] = offset;\n\n                isPad = false;\n                for (var j = ${d-g}u; j < ${d}u; j++) {\n                  xIndices[j] = indices[j] * strides[j - ${d-g}u]\n                    + offsets[j - ${d-g}u] - pads[j - 2u];\n                  ${y}\n              }\n              ${s}\n\n              output[global_idx] = value;\n            }`}},c=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),d=(e,t,n,i)=>{const[o,s]=u(e,i,n),c=r.ShapeUtil.size(o.kernelShape),d="f32";let p="";return o.countIncludePad?p+=`value /= ${d}(${c});`:p+=`value /= ${d}(${c} - pad);`,Object.assign(Object.assign({},t),{outputs:[{dims:s,dataType:e[0].dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:t=>l(t,e[0].dims,s,o,"value += x_val;",p,d,"0.0"),dispatchGroup:()=>({x:Math.ceil(r.ShapeUtil.size(s)/64)})})};t.parseAveragePoolAttributes=e=>{const t=0!==e.count_include_pad,n=c(e);if(0!==n.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return(0,i.createAttributeWithCacheKey)(Object.assign({countIncludePad:t},n))},t.averagePool=(e,t)=>{s(e.inputs);const n={name:"AveragePool",inputTypes:[a.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>d(e.inputs,n,!1,t)}))};const p={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""};t.parseGlobalAveragePoolAttributes=e=>{const t=e.format;return Object.assign(Object.assign({format:t},p),{cacheKey:t})},t.globalAveragePool=(e,t)=>{s(e.inputs);const n={name:"GlobalAveragePool",inputTypes:[a.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>d(e.inputs,n,!0,t)}))};const f=(e,t,n,i)=>{const[o,s]=u(e,i,n);return Object.assign(Object.assign({},t),{outputs:[{dims:s,dataType:e[0].dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:t=>l(t,e[0].dims,s,o,"\n      value = max(x_val, value);\n    ","","f32","-1e5"),dispatchGroup:()=>({x:Math.ceil(r.ShapeUtil.size(s)/64)})})};t.maxPool=(e,t)=>{s(e.inputs);const n={name:"MaxPool",inputTypes:[a.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>f(e.inputs,n,!1,t)}))},t.parseMaxPoolAttributes=e=>{const t=e.storage_order,n=e.dilations,r=c(e);if(0!==t)throw new Error("column major storage order is not yet supported for MaxPool");if(0!==r.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return(0,i.createAttributeWithCacheKey)(Object.assign({storageOrder:t,dilations:n},r))},t.parseGlobalMaxPoolAttributes=e=>{const t=e.format;return Object.assign(Object.assign({format:t},p),{cacheKey:t})},t.globalMaxPool=(e,t)=>{s(e.inputs);const n={name:"GlobalMaxPool",inputTypes:[a.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>f(e.inputs,n,!0,t)}))}},625:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseTransposeAttributes=t.transpose=t.createTransposeProgramInfo=t.transposeProgramMetadata=void 0;const r=n(952),i=n(387),a=n(163),o=n(75);t.transposeProgramMetadata={name:"Transpose",inputTypes:[a.GpuDataType.default]};const s=(e,t)=>t&&t.length!==e.length?[...e.keys()].reverse():t;t.createTransposeProgramInfo=(e,n)=>{const i=e.dims,u=s(i,n),l=((e,t)=>r.ShapeUtil.sortBasedOnPerm(e,s(e,t)))(i,u),c=i.length,d=r.ShapeUtil.size(l),p=(0,o.createIndicesHelper)("output",l),f=(0,o.createIndicesHelper)("a",i);return Object.assign(Object.assign({},t.transposeProgramMetadata),{outputs:[{dims:l,dataType:e.dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>`\n  @group(0) @binding(0) var<storage, read> a : array<f32>;\n  @group(0) @binding(1) var<storage, read_write> output : array<f32>;\n\n  ${((e,t)=>{const n=[];n.push(`fn perm(a: ptr<function, array<u32, ${t}>>, i: ptr<function, array<u32, ${t}>>) {`);for(let r=0;r<t;++r)n.push(`\t(*a)[${e[r]}]=(*i)[${r}];`);return n.push("\t}"),n.join("\n")})(u,c)}\n  ${p.o2iImpl}\n  ${f.i2oImpl}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(d)}\n\n    ${p.indicesVariableDeclaration("indices")}\n    ${p.o2iCall("global_idx","indices")}\n    ${f.indicesVariableDeclaration("aIndices")}\n    perm(&aIndices, &indices);\n\n    output[global_idx] = a[${f.i2oExpression("aIndices")}];\n  }`,dispatchGroup:()=>({x:Math.ceil(d/64)})})},t.transpose=(e,n)=>{(e=>{if(!e||1!==e.length)throw new Error("Transpose requires 1 input.");if(1!==e[0].dataType)throw new Error("input should be float tensor")})(e.inputs),e.compute(Object.assign(Object.assign({},t.transposeProgramMetadata),{cacheHint:n.cacheKey,get:()=>(0,t.createTransposeProgramInfo)(e.inputs[0],n.perm)}))},t.parseTransposeAttributes=e=>(0,i.createAttributeWithCacheKey)({perm:e.perm})},302:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.thresholdedRelu=t.tanh=t.tan=t.sqrt=t.sinh=t.sin=t.sigmoid=t.relu=t.reciprocal=t.neg=t.leakyRelu=t.floor=t.exp=t.erf=t.elu=t.parseAlphaAttributes=t.cosh=t.cos=t.ceil=t.clip=t.clipV10=t.atanh=t.atan=t.asinh=t.asin=t.acosh=t.acos=t.abs=void 0;const r=n(952),i=n(387),a=n(163),o=(e,t,n,i,o)=>{const s={name:t,inputTypes:[a.GpuDataType.default],cacheHint:o};return Object.assign(Object.assign({},s),{get:()=>((e,t,n,i)=>Object.assign(Object.assign({},e),{getShaderSource:e=>((e,t,n,r)=>{const i=Math.ceil(t/4);let a="";return a="string"==typeof n?`${n}(a)`:n("a"),`\n  @group(0) @binding(0) var<storage, read> inputData : array<vec4<f32>>;\n  @group(0) @binding(1) var<storage, read_write> outputData : array<vec4<f32>>;\n\n  ${null!=r?r:""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(i)}\n\n    let a = inputData[global_idx];\n    outputData[global_idx] = ${a};\n  }`})(e,r.ShapeUtil.size(t.dims),n,i),outputs:[{dims:t.dims,dataType:t.dataType,gpuDataType:a.GpuDataType.default}],dispatchGroup:e=>({x:Math.ceil(r.ShapeUtil.size(e[0].dims)/64/4)})}))(s,e,n,i)})};t.abs=e=>{e.compute(o(e.inputs[0],"Abs","abs"))},t.acos=e=>{e.compute(o(e.inputs[0],"Acos","acos"))},t.acosh=e=>{e.compute(o(e.inputs[0],"Acosh","acosh"))},t.asin=e=>{e.compute(o(e.inputs[0],"Asin","asin"))},t.asinh=e=>{e.compute(o(e.inputs[0],"Asinh","asinh"))},t.atan=e=>{e.compute(o(e.inputs[0],"Atan","atan"))},t.atanh=e=>{e.compute(o(e.inputs[0],"Atanh","atanh"))},t.clipV10=(e,t)=>{e.compute(o(e.inputs[0],"Clip",(e=>`clamp(${e}, clip_min_, clip_max_)`),`\n    const clip_min_: vec4<f32> = vec4(f32(${t.min}));\n    const clip_max_: vec4<f32> = vec4(f32(${t.max}));\n`,t.cacheKey),{inputs:[0]})},t.clip=e=>{const n=(e=>{const t=e.length>=2?e[1].getFloat32Array()[0]:r.MIN_CLIP,n=e.length>=3?e[2].getFloat32Array()[0]:r.MAX_CLIP;return(0,i.createAttributeWithCacheKey)({min:t,max:n})})(e.inputs);(0,t.clipV10)(e,n)},t.ceil=e=>{e.compute(o(e.inputs[0],"Ceil","ceil"))},t.cos=e=>{e.compute(o(e.inputs[0],"Cos","cos"))},t.cosh=e=>{e.compute(o(e.inputs[0],"Cosh","cosh"))},t.parseAlphaAttributes=e=>(0,i.createAttributeWithCacheKey)(e),t.elu=(e,t)=>{e.compute(o(e.inputs[0],"Elu",(e=>`elu_vf32(${e})`),`\n  const elu_alpha_: f32 = f32(${t.alpha});\n\n  fn elu_f32(a: f32) -> f32 {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},t.erf=e=>{e.compute(o(e.inputs[0],"Erf",(e=>`erf_vf32(${e})`),"\n  const r0: f32 = 0.3275911;\n  const r1: f32 = 0.254829592;\n  const r2: f32 = -0.284496736;\n  const r3: f32 = 1.421413741;\n  const r4: f32 = -1.453152027;\n  const r5: f32 = 1.061405429;\n\n  fn erf_vf32(v: vec4<f32>) -> vec4<f32> {\n    let absv = abs(v);\n    let x = 1.0 / (1.0 + r0 * absv);\n    return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n  }"))},t.exp=e=>{e.compute(o(e.inputs[0],"Exp","exp"))},t.floor=e=>{e.compute(o(e.inputs[0],"Floor","floor"))},t.leakyRelu=(e,t)=>{e.compute(o(e.inputs[0],"LeakyRelu",(e=>`select(leaky_relu_alpha_ * ${e}, ${e}, ${e} >= vec4<f32>(0.0))`),`const leaky_relu_alpha_: f32 = f32(${t.alpha});`,t.cacheKey))},t.neg=e=>{e.compute(o(e.inputs[0],"Neg",(e=>`-${e}`)))},t.reciprocal=e=>{e.compute(o(e.inputs[0],"Reciprocal",(e=>`1.0/${e}`)))},t.relu=e=>{e.compute(o(e.inputs[0],"Relu",(e=>`select(vec4<f32>(0.0), ${e}, ${e} > vec4<f32>(0.0))`)))},t.sigmoid=e=>{e.compute(o(e.inputs[0],"Sigmoid",(e=>`(1.0 / (1.0 + exp(-${e})))`)))},t.sin=e=>{e.compute(o(e.inputs[0],"Sin","sin"))},t.sinh=e=>{e.compute(o(e.inputs[0],"Sinh","sinh"))},t.sqrt=e=>{e.compute(o(e.inputs[0],"Sqrt","sqrt"))},t.tan=e=>{e.compute(o(e.inputs[0],"Tan","tan"))},t.tanh=e=>{e.compute(o(e.inputs[0],"Tanh","tanh"))},t.thresholdedRelu=(e,t)=>(e.compute(o(e.inputs[0],"ThresholdedRelu",(e=>`select(vec4<f32>(0.0), ${e}, ${e} > thresholded_relu_alpha_)`),`const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${t.alpha});`,t.cacheKey)),0)},305:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ProgramManager=void 0;const r=n(955),i=n(75);t.ProgramManager=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,n,r){const i=this.backend.device,a=this.backend.getComputePassEncoder();this.backend.profilingEnabled&&a.writeTimestamp(this.backend.profilingQuerySet,0),a.setPipeline(e.computePipeline);const o=[];for(const e of t)o.push({binding:o.length,resource:{buffer:e.buffer}});for(const e of n)o.push({binding:o.length,resource:{buffer:e.buffer}});const s=i.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:o});if(a.setBindGroup(0,s),a.dispatchWorkgroups(...r),this.backend.pendingDispatchNumber++,this.backend.profilingEnabled){a.writeTimestamp(this.backend.profilingQuerySet,1);const e=this.backend.gpuDataManager.create(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),t=this.backend.gpuDataManager.create(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.backend.endComputePass(),this.backend.getCommandEncoder().resolveQuerySet(this.backend.profilingQuerySet,0,2,e.buffer,0),this.backend.getCommandEncoder().copyBufferToBuffer(e.buffer,0,t.buffer,0,16),this.backend.flush();const n=this.backend.currentKernelId,r=this.backend.kernels.get(n)[0];t.buffer.mapAsync(GPUMapMode.READ).then((()=>{const i=new BigUint64Array(t.buffer.getMappedRange()),a=i[0],o=i[1];t.buffer.unmap(),void 0===this.backend.profilingTimeBase&&(this.backend.profilingTimeBase=a);const s=Number(a-this.backend.profilingTimeBase),u=Number(o-this.backend.profilingTimeBase);if(!Number.isSafeInteger(s)||!Number.isSafeInteger(u))throw new RangeError("incorrect timestamp range");this.backend.gpuDataManager.release(e.id),this.backend.gpuDataManager.release(t.id),console.log(`[profiling] kernel "${n}|${r}" execution time: ${u-s} ns`)}))}this.backend.pendingDispatchNumber>=16&&this.backend.flush()}dispose(){}build(e,t){const n=this.backend.device,a=e.getShaderSource((0,i.createShaderHelper)(t)),o=n.createShaderModule({code:a});return(0,r.LOG_DEBUG)("verbose",(()=>`[WebGPU] shader code: ${a}`)),{programInfo:e,computePipeline:n.createComputePipeline({compute:{module:o,entryPoint:"main"},layout:"auto"})}}normalizeDispatchGroupSize(e){const t="number"==typeof e?e:e.x,n="number"==typeof e?1:e.y||1,r="number"==typeof e?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=i&&n<=i&&r<=i)return[t,n,r];const a=t*n*r;let o=Math.ceil(Math.sqrt(a));if(o>i){if(o=Math.ceil(Math.cbrt(a)),o>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[o,o,o]}return[o,o,1]}}},163:(e,t)=>{"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),t.GpuDataType=void 0,(n=t.GpuDataType||(t.GpuDataType={}))[n.default=0]="default",n[n.upload=1]="upload",n[n.profile=2]="profile"},899:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.iterateExtraOptions=void 0,t.iterateExtraOptions=(e,n,r,i)=>{if("object"==typeof e&&null!==e){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach((([e,a])=>{const o=n?n+e:e;if("object"==typeof a)(0,t.iterateExtraOptions)(a,o+".",r,i);else if("string"==typeof a||"number"==typeof a)i(o,a.toString());else{if("boolean"!=typeof a)throw new Error("Can't handle extra config type: "+typeof a);i(o,a?"1":"0")}}))}},544:function(e,t,n){"use strict";var r,i=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(t,n);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,i)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&i(t,e,n);return a(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.endProfiling=t.run=t.releaseSession=t.createSession=t.createSessionFinalize=t.createSessionAllocate=t.initOrt=t.initWasm=void 0;const s=n(453),u=n(675),l=o(n(259)),c=n(263);"undefined"!=typeof document&&(null===(r=null===document||void 0===document?void 0:document.currentScript)||void 0===r||r.src),t.initWasm=async()=>(0,c.initializeWebAssembly)(s.env.wasm),t.initOrt=async(e,t)=>{l.initOrt(e,t),await(0,u.init)((0,c.getInstance)())},t.createSessionAllocate=async e=>l.createSessionAllocate(e),t.createSessionFinalize=async(e,t)=>l.createSessionFinalize(e,t),t.createSession=async(e,t)=>l.createSession(e,t),t.releaseSession=async e=>{l.releaseSession(e)},t.run=async(e,t,n,r,i)=>l.run(e,t,n,r,i),t.endProfiling=async e=>{l.endProfiling(e)}},918:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setRunOptions=void 0;const r=n(899),i=n(444),a=n(263);t.setRunOptions=e=>{const t=(0,a.getInstance)();let n=0;const o=[],s=e||{};try{if(void 0===(null==e?void 0:e.logSeverityLevel))s.logSeverityLevel=2;else if("number"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===(null==e?void 0:e.logVerbosityLevel))s.logVerbosityLevel=0;else if("number"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);void 0===(null==e?void 0:e.terminate)&&(s.terminate=!1);let a=0;if(void 0!==(null==e?void 0:e.tag)&&(a=(0,i.allocWasmString)(e.tag,o)),n=t._OrtCreateRunOptions(s.logSeverityLevel,s.logVerbosityLevel,!!s.terminate,a),0===n)throw new Error("Can't create run options");return void 0!==(null==e?void 0:e.extra)&&(0,r.iterateExtraOptions)(e.extra,"",new WeakSet,((e,r)=>{const a=(0,i.allocWasmString)(e,o),s=(0,i.allocWasmString)(r,o);if(0!==t._OrtAddRunConfigEntry(n,a,s))throw new Error(`Can't set a run config entry: ${e} - ${r}`)})),[n,o]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),o.forEach(t._free),e}}},640:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.OnnxruntimeWebAssemblySessionHandler=void 0;const r=n(806),i=n(453),a=n(850),o=n(544),s=n(917);let u;t.OnnxruntimeWebAssemblySessionHandler=class{async createSessionAllocate(e){const t=await fetch(e),n=await t.arrayBuffer();return(0,o.createSessionAllocate)(new Uint8Array(n))}async loadModel(e,t){if(u||(await(0,o.initOrt)(i.env.wasm.numThreads,(0,s.logLevelStringToEnum)(i.env.logLevel)),u=!0),"string"==typeof e)if("undefined"==typeof fetch){const n=await(0,a.promisify)(r.readFile)(e);[this.sessionId,this.inputNames,this.outputNames]=await(0,o.createSession)(n,t)}else{const n=await this.createSessionAllocate(e);[this.sessionId,this.inputNames,this.outputNames]=await(0,o.createSessionFinalize)(n,t)}else[this.sessionId,this.inputNames,this.outputNames]=await(0,o.createSession)(e,t)}async dispose(){return(0,o.releaseSession)(this.sessionId)}async run(e,t,n){const r=[],a=[];Object.entries(e).forEach((e=>{const t=e[0],n=e[1],i=this.inputNames.indexOf(t);if(-1===i)throw new Error(`invalid input '${t}'`);r.push(n),a.push(i)}));const s=[];Object.entries(t).forEach((e=>{const t=e[0],n=this.outputNames.indexOf(t);if(-1===n)throw new Error(`invalid output '${t}'`);s.push(n)}));const u=await(0,o.run)(this.sessionId,a,r.map((e=>[e.type,e.dims,e.data])),s,n),l={};for(let e=0;e<u.length;e++)l[this.outputNames[s[e]]]=new i.Tensor(u[e][0],u[e][2],u[e][1]);return l}startProfiling(){}endProfiling(){(0,o.endProfiling)(this.sessionId)}}},622:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setSessionOptions=void 0;const r=n(899),i=n(444),a=n(263);t.setSessionOptions=e=>{var t,n,o,s;const u=(0,a.getInstance)();let l=0;const c=[],d=e||{};(e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});const t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some((e=>"webgpu"===("string"==typeof e?e:e.name)))&&(e.enableMemPattern=!1)})(d);try{const e=(e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}})(null!==(t=d.graphOptimizationLevel)&&void 0!==t?t:"all"),p=(e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}})(null!==(n=d.executionMode)&&void 0!==n?n:"sequential"),f="string"==typeof d.logId?(0,i.allocWasmString)(d.logId,c):0,h=null!==(o=d.logSeverityLevel)&&void 0!==o?o:2;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log serverity level is not valid: ${h}`);const g=null!==(s=d.logVerbosityLevel)&&void 0!==s?s:0;if(!Number.isInteger(g)||g<0||g>4)throw new Error(`log verbosity level is not valid: ${g}`);const m="string"==typeof d.optimizedModelFilePath?(0,i.allocWasmString)(d.optimizedModelFilePath,c):0;if(l=u._OrtCreateSessionOptions(e,!!d.enableCpuMemArena,!!d.enableMemPattern,p,!!d.enableProfiling,0,f,h,g,m),0===l)throw new Error("Can't create session options");return d.executionProviders&&((e,t,n)=>{for(const r of t){let t="string"==typeof r?r:r.name;switch(t){case"xnnpack":t="XNNPACK";break;case"webgpu":t="JS";break;case"wasm":case"cpu":continue;default:throw new Error(`not supported EP: ${t}`)}const o=(0,i.allocWasmString)(t,n);if(0!==(0,a.getInstance)()._OrtAppendExecutionProvider(e,o))throw new Error(`Can't append execution provider: ${t}`)}})(l,d.executionProviders,c),void 0!==d.extra&&(0,r.iterateExtraOptions)(d.extra,"",new WeakSet,((e,t)=>{const n=(0,i.allocWasmString)(e,c),r=(0,i.allocWasmString)(t,c);if(0!==u._OrtAddSessionConfigEntry(l,n,r))throw new Error(`Can't set a session config entry: ${e} - ${t}`)})),[l,c]}catch(e){throw 0!==l&&u._OrtReleaseSessionOptions(l),c.forEach(u._free),e}}},444:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.allocWasmString=void 0;const r=n(263);t.allocWasmString=(e,t)=>{const n=(0,r.getInstance)(),i=n.lengthBytesUTF8(e)+1,a=n._malloc(i);return n.stringToUTF8(e,a,i),t.push(a),a}},917:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.logLevelStringToEnum=t.tensorTypeToTypedArrayConstructor=t.getTensorElementSize=t.tensorDataTypeEnumToString=t.tensorDataTypeStringToEnum=void 0,t.tensorDataTypeStringToEnum=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},t.tensorDataTypeEnumToString=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},t.getTensorElementSize=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],t.tensorTypeToTypedArrayConstructor=e=>{switch(e){case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},t.logLevelStringToEnum=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}}},259:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.extractTransferableBuffers=t.endProfiling=t.run=t.releaseSession=t.createSession=t.createSessionFinalize=t.createSessionAllocate=t.initOrt=void 0;const r=n(918),i=n(622),a=n(444),o=n(917),s=n(263);t.initOrt=(e,t)=>{const n=(0,s.getInstance)()._OrtInit(e,t);if(0!==n)throw new Error(`Can't initialize onnxruntime. error code = ${n}`)};const u=new Map;t.createSessionAllocate=e=>{const t=(0,s.getInstance)(),n=t._malloc(e.byteLength);return t.HEAPU8.set(e,n),[n,e.byteLength]},t.createSessionFinalize=(e,t)=>{const n=(0,s.getInstance)();let r=0,a=0,o=[];try{if([a,o]=(0,i.setSessionOptions)(t),r=n._OrtCreateSession(e[0],e[1],a),0===r)throw new Error("Can't create a session")}finally{n._free(e[0]),0!==a&&n._OrtReleaseSessionOptions(a),o.forEach(n._free)}const l=n._OrtGetInputCount(r),c=n._OrtGetOutputCount(r),d=[],p=[],f=[],h=[];for(let e=0;e<l;e++){const t=n._OrtGetInputName(r,e);if(0===t)throw new Error("Can't get an input name");p.push(t),d.push(n.UTF8ToString(t))}for(let e=0;e<c;e++){const t=n._OrtGetOutputName(r,e);if(0===t)throw new Error("Can't get an output name");h.push(t),f.push(n.UTF8ToString(t))}return u.set(r,[r,p,h]),[r,d,f]},t.createSession=(e,n)=>{const r=(0,t.createSessionAllocate)(e);return(0,t.createSessionFinalize)(r,n)},t.releaseSession=e=>{const t=(0,s.getInstance)(),n=u.get(e);if(!n)throw new Error("invalid session id");const r=n[0],i=n[1],a=n[2];i.forEach(t._OrtFree),a.forEach(t._OrtFree),t._OrtReleaseSession(r),u.delete(e)},t.run=async(e,t,n,i,l)=>{const c=(0,s.getInstance)(),d=u.get(e);if(!d)throw new Error("invalid session id");const p=d[0],f=d[1],h=d[2],g=t.length,m=i.length;let y=0,w=[];const v=[],b=[];try{[y,w]=(0,r.setRunOptions)(l);for(let e=0;e<g;e++){const t=n[e][0],r=n[e][1],i=n[e][2];let s,u;if(Array.isArray(i)){u=4*i.length,s=c._malloc(u),b.push(s);let e=s/4;for(let t=0;t<i.length;t++){if("string"!=typeof i[t])throw new TypeError(`tensor data at index ${t} is not a string`);c.HEAPU32[e++]=(0,a.allocWasmString)(i[t],b)}}else u=i.byteLength,s=c._malloc(u),b.push(s),c.HEAPU8.set(new Uint8Array(i.buffer,i.byteOffset,u),s);const l=c.stackSave(),d=c.stackAlloc(4*r.length);try{let e=d/4;r.forEach((t=>c.HEAP32[e++]=t));const n=c._OrtCreateTensor((0,o.tensorDataTypeStringToEnum)(t),s,u,d,r.length);if(0===n)throw new Error("Can't create a tensor");v.push(n)}finally{c.stackRestore(l)}}const e=c.stackSave(),s=c.stackAlloc(4*g),u=c.stackAlloc(4*g),d=c.stackAlloc(4*m),$=c.stackAlloc(4*m);try{let e=s/4,n=u/4,r=d/4,a=$/4;for(let r=0;r<g;r++)c.HEAPU32[e++]=v[r],c.HEAPU32[n++]=f[t[r]];for(let e=0;e<m;e++)c.HEAPU32[r++]=0,c.HEAPU32[a++]=h[i[e]];let l=c._OrtRun(p,u,s,g,$,m,d,y);const w=c.jsepRunPromise;w&&void 0!==w.then&&(l=await w);const b=[];if(0===l)for(let e=0;e<m;e++){const t=c.HEAPU32[d/4+e],n=c.stackSave(),r=c.stackAlloc(16);let i,a=0;try{if(l=c._OrtGetTensorData(t,r,r+4,r+8,r+12),0!==l)throw new Error(`Can't access output tensor data. error code = ${l}`);let e=r/4;const n=c.HEAPU32[e++];a=c.HEAPU32[e++];const s=c.HEAPU32[e++],u=c.HEAPU32[e++],d=[];for(let e=0;e<u;e++)d.push(c.HEAPU32[s/4+e]);c._OrtFree(s);const p=0===d.length?1:d.reduce(((e,t)=>e*t));if(i=(0,o.tensorDataTypeEnumToString)(n),"string"===i){const e=[];let t=a/4;for(let n=0;n<p;n++){const r=c.HEAPU32[t++],i=n===p-1?void 0:c.HEAPU32[t]-r;e.push(c.UTF8ToString(r,i))}b.push([i,d,e])}else{const e=new((0,o.tensorTypeToTypedArrayConstructor)(i))(p);new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(c.HEAPU8.subarray(a,a+e.byteLength)),b.push([i,d,e])}}finally{c.stackRestore(n),"string"===i&&a&&c._free(a),c._OrtReleaseTensor(t)}}if(0===l)return b;throw new Error(`failed to call OrtRun(). error code = ${l}.`)}finally{c.stackRestore(e)}}finally{v.forEach(c._OrtReleaseTensor),b.forEach(c._free),c._OrtReleaseRunOptions(y),w.forEach(c._free)}},t.endProfiling=e=>{const t=(0,s.getInstance)(),n=u.get(e);if(!n)throw new Error("invalid session id");const r=n[0],i=t._OrtEndProfiling(r);if(0===i)throw new Error("Can't get an profile file name");t._OrtFree(i)},t.extractTransferableBuffers=e=>{const t=[];for(const n of e){const e=n[2];!Array.isArray(e)&&e.buffer&&t.push(e.buffer)}return t}},263:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(t,n);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,i)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.dispose=t.getInstance=t.initializeWebAssembly=void 0,a(n(449));const o=n(932),s=o;let u,l=!1,c=!1,d=!1;t.initializeWebAssembly=async e=>{if(l)return Promise.resolve();if(c)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(d)throw new Error("previous call to 'initializeWebAssembly()' failed.");c=!0;const t=e.initTimeout,n=e.numThreads,r=e.simd,i=n>1&&(()=>{try{return"undefined"!=typeof SharedArrayBuffer&&("undefined"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(e){return!1}})(),a=r&&(()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch(e){return!1}})(),p=e.wasmPaths,f="string"==typeof p?p:void 0,h=((e,t)=>t?e?"ort-wasm-simd-threaded.wasm":"ort-wasm-threaded.wasm":e?"ort-wasm-simd.wasm":"ort-wasm.wasm")(a,i),g="object"==typeof p?p[h]:void 0;let m=!1;const y=[];if(t>0&&y.push(new Promise((e=>{setTimeout((()=>{m=!0,e()}),t)}))),y.push(new Promise(((e,t)=>{(i?s:o)({locateFile:(e,t)=>e.endsWith(".wasm")?g||(null!=f?f:t)+h:t+e}).then((t=>{c=!1,l=!0,u=t,e()}),(e=>{c=!1,d=!0,t(e)}))}))),await Promise.race(y),m)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},t.getInstance=()=>{if(l&&u)return u;throw new Error("WebAssembly is not initialized yet.")},t.dispose=()=>{var e;!l||c||d||(c=!0,null===(e=u.PThread)||void 0===e||e.terminateAllThreads(),u=void 0,c=!1,l=!1,d=!0)}},932:(e,t,n)=>{var _scriptDir,r=(_scriptDir=(_scriptDir="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(e){var t,r,i;e=e||{},t||(t=void 0!==e?e:{}),t.ready=new Promise((function(e,t){r=e,i=t}));var a,o,s,u,l,c,d=Object.assign({},t),p="./this.program",f="object"==typeof window,h="function"==typeof importScripts,g="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,m="";g?(m=h?n(908).dirname(m)+"/":"//",c=()=>{l||(u=n(384),l=n(908))},a=function(e,t){return c(),e=l.normalize(e),u.readFileSync(e,t?void 0:"utf8")},s=e=>((e=a(e,!0)).buffer||(e=new Uint8Array(e)),e),o=(e,t,n)=>{c(),e=l.normalize(e),u.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},1<process.argv.length&&(p=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),process.on("uncaughtException",(function(e){throw e})),process.on("unhandledRejection",(function(e){throw e})),t.inspect=function(){return"[Emscripten Module object]"}):(f||h)&&(h?m=self.location.href:"undefined"!=typeof document&&document.currentScript&&(m=document.currentScript.src),_scriptDir&&(m=_scriptDir),m=0!==m.indexOf("blob:")?m.substr(0,m.replace(/[?#].*/,"").lastIndexOf("/")+1):"",a=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},h&&(s=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),o=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var y,w=t.print||console.log.bind(console),v=t.printErr||console.warn.bind(console);Object.assign(t,d),d=null,t.thisProgram&&(p=t.thisProgram),t.wasmBinary&&(y=t.wasmBinary),t.noExitRuntime,"object"!=typeof WebAssembly&&L("no native wasm support detected");var b,$,_,C,S,A,E=!1,O="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function j(e,t,n){var r=(t>>>=0)+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.buffer&&O)return O.decode(e.subarray(t,n));for(r="";t<n;){var i=e[t++];if(128&i){var a=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var o=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function P(e,t){return(e>>>=0)?j(C,e,t):""}function T(e,t,n,r){if(!(0<r))return 0;var i=n>>>=0;r=n+r-1;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),127>=o){if(n>=r)break;t[n++>>>0]=o}else{if(2047>=o){if(n+1>=r)break;t[n++>>>0]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;t[n++>>>0]=224|o>>12}else{if(n+3>=r)break;t[n++>>>0]=240|o>>18,t[n++>>>0]=128|o>>12&63}t[n++>>>0]=128|o>>6&63}t[n++>>>0]=128|63&o}}return t[n>>>0]=0,n-i}function I(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);127>=r?t++:2047>=r?t+=2:55296<=r&&57343>=r?(t+=4,++n):t+=3}return t}function x(){var e=b.buffer;$=e,t.HEAP8=_=new Int8Array(e),t.HEAP16=new Int16Array(e),t.HEAP32=S=new Int32Array(e),t.HEAPU8=C=new Uint8Array(e),t.HEAPU16=new Uint16Array(e),t.HEAPU32=A=new Uint32Array(e),t.HEAPF32=new Float32Array(e),t.HEAPF64=new Float64Array(e)}var R,k=[],D=[],M=[];function G(){var e=t.preRun.shift();k.unshift(e)}var B,U=0,z=null,W=null;function L(e){throw t.onAbort&&t.onAbort(e),v(e="Aborted("+e+")"),E=!0,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),i(e),e}function F(){return B.startsWith("data:application/octet-stream;base64,")}if(B="ort-wasm.wasm",!F()){var H=B;B=t.locateFile?t.locateFile(H,m):m+H}function N(){var e=B;try{if(e==B&&y)return new Uint8Array(y);if(s)return s(e);throw"both async and sync fetching of the wasm failed"}catch(e){L(e)}}function K(e){for(;0<e.length;)e.shift()(t)}var V=[],Y=0,q=0;function X(e){this.Ic=e,this.Cc=e-24,this.Wc=function(e){A[this.Cc+4>>2>>>0]=e},this.Gc=function(){return A[this.Cc+4>>2>>>0]},this.Uc=function(e){A[this.Cc+8>>2>>>0]=e},this.Yc=function(){return A[this.Cc+8>>2>>>0]},this.Vc=function(){S[this.Cc>>2>>>0]=0},this.Lc=function(e){_[this.Cc+12>>0>>>0]=e?1:0},this.Rc=function(){return 0!=_[this.Cc+12>>0>>>0]},this.Mc=function(e){_[this.Cc+13>>0>>>0]=e?1:0},this.Oc=function(){return 0!=_[this.Cc+13>>0>>>0]},this.Tc=function(e,t){this.Hc(0),this.Wc(e),this.Uc(t),this.Vc(),this.Lc(!1),this.Mc(!1)},this.Pc=function(){S[this.Cc>>2>>>0]+=1},this.Zc=function(){var e=S[this.Cc>>2>>>0];return S[this.Cc>>2>>>0]=e-1,1===e},this.Hc=function(e){A[this.Cc+16>>2>>>0]=e},this.Qc=function(){return A[this.Cc+16>>2>>>0]},this.Sc=function(){if(ve(this.Gc()))return A[this.Ic>>2>>>0];var e=this.Qc();return 0!==e?e:this.Ic}}function J(e){return fe(new X(e).Cc)}var Q=[];function Z(e){var t=Q[e];return t||(e>=Q.length&&(Q.length=e+1),Q[e]=t=R.get(e)),t}function ee(e){var t=I(e)+1,n=pe(t);return n&&T(e,_,n,t),n}var te={};function ne(){if(!re){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:p||"./this.program"};for(e in te)void 0===te[e]?delete t[e]:t[e]=te[e];var n=[];for(e in t)n.push(e+"="+t[e]);re=n}return re}var re,ie=[null,[],[]],ae=0;function oe(e){return 0==e%4&&(0!=e%100||0==e%400)}var se=[31,29,31,30,31,30,31,31,30,31,30,31],ue=[31,28,31,30,31,30,31,31,30,31,30,31];function le(e,t,n,r){function i(e,t,n){for(e="number"==typeof e?e.toString():e||"";e.length<t;)e=n[0]+e;return e}function a(e,t){return i(e,t,"0")}function o(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function s(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function u(e){var t=e.Ec;for(e=new Date(new Date(e.Fc+1900,0,1).getTime());0<t;){var n=e.getMonth(),r=(oe(e.getFullYear())?se:ue)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return n=new Date(e.getFullYear()+1,0,4),t=s(new Date(e.getFullYear(),0,4)),n=s(n),0>=o(t,e)?0>=o(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var l=S[r+40>>2>>>0];for(var c in r={bd:S[r>>2>>>0],ad:S[r+4>>2>>>0],Jc:S[r+8>>2>>>0],Nc:S[r+12>>2>>>0],Kc:S[r+16>>2>>>0],Fc:S[r+20>>2>>>0],Dc:S[r+24>>2>>>0],Ec:S[r+28>>2>>>0],dd:S[r+32>>2>>>0],$c:S[r+36>>2>>>0],cd:l?P(l):""},n=P(n),l={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})n=n.replace(new RegExp(c,"g"),l[c]);var d="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),p="January February March April May June July August September October November December".split(" ");for(c in l={"%a":function(e){return d[e.Dc].substring(0,3)},"%A":function(e){return d[e.Dc]},"%b":function(e){return p[e.Kc].substring(0,3)},"%B":function(e){return p[e.Kc]},"%C":function(e){return a((e.Fc+1900)/100|0,2)},"%d":function(e){return a(e.Nc,2)},"%e":function(e){return i(e.Nc,2," ")},"%g":function(e){return u(e).toString().substring(2)},"%G":function(e){return u(e)},"%H":function(e){return a(e.Jc,2)},"%I":function(e){return 0==(e=e.Jc)?e=12:12<e&&(e-=12),a(e,2)},"%j":function(e){for(var t=0,n=0;n<=e.Kc-1;t+=(oe(e.Fc+1900)?se:ue)[n++]);return a(e.Nc+t,3)},"%m":function(e){return a(e.Kc+1,2)},"%M":function(e){return a(e.ad,2)},"%n":function(){return"\n"},"%p":function(e){return 0<=e.Jc&&12>e.Jc?"AM":"PM"},"%S":function(e){return a(e.bd,2)},"%t":function(){return"\t"},"%u":function(e){return e.Dc||7},"%U":function(e){return a(Math.floor((e.Ec+7-e.Dc)/7),2)},"%V":function(e){var t=Math.floor((e.Ec+7-(e.Dc+6)%7)/7);if(2>=(e.Dc+371-e.Ec-2)%7&&t++,t)53==t&&(4==(n=(e.Dc+371-e.Ec)%7)||3==n&&oe(e.Fc)||(t=1));else{t=52;var n=(e.Dc+7-e.Ec-1)%7;(4==n||5==n&&oe(e.Fc%400-1))&&t++}return a(t,2)},"%w":function(e){return e.Dc},"%W":function(e){return a(Math.floor((e.Ec+7-(e.Dc+6)%7)/7),2)},"%y":function(e){return(e.Fc+1900).toString().substring(2)},"%Y":function(e){return e.Fc+1900},"%z":function(e){var t=0<=(e=e.$c);return e=Math.abs(e)/60,(t?"+":"-")+String("0000"+(e/60*100+e%60)).slice(-4)},"%Z":function(e){return e.cd},"%%":function(){return"%"}},n=n.replace(/%%/g,"\0\0"),l)n.includes(c)&&(n=n.replace(new RegExp(c,"g"),l[c](r)));return c=function(e){var t=Array(I(e)+1);return T(e,t,0,t.length),t}(n=n.replace(/\0\0/g,"%")),c.length>t?0:(_.set(c,e>>>0),c.length-1)}var ce={j:function(e){return pe(e+24)+24},q:function(e){return(e=new X(e)).Rc()||(e.Lc(!0),Y--),e.Mc(!1),V.push(e),e.Pc(),e.Sc()},sa:function(e){throw v("Unexpected exception thrown, this is not properly supported - aborting"),E=!0,e},B:function(){he(0);var e=V.pop();if(e.Zc()&&!e.Oc()){var t=e.Yc();t&&Z(t)(e.Ic),J(e.Ic)}q=0},b:function(){var e=q;if(!e)return ae=0;var t=new X(e);t.Hc(e);var n=t.Gc();if(!n)return ae=0,e;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===n)break;if(we(a,n,t.Cc+16))return ae=a,e}return ae=n,e},l:function(){var e=q;if(!e)return ae=0;var t=new X(e);t.Hc(e);var n=t.Gc();if(!n)return ae=0,e;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===n)break;if(we(a,n,t.Cc+16))return ae=a,e}return ae=n,e},v:function(){var e=q;if(!e)return ae=0;var t=new X(e);t.Hc(e);var n=t.Gc();if(!n)return ae=0,e;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===n)break;if(we(a,n,t.Cc+16))return ae=a,e}return ae=n,e},n:function(){var e=q;if(!e)return ae=0;var t=new X(e);t.Hc(e);var n=t.Gc();if(!n)return ae=0,e;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===n)break;if(we(a,n,t.Cc+16))return ae=a,e}return ae=n,e},m:J,S:function(){var e=V.pop();e||L("no exception to throw");var t=e.Ic;throw e.Oc()||(V.push(e),e.Mc(!0),e.Lc(!1),Y++),q=t,t},w:function(e,t,n){throw new X(e).Tc(t,n),q=e,Y++,e},va:function(){return Y},g:function(e){throw q||(q=e),e},U:function(){return 0},Ma:function(){},Aa:function(){},Ca:function(){},ua:function(){return 0},Ka:function(){},Ga:function(){},Ja:function(){},$:function(){},Ba:function(){},ya:function(){},La:function(){},za:function(){},eb:function(){},la:function(){L("To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking")},pb:function(){L("To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking")},aa:function(){return Date.now()},Na:function(){return!0},Oa:function(e,t){e=new Date(1e3*(A[e>>>2]+4294967296*S[e+4>>>2])),S[t>>2>>>0]=e.getUTCSeconds(),S[t+4>>2>>>0]=e.getUTCMinutes(),S[t+8>>2>>>0]=e.getUTCHours(),S[t+12>>2>>>0]=e.getUTCDate(),S[t+16>>2>>>0]=e.getUTCMonth(),S[t+20>>2>>>0]=e.getUTCFullYear()-1900,S[t+24>>2>>>0]=e.getUTCDay(),S[t+28>>2>>>0]=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},Pa:function(e,t){e=new Date(1e3*(A[e>>>2]+4294967296*S[e+4>>>2])),S[t>>2>>>0]=e.getSeconds(),S[t+4>>2>>>0]=e.getMinutes(),S[t+8>>2>>>0]=e.getHours(),S[t+12>>2>>>0]=e.getDate(),S[t+16>>2>>>0]=e.getMonth(),S[t+20>>2>>>0]=e.getFullYear()-1900,S[t+24>>2>>>0]=e.getDay();var n=new Date(e.getFullYear(),0,1);S[t+28>>2>>>0]=(e.getTime()-n.getTime())/864e5|0,S[t+36>>2>>>0]=-60*e.getTimezoneOffset();var r=new Date(e.getFullYear(),6,1).getTimezoneOffset();n=n.getTimezoneOffset(),S[t+32>>2>>>0]=0|(r!=n&&e.getTimezoneOffset()==Math.min(n,r))},Qa:function(e){var t=new Date(S[e+20>>2>>>0]+1900,S[e+16>>2>>>0],S[e+12>>2>>>0],S[e+8>>2>>>0],S[e+4>>2>>>0],S[e>>2>>>0],0),n=S[e+32>>2>>>0],r=t.getTimezoneOffset(),i=new Date(t.getFullYear(),0,1),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),o=i.getTimezoneOffset(),s=Math.min(o,a);return 0>n?S[e+32>>2>>>0]=Number(a!=o&&s==r):0<n!=(s==r)&&(a=Math.max(o,a),t.setTime(t.getTime()+6e4*((0<n?s:a)-r))),S[e+24>>2>>>0]=t.getDay(),S[e+28>>2>>>0]=(t.getTime()-i.getTime())/864e5|0,S[e>>2>>>0]=t.getSeconds(),S[e+4>>2>>>0]=t.getMinutes(),S[e+8>>2>>>0]=t.getHours(),S[e+12>>2>>>0]=t.getDate(),S[e+16>>2>>>0]=t.getMonth(),t.getTime()/1e3|0},Ea:function(){return-52},Fa:function(){},Va:function e(t,n,r){e.Xc||(e.Xc=!0,function(e,t,n){function r(e){return(e=e.toTimeString().match(/\(([A-Za-z ]+)\)$/))?e[1]:"GMT"}var i=(new Date).getFullYear(),a=new Date(i,0,1),o=new Date(i,6,1);i=a.getTimezoneOffset();var s=o.getTimezoneOffset();S[e>>2>>>0]=60*Math.max(i,s),S[t>>2>>>0]=Number(i!=s),e=r(a),t=r(o),e=ee(e),t=ee(t),s<i?(A[n>>2>>>0]=e,A[n+4>>2>>>0]=t):(A[n>>2>>>0]=t,A[n+4>>2>>>0]=e)}(t,n,r))},P:function(){L("")},wa:function(){return 4294901760},V:g?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:()=>performance.now(),Da:function(e,t,n){C.copyWithin(e>>>0,t>>>0,t+n>>>0)},T:function(e){var t=C.length;if(4294901760<(e>>>=0))return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296);var i=Math;r=Math.max(e,r),i=i.min.call(i,4294901760,r+(65536-r%65536)%65536);e:{try{b.grow(i-$.byteLength+65535>>>16),x();var a=1;break e}catch(e){}a=void 0}if(a)return!0}return!1},Ha:function(e,t){var n=0;return ne().forEach((function(r,i){var a=t+n;for(i=A[e+4*i>>2>>>0]=a,a=0;a<r.length;++a)_[i++>>0>>>0]=r.charCodeAt(a);_[i>>0>>>0]=0,n+=r.length+1})),0},Ia:function(e,t){var n=ne();A[e>>2>>>0]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),A[t>>2>>>0]=r,0},R:function(){return 52},_:function(){return 52},na:function(){return 70},xa:function(e,t,n,r){for(var i=0,a=0;a<n;a++){var o=A[t>>2>>>0],s=A[t+4>>2>>>0];t+=8;for(var u=0;u<s;u++){var l=C[o+u>>>0],c=ie[e];0===l||10===l?((1===e?w:v)(j(c,0)),c.length=0):c.push(l)}i+=s}return A[r>>2>>>0]=i,0},a:function(){return ae},oa:function(e,t,n){var r=ge();try{return Z(e)(t,n)}catch(e){if(me(r),e!==e+0)throw e;he(1,0)}},C:function(e,t,n,r,i,a,o){var s=ge();try{return Z(e)(t,n,r,i,a,o)}catch(e){if(me(s),e!==e+0)throw e;he(1,0)}},x:function(e){var t=ge();try{return Z(e)()}catch(e){if(me(t),e!==e+0)throw e;he(1,0)}},c:function(e,t){var n=ge();try{return Z(e)(t)}catch(e){if(me(n),e!==e+0)throw e;he(1,0)}},W:function(e,t,n){var r=ge();try{return Z(e)(t,n)}catch(e){if(me(r),e!==e+0)throw e;he(1,0)}},Q:function(e,t,n){var r=ge();try{return Z(e)(t,n)}catch(e){if(me(r),e!==e+0)throw e;he(1,0)}},k:function(e,t,n){var r=ge();try{return Z(e)(t,n)}catch(e){if(me(r),e!==e+0)throw e;he(1,0)}},f:function(e,t,n,r){var i=ge();try{return Z(e)(t,n,r)}catch(e){if(me(i),e!==e+0)throw e;he(1,0)}},h:function(e,t,n,r,i){var a=ge();try{return Z(e)(t,n,r,i)}catch(e){if(me(a),e!==e+0)throw e;he(1,0)}},o:function(e,t,n,r,i,a){var o=ge();try{return Z(e)(t,n,r,i,a)}catch(e){if(me(o),e!==e+0)throw e;he(1,0)}},y:function(e,t,n,r,i,a,o){var s=ge();try{return Z(e)(t,n,r,i,a,o)}catch(e){if(me(s),e!==e+0)throw e;he(1,0)}},K:function(e,t,n,r,i,a,o,s){var u=ge();try{return Z(e)(t,n,r,i,a,o,s)}catch(e){if(me(u),e!==e+0)throw e;he(1,0)}},Z:function(e,t,n,r,i,a,o,s,u,l,c){var d=ge();try{return Z(e)(t,n,r,i,a,o,s,u,l,c)}catch(e){if(me(d),e!==e+0)throw e;he(1,0)}},M:function(e,t,n,r,i,a,o,s,u,l,c,d){var p=ge();try{return Z(e)(t,n,r,i,a,o,s,u,l,c,d)}catch(e){if(me(p),e!==e+0)throw e;he(1,0)}},ia:function(e,t,n,r,i,a,o){var s=ge();try{return _e(e,t,n,r,i,a,o)}catch(e){if(me(s),e!==e+0)throw e;he(1,0)}},kb:function(e,t,n,r,i,a,o,s,u,l){var c=ge();try{return De(e,t,n,r,i,a,o,s,u,l)}catch(e){if(me(c),e!==e+0)throw e;he(1,0)}},Ra:function(e,t,n,r,i){var a=ge();try{return Xe(e,t,n,r,i)}catch(e){if(me(a),e!==e+0)throw e;he(1,0)}},jb:function(e,t,n,r,i,a,o,s,u){var l=ge();try{return Me(e,t,n,r,i,a,o,s,u)}catch(e){if(me(l),e!==e+0)throw e;he(1,0)}},ma:function(e,t,n,r){var i=ge();try{return $e(e,t,n,r)}catch(e){if(me(i),e!==e+0)throw e;he(1,0)}},Sa:function(e){var t=ge();try{return be(e)}catch(e){if(me(t),e!==e+0)throw e;he(1,0)}},Ya:function(e,t,n){var r=ge();try{return Ze(e,t,n)}catch(e){if(me(r),e!==e+0)throw e;he(1,0)}},fa:function(e,t){var n=ge();try{return je(e,t)}catch(e){if(me(n),e!==e+0)throw e;he(1,0)}},ea:function(e,t,n){var r=ge();try{return Se(e,t,n)}catch(e){if(me(r),e!==e+0)throw e;he(1,0)}},ib:function(e,t,n,r){var i=ge();try{return Ge(e,t,n,r)}catch(e){if(me(i),e!==e+0)throw e;he(1,0)}},lb:function(e,t,n,r,i){var a=ge();try{return ke(e,t,n,r,i)}catch(e){if(me(a),e!==e+0)throw e;he(1,0)}},d:function(e){var t=ge();try{Z(e)()}catch(e){if(me(t),e!==e+0)throw e;he(1,0)}},t:function(e,t){var n=ge();try{Z(e)(t)}catch(e){if(me(n),e!==e+0)throw e;he(1,0)}},i:function(e,t,n){var r=ge();try{Z(e)(t,n)}catch(e){if(me(r),e!==e+0)throw e;he(1,0)}},E:function(e,t,n,r,i){var a=ge();try{Z(e)(t,n,r,i)}catch(e){if(me(a),e!==e+0)throw e;he(1,0)}},e:function(e,t,n,r){var i=ge();try{Z(e)(t,n,r)}catch(e){if(me(i),e!==e+0)throw e;he(1,0)}},Y:function(e,t,n,r,i){var a=ge();try{Z(e)(t,n,r,i)}catch(e){if(me(a),e!==e+0)throw e;he(1,0)}},r:function(e,t,n,r,i){var a=ge();try{Z(e)(t,n,r,i)}catch(e){if(me(a),e!==e+0)throw e;he(1,0)}},u:function(e,t,n,r,i,a){var o=ge();try{Z(e)(t,n,r,i,a)}catch(e){if(me(o),e!==e+0)throw e;he(1,0)}},p:function(e,t,n,r,i,a,o){var s=ge();try{Z(e)(t,n,r,i,a,o)}catch(e){if(me(s),e!==e+0)throw e;he(1,0)}},G:function(e,t,n,r,i,a,o,s,u,l,c,d,p,f,h,g){var m=ge();try{Z(e)(t,n,r,i,a,o,s,u,l,c,d,p,f,h,g)}catch(e){if(me(m),e!==e+0)throw e;he(1,0)}},N:function(e,t,n,r,i,a,o,s,u,l,c,d,p,f,h,g,m){var y=ge();try{Z(e)(t,n,r,i,a,o,s,u,l,c,d,p,f,h,g,m)}catch(e){if(me(y),e!==e+0)throw e;he(1,0)}},F:function(e,t,n,r,i,a,o,s,u,l,c,d,p,f,h){var g=ge();try{Z(e)(t,n,r,i,a,o,s,u,l,c,d,p,f,h)}catch(e){if(me(g),e!==e+0)throw e;he(1,0)}},z:function(e,t,n,r,i,a,o,s){var u=ge();try{Z(e)(t,n,r,i,a,o,s)}catch(e){if(me(u),e!==e+0)throw e;he(1,0)}},D:function(e,t,n,r,i,a,o,s,u){var l=ge();try{Z(e)(t,n,r,i,a,o,s,u)}catch(e){if(me(l),e!==e+0)throw e;he(1,0)}},H:function(e,t,n,r,i,a,o,s,u,l){var c=ge();try{Z(e)(t,n,r,i,a,o,s,u,l)}catch(e){if(me(c),e!==e+0)throw e;he(1,0)}},X:function(e,t,n,r,i,a,o,s,u,l,c,d){var p=ge();try{Z(e)(t,n,r,i,a,o,s,u,l,c,d)}catch(e){if(me(p),e!==e+0)throw e;he(1,0)}},pa:function(e,t,n,r,i,a,o,s,u,l,c,d,p,f){var h=ge();try{Z(e)(t,n,r,i,a,o,s,u,l,c,d,p,f)}catch(e){if(me(h),e!==e+0)throw e;he(1,0)}},J:function(e,t,n,r,i,a,o,s,u,l,c){var d=ge();try{Z(e)(t,n,r,i,a,o,s,u,l,c)}catch(e){if(me(d),e!==e+0)throw e;he(1,0)}},qa:function(e,t,n,r,i,a,o,s,u,l,c,d){var p=ge();try{Z(e)(t,n,r,i,a,o,s,u,l,c,d)}catch(e){if(me(p),e!==e+0)throw e;he(1,0)}},A:function(e,t,n,r,i,a,o,s,u,l,c,d,p){var f=ge();try{Z(e)(t,n,r,i,a,o,s,u,l,c,d,p)}catch(e){if(me(f),e!==e+0)throw e;he(1,0)}},O:function(e,t,n,r,i,a,o,s,u,l,c,d,p,f){var h=ge();try{Z(e)(t,n,r,i,a,o,s,u,l,c,d,p,f)}catch(e){if(me(h),e!==e+0)throw e;he(1,0)}},L:function(e,t,n,r,i,a,o,s,u,l,c,d,p,f,h,g){var m=ge();try{Z(e)(t,n,r,i,a,o,s,u,l,c,d,p,f,h,g)}catch(e){if(me(m),e!==e+0)throw e;he(1,0)}},mb:function(e,t,n,r,i,a,o,s,u,l,c,d,p){var f=ge();try{Re(e,t,n,r,i,a,o,s,u,l,c,d,p)}catch(e){if(me(f),e!==e+0)throw e;he(1,0)}},ga:function(e,t,n,r,i,a,o,s){var u=ge();try{Oe(e,t,n,r,i,a,o,s)}catch(e){if(me(u),e!==e+0)throw e;he(1,0)}},ha:function(e,t,n,r,i,a,o){var s=ge();try{Ee(e,t,n,r,i,a,o)}catch(e){if(me(s),e!==e+0)throw e;he(1,0)}},nb:function(e,t,n,r,i,a){var o=ge();try{xe(e,t,n,r,i,a)}catch(e){if(me(o),e!==e+0)throw e;he(1,0)}},ba:function(e,t,n,r,i,a,o){var s=ge();try{Te(e,t,n,r,i,a,o)}catch(e){if(me(s),e!==e+0)throw e;he(1,0)}},ja:function(e,t,n,r,i,a,o,s){var u=ge();try{Je(e,t,n,r,i,a,o,s)}catch(e){if(me(u),e!==e+0)throw e;he(1,0)}},Xa:function(e,t,n,r,i,a,o,s,u,l){var c=ge();try{Ye(e,t,n,r,i,a,o,s,u,l)}catch(e){if(me(c),e!==e+0)throw e;he(1,0)}},Wa:function(e,t,n,r,i,a,o,s,u,l,c,d){var p=ge();try{qe(e,t,n,r,i,a,o,s,u,l,c,d)}catch(e){if(me(p),e!==e+0)throw e;he(1,0)}},ca:function(e,t,n,r,i,a){var o=ge();try{Ae(e,t,n,r,i,a)}catch(e){if(me(o),e!==e+0)throw e;he(1,0)}},Ta:function(e,t,n,r,i,a,o,s,u,l,c,d,p,f){var h=ge();try{Qe(e,t,n,r,i,a,o,s,u,l,c,d,p,f)}catch(e){if(me(h),e!==e+0)throw e;he(1,0)}},da:function(e,t,n,r,i,a,o,s,u,l,c,d,p,f){var h=ge();try{Pe(e,t,n,r,i,a,o,s,u,l,c,d,p,f)}catch(e){if(me(h),e!==e+0)throw e;he(1,0)}},ka:function(e,t,n,r){var i=ge();try{Ce(e,t,n,r)}catch(e){if(me(i),e!==e+0)throw e;he(1,0)}},Ua:function(e,t,n,r,i){var a=ge();try{et(e,t,n,r,i)}catch(e){if(me(a),e!==e+0)throw e;he(1,0)}},ob:function(e,t,n,r,i,a,o){var s=ge();try{Ie(e,t,n,r,i,a,o)}catch(e){if(me(s),e!==e+0)throw e;he(1,0)}},ab:function(e,t,n,r,i,a,o,s,u,l,c,d){var p=ge();try{He(e,t,n,r,i,a,o,s,u,l,c,d)}catch(e){if(me(p),e!==e+0)throw e;he(1,0)}},bb:function(e,t,n,r,i,a,o,s,u,l,c,d){var p=ge();try{Fe(e,t,n,r,i,a,o,s,u,l,c,d)}catch(e){if(me(p),e!==e+0)throw e;he(1,0)}},$a:function(e,t,n,r,i,a,o,s,u,l,c,d,p,f,h,g,m,y,w,v,b){var $=ge();try{Ne(e,t,n,r,i,a,o,s,u,l,c,d,p,f,h,g,m,y,w,v,b)}catch(e){if(me($),e!==e+0)throw e;he(1,0)}},Za:function(e,t,n,r,i,a,o,s,u,l,c,d,p){var f=ge();try{Ve(e,t,n,r,i,a,o,s,u,l,c,d,p)}catch(e){if(me(f),e!==e+0)throw e;he(1,0)}},_a:function(e,t,n,r,i,a,o,s,u,l,c,d,p,f,h){var g=ge();try{Ke(e,t,n,r,i,a,o,s,u,l,c,d,p,f,h)}catch(e){if(me(g),e!==e+0)throw e;he(1,0)}},db:function(e,t,n,r,i,a,o,s,u,l,c,d,p,f,h,g,m,y,w,v,b,$,_){var C=ge();try{We(e,t,n,r,i,a,o,s,u,l,c,d,p,f,h,g,m,y,w,v,b,$,_)}catch(e){if(me(C),e!==e+0)throw e;he(1,0)}},fb:function(e,t,n,r,i,a,o,s,u,l,c,d,p,f,h,g,m,y,w,v,b,$,_,C,S){var A=ge();try{ze(e,t,n,r,i,a,o,s,u,l,c,d,p,f,h,g,m,y,w,v,b,$,_,C,S)}catch(e){if(me(A),e!==e+0)throw e;he(1,0)}},hb:function(e,t,n,r,i,a,o,s,u,l,c,d,p,f,h,g,m,y,w,v,b,$,_,C){var S=ge();try{Be(e,t,n,r,i,a,o,s,u,l,c,d,p,f,h,g,m,y,w,v,b,$,_,C)}catch(e){if(me(S),e!==e+0)throw e;he(1,0)}},cb:function(e,t,n,r,i,a,o,s,u,l,c,d,p,f,h,g,m,y,w,v,b,$,_,C,S,A,E,O){var j=ge();try{Le(e,t,n,r,i,a,o,s,u,l,c,d,p,f,h,g,m,y,w,v,b,$,_,C,S,A,E,O)}catch(e){if(me(j),e!==e+0)throw e;he(1,0)}},gb:function(e,t,n,r,i,a,o,s,u,l,c,d,p,f,h,g,m,y,w,v,b,$,_,C,S,A,E,O,j){var P=ge();try{Ue(e,t,n,r,i,a,o,s,u,l,c,d,p,f,h,g,m,y,w,v,b,$,_,C,S,A,E,O,j)}catch(e){if(me(P),e!==e+0)throw e;he(1,0)}},s:function(e){return e},I:function(e){ae=e},ra:le,ta:function(e,t,n,r){return le(e,t,n,r)}};!function(){function e(e){t.asm=e.exports,b=t.asm.qb,x(),R=t.asm.Ob,D.unshift(t.asm.rb),U--,t.monitorRunDependencies&&t.monitorRunDependencies(U),0==U&&(null!==z&&(clearInterval(z),z=null),W&&(e=W,W=null,e()))}function n(t){e(t.instance)}function r(e){return function(){if(!y&&(f||h)){if("function"==typeof fetch&&!B.startsWith("file://"))return fetch(B,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+B+"'";return e.arrayBuffer()})).catch((function(){return N()}));if(o)return new Promise((function(e,t){o(B,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return N()}))}().then((function(e){return WebAssembly.instantiate(e,a)})).then((function(e){return e})).then(e,(function(e){v("failed to asynchronously prepare wasm: "+e),L(e)}))}var a={a:ce};if(U++,t.monitorRunDependencies&&t.monitorRunDependencies(U),t.instantiateWasm)try{return t.instantiateWasm(a,e)}catch(e){return v("Module.instantiateWasm callback failed with error: "+e),!1}(y||"function"!=typeof WebAssembly.instantiateStreaming||F()||B.startsWith("file://")||g||"function"!=typeof fetch?r(n):fetch(B,{credentials:"same-origin"}).then((function(e){return WebAssembly.instantiateStreaming(e,a).then(n,(function(e){return v("wasm streaming compile failed: "+e),v("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(i)}(),t.___wasm_call_ctors=function(){return(t.___wasm_call_ctors=t.asm.rb).apply(null,arguments)},t._OrtInit=function(){return(t._OrtInit=t.asm.sb).apply(null,arguments)},t._OrtCreateSessionOptions=function(){return(t._OrtCreateSessionOptions=t.asm.tb).apply(null,arguments)},t._OrtAppendExecutionProvider=function(){return(t._OrtAppendExecutionProvider=t.asm.ub).apply(null,arguments)},t._OrtAddSessionConfigEntry=function(){return(t._OrtAddSessionConfigEntry=t.asm.vb).apply(null,arguments)},t._OrtReleaseSessionOptions=function(){return(t._OrtReleaseSessionOptions=t.asm.wb).apply(null,arguments)},t._OrtCreateSession=function(){return(t._OrtCreateSession=t.asm.xb).apply(null,arguments)},t._OrtReleaseSession=function(){return(t._OrtReleaseSession=t.asm.yb).apply(null,arguments)},t._OrtGetInputCount=function(){return(t._OrtGetInputCount=t.asm.zb).apply(null,arguments)},t._OrtGetOutputCount=function(){return(t._OrtGetOutputCount=t.asm.Ab).apply(null,arguments)},t._OrtGetInputName=function(){return(t._OrtGetInputName=t.asm.Bb).apply(null,arguments)},t._OrtGetOutputName=function(){return(t._OrtGetOutputName=t.asm.Cb).apply(null,arguments)},t._OrtFree=function(){return(t._OrtFree=t.asm.Db).apply(null,arguments)},t._OrtCreateTensor=function(){return(t._OrtCreateTensor=t.asm.Eb).apply(null,arguments)},t._OrtGetTensorData=function(){return(t._OrtGetTensorData=t.asm.Fb).apply(null,arguments)},t._OrtReleaseTensor=function(){return(t._OrtReleaseTensor=t.asm.Gb).apply(null,arguments)},t._OrtCreateRunOptions=function(){return(t._OrtCreateRunOptions=t.asm.Hb).apply(null,arguments)},t._OrtAddRunConfigEntry=function(){return(t._OrtAddRunConfigEntry=t.asm.Ib).apply(null,arguments)},t._OrtReleaseRunOptions=function(){return(t._OrtReleaseRunOptions=t.asm.Jb).apply(null,arguments)},t._OrtRun=function(){return(t._OrtRun=t.asm.Kb).apply(null,arguments)},t._OrtEndProfiling=function(){return(t._OrtEndProfiling=t.asm.Lb).apply(null,arguments)};var de,pe=t._malloc=function(){return(pe=t._malloc=t.asm.Mb).apply(null,arguments)},fe=t._free=function(){return(fe=t._free=t.asm.Nb).apply(null,arguments)},he=t._setThrew=function(){return(he=t._setThrew=t.asm.Pb).apply(null,arguments)},ge=t.stackSave=function(){return(ge=t.stackSave=t.asm.Qb).apply(null,arguments)},me=t.stackRestore=function(){return(me=t.stackRestore=t.asm.Rb).apply(null,arguments)},ye=t.stackAlloc=function(){return(ye=t.stackAlloc=t.asm.Sb).apply(null,arguments)},we=t.___cxa_can_catch=function(){return(we=t.___cxa_can_catch=t.asm.Tb).apply(null,arguments)},ve=t.___cxa_is_pointer_type=function(){return(ve=t.___cxa_is_pointer_type=t.asm.Ub).apply(null,arguments)},be=t.dynCall_j=function(){return(be=t.dynCall_j=t.asm.Vb).apply(null,arguments)},$e=t.dynCall_iij=function(){return($e=t.dynCall_iij=t.asm.Wb).apply(null,arguments)},_e=t.dynCall_iiiiij=function(){return(_e=t.dynCall_iiiiij=t.asm.Xb).apply(null,arguments)},Ce=t.dynCall_vij=function(){return(Ce=t.dynCall_vij=t.asm.Yb).apply(null,arguments)},Se=t.dynCall_jii=function(){return(Se=t.dynCall_jii=t.asm.Zb).apply(null,arguments)},Ae=t.dynCall_viiji=function(){return(Ae=t.dynCall_viiji=t.asm._b).apply(null,arguments)},Ee=t.dynCall_viiiij=function(){return(Ee=t.dynCall_viiiij=t.asm.$b).apply(null,arguments)},Oe=t.dynCall_viiiiij=function(){return(Oe=t.dynCall_viiiiij=t.asm.ac).apply(null,arguments)},je=t.dynCall_ji=function(){return(je=t.dynCall_ji=t.asm.bc).apply(null,arguments)},Pe=t.dynCall_viijjjiiiii=function(){return(Pe=t.dynCall_viijjjiiiii=t.asm.cc).apply(null,arguments)},Te=t.dynCall_viiiji=function(){return(Te=t.dynCall_viiiji=t.asm.dc).apply(null,arguments)},Ie=t.dynCall_vijiii=function(){return(Ie=t.dynCall_vijiii=t.asm.ec).apply(null,arguments)},xe=t.dynCall_viiij=function(){return(xe=t.dynCall_viiij=t.asm.fc).apply(null,arguments)},Re=t.dynCall_viiiiiiiiiji=function(){return(Re=t.dynCall_viiiiiiiiiji=t.asm.gc).apply(null,arguments)},ke=t.dynCall_jjj=function(){return(ke=t.dynCall_jjj=t.asm.hc).apply(null,arguments)},De=t.dynCall_iiiijjj=function(){return(De=t.dynCall_iiiijjj=t.asm.ic).apply(null,arguments)},Me=t.dynCall_iiijjj=function(){return(Me=t.dynCall_iiijjj=t.asm.jc).apply(null,arguments)},Ge=t.dynCall_jiii=function(){return(Ge=t.dynCall_jiii=t.asm.kc).apply(null,arguments)},Be=t.dynCall_vjjjjjjffiifiiiiii=function(){return(Be=t.dynCall_vjjjjjjffiifiiiiii=t.asm.lc).apply(null,arguments)},Ue=t.dynCall_vjjjjjjjjfffiifiiiiii=function(){return(Ue=t.dynCall_vjjjjjjjjfffiifiiiiii=t.asm.mc).apply(null,arguments)},ze=t.dynCall_vjjjjjjfffifiiiiiii=function(){return(ze=t.dynCall_vjjjjjjfffifiiiiiii=t.asm.nc).apply(null,arguments)},We=t.dynCall_vjjjjjjfffifiiiii=function(){return(We=t.dynCall_vjjjjjjfffifiiiii=t.asm.oc).apply(null,arguments)},Le=t.dynCall_vjjjjjjjjfffiifiiiii=function(){return(Le=t.dynCall_vjjjjjjjjfffiifiiiii=t.asm.pc).apply(null,arguments)},Fe=t.dynCall_vijjfffiii=function(){return(Fe=t.dynCall_vijjfffiii=t.asm.qc).apply(null,arguments)},He=t.dynCall_vijiiiiiiii=function(){return(He=t.dynCall_vijiiiiiiii=t.asm.rc).apply(null,arguments)},Ne=t.dynCall_vijjjjjjifiiiii=function(){return(Ne=t.dynCall_vijjjjjjifiiiii=t.asm.sc).apply(null,arguments)},Ke=t.dynCall_vjjjjjiiii=function(){return(Ke=t.dynCall_vjjjjjiiii=t.asm.tc).apply(null,arguments)},Ve=t.dynCall_vjjjjfiii=function(){return(Ve=t.dynCall_vjjjjfiii=t.asm.uc).apply(null,arguments)},Ye=t.dynCall_viiijiiii=function(){return(Ye=t.dynCall_viiijiiii=t.asm.vc).apply(null,arguments)},qe=t.dynCall_viiijjjii=function(){return(qe=t.dynCall_viiijjjii=t.asm.wc).apply(null,arguments)},Xe=t.dynCall_iiij=function(){return(Xe=t.dynCall_iiij=t.asm.xc).apply(null,arguments)},Je=t.dynCall_viiijii=function(){return(Je=t.dynCall_viiijii=t.asm.yc).apply(null,arguments)},Qe=t.dynCall_viijiiiiiiiii=function(){return(Qe=t.dynCall_viijiiiiiiiii=t.asm.zc).apply(null,arguments)},Ze=t.dynCall_jfi=function(){return(Ze=t.dynCall_jfi=t.asm.Ac).apply(null,arguments)},et=t.dynCall_viji=function(){return(et=t.dynCall_viji=t.asm.Bc).apply(null,arguments)};function tt(){function e(){if(!de&&(de=!0,t.calledRun=!0,!E)){if(K(D),r(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),t.postRun)for("function"==typeof t.postRun&&(t.postRun=[t.postRun]);t.postRun.length;){var e=t.postRun.shift();M.unshift(e)}K(M)}}if(!(0<U)){if(t.preRun)for("function"==typeof t.preRun&&(t.preRun=[t.preRun]);t.preRun.length;)G();K(k),0<U||(t.setStatus?(t.setStatus("Running..."),setTimeout((function(){setTimeout((function(){t.setStatus("")}),1),e()}),1)):e())}}if(t.UTF8ToString=P,t.stringToUTF8=function(e,t,n){return T(e,C,t,n)},t.lengthBytesUTF8=I,t.stackSave=ge,t.stackRestore=me,t.stackAlloc=ye,W=function e(){de||tt(),de||(W=e)},t.preInit)for("function"==typeof t.preInit&&(t.preInit=[t.preInit]);0<t.preInit.length;)t.preInit.pop()();return tt(),e.ready});e.exports=r},384:()=>{},908:()=>{},806:()=>{},449:()=>{},850:()=>{},381:()=>{}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var a=t[r]={exports:{}};return e[r].call(a.exports,a,a.exports,n),a.exports}return n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n(57)})()));
//# sourceMappingURL=ort.wasm-core.min.js.map