{"version":3,"file":"ort.wasm-core.min.js","mappings":"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","sources":["webpack://ort/webpack/universalModuleDefinition","webpack://ort/../common/dist/lib/backend-impl.js","webpack://ort/../common/dist/lib/env.js","webpack://ort/../common/dist/lib/env-impl.js","webpack://ort/../common/dist/lib/tensor-impl.js","webpack://ort/../common/dist/lib/tensor.js","webpack://ort/../common/dist/lib/inference-session-impl.js","webpack://ort/../common/dist/lib/inference-session.js","webpack://ort/./lib/backend-wasm.ts","webpack://ort/./lib/index.ts","webpack://ort/./lib/wasm/jsep/backend-webgpu.ts","webpack://ort/./lib/wasm/jsep/init.ts","webpack://ort/./lib/wasm/jsep/log.ts","webpack://ort/./lib/wasm/jsep/util.ts","webpack://ort/./lib/wasm/jsep/webgpu/attribute-with-cache-key.ts","webpack://ort/./lib/wasm/jsep/webgpu/gpu-data-manager.ts","webpack://ort/./lib/wasm/jsep/webgpu/op-resolve-rules.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/3rd-party/activation_util.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/3rd-party/conv2d_mm_webgpu.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/3rd-party/conv_util.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/3rd-party/matmul_packed_webgpu.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/binary-op.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/common.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/conv-grouped.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/conv.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/conv2d-mm.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/fuse-utils.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/gemm.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/matmul.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/pool.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/transpose.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/unary-op.ts","webpack://ort/./lib/wasm/jsep/webgpu/program-manager.ts","webpack://ort/./lib/wasm/jsep/webgpu/types.ts","webpack://ort/./lib/wasm/options-utils.ts","webpack://ort/./lib/wasm/proxy-wrapper.ts","webpack://ort/./lib/wasm/run-options.ts","webpack://ort/./lib/wasm/session-handler.ts","webpack://ort/./lib/wasm/session-options.ts","webpack://ort/./lib/wasm/string-utils.ts","webpack://ort/./lib/wasm/wasm-common.ts","webpack://ort/./lib/wasm/wasm-core-impl.ts","webpack://ort/./lib/wasm/wasm-factory.ts","webpack://ort/./lib/wasm/binding/ort-wasm.js","webpack://ort/webpack/bootstrap","webpack://ort/webpack/runtime/define property getters","webpack://ort/webpack/runtime/hasOwnProperty shorthand","webpack://ort/webpack/runtime/make namespace object","webpack://ort/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ort\"] = factory();\n\telse\n\t\troot[\"ort\"] = factory();\n})(self, () => {\nreturn ","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nconst backends = {};\nconst backendsSortedByPriority = [];\n/**\n * Register a backend.\n *\n * @param name - the name as a key to lookup as an execution provider.\n * @param backend - the backend object.\n * @param priority - an integer indicating the priority of the backend. Higher number means higher priority. if priority\n * < 0, it will be considered as a 'beta' version and will not be used as a fallback backend by default.\n *\n * @internal\n */\nexport const registerBackend = (name, backend, priority) => {\n    if (backend && typeof backend.init === 'function' && typeof backend.createSessionHandler === 'function') {\n        const currentBackend = backends[name];\n        if (currentBackend === undefined) {\n            backends[name] = { backend, priority };\n        }\n        else if (currentBackend.priority > priority) {\n            // same name is already registered with a higher priority. skip registeration.\n            return;\n        }\n        else if (currentBackend.priority === priority) {\n            if (currentBackend.backend !== backend) {\n                throw new Error(`cannot register backend \"${name}\" using priority ${priority}`);\n            }\n        }\n        if (priority >= 0) {\n            const i = backendsSortedByPriority.indexOf(name);\n            if (i !== -1) {\n                backendsSortedByPriority.splice(i, 1);\n            }\n            for (let i = 0; i < backendsSortedByPriority.length; i++) {\n                if (backends[backendsSortedByPriority[i]].priority <= priority) {\n                    backendsSortedByPriority.splice(i, 0, name);\n                    return;\n                }\n            }\n            backendsSortedByPriority.push(name);\n        }\n        return;\n    }\n    throw new TypeError('not a valid backend');\n};\n/**\n * Resolve backend by specified hints.\n *\n * @param backendHints - a list of execution provider names to lookup. If omitted use registered backends as list.\n * @returns a promise that resolves to the backend.\n *\n * @internal\n */\nexport const resolveBackend = async (backendHints) => {\n    const backendNames = backendHints.length === 0 ? backendsSortedByPriority : backendHints;\n    const errors = [];\n    for (const backendName of backendNames) {\n        const backendInfo = backends[backendName];\n        if (backendInfo) {\n            if (backendInfo.initialized) {\n                return backendInfo.backend;\n            }\n            else if (backendInfo.aborted) {\n                continue; // current backend is unavailable; try next\n            }\n            const isInitializing = !!backendInfo.initPromise;\n            try {\n                if (!isInitializing) {\n                    backendInfo.initPromise = backendInfo.backend.init();\n                }\n                await backendInfo.initPromise;\n                backendInfo.initialized = true;\n                return backendInfo.backend;\n            }\n            catch (e) {\n                if (!isInitializing) {\n                    errors.push({ name: backendName, err: e });\n                }\n                backendInfo.aborted = true;\n            }\n            finally {\n                delete backendInfo.initPromise;\n            }\n        }\n    }\n    throw new Error(`no available backend found. ERR: ${errors.map(e => `[${e.name}] ${e.err}`).join(', ')}`);\n};\n//# sourceMappingURL=backend-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { EnvImpl } from './env-impl';\n/**\n * Represent a set of flags as a global singleton.\n */\nexport const env = new EnvImpl();\n//# sourceMappingURL=env.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nexport class EnvImpl {\n    constructor() {\n        this.wasm = {};\n        this.webgl = {};\n        this.webgpu = {};\n        this.logLevelInternal = 'warning';\n    }\n    // TODO standadize the getter and setter convention in env for other fields.\n    set logLevel(value) {\n        if (value === undefined) {\n            return;\n        }\n        if (typeof value !== 'string' || ['verbose', 'info', 'warning', 'error', 'fatal'].indexOf(value) === -1) {\n            throw new Error(`Unsupported logging level: ${value}`);\n        }\n        this.logLevelInternal = value;\n    }\n    get logLevel() {\n        return this.logLevelInternal;\n    }\n}\n//# sourceMappingURL=env-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP = new Map([\n    ['float32', Float32Array],\n    ['uint8', Uint8Array],\n    ['int8', Int8Array],\n    ['uint16', Uint16Array],\n    ['int16', Int16Array],\n    ['int32', Int32Array],\n    ['bool', Uint8Array],\n    ['float64', Float64Array],\n    ['uint32', Uint32Array],\n]);\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP = new Map([\n    [Float32Array, 'float32'],\n    [Uint8Array, 'uint8'],\n    [Int8Array, 'int8'],\n    [Uint16Array, 'uint16'],\n    [Int16Array, 'int16'],\n    [Int32Array, 'int32'],\n    [Float64Array, 'float64'],\n    [Uint32Array, 'uint32'],\n]);\n// the following code allows delaying execution of BigInt checking. This allows lazy initialization for\n// NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP and NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP, which allows BigInt polyfill\n// if available.\nlet isBigIntChecked = false;\nconst checkBigInt = () => {\n    if (!isBigIntChecked) {\n        isBigIntChecked = true;\n        const isBigInt64ArrayAvailable = typeof BigInt64Array !== 'undefined' && typeof BigInt64Array.from === 'function';\n        const isBigUint64ArrayAvailable = typeof BigUint64Array !== 'undefined' && typeof BigUint64Array.from === 'function';\n        if (isBigInt64ArrayAvailable) {\n            NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('int64', BigInt64Array);\n            NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array, 'int64');\n        }\n        if (isBigUint64ArrayAvailable) {\n            NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('uint64', BigUint64Array);\n            NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array, 'uint64');\n        }\n    }\n};\n/**\n * calculate size from dims.\n *\n * @param dims the dims array. May be an illegal input.\n */\nconst calculateSize = (dims) => {\n    let size = 1;\n    for (let i = 0; i < dims.length; i++) {\n        const dim = dims[i];\n        if (typeof dim !== 'number' || !Number.isSafeInteger(dim)) {\n            throw new TypeError(`dims[${i}] must be an integer, got: ${dim}`);\n        }\n        if (dim < 0) {\n            throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${dim}`);\n        }\n        size *= dim;\n    }\n    return size;\n};\nexport class Tensor {\n    constructor(arg0, arg1, arg2) {\n        checkBigInt();\n        let type;\n        let data;\n        let dims;\n        // check whether arg0 is type or data\n        if (typeof arg0 === 'string') {\n            //\n            // Override: constructor(type, data, ...)\n            //\n            type = arg0;\n            dims = arg2;\n            if (arg0 === 'string') {\n                // string tensor\n                if (!Array.isArray(arg1)) {\n                    throw new TypeError('A string tensor\\'s data must be a string array.');\n                }\n                // we don't check whether every element in the array is string; this is too slow. we assume it's correct and\n                // error will be populated at inference\n                data = arg1;\n            }\n            else {\n                // numeric tensor\n                const typedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(arg0);\n                if (typedArrayConstructor === undefined) {\n                    throw new TypeError(`Unsupported tensor type: ${arg0}.`);\n                }\n                if (Array.isArray(arg1)) {\n                    // use 'as any' here because TypeScript's check on type of 'SupportedTypedArrayConstructors.from()' produces\n                    // incorrect results.\n                    // 'typedArrayConstructor' should be one of the typed array prototype objects.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = typedArrayConstructor.from(arg1);\n                }\n                else if (arg1 instanceof typedArrayConstructor) {\n                    data = arg1;\n                }\n                else {\n                    throw new TypeError(`A ${type} tensor's data must be type of ${typedArrayConstructor}`);\n                }\n            }\n        }\n        else {\n            //\n            // Override: constructor(data, ...)\n            //\n            dims = arg1;\n            if (Array.isArray(arg0)) {\n                // only boolean[] and string[] is supported\n                if (arg0.length === 0) {\n                    throw new TypeError('Tensor type cannot be inferred from an empty array.');\n                }\n                const firstElementType = typeof arg0[0];\n                if (firstElementType === 'string') {\n                    type = 'string';\n                    data = arg0;\n                }\n                else if (firstElementType === 'boolean') {\n                    type = 'bool';\n                    // 'arg0' is of type 'boolean[]'. Uint8Array.from(boolean[]) actually works, but typescript thinks this is\n                    // wrong type. We use 'as any' to make it happy.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = Uint8Array.from(arg0);\n                }\n                else {\n                    throw new TypeError(`Invalid element type of data array: ${firstElementType}.`);\n                }\n            }\n            else {\n                // get tensor type from TypedArray\n                const mappedType = NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(arg0.constructor);\n                if (mappedType === undefined) {\n                    throw new TypeError(`Unsupported type for tensor data: ${arg0.constructor}.`);\n                }\n                type = mappedType;\n                data = arg0;\n            }\n        }\n        // type and data is processed, now processing dims\n        if (dims === undefined) {\n            // assume 1-D tensor if dims omitted\n            dims = [data.length];\n        }\n        else if (!Array.isArray(dims)) {\n            throw new TypeError('A tensor\\'s dims must be a number array');\n        }\n        // perform check\n        const size = calculateSize(dims);\n        if (size !== data.length) {\n            throw new Error(`Tensor's size(${size}) does not match data length(${data.length}).`);\n        }\n        this.dims = dims;\n        this.type = type;\n        this.data = data;\n        this.size = size;\n    }\n    // #endregion\n    /**\n     * Create a new tensor object from image object\n     *\n     * @param buffer - Extracted image buffer data - assuming RGBA format\n     * @param imageFormat - input image configuration - required configurations height, width, format\n     * @param tensorFormat - output tensor configuration - Default is RGB format\n     */\n    static bufferToTensor(buffer, options) {\n        if (buffer === undefined) {\n            throw new Error('Image buffer must be defined');\n        }\n        if (options.height === undefined || options.width === undefined) {\n            throw new Error('Image height and width must be defined');\n        }\n        if (options.tensorLayout === 'NHWC') {\n            throw new Error('NHWC Tensor layout is not supported yet');\n        }\n        const { height, width } = options;\n        const norm = options.norm ?? { mean: 255, bias: 0 };\n        let normMean;\n        let normBias;\n        if (typeof (norm.mean) === 'number') {\n            normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n        }\n        else {\n            normMean = [norm.mean[0], norm.mean[1], norm.mean[2], norm.mean[3] ?? 255];\n        }\n        if (typeof (norm.bias) === 'number') {\n            normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n        }\n        else {\n            normBias = [norm.bias[0], norm.bias[1], norm.bias[2], norm.bias[3] ?? 0];\n        }\n        const inputformat = options.bitmapFormat !== undefined ? options.bitmapFormat : 'RGBA';\n        // default value is RGBA since imagedata and HTMLImageElement uses it\n        const outputformat = options.tensorFormat !== undefined ?\n            (options.tensorFormat !== undefined ? options.tensorFormat : 'RGB') :\n            'RGB';\n        const stride = height * width;\n        const float32Data = outputformat === 'RGBA' ? new Float32Array(stride * 4) : new Float32Array(stride * 3);\n        // Default pointer assignments\n        let step = 4, rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n        let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n        // Updating the pointer assignments based on the input image format\n        if (inputformat === 'RGB') {\n            step = 3;\n            rImagePointer = 0;\n            gImagePointer = 1;\n            bImagePointer = 2;\n            aImagePointer = -1;\n        }\n        // Updating the pointer assignments based on the output tensor format\n        if (outputformat === 'RGBA') {\n            aTensorPointer = stride * 3;\n        }\n        else if (outputformat === 'RBG') {\n            rTensorPointer = 0;\n            bTensorPointer = stride;\n            gTensorPointer = stride * 2;\n        }\n        else if (outputformat === 'BGR') {\n            bTensorPointer = 0;\n            gTensorPointer = stride;\n            rTensorPointer = stride * 2;\n        }\n        for (let i = 0; i < stride; i++, rImagePointer += step, bImagePointer += step, gImagePointer += step, aImagePointer += step) {\n            float32Data[rTensorPointer++] = (buffer[rImagePointer] + normBias[0]) / normMean[0];\n            float32Data[gTensorPointer++] = (buffer[gImagePointer] + normBias[1]) / normMean[1];\n            float32Data[bTensorPointer++] = (buffer[bImagePointer] + normBias[2]) / normMean[2];\n            if (aTensorPointer !== -1 && aImagePointer !== -1) {\n                float32Data[aTensorPointer++] = (buffer[aImagePointer] + normBias[3]) / normMean[3];\n            }\n        }\n        // Float32Array -> ort.Tensor\n        const outputTensor = outputformat === 'RGBA' ? new Tensor('float32', float32Data, [1, 4, height, width]) :\n            new Tensor('float32', float32Data, [1, 3, height, width]);\n        return outputTensor;\n    }\n    static async fromImage(image, options) {\n        // checking the type of image object\n        const isHTMLImageEle = typeof (HTMLImageElement) !== 'undefined' && image instanceof HTMLImageElement;\n        const isImageDataEle = typeof (ImageData) !== 'undefined' && image instanceof ImageData;\n        const isImageBitmap = typeof (ImageBitmap) !== 'undefined' && image instanceof ImageBitmap;\n        const isString = typeof image === 'string';\n        let data;\n        let tensorConfig = options ?? {};\n        // filling and checking image configuration options\n        if (isHTMLImageEle) {\n            // HTMLImageElement - image object - format is RGBA by default\n            const canvas = document.createElement('canvas');\n            canvas.width = image.width;\n            canvas.height = image.height;\n            const pixels2DContext = canvas.getContext('2d');\n            if (pixels2DContext != null) {\n                let height = image.height;\n                let width = image.width;\n                if (options !== undefined && options.resizedHeight !== undefined && options.resizedWidth !== undefined) {\n                    height = options.resizedHeight;\n                    width = options.resizedWidth;\n                }\n                if (options !== undefined) {\n                    tensorConfig = options;\n                    if (options.tensorFormat !== undefined) {\n                        throw new Error('Image input config format must be RGBA for HTMLImageElement');\n                    }\n                    else {\n                        tensorConfig.tensorFormat = 'RGBA';\n                    }\n                    if (options.height !== undefined && options.height !== height) {\n                        throw new Error('Image input config height doesn\\'t match HTMLImageElement height');\n                    }\n                    else {\n                        tensorConfig.height = height;\n                    }\n                    if (options.width !== undefined && options.width !== width) {\n                        throw new Error('Image input config width doesn\\'t match HTMLImageElement width');\n                    }\n                    else {\n                        tensorConfig.width = width;\n                    }\n                }\n                else {\n                    tensorConfig.tensorFormat = 'RGBA';\n                    tensorConfig.height = height;\n                    tensorConfig.width = width;\n                }\n                pixels2DContext.drawImage(image, 0, 0);\n                data = pixels2DContext.getImageData(0, 0, width, height).data;\n            }\n            else {\n                throw new Error('Can not access image data');\n            }\n        }\n        else if (isImageDataEle) {\n            // ImageData - image object - format is RGBA by default\n            const format = 'RGBA';\n            let height;\n            let width;\n            if (options !== undefined && options.resizedWidth !== undefined && options.resizedHeight !== undefined) {\n                height = options.resizedHeight;\n                width = options.resizedWidth;\n            }\n            else {\n                height = image.height;\n                width = image.width;\n            }\n            if (options !== undefined) {\n                tensorConfig = options;\n                if (options.bitmapFormat !== undefined && options.bitmapFormat !== format) {\n                    throw new Error('Image input config format must be RGBA for ImageData');\n                }\n                else {\n                    tensorConfig.bitmapFormat = 'RGBA';\n                }\n            }\n            else {\n                tensorConfig.bitmapFormat = 'RGBA';\n            }\n            tensorConfig.height = height;\n            tensorConfig.width = width;\n            if (options !== undefined) {\n                const tempCanvas = document.createElement('canvas');\n                tempCanvas.width = width;\n                tempCanvas.height = height;\n                const pixels2DContext = tempCanvas.getContext('2d');\n                if (pixels2DContext != null) {\n                    pixels2DContext.putImageData(image, 0, 0);\n                    data = pixels2DContext.getImageData(0, 0, width, height).data;\n                }\n                else {\n                    throw new Error('Can not access image data');\n                }\n            }\n            else {\n                data = image.data;\n            }\n        }\n        else if (isImageBitmap) {\n            // ImageBitmap - image object - format must be provided by user\n            if (options === undefined) {\n                throw new Error('Please provide image config with format for Imagebitmap');\n            }\n            if (options.bitmapFormat !== undefined) {\n                throw new Error('Image input config format must be defined for ImageBitmap');\n            }\n            const pixels2DContext = document.createElement('canvas').getContext('2d');\n            if (pixels2DContext != null) {\n                const height = image.height;\n                const width = image.width;\n                pixels2DContext.drawImage(image, 0, 0, width, height);\n                data = pixels2DContext.getImageData(0, 0, width, height).data;\n                if (options !== undefined) {\n                    // using square brackets to avoid TS error - type 'never'\n                    if (options.height !== undefined && options.height !== height) {\n                        throw new Error('Image input config height doesn\\'t match ImageBitmap height');\n                    }\n                    else {\n                        tensorConfig.height = height;\n                    }\n                    // using square brackets to avoid TS error - type 'never'\n                    if (options.width !== undefined && options.width !== width) {\n                        throw new Error('Image input config width doesn\\'t match ImageBitmap width');\n                    }\n                    else {\n                        tensorConfig.width = width;\n                    }\n                }\n                else {\n                    tensorConfig.height = height;\n                    tensorConfig.width = width;\n                }\n                return Tensor.bufferToTensor(data, tensorConfig);\n            }\n            else {\n                throw new Error('Can not access image data');\n            }\n        }\n        else if (isString) {\n            return new Promise((resolve, reject) => {\n                const canvas = document.createElement('canvas');\n                const context = canvas.getContext('2d');\n                if (!image || !context) {\n                    return reject();\n                }\n                const newImage = new Image();\n                newImage.crossOrigin = 'Anonymous';\n                newImage.src = image;\n                newImage.onload = () => {\n                    canvas.width = newImage.width;\n                    canvas.height = newImage.height;\n                    context.drawImage(newImage, 0, 0, canvas.width, canvas.height);\n                    const img = context.getImageData(0, 0, canvas.width, canvas.height);\n                    if (options !== undefined) {\n                        if (options.height !== undefined && options.height !== canvas.height) {\n                            throw new Error('Image input config height doesn\\'t match height');\n                        }\n                        else {\n                            tensorConfig.height = canvas.height;\n                        }\n                        if (options.width !== undefined && options.width !== canvas.width) {\n                            throw new Error('Image input config width doesn\\'t match width');\n                        }\n                        else {\n                            tensorConfig.width = canvas.width;\n                        }\n                    }\n                    else {\n                        tensorConfig.height = canvas.height;\n                        tensorConfig.width = canvas.width;\n                    }\n                    resolve(Tensor.bufferToTensor(img.data, tensorConfig));\n                };\n            });\n        }\n        else {\n            throw new Error('Input data provided is not supported - aborted tensor creation');\n        }\n        if (data !== undefined) {\n            return Tensor.bufferToTensor(data, tensorConfig);\n        }\n        else {\n            throw new Error('Input data provided is not supported - aborted tensor creation');\n        }\n    }\n    toDataURL(options) {\n        const canvas = document.createElement('canvas');\n        canvas.width = this.dims[3];\n        canvas.height = this.dims[2];\n        const pixels2DContext = canvas.getContext('2d');\n        if (pixels2DContext != null) {\n            // Default values for height and width & format\n            let width;\n            let height;\n            if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n                width = this.dims[2];\n                height = this.dims[3];\n            }\n            else { // Default layout is NCWH\n                width = this.dims[3];\n                height = this.dims[2];\n            }\n            const inputformat = options?.format !== undefined ? options.format : 'RGB';\n            const norm = options?.norm;\n            let normMean;\n            let normBias;\n            if (norm === undefined || norm.mean === undefined) {\n                normMean = [255, 255, 255, 255];\n            }\n            else {\n                if (typeof (norm.mean) === 'number') {\n                    normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n                }\n                else {\n                    normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 0];\n                    if (norm.mean[3] !== undefined) {\n                        normMean[3] = norm.mean[3];\n                    }\n                }\n            }\n            if (norm === undefined || norm.bias === undefined) {\n                normBias = [0, 0, 0, 0];\n            }\n            else {\n                if (typeof (norm.bias) === 'number') {\n                    normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n                }\n                else {\n                    normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n                    if (norm.bias[3] !== undefined) {\n                        normBias[3] = norm.bias[3];\n                    }\n                }\n            }\n            const stride = height * width;\n            // Default pointer assignments\n            let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n            // Updating the pointer assignments based on the input image format\n            if (inputformat === 'RGBA') {\n                rTensorPointer = 0;\n                gTensorPointer = stride;\n                bTensorPointer = stride * 2;\n                aTensorPointer = stride * 3;\n            }\n            else if (inputformat === 'RGB') {\n                rTensorPointer = 0;\n                gTensorPointer = stride;\n                bTensorPointer = stride * 2;\n            }\n            else if (inputformat === 'RBG') {\n                rTensorPointer = 0;\n                bTensorPointer = stride;\n                gTensorPointer = stride * 2;\n            }\n            for (let i = 0; i < height; i++) {\n                for (let j = 0; j < width; j++) {\n                    const R = (this.data[rTensorPointer++] - normBias[0]) * normMean[0]; // R value\n                    const G = (this.data[gTensorPointer++] - normBias[1]) * normMean[1]; // G value\n                    const B = (this.data[bTensorPointer++] - normBias[2]) * normMean[2]; // B value\n                    const A = aTensorPointer === -1 ?\n                        255 :\n                        (this.data[aTensorPointer++] - normBias[3]) * normMean[3]; // A value\n                    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n                    pixels2DContext.fillStyle = 'rgba(' + R + ',' + G + ',' + B + ',' + A + ')';\n                    pixels2DContext.fillRect(j, i, 1, 1);\n                }\n            }\n            return canvas.toDataURL();\n        }\n        else {\n            throw new Error('Can not access image data');\n        }\n    }\n    toImageData(options) {\n        const pixels2DContext = document.createElement('canvas').getContext('2d');\n        let image;\n        if (pixels2DContext != null) {\n            // Default values for height and width & format\n            let width;\n            let height;\n            let channels;\n            if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n                width = this.dims[2];\n                height = this.dims[1];\n                channels = this.dims[3];\n            }\n            else { // Default layout is NCWH\n                width = this.dims[3];\n                height = this.dims[2];\n                channels = this.dims[1];\n            }\n            const inputformat = options !== undefined ? (options.format !== undefined ? options.format : 'RGB') : 'RGB';\n            const norm = options?.norm;\n            let normMean;\n            let normBias;\n            if (norm === undefined || norm.mean === undefined) {\n                normMean = [255, 255, 255, 255];\n            }\n            else {\n                if (typeof (norm.mean) === 'number') {\n                    normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n                }\n                else {\n                    normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 255];\n                    if (norm.mean[3] !== undefined) {\n                        normMean[3] = norm.mean[3];\n                    }\n                }\n            }\n            if (norm === undefined || norm.bias === undefined) {\n                normBias = [0, 0, 0, 0];\n            }\n            else {\n                if (typeof (norm.bias) === 'number') {\n                    normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n                }\n                else {\n                    normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n                    if (norm.bias[3] !== undefined) {\n                        normBias[3] = norm.bias[3];\n                    }\n                }\n            }\n            const stride = height * width;\n            if (options !== undefined) {\n                if (options.height !== undefined && options.height !== height) {\n                    throw new Error('Image output config height doesn\\'t match tensor height');\n                }\n                if (options.width !== undefined && options.width !== width) {\n                    throw new Error('Image output config width doesn\\'t match tensor width');\n                }\n                if (options.format !== undefined && (channels === 4 && options.format !== 'RGBA') ||\n                    (channels === 3 && (options.format !== 'RGB' && options.format !== 'BGR'))) {\n                    throw new Error('Tensor format doesn\\'t match input tensor dims');\n                }\n            }\n            // Default pointer assignments\n            const step = 4;\n            let rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n            let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n            // Updating the pointer assignments based on the input image format\n            if (inputformat === 'RGBA') {\n                rTensorPointer = 0;\n                gTensorPointer = stride;\n                bTensorPointer = stride * 2;\n                aTensorPointer = stride * 3;\n            }\n            else if (inputformat === 'RGB') {\n                rTensorPointer = 0;\n                gTensorPointer = stride;\n                bTensorPointer = stride * 2;\n            }\n            else if (inputformat === 'RBG') {\n                rTensorPointer = 0;\n                bTensorPointer = stride;\n                gTensorPointer = stride * 2;\n            }\n            image = pixels2DContext.createImageData(width, height);\n            for (let i = 0; i < height * width; rImagePointer += step, gImagePointer += step, bImagePointer += step, aImagePointer += step, i++) {\n                image.data[rImagePointer] = (this.data[rTensorPointer++] - normBias[0]) * normMean[0]; // R value\n                image.data[gImagePointer] = (this.data[gTensorPointer++] - normBias[1]) * normMean[1]; // G value\n                image.data[bImagePointer] = (this.data[bTensorPointer++] - normBias[2]) * normMean[2]; // B value\n                image.data[aImagePointer] = aTensorPointer === -1 ?\n                    255 :\n                    (this.data[aTensorPointer++] - normBias[3]) * normMean[3]; // A value\n            }\n        }\n        else {\n            throw new Error('Can not access image data');\n        }\n        return image;\n    }\n    // #endregion\n    // #region tensor utilities\n    reshape(dims) {\n        return new Tensor(this.type, this.data, dims);\n    }\n}\n//# sourceMappingURL=tensor-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { Tensor as TensorImpl } from './tensor-impl';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Tensor = TensorImpl;\n//# sourceMappingURL=tensor.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { resolveBackend } from './backend-impl';\nimport { Tensor } from './tensor';\nexport class InferenceSession {\n    constructor(handler) {\n        this.handler = handler;\n    }\n    async run(feeds, arg1, arg2) {\n        const fetches = {};\n        let options = {};\n        // check inputs\n        if (typeof feeds !== 'object' || feeds === null || feeds instanceof Tensor || Array.isArray(feeds)) {\n            throw new TypeError('\\'feeds\\' must be an object that use input names as keys and OnnxValue as corresponding values.');\n        }\n        let isFetchesEmpty = true;\n        // determine which override is being used\n        if (typeof arg1 === 'object') {\n            if (arg1 === null) {\n                throw new TypeError('Unexpected argument[1]: cannot be null.');\n            }\n            if (arg1 instanceof Tensor) {\n                throw new TypeError('\\'fetches\\' cannot be a Tensor');\n            }\n            if (Array.isArray(arg1)) {\n                if (arg1.length === 0) {\n                    throw new TypeError('\\'fetches\\' cannot be an empty array.');\n                }\n                isFetchesEmpty = false;\n                // output names\n                for (const name of arg1) {\n                    if (typeof name !== 'string') {\n                        throw new TypeError('\\'fetches\\' must be a string array or an object.');\n                    }\n                    if (this.outputNames.indexOf(name) === -1) {\n                        throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n                    }\n                    fetches[name] = null;\n                }\n                if (typeof arg2 === 'object' && arg2 !== null) {\n                    options = arg2;\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'options\\' must be an object.');\n                }\n            }\n            else {\n                // decide whether arg1 is fetches or options\n                // if any output name is present and its value is valid OnnxValue, we consider it fetches\n                let isFetches = false;\n                const arg1Keys = Object.getOwnPropertyNames(arg1);\n                for (const name of this.outputNames) {\n                    if (arg1Keys.indexOf(name) !== -1) {\n                        const v = arg1[name];\n                        if (v === null || v instanceof Tensor) {\n                            isFetches = true;\n                            isFetchesEmpty = false;\n                            fetches[name] = v;\n                        }\n                    }\n                }\n                if (isFetches) {\n                    if (typeof arg2 === 'object' && arg2 !== null) {\n                        options = arg2;\n                    }\n                    else if (typeof arg2 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else {\n                    options = arg1;\n                }\n            }\n        }\n        else if (typeof arg1 !== 'undefined') {\n            throw new TypeError('Unexpected argument[1]: must be \\'fetches\\' or \\'options\\'.');\n        }\n        // check if all inputs are in feed\n        for (const name of this.inputNames) {\n            if (typeof feeds[name] === 'undefined') {\n                throw new Error(`input '${name}' is missing in 'feeds'.`);\n            }\n        }\n        // if no fetches is specified, we use the full output names list\n        if (isFetchesEmpty) {\n            for (const name of this.outputNames) {\n                fetches[name] = null;\n            }\n        }\n        // feeds, fetches and options are prepared\n        const results = await this.handler.run(feeds, fetches, options);\n        const returnValue = {};\n        for (const key in results) {\n            if (Object.hasOwnProperty.call(results, key)) {\n                returnValue[key] = new Tensor(results[key].type, results[key].data, results[key].dims);\n            }\n        }\n        return returnValue;\n    }\n    static async create(arg0, arg1, arg2, arg3) {\n        // either load from a file or buffer\n        let filePathOrUint8Array;\n        let options = {};\n        if (typeof arg0 === 'string') {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof Uint8Array) {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof ArrayBuffer ||\n            (typeof SharedArrayBuffer !== 'undefined' && arg0 instanceof SharedArrayBuffer)) {\n            const buffer = arg0;\n            let byteOffset = 0;\n            let byteLength = arg0.byteLength;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 === 'number') {\n                byteOffset = arg1;\n                if (!Number.isSafeInteger(byteOffset)) {\n                    throw new RangeError('\\'byteOffset\\' must be an integer.');\n                }\n                if (byteOffset < 0 || byteOffset >= buffer.byteLength) {\n                    throw new RangeError(`'byteOffset' is out of range [0, ${buffer.byteLength}).`);\n                }\n                byteLength = arg0.byteLength - byteOffset;\n                if (typeof arg2 === 'number') {\n                    byteLength = arg2;\n                    if (!Number.isSafeInteger(byteLength)) {\n                        throw new RangeError('\\'byteLength\\' must be an integer.');\n                    }\n                    if (byteLength <= 0 || byteOffset + byteLength > buffer.byteLength) {\n                        throw new RangeError(`'byteLength' is out of range (0, ${buffer.byteLength - byteOffset}].`);\n                    }\n                    if (typeof arg3 === 'object' && arg3 !== null) {\n                        options = arg3;\n                    }\n                    else if (typeof arg3 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'byteLength\\' must be a number.');\n                }\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n            filePathOrUint8Array = new Uint8Array(buffer, byteOffset, byteLength);\n        }\n        else {\n            throw new TypeError('Unexpected argument[0]: must be \\'path\\' or \\'buffer\\'.');\n        }\n        // get backend hints\n        const eps = options.executionProviders || [];\n        const backendHints = eps.map(i => typeof i === 'string' ? i : i.name);\n        const backend = await resolveBackend(backendHints);\n        const handler = await backend.createSessionHandler(filePathOrUint8Array, options);\n        return new InferenceSession(handler);\n    }\n    startProfiling() {\n        this.handler.startProfiling();\n    }\n    endProfiling() {\n        this.handler.endProfiling();\n    }\n    get inputNames() {\n        return this.handler.inputNames;\n    }\n    get outputNames() {\n        return this.handler.outputNames;\n    }\n}\n//# sourceMappingURL=inference-session-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { InferenceSession as InferenceSessionImpl } from './inference-session-impl';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const InferenceSession = InferenceSessionImpl;\n//# sourceMappingURL=inference-session.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {cpus} from 'os';\n\nimport {initWasm} from './wasm/proxy-wrapper';\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initWasm();\n  }\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(pathOrBuffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow terser to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow terser remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend} from 'onnxruntime-common';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\n\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = require('./backend-wasm').wasmBackend;\n  if (!BUILD_DEFS.DISABLE_WEBGPU) {\n    registerBackend('webgpu', wasmBackend, 5);\n  }\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n  registerBackend('xnnpack', wasmBackend, 9);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport {LOG_DEBUG} from './log';\nimport {TensorView} from './tensor';\nimport {createGpuDataManager, GpuDataManager} from './webgpu/gpu-data-manager';\nimport {RunFunction, WEBGPU_OP_RESOLVE_RULES} from './webgpu/op-resolve-rules';\nimport {ProgramManager} from './webgpu/program-manager';\nimport {ComputeContext, GpuData, GpuDataType, ProgramInfo, ProgramInfoLoader} from './webgpu/types';\n\n/**\n * get a unique key representing the program from the program info,input shapes and types.\n *\n * @returns a unique key is a shorter string than the shader source, which contains all the information to identify a\n * program. if the key is the same, the program shader source should be the same, so we can reuse the program.\n *\n */\nconst getProgramInfoUniqueKey =\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTensorShapes: ReadonlyArray<TensorView['dims']>,\n     inputGpuDataTypes: readonly GpuDataType[]): string => {\n      const inputTensorShapesToString = inputTensorShapes.map(d => `${d.join(',')}`).join('_');\n      const inputGpuDataTypesToString = inputGpuDataTypes.join('_');\n      let key = programInfo.name;\n      if (programInfo.cacheHint) {\n        key += '[' + programInfo.cacheHint + ']';\n      }\n      key += ':' + inputTensorShapesToString + ';' + inputGpuDataTypesToString;\n      return key;\n    };\n\n/**\n * this class is designed to store status and being used as a singleton for JSEP. It will be passed to jsepInit() as\n * the first parameter so that it is stored for future use.\n */\nexport class WebGpuBackend {\n  device: GPUDevice;\n  /**\n   * an instance of GpuDataManager to manage a GpuDataId -> GpuBuffer mapping\n   */\n  gpuDataManager: GpuDataManager;\n  /**\n   * an instance of ProgramManager to build and run WebGPU compute shader program, and manage a ProgramKey -> Program\n   * artifacts mapping\n   */\n  programManager: ProgramManager;\n\n  /**\n   * representing the kernel ID of which is currently being computed (CPU code perspective).\n   * `null` means no kernel is being computed.\n   * only one kernel can be computed at a moment.\n   */\n  currentKernelId: number|null = null;\n  /**\n   * a list of temporary GPU data for the current kernel. should release when the kernel done computation.\n   */\n  private temporaryData: GpuData[];\n  /**\n   * a KernelID -> a GPU data list, which stores persistent GPU data owned by the specific kernel.\n   */\n  private kernelPersistentData: Map<number, GpuData[]>;\n  /**\n   * a KernelID -> a custom data, which stores custom data owned by the specific kernel.\n   */\n  private kernelCustomData: Map<number, {[key: string]: unknown}>;\n  /**\n   * get the custom data of the current kernel\n   */\n  get currentKernelCustomData(): {[key: string]: unknown} {\n    if (this.currentKernelId === null) {\n      throw new Error('currentKernelCustomData(): currentKernelId is null. (should not happen)');\n    }\n\n    let data = this.kernelCustomData.get(this.currentKernelId);\n    if (!data) {\n      data = {};\n      this.kernelCustomData.set(this.currentKernelId, data);\n    }\n\n    return data;\n  }\n\n  /**\n   * a KernelID -> kernel info mapping. value is [ name, run function, [optional] preprocess_attribute_once function ]\n   */\n  kernels: Map<number, [string, RunFunction, [((attribute: unknown) => unknown) | undefined, unknown]]>;\n\n  commandEncoder: GPUCommandEncoder|null = null;\n  computePassEncoder: GPUComputePassEncoder|null = null;\n  pendingDispatchNumber = 0;\n\n  profilingEnabled = false;\n  profilingQuerySet: GPUQuerySet;\n  profilingTimeBase?: bigint;\n\n  async initialize(): Promise<void> {\n    if (!navigator.gpu) {\n      // WebGPU is not available.\n      throw new Error('WebGpuBackend: WebGPU is not available.');\n    }\n\n    const adapter = await navigator.gpu.requestAdapter();\n    if (!adapter) {\n      throw new Error('WebGpuBackend: Failed to get GPU adapter.');\n    }\n\n    const deviceDescriptor: GPUDeviceDescriptor = {\n      requiredLimits: {\n        maxComputeWorkgroupStorageSize: adapter.limits.maxComputeWorkgroupStorageSize,\n        maxComputeWorkgroupsPerDimension: adapter.limits.maxComputeWorkgroupsPerDimension,\n        maxStorageBufferBindingSize: adapter.limits.maxStorageBufferBindingSize,\n      }\n    };\n    // WebGPU Spec: Timestamp Queries Inside Passes\n    // https://github.com/gpuweb/gpuweb/blob/main/proposals/timestamp-query-inside-passes.md\n    if (adapter.features.has('timestamp-query-inside-passes') && env.webgpu.profilingMode === 'default') {\n      this.profilingEnabled = true;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      deviceDescriptor.requiredFeatures = ['timestamp-query-inside-passes' as any];\n    }\n\n    this.device = await adapter.requestDevice(deviceDescriptor);\n    this.gpuDataManager = createGpuDataManager(this);\n    this.programManager = new ProgramManager(this);\n    this.kernels = new Map();\n    this.kernelPersistentData = new Map();\n    this.kernelCustomData = new Map();\n    // TODO: set up flags\n\n    this.device.onuncapturederror = ev => {\n      if (ev.error instanceof GPUValidationError) {\n        // eslint-disable-next-line no-console\n        console.error(`An uncaught WebGPU validation error was raised: ${ev.error.message}`);\n      }\n    };\n\n    if (this.profilingEnabled) {\n      this.profilingQuerySet = this.device.createQuerySet({\n        type: 'timestamp',\n        count: 2,\n      });\n    }\n  }\n\n  dispose(): void {\n    // currently, we do not do anything in this function. In all known use cases, we don't have the requirement to\n    // actually dispose the WebGpuBackend instance, because it's always used as a singleton.\n    //\n    // revisit this place if we get real requirement to dispose the instance.\n  }\n\n  getCommandEncoder(): GPUCommandEncoder {\n    if (!this.commandEncoder) {\n      this.commandEncoder = this.device.createCommandEncoder();\n    }\n    return this.commandEncoder;\n  }\n\n  getComputePassEncoder(): GPUComputePassEncoder {\n    if (!this.computePassEncoder) {\n      this.computePassEncoder = this.getCommandEncoder().beginComputePass();\n    }\n    return this.computePassEncoder;\n  }\n\n  endComputePass(): void {\n    if (this.computePassEncoder) {\n      this.computePassEncoder.end();\n      this.computePassEncoder = null;\n    }\n  }\n\n  flush(): void {\n    this.endComputePass();\n    this.device.queue.submit([this.getCommandEncoder().finish()]);\n    this.gpuDataManager.refreshPendingBuffers();\n    this.commandEncoder = null;\n    this.pendingDispatchNumber = 0;\n  }\n\n  /**\n   * run a WebGPU program.\n   * @param program either a ProgramInfo instance containing metadata including the shader code, or a function that\n   * can be called and return a ProgramInfo instance\n   * @param inputs a TensorView array. each element represents a value already exists in GPU.\n   * @param outputIndices an indices array. each element can be either -1 (temporary data), -2 (persistent data) or an\n   * index to the kernel's output.\n   * @param createKernelOutput a callback function that create a value to kernel's output with the given index\n   * @param createIntermediateOutput a callback function that create a value as a intermediate value, either temporary\n   * or persistent (owned by the current kernel)\n   * @returns a TensorView array representing the result.\n   */\n  run(program: ProgramInfoLoader|ProgramInfo, inputs: readonly TensorView[], outputIndices: readonly number[],\n      createKernelOutput: (index: number, dataType: number, dims: readonly number[]) => TensorView,\n      createIntermediateOutput: (dataType: number, dims: readonly number[]) => TensorView): TensorView[] {\n    if (inputs.length !== program.inputTypes.length) {\n      throw new Error(`Input size must be equal to ${program.inputTypes.length}.`);\n    }\n\n    // create info for inputs\n    const inputDatas: GpuData[] = [];\n    for (let i = 0; i < inputs.length; ++i) {\n      const gpuData = this.gpuDataManager.get(inputs[i].data);\n      if (!gpuData) {\n        throw new Error(`no GPU data for input: ${inputs[i].data}`);\n      }\n      inputDatas[i] = gpuData;\n    }\n\n    const key = getProgramInfoUniqueKey(program, inputs.map(i => i.dims), inputDatas.map(i => i.type));\n    let artifact = this.programManager.getArtifact(key);\n    const programInfo = artifact ?\n        artifact.programInfo :\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\n                                                                    (program as ProgramInfo));\n\n    // check output indices\n    const validatedOutputIndices = outputIndices.length === 0 ? programInfo.outputs.map((_, i) => i) : outputIndices;\n    if (validatedOutputIndices.length !== programInfo.outputs.length) {\n      throw new Error(`Output size ${validatedOutputIndices.length} must be equal to ${programInfo.outputs.length}.`);\n    }\n\n    // create info for outputs\n    const outputTensorViews: TensorView[] = [];\n    const outputDatas: GpuData[] = [];\n    for (let i = 0; i < programInfo.outputs.length; ++i) {\n      // value -1 and -2 are used for creating temporary and persistent outputs. so -2, -1 and 0, 1, 2, ... are valid\n      // output indices. see type definition of ComputeContextInputsOutputsMapping for more details.\n      if (!Number.isInteger(validatedOutputIndices[i]) || validatedOutputIndices[i] < -2 ||\n          validatedOutputIndices[i] >= programInfo.outputs.length) {\n        throw new Error(`Invalid output index: ${validatedOutputIndices[i]}`);\n      }\n      const isTemporary = validatedOutputIndices[i] === -1;\n      const isPersistent = validatedOutputIndices[i] === -2;\n      const tensorView = (isTemporary || isPersistent) ?\n          createIntermediateOutput(programInfo.outputs[i].dataType, programInfo.outputs[i].dims) :\n          createKernelOutput(validatedOutputIndices[i], programInfo.outputs[i].dataType, programInfo.outputs[i].dims);\n      const gpuData = this.gpuDataManager.get(tensorView.data);\n      if (!gpuData) {\n        throw new Error(`no GPU data for output: ${tensorView.data}`);\n      }\n      if (isTemporary) {\n        this.temporaryData.push(gpuData);\n      }\n      if (isPersistent) {\n        let persistentData = this.kernelPersistentData.get(this.currentKernelId!);\n        if (!persistentData) {\n          persistentData = [];\n          this.kernelPersistentData.set(this.currentKernelId!, persistentData);\n        }\n        persistentData.push(gpuData);\n      }\n      outputTensorViews.push(tensorView);\n      outputDatas.push(gpuData);\n    }\n\n    const normalizedDispatchGroup = this.programManager.normalizeDispatchGroupSize(programInfo.dispatchGroup(inputs));\n\n    if (!artifact) {\n      artifact = this.programManager.build(programInfo, normalizedDispatchGroup);\n      this.programManager.setArtifact(key, artifact);\n    }\n\n    LOG_DEBUG(\n        'info',\n        () => `[ProgramManager] run \"${programInfo.name}\" (key=${key}) with ${normalizedDispatchGroup[0]}x${\n            normalizedDispatchGroup[1]}x${normalizedDispatchGroup[2]}`);\n    this.programManager.run(artifact, inputDatas, outputDatas, normalizedDispatchGroup);\n\n    return outputTensorViews;\n  }\n\n  upload(gpuDataId: number, data: Uint8Array): void {\n    this.gpuDataManager.upload(gpuDataId, data);\n  }\n\n  memcpy(src: number, dst: number): void {\n    this.gpuDataManager.memcpy(src, dst);\n  }\n\n  async download(gpuDataId: number, getTargetBuffer: () => Uint8Array): Promise<void> {\n    const arrayBuffer = await this.gpuDataManager.download(gpuDataId);\n\n    // the underlying buffer may be changed after the async function is called. so we use a getter function to make sure\n    // the buffer is up-to-date.\n    const data = getTargetBuffer();\n    data.set(new Uint8Array(arrayBuffer));\n  }\n\n  alloc(size: number): number {\n    return this.gpuDataManager.create(size).id;\n  }\n\n  free(ptr: number): number {\n    return this.gpuDataManager.release(ptr);\n  }\n\n  createKernel(name: string, kernelId: number, attribute: unknown): void {\n    const op = WEBGPU_OP_RESOLVE_RULES.get(name);\n    if (!op) {\n      throw new Error(`kernel not implemented: ${name}`);\n    }\n\n    this.kernels.set(kernelId, [name, op[0], [op[1], attribute]]);\n  }\n\n  releaseKernel(kernelId: number): void {\n    const persistentData = this.kernelPersistentData.get(kernelId);\n    if (persistentData) {\n      for (const data of persistentData) {\n        this.gpuDataManager.release(data.id);\n      }\n      this.kernelPersistentData.delete(kernelId);\n    }\n\n    this.kernelCustomData.delete(kernelId);\n    this.kernels.delete(kernelId);\n  }\n\n  computeKernel(kernelId: number, context: ComputeContext): number {\n    const kernel = this.kernels.get(kernelId);\n    if (!kernel) {\n      throw new Error(`kernel not created: ${kernelId}`);\n    }\n    const [name, kernelEntry, attributes] = kernel;\n    if (this.currentKernelId !== null) {\n      throw new Error(`kernel \"${name}\" is not allowed to be called recursively`);\n    }\n    this.currentKernelId = kernelId;\n\n    // parse attributes if necessary\n    if (attributes[0]) {\n      attributes[1] = attributes[0](attributes[1]);\n      attributes[0] = undefined;\n    }\n\n    LOG_DEBUG('info', () => `[WebGPU] Start to run kernel \"${name}\"...`);\n\n    this.temporaryData = [];\n    try {\n      kernelEntry(context, attributes[1]);\n      return 0;  // ORT_OK\n    } catch (e) {\n      LOG_DEBUG('warning', `[WebGPU] Kernel \"${name}\" failed. Error: ${e}`);\n      return 1;  // ORT_FAIL\n    } finally {\n      for (const data of this.temporaryData) {\n        this.gpuDataManager.release(data.id);\n      }\n      this.temporaryData = [];\n      this.currentKernelId = null;\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OrtWasmModule} from '../binding/ort-wasm';\nimport {getTensorElementSize} from '../wasm-common';\n\nimport {WebGpuBackend} from './backend-webgpu';\nimport {LOG_DEBUG} from './log';\nimport {TensorView} from './tensor';\nimport {ShapeUtil} from './util';\nimport {ComputeContext, ComputeContextInputsOutputsMapping, ProgramInfo, ProgramInfoLoader} from './webgpu/types';\n\n/* eslint-disable no-bitwise */\n\nclass TensorViewImpl implements TensorView {\n  constructor(\n      private module: OrtWasmModule, public readonly dataType: number, public readonly data: number,\n      public readonly dims: readonly number[]) {}\n\n  getFloat32Array(): Float32Array {\n    return new Float32Array(this.module.HEAP8.buffer, this.data, ShapeUtil.size(this.dims));\n  }\n\n  reshape(newDims: readonly number[]): TensorView {\n    if (ShapeUtil.size(newDims) !== ShapeUtil.size(this.dims)) {\n      throw new Error('Invalid new shape');\n    }\n    return new TensorViewImpl(this.module, this.dataType, this.data, newDims);\n  }\n}\n\nclass ComputeContextImpl implements ComputeContext {\n  readonly opKernelContext: number;\n  readonly inputs: readonly TensorView[];\n  get customData(): {[key: string]: unknown} {\n    return this.backend.currentKernelCustomData;\n  }\n  constructor(private module: OrtWasmModule, private backend: WebGpuBackend, contextDataOffset: number) {\n    const heapU32 = module.HEAPU32;\n\n    // extract context data\n    let dataIndex = (contextDataOffset >> 2);\n    this.opKernelContext = heapU32[dataIndex++];\n    const inputCount = heapU32[dataIndex++];\n\n    const inputs: TensorView[] = [];\n    for (let i = 0; i < inputCount; i++) {\n      const dataType = heapU32[dataIndex++];\n      const data = heapU32[dataIndex++];\n      const dim = heapU32[dataIndex++];\n      const dims: number[] = [];\n      for (let d = 0; d < dim; d++) {\n        dims.push(heapU32[dataIndex++]);\n      }\n      inputs.push(new TensorViewImpl(module, dataType, data, dims));\n    }\n    this.inputs = inputs;\n  }\n\n  compute(program: ProgramInfoLoader|ProgramInfo, inputsOutputsMapping?: ComputeContextInputsOutputsMapping):\n      TensorView[] {\n    // prepare inputs. inputs should always be valid data.\n    const mappedInputs =\n        inputsOutputsMapping?.inputs?.map(i => typeof i === 'number' ? this.inputs[i] : i) ?? this.inputs;\n    // prepare outputs.\n    const outputIndices = inputsOutputsMapping?.outputs ?? [];\n    const createKernelOutput = (index: number, dataType: number, dims: readonly number[]): TensorView =>\n        new TensorViewImpl(this.module, dataType, this.output(index, dims), dims);\n    const createTemporaryOutput = (dataType: number, dims: readonly number[]): TensorView => {\n      const elementSize = getTensorElementSize(dataType);\n      if (!elementSize) {\n        throw new Error(`Unsupported data type: ${dataType}`);\n      }\n      const bufferSize = elementSize * ShapeUtil.size(dims);\n      return new TensorViewImpl(this.module, dataType, this.backend.gpuDataManager.create(bufferSize).id, dims);\n    };\n    return this.backend.run(program, mappedInputs, outputIndices, createKernelOutput, createTemporaryOutput);\n  }\n\n  output(index: number, dims: readonly number[]): number {\n    const stack = this.module.stackSave();\n    try {\n      const data = this.module.stackAlloc((1 + dims.length) * 4 /* sizeof(size_t) */);\n      let offset = data >> 2;\n      this.module.HEAPU32[offset++] = dims.length;\n      for (let i = 0; i < dims.length; i++) {\n        this.module.HEAPU32[offset++] = dims[i];\n      }\n      return this.module._JsepOutput(this.opKernelContext, index, data);\n    } finally {\n      this.module.stackRestore(stack);\n    }\n  }\n}\n\nexport const init = async(module: OrtWasmModule): Promise<void> => {\n  const init = module.jsepInit;\n  if (init && navigator.gpu) {\n    const backend = new WebGpuBackend();\n    await backend.initialize();\n\n    init(\n        // backend\n        {backend},\n\n        // jsepAlloc()\n        (size: number) => backend.alloc(size),\n\n        // jsepFree()\n        (ptr: number) => backend.free(ptr),\n\n        // jsepCopy(src, dst, size, isSourceGpu)\n        (src: number, dst: number, size: number, isSourceGpu = false) => {\n          if (isSourceGpu) {\n            LOG_DEBUG('verbose', () => `[WebGPU] jsepCopyGpuToGpu: src=${src}, dst=${dst}, size=${size}`);\n            backend.memcpy(src, dst);\n          } else {\n            LOG_DEBUG('verbose', () => `[WebGPU] jsepCopyCpuToGpu: dataOffset=${src}, gpuDataId=${dst}, size=${size}`);\n            const data = module.HEAPU8.subarray(src, src + size);\n            backend.upload(dst, data);\n          }\n        },\n\n        // jsepCopyAsync(src, dst, size)\n        async(gpuDataId: number, dataOffset: number, size: number):\n            Promise<void> => {\n              LOG_DEBUG(\n                  'verbose',\n                  () => `[WebGPU] jsepCopyGpuToCpu: gpuDataId=${gpuDataId}, dataOffset=${dataOffset}, size=${size}`);\n\n              await backend.download(gpuDataId, () => module.HEAPU8.subarray(dataOffset, dataOffset + size));\n            },\n\n        // jsepCreateKernel\n        (name: string, kernel: number, attribute: unknown) => backend.createKernel(name, kernel, attribute),\n\n        // jsepReleaseKernel\n        (kernel: number) => backend.releaseKernel(kernel),\n\n        // jsepRun\n        (kernel: number, contextDataOffset: number) => {\n          LOG_DEBUG('verbose', () => `[WebGPU] jsepRun: kernel=${kernel}, contextDataOffset=${contextDataOffset}`);\n          const context = new ComputeContextImpl(module, backend, contextDataOffset);\n          return backend.computeKernel(kernel, context);\n        });\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport {logLevelStringToEnum} from '../wasm-common';\n\ntype LogLevel = NonNullable<typeof env.logLevel>;\ntype MessageString = string;\ntype MessageFunction = () => string;\ntype Message = MessageString|MessageFunction;\n\nconst logLevelPrefix = ['V', 'I', 'W', 'E', 'F'];\n\nconst doLog = (level: number, message: string): void => {\n  // eslint-disable-next-line no-console\n  console.log(`[${logLevelPrefix[level]},${new Date().toISOString()}]${message}`);\n};\n\n/**\n * A simple logging utility to log messages to the console.\n */\nexport const LOG = (logLevel: LogLevel, msg: Message): void => {\n  const messageLevel = logLevelStringToEnum(logLevel);\n  const configLevel = logLevelStringToEnum(env.logLevel!);\n  if (messageLevel >= configLevel) {\n    doLog(messageLevel, typeof msg === 'function' ? msg() : msg);\n  }\n};\n\n/**\n * A simple logging utility to log messages to the console. Only logs when debug is enabled.\n */\nexport const LOG_DEBUG: typeof LOG = (...args: Parameters<typeof LOG>) => {\n  if (env.debug) {\n    LOG(...args);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable no-param-reassign */\n\nexport class MatMulUtil {\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n}\n\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    if (arank === 0) {\n      return bdims;\n    }\n    if (brank === 0) {\n      return adims;\n    }\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n\nexport class ShapeUtil {\n  /**\n   * calculate the size (number of elements)\n   */\n  static size(dims: readonly number[]): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  /**\n   * calculate the size (number of elements) from the given axis (inclusive)\n   */\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  /**\n   * calculate the size (number of elements) to the given axis (exclusive)\n   */\n  static sizeToDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  /**\n   * calculate the size (number of elements) from and to the given axis [start, end)\n   */\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be 0 or negative.\n      if (dims[i] <= 0) {\n        throw new Error(\n            // eslint-disable-next-line max-len\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  static computeStrides(dims: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [1];\n    }\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = dims[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * dims[i + 1];\n    }\n    return strides;\n  }\n\n  /**\n   * normailze axis of range [-r, r) into [0, r).\n   */\n  static normalizeAxis(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  static normalizeAxes(axes: readonly number[], tensorRank?: number): number[] {\n    return axes.map(x => this.normalizeAxis(x, tensorRank ?? axes.length));\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n}\n\nexport class PoolConvUtil {\n  /**\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   */\n  static adjustPoolAttributes(\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\n      dilations: number[], pads: number[]): void {\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\n    }\n\n    if (isGlobalOperator) {\n      // adjust kernel shape to cover the input dims\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        if (dim >= kernelShape.length) {\n          kernelShape.push(inputDims[dim + 2]);\n        } else {\n          kernelShape[dim] = inputDims[dim + 2];\n        }\n      }\n    }\n\n    // adjust strides length to match kernel shape length\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < strides.length) {\n        if (strides[dim] < 0) {\n          throw new Error('strides should be greater than or equal to 1');\n        }\n      } else {\n        strides.push(1);\n      }\n    }\n\n    // adjust dilation value\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < dilations.length) {\n        if (dilations[dim] < 0) {\n          throw new Error('dilations should be greater than or equal to 1');\n        }\n      } else {\n        dilations.push(1);\n      }\n    }\n\n    // adjust pads length to match 2 * kernel shape length\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\n      if (dim < pads.length) {\n        if (pads[dim] < 0) {\n          throw new Error('pad should be greater than or equal to 1');\n        }\n      } else {\n        pads.push(0);\n      }\n    }\n\n    // sanity checks for values in kernel shapes and pads\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (kernelShape[dim] <= 0) {\n        throw new Error('kernel shapes need to be greater than 0');\n      }\n\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\n        throw new Error('pads should be smaller than kernel');\n      }\n    }\n  }\n\n  // adjust pad values based on 'autoPad' attribute\n  static adjustPadsBasedOnAutoPad(\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\n      kernelShape: readonly number[], pads: number[], isChannelLast: boolean, autoPad?: string): void {\n    if (!autoPad) {\n      return;\n    }\n\n    if (pads.length !== 2 * (inputDims.length - 2)) {\n      throw new Error('length of pads should be twice the length of data dimensions');\n    }\n\n    if (strides.length !== (inputDims.length - 2)) {\n      throw new Error('length of strides should be the length of data dimensions');\n    }\n\n    if (kernelShape.length !== (inputDims.length - 2)) {\n      throw new Error('length of kernel shapes should be the length of data dimensions');\n    }\n\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\n      PoolConvUtil.adjustPadAndReturnShape(\n          inputDims[dim + (isChannelLast ? 1 : 2)], strides[dim], dilations[dim], kernelShape[dim], pads, dim,\n          dim + inputDims.length - 2, autoPad);\n    }\n  }\n\n  /**\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computePoolOutputShape(\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0) {\n      throw new Error('input shape must be of size greater than 0');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], inputDims[1]];\n\n    PoolConvUtil.computeShapeHelper(\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  /**\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computeConvOutputShape(\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], filterDims[0]];\n\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\n  // called by computePoolOutputShape() and computeConvOutputShape()\n  // adjust pads based on 'autoPad' attribute prior to shape computation\n  private static computeShapeHelper(\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (isGlobalOperator) {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(1);\n      }\n    } else {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n            autoPad));\n      }\n    }\n  }\n\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\n  private static adjustPadAndReturnShape(\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\n      padTailIndex: number, autoPad?: string): number {\n    const dkernel = dilation * (kernel - 1) + 1;\n    if (autoPad && autoPad !== 'NOTSET') {\n      switch (autoPad) {\n        case 'VALID':\n          pads[padHeadIndex] = 0;\n          pads[padTailIndex] = 0;\n          return Math.floor(((inSize - dkernel) / stride) + 1);\n        case 'SAME_LOWER':\n        case 'SAME_UPPER':\n          if (dilation !== 1) {\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\n          } else {\n            const legacyTargetSize = (inSize + stride - 1) / stride;\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\n            pads[padHeadIndex] =\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\n          }\n        default:\n          throw new Error('Unsupported AutoPad type');\n      }\n    } else {\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\n    }\n  }\n}\n\nexport class GemmUtil {\n  // will make sure input shapes are compatible for this op\n  // and return back the shape of the output in the form of a tuple\n  // will throw exception if the input shapes are not compatible\n  static getShapeOfGemmResult(\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\n      biasShape?: readonly number[]): readonly number[] {\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\n      throw new Error('shape need to be of size 2');\n    }\n\n    let M: number;\n    let K: number;\n    let N: number;\n\n    if (transLeft) {\n      M = leftShape[1];\n      K = leftShape[0];\n    } else {\n      M = leftShape[0];\n      K = leftShape[1];\n    }\n\n    let kDim = -1;\n\n    if (transRight) {\n      N = rightShape[0];\n      kDim = 1;\n    } else {\n      N = rightShape[1];\n      kDim = 0;\n    }\n\n    if (rightShape[kDim] !== K) {\n      throw new Error('dimension mismatch');\n    }\n\n    if (M <= 0 || N <= 0 || K <= 0) {\n      throw new Error('invalid shape specified');\n    }\n\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\n      throw new Error('gemm: invalid bias shape for broadcast');\n    }\n\n    return [M, N, K];\n  }\n}\n\n\nexport const MIN_CLIP = -3.4028234663852886e+38;\nexport const MAX_CLIP = 3.4028234663852886e+38;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nclass AttributeWithCacheKeyImpl {\n  constructor(attribute: Record<string, unknown>) {\n    Object.assign(this, attribute);\n  }\n\n  private _cacheKey: string;\n  public get cacheKey(): string {\n    if (!this._cacheKey) {\n      this._cacheKey =\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\n    }\n    return this._cacheKey;\n  }\n}\n\nexport interface AttributeWithCacheKey {\n  readonly cacheKey: string;\n}\n\n/**\n * create a new object from the given attribute, and add a cacheKey property to it\n */\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGpuBackend} from '../backend-webgpu';\nimport {LOG_DEBUG} from '../log';\n\nimport {GpuData, GpuDataId, GpuDataType} from './types';\n\n/**\n * manages GpuDataId -> GpuBuffer\n */\nexport interface GpuDataManager {\n  /**\n   * copy data from CPU to GPU.\n   */\n  upload(id: GpuDataId, data: Uint8Array): void;\n  /**\n   * copy data from GPU to GPU.\n   */\n  memcpy(sourceId: GpuDataId, destinationId: GpuDataId): void;\n  /**\n   * create new data on GPU.\n   */\n  create(size: number, usage?: number): GpuData;\n  /**\n   * get GPU data by ID.\n   */\n  get(id: GpuDataId): GpuData|undefined;\n  /**\n   * release the data on GPU by ID.\n   *\n   * @return size of the data released\n   */\n  release(id: GpuDataId): number;\n  /**\n   * copy data from GPU to CPU.\n   */\n  download(id: GpuDataId): Promise<ArrayBufferLike>;\n\n  /**\n   * refresh the buffers that marked for release.\n   *\n   * when release() is called, the buffer is not released immediately. this is because we need to wait for the commands\n   * to be submitted to the GPU. this function is called after the commands are submitted so that the buffers can be\n   * actually released.\n   */\n  refreshPendingBuffers(): void;\n}\n\ninterface StorageCacheValue {\n  gpuData: GpuData;\n  originalSize: number;\n}\n\ninterface DownloadCacheValue {\n  data: Promise<ArrayBufferLike>;\n}\n\n/**\n * normalize the buffer size so that it fits the 128-bits (16 bytes) alignment.\n */\nconst calcNormalizedBufferSize = (size: number) => Math.ceil(size / 16) * 16;\n\nlet guid = 0;\nconst createNewGpuDataId = () => guid++;\n\nclass GpuDataManagerImpl implements GpuDataManager {\n  // GPU Data ID => GPU Data ( storage buffer )\n  storageCache: Map<GpuDataId, StorageCacheValue>;\n\n  // GPU Data ID => GPU Data ( read buffer )\n  downloadCache: Map<GpuDataId, DownloadCacheValue>;\n\n  // pending buffers for uploading ( data is unmapped )\n  private buffersForUploadingPending: GPUBuffer[];\n  // pending buffers for computing\n  private buffersPending: GPUBuffer[];\n\n  constructor(private backend: WebGpuBackend /* , private reuseBuffer: boolean */) {\n    this.storageCache = new Map();\n    this.downloadCache = new Map();\n    this.buffersForUploadingPending = [];\n    this.buffersPending = [];\n  }\n\n  upload(id: GpuDataId, data: Uint8Array): void {\n    const srcArrayBuffer = data.buffer;\n    const srcOffset = data.byteOffset;\n    const srcLength = data.byteLength;\n    const size = calcNormalizedBufferSize(srcLength);\n\n    // get destination gpu buffer\n    const gpuDataCache = this.storageCache.get(id);\n    if (!gpuDataCache) {\n      throw new Error('gpu data for uploading does not exist');\n    }\n    if (gpuDataCache.originalSize !== srcLength) {\n      throw new Error(`inconsistent data size. gpu data size=${gpuDataCache.originalSize}, data size=${srcLength}`);\n    }\n\n    // create gpu buffer\n    const gpuBufferForUploading = this.backend.device.createBuffer(\n        // eslint-disable-next-line no-bitwise\n        {mappedAtCreation: true, size, usage: GPUBufferUsage.MAP_WRITE | GPUBufferUsage.COPY_SRC});\n\n    // copy (upload) data\n    const arrayBuffer = gpuBufferForUploading.getMappedRange();\n    new Uint8Array(arrayBuffer).set(new Uint8Array(srcArrayBuffer, srcOffset, srcLength));\n    gpuBufferForUploading.unmap();\n\n\n    // GPU copy\n    const commandEncoder = this.backend.getCommandEncoder();\n    this.backend.endComputePass();\n    commandEncoder.copyBufferToBuffer(gpuBufferForUploading, 0, gpuDataCache.gpuData.buffer, 0, size);\n\n    LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.upload(id=${id})`);\n\n    this.buffersForUploadingPending.push(gpuBufferForUploading);\n  }\n\n  memcpy(sourceId: GpuDataId, destinationId: GpuDataId): void {\n    // get source gpu buffer\n    const sourceGpuDataCache = this.storageCache.get(sourceId);\n    if (!sourceGpuDataCache) {\n      throw new Error('source gpu data for memcpy does not exist');\n    }\n    // get destination gpu buffer\n    const destinationGpuDataCache = this.storageCache.get(destinationId);\n    if (!destinationGpuDataCache) {\n      throw new Error('destination gpu data for memcpy does not exist');\n    }\n    if (sourceGpuDataCache.originalSize !== destinationGpuDataCache.originalSize) {\n      throw new Error('inconsistent source and destination gpu data size');\n    }\n    const size = calcNormalizedBufferSize(sourceGpuDataCache.originalSize);\n    // GPU copy\n    this.backend.getCommandEncoder().copyBufferToBuffer(\n        sourceGpuDataCache.gpuData.buffer, 0, destinationGpuDataCache.gpuData.buffer, 0, size);\n  }\n\n  // eslint-disable-next-line no-bitwise\n  create(size: number, usage = GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST): GpuData {\n    // !!!\n    // !!! IMPORTANT: TODO: whether we should keep the storage buffer every time, or always create new ones.\n    // !!!                  This need to be figured out by performance test results.\n    // !!!\n\n    const bufferSize = calcNormalizedBufferSize(size);\n\n    // create gpu buffer\n    const gpuBuffer = this.backend.device.createBuffer({size: bufferSize, usage});\n\n    const gpuData = {id: createNewGpuDataId(), type: GpuDataType.default, buffer: gpuBuffer};\n    this.storageCache.set(gpuData.id, {gpuData, originalSize: size});\n\n    LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.create(size=${size}) => id=${gpuData.id}`);\n    return gpuData;\n  }\n\n  get(id: GpuDataId): GpuData|undefined {\n    return this.storageCache.get(id)?.gpuData;\n  }\n\n  release(id: GpuDataId): number {\n    const cachedData = this.storageCache.get(id);\n    if (!cachedData) {\n      throw new Error('releasing data does not exist');\n    }\n\n    LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.release(id=${id}), gpuDataId=${cachedData.gpuData.id}`);\n\n    this.storageCache.delete(id);\n    this.buffersPending.push(cachedData.gpuData.buffer);\n    // cachedData.gpuData.buffer.destroy();\n\n    const downloadingData = this.downloadCache.get(id);\n    if (downloadingData) {\n      this.downloadCache.delete(id);\n    }\n\n    return cachedData.originalSize;\n  }\n\n  async download(id: GpuDataId): Promise<ArrayBufferLike> {\n    const downloadData = this.downloadCache.get(id);\n    if (downloadData) {\n      return downloadData.data;\n    }\n\n    const cachedData = this.storageCache.get(id);\n    if (!cachedData) {\n      throw new Error('data does not exist');\n    }\n\n    const commandEncoder = this.backend.getCommandEncoder();\n    this.backend.endComputePass();\n    const gpuReadBuffer = this.backend.device.createBuffer(\n        // eslint-disable-next-line no-bitwise\n        {size: cachedData.originalSize, usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ});\n    commandEncoder.copyBufferToBuffer(\n        cachedData.gpuData.buffer /* source buffer */, 0 /* source offset */, gpuReadBuffer /* destination buffer */,\n        0 /* destination offset */, cachedData.originalSize /* size */\n    );\n    this.backend.flush();\n\n    const readDataPromise = new Promise<ArrayBuffer>((resolve) => {\n      gpuReadBuffer.mapAsync(GPUMapMode.READ).then(() => {\n        const data = gpuReadBuffer.getMappedRange().slice(0);\n        gpuReadBuffer.destroy();\n        resolve(data);\n      });\n    });\n\n    this.downloadCache.set(id, {data: readDataPromise});\n\n    return readDataPromise;\n  }\n\n  refreshPendingBuffers(): void {\n    for (const buffer of this.buffersForUploadingPending) {\n      buffer.destroy();\n    }\n    for (const buffer of this.buffersPending) {\n      buffer.destroy();\n    }\n  }\n}\n\nexport const createGpuDataManager = (...args: ConstructorParameters<typeof GpuDataManagerImpl>): GpuDataManager =>\n    new GpuDataManagerImpl(...args);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as binaryOps from './ops/binary-op';\nimport {conv, parseConvAttributes} from './ops/conv';\nimport {gemm, parseGemmAttributes} from './ops/gemm';\nimport {matMul} from './ops/matmul';\nimport * as pool from './ops/pool';\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\nimport * as unaryOps from './ops/unary-op';\nimport {ComputeContext} from './types';\n\nexport type RunFunction = (context: ComputeContext, attribute?: unknown) => void;\nexport type ParseAttributeFunction = (attributeRaw: unknown) => unknown;\nexport type OperatorImplementation = [RunFunction]|[RunFunction, ParseAttributeFunction];\n\nexport const WEBGPU_OP_RESOLVE_RULES: Map<string, OperatorImplementation> = new Map([\n  ['Abs', [unaryOps.abs]],\n  ['Acos', [unaryOps.acos]],\n  ['Acosh', [unaryOps.acosh]],\n  ['Add', [binaryOps.add]],\n  ['Asin', [unaryOps.asin]],\n  ['Asinh', [unaryOps.asinh]],\n  ['Atan', [unaryOps.atan]],\n  ['Atanh', [unaryOps.atanh]],\n  // TODO: support new attributes for AveragePool-10\n  ['AveragePool', [pool.averagePool, pool.parseAveragePoolAttributes]],\n  ['Ceil', [unaryOps.ceil]],\n  ['ClipV10', [unaryOps.clipV10]],\n  ['Clip', [unaryOps.clip]],\n  ['Conv', [conv, parseConvAttributes]],\n  ['Cos', [unaryOps.cos]],\n  ['Cosh', [unaryOps.cosh]],\n  ['Div', [binaryOps.div]],\n  ['Elu', [unaryOps.elu, unaryOps.parseAlphaAttributes]],\n  ['Erf', [unaryOps.erf]],\n  ['Exp', [unaryOps.exp]],\n  ['Floor', [unaryOps.floor]],\n  ['Gemm', [gemm, parseGemmAttributes]],\n  ['GlobalAveragePool', [pool.globalAveragePool, pool.parseGlobalAveragePoolAttributes]],\n  ['GlobalMaxPool', [pool.globalMaxPool, pool.parseGlobalMaxPoolAttributes]],\n  ['LeakyRelu', [unaryOps.leakyRelu, unaryOps.parseAlphaAttributes]],\n  ['MatMul', [matMul]],\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\n  ['MaxPool', [pool.maxPool, pool.parseMaxPoolAttributes]],\n  ['Mul', [binaryOps.mul]],\n  ['Neg', [unaryOps.neg]],\n  ['Pow', [binaryOps.pow]],\n  ['Reciprocal', [unaryOps.reciprocal]],\n  ['Relu', [unaryOps.relu]],\n  ['Sigmoid', [unaryOps.sigmoid]],\n  ['Sin', [unaryOps.sin]],\n  ['Sinh', [unaryOps.sinh]],\n  ['Sqrt', [unaryOps.sqrt]],\n  ['Sub', [binaryOps.sub]],\n  ['Tan', [unaryOps.tan]],\n  ['Tanh', [unaryOps.tanh]],\n  ['ThresholdedRelu', [unaryOps.thresholdedRelu, unaryOps.parseAlphaAttributes]],\n  ['Transpose', [transpose, parseTransposeAttributes]],\n]);\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/activation_util.ts\n//\n// modified to fit the needs of the project\n\nexport declare type Activation = 'linear' | 'relu' | 'prelu' | 'elu' | 'relu6' | 'leakyrelu' | 'sigmoid';\n\nexport const typeSnippet = (component: number) => {\n  switch (component) {\n    case 1:\n      return 'f32';\n    case 2:\n      return 'vec2<f32>';\n    case 3:\n      return 'vec3<f32>';\n    case 4:\n      return 'vec4<f32>';\n    default:\n      throw new Error(`${component}-component is not supported.`);\n  }\n};\n\nexport const activationFnSnippet =\n    (activation?: Activation, _hasPreluActivationWeights = false, _packed = false, _coordsLength = 3): string => {\n      if (!activation) {\n        return '';\n      }\n\n      // TODO: add implementations\n      return '';\n    };\n\nexport const biasActivationSnippet = (hasBias: boolean, activation?: Activation): string => `\n      ${hasBias ? 'value = value + getBiasByOutputCoords(coords);' : ''}\n      ${activation ? 'value = activation(value, coords);' : ''}\n      `;\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/conv2d_mm_webgpu.ts\n//\n// modified to fit the needs of the project\n\nimport {LOG_DEBUG} from '../../../log';\nimport {TensorView} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {GpuDataType, ProgramInfo, ProgramMetadata} from '../../types';\nimport {ConvAttributes} from '../conv';\n\nimport {Activation, activationFnSnippet, biasActivationSnippet, typeSnippet} from './activation_util';\nimport {utilFunctions} from './conv_util';\nimport {makeMatMulPackedSource, makeMatMulPackedVec4Source} from './matmul_packed_webgpu';\n\nconst conv2dCommonSnippet =\n    (isChannelsLast: boolean, fitAOuter: boolean, fitBOuter: boolean, fitInner: boolean, addBias = false,\n     activation?: Activation, hasPreluActivationWeights = false, innerElementSizeX = 4, innerElementSizeW = 4,\n     innerElementSize = 4): string => {\n      const getXSnippet = (innerElementSize: number) => {\n        switch (innerElementSize) {\n          case 1:\n            return 'resData = x[xIndex];';\n          case 3:\n            return 'resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);';\n          case 4:\n            return 'resData = x[xIndex / 4];';\n          default:\n            throw new Error(`innerElementSize ${innerElementSize} is not supported.`);\n        }\n      };\n      const getWSnippet = (innerElementSize: number) => {\n        switch (innerElementSize) {\n          case 1:\n            return 'return w[row * wShape[3] + colIn];';\n          case 4:\n            return 'return w[row * wShape[3] / 4 + colIn];';\n          default:\n            throw new Error(`innerElementSize ${innerElementSize} is not supported.`);\n        }\n      };\n      const coordASnippet = isChannelsLast ? `\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    ` :\n                                             `\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `;\n\n      const coordResSnippet = isChannelsLast ? `\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ` :\n                                               `\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `;\n\n      const xHeight = isChannelsLast ? 'xShape[1]' : 'xShape[2]';\n      const xWidth = isChannelsLast ? 'xShape[2]' : 'xShape[3]';\n      const row = isChannelsLast ? 'row' : 'col';\n      const col = isChannelsLast ? 'col' : 'row';\n      const readXSnippet = `\n    let inChannels = wShape[2];\n    let outWidth = ${isChannelsLast ? 'outShape[2]' : 'outShape[3]'};\n    let outRow = ${row} / outWidth;\n    let outCol = ${row} % outWidth;\n\n    let WRow = ${col} / (filterDims[1] * inChannels);\n    let WCol = ${col} / inChannels % filterDims[1];\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\n    let xCh = ${col} % inChannels;\n    var resData = ${typeSnippet(innerElementSizeX)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the 'same' padding type.\n    if (xRow >= 0 && xRow < ${xHeight} && xCol >= 0 && xCol < ${xWidth}) {\n      ${coordASnippet}\n      let xIndex = getIndexFromCoords4D(coord, xShape);\n      ${getXSnippet(innerElementSizeX)}\n    }\n    return resData;`;\n\n      const sampleX = isChannelsLast ? (fitAOuter && fitInner ? `\n    let col = colIn * ${innerElementSizeX};\n    ${readXSnippet}` :\n                                                                `\n    let col = colIn * ${innerElementSizeX};\n    if (row < dimAOuter && col < dimInner) {\n      ${readXSnippet}\n    }\n    return ${typeSnippet(innerElementSizeX)}(0.0);`) :\n                                       (fitInner && fitBOuter ? `\n    let col = colIn * ${innerElementSizeX};\n    ${readXSnippet}` :\n                                                                `\n    let col = colIn * ${innerElementSizeX};\n    if (row < dimInner && col < dimBOuter) {\n      ${readXSnippet}\n    }\n    return ${typeSnippet(innerElementSizeX)}(0.0);`);\n\n      const sampleW = `${getWSnippet(innerElementSizeW)}`;\n\n      const resType = typeSnippet(innerElementSize);\n      const aType = isChannelsLast ? typeSnippet(innerElementSizeX) : typeSnippet(innerElementSizeW);\n      const bType = isChannelsLast ? typeSnippet(innerElementSizeW) : typeSnippet(innerElementSizeX);\n      const userCode = `\n    ${activationFnSnippet(activation, hasPreluActivationWeights, innerElementSize === 4, 4)}\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${aType} {\n      ${isChannelsLast ? sampleX : sampleW}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${bType} {\n      ${isChannelsLast ? sampleW : sampleX}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${resType}) {\n      let col = colIn * ${innerElementSize};\n      if (row < dimAOuter && col < dimBOuter)\n      {\n      var value = valueIn;\n      let outWidth = ${isChannelsLast ? 'outShape[2]' : 'outShape[3]'};\n      ${coordResSnippet}\n      ${biasActivationSnippet(addBias, activation)}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`;\n      return userCode;\n    };\n\nexport const createConv2DMatMulProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, attributes: ConvAttributes,\n     outputShape: readonly number[], dimAOuter: number, dimBOuter: number, dimInner: number, hasBias: boolean,\n     sequentialAccessByThreads: boolean): ProgramInfo => {\n      const isChannelsLast = attributes.format === 'NHWC';\n      const inChannels = isChannelsLast ? inputs[0].dims[3] : inputs[0].dims[1];\n      const batchSize = outputShape[0];\n      const outWidth = isChannelsLast ? outputShape[2] : outputShape[3];\n      const outHeight = isChannelsLast ? outputShape[1] : outputShape[2];\n      const outChannels = isChannelsLast ? outputShape[3] : outputShape[1];\n      const isVec4 = (((inChannels % 4 === 0 || inChannels % 3 === 0) && isChannelsLast) ||\n                      (outWidth % 4 === 0 && !isChannelsLast)) &&\n          outChannels % 4 === 0;\n\n      // TODO: fine tune size\n      const dispatchX = isChannelsLast ? outChannels : outWidth * outHeight;\n      const dispatchY = isChannelsLast ? outWidth * outHeight : outChannels;\n      const workGroupSize: [number, number, number] =\n          isVec4 ? [8, 8, 1] : [dispatchX <= 4 ? 4 : 16, dispatchX > 4 && dispatchY <= 4 ? 4 : 16, 1];\n      const elementsPerThread =\n          isVec4 ? [4, 4, 1] : [dispatchX <= 4 ? 1 : 2, dispatchX > 4 && dispatchY <= 4 ? 1 : 2, 1];\n      const dispatch = [\n        Math.ceil(dispatchX / workGroupSize[0] / elementsPerThread[0]),\n        Math.ceil(dispatchY / workGroupSize[1] / elementsPerThread[1]),\n        Math.ceil(batchSize / workGroupSize[2] / elementsPerThread[1])\n      ];\n\n      LOG_DEBUG('verbose', () => `[conv2d_mm_webgpu] dispatch = ${dispatch}`);\n\n      const innerElementSize = isVec4 ? (isChannelsLast && inChannels % 4 !== 0 ? 3 : 4) : elementsPerThread[0];\n\n      const tileAOuter = workGroupSize[1] * elementsPerThread[1];\n      const tileBOuter = workGroupSize[0] * elementsPerThread[0];\n      const tileInner = Math.max(workGroupSize[0] * innerElementSize, workGroupSize[1]);\n\n      const fitAOuter = dimAOuter % tileAOuter === 0;\n      const fitBOuter = dimBOuter % tileBOuter === 0;\n      const fitInner = dimInner % tileInner === 0;\n\n      const elementsSize = isVec4 ? [innerElementSize, 4, 4] : [1, 1, 1];\n\n      const declareInputs = [\n        `@group(0) @binding(0) var<storage, read> x: array<${isVec4 && innerElementSize === 4 ? 'vec4<f32>' : 'f32'}>;`,\n        `@group(0) @binding(1) var<storage, read> w: array<${isVec4 ? 'vec4<f32>' : 'f32'}>;`\n      ];\n      let declareFunctions = `\n      fn setOutputAtIndex(flatIndex : i32, value : ${isVec4 ? 'vec4<f32>' : 'f32'}) {\n        result[flatIndex] = ${isVec4 ? 'vec4<f32>' : 'f32'}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${isVec4 ? 'vec4<f32>' : 'f32'}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${isVec4 ? '/ 4' : ''}, value);\n      }`;\n      if (hasBias) {\n        declareInputs.push(`@group(0) @binding(2) var<storage, read> bias: array<${isVec4 ? 'vec4<f32>' : 'f32'}>;`);\n        declareFunctions += `\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${isVec4 ? 'vec4<f32>' : 'f32'} {\n          return bias[coords.${isChannelsLast ? 'w' : 'y'}${isVec4 ? '/ 4' : ''}];\n        }`;\n      }\n\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        dispatchGroup: () => ({x: dispatch[0], y: dispatch[1], z: dispatch[2]}),\n        getShaderSource: () => `\n        ${utilFunctions}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${declareInputs.join('')}\n        @group(0) @binding(${declareInputs.length}) var<storage, read_write> result: array<${\n            isVec4 ? 'vec4<f32>' : 'f32'}>;\n        //@group(0) @binding(${declareInputs.length + 1}) var<uniform> uniforms: Uniforms;\n\n        const xShape : vec4<i32> = vec4<i32>(${inputs[0].dims.join(',')});\n        const wShape : vec4<i32> = vec4<i32>(${inputs[1].dims.join(',')});\n        const outShape : vec4<i32> = vec4<i32>(${outputShape.join(',')});\n        const outShapeStrides : vec3<i32> = vec3<i32>(${ShapeUtil.computeStrides(outputShape).slice(0, 3).join(',')});\n        const filterDims : vec2<i32> = vec2<i32>(${attributes.kernelShape[0]}, ${attributes.kernelShape[1]});\n        const pad : vec2<i32> = vec2<i32>(${attributes.pads[0]}, ${attributes.pads[1]});\n        const stride : vec2<i32> = vec2<i32>(${attributes.strides[0]}, ${attributes.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${attributes.dilations[0]}, ${attributes.dilations[1]});\n        const dimAOuter : i32 = ${dimAOuter};\n        const dimBOuter : i32 = ${dimBOuter};\n        const dimInner : i32 = ${dimInner};\n        ${declareFunctions}\n        ${\n            conv2dCommonSnippet(\n                isChannelsLast, fitAOuter, fitBOuter, fitInner, hasBias, undefined, false, elementsSize[0],\n                elementsSize[1], elementsSize[2])}\n            ${\n            isVec4 ? makeMatMulPackedVec4Source(elementsPerThread, workGroupSize, !isChannelsLast, tileInner) :\n                     makeMatMulPackedSource(\n                         elementsPerThread, workGroupSize, !isChannelsLast, tileInner, false, undefined,\n                         sequentialAccessByThreads)}`\n      };\n    };\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-core/src/ops/conv_util.ts\n//\n// modified to fit the needs of the project\n\nexport const utilFunctions = `\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));\n}\n`;\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/matmul_packed_webgpu.ts\n//\n// modified to fit the needs of the project\n\nconst writeDataToSubAVec4Snippet = (transpose: boolean) => {\n  if (transpose) {\n    return `\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol);\n        `;\n\n  } else {\n    return `\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol);\n        `;\n  }\n};\n\nconst calculateResultSnippet = (transposeA: boolean, innerElementSize: number) => {\n  if (transposeA) {\n    return `\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${innerElementSize === 3 ? '' : 'let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];'}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${innerElementSize === 3 ? '' : 'acc[i] = BCached3 * ACached3[i] + acc[i];'}\n        }`;\n  } else {\n    return `\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${innerElementSize === 3 ? '' : 'acc[i] = BCached3 * ACached.w + acc[i];'}\n        }`;\n  }\n};\n\nexport const makeMatMulPackedVec4Source =\n    (workPerThread: number[], workgroupSize: [number, number, number], transposeA = false, tileInner = 32,\n     splitK = false, splitedDimInner = 32, isVectorA = false): string => {\n      const tileAOuter = workgroupSize[1] * workPerThread[1];\n      const tileBOuter = workgroupSize[0] * workPerThread[0];\n      const tileAWidth = transposeA ? tileAOuter : tileInner;\n      const tileAHight = transposeA ? tileInner : tileAOuter;\n      const innerElementSize = tileAWidth / workgroupSize[0];\n      const rowPerThreadB = tileInner / workgroupSize[1];\n\n      if (!(((transposeA && innerElementSize === 4 && workPerThread[1] === 4) ||\n             (!transposeA && (innerElementSize === 3 || innerElementSize === 4))) &&\n            tileAWidth % workgroupSize[0] === 0 && tileInner % workgroupSize[1] === 0 && workPerThread[0] === 4)) {\n        throw new Error(`If transposeA ${transposeA} is true, innerElementSize ${\n            innerElementSize} and workPerThread[1] ${workPerThread[1]} must be 4.\n      Otherwise, innerElementSize ${innerElementSize} must be 3 or 4.\n  tileAWidth ${tileAWidth} must be divisible by workgroupSize[0]${workgroupSize[0]}. tileInner ${\n            tileInner} must be divisible by workgroupSize[1] ${workgroupSize[1]}. colPerThread ${\n            workPerThread[0]} must be 4.`);\n      }\n      return `\nvar<workgroup> mm_Asub : array<array<vec${innerElementSize}<f32>, ${tileAWidth / innerElementSize}>, ${tileAHight}>;\nvar<workgroup> mm_Bsub : array<array<vec4<f32>, ${tileBOuter / workPerThread[0]}>, ${tileInner}>;\n\nconst rowPerThread = ${workPerThread[1]};\nconst colPerThread = ${workPerThread[0]};\nconst innerElementSize = ${innerElementSize};\nconst tileInner = ${tileInner};\n\n@compute @workgroup_size(${workgroupSize[0]}, ${workgroupSize[1]}, ${workgroupSize[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = ${isVectorA ? '0' : 'localRow * rowPerThread'};\n  let tileCol = i32(localId.x);\n\n  let globalRow = ${isVectorA ? '0' : 'i32(globalId.y) * rowPerThread'};\n  let globalCol = i32(globalId.x);\n  let batch = ${splitK ? '0' : 'i32(globalId.z)'};\n  let globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n\n  let numTiles = ${splitK ? `${Math.ceil(splitedDimInner / tileInner)}` : '(dimInner - 1) / tileInner + 1'};\n  var kStart = ${splitK ? `i32(globalId.z) * ${splitedDimInner}` : '0'};\n\n  var acc: array<vec4<f32>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${rowPerThreadB};\n  for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${writeDataToSubAVec4Snippet(transposeA)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${rowPerThreadB}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol);\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${innerElementSize === 3 ? '' : 'let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];'}\n\n          ${calculateResultSnippet(transposeA, innerElementSize)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`;\n    };\n\nconst writeDataToSubASnippet = (transpose: boolean) => {\n  if (transpose) {\n    return `\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol);\n            `;\n\n  } else {\n    return `\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol);\n            `;\n  }\n};\n\nconst readDataFromSubASnippet = (transposeA: boolean) =>\n    transposeA ? 'let ACached = mm_Asub[k][tileRow + innerRow];' : 'let ACached = mm_Asub[tileRow + innerRow][k];';\n\n// sequentialAccessByThreads means sequential data in memory is accessed by\n// threads, instead of a single thread (default behavior).\nexport const makeMatMulPackedSource =\n    (workPerThread: number[], workgroupSize: [number, number, number], transposeA = false, tileInner = 32,\n     splitK = false, splitedDimInner = 32, sequentialAccessByThreads = false): string => {\n      const tileAOuter = workPerThread[1] * workgroupSize[1];\n      const tileBOuter = workPerThread[0] * workgroupSize[0];\n      const tileAWidth = transposeA ? tileAOuter : tileInner;\n      const tileAHight = transposeA ? tileInner : tileAOuter;\n\n      if (!(tileAHight % workgroupSize[1] === 0 && tileAWidth % workgroupSize[0] === 0 &&\n            tileInner % workgroupSize[1] === 0)) {\n        throw new Error(`tileAHight ${tileAHight} must be divisible by workgroupSize[1]${\n            workgroupSize[1]}, tileAWidth ${tileAWidth} must be divisible by workgroupSize[0]${\n            workgroupSize[0]}, tileInner ${tileInner} must be divisible by workgroupSize[1]${workgroupSize[1]}`);\n      }\n      const rowPerThreadA = tileAHight / workgroupSize[1];\n      const colPerThreadA = tileAWidth / workgroupSize[0];\n      const rowPerThreadB = tileInner / workgroupSize[1];\n      const matmulSnippet = sequentialAccessByThreads ?\n          `\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n    let globalColStart = i32(workgroupId.x) * ${tileBOuter};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${tileAHight}; inputRow = inputRow + ${workgroupSize[1]}) {\n        for (var inputCol = localCol; inputCol < ${tileAWidth}; inputCol = inputCol + ${workgroupSize[0]}) {\n          ${writeDataToSubASnippet(transposeA)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${tileInner}; inputRow = inputRow + ${workgroupSize[1]}) {\n            for (var inputCol = localCol; inputCol < ${tileBOuter}; inputCol = inputCol + ${workgroupSize[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol);\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<f32, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${workgroupSize[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${\n              transposeA ? `mm_Asub[k][localRow + innerRow * ${workgroupSize[1]}];` :\n                           `mm_Asub[localRow + innerRow * ${workgroupSize[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${workgroupSize[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${workgroupSize[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    ` :\n          `\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n\nlet tileRowA = i32(localId.y) * ${rowPerThreadA};\nlet tileColA = i32(localId.x) * ${colPerThreadA};\nlet tileRowB = i32(localId.y) * ${rowPerThreadB};\n// Loop over shared dimension.\nfor (var t = 0; t < numTiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${rowPerThreadA}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${colPerThreadA}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${writeDataToSubASnippet(transposeA)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${rowPerThreadB}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol);\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<f32, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${readDataFromSubASnippet(transposeA)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;\n\n      return `\n  var<workgroup> mm_Asub : array<array<f32, ${tileAWidth}>, ${tileAHight}>;\n  var<workgroup> mm_Bsub : array<array<f32, ${tileBOuter}>, ${tileInner}>;\n  const rowPerThread = ${workPerThread[1]};\n  const colPerThread = ${workPerThread[0]};\n  const tileInner = ${tileInner};\n\n@compute @workgroup_size(${workgroupSize[0]}, ${workgroupSize[1]}, ${workgroupSize[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${splitK ? '0' : 'i32(globalId.z)'};\n    let numTiles = ${splitK ? `${Math.ceil(splitedDimInner / tileInner)}` : '(dimInner - 1) / tileInner + 1'};\n    var kStart = ${splitK ? `i32(globalId.z) * ${splitedDimInner}` : '0'};\n\n    var acc : array<array<f32, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${matmulSnippet}\n  }\n`;\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../util';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\n\ntype BuiltinFunctionName = string;\ntype BinaryCustomExpression = (expressionA: string, expressionB: string) => string;\ntype BinaryFunctionCall = BuiltinFunctionName|BinaryCustomExpression|{\n  scalar: BinaryCustomExpression;\n  vector: BinaryCustomExpression;\n};\n\nconst createBinaryOpProgramShader =\n    (shaderHelper: ShaderHelper, dimsA: readonly number[], dimsB: readonly number[], dimsOutput: readonly number[],\n     vectorize: boolean, doBroadcast: boolean, funcCall: BinaryFunctionCall, additionalImplementation?: string,\n     typeA = 'f32', typeB = 'f32', typeOutput = 'f32') => {\n      const outputSize = ShapeUtil.size(dimsOutput);\n      const vecSize = Math.ceil(outputSize / 4);\n\n      let expressionScalar: BinaryCustomExpression;\n      let expressionVector: BinaryCustomExpression;\n      if (typeof funcCall === 'string') {\n        expressionScalar = expressionVector = (a, b) => `${funcCall}((${a}),(${b}))`;\n      } else if (typeof funcCall === 'function') {\n        expressionScalar = expressionVector = funcCall;\n      } else {\n        expressionScalar = funcCall.scalar;\n        expressionVector = funcCall.vector;\n      }\n\n      let broadcastImpl = '';\n      const outputIndicesHelper = createIndicesHelper('output', dimsOutput);\n      if (doBroadcast) {\n        const calcOffsetImpl = (dims: readonly number[]) => {\n          const strides = ShapeUtil.computeStrides(dims);\n          const offsets: string[] = [];\n          for (let i = dims.length - 1; i >= 0; i--) {\n            const idx = dimsOutput.length === 0 ? '0u' :\n                (dimsOutput.length === 1)       ? '(*outputIndices)' :\n                                                  `(*outputIndices)[${i + dimsOutput.length - dims.length}]`;\n            offsets.push(`${strides[i]}u * (${idx} % ${dims[i]}u)`);\n          }\n          return offsets.length > 0 ? offsets.join('+') : '0u';\n        };\n\n        broadcastImpl = `\n  ${outputIndicesHelper.o2iImpl}\n\n  fn calcOffsetA(outputIndices: ptr<function, ${outputIndicesHelper.iType}>) -> u32 {\n    return ${calcOffsetImpl(dimsA)};\n  }\n\n  fn calcOffsetB(outputIndices: ptr<function, ${outputIndicesHelper.iType}>) -> u32 {\n    return ${calcOffsetImpl(dimsB)};\n  }\n  `;\n      }\n\n      let assignment: string;\n      if (vectorize) {\n        if (doBroadcast) {\n          assignment = `\n      ${outputIndicesHelper.indicesVariableDeclaration('outputIndices')}\n      ${outputIndicesHelper.o2iCall('global_idx * 4u', 'outputIndices')}\n      let offsetA = calcOffsetA(&outputIndices);\n      let offsetB = calcOffsetB(&outputIndices);\n      outputData[global_idx] = ${expressionVector('aData[offsetA / 4u]', 'bData[offsetB / 4u]')};`;\n        } else {\n          assignment = `outputData[global_idx] = ${expressionVector('aData[global_idx]', 'bData[global_idx]')};`;\n        }\n      } else {\n        if (!doBroadcast) {\n          throw new Error('no necessary to use scalar implementation for element-wise binary op implementation.');\n        }\n        const singleAssignment = (x: number) => {\n          const expressionA = `aData[indexA${x}][componentA${x}]`;\n          const expressionB = `bData[indexB${x}][componentB${x}]`;\n          return `\n      ${outputIndicesHelper.o2iCall(`global_idx * 4u + ${x}u`, 'outputIndices')}\n      let offsetA${x} = calcOffsetA(&outputIndices);\n      let offsetB${x} = calcOffsetB(&outputIndices);\n      let indexA${x} = offsetA${x} / 4u;\n      let indexB${x} = offsetB${x} / 4u;\n      let componentA${x} = offsetA${x} % 4u;\n      let componentB${x} = offsetB${x} % 4u;\n      outputData[global_idx][${x}] = ${expressionScalar(expressionA, expressionB)};`;\n        };\n\n        assignment = `\n      ${outputIndicesHelper.indicesVariableDeclaration('outputIndices')}\n      ${singleAssignment(0)}\n      ${singleAssignment(1)}\n      ${singleAssignment(2)}\n      ${singleAssignment(3)}`;\n      }\n\n      return `\n  @group(0) @binding(0) var<storage, read> aData : array<vec4<${typeA}>>;\n  @group(0) @binding(1) var<storage, read> bData : array<vec4<${typeB}>>;\n  @group(0) @binding(2) var<storage, read_write> outputData : array<vec4<${typeOutput}>>;\n\n  ${additionalImplementation ?? ''}\n  ${broadcastImpl}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(vecSize)}\n    ${assignment}\n  }`;\n    };\n\nconst createBinaryOpProgramInfo =\n    (metadata: ProgramMetadata, a: TensorView, b: TensorView, funcCall: BinaryFunctionCall,\n     additionalImplementation?: string, outputDataType: number = a.dataType): ProgramInfo => {\n      const isBroadcast = !ShapeUtil.areEqual(a.dims, b.dims);\n      let outputShape = a.dims;\n      let outputSize = ShapeUtil.size(a.dims);\n\n      let vectorize = false;\n\n      // TODO: deal with zero-sized tensors (eg. dims=[1,0])\n\n      if (isBroadcast) {\n        const calculatedShape = BroadcastUtil.calcShape(a.dims, b.dims, false);\n        if (!calculatedShape) {\n          throw new Error('Can\\'t perform binary op on the given tensors');\n        }\n        outputShape = calculatedShape;\n        outputSize = ShapeUtil.size(outputShape);\n\n        // check whether vectorize can be enabled\n        let sharedDimension = 1;\n        for (let i = 0; i < outputShape.length; i++) {\n          const dimA = a.dims[a.dims.length - i] ?? 1;\n          const dimB = b.dims[b.dims.length - i] ?? 1;\n          if (dimA === dimB) {\n            sharedDimension *= dimA;\n          } else {\n            break;\n          }\n        }\n        if (sharedDimension % 4 === 0) {\n          vectorize = true;\n        }\n\n\n      } else {\n        // element-wise\n        vectorize = true;\n      }\n\n      return {\n        ...metadata,\n        getShaderSource: (shaderHelper) => createBinaryOpProgramShader(\n            shaderHelper, a.dims, b.dims, outputShape, vectorize, isBroadcast, funcCall, additionalImplementation),\n        outputs: [{dims: outputShape, dataType: outputDataType, gpuDataType: GpuDataType.default}],\n        dispatchGroup: () =>\n            ({x: Math.ceil(outputSize / 64 /* workgroup size */ / (vectorize ? 4 : 1) /* vec size */)})\n      };\n    };\n\nconst createBinaryOpProgramInfoLoader =\n    (inputs: readonly TensorView[], name: string, funcCall: BinaryFunctionCall, additionalImplementation?: string,\n     cacheKey?: string): ProgramInfoLoader => {\n      const metadata:\n          ProgramMetadata = {name, inputTypes: [GpuDataType.default, GpuDataType.default], cacheHint: cacheKey};\n      return {\n        ...metadata,\n        get: () => createBinaryOpProgramInfo(metadata, inputs[0], inputs[1], funcCall, additionalImplementation)\n      };\n    };\n\nexport const add = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Add', (a, b) => `${a}+${b}`));\n};\n\nexport const div = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Div', (a, b) => `${a}/${b}`));\n};\n\nexport const mul = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Mul', (a, b) => `${a}*${b}`));\n};\n\nexport const pow = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(\n      context.inputs, 'Pow', ({scalar: (a, b) => `pow_f32(${a},${b})`, vector: (a, b) => `pow_vf32(${a},${b})`}), `\n    fn pow_f32(a : f32, b : f32) -> f32 {\n      if (b == 0.0) {\n        return 1.0;\n      } else if (a < 0.0 && b != floor(b)) {\n        return pow(a, b); // NaN\n      }\n      return select(sign(a), 1.0, round(abs(b) % 2.0) != 1.0) * pow(abs(a), b);\n    }\n    fn pow_vf32(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {\n      // TODO: implement vectorized pow\n      return vec4<f32>(pow_f32(a.x, b.x), pow_f32(a.y, b.y), pow_f32(a.z, b.z), pow_f32(a.w, b.w));\n    }\n      `));\n};\n\nexport const sub = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Sub', (a, b) => `${a}-${b}`));\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ShapeUtil} from '../../util';\n\n/**\n * constant value for a workgroup size.\n *\n * We definitely can do further optimization in future, but for now we use 64.\n *\n * rule of thumb: Use [a workgroup size of] 64 unless you know what GPU you are targeting or that your workload\n *                needs something different.\n *\n * from: https://surma.dev/things/webgpu/\n **/\nexport const WORKGROUP_SIZE = 64;\n\nexport interface IndicesHelper {\n  /**\n   * WGSL code of function implementation for offset-to-indices\n   */\n  o2iImpl: string;\n  /**\n   * WGSL code of function call for offset-to-indices\n   */\n  o2iCall: (varOffset: string, varIndices: string) => string;\n  /**\n   * WGSL code of function implementation for indices-to-offset\n   */\n  i2oImpl: string;\n  /**\n   * WGSL code of function implementation for indices-to-offset\n   *\n   * @param isPtr - whether the variable is a pointer. default is false.\n   */\n  i2oExpression: (varIndices: string, isPtr?: boolean) => string;\n  /**\n   * WGSL code of indices variable declaration\n   *\n   * @param v - variable name.\n   * @param init - initial value.\n   */\n  indicesVariableDeclaration: (v: string, init?: string[]) => string;\n  /**\n   * data type of indices\n   */\n  iType: string;\n}\n\nexport const createIndicesHelper = (name: string, shape: readonly number[]): IndicesHelper => {\n  const iType = shape.length < 2 ? 'u32' : `array<u32, ${shape.length}>`;\n\n  const strides = ShapeUtil.computeStrides(shape);\n  let o2iSnippet = '';\n  for (let i = 0; i < shape.length - 1; i++) {\n    o2iSnippet += `\n    let dim${i} = current / ${strides[i]}u;\n    let rest${i} = current % ${strides[i]}u;\n    (*indices)[${i}] = dim${i};\n    current = rest${i};\n    `;\n  }\n  o2iSnippet += `(*indices)[${shape.length - 1}] = current;`;\n\n  const o2iImpl = shape.length < 2 ? '' : `\n  fn ih_o2i_${name}(offset: u32, indices: ptr<function, ${iType}>) {\n    var current = offset;\n    ${o2iSnippet}\n  }`;\n\n  const o2iCall = (varOffset: string, varIndices: string) =>\n      shape.length < 2 ? `${varIndices}=${varOffset};` : `ih_o2i_${name}(${varOffset}, &${varIndices});`;\n\n  const offsets: string[] = [];\n  if (shape.length === 0) {\n    offsets.push('0u');\n  } else if (shape.length < 2) {\n    offsets.push('(*indices)');\n  } else {\n    for (let i = shape.length - 1; i >= 0; i--) {\n      offsets.push(`${strides[i]}u * ((*indices)[${i}])`);\n    }\n  }\n\n  const i2oImpl = shape.length < 2 ? '' : `\n  fn ih_i2o_${name}(indices: ptr<function, ${iType}>) -> u32 {\n    return ${offsets.join('+')};\n  }`;\n\n  const i2oExpression = (varIndices: string, isPtr?: boolean) =>\n      shape.length < 2 ? `(${isPtr ? '*' : ''}${varIndices})` : `ih_i2o_${name}(${isPtr ? '' : '&'}${varIndices})`;\n\n  const indicesVariableDeclaration = (v: string, init?: string[]) =>\n      `var ${v}:${iType}${init ? `=${iType}(${init.join(',')})` : ''};`;\n\n  return {o2iImpl, o2iCall, i2oImpl, i2oExpression, indicesVariableDeclaration, iType};\n};\n\n/**\n * A ShaderHelper is a helper class for generating WGSL code.\n */\nexport interface ShaderHelper {\n  mainStart(workgroupSize?: number|[number, number, number]): string;\n  guardAgainstOutOfBoundsWorkgroupSizes(size: unknown): string;\n}\n\nclass ShaderHelperImpl implements ShaderHelper {\n  constructor(private normalizedDispatchGroup: [number, number, number]) {}\n  guardAgainstOutOfBoundsWorkgroupSizes(size: number|string): string {\n    // Guard against out-of-bounds work group sizes\n    const sizeInCode = typeof size === 'number' ? `${size}u` : size;\n    return `if (global_idx >= ${sizeInCode}) { return; }`;\n  }\n  mainStart(workgroupSize: number|[number, number, number] = WORKGROUP_SIZE) {\n    const workgroupSizeX = typeof workgroupSize === 'number' ? workgroupSize : workgroupSize[0];\n    const workgroupSizeY = typeof workgroupSize === 'number' ? 1 : workgroupSize[1];\n    const workgroupSizeZ = typeof workgroupSize === 'number' ? 1 : workgroupSize[2];\n\n    const is1DimensionDispatch = this.normalizedDispatchGroup[1] === 1 && this.normalizedDispatchGroup[2] === 1;\n    const paramList = is1DimensionDispatch ? '@builtin(global_invocation_id) global_id : vec3<u32>' :\n                                             `@builtin(local_invocation_index) local_index : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>`;\n    const globalIdxDefinition = is1DimensionDispatch ?\n        'let global_idx = global_id.x;' :\n        `let global_idx = (workgroup_id.z * ${this.normalizedDispatchGroup[0] * this.normalizedDispatchGroup[1]}u +\n          workgroup_id.y * ${this.normalizedDispatchGroup[0]}u + workgroup_id.x) * ${\n            workgroupSizeX * workgroupSizeY * workgroupSizeZ}u + local_index;`;\n\n    return `@compute @workgroup_size(${workgroupSizeX}, ${workgroupSizeY}, ${workgroupSizeZ})\n  fn main(${paramList}) {\n    ${globalIdxDefinition}\n  `;\n  }\n}\n\nexport const createShaderHelper = (dispatchGroup: [number, number, number]): ShaderHelper =>\n    new ShaderHelperImpl(dispatchGroup);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {ShapeUtil} from '../../util';\nimport {GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {getActicationSnippet} from './fuse-utils';\n\nconst createGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'GroupedConv',\n  inputTypes: hasBias ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                        [GpuDataType.default, GpuDataType.default],\n  cacheHint\n});\n\nconst createGroupedConvProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, attributes: ConvAttributes,\n     squeezeOutputShapeFunction?: (shape: readonly number[]) => number[]): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += b[output_channel];' : '';\n      const xShape = inputs[0].dims;\n      const wShape = inputs[1].dims;\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\n\n      const dataType = 'f32';  // TODO: support other data type\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\n      const inputStorageBuffersDeclarations = [\n        `@group(0) @binding(0) var<storage, read> x : array<${dataType}>;`,\n        `@group(0) @binding(1) var<storage, read> w : array<${dataType}>;`\n      ];\n      if (hasBias) {\n        inputStorageBuffersDeclarations.push(`@group(0) @binding(2) var<storage, read> b : array<${dataType}>;`);\n      }\n\n      const isChannelLast = attributes.format === 'NHWC';\n      const outputShape = calculateOutputShape(\n          xShape, wShape, attributes.dilations, attributes.pads, attributes.strides, isChannelLast);\n      const outputSize = ShapeUtil.size(outputShape);\n      const outputIndicesHelper = createIndicesHelper('output', outputShape);\n      const xIndicesHelper = createIndicesHelper('x', xShape);\n      const wIndicesHelper = createIndicesHelper('w', wShape);\n\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const strides: vec2<u32> = vec2(${attributes.strides[0]}u, ${attributes.strides[1]}u);\n  const pads: vec2<u32> = vec2(${attributes.pads[0]}u, ${attributes.pads[1]}u);\n\n  ${inputStorageBuffersDeclarations.join('\\n')}\n  @group(0) @binding(${inputStorageBuffersDeclarations.length}) var<storage, read_write> output : array<${dataType}>;\n\n  ${activationFunction}\n  ${outputIndicesHelper.o2iImpl}\n  ${xIndicesHelper.i2oImpl}\n  ${wIndicesHelper.i2oImpl}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    ${outputIndicesHelper.indicesVariableDeclaration('outputIndices')}\n    ${outputIndicesHelper.o2iCall('global_idx', 'outputIndices')}\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${isChannelLast ? 3 : 1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${isChannelLast ? 1 : 2}], outputIndices[${\n          isChannelLast ? 2 : 3}]) * strides - pads;\n    let group_id: u32 = output_channel / ${outputChannelsPerGroup}u;\n\n    var value: ${dataType} = ${dataType}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < ${wShape[1]}u; wInChannel++) {\n      let input_channel = group_id * ${wShape[1]}u + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < ${wShape[2]}u; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]}u;\n\n        if (xHeight < 0u || xHeight >= ${xShape[isChannelLast ? 1 : 2]}u) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < ${wShape[3]}u; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]}u;\n          if (xWidth < 0u || xWidth >= ${xShape[isChannelLast ? 2 : 3]}u) {\n            continue;\n          }\n\n          ${\n          xIndicesHelper.indicesVariableDeclaration(\n              'xIndices',\n              isChannelLast ? ['batch', 'xHeight', 'xWidth', 'input_channel'] :\n                              [\n                                'batch', 'input_channel', 'xHeight', 'xWidth'\n                              ])}\n          let xVal = x[${xIndicesHelper.i2oExpression('xIndices')}];\n          ${\n          wIndicesHelper.indicesVariableDeclaration('wIndices', [\n            'output_channel', 'wInChannel', 'wHeight', 'wWidth'\n          ])}\n          let wVal = w[${wIndicesHelper.i2oExpression('wIndices')}];\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${processBias}\n    ${applyActivation}\n    output[global_idx] = value;\n  }`;\n      return {\n        ...metadata,\n        outputs: [{\n          dims: squeezeOutputShapeFunction ? squeezeOutputShapeFunction(outputShape) : outputShape,\n          dataType: inputs[0].dataType,\n          gpuDataType: GpuDataType.default\n        }],\n        getShaderSource,\n        dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n      };\n    };\n\n/**\n * naive grouped conv implementation, supports 1d/2d conv\n * @param squeezeOutputShapeFunction - an optional function to squeeze the output shape, only used in conv1d\n */\nexport const createGroupedConvProgramInfoLoader =\n    (inputs: readonly TensorView[], attributes: ConvAttributes,\n     squeezeOutputShapeFunction?: (shape: readonly number[]) => number[]): ProgramInfoLoader => {\n      const metadata = createGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createGroupedConvProgramInfo(inputs, metadata, attributes, squeezeOutputShapeFunction)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {PoolConvUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext} from '../types';\n\nimport {createGroupedConvProgramInfoLoader} from './conv-grouped';\nimport {createConv2DMatMulProgramInfoLoader} from './conv2d-mm';\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createTransposeProgramInfo, TransposeAttributes, transposeProgramMetadata} from './transpose';\n\nexport const calculateOutputShape =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\n     adjustPads: readonly number[], strides: readonly number[], isChannelLast: boolean): number[] => {\n      const batchSize = inputShape[0];\n      const inputSpatialShape = inputShape.slice(isChannelLast ? 1 : 2, isChannelLast ? 3 : 4);\n      const spatialRank = inputSpatialShape.length;\n      const outChannels = kernelShape[0];\n      const kernelSpatialShape = kernelShape.slice(2);\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\n      const outputShape =\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\n      outputShape.splice(0, 0, batchSize);\n      outputShape.splice(isChannelLast ? 3 : 1, 0, outChannels);\n      return outputShape;\n    };\n\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly dilations: readonly number[];\n  readonly format: 'NHWC'|'NCHW';\n  readonly group: number;\n  readonly kernelShape: readonly number[];\n  readonly pads: readonly number[];\n  readonly strides: readonly number[];\n  readonly wIsConst: boolean;\n}\n\n// for transposing weight tensor from [M, C/group, KH, KW] to [KH, KW, C/group, M]\nconst weightTransposeAttribute: TransposeAttributes = createAttributeWithCacheKey({perm: [2, 3, 1, 0]});\n\nconst validateInputs = (inputs: readonly TensorView[], attributes: ConvAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/master/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 && inputs[0].dims.length !== 3) {\n    throw new Error('currently only support conv 1D and 2D');\n  }\n\n  if (inputs[0].dims.length !== inputs[1].dims.length) {\n    throw new Error('filter does not have same dimension as input');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[attributes.format === 'NHWC' ? inputs[0].dims.length - 1 : 1];\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].dataType !== DataType.float || inputs[1].dataType !== DataType.float) {\n    throw new Error('Conv input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].dataType !== DataType.float) {\n    throw new Error('Conv input(bias) should be float tensor');\n  }\n};\n\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: readonly TensorView[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  for (let i = 2; i < inputs[1].dims.length; ++i) {\n    if (kernelShape[i - 2] === 0) {\n      kernelShape[i - 2] = inputs[1].dims[i];\n    }\n  }\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.format === 'NHWC',\n      attributes.autoPad);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvAttributes = (attributes: Record<string, unknown>): ConvAttributes => {\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const format = attributes.format as 'NHWC' | 'NCHW';\n  const autoPad = ['NOTSET', 'VALID', 'SAME_UPPER', 'SAME_LOWER'][attributes.auto_pad as number];\n  const dilations = attributes.dilations as [number, number];\n  const group = attributes.group as number;\n  const kernelShape = attributes.kernel_shape as [number, number];\n  const pads = attributes.pads as [number, number, number, number];\n  const strides = attributes.strides as [number, number];\n  const wIsConst = (attributes.w_is_const as () => boolean)();\n\n  return createAttributeWithCacheKey(\n      {autoPad, format, dilations, group, kernelShape, pads, strides, wIsConst, ...activationAttributes});\n};\n\nconst conv2d = (context: ComputeContext, inputs: readonly TensorView[], attributes: ConvAttributes): void => {\n  const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\n\n  // check attributes\n\n  const hasBias = inputs.length === 3;\n  // const hasPreluActivationWeights = false; /* TODO: add support for prelu activation weights */\n  const isChannelsLast = attributes.format === 'NHWC';\n\n  // const batchSize = context.inputs[0].dims[0];\n  const inputHeight = inputs[0].dims[isChannelsLast ? 1 : 2];\n  const inputWidth = inputs[0].dims[isChannelsLast ? 2 : 3];\n  const inputChannels = inputs[0].dims[isChannelsLast ? 3 : 1];\n  const weightHeight = inputs[1].dims[2];\n  const weightWidth = inputs[1].dims[3];\n\n  const outputShape = calculateOutputShape(\n      inputs[0].dims, inputs[1].dims, attributes.dilations, adjustedAttributes.pads, attributes.strides,\n      isChannelsLast);\n  const outHeight = outputShape[isChannelsLast ? 1 : 2];\n  const outWidth = outputShape[isChannelsLast ? 2 : 3];\n  const outChannels = outputShape[isChannelsLast ? 3 : 1];\n\n  const sameSize =\n      isChannelsLast && weightHeight === inputHeight && weightWidth === inputWidth && attributes.autoPad === 'VALID';\n  if (sameSize ||\n      (weightHeight === 1 && weightWidth === 1 && attributes.dilations[0] === 1 && attributes.dilations[1] === 1 &&\n       attributes.strides[0] === 1 && attributes.strides[1] === 1 &&\n       (attributes.autoPad === 'SAME_UPPER' || attributes.autoPad === 'SAME_LOWER' ||\n        attributes.autoPad === 'VALID'))) {\n    // TODO: implement conv2dByMatMul()\n    context.compute(createGroupedConvProgramInfoLoader(inputs, adjustedAttributes));\n    return;\n  }\n\n  if (!isChannelsLast || attributes.group !== 1) {\n    context.compute(createGroupedConvProgramInfoLoader(inputs, adjustedAttributes));\n    return;\n  }\n\n  // TODO: implement conv2dWithIm2Col()\n\n  const dimAOuter = isChannelsLast ? outHeight * outWidth : outChannels;\n  const dimBOuter = isChannelsLast ? outChannels : outHeight * outWidth;\n  const dimInner = weightHeight * weightWidth * inputChannels;\n\n  const sequentialAccessByThreads = /* backend.adapterInfo.isIntel() */ true;\n\n  // STEP.1: transpose weight\n  const transposedWeight = (context.customData.wT as TensorView | undefined) ??\n      context.compute(\n          {\n            ...transposeProgramMetadata,\n            cacheHint: weightTransposeAttribute.cacheKey,\n            get: () => createTransposeProgramInfo(inputs[1], weightTransposeAttribute.perm)\n          },\n          {inputs: [1], outputs: [attributes.wIsConst ? -2 : -1]})[0];\n  if (attributes.wIsConst && !context.customData.wT) {\n    context.customData.wT = transposedWeight;\n  }\n\n  // STEP.2: prepare reshaped inputs\n  const convInputs = [inputs[0], transposedWeight];\n  if (hasBias) {\n    if (!isChannelsLast && inputs[2].dims.length === 1) {\n      convInputs.push(inputs[2].reshape([inputs[2].dims[0], 1, 1]));\n    } else {\n      convInputs.push(inputs[2]);\n    }\n  }\n\n  // STEP.3: compute matmul\n  context.compute(\n      createConv2DMatMulProgramInfoLoader(\n          convInputs, adjustedAttributes, outputShape, dimAOuter, dimBOuter, dimInner, hasBias,\n          sequentialAccessByThreads),\n      {inputs: convInputs});\n};\n\nconst conv1d = (context: ComputeContext, attributes: ConvAttributes): void => {\n  // extend the input to 2D by adding H dimension\n  const isChannelLast = attributes.format === 'NHWC';\n  const inputs = [\n    context.inputs[0].reshape(\n        isChannelLast ?\n            // [N, W, C] -> [N, H=1, W, C]\n            [context.inputs[0].dims[0], 1, context.inputs[0].dims[1], context.inputs[0].dims[2]] :\n            // [N, C, W] -> [N, C, H=1, W]\n            [context.inputs[0].dims[0], context.inputs[0].dims[1], 1, context.inputs[0].dims[2]]),\n    //[FILTER_OUT_CHANNEL, FILTER_IN_CHANNEL, kW] -> [FILTER_OUT_CHANNEL, FILTER_IN_CHANNEL, kH=1, kW]\n    context.inputs[1].reshape([context.inputs[1].dims[0], context.inputs[1].dims[1], 1, context.inputs[1].dims[2]])\n  ];\n  if (context.inputs.length === 3) {\n    inputs.push(context.inputs[2]);\n  }\n  const pads = [0, attributes.pads[0], 0, attributes.pads[1]];\n  const strides = [1].concat(attributes.strides);\n  const dilations = [1].concat(attributes.dilations);\n  const kernelShape = [1].concat(attributes.kernelShape);\n  const adjustedAttributes = getAdjustedConvAttributes({...attributes, pads, strides, dilations, kernelShape}, inputs);\n  context.compute(createGroupedConvProgramInfoLoader(\n      inputs, adjustedAttributes,\n      outputShape => isChannelLast ? [outputShape[0], outputShape[2], outputShape[3]] : []));\n};\n\nexport const conv = (context: ComputeContext, attributes: ConvAttributes): void => {\n  validateInputs(context.inputs, attributes);  // currently will fail if not conv1D/2D\n  if (context.inputs[0].dims.length === 3) {\n    conv1d(context, attributes);\n  } else {\n    conv2d(context, context.inputs, attributes);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {GpuDataType, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {createConv2DMatMulProgramInfo} from './3rd-party/conv2d_mm_webgpu';\nimport {ConvAttributes} from './conv';\n\n\nconst createConv2DMatMulProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'Conv2DMatMul',\n  inputTypes: hasBias ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                        [GpuDataType.default, GpuDataType.default],\n  cacheHint\n});\n\nexport const createConv2DMatMulProgramInfoLoader =\n    (inputs: readonly TensorView[], attributes: ConvAttributes, outputShape: readonly number[], dimAOuter: number,\n     dimBOuter: number, dimInner: number, hasBias: boolean, sequentialAccessByThreads: boolean): ProgramInfoLoader => {\n      const metadata = createConv2DMatMulProgramMetadata(hasBias, attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createConv2DMatMulProgramInfo(\n            inputs, metadata, attributes, outputShape, dimAOuter, dimBOuter, dimInner, hasBias,\n            sequentialAccessByThreads)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {MAX_CLIP, MIN_CLIP} from '../../util';\n\nexport interface InternalActivationAttributes {\n  readonly activation: string;\n  readonly clipMin?: number;\n  readonly clipMax?: number;\n  readonly activationCacheKey: string;\n}\n\nexport const getActicationSnippet =\n    (attributes: InternalActivationAttributes): {activationFunction: string; applyActivation: string} => {\n      switch (attributes.activation) {\n        case 'Relu':\n          return {activationFunction: '', applyActivation: 'value = max(value, 0.0);'};\n        case 'Sigmoid':\n          return {activationFunction: '', applyActivation: 'value = (1.0 / (1.0 + exp(-value)));'};\n        case 'Clip':\n          return {\n            activationFunction:\n                `const clip_min_=f32(${attributes.clipMin!});const clip_max_=f32(${attributes.clipMax!});`,\n            applyActivation: 'value = clamp(value, clip_min_, clip_max_);'\n          };\n          // TODO: adding other activations that can be fused.\n        default:\n          return {activationFunction: '', applyActivation: ''};\n      }\n    };\n\nexport const parseInternalActivationAttributes =\n    (attributes: Record<string, unknown>|undefined): InternalActivationAttributes => {\n      const activation = attributes?.activation as string || '';\n\n      if (activation === 'Clip') {\n        const [clipMin, clipMax] = attributes?.activation_params as [number, number] || [MIN_CLIP, MAX_CLIP];\n        return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\n      }\n      return {activation, activationCacheKey: activation};\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {GemmUtil, ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {ShaderHelper} from './common';\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs) {\n    throw new Error('Input is missing');\n  }\n  if (inputs.length < 2 || inputs.length > 3) {\n    throw new Error('Invaid input number.');\n  }\n\n  // 'C' can be of dimensionality 0, 1 or 2 only\n  if (inputs.length === 3 && inputs[2].dims.length > 2) {\n    throw new Error('Invalid input shape of C');\n  }\n\n  if ((inputs[0].dataType !== DataType.float) || (inputs[1].dataType !== DataType.float) ||\n      (inputs.length === 3 && inputs[2].dataType !== DataType.float)) {\n    throw new Error('Invalid input type.');\n  }\n\n  if ((inputs[0].dataType !== inputs[1].dataType) ||\n      (inputs.length === 3 && inputs[0].dataType !== inputs[2].dataType)) {\n    throw new Error('Input types are mismatched');\n  }\n};\n\nexport interface GemmAttributes extends AttributeWithCacheKey {\n  transA: boolean;\n  transB: boolean;\n  alpha: number;\n  beta: number;\n}\n\nconst offsetC = (m: number, n: number, dims: readonly number[]): string => {\n  if (dims.length === 0) {\n    return '0u';\n  }\n\n  const broadcastM = (dims.length === 1 && m !== 1) || (dims.length === 2 && dims[0] !== m);\n  const broadcastN = dims[dims.length - 1] !== n;\n\n  let offset = '0u';\n  if (!broadcastM) {\n    offset += `+ m * ${dims[dims.length - 1]}u`;\n  }\n  if (!broadcastN) {\n    offset += '+n';\n  }\n\n  return offset;\n};\n\nconst createGemmProgramInfo =\n    (metadata: ProgramMetadata, inputs: readonly TensorView[], attributes: GemmAttributes): ProgramInfo => {\n      const aShape = inputs[0].dims.slice();\n      const bShape = inputs[1].dims.slice();\n      const [M, N, K] = GemmUtil.getShapeOfGemmResult(\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\n      const outputShape = [M, N];\n      if (!outputShape) {\n        throw new Error('Can\\'t use gemm on the given tensors');\n      }\n      const outputSize = ShapeUtil.size(outputShape);\n      let line = '';\n      if (attributes.transA && attributes.transB) {\n        line = 'value += a[k * M + m] * b[n * K + k];';\n      } else if (attributes.transA && !attributes.transB) {\n        line = 'value += a[k * M + m] * b[k * N + n];';\n      } else if (!attributes.transA && attributes.transB) {\n        line = 'value += a[m * K + k] * b[n * K + k];';\n      } else if (!attributes.transA && !attributes.transB) {\n        line = 'value += a[m * K + k] * b[k * N + n];';\n      }\n\n      const dataType = 'f32';  // TODO: support other data type\n      const calculateAlpha = attributes.alpha === 1 ? '' : 'value *= alpha;';\n      const calculateC = inputs.length === 3 ? `value += beta * c[${offsetC(M, N, inputs[2].dims)}];` : '';\n      const inputStorageBuffersDeclarations = [\n        `@group(0) @binding(0) var<storage, read> a : array<${dataType}>;`,\n        `@group(0) @binding(1) var<storage, read> b : array<${dataType}>;`\n      ];\n      if (inputs.length === 3) {\n        inputStorageBuffersDeclarations.push(`@group(0) @binding(2) var<storage, read> c : array<${dataType}>;`);\n      }\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const M: u32 = ${M}u;\n  const N: u32 = ${N}u;\n  const K: u32 = ${K}u;\n  const alpha = ${dataType}(${attributes.alpha});\n  const beta = ${dataType}(${attributes.beta});\n\n  ${inputStorageBuffersDeclarations.join('\\n')}\n  @group(0) @binding(${inputs.length}) var<storage, read_write> output : array<${dataType}>;\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    let m = global_id.x / N;\n    let n = global_id.x % N;\n\n    var value = ${dataType}(0);\n    for (var k: u32 = 0u; k<${K}u; k++) {\n      ${line}\n    }\n\n    ${calculateAlpha}\n    ${calculateC}\n    output[global_id.x] = value;\n\n  }`;\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        getShaderSource,\n        dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n      };\n    };\n\nconst createGemmProgramInfoLoader = (inputs: readonly TensorView[], attributes: GemmAttributes): ProgramInfoLoader => {\n  const metadata = {\n    name: 'Gemm',\n    inputTypes: inputs.length === 3 ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                                      [GpuDataType.default, GpuDataType.default],\n    cacheHint: attributes.cacheKey\n  };\n\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\n};\n\nexport const gemm = (context: ComputeContext, attributes: GemmAttributes): void => {\n  validateInputs(context.inputs);\n  context.compute(createGemmProgramInfoLoader(context.inputs, attributes));\n};\n\nexport const parseGemmAttributes = (attributes: Record<string, unknown>): GemmAttributes =>\n    createAttributeWithCacheKey(attributes as Omit<GemmAttributes, keyof AttributeWithCacheKey>);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../util';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {ShaderHelper} from './common';\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\n\n\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul',\n  inputTypes: hasBias ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                        [GpuDataType.default, GpuDataType.default],\n  cacheHint\n});\n\nconst createMatmulProgramInfo =\n    (metadata: ProgramMetadata, inputs: readonly TensorView[], activationAttributes: InternalActivationAttributes):\n        ProgramInfo => {\n          const aShape = inputs[0].dims;\n          const bShape = inputs[1].dims;\n          const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n          if (!outputShape) {\n            throw new Error('Can\\'t use matmul on the given tensors');\n          }\n          const outputSize = ShapeUtil.size(outputShape);\n          // TODO: support broadcasting\n\n          const dataType = 'f32';  // TODO: support other data type\n          const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\n\n          const M = outputShape[outputShape.length - 2];\n          const K = aShape[aShape.length - 1];\n          const N = outputShape[outputShape.length - 1];\n          const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const M: u32 = ${M}u;\n  const N: u32 = ${N}u;\n  const K: u32 = ${K}u;\n\n  @group(0) @binding(0) var<storage, read> a : array<${dataType}>;\n  @group(0) @binding(1) var<storage, read> b : array<${dataType}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${dataType}>;\n\n  ${activationFunction}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    let stack = global_idx / (M * N);\n    let mn = global_idx % (M * N);\n    let n = global_idx % N;\n    let m = mn / N;\n\n    let offsetA = stack * (M * K);\n    let offsetB = stack * (K * N);\n\n    var value = ${dataType}(0);\n    for (var k: u32 = 0u; k<${K}u; k++) {\n      value += a[offsetA + m * K + k] * b[offsetB + k * N + n];\n    }\n    ${applyActivation}\n    output[global_idx] = value;\n  }`;\n          return {\n            ...metadata,\n            outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n            getShaderSource,\n            dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n          };\n        };\n\nexport const createMatmulProgramInfoLoader =\n    (inputs: readonly TensorView[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n      return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\n    };\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('MatMul requires 2 inputs.');\n  }\n\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\n    throw new Error('shared dimension does not match.');\n  }\n\n  if (inputs[0].dataType !== DataType.float || inputs[1].dataType !== DataType.float) {\n    throw new Error('inputs should be float type');\n  }\n};\n\nexport const matMul = (context: ComputeContext): void => {\n  validateInputs(context.inputs);\n\n  context.compute(createMatmulProgramInfoLoader(context.inputs, {activation: '', activationCacheKey: ''}));\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {PoolConvUtil, ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramMetadata} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\n\n// TODO: support:\n// - ceil_mode                 \"test_maxpool_2d_ceil\"\n// - storage_order             \"test_maxpool_with_argmax_2d_precomputed_strides\"\n// - [MaxPool] dilations       \"test_maxpool_2d_dilations\"\n// - [MaxPool] output[1]       \"test_maxpool_with_argmax_2d_precomputed_pads\"\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pool ops requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Pool ops supports 2-D inputs only for now.');\n  }\n  if (inputs[0].dataType !== DataType.float) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst getAdjustedPoolAttributesAndOutputShape = <AttributeType extends AveragePoolAttributes|MaxPoolAttributes>(\n    inputs: readonly TensorView[], attributes: AttributeType, isGlobalOperator: boolean): [AttributeType, number[]] => {\n  const isChannelsLast = attributes.format === 'NHWC';\n  const inputShapeAsChannelFirst = isChannelsLast ?\n      [inputs[0].dims[0], inputs[0].dims[3], inputs[0].dims[1], inputs[0].dims[2]] :\n      inputs[0].dims.slice();\n  const hasDilations = Object.hasOwnProperty.call(attributes, 'dilations');\n  const kernelShape = attributes.kernelShape.slice();\n  const strides = attributes.strides.slice();\n  const dilations: number[] = hasDilations ? (attributes as MaxPoolAttributes).dilations.slice() : [];\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPoolAttributes(isGlobalOperator, inputShapeAsChannelFirst, kernelShape, strides, dilations, pads);\n\n  const outputShapeAsChannelFirst = PoolConvUtil.computePoolOutputShape(\n      isGlobalOperator, inputShapeAsChannelFirst, strides, dilations, kernelShape, pads, attributes.autoPad);\n\n  const newAttributes = Object.assign({}, attributes);\n  if (hasDilations) {\n    Object.assign(newAttributes, {kernelShape, strides, pads, dilations, cacheKey: attributes.cacheKey});\n  } else {\n    Object.assign(newAttributes, {kernelShape, strides, pads, cacheKey: attributes.cacheKey});\n  }\n  return [\n    newAttributes,\n    isChannelsLast ?\n        [\n          outputShapeAsChannelFirst[0], outputShapeAsChannelFirst[2], outputShapeAsChannelFirst[3],\n          outputShapeAsChannelFirst[1]\n        ] :\n        outputShapeAsChannelFirst\n  ];\n};\n\nconst generatePoolingCode = <AttributeType extends AveragePoolAttributes|MaxPoolAttributes>(\n    shaderHelper: ShaderHelper, inputDims: readonly number[], outputShape: readonly number[], attributes: AttributeType,\n    op1: string, op2: string, dataType: string, start: string): string => {\n  const isChannelsLast = attributes.format === 'NHWC';\n  const rank = inputDims.length;\n  const outputSize = ShapeUtil.size(outputShape);\n  const outputIndicesHelper = createIndicesHelper('output', outputShape);\n  const xIndicesHelper = createIndicesHelper('x', inputDims);\n\n  if (attributes.kernelShape.length <= 2) {\n    const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\n    const sw = attributes.strides[attributes.strides.length - 1];\n    const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\n    const pwEnd = attributes.pads[attributes.pads.length - 1];\n    const dimIdxW = rank - (isChannelsLast ? 2 : 1);\n    let codeW = '';\n    let codeH = '';\n    let codeHEnd = '';\n    if (pwStart + pwEnd !== 0) {\n      codeW = `\n              for (var i: u32 = 0u; i < ${kw}u; i++) {\n                xIndices[${dimIdxW}] = indices[${dimIdxW}] * ${sw} - ${pwStart} + i;\n                if (xIndices[${dimIdxW}] < 0 || xIndices[${dimIdxW}] >= ${inputDims[dimIdxW]}) {\n                  pad++;\n                  continue;\n                }\n                let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n                ${op1}\n              }`;\n    } else {\n      codeW = `\n              for (var i: u32 = 0u; i < ${kw}u; i++) {\n                xIndices[${dimIdxW}] = indices[${dimIdxW}] * ${sw} - ${pwStart} + i;\n                let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n                ${op1}\n              }`;\n    }\n\n    if (attributes.kernelShape.length === 2) {\n      const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\n      const sh = attributes.strides[attributes.strides.length - 2];\n      const phStart = attributes.pads[attributes.pads.length / 2 - 2];\n      const phEnd = attributes.pads[attributes.pads.length - 2];\n      const dimIdxH = rank - (isChannelsLast ? 3 : 2);\n      const dimH = inputDims[dimIdxH];\n      if (phStart + phEnd !== 0) {\n        codeH = `\n                for (var j: u32 = 0u; j < ${kh}u; j++) {\n                  xIndices[${dimIdxH}] = indices[${dimIdxH}] * ${sh} - ${phStart} + j;\n                  if (xIndices[${dimIdxH}] < 0 || xIndices[${dimIdxH}] >= ${dimH}) {\n                    pad+= ${kw};\n                    continue;\n                  }\n              `;\n      } else {\n        codeH = `\n                for (var j: u32 = 0u; j < ${kh}u; j++) {\n                  xIndices[${dimIdxH}] = indices[${dimIdxH}] * ${sh} - ${phStart} + j;\n                `;\n      }\n      codeHEnd = `\n              }\n            `;\n    }\n\n    const poolingCode = `\n            @group(0) @binding(0) var<storage, read> x : array<${dataType}>;\n            @group(0) @binding(1) var<storage, read_write> output : array<${dataType}>;\n\n            ${outputIndicesHelper.o2iImpl}\n            ${xIndicesHelper.i2oImpl}\n\n            ${shaderHelper.mainStart()}\n              ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n              ${outputIndicesHelper.indicesVariableDeclaration('indices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'indices')}\n              ${outputIndicesHelper.indicesVariableDeclaration('xIndices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'xIndices')}\n\n              var value: ${dataType} = ${dataType}(${start});\n              var pad = 0;\n              ${codeH}\n              ${codeW}\n              ${codeHEnd}\n              ${op2}\n\n              output[global_idx] = value;\n            }`;\n    return poolingCode;\n  } else {\n    if (isChannelsLast) {\n      throw new Error('Pooling with kernelShape.length > 2 is not supported for NHWC format.');\n    }\n    const kernelSize = ShapeUtil.size(attributes.kernelShape);\n    const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\n    const stridesRank = kernelStrides.length;\n    const padsRank = attributes.pads.length;\n    const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\n    let padCode = '';\n    if (hasPads) {\n      padCode = `\n                if (xIndices[j] >= inputDims[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n                ${op1}\n              }`;\n    } else {\n      padCode = `\n              }\n              let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n              ${op1}\n            `;\n    }\n    const poolingCode = `\n            @group(0) @binding(0) var<storage, read> x : array<${dataType}>;\n            @group(0) @binding(1) var<storage, read_write> output : array<${dataType}>;\n\n            ${outputIndicesHelper.o2iImpl}\n            ${xIndicesHelper.i2oImpl}\n\n            const pads = array<u32, ${padsRank}>(${attributes.pads.map(i => `${i}u`).join(',')});\n            const inputDims = array<u32, ${rank}>(${inputDims.map(i => `${i}u`).join(',')});\n            const kernelStrides = array<u32, ${stridesRank}>(${kernelStrides.map(i => `${i}u`).join(',')});\n            const strides = array<u32, ${stridesRank}>(${attributes.strides.map(i => `${i}u`).join(',')});\n\n            ${shaderHelper.mainStart()}\n              ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n              ${outputIndicesHelper.indicesVariableDeclaration('indices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'indices')}\n              ${outputIndicesHelper.indicesVariableDeclaration('xIndices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'xIndices')}\n\n              var offsets: array<u32, ${stridesRank}>;\n\n              var value = ${dataType}(${start});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < ${kernelSize}u; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${stridesRank - 1}u; j++) {\n                  offsets[j] = offset / kernelStrides[j];\n                  offset -= offsets[j] * kernelStrides[j];\n                }\n                offsets[${stridesRank - 1}] = offset;\n\n                isPad = false;\n                for (var j = ${rank - stridesRank}u; j < ${rank}u; j++) {\n                  xIndices[j] = indices[j] * strides[j - ${rank - stridesRank}u]\n                    + offsets[j - ${rank - stridesRank}u] - pads[j - 2u];\n                  ${padCode}\n              }\n              ${op2}\n\n              output[global_idx] = value;\n            }`;\n    return poolingCode;\n  }\n};\n\nexport interface FormatAttributes {\n  readonly format: 'NHWC'|'NCHW';\n}\n\nexport interface PoolCommonAttributes extends FormatAttributes {\n  readonly autoPad: string;\n  readonly ceilMode: number;\n  readonly kernelShape: readonly number[];\n  readonly strides: readonly number[];\n  readonly pads: readonly number[];\n}\n\nconst parsePoolCommonAttributes = (attributes: Record<string, unknown>): PoolCommonAttributes => ({\n  format: attributes.format as FormatAttributes['format'],\n  autoPad: ['NOTSET', 'VALID', 'SAME_UPPER', 'SAME_LOWER'][attributes.auto_pad as number],\n  ceilMode: attributes.ceil_mode as number,\n  kernelShape: attributes.kernel_shape as [number, number],\n  strides: attributes.strides as [number, number],\n  pads: attributes.pads as [number, number, number, number]\n});\n\nexport interface AveragePoolAttributes extends PoolCommonAttributes, AttributeWithCacheKey {\n  readonly countIncludePad: boolean;\n}\n\nconst createAveragePoolProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, isGlobalOperator: boolean,\n     attributes: AveragePoolAttributes): ProgramInfo => {\n      const [adjustedAttributes, outputShape] =\n          getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n      const kernelSize = ShapeUtil.size(adjustedAttributes.kernelShape);\n\n      const dataType = 'f32';\n\n      const op1 = 'value += x_val;';\n      let op2 = '';\n      if (adjustedAttributes.countIncludePad) {\n        op2 += `value /= ${dataType}(${kernelSize});`;\n      } else {\n        op2 += `value /= ${dataType}(${kernelSize} - pad);`;\n      }\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        getShaderSource: shaderHelper => generatePoolingCode(\n            shaderHelper, inputs[0].dims, outputShape, adjustedAttributes, op1, op2, dataType, '0.0'),\n        dispatchGroup: () => ({x: Math.ceil(ShapeUtil.size(outputShape) / 64 /* workgroup size */)})\n      };\n    };\n\nexport const parseAveragePoolAttributes = (attributes: Record<string, unknown>): AveragePoolAttributes => {\n  const countIncludePad = (attributes.count_include_pad as number) === 0 ? false : true;\n\n  const attr = parsePoolCommonAttributes(attributes);\n  // TODO: support attribute 'ceil_mode'\n  if (attr.ceilMode !== 0) {\n    throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\n  }\n\n  return createAttributeWithCacheKey({countIncludePad, ...attr});\n};\n\nexport const averagePool = (context: ComputeContext, attributes: AveragePoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'AveragePool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createAveragePoolProgramInfo(context.inputs, metadata, false, attributes)});\n};\n\nconst globalPoolAttributes = {\n  autoPad: '',\n  ceilMode: 0,\n  countIncludePad: false,\n  kernelShape: [],\n  strides: [],\n  pads: [],\n  storageOrder: 0,\n  dilations: [],\n  cacheKey: ''\n};\n\nexport const parseGlobalAveragePoolAttributes = (attributes: Record<string, unknown>): AveragePoolAttributes => {\n  const format = attributes.format as FormatAttributes['format'];\n  return {format, ...globalPoolAttributes, cacheKey: format};\n};\n\nexport const globalAveragePool = (context: ComputeContext, attributes: AveragePoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'GlobalAveragePool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createAveragePoolProgramInfo(context.inputs, metadata, true, attributes)});\n};\n\nexport interface MaxPoolAttributes extends PoolCommonAttributes, AttributeWithCacheKey {\n  readonly storageOrder: number;\n  readonly dilations: number[];\n}\n\nconst createMaxPoolProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, isGlobalOperator: boolean,\n     attributes: MaxPoolAttributes): ProgramInfo => {\n      const [adjustedAttributes, outputShape] =\n          getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n      const op1 = `\n      value = max(x_val, value);\n    `;\n      const op2 = '';\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        getShaderSource: shaderHelper =>\n            generatePoolingCode(shaderHelper, inputs[0].dims, outputShape, adjustedAttributes, op1, op2, 'f32', '-1e5'),\n        dispatchGroup: () => ({x: Math.ceil(ShapeUtil.size(outputShape) / 64 /* workgroup size */)})\n      };\n    };\n\nexport const maxPool = (context: ComputeContext, attributes: MaxPoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'MaxPool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createMaxPoolProgramInfo(context.inputs, metadata, false, attributes)});\n};\n\nexport const parseMaxPoolAttributes = (attributes: Record<string, unknown>): MaxPoolAttributes => {\n  const storageOrder = attributes.storage_order as number;\n  const dilations = attributes.dilations as [number, number];\n\n  const attr = parsePoolCommonAttributes(attributes);\n  // TODO: support attribute 'ceil_mode' and 'storage_order'\n  if (storageOrder !== 0) {\n    throw new Error('column major storage order is not yet supported for MaxPool');\n  }\n  if (attr.ceilMode !== 0) {\n    throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\n  }\n\n  return createAttributeWithCacheKey({storageOrder, dilations, ...attr});\n};\n\nexport const parseGlobalMaxPoolAttributes = (attributes: Record<string, unknown>): MaxPoolAttributes => {\n  const format = attributes.format as FormatAttributes['format'];\n  return {format, ...globalPoolAttributes, cacheKey: format};\n};\n\nexport const globalMaxPool = (context: ComputeContext, attributes: MaxPoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'GlobalMaxPool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createMaxPoolProgramInfo(context.inputs, metadata, true, attributes)});\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\n\nexport interface TransposeAttributes extends AttributeWithCacheKey {\n  readonly perm: number[];\n}\n\nexport const transposeProgramMetadata = {\n  name: 'Transpose',\n  inputTypes: [GpuDataType.default]\n};\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Transpose requires 1 input.');\n  }\n\n  if (inputs[0].dataType !== DataType.float) {\n    throw new Error('input should be float tensor');\n  }\n};\n\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] =>\n    (perm && perm.length !== inputShape.length) ? [...(inputShape.keys())].reverse() : perm;\n\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] =>\n    ShapeUtil.sortBasedOnPerm(inputShape, getAdjustedPerm(inputShape, perm));\n\nconst permFunctionBody = (perm: number[], rank: number): string => {\n  const reverseFunc = [];\n  reverseFunc.push(`fn perm(a: ptr<function, array<u32, ${rank}>>, i: ptr<function, array<u32, ${rank}>>) {`);\n  for (let i = 0; i < rank; ++i) {\n    reverseFunc.push(`\\t(*a)[${perm[i]}]=(*i)[${i}];`);\n  }\n  reverseFunc.push('\\t}');\n  return reverseFunc.join('\\n');\n};\n\nexport const createTransposeProgramInfo = (input: TensorView, permAttr: number[]): ProgramInfo => {\n  const dataType = 'f32';  // TODO: support other data type\n  const inputShape = input.dims;\n  const perm = getAdjustedPerm(inputShape, permAttr);\n  const outputShape = getOutputShape(inputShape, perm);\n  const rank = inputShape.length;\n  const outputSize = ShapeUtil.size(outputShape);\n  // A dims=[${inputs[0].dims.toString()}]\n  // out Dims=[${unpackedOutputShape.toString()}]\n  // based on perm=[${perm.toString()}]\n\n  const outputIndicesHelper = createIndicesHelper('output', outputShape);\n  const inputIndicesHelper = createIndicesHelper('a', inputShape);\n\n  const getShaderSource = (shaderHelper: ShaderHelper) => `\n  @group(0) @binding(0) var<storage, read> a : array<${dataType}>;\n  @group(0) @binding(1) var<storage, read_write> output : array<${dataType}>;\n\n  ${permFunctionBody(perm, rank)}\n  ${outputIndicesHelper.o2iImpl}\n  ${inputIndicesHelper.i2oImpl}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    ${outputIndicesHelper.indicesVariableDeclaration('indices')}\n    ${outputIndicesHelper.o2iCall('global_idx', 'indices')}\n    ${inputIndicesHelper.indicesVariableDeclaration('aIndices')}\n    perm(&aIndices, &indices);\n\n    output[global_idx] = a[${inputIndicesHelper.i2oExpression('aIndices')}];\n  }`;\n  return {\n    ...transposeProgramMetadata,\n    outputs: [{dims: outputShape, dataType: input.dataType, gpuDataType: GpuDataType.default}],\n    getShaderSource,\n    dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n  };\n};\n\nexport const transpose = (context: ComputeContext, attributes: TransposeAttributes): void => {\n  validateInputs(context.inputs);\n  context.compute({\n    ...transposeProgramMetadata,\n    cacheHint: attributes.cacheKey,\n    get: () => createTransposeProgramInfo(context.inputs[0], attributes.perm)\n  });\n};\n\nexport const parseTransposeAttributes = (attributes: Record<string, unknown>): TransposeAttributes =>\n    createAttributeWithCacheKey({perm: attributes.perm as number[]});\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {MAX_CLIP, MIN_CLIP, ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {ShaderHelper} from './common';\n\ntype BuiltinFunctionName = string;\ntype ElementwiseCustomExpression = (expression: string) => string;\ntype ElementwiseFunctionCall = BuiltinFunctionName|ElementwiseCustomExpression;\n\nconst createElementwiseProgramShader =\n    (shaderHelper: ShaderHelper, datasize: number, funcCall: ElementwiseFunctionCall,\n     additionalImplementation?: string): string => {\n      const vecSize = Math.ceil(datasize / 4);\n\n      let expression = '';\n      if (typeof funcCall === 'string') {\n        expression = `${funcCall}(a)`;\n      } else {\n        expression = funcCall('a');\n      }\n      return `\n  @group(0) @binding(0) var<storage, read> inputData : array<vec4<f32>>;\n  @group(0) @binding(1) var<storage, read_write> outputData : array<vec4<f32>>;\n\n  ${additionalImplementation ?? ''}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(vecSize)}\n\n    let a = inputData[global_idx];\n    outputData[global_idx] = ${expression};\n  }`;\n    };\n\nconst createElementwiseProgramInfo =\n    (metadata: ProgramMetadata, input: TensorView, funcCall: ElementwiseFunctionCall,\n     additionalImplementation?: string): ProgramInfo => ({\n      ...metadata,\n      getShaderSource: shaderHelper =>\n          createElementwiseProgramShader(shaderHelper, ShapeUtil.size(input.dims), funcCall, additionalImplementation),\n      outputs: [{dims: input.dims, dataType: input.dataType, gpuDataType: GpuDataType.default}],\n      dispatchGroup: (inputTensors) =>\n          ({x: Math.ceil(ShapeUtil.size(inputTensors[0].dims) / 64 /* workgroup size */ / 4 /* vec size */)})\n    });\n\nconst createElementwiseProgramInfoLoader =\n    (input: TensorView, name: string, funcCall: ElementwiseFunctionCall, additionalImplementation?: string,\n     cacheKey?: string): ProgramInfoLoader => {\n      const metadata: ProgramMetadata = {name, inputTypes: [GpuDataType.default], cacheHint: cacheKey};\n      return {\n        ...metadata,\n        get: () => createElementwiseProgramInfo(metadata, input, funcCall, additionalImplementation)\n      };\n    };\n\nexport const abs = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Abs', 'abs'));\n};\n\nexport const acos = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Acos', 'acos'));\n};\n\nexport const acosh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Acosh', 'acosh'));\n};\n\nexport const asin = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Asin', 'asin'));\n};\n\nexport const asinh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Asinh', 'asinh'));\n};\n\nexport const atan = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Atan', 'atan'));\n};\nexport const atanh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Atanh', 'atanh'));\n};\n\nexport interface ClipAttributes extends AttributeWithCacheKey {\n  readonly min: number;\n  readonly max: number;\n}\n\nexport const clipV10 = (context: ComputeContext, attributes: ClipAttributes): void => {\n  context.compute(\n      createElementwiseProgramInfoLoader(\n          context.inputs[0], 'Clip', a => `clamp(${a}, clip_min_, clip_max_)`, `\n    const clip_min_: vec4<f32> = vec4(f32(${attributes.min}));\n    const clip_max_: vec4<f32> = vec4(f32(${attributes.max}));\n`,\n          attributes.cacheKey),\n      {inputs: [0]});\n};\nconst generateClipAttributesFromInputs = (inputs: readonly TensorView[]): ClipAttributes => {\n  const min = (inputs.length >= 2) ? inputs[1].getFloat32Array()[0] : MIN_CLIP;\n  const max = (inputs.length >= 3) ? inputs[2].getFloat32Array()[0] : MAX_CLIP;\n  return createAttributeWithCacheKey({min, max});\n};\n\nexport const clip = (context: ComputeContext): void => {\n  const attributes = generateClipAttributesFromInputs(context.inputs);\n  clipV10(context, attributes);\n};\n\nexport const ceil = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Ceil', 'ceil'));\n};\n\nexport const cos = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Cos', 'cos'));\n};\n\nexport const cosh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Cosh', 'cosh'));\n};\n\nexport interface AlphaAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const parseAlphaAttributes = (attributes: Record<string, unknown>): AlphaAttributes =>\n    createAttributeWithCacheKey(attributes as {alpha: number});\n\nexport const elu = (context: ComputeContext, attributes: AlphaAttributes): void => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'Elu', a => `elu_vf32(${a})`, `\n  const elu_alpha_: f32 = f32(${attributes.alpha});\n\n  fn elu_f32(a: f32) -> f32 {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,\n      attributes.cacheKey));\n};\n\nexport const erf = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Erf', a => `erf_vf32(${a})`, `\n  const r0: f32 = 0.3275911;\n  const r1: f32 = 0.254829592;\n  const r2: f32 = -0.284496736;\n  const r3: f32 = 1.421413741;\n  const r4: f32 = -1.453152027;\n  const r5: f32 = 1.061405429;\n\n  fn erf_vf32(v: vec4<f32>) -> vec4<f32> {\n    let absv = abs(v);\n    let x = 1.0 / (1.0 + r0 * absv);\n    return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n  }`));\n};\n\nexport const exp = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Exp', 'exp'));\n};\n\nexport const floor = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Floor', 'floor'));\n};\n\nexport const leakyRelu = (context: ComputeContext, attributes: AlphaAttributes): void => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'LeakyRelu', a => `select(leaky_relu_alpha_ * ${a}, ${a}, ${a} >= vec4<f32>(0.0))`,\n      `const leaky_relu_alpha_: f32 = f32(${attributes.alpha});`, attributes.cacheKey));\n};\n\nexport const neg = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Neg', a => `-${a}`));\n};\n\nexport const reciprocal = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Reciprocal', a => `1.0/${a}`));\n};\n\nexport const relu = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'Relu', a => `select(vec4<f32>(0.0), ${a}, ${a} > vec4<f32>(0.0))`));\n};\n\nexport const sigmoid = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sigmoid', a => `(1.0 / (1.0 + exp(-${a})))`));\n};\n\nexport const sin = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sin', 'sin'));\n};\n\nexport const sinh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sinh', 'sinh'));\n};\n\nexport const sqrt = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sqrt', 'sqrt'));\n};\n\nexport const tan = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Tan', 'tan'));\n};\n\nexport const tanh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Tanh', 'tanh'));\n};\n\nexport const thresholdedRelu = (context: ComputeContext, attributes: AlphaAttributes): number => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'ThresholdedRelu', a => `select(vec4<f32>(0.0), ${a}, ${a} > thresholded_relu_alpha_)`,\n      `const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${attributes.alpha});`, attributes.cacheKey));\n  return 0;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGpuBackend} from '../backend-webgpu';\nimport {LOG_DEBUG} from '../log';\n\nimport {createShaderHelper} from './ops/common';\nimport {Artifact, GpuData, ProgramInfo} from './types';\n\n/**\n * ProgramManager is the main class behind running computations\n * It builds ProgramInfo's into Artifacts\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\n * Uses the artifact to run the computation by calling Draw on\n * the WebGL drawing buffer\n * ProgramManager automatically maps (binds) input variables to their\n * corresponding Location's in the binary program\n */\nexport class ProgramManager {\n  repo: Map<unknown, Artifact>;  // this should be per-session object\n  attributesBound: boolean;\n\n  constructor(private backend: WebGpuBackend) {\n    this.repo = new Map();\n    this.attributesBound = false;\n  }\n  getArtifact(key: unknown): Artifact|undefined {\n    return this.repo.get(key);\n  }\n  setArtifact(key: unknown, artifact: Artifact): void {\n    this.repo.set(key, artifact);\n  }\n  run(buildArtifact: Artifact, inputs: GpuData[], outputs: GpuData[], dispatchGroup: [number, number, number]): void {\n    const device = this.backend.device;\n    const computePassEncoder = this.backend.getComputePassEncoder();\n\n    if (this.backend.profilingEnabled) {\n      // profiling write start timestamp\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (computePassEncoder as any).writeTimestamp(this.backend.profilingQuerySet, 0);\n    }\n\n    computePassEncoder.setPipeline(buildArtifact.computePipeline);\n    const entries = [];\n    for (const input of inputs) {\n      entries.push({binding: entries.length, resource: {buffer: input.buffer}});\n    }\n    for (const output of outputs) {\n      entries.push({binding: entries.length, resource: {buffer: output.buffer}});\n    }\n    const bindGroup = device.createBindGroup({layout: buildArtifact.computePipeline.getBindGroupLayout(0), entries});\n    computePassEncoder.setBindGroup(0, bindGroup);\n\n    computePassEncoder.dispatchWorkgroups(...dispatchGroup);\n\n    this.backend.pendingDispatchNumber++;\n\n    if (this.backend.profilingEnabled) {\n      // profiling write end timestamp\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (computePassEncoder as any).writeTimestamp(this.backend.profilingQuerySet, 1);\n      // eslint-disable-next-line no-bitwise\n      const queryData = this.backend.gpuDataManager.create(16, GPUBufferUsage.COPY_SRC | GPUBufferUsage.QUERY_RESOLVE);\n      // eslint-disable-next-line no-bitwise\n      const syncData = this.backend.gpuDataManager.create(16, GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST);\n\n      this.backend.endComputePass();\n      this.backend.getCommandEncoder().resolveQuerySet(this.backend.profilingQuerySet, 0, 2, queryData.buffer, 0);\n      this.backend.getCommandEncoder().copyBufferToBuffer(queryData.buffer, 0, syncData.buffer, 0, 16);\n      this.backend.flush();\n\n      const kernelId = this.backend.currentKernelId!;\n      const kernelName = this.backend.kernels.get(kernelId)![0];\n\n      syncData.buffer.mapAsync(GPUMapMode.READ).then(() => {\n        const mappedData = new BigUint64Array(syncData.buffer.getMappedRange());\n        const startTimeU64 = mappedData[0];\n        const endTimeU64 = mappedData[1];\n\n        syncData.buffer.unmap();\n\n        if (typeof this.backend.profilingTimeBase === 'undefined') {\n          this.backend.profilingTimeBase = startTimeU64;\n        }\n\n        const startTime = Number(startTimeU64 - this.backend.profilingTimeBase);\n        const endTime = Number(endTimeU64 - this.backend.profilingTimeBase);\n\n        if (!Number.isSafeInteger(startTime) || !Number.isSafeInteger(endTime)) {\n          throw new RangeError('incorrect timestamp range');\n        }\n\n        this.backend.gpuDataManager.release(queryData.id);\n        this.backend.gpuDataManager.release(syncData.id);\n\n        // eslint-disable-next-line no-console\n        console.log(`[profiling] kernel \"${kernelId}|${kernelName}\" execution time: ${endTime - startTime} ns`);\n      });\n    }\n\n    if (this.backend.pendingDispatchNumber >= 16) {\n      this.backend.flush();\n    }\n  }\n  dispose(): void {\n    // this.repo.forEach(a => this.glContext.deleteProgram(a.program));\n  }\n  build(programInfo: ProgramInfo, normalizedDispatchGroupSize: [number, number, number]): Artifact {\n    const device = this.backend.device;\n\n    const code = programInfo.getShaderSource(createShaderHelper(normalizedDispatchGroupSize));\n    const shaderModule = device.createShaderModule({code});\n    LOG_DEBUG('verbose', () => `[WebGPU] shader code: ${code}`);\n\n    const computePipeline =\n        device.createComputePipeline({compute: {module: shaderModule, entryPoint: 'main'}, layout: 'auto'});\n\n    return {programInfo, computePipeline};\n  }\n\n  normalizeDispatchGroupSize(dispatchGroup: ReturnType<ProgramInfo['dispatchGroup']>): [number, number, number] {\n    const x = typeof dispatchGroup === 'number' ? dispatchGroup : dispatchGroup.x;\n    const y = typeof dispatchGroup === 'number' ? 1 : (dispatchGroup.y || 1);\n    const z = typeof dispatchGroup === 'number' ? 1 : (dispatchGroup.z || 1);\n    const limitPerDimension = this.backend.device.limits.maxComputeWorkgroupsPerDimension;\n    if (x <= limitPerDimension && y <= limitPerDimension && z <= limitPerDimension) {\n      return [x, y, z];\n    }\n    const size = x * y * z;\n    let dispatchAverage = Math.ceil(Math.sqrt(size));\n    if (dispatchAverage > limitPerDimension) {\n      dispatchAverage = Math.ceil(Math.cbrt(size));\n      if (dispatchAverage > limitPerDimension) {\n        throw new Error('Total dispatch size exceeds WebGPU maximum.');\n      }\n      return [dispatchAverage, dispatchAverage, dispatchAverage];\n    } else {\n      return [dispatchAverage, dispatchAverage, 1];\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor, TensorView} from '../tensor';\n\nimport {ShaderHelper} from './ops/common';\n\nexport enum GpuDataType {\n  default = 0,\n  upload = 1,\n  profile = 2\n}\nexport type GpuDataId = number;\n\nexport interface GpuData {\n  type: GpuDataType;\n  id: GpuDataId;\n  buffer: GPUBuffer;\n}\n\nexport interface TensorInfo {\n  id?: Tensor.Id;\n  dims: readonly number[];\n  dataType: number;\n  gpuDataType: GpuDataType;\n}\n\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n\nexport interface ProgramMetadata {\n  /**\n   * the name of the program. used for debugging and profiling\n   */\n  name: string;\n\n  /**\n   * gpu data types for each input\n   */\n  inputTypes: GpuDataType[];\n  /**\n   * an optional string as a cache hint in the artifact cache\n   */\n  cacheHint?: string;\n}\n\n/**\n * A ProgramInfoLoader allows\n */\nexport interface ProgramInfoLoader extends ProgramMetadata {\n  /**\n   * a function to get the program info\n   */\n  get(): ProgramInfo;\n}\n\n/**\n * A set of data that represent a shader program\n */\nexport interface ProgramInfo extends ProgramMetadata {\n  /**\n   * information of uniform variables\n   */\n  variables?: ProgramVariable[];\n  /**\n   * tensor info for outputs\n   */\n  outputs: TensorInfo[];\n  /**\n   * the shader's processing source code\n   */\n  getShaderSource: (shaderHelper: ShaderHelper) => string;\n  /**\n   * default is \"main\"\n   */\n  // entryPoint: string;\n\n  dispatchGroup: (inputs: readonly TensorView[]) => {\n    x: number;\n    y?: number;\n    z?: number;\n  };\n}\n\nexport interface Artifact {\n  programInfo: ProgramInfo;\n  computePipeline: GPUComputePipeline;\n}\n\nexport interface ComputeContextInputsOutputsMapping {\n  /**\n   * specify the mapping to the program's inputs. the value can be a number or a tensor view.\n   * - if it's a number, it's the index of the kernel's input\n   * - if it's a tensor view, it's an existing tensor view that will be used as the input\n   *\n   * if inputs is not specified, the mapping will be the kernel's inputs in order.\n   */\n  readonly inputs?: ReadonlyArray<TensorView|number>;\n  /**\n   * specify the mapping to the program's outputs. the value must be a number.\n   * - if it's a non-negative number, it's the index of the kernel's output\n   * - if it's -1, it's an output that will be created as a temporary value. this value will be released after\n   * the kernel is executed.\n   * - if it's -2, it's an output that will be created as a persistent value. this value will be released when the\n   * kernel is released.\n   *\n   * if outputs is not specified, the mapping will be the kernel's outputs in order.\n   */\n  readonly outputs?: readonly number[];\n}\n\n/**\n * A ComputeContext instance carries the states that representing the current running of a kernel.\n */\nexport interface ComputeContext {\n  /**\n   * stores the pointer to OpKernelContext\n   */\n  readonly opKernelContext: number;\n\n  /**\n   * a list of inputs, each input is an instance of TensorView\n   */\n  readonly inputs: readonly TensorView[];\n\n  /**\n   * a custom data object that can be used to store any data that is needed by the kernel\n   */\n  readonly customData: {[key: string]: unknown};\n\n  compute(program: ProgramInfoLoader|ProgramInfo, inputsOutputsMapping?: ComputeContextInputsOutputsMapping):\n      TensorView[];\n  output(index: number, dims: readonly number[]): number;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession} from 'onnxruntime-common';\n\nimport {init as initJsep} from './jsep/init';\nimport {OrtWasmMessage, SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {getInstance, initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionAllocateCallbacks: Array<PromiseCallbacks<SerializableModeldata>> = [];\nconst createSessionFinalizeCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create_allocate':\n      if (ev.data.err) {\n        createSessionAllocateCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionAllocateCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create_finalize':\n      if (ev.data.err) {\n        createSessionFinalizeCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionFinalizeCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initWasm = async(): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, +(scriptSrc).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initOrt = async(numThreads: number, loggingLevel: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : {numThreads, loggingLevel}};\n      proxyWorker!.postMessage(message);\n\n      // TODO: support JSEP in worker\n    });\n  } else {\n    core.initOrt(numThreads, loggingLevel);\n\n    // init JSEP if available\n    await initJsep(getInstance());\n  }\n};\n\nexport const createSessionAllocate = async(model: Uint8Array): Promise<SerializableModeldata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableModeldata>((resolve, reject) => {\n      createSessionAllocateCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create_allocate', in : {model}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSessionAllocate(model);\n  }\n};\n\nexport const createSessionFinalize = async(modeldata: SerializableModeldata, options?: InferenceSession.SessionOptions):\n    Promise<SerializableSessionMetadata> => {\n      if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n        ensureWorker();\n        return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n          createSessionFinalizeCallbacks.push([resolve, reject]);\n          const message: OrtWasmMessage = {type: 'create_finalize', in : {modeldata, options}};\n          proxyWorker!.postMessage(message);\n        });\n      } else {\n        return core.createSessionFinalize(modeldata, options);\n      }\n    };\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      throw new Error('Can\\'t create run options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a run config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\nimport {promisify} from 'util';\n\nimport {SerializableModeldata} from './proxy-messages';\nimport {createSession, createSessionAllocate, createSessionFinalize, endProfiling, initOrt, releaseSession, run} from './proxy-wrapper';\nimport {logLevelStringToEnum} from './wasm-common';\n\nlet ortInit: boolean;\n\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async createSessionAllocate(path: string): Promise<SerializableModeldata> {\n    // fetch model from url and move to wasm heap. The arraybufffer that held the http\n    // response is freed once we return\n    const response = await fetch(path);\n    const arrayBuffer = await response.arrayBuffer();\n    return createSessionAllocate(new Uint8Array(arrayBuffer));\n  }\n\n  async loadModel(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!ortInit) {\n      await initOrt(env.wasm.numThreads!, logLevelStringToEnum(env.logLevel!));\n      ortInit = true;\n    }\n\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof fetch === 'undefined') {\n        // node\n        const model = await promisify(readFile)(pathOrBuffer);\n        [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n      } else {\n        // browser\n        // fetch model and move to wasm heap.\n        const modelData: SerializableModeldata = await this.createSessionAllocate(pathOrBuffer);\n        // create the session\n        [this.sessionId, this.inputNames, this.outputNames] = await createSessionFinalize(modelData, options);\n      }\n    } else {\n      [this.sessionId, this.inputNames, this.outputNames] = await createSession(pathOrBuffer, options);\n    }\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      // TODO: support pre-allocated output\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputIndices.push(index);\n    });\n\n    const outputs =\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\n\n    const result: SessionHandler.ReturnType = {};\n    for (let i = 0; i < outputs.length; i++) {\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\n    }\n    return result;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n\n  // if using JSEP with WebGPU, always disable memory pattern\n  if (options.executionProviders &&\n      options.executionProviders.some(ep => (typeof ep === 'string' ? ep : ep.name) === 'webgpu')) {\n    options.enableMemPattern = false;\n  }\n};\n\nconst setExecutionProviders =\n    (sessionOptionsHandle: number, executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n     allocs: number[]): void => {\n      for (const ep of executionProviders) {\n        let epName = typeof ep === 'string' ? ep : ep.name;\n\n        // check EP name\n        switch (epName) {\n          case 'xnnpack':\n            epName = 'XNNPACK';\n            break;\n          case 'webgpu':\n            epName = 'JS';\n            break;\n          case 'wasm':\n          case 'cpu':\n            continue;\n          default:\n            throw new Error(`not supported EP: ${epName}`);\n        }\n\n        const epNameDataOffset = allocWasmString(epName, allocs);\n        if (getInstance()._OrtAppendExecutionProvider(sessionOptionsHandle, epNameDataOffset) !== 0) {\n          throw new Error(`Can't append execution provider: ${epName}`);\n        }\n      }\n    };\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel ?? 'all');\n    const executionMode = getExecutionMode(sessionOptions.executionMode ?? 'sequential');\n    const logIdDataOffset =\n        typeof sessionOptions.logId === 'string' ? allocWasmString(sessionOptions.logId, allocs) : 0;\n\n    const logSeverityLevel = sessionOptions.logSeverityLevel ?? 2;  // Default to 2 - warning\n    if (!Number.isInteger(logSeverityLevel) || logSeverityLevel < 0 || logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${logSeverityLevel}`);\n    }\n\n    const logVerbosityLevel = sessionOptions.logVerbosityLevel ?? 0;  // Default to 0 - verbose\n    if (!Number.isInteger(logVerbosityLevel) || logVerbosityLevel < 0 || logVerbosityLevel > 4) {\n      throw new Error(`log verbosity level is not valid: ${logVerbosityLevel}`);\n    }\n\n    const optimizedModelFilePathOffset = typeof sessionOptions.optimizedModelFilePath === 'string' ?\n        allocWasmString(sessionOptions.optimizedModelFilePath, allocs) :\n        0;\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena, !!sessionOptions.enableMemPattern, executionMode,\n        !!sessionOptions.enableProfiling, 0, logIdDataOffset, logSeverityLevel, logVerbosityLevel,\n        optimizedModelFilePathOffset);\n    if (sessionOptionsHandle === 0) {\n      throw new Error('Can\\'t create session options');\n    }\n\n    if (sessionOptions.executionProviders) {\n      setExecutionProviders(sessionOptionsHandle, sessionOptions.executionProviders, allocs);\n    }\n\n    if (sessionOptions.extra !== undefined) {\n      iterateExtraOptions(sessionOptions.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a session config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from 'onnxruntime-common';\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nexport const enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n/**\n * Map string tensor data to enum value\n */\nexport const tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\n/**\n * Map enum value to string tensor data\n */\nexport const tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\n/**\n * get tensor element size in bytes by the given data type\n * @returns size in integer or undefined if the data type is not supported\n */\nexport const getTensorElementSize = (dateType: number): number|\n    undefined => [undefined, 4, 1, 1, 2, 2, 4, 8, undefined, 1, 2, 8, 4, 8, undefined, undefined, undefined][dateType];\n\n/**\n * get typed array constructor by the given tensor type\n */\nexport const tensorTypeToTypedArrayConstructor = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * Map string log level to integer value\n */\nexport const logLevelStringToEnum = (logLevel: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {allocWasmString} from './string-utils';\nimport {tensorDataTypeEnumToString, tensorDataTypeStringToEnum, tensorTypeToTypedArrayConstructor} from './wasm-common';\nimport {getInstance} from './wasm-factory';\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nexport const initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    throw new Error(`Can't initialize onnxruntime. error code = ${errorCode}`);\n  }\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\n */\ntype SessionMetadata = [number, number[], number[]];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSessionAllocate = (model: Uint8Array): [number, number] => {\n  const wasm = getInstance();\n  const modelDataOffset = wasm._malloc(model.byteLength);\n  wasm.HEAPU8.set(model, modelDataOffset);\n  return [modelDataOffset, model.byteLength];\n};\n\nexport const createSessionFinalize =\n    (modelData: SerializableModeldata, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        sessionHandle = wasm._OrtCreateSession(modelData[0], modelData[1], sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          throw new Error('Can\\'t create a session');\n        }\n      } finally {\n        wasm._free(modelData[0]);\n        if (sessionOptionsHandle !== 0) {\n          wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        }\n        allocs.forEach(wasm._free);\n      }\n\n      const inputCount = wasm._OrtGetInputCount(sessionHandle);\n      const outputCount = wasm._OrtGetOutputCount(sessionHandle);\n\n      const inputNames = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNames = [];\n      const outputNamesUTF8Encoded = [];\n      for (let i = 0; i < inputCount; i++) {\n        const name = wasm._OrtGetInputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an input name');\n        }\n        inputNamesUTF8Encoded.push(name);\n        inputNames.push(wasm.UTF8ToString(name));\n      }\n      for (let i = 0; i < outputCount; i++) {\n        const name = wasm._OrtGetOutputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an output name');\n        }\n        outputNamesUTF8Encoded.push(name);\n        outputNames.push(wasm.UTF8ToString(name));\n      }\n\n      activeSessions.set(sessionHandle, [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\n      return [sessionHandle, inputNames, outputNames];\n    };\n\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const modelData: SerializableModeldata = createSessionAllocate(model);\n      return createSessionFinalize(modelData, options);\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  inputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  outputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions.delete(sessionId);\n};\n\n/**\n * perform inference run\n */\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  const inputCount = inputIndices.length;\n  const outputCount = outputIndices.length;\n\n  let runOptionsHandle = 0;\n  let runOptionsAllocs: number[] = [];\n\n  const inputValues: number[] = [];\n  const inputAllocs: number[] = [];\n\n  try {\n    [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n    // create input tensors\n    for (let i = 0; i < inputCount; i++) {\n      const dataType = inputs[i][0];\n      const dims = inputs[i][1];\n      const data = inputs[i][2];\n\n      let dataOffset: number;\n      let dataByteLength: number;\n\n      if (Array.isArray(data)) {\n        // string tensor\n        dataByteLength = 4 * data.length;\n        dataOffset = wasm._malloc(dataByteLength);\n        inputAllocs.push(dataOffset);\n        let dataIndex = dataOffset / 4;\n        for (let i = 0; i < data.length; i++) {\n          if (typeof data[i] !== 'string') {\n            throw new TypeError(`tensor data at index ${i} is not a string`);\n          }\n          wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\n        }\n      } else {\n        dataByteLength = data.byteLength;\n        dataOffset = wasm._malloc(dataByteLength);\n        inputAllocs.push(dataOffset);\n        wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\n      }\n\n      const stack = wasm.stackSave();\n      const dimsOffset = wasm.stackAlloc(4 * dims.length);\n      try {\n        let dimIndex = dimsOffset / 4;\n        dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n        const tensor = wasm._OrtCreateTensor(\n            tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\n        if (tensor === 0) {\n          throw new Error('Can\\'t create a tensor');\n        }\n        inputValues.push(tensor);\n      } finally {\n        wasm.stackRestore(stack);\n      }\n    }\n\n    const beforeRunStack = wasm.stackSave();\n    const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n    const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n    const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n    const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n    try {\n      let inputValuesIndex = inputValuesOffset / 4;\n      let inputNamesIndex = inputNamesOffset / 4;\n      let outputValuesIndex = outputValuesOffset / 4;\n      let outputNamesIndex = outputNamesOffset / 4;\n      for (let i = 0; i < inputCount; i++) {\n        wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\n        wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n      }\n      for (let i = 0; i < outputCount; i++) {\n        wasm.HEAPU32[outputValuesIndex++] = 0;\n        wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n      }\n\n      // support RunOptions\n      let errorCode = wasm._OrtRun(\n          sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n          outputValuesOffset, runOptionsHandle);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const runPromise = wasm.jsepRunPromise;\n      if (runPromise && typeof runPromise.then !== 'undefined') {\n        errorCode = await runPromise;\n      }\n\n      const output: SerializableTensor[] = [];\n\n      if (errorCode === 0) {\n        for (let i = 0; i < outputCount; i++) {\n          const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n\n          const beforeGetTensorDataStack = wasm.stackSave();\n          // stack allocate 4 pointer value\n          const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n          let type: Tensor.Type|undefined, dataOffset = 0;\n          try {\n            errorCode = wasm._OrtGetTensorData(\n                tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n            if (errorCode !== 0) {\n              throw new Error(`Can't access output tensor data. error code = ${errorCode}`);\n            }\n            let tensorDataIndex = tensorDataOffset / 4;\n            const dataType = wasm.HEAPU32[tensorDataIndex++];\n            dataOffset = wasm.HEAPU32[tensorDataIndex++];\n            const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n            const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n            const dims = [];\n            for (let i = 0; i < dimsLength; i++) {\n              dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n            }\n            wasm._OrtFree(dimsOffset);\n\n            const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\n            type = tensorDataTypeEnumToString(dataType);\n            if (type === 'string') {\n              const stringData: string[] = [];\n              let dataIndex = dataOffset / 4;\n              for (let i = 0; i < size; i++) {\n                const offset = wasm.HEAPU32[dataIndex++];\n                const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n                stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n              }\n              output.push([type, dims, stringData]);\n            } else {\n              const typedArrayConstructor = tensorTypeToTypedArrayConstructor(type);\n              const data = new typedArrayConstructor(size);\n              new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                  .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n              output.push([type, dims, data]);\n            }\n          } finally {\n            wasm.stackRestore(beforeGetTensorDataStack);\n            if (type === 'string' && dataOffset) {\n              wasm._free(dataOffset);\n            }\n            wasm._OrtReleaseTensor(tensor);\n          }\n        }\n      }\n\n      if (errorCode === 0) {\n        return output;\n      } else {\n        throw new Error(`failed to call OrtRun(). error code = ${errorCode}.`);\n      }\n    } finally {\n      wasm.stackRestore(beforeRunStack);\n    }\n  } finally {\n    inputValues.forEach(wasm._OrtReleaseTensor);\n    inputAllocs.forEach(wasm._free);\n\n    wasm._OrtReleaseRunOptions(runOptionsHandle);\n    runOptionsAllocs.forEach(wasm._free);\n  }\n};\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    throw new Error('Can\\'t get an profile file name');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && data.buffer) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\nimport * as path from 'path';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\n\n/* eslint-disable @typescript-eslint/no-require-imports */\nconst ortWasmFactory: EmscriptenModuleFactory<OrtWasmModule> =\n    BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm.js') : require('./binding/ort-wasm-simd.jsep.js');\n\nconst ortWasmFactoryThreaded: EmscriptenModuleFactory<OrtWasmModule> = !BUILD_DEFS.DISABLE_WASM_THREAD ?\n    (BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm-threaded.js') :\n                                 require('./binding/ort-wasm-simd-threaded.jsep.js')) :\n    ortWasmFactory;\n/* eslint-enable @typescript-eslint/no-require-imports */\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(new Uint8Array([\n      0,   97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1,   28,  0, 65, 0,\n      253, 15, 253, 12,  0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0,  0,  253, 186, 1, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPaths = flags.wasmPaths;\n  const wasmPrefixOverride = typeof wasmPaths === 'string' ? wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof wasmPaths === 'object' ? wasmPaths[wasmFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads && fileName.endsWith('.worker.js') &&\n            typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName.endsWith('.wasm')) {\n          if (wasmPathOverride) {\n            return wasmPathOverride;\n          }\n\n          const prefix = wasmPrefixOverride ?? scriptDirectory;\n\n          if (!BUILD_DEFS.DISABLE_WEBGPU) {\n            if (wasmFileName === 'ort-wasm-simd.wasm') {\n              return prefix + 'ort-wasm-simd.jsep.wasm';\n            } else if (wasmFileName === 'ort-wasm-simd-threaded.wasm') {\n              return prefix + 'ort-wasm-simd-threaded.jsep.wasm';\n            }\n          }\n\n          return prefix + wasmFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode = `var ortWasmThreaded=(function(){var _scriptDir;return ${factory.toString()}})();`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","\nvar ortWasm = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(ortWasm) {\n  ortWasm = ortWasm || {};\n\n\nnull;var d;d||(d=typeof ortWasm !== 'undefined' ? ortWasm : {});var ba,ca;d.ready=new Promise(function(a,b){ba=a;ca=b});var da=Object.assign({},d),ea=\"./this.program\",fa=\"object\"==typeof window,q=\"function\"==typeof importScripts,ha=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,r=\"\",ia,ja,ka,fs,la,ma;\nif(ha)r=q?require(\"path\").dirname(r)+\"/\":__dirname+\"/\",ma=()=>{la||(fs=require(\"fs\"),la=require(\"path\"))},ia=function(a,b){ma();a=la.normalize(a);return fs.readFileSync(a,b?void 0:\"utf8\")},ka=a=>{a=ia(a,!0);a.buffer||(a=new Uint8Array(a));return a},ja=(a,b,c)=>{ma();a=la.normalize(a);fs.readFile(a,function(e,f){e?c(e):b(f.buffer)})},1<process.argv.length&&(ea=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",function(a){throw a;}),process.on(\"unhandledRejection\",\nfunction(a){throw a;}),d.inspect=function(){return\"[Emscripten Module object]\"};else if(fa||q)q?r=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(r=document.currentScript.src),_scriptDir&&(r=_scriptDir),0!==r.indexOf(\"blob:\")?r=r.substr(0,r.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):r=\"\",ia=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},q&&(ka=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),\nja=(a,b,c)=>{var e=new XMLHttpRequest;e.open(\"GET\",a,!0);e.responseType=\"arraybuffer\";e.onload=()=>{200==e.status||0==e.status&&e.response?b(e.response):c()};e.onerror=c;e.send(null)};var na=d.print||console.log.bind(console),t=d.printErr||console.warn.bind(console);Object.assign(d,da);da=null;d.thisProgram&&(ea=d.thisProgram);var y;d.wasmBinary&&(y=d.wasmBinary);var noExitRuntime=d.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&z(\"no native wasm support detected\");\nvar oa,pa=!1,qa=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction ra(a,b,c){b>>>=0;var e=b+c;for(c=b;a[c]&&!(c>=e);)++c;if(16<c-b&&a.buffer&&qa)return qa.decode(a.subarray(b,c));for(e=\"\";b<c;){var f=a[b++];if(f&128){var g=a[b++]&63;if(192==(f&224))e+=String.fromCharCode((f&31)<<6|g);else{var k=a[b++]&63;f=224==(f&240)?(f&15)<<12|g<<6|k:(f&7)<<18|g<<12|k<<6|a[b++]&63;65536>f?e+=String.fromCharCode(f):(f-=65536,e+=String.fromCharCode(55296|f>>10,56320|f&1023))}}else e+=String.fromCharCode(f)}return e}function sa(a,b){return(a>>>=0)?ra(C,a,b):\"\"}\nfunction ta(a,b,c,e){c>>>=0;if(!(0<e))return 0;var f=c;e=c+e-1;for(var g=0;g<a.length;++g){var k=a.charCodeAt(g);if(55296<=k&&57343>=k){var l=a.charCodeAt(++g);k=65536+((k&1023)<<10)|l&1023}if(127>=k){if(c>=e)break;b[c++>>>0]=k}else{if(2047>=k){if(c+1>=e)break;b[c++>>>0]=192|k>>6}else{if(65535>=k){if(c+2>=e)break;b[c++>>>0]=224|k>>12}else{if(c+3>=e)break;b[c++>>>0]=240|k>>18;b[c++>>>0]=128|k>>12&63}b[c++>>>0]=128|k>>6&63}b[c++>>>0]=128|k&63}}b[c>>>0]=0;return c-f}\nfunction ua(a){for(var b=0,c=0;c<a.length;++c){var e=a.charCodeAt(c);127>=e?b++:2047>=e?b+=2:55296<=e&&57343>=e?(b+=4,++c):b+=3}return b}var va,D,C,G,H;function wa(){var a=oa.buffer;va=a;d.HEAP8=D=new Int8Array(a);d.HEAP16=new Int16Array(a);d.HEAP32=G=new Int32Array(a);d.HEAPU8=C=new Uint8Array(a);d.HEAPU16=new Uint16Array(a);d.HEAPU32=H=new Uint32Array(a);d.HEAPF32=new Float32Array(a);d.HEAPF64=new Float64Array(a)}var xa,ya=[],za=[],Da=[];function Ea(){var a=d.preRun.shift();ya.unshift(a)}\nvar M=0,Fa=null,N=null;function z(a){if(d.onAbort)d.onAbort(a);a=\"Aborted(\"+a+\")\";t(a);pa=!0;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");ca(a);throw a;}function Ga(){return Q.startsWith(\"data:application/octet-stream;base64,\")}var Q;Q=\"ort-wasm.wasm\";if(!Ga()){var Ha=Q;Q=d.locateFile?d.locateFile(Ha,r):r+Ha}function Ia(){var a=Q;try{if(a==Q&&y)return new Uint8Array(y);if(ka)return ka(a);throw\"both async and sync fetching of the wasm failed\";}catch(b){z(b)}}\nfunction Ja(){if(!y&&(fa||q)){if(\"function\"==typeof fetch&&!Q.startsWith(\"file://\"))return fetch(Q,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+Q+\"'\";return a.arrayBuffer()}).catch(function(){return Ia()});if(ja)return new Promise(function(a,b){ja(Q,function(c){a(new Uint8Array(c))},b)})}return Promise.resolve().then(function(){return Ia()})}function Ka(a){for(;0<a.length;)a.shift()(d)}var La=[],Ma=0,R=0;\nfunction S(a){this.Ic=a;this.Cc=a-24;this.Wc=function(b){H[this.Cc+4>>2>>>0]=b};this.Gc=function(){return H[this.Cc+4>>2>>>0]};this.Uc=function(b){H[this.Cc+8>>2>>>0]=b};this.Yc=function(){return H[this.Cc+8>>2>>>0]};this.Vc=function(){G[this.Cc>>2>>>0]=0};this.Lc=function(b){D[this.Cc+12>>0>>>0]=b?1:0};this.Rc=function(){return 0!=D[this.Cc+12>>0>>>0]};this.Mc=function(b){D[this.Cc+13>>0>>>0]=b?1:0};this.Oc=function(){return 0!=D[this.Cc+13>>0>>>0]};this.Tc=function(b,c){this.Hc(0);this.Wc(b);this.Uc(c);\nthis.Vc();this.Lc(!1);this.Mc(!1)};this.Pc=function(){G[this.Cc>>2>>>0]+=1};this.Zc=function(){var b=G[this.Cc>>2>>>0];G[this.Cc>>2>>>0]=b-1;return 1===b};this.Hc=function(b){H[this.Cc+16>>2>>>0]=b};this.Qc=function(){return H[this.Cc+16>>2>>>0]};this.Sc=function(){if(Na(this.Gc()))return H[this.Ic>>2>>>0];var b=this.Qc();return 0!==b?b:this.Ic}}function Oa(a){return Pa((new S(a)).Cc)}var Qa=[];function T(a){var b=Qa[a];b||(a>=Qa.length&&(Qa.length=a+1),Qa[a]=b=xa.get(a));return b}\nfunction Ra(a){var b=ua(a)+1,c=Sa(b);c&&ta(a,D,c,b);return c}function Ta(a,b,c){function e(m){return(m=m.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?m[1]:\"GMT\"}var f=(new Date).getFullYear(),g=new Date(f,0,1),k=new Date(f,6,1);f=g.getTimezoneOffset();var l=k.getTimezoneOffset();G[a>>2>>>0]=60*Math.max(f,l);G[b>>2>>>0]=Number(f!=l);a=e(g);b=e(k);a=Ra(a);b=Ra(b);l<f?(H[c>>2>>>0]=a,H[c+4>>2>>>0]=b):(H[c>>2>>>0]=b,H[c+4>>2>>>0]=a)}function Ua(a,b,c){Ua.Xc||(Ua.Xc=!0,Ta(a,b,c))}var Va={};\nfunction Wa(){if(!Xa){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ea||\"./this.program\"},b;for(b in Va)void 0===Va[b]?delete a[b]:a[b]=Va[b];var c=[];for(b in a)c.push(b+\"=\"+a[b]);Xa=c}return Xa}var Xa,Ya=[null,[],[]],V=0;function Za(a){return 0===a%4&&(0!==a%100||0===a%400)}\nvar $a=[31,29,31,30,31,30,31,31,30,31,30,31],ab=[31,28,31,30,31,30,31,31,30,31,30,31];function bb(a){var b=Array(ua(a)+1);ta(a,b,0,b.length);return b}\nfunction cb(a,b,c,e){function f(h,u,w){for(h=\"number\"==typeof h?h.toString():h||\"\";h.length<u;)h=w[0]+h;return h}function g(h,u){return f(h,u,\"0\")}function k(h,u){function w(B){return 0>B?-1:0<B?1:0}var A;0===(A=w(h.getFullYear()-u.getFullYear()))&&0===(A=w(h.getMonth()-u.getMonth()))&&(A=w(h.getDate()-u.getDate()));return A}function l(h){switch(h.getDay()){case 0:return new Date(h.getFullYear()-1,11,29);case 1:return h;case 2:return new Date(h.getFullYear(),0,3);case 3:return new Date(h.getFullYear(),\n0,2);case 4:return new Date(h.getFullYear(),0,1);case 5:return new Date(h.getFullYear()-1,11,31);case 6:return new Date(h.getFullYear()-1,11,30)}}function m(h){var u=h.Ec;for(h=new Date((new Date(h.Fc+1900,0,1)).getTime());0<u;){var w=h.getMonth(),A=(Za(h.getFullYear())?$a:ab)[w];if(u>A-h.getDate())u-=A-h.getDate()+1,h.setDate(1),11>w?h.setMonth(w+1):(h.setMonth(0),h.setFullYear(h.getFullYear()+1));else{h.setDate(h.getDate()+u);break}}w=new Date(h.getFullYear()+1,0,4);u=l(new Date(h.getFullYear(),\n0,4));w=l(w);return 0>=k(u,h)?0>=k(w,h)?h.getFullYear()+1:h.getFullYear():h.getFullYear()-1}var n=G[e+40>>2>>>0];e={bd:G[e>>2>>>0],ad:G[e+4>>2>>>0],Jc:G[e+8>>2>>>0],Nc:G[e+12>>2>>>0],Kc:G[e+16>>2>>>0],Fc:G[e+20>>2>>>0],Dc:G[e+24>>2>>>0],Ec:G[e+28>>2>>>0],dd:G[e+32>>2>>>0],$c:G[e+36>>2>>>0],cd:n?sa(n):\"\"};c=sa(c);n={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\n\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var p in n)c=c.replace(new RegExp(p,\"g\"),n[p]);var v=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),x=\"January February March April May June July August September October November December\".split(\" \");n={\"%a\":function(h){return v[h.Dc].substring(0,3)},\"%A\":function(h){return v[h.Dc]},\"%b\":function(h){return x[h.Kc].substring(0,\n3)},\"%B\":function(h){return x[h.Kc]},\"%C\":function(h){return g((h.Fc+1900)/100|0,2)},\"%d\":function(h){return g(h.Nc,2)},\"%e\":function(h){return f(h.Nc,2,\" \")},\"%g\":function(h){return m(h).toString().substring(2)},\"%G\":function(h){return m(h)},\"%H\":function(h){return g(h.Jc,2)},\"%I\":function(h){h=h.Jc;0==h?h=12:12<h&&(h-=12);return g(h,2)},\"%j\":function(h){for(var u=0,w=0;w<=h.Kc-1;u+=(Za(h.Fc+1900)?$a:ab)[w++]);return g(h.Nc+u,3)},\"%m\":function(h){return g(h.Kc+1,2)},\"%M\":function(h){return g(h.ad,\n2)},\"%n\":function(){return\"\\n\"},\"%p\":function(h){return 0<=h.Jc&&12>h.Jc?\"AM\":\"PM\"},\"%S\":function(h){return g(h.bd,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(h){return h.Dc||7},\"%U\":function(h){return g(Math.floor((h.Ec+7-h.Dc)/7),2)},\"%V\":function(h){var u=Math.floor((h.Ec+7-(h.Dc+6)%7)/7);2>=(h.Dc+371-h.Ec-2)%7&&u++;if(u)53==u&&(w=(h.Dc+371-h.Ec)%7,4==w||3==w&&Za(h.Fc)||(u=1));else{u=52;var w=(h.Dc+7-h.Ec-1)%7;(4==w||5==w&&Za(h.Fc%400-1))&&u++}return g(u,2)},\"%w\":function(h){return h.Dc},\"%W\":function(h){return g(Math.floor((h.Ec+\n7-(h.Dc+6)%7)/7),2)},\"%y\":function(h){return(h.Fc+1900).toString().substring(2)},\"%Y\":function(h){return h.Fc+1900},\"%z\":function(h){h=h.$c;var u=0<=h;h=Math.abs(h)/60;return(u?\"+\":\"-\")+String(\"0000\"+(h/60*100+h%60)).slice(-4)},\"%Z\":function(h){return h.cd},\"%%\":function(){return\"%\"}};c=c.replace(/%%/g,\"\\x00\\x00\");for(p in n)c.includes(p)&&(c=c.replace(new RegExp(p,\"g\"),n[p](e)));c=c.replace(/\\0\\0/g,\"%\");p=bb(c);if(p.length>b)return 0;D.set(p,a>>>0);return p.length-1}\nvar vc={j:function(a){return Sa(a+24)+24},p:function(a){a=new S(a);a.Rc()||(a.Lc(!0),Ma--);a.Mc(!1);La.push(a);a.Pc();return a.Sc()},sa:function(a){t(\"Unexpected exception thrown, this is not properly supported - aborting\");pa=!0;throw a;},B:function(){W(0);var a=La.pop();if(a.Zc()&&!a.Oc()){var b=a.Yc();b&&T(b)(a.Ic);Oa(a.Ic)}R=0},b:function(){var a=R;if(!a)return V=0;var b=new S(a);b.Hc(a);var c=b.Gc();if(!c)return V=0,a;for(var e=Array.prototype.slice.call(arguments),f=0;f<e.length;f++){var g=\ne[f];if(0===g||g===c)break;if(X(g,c,b.Cc+16))return V=g,a}V=c;return a},l:function(){var a=R;if(!a)return V=0;var b=new S(a);b.Hc(a);var c=b.Gc();if(!c)return V=0,a;for(var e=Array.prototype.slice.call(arguments),f=0;f<e.length;f++){var g=e[f];if(0===g||g===c)break;if(X(g,c,b.Cc+16))return V=g,a}V=c;return a},v:function(){var a=R;if(!a)return V=0;var b=new S(a);b.Hc(a);var c=b.Gc();if(!c)return V=0,a;for(var e=Array.prototype.slice.call(arguments),f=0;f<e.length;f++){var g=e[f];if(0===g||g===c)break;\nif(X(g,c,b.Cc+16))return V=g,a}V=c;return a},n:function(){var a=R;if(!a)return V=0;var b=new S(a);b.Hc(a);var c=b.Gc();if(!c)return V=0,a;for(var e=Array.prototype.slice.call(arguments),f=0;f<e.length;f++){var g=e[f];if(0===g||g===c)break;if(X(g,c,b.Cc+16))return V=g,a}V=c;return a},m:Oa,S:function(){var a=La.pop();a||z(\"no exception to throw\");var b=a.Ic;a.Oc()||(La.push(a),a.Mc(!0),a.Lc(!1),Ma++);R=b;throw b;},w:function(a,b,c){(new S(a)).Tc(b,c);R=a;Ma++;throw a;},va:function(){return Ma},f:function(a){R||\n(R=a);throw a;},U:function(){return 0},Ma:function(){},Aa:function(){},Ca:function(){},ua:function(){return 0},Ka:function(){},Ga:function(){},Ja:function(){},$:function(){},Ba:function(){},ya:function(){},La:function(){},za:function(){},eb:function(){},la:function(){z(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},pb:function(){z(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},\naa:function(){return Date.now()},Na:function(){return!0},Oa:function(a,b){a=new Date(1E3*(H[a>>>2]+4294967296*G[a+4>>>2]));G[b>>2>>>0]=a.getUTCSeconds();G[b+4>>2>>>0]=a.getUTCMinutes();G[b+8>>2>>>0]=a.getUTCHours();G[b+12>>2>>>0]=a.getUTCDate();G[b+16>>2>>>0]=a.getUTCMonth();G[b+20>>2>>>0]=a.getUTCFullYear()-1900;G[b+24>>2>>>0]=a.getUTCDay();G[b+28>>2>>>0]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0},Pa:function(a,b){a=new Date(1E3*(H[a>>>2]+4294967296*G[a+4>>>2]));G[b>>2>>>0]=\na.getSeconds();G[b+4>>2>>>0]=a.getMinutes();G[b+8>>2>>>0]=a.getHours();G[b+12>>2>>>0]=a.getDate();G[b+16>>2>>>0]=a.getMonth();G[b+20>>2>>>0]=a.getFullYear()-1900;G[b+24>>2>>>0]=a.getDay();var c=new Date(a.getFullYear(),0,1);G[b+28>>2>>>0]=(a.getTime()-c.getTime())/864E5|0;G[b+36>>2>>>0]=-(60*a.getTimezoneOffset());var e=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();c=c.getTimezoneOffset();G[b+32>>2>>>0]=(e!=c&&a.getTimezoneOffset()==Math.min(c,e))|0},Qa:function(a){var b=new Date(G[a+20>>2>>>\n0]+1900,G[a+16>>2>>>0],G[a+12>>2>>>0],G[a+8>>2>>>0],G[a+4>>2>>>0],G[a>>2>>>0],0),c=G[a+32>>2>>>0],e=b.getTimezoneOffset(),f=new Date(b.getFullYear(),0,1),g=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),k=f.getTimezoneOffset(),l=Math.min(k,g);0>c?G[a+32>>2>>>0]=Number(g!=k&&l==e):0<c!=(l==e)&&(g=Math.max(k,g),b.setTime(b.getTime()+6E4*((0<c?l:g)-e)));G[a+24>>2>>>0]=b.getDay();G[a+28>>2>>>0]=(b.getTime()-f.getTime())/864E5|0;G[a>>2>>>0]=b.getSeconds();G[a+4>>2>>>0]=b.getMinutes();G[a+8>>2>>>0]=\nb.getHours();G[a+12>>2>>>0]=b.getDate();G[a+16>>2>>>0]=b.getMonth();return b.getTime()/1E3|0},Ea:function(){return-52},Fa:function(){},Va:Ua,P:function(){z(\"\")},wa:function(){return 4294901760},V:ha?()=>{var a=process.hrtime();return 1E3*a[0]+a[1]/1E6}:()=>performance.now(),Da:function(a,b,c){C.copyWithin(a>>>0,b>>>0,b+c>>>0)},T:function(a){var b=C.length;a>>>=0;if(4294901760<a)return!1;for(var c=1;4>=c;c*=2){var e=b*(1+.2/c);e=Math.min(e,a+100663296);var f=Math;e=Math.max(a,e);f=f.min.call(f,4294901760,\ne+(65536-e%65536)%65536);a:{try{oa.grow(f-va.byteLength+65535>>>16);wa();var g=1;break a}catch(k){}g=void 0}if(g)return!0}return!1},Ha:function(a,b){var c=0;Wa().forEach(function(e,f){var g=b+c;f=H[a+4*f>>2>>>0]=g;for(g=0;g<e.length;++g)D[f++>>0>>>0]=e.charCodeAt(g);D[f>>0>>>0]=0;c+=e.length+1});return 0},Ia:function(a,b){var c=Wa();H[a>>2>>>0]=c.length;var e=0;c.forEach(function(f){e+=f.length+1});H[b>>2>>>0]=e;return 0},R:function(){return 52},_:function(){return 52},na:function(){return 70},xa:function(a,\nb,c,e){for(var f=0,g=0;g<c;g++){var k=H[b>>2>>>0],l=H[b+4>>2>>>0];b+=8;for(var m=0;m<l;m++){var n=C[k+m>>>0],p=Ya[a];0===n||10===n?((1===a?na:t)(ra(p,0)),p.length=0):p.push(n)}f+=l}H[e>>2>>>0]=f;return 0},a:function(){return V},oa:db,C:eb,x:fb,c:gb,W:hb,Q:ib,k:jb,g:kb,i:lb,o:mb,y:nb,K:ob,Z:pb,M:qb,ia:rb,kb:sb,Ra:tb,jb:ub,ma:vb,Sa:wb,Ya:xb,fa:yb,ea:zb,ib:Ab,lb:Bb,d:Cb,t:Db,h:Eb,E:Fb,e:Gb,Y:Hb,s:Ib,u:Jb,q:Kb,G:Lb,N:Mb,F:Nb,z:Ob,D:Pb,H:Qb,X:Rb,pa:Sb,J:Tb,qa:Ub,A:Vb,O:Wb,L:Xb,mb:Yb,ga:Zb,ha:$b,nb:ac,\nba:bc,ja:cc,Xa:dc,Wa:ec,ca:fc,Ta:gc,da:hc,ka:ic,Ua:jc,ob:kc,ab:lc,bb:mc,$a:nc,Za:oc,_a:pc,db:qc,fb:rc,hb:sc,cb:tc,gb:uc,r:function(a){return a},I:function(a){V=a},ra:cb,ta:function(a,b,c,e){return cb(a,b,c,e)}};\n(function(){function a(f){d.asm=f.exports;oa=d.asm.qb;wa();xa=d.asm.Ob;za.unshift(d.asm.rb);M--;d.monitorRunDependencies&&d.monitorRunDependencies(M);0==M&&(null!==Fa&&(clearInterval(Fa),Fa=null),N&&(f=N,N=null,f()))}function b(f){a(f.instance)}function c(f){return Ja().then(function(g){return WebAssembly.instantiate(g,e)}).then(function(g){return g}).then(f,function(g){t(\"failed to asynchronously prepare wasm: \"+g);z(g)})}var e={a:vc};M++;d.monitorRunDependencies&&d.monitorRunDependencies(M);if(d.instantiateWasm)try{return d.instantiateWasm(e,\na)}catch(f){return t(\"Module.instantiateWasm callback failed with error: \"+f),!1}(function(){return y||\"function\"!=typeof WebAssembly.instantiateStreaming||Ga()||Q.startsWith(\"file://\")||ha||\"function\"!=typeof fetch?c(b):fetch(Q,{credentials:\"same-origin\"}).then(function(f){return WebAssembly.instantiateStreaming(f,e).then(b,function(g){t(\"wasm streaming compile failed: \"+g);t(\"falling back to ArrayBuffer instantiation\");return c(b)})})})().catch(ca);return{}})();\nd.___wasm_call_ctors=function(){return(d.___wasm_call_ctors=d.asm.rb).apply(null,arguments)};d._OrtInit=function(){return(d._OrtInit=d.asm.sb).apply(null,arguments)};d._OrtCreateSessionOptions=function(){return(d._OrtCreateSessionOptions=d.asm.tb).apply(null,arguments)};d._OrtAppendExecutionProvider=function(){return(d._OrtAppendExecutionProvider=d.asm.ub).apply(null,arguments)};d._OrtAddSessionConfigEntry=function(){return(d._OrtAddSessionConfigEntry=d.asm.vb).apply(null,arguments)};\nd._OrtReleaseSessionOptions=function(){return(d._OrtReleaseSessionOptions=d.asm.wb).apply(null,arguments)};d._OrtCreateSession=function(){return(d._OrtCreateSession=d.asm.xb).apply(null,arguments)};d._OrtReleaseSession=function(){return(d._OrtReleaseSession=d.asm.yb).apply(null,arguments)};d._OrtGetInputCount=function(){return(d._OrtGetInputCount=d.asm.zb).apply(null,arguments)};d._OrtGetOutputCount=function(){return(d._OrtGetOutputCount=d.asm.Ab).apply(null,arguments)};\nd._OrtGetInputName=function(){return(d._OrtGetInputName=d.asm.Bb).apply(null,arguments)};d._OrtGetOutputName=function(){return(d._OrtGetOutputName=d.asm.Cb).apply(null,arguments)};d._OrtFree=function(){return(d._OrtFree=d.asm.Db).apply(null,arguments)};d._OrtCreateTensor=function(){return(d._OrtCreateTensor=d.asm.Eb).apply(null,arguments)};d._OrtGetTensorData=function(){return(d._OrtGetTensorData=d.asm.Fb).apply(null,arguments)};\nd._OrtReleaseTensor=function(){return(d._OrtReleaseTensor=d.asm.Gb).apply(null,arguments)};d._OrtCreateRunOptions=function(){return(d._OrtCreateRunOptions=d.asm.Hb).apply(null,arguments)};d._OrtAddRunConfigEntry=function(){return(d._OrtAddRunConfigEntry=d.asm.Ib).apply(null,arguments)};d._OrtReleaseRunOptions=function(){return(d._OrtReleaseRunOptions=d.asm.Jb).apply(null,arguments)};d._OrtRun=function(){return(d._OrtRun=d.asm.Kb).apply(null,arguments)};\nd._OrtEndProfiling=function(){return(d._OrtEndProfiling=d.asm.Lb).apply(null,arguments)};\nvar Sa=d._malloc=function(){return(Sa=d._malloc=d.asm.Mb).apply(null,arguments)},Pa=d._free=function(){return(Pa=d._free=d.asm.Nb).apply(null,arguments)},W=d._setThrew=function(){return(W=d._setThrew=d.asm.Pb).apply(null,arguments)},Y=d.stackSave=function(){return(Y=d.stackSave=d.asm.Qb).apply(null,arguments)},Z=d.stackRestore=function(){return(Z=d.stackRestore=d.asm.Rb).apply(null,arguments)},wc=d.stackAlloc=function(){return(wc=d.stackAlloc=d.asm.Sb).apply(null,arguments)},X=d.___cxa_can_catch=\nfunction(){return(X=d.___cxa_can_catch=d.asm.Tb).apply(null,arguments)},Na=d.___cxa_is_pointer_type=function(){return(Na=d.___cxa_is_pointer_type=d.asm.Ub).apply(null,arguments)},xc=d.dynCall_j=function(){return(xc=d.dynCall_j=d.asm.Vb).apply(null,arguments)},yc=d.dynCall_iij=function(){return(yc=d.dynCall_iij=d.asm.Wb).apply(null,arguments)},zc=d.dynCall_iiiiij=function(){return(zc=d.dynCall_iiiiij=d.asm.Xb).apply(null,arguments)},Ac=d.dynCall_vij=function(){return(Ac=d.dynCall_vij=d.asm.Yb).apply(null,\narguments)},Bc=d.dynCall_jii=function(){return(Bc=d.dynCall_jii=d.asm.Zb).apply(null,arguments)},Cc=d.dynCall_viiji=function(){return(Cc=d.dynCall_viiji=d.asm._b).apply(null,arguments)},Dc=d.dynCall_viiiij=function(){return(Dc=d.dynCall_viiiij=d.asm.$b).apply(null,arguments)},Ec=d.dynCall_viiiiij=function(){return(Ec=d.dynCall_viiiiij=d.asm.ac).apply(null,arguments)},Fc=d.dynCall_ji=function(){return(Fc=d.dynCall_ji=d.asm.bc).apply(null,arguments)},Gc=d.dynCall_viijjjiiiii=function(){return(Gc=d.dynCall_viijjjiiiii=\nd.asm.cc).apply(null,arguments)},Hc=d.dynCall_viiiji=function(){return(Hc=d.dynCall_viiiji=d.asm.dc).apply(null,arguments)},Ic=d.dynCall_vijiii=function(){return(Ic=d.dynCall_vijiii=d.asm.ec).apply(null,arguments)},Jc=d.dynCall_viiij=function(){return(Jc=d.dynCall_viiij=d.asm.fc).apply(null,arguments)},Kc=d.dynCall_viiiiiiiiiji=function(){return(Kc=d.dynCall_viiiiiiiiiji=d.asm.gc).apply(null,arguments)},Lc=d.dynCall_jjj=function(){return(Lc=d.dynCall_jjj=d.asm.hc).apply(null,arguments)},Mc=d.dynCall_iiiijjj=\nfunction(){return(Mc=d.dynCall_iiiijjj=d.asm.ic).apply(null,arguments)},Nc=d.dynCall_iiijjj=function(){return(Nc=d.dynCall_iiijjj=d.asm.jc).apply(null,arguments)},Oc=d.dynCall_jiii=function(){return(Oc=d.dynCall_jiii=d.asm.kc).apply(null,arguments)},Pc=d.dynCall_vjjjjjjffiifiiiiii=function(){return(Pc=d.dynCall_vjjjjjjffiifiiiiii=d.asm.lc).apply(null,arguments)},Qc=d.dynCall_vjjjjjjjjfffiifiiiiii=function(){return(Qc=d.dynCall_vjjjjjjjjfffiifiiiiii=d.asm.mc).apply(null,arguments)},Rc=d.dynCall_vjjjjjjfffifiiiiiii=\nfunction(){return(Rc=d.dynCall_vjjjjjjfffifiiiiiii=d.asm.nc).apply(null,arguments)},Sc=d.dynCall_vjjjjjjfffifiiiii=function(){return(Sc=d.dynCall_vjjjjjjfffifiiiii=d.asm.oc).apply(null,arguments)},Tc=d.dynCall_vjjjjjjjjfffiifiiiii=function(){return(Tc=d.dynCall_vjjjjjjjjfffiifiiiii=d.asm.pc).apply(null,arguments)},Uc=d.dynCall_vijjfffiii=function(){return(Uc=d.dynCall_vijjfffiii=d.asm.qc).apply(null,arguments)},Vc=d.dynCall_vijiiiiiiii=function(){return(Vc=d.dynCall_vijiiiiiiii=d.asm.rc).apply(null,\narguments)},Wc=d.dynCall_vijjjjjjifiiiii=function(){return(Wc=d.dynCall_vijjjjjjifiiiii=d.asm.sc).apply(null,arguments)},Xc=d.dynCall_vjjjjjiiii=function(){return(Xc=d.dynCall_vjjjjjiiii=d.asm.tc).apply(null,arguments)},Yc=d.dynCall_vjjjjfiii=function(){return(Yc=d.dynCall_vjjjjfiii=d.asm.uc).apply(null,arguments)},Zc=d.dynCall_viiijiiii=function(){return(Zc=d.dynCall_viiijiiii=d.asm.vc).apply(null,arguments)},$c=d.dynCall_viiijjjii=function(){return($c=d.dynCall_viiijjjii=d.asm.wc).apply(null,arguments)},\nad=d.dynCall_iiij=function(){return(ad=d.dynCall_iiij=d.asm.xc).apply(null,arguments)},bd=d.dynCall_viiijii=function(){return(bd=d.dynCall_viiijii=d.asm.yc).apply(null,arguments)},cd=d.dynCall_viijiiiiiiiii=function(){return(cd=d.dynCall_viijiiiiiiiii=d.asm.zc).apply(null,arguments)},dd=d.dynCall_jfi=function(){return(dd=d.dynCall_jfi=d.asm.Ac).apply(null,arguments)},ed=d.dynCall_viji=function(){return(ed=d.dynCall_viji=d.asm.Bc).apply(null,arguments)};\nfunction gb(a,b){var c=Y();try{return T(a)(b)}catch(e){Z(c);if(e!==e+0)throw e;W(1,0)}}function Db(a,b){var c=Y();try{T(a)(b)}catch(e){Z(c);if(e!==e+0)throw e;W(1,0)}}function Eb(a,b,c){var e=Y();try{T(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;W(1,0)}}function jb(a,b,c){var e=Y();try{return T(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;W(1,0)}}function kb(a,b,c,e){var f=Y();try{return T(a)(b,c,e)}catch(g){Z(f);if(g!==g+0)throw g;W(1,0)}}\nfunction nb(a,b,c,e,f,g,k){var l=Y();try{return T(a)(b,c,e,f,g,k)}catch(m){Z(l);if(m!==m+0)throw m;W(1,0)}}function Cb(a){var b=Y();try{T(a)()}catch(c){Z(b);if(c!==c+0)throw c;W(1,0)}}function mb(a,b,c,e,f,g){var k=Y();try{return T(a)(b,c,e,f,g)}catch(l){Z(k);if(l!==l+0)throw l;W(1,0)}}function lb(a,b,c,e,f){var g=Y();try{return T(a)(b,c,e,f)}catch(k){Z(g);if(k!==k+0)throw k;W(1,0)}}function Gb(a,b,c,e){var f=Y();try{T(a)(b,c,e)}catch(g){Z(f);if(g!==g+0)throw g;W(1,0)}}\nfunction Ib(a,b,c,e,f){var g=Y();try{T(a)(b,c,e,f)}catch(k){Z(g);if(k!==k+0)throw k;W(1,0)}}function fb(a){var b=Y();try{return T(a)()}catch(c){Z(b);if(c!==c+0)throw c;W(1,0)}}function Jb(a,b,c,e,f,g){var k=Y();try{T(a)(b,c,e,f,g)}catch(l){Z(k);if(l!==l+0)throw l;W(1,0)}}function Kb(a,b,c,e,f,g,k){var l=Y();try{T(a)(b,c,e,f,g,k)}catch(m){Z(l);if(m!==m+0)throw m;W(1,0)}}function Ob(a,b,c,e,f,g,k,l){var m=Y();try{T(a)(b,c,e,f,g,k,l)}catch(n){Z(m);if(n!==n+0)throw n;W(1,0)}}\nfunction ob(a,b,c,e,f,g,k,l){var m=Y();try{return T(a)(b,c,e,f,g,k,l)}catch(n){Z(m);if(n!==n+0)throw n;W(1,0)}}function Qb(a,b,c,e,f,g,k,l,m,n){var p=Y();try{T(a)(b,c,e,f,g,k,l,m,n)}catch(v){Z(p);if(v!==v+0)throw v;W(1,0)}}function Pb(a,b,c,e,f,g,k,l,m){var n=Y();try{T(a)(b,c,e,f,g,k,l,m)}catch(p){Z(n);if(p!==p+0)throw p;W(1,0)}}function pb(a,b,c,e,f,g,k,l,m,n,p){var v=Y();try{return T(a)(b,c,e,f,g,k,l,m,n,p)}catch(x){Z(v);if(x!==x+0)throw x;W(1,0)}}\nfunction Wb(a,b,c,e,f,g,k,l,m,n,p,v,x,h){var u=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v,x,h)}catch(w){Z(u);if(w!==w+0)throw w;W(1,0)}}function Hb(a,b,c,e,f){var g=Y();try{T(a)(b,c,e,f)}catch(k){Z(g);if(k!==k+0)throw k;W(1,0)}}function Rb(a,b,c,e,f,g,k,l,m,n,p,v){var x=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v)}catch(h){Z(x);if(h!==h+0)throw h;W(1,0)}}function Ub(a,b,c,e,f,g,k,l,m,n,p,v){var x=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v)}catch(h){Z(x);if(h!==h+0)throw h;W(1,0)}}\nfunction eb(a,b,c,e,f,g,k){var l=Y();try{return T(a)(b,c,e,f,g,k)}catch(m){Z(l);if(m!==m+0)throw m;W(1,0)}}function Sb(a,b,c,e,f,g,k,l,m,n,p,v,x,h){var u=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v,x,h)}catch(w){Z(u);if(w!==w+0)throw w;W(1,0)}}function Mb(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A){var B=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A)}catch(E){Z(B);if(E!==E+0)throw E;W(1,0)}}\nfunction Lb(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w){var A=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v,x,h,u,w)}catch(B){Z(A);if(B!==B+0)throw B;W(1,0)}}function Nb(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u){var w=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v,x,h,u)}catch(A){Z(w);if(A!==A+0)throw A;W(1,0)}}function Vb(a,b,c,e,f,g,k,l,m,n,p,v,x){var h=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v,x)}catch(u){Z(h);if(u!==u+0)throw u;W(1,0)}}function Fb(a,b,c,e,f){var g=Y();try{T(a)(b,c,e,f)}catch(k){Z(g);if(k!==k+0)throw k;W(1,0)}}\nfunction ib(a,b,c){var e=Y();try{return T(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;W(1,0)}}function hb(a,b,c){var e=Y();try{return T(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;W(1,0)}}function qb(a,b,c,e,f,g,k,l,m,n,p,v){var x=Y();try{return T(a)(b,c,e,f,g,k,l,m,n,p,v)}catch(h){Z(x);if(h!==h+0)throw h;W(1,0)}}function Tb(a,b,c,e,f,g,k,l,m,n,p){var v=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p)}catch(x){Z(v);if(x!==x+0)throw x;W(1,0)}}\nfunction Xb(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w){var A=Y();try{T(a)(b,c,e,f,g,k,l,m,n,p,v,x,h,u,w)}catch(B){Z(A);if(B!==B+0)throw B;W(1,0)}}function db(a,b,c){var e=Y();try{return T(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;W(1,0)}}function vb(a,b,c,e){var f=Y();try{return yc(a,b,c,e)}catch(g){Z(f);if(g!==g+0)throw g;W(1,0)}}function ic(a,b,c,e){var f=Y();try{Ac(a,b,c,e)}catch(g){Z(f);if(g!==g+0)throw g;W(1,0)}}\nfunction cc(a,b,c,e,f,g,k,l){var m=Y();try{bd(a,b,c,e,f,g,k,l)}catch(n){Z(m);if(n!==n+0)throw n;W(1,0)}}function rb(a,b,c,e,f,g,k){var l=Y();try{return zc(a,b,c,e,f,g,k)}catch(m){Z(l);if(m!==m+0)throw m;W(1,0)}}function $b(a,b,c,e,f,g,k){var l=Y();try{Dc(a,b,c,e,f,g,k)}catch(m){Z(l);if(m!==m+0)throw m;W(1,0)}}function Zb(a,b,c,e,f,g,k,l){var m=Y();try{Ec(a,b,c,e,f,g,k,l)}catch(n){Z(m);if(n!==n+0)throw n;W(1,0)}}\nfunction yb(a,b){var c=Y();try{return Fc(a,b)}catch(e){Z(c);if(e!==e+0)throw e;W(1,0)}}function zb(a,b,c){var e=Y();try{return Bc(a,b,c)}catch(f){Z(e);if(f!==f+0)throw f;W(1,0)}}function hc(a,b,c,e,f,g,k,l,m,n,p,v,x,h){var u=Y();try{Gc(a,b,c,e,f,g,k,l,m,n,p,v,x,h)}catch(w){Z(u);if(w!==w+0)throw w;W(1,0)}}function fc(a,b,c,e,f,g){var k=Y();try{Cc(a,b,c,e,f,g)}catch(l){Z(k);if(l!==l+0)throw l;W(1,0)}}\nfunction bc(a,b,c,e,f,g,k){var l=Y();try{Hc(a,b,c,e,f,g,k)}catch(m){Z(l);if(m!==m+0)throw m;W(1,0)}}function kc(a,b,c,e,f,g,k){var l=Y();try{Ic(a,b,c,e,f,g,k)}catch(m){Z(l);if(m!==m+0)throw m;W(1,0)}}function ac(a,b,c,e,f,g){var k=Y();try{Jc(a,b,c,e,f,g)}catch(l){Z(k);if(l!==l+0)throw l;W(1,0)}}function Yb(a,b,c,e,f,g,k,l,m,n,p,v,x){var h=Y();try{Kc(a,b,c,e,f,g,k,l,m,n,p,v,x)}catch(u){Z(h);if(u!==u+0)throw u;W(1,0)}}\nfunction Bb(a,b,c,e,f){var g=Y();try{return Lc(a,b,c,e,f)}catch(k){Z(g);if(k!==k+0)throw k;W(1,0)}}function sb(a,b,c,e,f,g,k,l,m,n){var p=Y();try{return Mc(a,b,c,e,f,g,k,l,m,n)}catch(v){Z(p);if(v!==v+0)throw v;W(1,0)}}function ub(a,b,c,e,f,g,k,l,m){var n=Y();try{return Nc(a,b,c,e,f,g,k,l,m)}catch(p){Z(n);if(p!==p+0)throw p;W(1,0)}}function Ab(a,b,c,e){var f=Y();try{return Oc(a,b,c,e)}catch(g){Z(f);if(g!==g+0)throw g;W(1,0)}}\nfunction sc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F,O){var L=Y();try{Pc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F,O)}catch(P){Z(L);if(P!==P+0)throw P;W(1,0)}}function uc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F,O,L,P,U,Aa,Ba){var aa=Y();try{Qc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F,O,L,P,U,Aa,Ba)}catch(Ca){Z(aa);if(Ca!==Ca+0)throw Ca;W(1,0)}}\nfunction rc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F,O,L){var P=Y();try{Rc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F,O,L)}catch(U){Z(P);if(U!==U+0)throw U;W(1,0)}}function qc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F){var O=Y();try{Sc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F)}catch(L){Z(O);if(L!==L+0)throw L;W(1,0)}}\nfunction tc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F,O,L,P,U,Aa){var Ba=Y();try{Tc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J,K,F,O,L,P,U,Aa)}catch(aa){Z(Ba);if(aa!==aa+0)throw aa;W(1,0)}}function mc(a,b,c,e,f,g,k,l,m,n,p,v){var x=Y();try{Uc(a,b,c,e,f,g,k,l,m,n,p,v)}catch(h){Z(x);if(h!==h+0)throw h;W(1,0)}}function lc(a,b,c,e,f,g,k,l,m,n,p,v){var x=Y();try{Vc(a,b,c,e,f,g,k,l,m,n,p,v)}catch(h){Z(x);if(h!==h+0)throw h;W(1,0)}}\nfunction nc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J){var K=Y();try{Wc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u,w,A,B,E,I,J)}catch(F){Z(K);if(F!==F+0)throw F;W(1,0)}}function pc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u){var w=Y();try{Xc(a,b,c,e,f,g,k,l,m,n,p,v,x,h,u)}catch(A){Z(w);if(A!==A+0)throw A;W(1,0)}}function oc(a,b,c,e,f,g,k,l,m,n,p,v,x){var h=Y();try{Yc(a,b,c,e,f,g,k,l,m,n,p,v,x)}catch(u){Z(h);if(u!==u+0)throw u;W(1,0)}}\nfunction xb(a,b,c){var e=Y();try{return dd(a,b,c)}catch(f){Z(e);if(f!==f+0)throw f;W(1,0)}}function dc(a,b,c,e,f,g,k,l,m,n){var p=Y();try{Zc(a,b,c,e,f,g,k,l,m,n)}catch(v){Z(p);if(v!==v+0)throw v;W(1,0)}}function ec(a,b,c,e,f,g,k,l,m,n,p,v){var x=Y();try{$c(a,b,c,e,f,g,k,l,m,n,p,v)}catch(h){Z(x);if(h!==h+0)throw h;W(1,0)}}function jc(a,b,c,e,f){var g=Y();try{ed(a,b,c,e,f)}catch(k){Z(g);if(k!==k+0)throw k;W(1,0)}}\nfunction gc(a,b,c,e,f,g,k,l,m,n,p,v,x,h){var u=Y();try{cd(a,b,c,e,f,g,k,l,m,n,p,v,x,h)}catch(w){Z(u);if(w!==w+0)throw w;W(1,0)}}function wb(a){var b=Y();try{return xc(a)}catch(c){Z(b);if(c!==c+0)throw c;W(1,0)}}function tb(a,b,c,e,f){var g=Y();try{return ad(a,b,c,e,f)}catch(k){Z(g);if(k!==k+0)throw k;W(1,0)}}d.UTF8ToString=sa;d.stringToUTF8=function(a,b,c){return ta(a,C,b,c)};d.lengthBytesUTF8=ua;d.stackSave=Y;d.stackRestore=Z;d.stackAlloc=wc;var fd;N=function gd(){fd||hd();fd||(N=gd)};\nfunction hd(){function a(){if(!fd&&(fd=!0,d.calledRun=!0,!pa)){Ka(za);ba(d);if(d.onRuntimeInitialized)d.onRuntimeInitialized();if(d.postRun)for(\"function\"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;){var b=d.postRun.shift();Da.unshift(b)}Ka(Da)}}if(!(0<M)){if(d.preRun)for(\"function\"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)Ea();Ka(ya);0<M||(d.setStatus?(d.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){d.setStatus(\"\")},1);a()},1)):a())}}\nif(d.preInit)for(\"function\"==typeof d.preInit&&(d.preInit=[d.preInit]);0<d.preInit.length;)d.preInit.pop()();hd();\n\n\n  return ortWasm.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasm;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return ortWasm; });\nelse if (typeof exports === 'object')\n  exports[\"ortWasm\"] = ortWasm;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(57);\n"],"names":["root","factory","exports","module","define","amd","self","backends","backendsSortedByPriority","registerBackend","name","backend","priority","init","createSessionHandler","TypeError","currentBackend","undefined","Error","i","indexOf","splice","length","push","env","constructor","this","wasm","webgl","webgpu","logLevelInternal","logLevel","value","NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP","Map","Float32Array","Uint8Array","Int8Array","Uint16Array","Int16Array","Int32Array","Float64Array","Uint32Array","NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP","isBigIntChecked","Tensor","arg0","arg1","arg2","type","data","dims","isBigInt64ArrayAvailable","BigInt64Array","from","isBigUint64ArrayAvailable","BigUint64Array","set","checkBigInt","Array","isArray","typedArrayConstructor","get","firstElementType","mappedType","size","dim","Number","isSafeInteger","RangeError","calculateSize","static","buffer","options","height","width","tensorLayout","norm","mean","bias","normMean","normBias","inputformat","bitmapFormat","outputformat","tensorFormat","stride","float32Data","step","rImagePointer","gImagePointer","bImagePointer","aImagePointer","rTensorPointer","gTensorPointer","bTensorPointer","aTensorPointer","image","isHTMLImageEle","HTMLImageElement","isImageDataEle","ImageData","isImageBitmap","ImageBitmap","isString","tensorConfig","canvas","document","createElement","pixels2DContext","getContext","resizedHeight","resizedWidth","drawImage","getImageData","bufferToTensor","Promise","resolve","reject","context","newImage","Image","crossOrigin","src","onload","img","format","tempCanvas","putImageData","toDataURL","j","R","G","B","A","fillStyle","fillRect","toImageData","channels","createImageData","reshape","InferenceSession","handler","async","feeds","fetches","isFetchesEmpty","outputNames","isFetches","arg1Keys","Object","getOwnPropertyNames","v","inputNames","results","run","returnValue","key","hasOwnProperty","call","arg3","filePathOrUint8Array","ArrayBuffer","SharedArrayBuffer","byteOffset","byteLength","backendHints","executionProviders","map","backendNames","errors","backendName","backendInfo","initialized","aborted","isInitializing","initPromise","e","err","join","resolveBackend","startProfiling","endProfiling","initTimeout","simd","proxy","numThreads","isInteger","numCpuLogicalCores","navigator","cpus","hardwareConcurrency","Math","min","ceil","initWasm","pathOrBuffer","OnnxruntimeWebAssemblySessionHandler","loadModel","wasmBackend","currentKernelId","commandEncoder","computePassEncoder","pendingDispatchNumber","profilingEnabled","currentKernelCustomData","kernelCustomData","gpu","adapter","requestAdapter","deviceDescriptor","requiredLimits","maxComputeWorkgroupStorageSize","limits","maxComputeWorkgroupsPerDimension","maxStorageBufferBindingSize","features","has","profilingMode","requiredFeatures","device","requestDevice","gpuDataManager","createGpuDataManager","programManager","ProgramManager","kernels","kernelPersistentData","onuncapturederror","ev","error","GPUValidationError","console","message","profilingQuerySet","createQuerySet","count","dispose","getCommandEncoder","createCommandEncoder","getComputePassEncoder","beginComputePass","endComputePass","end","flush","queue","submit","finish","refreshPendingBuffers","program","inputs","outputIndices","createKernelOutput","createIntermediateOutput","inputTypes","inputDatas","gpuData","programInfo","inputTensorShapes","inputGpuDataTypes","inputTensorShapesToString","d","inputGpuDataTypesToString","cacheHint","getProgramInfoUniqueKey","artifact","getArtifact","validatedOutputIndices","outputs","_","outputTensorViews","outputDatas","isTemporary","isPersistent","tensorView","dataType","temporaryData","persistentData","normalizedDispatchGroup","normalizeDispatchGroupSize","dispatchGroup","build","setArtifact","LOG_DEBUG","upload","gpuDataId","memcpy","dst","getTargetBuffer","arrayBuffer","download","alloc","create","id","free","ptr","release","createKernel","kernelId","attribute","op","WEBGPU_OP_RESOLVE_RULES","releaseKernel","delete","computeKernel","kernel","kernelEntry","attributes","TensorViewImpl","getFloat32Array","HEAP8","ShapeUtil","newDims","ComputeContextImpl","customData","contextDataOffset","heapU32","HEAPU32","dataIndex","opKernelContext","inputCount","compute","inputsOutputsMapping","mappedInputs","index","output","elementSize","getTensorElementSize","bufferSize","stack","stackSave","stackAlloc","offset","_JsepOutput","stackRestore","jsepInit","WebGpuBackend","initialize","isSourceGpu","HEAPU8","subarray","dataOffset","logLevelPrefix","LOG","msg","messageLevel","logLevelStringToEnum","level","log","Date","toISOString","args","debug","MatMulUtil","a","b","BroadcastUtil","adims","bdims","isMatMul","arank","brank","crank","max","cdims","cShapeMatMul","calcMatMulShape","aLen","bLen","shape","finalShape","inputRank","finalRank","getSizeFromDimensionRange","axis","start","rank","strides","tensorRank","axes","x","normalizeAxis","perm","slice","reverse","pad","shape1","shape2","every","PoolConvUtil","isGlobalOperator","inputDims","kernelShape","dilations","pads","isChannelLast","autoPad","adjustPadAndReturnShape","outputDims","computeShapeHelper","filterDims","inSize","dilation","padHeadIndex","padTailIndex","dkernel","floor","padNeeded","leftShape","transLeft","rightShape","transRight","biasShape","M","K","N","kDim","isValidBroadcast","MIN_CLIP","MAX_CLIP","AttributeWithCacheKeyImpl","assign","cacheKey","_cacheKey","sort","createAttributeWithCacheKey","calcNormalizedBufferSize","guid","GpuDataManagerImpl","storageCache","downloadCache","buffersForUploadingPending","buffersPending","srcArrayBuffer","srcOffset","srcLength","gpuDataCache","originalSize","gpuBufferForUploading","createBuffer","mappedAtCreation","usage","GPUBufferUsage","MAP_WRITE","COPY_SRC","getMappedRange","unmap","copyBufferToBuffer","sourceId","destinationId","sourceGpuDataCache","destinationGpuDataCache","STORAGE","COPY_DST","gpuBuffer","GpuDataType","default","cachedData","downloadData","gpuReadBuffer","MAP_READ","readDataPromise","mapAsync","GPUMapMode","READ","then","destroy","unaryOps","abs","acos","acosh","binaryOps","add","asin","asinh","atan","atanh","pool","averagePool","parseAveragePoolAttributes","clipV10","clip","conv","parseConvAttributes","cos","cosh","div","elu","parseAlphaAttributes","erf","exp","gemm","parseGemmAttributes","globalAveragePool","parseGlobalAveragePoolAttributes","globalMaxPool","parseGlobalMaxPoolAttributes","leakyRelu","matMul","maxPool","parseMaxPoolAttributes","mul","neg","pow","reciprocal","relu","sigmoid","sin","sinh","sqrt","sub","tan","tanh","thresholdedRelu","transpose","parseTransposeAttributes","typeSnippet","component","activationFnSnippet","activation","_hasPreluActivationWeights","_packed","_coordsLength","biasActivationSnippet","hasBias","createConv2DMatMulProgramInfo","metadata","outputShape","dimAOuter","dimBOuter","dimInner","sequentialAccessByThreads","isChannelsLast","inChannels","batchSize","outWidth","outHeight","outChannels","isVec4","dispatchX","dispatchY","workGroupSize","elementsPerThread","dispatch","innerElementSize","tileAOuter","tileBOuter","tileInner","fitAOuter","fitBOuter","fitInner","elementsSize","declareInputs","declareFunctions","gpuDataType","y","z","getShaderSource","utilFunctions","computeStrides","addBias","hasPreluActivationWeights","innerElementSizeX","innerElementSizeW","coordASnippet","coordResSnippet","xHeight","xWidth","row","col","readXSnippet","getXSnippet","sampleX","sampleW","getWSnippet","resType","aType","bType","conv2dCommonSnippet","makeMatMulPackedVec4Source","makeMatMulPackedSource","workPerThread","workgroupSize","transposeA","splitK","splitedDimInner","isVectorA","tileAWidth","tileAHight","rowPerThreadB","calculateResultSnippet","writeDataToSubASnippet","rowPerThreadA","colPerThreadA","matmulSnippet","readDataFromSubASnippet","createBinaryOpProgramInfoLoader","funcCall","additionalImplementation","outputDataType","isBroadcast","areEqual","outputSize","vectorize","calculatedShape","calcShape","sharedDimension","dimA","shaderHelper","dimsA","dimsB","dimsOutput","doBroadcast","typeA","typeB","typeOutput","vecSize","expressionScalar","expressionVector","scalar","vector","broadcastImpl","outputIndicesHelper","createIndicesHelper","calcOffsetImpl","offsets","idx","o2iImpl","iType","assignment","indicesVariableDeclaration","o2iCall","singleAssignment","expressionA","expressionB","mainStart","guardAgainstOutOfBoundsWorkgroupSizes","createBinaryOpProgramShader","createBinaryOpProgramInfo","WORKGROUP_SIZE","o2iSnippet","varOffset","varIndices","i2oImpl","i2oExpression","isPtr","ShaderHelperImpl","workgroupSizeX","workgroupSizeY","workgroupSizeZ","is1DimensionDispatch","createShaderHelper","createGroupedConvProgramInfoLoader","squeezeOutputShapeFunction","processBias","xShape","wShape","outputChannelsPerGroup","group","activationFunction","applyActivation","getActicationSnippet","inputStorageBuffersDeclarations","calculateOutputShape","xIndicesHelper","wIndicesHelper","createGroupedConvProgramInfo","inputShape","adjustPads","inputSpatialShape","spatialRank","dilatedKernelShape","weightTransposeAttribute","getAdjustedConvAttributes","adjustPadsBasedOnAutoPad","newAttributes","activationAttributes","parseInternalActivationAttributes","auto_pad","kernel_shape","wIsConst","w_is_const","validateInputs","concat","adjustedAttributes","conv1d","inputHeight","inputWidth","inputChannels","weightHeight","weightWidth","transposedWeight","wT","transposeProgramMetadata","createTransposeProgramInfo","convInputs","createConv2DMatMulProgramInfoLoader","conv2d","createConv2DMatMulProgramMetadata","clipMin","clipMax","activation_params","activationCacheKey","aShape","bShape","GemmUtil","getShapeOfGemmResult","transA","transB","line","calculateAlpha","alpha","calculateC","m","n","broadcastM","broadcastN","offsetC","beta","createGemmProgramInfo","createGemmProgramInfoLoader","createMatmulProgramInfoLoader","createMatmulProgramInfo","getAdjustedPoolAttributesAndOutputShape","inputShapeAsChannelFirst","hasDilations","adjustPoolAttributes","outputShapeAsChannelFirst","computePoolOutputShape","generatePoolingCode","op1","op2","kw","sw","pwStart","dimIdxW","codeW","codeH","codeHEnd","kh","sh","phStart","phEnd","dimIdxH","dimH","kernelSize","kernelStrides","stridesRank","padsRank","padCode","reduce","sum","cur","parsePoolCommonAttributes","ceilMode","ceil_mode","createAveragePoolProgramInfo","countIncludePad","count_include_pad","attr","globalPoolAttributes","storageOrder","createMaxPoolProgramInfo","storage_order","getAdjustedPerm","keys","input","permAttr","sortBasedOnPerm","getOutputShape","inputIndicesHelper","reverseFunc","permFunctionBody","createElementwiseProgramInfoLoader","datasize","expression","createElementwiseProgramShader","inputTensors","createElementwiseProgramInfo","generateClipAttributesFromInputs","repo","attributesBound","buildArtifact","writeTimestamp","setPipeline","computePipeline","entries","binding","resource","bindGroup","createBindGroup","layout","getBindGroupLayout","setBindGroup","dispatchWorkgroups","queryData","QUERY_RESOLVE","syncData","resolveQuerySet","kernelName","mappedData","startTimeU64","endTimeU64","profilingTimeBase","startTime","endTime","normalizedDispatchGroupSize","code","shaderModule","createShaderModule","createComputePipeline","entryPoint","limitPerDimension","dispatchAverage","cbrt","iterateExtraOptions","prefix","seen","forEach","toString","currentScript","initializeWebAssembly","initOrt","loggingLevel","core","getInstance","createSessionAllocate","model","createSessionFinalize","modeldata","createSession","releaseSession","sessionId","inputIndices","setRunOptions","runOptionsHandle","allocs","runOptions","logSeverityLevel","logVerbosityLevel","terminate","tagDataOffset","tag","allocWasmString","_OrtCreateRunOptions","extra","WeakSet","keyDataOffset","valueDataOffset","_OrtAddRunConfigEntry","_OrtReleaseRunOptions","_free","ortInit","path","response","fetch","promisify","readFile","modelData","inputArray","kvp","tensor","t","result","setSessionOptions","sessionOptionsHandle","sessionOptions","session","use_ort_model_bytes_directly","some","ep","enableMemPattern","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","executionMode","getExecutionMode","logIdDataOffset","logId","optimizedModelFilePathOffset","optimizedModelFilePath","_OrtCreateSessionOptions","enableCpuMemArena","enableProfiling","epName","epNameDataOffset","_OrtAppendExecutionProvider","setExecutionProviders","_OrtAddSessionConfigEntry","_OrtReleaseSessionOptions","dataLength","lengthBytesUTF8","_malloc","stringToUTF8","tensorDataTypeStringToEnum","tensorDataTypeEnumToString","typeProto","dateType","tensorTypeToTypedArrayConstructor","errorCode","_OrtInit","activeSessions","modelDataOffset","sessionHandle","_OrtCreateSession","_OrtGetInputCount","outputCount","_OrtGetOutputCount","inputNamesUTF8Encoded","outputNamesUTF8Encoded","_OrtGetInputName","UTF8ToString","_OrtGetOutputName","_OrtFree","_OrtReleaseSession","runOptionsAllocs","inputValues","inputAllocs","dataByteLength","dimsOffset","dimIndex","HEAP32","_OrtCreateTensor","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","_OrtRun","runPromise","jsepRunPromise","beforeGetTensorDataStack","tensorDataOffset","_OrtGetTensorData","tensorDataIndex","dimsLength","stringData","maxBytesToRead","_OrtReleaseTensor","profileFileName","_OrtEndProfiling","extractTransferableBuffers","tensors","buffers","ortWasmFactory","ortWasmFactoryThreaded","initializing","flags","timeout","useThreads","MessageChannel","port1","postMessage","WebAssembly","validate","isMultiThreadSupported","useSimd","isSimdSupported","wasmPaths","wasmPrefixOverride","wasmFileName","getWasmFileName","wasmPathOverride","isTimeout","tasks","setTimeout","locateFile","fileName","scriptDirectory","endsWith","what","race","PThread","terminateAllThreads","_scriptDir","ortWasm","ba","ca","ready","ia","ja","ka","fs","la","ma","da","ea","fa","window","q","importScripts","ha","process","versions","node","r","__dirname","normalize","readFileSync","c","f","argv","replace","on","inspect","location","href","substr","lastIndexOf","XMLHttpRequest","open","send","responseText","responseType","status","onerror","na","print","bind","printErr","warn","thisProgram","wasmBinary","noExitRuntime","oa","va","D","C","H","pa","qa","TextDecoder","ra","decode","g","String","fromCharCode","k","sa","ta","charCodeAt","ua","wa","HEAP16","HEAPU16","HEAPF32","HEAPF64","xa","ya","za","Da","Ea","preRun","shift","unshift","Q","Fa","onAbort","RuntimeError","Ga","startsWith","Ha","Ia","Ka","La","Ma","S","Ic","Cc","Wc","Gc","Uc","Yc","Vc","Lc","Rc","Mc","Oc","Tc","Hc","Pc","Zc","Qc","Sc","Na","Oa","Pa","Qa","T","Ra","Sa","Va","Wa","Xa","USER","LOGNAME","PATH","PWD","HOME","LANG","languages","Ya","V","Za","$a","ab","cb","h","u","w","getFullYear","getMonth","getDate","l","getDay","Ec","Fc","getTime","setDate","setMonth","setFullYear","p","bd","ad","Jc","Nc","Kc","Dc","dd","$c","cd","RegExp","split","substring","includes","bb","vc","W","pop","prototype","arguments","X","U","Aa","Ca","Ja","$","Ba","eb","pb","aa","now","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","getSeconds","getMinutes","getHours","getTimezoneOffset","setTime","Ua","Xc","toTimeString","match","Ta","P","hrtime","performance","copyWithin","grow","Y","Z","o","zc","kb","jb","yc","xc","Bc","ib","lb","E","s","F","J","O","L","mb","ga","nb","Ac","ed","ob","I","_a","db","fb","hb","gb","asm","qb","Ob","rb","monitorRunDependencies","clearInterval","instance","credentials","ok","catch","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","apply","sb","tb","ub","vb","wb","xb","yb","zb","Ab","Bb","Cb","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","fd","Mb","Nb","_setThrew","Pb","Qb","Rb","wc","Sb","___cxa_can_catch","Tb","___cxa_is_pointer_type","Ub","dynCall_j","Vb","dynCall_iij","Wb","dynCall_iiiiij","Xb","dynCall_vij","Yb","dynCall_jii","Zb","dynCall_viiji","_b","dynCall_viiiij","$b","dynCall_viiiiij","ac","dynCall_ji","bc","dynCall_viijjjiiiii","cc","dynCall_viiiji","dc","dynCall_vijiii","ec","dynCall_viiij","fc","dynCall_viiiiiiiiiji","gc","dynCall_jjj","hc","dynCall_iiiijjj","ic","dynCall_iiijjj","jc","dynCall_jiii","kc","dynCall_vjjjjjjffiifiiiiii","lc","dynCall_vjjjjjjjjfffiifiiiiii","mc","dynCall_vjjjjjjfffifiiiiiii","nc","dynCall_vjjjjjjfffifiiiii","oc","dynCall_vjjjjjjjjfffiifiiiii","pc","dynCall_vijjfffiii","qc","dynCall_vijiiiiiiii","rc","dynCall_vijjjjjjifiiiii","sc","dynCall_vjjjjjiiii","tc","dynCall_vjjjjfiii","uc","dynCall_viiijiiii","dynCall_viiijjjii","dynCall_iiij","dynCall_viiijii","dynCall_viijiiiiiiiii","dynCall_jfi","dynCall_viji","hd","calledRun","onRuntimeInitialized","postRun","setStatus","gd","preInit","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","defineProperty","enumerable","obj","prop","Symbol","toStringTag"],"sourceRoot":""}