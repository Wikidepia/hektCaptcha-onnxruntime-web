{"version":3,"file":"ort.wasm-core.min.js","mappings":"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","sources":["webpack://ort/webpack/universalModuleDefinition","webpack://ort/./lib/wasm/binding/ort-wasm.js","webpack://ort/./node_modules/onnxruntime-common/dist/lib/backend-impl.js","webpack://ort/./node_modules/onnxruntime-common/dist/lib/env.js","webpack://ort/./node_modules/onnxruntime-common/dist/lib/env-impl.js","webpack://ort/./node_modules/onnxruntime-common/dist/lib/tensor-impl.js","webpack://ort/./node_modules/onnxruntime-common/dist/lib/tensor.js","webpack://ort/./node_modules/onnxruntime-common/dist/lib/inference-session-impl.js","webpack://ort/./node_modules/onnxruntime-common/dist/lib/inference-session.js","webpack://ort/./lib/backend-wasm.ts","webpack://ort/./lib/index.ts","webpack://ort/./lib/wasm/options-utils.ts","webpack://ort/./lib/wasm/proxy-wrapper.ts","webpack://ort/./lib/wasm/run-options.ts","webpack://ort/./lib/wasm/session-handler.ts","webpack://ort/./lib/wasm/session-options.ts","webpack://ort/./lib/wasm/string-utils.ts","webpack://ort/./lib/wasm/wasm-core-impl.ts","webpack://ort/./lib/wasm/wasm-factory.ts","webpack://ort/webpack/bootstrap","webpack://ort/webpack/runtime/define property getters","webpack://ort/webpack/runtime/hasOwnProperty shorthand","webpack://ort/webpack/runtime/make namespace object","webpack://ort/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ort\"] = factory();\n\telse\n\t\troot[\"ort\"] = factory();\n})(self, () => {\nreturn ","\nvar ortWasm = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(ortWasm) {\n  ortWasm = ortWasm || {};\n\n\nvar b;b||(b=typeof ortWasm !== 'undefined' ? ortWasm : {});var k,r;b.ready=new Promise(function(a,c){k=a;r=c});var aa=Object.assign({},b),t=\"./this.program\",ba=\"object\"==typeof window,u=\"function\"==typeof importScripts,x=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,z=\"\",A,B,C,fs,D,E;\nif(x)z=u?require(\"path\").dirname(z)+\"/\":__dirname+\"/\",E=()=>{D||(fs=require(\"fs\"),D=require(\"path\"))},A=function(a,c){E();a=D.normalize(a);return fs.readFileSync(a,c?void 0:\"utf8\")},C=a=>{a=A(a,!0);a.buffer||(a=new Uint8Array(a));return a},B=(a,c,e)=>{E();a=D.normalize(a);fs.readFile(a,function(f,g){f?e(f):c(g.buffer)})},1<process.argv.length&&(t=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",function(a){throw a;}),process.on(\"unhandledRejection\",function(a){throw a;\n}),b.inspect=function(){return\"[Emscripten Module object]\"};else if(ba||u)u?z=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(z=document.currentScript.src),_scriptDir&&(z=_scriptDir),0!==z.indexOf(\"blob:\")?z=z.substr(0,z.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):z=\"\",A=a=>{var c=new XMLHttpRequest;c.open(\"GET\",a,!1);c.send(null);return c.responseText},u&&(C=a=>{var c=new XMLHttpRequest;c.open(\"GET\",a,!1);c.responseType=\"arraybuffer\";c.send(null);return new Uint8Array(c.response)}),\nB=(a,c,e)=>{var f=new XMLHttpRequest;f.open(\"GET\",a,!0);f.responseType=\"arraybuffer\";f.onload=()=>{200==f.status||0==f.status&&f.response?c(f.response):e()};f.onerror=e;f.send(null)};var ca=b.print||console.log.bind(console),F=b.printErr||console.warn.bind(console);Object.assign(b,aa);aa=null;b.thisProgram&&(t=b.thisProgram);var G;b.wasmBinary&&(G=b.wasmBinary);var noExitRuntime=b.noExitRuntime||!1;\"object\"!=typeof WebAssembly&&H(\"no native wasm support detected\");\nvar I,da=!1,ea=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction fa(a,c,e){c>>>=0;var f=c+e;for(e=c;a[e]&&!(e>=f);)++e;if(16<e-c&&a.buffer&&ea)return ea.decode(a.subarray(c,e));for(f=\"\";c<e;){var g=a[c++];if(g&128){var h=a[c++]&63;if(192==(g&224))f+=String.fromCharCode((g&31)<<6|h);else{var l=a[c++]&63;g=224==(g&240)?(g&15)<<12|h<<6|l:(g&7)<<18|h<<12|l<<6|a[c++]&63;65536>g?f+=String.fromCharCode(g):(g-=65536,f+=String.fromCharCode(55296|g>>10,56320|g&1023))}}else f+=String.fromCharCode(g)}return f}function J(a,c){return(a>>>=0)?fa(K,a,c):\"\"}\nfunction L(a,c,e,f){e>>>=0;if(!(0<f))return 0;var g=e;f=e+f-1;for(var h=0;h<a.length;++h){var l=a.charCodeAt(h);if(55296<=l&&57343>=l){var p=a.charCodeAt(++h);l=65536+((l&1023)<<10)|p&1023}if(127>=l){if(e>=f)break;c[e++>>>0]=l}else{if(2047>=l){if(e+1>=f)break;c[e++>>>0]=192|l>>6}else{if(65535>=l){if(e+2>=f)break;c[e++>>>0]=224|l>>12}else{if(e+3>=f)break;c[e++>>>0]=240|l>>18;c[e++>>>0]=128|l>>12&63}c[e++>>>0]=128|l>>6&63}c[e++>>>0]=128|l&63}}c[e>>>0]=0;return e-g}\nfunction M(a){for(var c=0,e=0;e<a.length;++e){var f=a.charCodeAt(e);127>=f?c++:2047>=f?c+=2:55296<=f&&57343>=f?(c+=4,++e):c+=3}return c}var ha,N,K,O,P;function ia(){var a=I.buffer;ha=a;b.HEAP8=N=new Int8Array(a);b.HEAP16=new Int16Array(a);b.HEAP32=O=new Int32Array(a);b.HEAPU8=K=new Uint8Array(a);b.HEAPU16=new Uint16Array(a);b.HEAPU32=P=new Uint32Array(a);b.HEAPF32=new Float32Array(a);b.HEAPF64=new Float64Array(a)}var ja=[],ka=[],la=[];function ma(){var a=b.preRun.shift();ja.unshift(a)}\nvar Q=0,R=null,S=null;function H(a){if(b.onAbort)b.onAbort(a);a=\"Aborted(\"+a+\")\";F(a);da=!0;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");r(a);throw a;}function na(){return T.startsWith(\"data:application/octet-stream;base64,\")}var T;T=\"ort-wasm.wasm\";if(!na()){var oa=T;T=b.locateFile?b.locateFile(oa,z):z+oa}function pa(){var a=T;try{if(a==T&&G)return new Uint8Array(G);if(C)return C(a);throw\"both async and sync fetching of the wasm failed\";}catch(c){H(c)}}\nfunction qa(){if(!G&&(ba||u)){if(\"function\"==typeof fetch&&!T.startsWith(\"file://\"))return fetch(T,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+T+\"'\";return a.arrayBuffer()}).catch(function(){return pa()});if(B)return new Promise(function(a,c){B(T,function(e){a(new Uint8Array(e))},c)})}return Promise.resolve().then(function(){return pa()})}function U(a){for(;0<a.length;)a.shift()(b)}function ra(a){var c=M(a)+1,e=sa(c);e&&L(a,N,e,c);return e}\nfunction ta(a,c,e){function f(w){return(w=w.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?w[1]:\"GMT\"}var g=(new Date).getFullYear(),h=new Date(g,0,1),l=new Date(g,6,1);g=h.getTimezoneOffset();var p=l.getTimezoneOffset();O[a>>2>>>0]=60*Math.max(g,p);O[c>>2>>>0]=Number(g!=p);a=f(h);c=f(l);a=ra(a);c=ra(c);p<g?(P[e>>2>>>0]=a,P[e+4>>2>>>0]=c):(P[e>>2>>>0]=c,P[e+4>>2>>>0]=a)}function V(a,c,e){V.ra||(V.ra=!0,ta(a,c,e))}var W={};\nfunction xa(){if(!X){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:t||\"./this.program\"},c;for(c in W)void 0===W[c]?delete a[c]:a[c]=W[c];var e=[];for(c in a)e.push(c+\"=\"+a[c]);X=e}return X}var X,ya=[null,[],[]];function Y(a){return 0===a%4&&(0!==a%100||0===a%400)}var za=[31,29,31,30,31,30,31,31,30,31,30,31],Aa=[31,28,31,30,31,30,31,31,30,31,30,31];\nfunction Ba(a){var c=Array(M(a)+1);L(a,c,0,c.length);return c}\nfunction Ca(a,c,e,f){function g(d,m,n){for(d=\"number\"==typeof d?d.toString():d||\"\";d.length<m;)d=n[0]+d;return d}function h(d,m){return g(d,m,\"0\")}function l(d,m){function n(ua){return 0>ua?-1:0<ua?1:0}var y;0===(y=n(d.getFullYear()-m.getFullYear()))&&0===(y=n(d.getMonth()-m.getMonth()))&&(y=n(d.getDate()-m.getDate()));return y}function p(d){switch(d.getDay()){case 0:return new Date(d.getFullYear()-1,11,29);case 1:return d;case 2:return new Date(d.getFullYear(),0,3);case 3:return new Date(d.getFullYear(),\n0,2);case 4:return new Date(d.getFullYear(),0,1);case 5:return new Date(d.getFullYear()-1,11,31);case 6:return new Date(d.getFullYear()-1,11,30)}}function w(d){var m=d.ma;for(d=new Date((new Date(d.na+1900,0,1)).getTime());0<m;){var n=d.getMonth(),y=(Y(d.getFullYear())?za:Aa)[n];if(m>y-d.getDate())m-=y-d.getDate()+1,d.setDate(1),11>n?d.setMonth(n+1):(d.setMonth(0),d.setFullYear(d.getFullYear()+1));else{d.setDate(d.getDate()+m);break}}n=new Date(d.getFullYear()+1,0,4);m=p(new Date(d.getFullYear(),\n0,4));n=p(n);return 0>=l(m,d)?0>=l(n,d)?d.getFullYear()+1:d.getFullYear():d.getFullYear()-1}var v=O[f+40>>2>>>0];f={ua:O[f>>2>>>0],ta:O[f+4>>2>>>0],oa:O[f+8>>2>>>0],qa:O[f+12>>2>>>0],pa:O[f+16>>2>>>0],na:O[f+20>>2>>>0],ia:O[f+24>>2>>>0],ma:O[f+28>>2>>>0],wa:O[f+32>>2>>>0],sa:O[f+36>>2>>>0],va:v?J(v):\"\"};e=J(e);v={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\n\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var q in v)e=e.replace(new RegExp(q,\"g\"),v[q]);var va=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),wa=\"January February March April May June July August September October November December\".split(\" \");v={\"%a\":function(d){return va[d.ia].substring(0,3)},\"%A\":function(d){return va[d.ia]},\"%b\":function(d){return wa[d.pa].substring(0,\n3)},\"%B\":function(d){return wa[d.pa]},\"%C\":function(d){return h((d.na+1900)/100|0,2)},\"%d\":function(d){return h(d.qa,2)},\"%e\":function(d){return g(d.qa,2,\" \")},\"%g\":function(d){return w(d).toString().substring(2)},\"%G\":function(d){return w(d)},\"%H\":function(d){return h(d.oa,2)},\"%I\":function(d){d=d.oa;0==d?d=12:12<d&&(d-=12);return h(d,2)},\"%j\":function(d){for(var m=0,n=0;n<=d.pa-1;m+=(Y(d.na+1900)?za:Aa)[n++]);return h(d.qa+m,3)},\"%m\":function(d){return h(d.pa+1,2)},\"%M\":function(d){return h(d.ta,\n2)},\"%n\":function(){return\"\\n\"},\"%p\":function(d){return 0<=d.oa&&12>d.oa?\"AM\":\"PM\"},\"%S\":function(d){return h(d.ua,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(d){return d.ia||7},\"%U\":function(d){return h(Math.floor((d.ma+7-d.ia)/7),2)},\"%V\":function(d){var m=Math.floor((d.ma+7-(d.ia+6)%7)/7);2>=(d.ia+371-d.ma-2)%7&&m++;if(m)53==m&&(n=(d.ia+371-d.ma)%7,4==n||3==n&&Y(d.na)||(m=1));else{m=52;var n=(d.ia+7-d.ma-1)%7;(4==n||5==n&&Y(d.na%400-1))&&m++}return h(m,2)},\"%w\":function(d){return d.ia},\"%W\":function(d){return h(Math.floor((d.ma+\n7-(d.ia+6)%7)/7),2)},\"%y\":function(d){return(d.na+1900).toString().substring(2)},\"%Y\":function(d){return d.na+1900},\"%z\":function(d){d=d.sa;var m=0<=d;d=Math.abs(d)/60;return(m?\"+\":\"-\")+String(\"0000\"+(d/60*100+d%60)).slice(-4)},\"%Z\":function(d){return d.va},\"%%\":function(){return\"%\"}};e=e.replace(/%%/g,\"\\x00\\x00\");for(q in v)e.includes(q)&&(e=e.replace(new RegExp(q,\"g\"),v[q](f)));e=e.replace(/\\0\\0/g,\"%\");q=Ba(e);if(q.length>c)return 0;N.set(q,a>>>0);return q.length-1}\nvar Da={d:function(){return 0},I:function(){},w:function(){},y:function(){},r:function(){return 0},G:function(){},B:function(){},F:function(){},h:function(){},x:function(){},t:function(){},H:function(){},v:function(){},n:function(){},u:function(){H(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},o:function(){H(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},i:function(){return Date.now()},\nJ:function(){return!0},j:function(a,c){a=new Date(1E3*(P[a>>>2]+4294967296*O[a+4>>>2]));O[c>>2>>>0]=a.getUTCSeconds();O[c+4>>2>>>0]=a.getUTCMinutes();O[c+8>>2>>>0]=a.getUTCHours();O[c+12>>2>>>0]=a.getUTCDate();O[c+16>>2>>>0]=a.getUTCMonth();O[c+20>>2>>>0]=a.getUTCFullYear()-1900;O[c+24>>2>>>0]=a.getUTCDay();O[c+28>>2>>>0]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0},k:function(a,c){a=new Date(1E3*(P[a>>>2]+4294967296*O[a+4>>>2]));O[c>>2>>>0]=a.getSeconds();O[c+4>>2>>>0]=a.getMinutes();\nO[c+8>>2>>>0]=a.getHours();O[c+12>>2>>>0]=a.getDate();O[c+16>>2>>>0]=a.getMonth();O[c+20>>2>>>0]=a.getFullYear()-1900;O[c+24>>2>>>0]=a.getDay();var e=new Date(a.getFullYear(),0,1);O[c+28>>2>>>0]=(a.getTime()-e.getTime())/864E5|0;O[c+36>>2>>>0]=-(60*a.getTimezoneOffset());var f=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();e=e.getTimezoneOffset();O[c+32>>2>>>0]=(f!=e&&a.getTimezoneOffset()==Math.min(e,f))|0},l:function(a){var c=new Date(O[a+20>>2>>>0]+1900,O[a+16>>2>>>0],O[a+12>>2>>>0],O[a+8>>\n2>>>0],O[a+4>>2>>>0],O[a>>2>>>0],0),e=O[a+32>>2>>>0],f=c.getTimezoneOffset(),g=new Date(c.getFullYear(),0,1),h=(new Date(c.getFullYear(),6,1)).getTimezoneOffset(),l=g.getTimezoneOffset(),p=Math.min(l,h);0>e?O[a+32>>2>>>0]=Number(h!=l&&p==f):0<e!=(p==f)&&(h=Math.max(l,h),c.setTime(c.getTime()+6E4*((0<e?p:h)-f)));O[a+24>>2>>>0]=c.getDay();O[a+28>>2>>>0]=(c.getTime()-g.getTime())/864E5|0;O[a>>2>>>0]=c.getSeconds();O[a+4>>2>>>0]=c.getMinutes();O[a+8>>2>>>0]=c.getHours();O[a+12>>2>>>0]=c.getDate();O[a+\n16>>2>>>0]=c.getMonth();return c.getTime()/1E3|0},z:function(){return-52},A:function(){},m:V,a:function(){H(\"\")},s:function(){return 4294901760},e:x?()=>{var a=process.hrtime();return 1E3*a[0]+a[1]/1E6}:()=>performance.now(),E:function(a,c,e){K.copyWithin(a>>>0,c>>>0,c+e>>>0)},b:function(a){var c=K.length;a>>>=0;if(4294901760<a)return!1;for(var e=1;4>=e;e*=2){var f=c*(1+.2/e);f=Math.min(f,a+100663296);var g=Math;f=Math.max(a,f);g=g.min.call(g,4294901760,f+(65536-f%65536)%65536);a:{try{I.grow(g-ha.byteLength+\n65535>>>16);ia();var h=1;break a}catch(l){}h=void 0}if(h)return!0}return!1},C:function(a,c){var e=0;xa().forEach(function(f,g){var h=c+e;g=P[a+4*g>>2>>>0]=h;for(h=0;h<f.length;++h)N[g++>>0>>>0]=f.charCodeAt(h);N[g>>0>>>0]=0;e+=f.length+1});return 0},D:function(a,c){var e=xa();P[a>>2>>>0]=e.length;var f=0;e.forEach(function(g){f+=g.length+1});P[c>>2>>>0]=f;return 0},c:function(){return 52},g:function(){return 52},p:function(){return 70},f:function(a,c,e,f){for(var g=0,h=0;h<e;h++){var l=P[c>>2>>>0],\np=P[c+4>>2>>>0];c+=8;for(var w=0;w<p;w++){var v=K[l+w>>>0],q=ya[a];0===v||10===v?((1===a?ca:F)(fa(q,0)),q.length=0):q.push(v)}g+=p}P[f>>2>>>0]=g;return 0},K:Ca,q:function(a,c,e,f){return Ca(a,c,e,f)}};\n(function(){function a(g){b.asm=g.exports;I=b.asm.L;ia();ka.unshift(b.asm.M);Q--;b.monitorRunDependencies&&b.monitorRunDependencies(Q);0==Q&&(null!==R&&(clearInterval(R),R=null),S&&(g=S,S=null,g()))}function c(g){a(g.instance)}function e(g){return qa().then(function(h){return WebAssembly.instantiate(h,f)}).then(function(h){return h}).then(g,function(h){F(\"failed to asynchronously prepare wasm: \"+h);H(h)})}var f={a:Da};Q++;b.monitorRunDependencies&&b.monitorRunDependencies(Q);if(b.instantiateWasm)try{return b.instantiateWasm(f,\na)}catch(g){return F(\"Module.instantiateWasm callback failed with error: \"+g),!1}(function(){return G||\"function\"!=typeof WebAssembly.instantiateStreaming||na()||T.startsWith(\"file://\")||x||\"function\"!=typeof fetch?e(c):fetch(T,{credentials:\"same-origin\"}).then(function(g){return WebAssembly.instantiateStreaming(g,f).then(c,function(h){F(\"wasm streaming compile failed: \"+h);F(\"falling back to ArrayBuffer instantiation\");return e(c)})})})().catch(r);return{}})();\nb.___wasm_call_ctors=function(){return(b.___wasm_call_ctors=b.asm.M).apply(null,arguments)};b._OrtInit=function(){return(b._OrtInit=b.asm.N).apply(null,arguments)};b._OrtCreateSessionOptions=function(){return(b._OrtCreateSessionOptions=b.asm.O).apply(null,arguments)};b._OrtAppendExecutionProvider=function(){return(b._OrtAppendExecutionProvider=b.asm.P).apply(null,arguments)};b._OrtAddSessionConfigEntry=function(){return(b._OrtAddSessionConfigEntry=b.asm.Q).apply(null,arguments)};\nb._OrtReleaseSessionOptions=function(){return(b._OrtReleaseSessionOptions=b.asm.R).apply(null,arguments)};b._OrtCreateSession=function(){return(b._OrtCreateSession=b.asm.S).apply(null,arguments)};b._OrtReleaseSession=function(){return(b._OrtReleaseSession=b.asm.T).apply(null,arguments)};b._OrtGetInputCount=function(){return(b._OrtGetInputCount=b.asm.U).apply(null,arguments)};b._OrtGetOutputCount=function(){return(b._OrtGetOutputCount=b.asm.V).apply(null,arguments)};\nb._OrtGetInputName=function(){return(b._OrtGetInputName=b.asm.W).apply(null,arguments)};b._OrtGetOutputName=function(){return(b._OrtGetOutputName=b.asm.X).apply(null,arguments)};b._OrtFree=function(){return(b._OrtFree=b.asm.Y).apply(null,arguments)};b._OrtCreateTensor=function(){return(b._OrtCreateTensor=b.asm.Z).apply(null,arguments)};b._OrtGetTensorData=function(){return(b._OrtGetTensorData=b.asm._).apply(null,arguments)};\nb._OrtReleaseTensor=function(){return(b._OrtReleaseTensor=b.asm.$).apply(null,arguments)};b._OrtCreateRunOptions=function(){return(b._OrtCreateRunOptions=b.asm.aa).apply(null,arguments)};b._OrtAddRunConfigEntry=function(){return(b._OrtAddRunConfigEntry=b.asm.ba).apply(null,arguments)};b._OrtReleaseRunOptions=function(){return(b._OrtReleaseRunOptions=b.asm.ca).apply(null,arguments)};b._OrtRun=function(){return(b._OrtRun=b.asm.da).apply(null,arguments)};\nb._OrtEndProfiling=function(){return(b._OrtEndProfiling=b.asm.ea).apply(null,arguments)};var sa=b._malloc=function(){return(sa=b._malloc=b.asm.fa).apply(null,arguments)};b._free=function(){return(b._free=b.asm.ga).apply(null,arguments)};b._fflush=function(){return(b._fflush=b.asm.ha).apply(null,arguments)};\nvar Ea=b.stackSave=function(){return(Ea=b.stackSave=b.asm.ja).apply(null,arguments)},Fa=b.stackRestore=function(){return(Fa=b.stackRestore=b.asm.ka).apply(null,arguments)},Ga=b.stackAlloc=function(){return(Ga=b.stackAlloc=b.asm.la).apply(null,arguments)};b.UTF8ToString=J;b.stringToUTF8=function(a,c,e){return L(a,K,c,e)};b.lengthBytesUTF8=M;b.stackSave=Ea;b.stackRestore=Fa;b.stackAlloc=Ga;var Z;S=function Ha(){Z||Ia();Z||(S=Ha)};\nfunction Ia(){function a(){if(!Z&&(Z=!0,b.calledRun=!0,!da)){U(ka);k(b);if(b.onRuntimeInitialized)b.onRuntimeInitialized();if(b.postRun)for(\"function\"==typeof b.postRun&&(b.postRun=[b.postRun]);b.postRun.length;){var c=b.postRun.shift();la.unshift(c)}U(la)}}if(!(0<Q)){if(b.preRun)for(\"function\"==typeof b.preRun&&(b.preRun=[b.preRun]);b.preRun.length;)ma();U(ja);0<Q||(b.setStatus?(b.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){b.setStatus(\"\")},1);a()},1)):a())}}\nif(b.preInit)for(\"function\"==typeof b.preInit&&(b.preInit=[b.preInit]);0<b.preInit.length;)b.preInit.pop()();Ia();\n\n\n  return ortWasm.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasm;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return ortWasm; });\nelse if (typeof exports === 'object')\n  exports[\"ortWasm\"] = ortWasm;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nconst backends = {};\nconst backendsSortedByPriority = [];\n/**\n * Register a backend.\n *\n * @param name - the name as a key to lookup as an execution provider.\n * @param backend - the backend object.\n * @param priority - an integer indicating the priority of the backend. Higher number means higher priority. if priority\n * < 0, it will be considered as a 'beta' version and will not be used as a fallback backend by default.\n *\n * @internal\n */\nexport const registerBackend = (name, backend, priority) => {\n    if (backend && typeof backend.init === 'function' && typeof backend.createSessionHandler === 'function') {\n        const currentBackend = backends[name];\n        if (currentBackend === undefined) {\n            backends[name] = { backend, priority };\n        }\n        else if (currentBackend.priority > priority) {\n            // same name is already registered with a higher priority. skip registeration.\n            return;\n        }\n        else if (currentBackend.priority === priority) {\n            if (currentBackend.backend !== backend) {\n                throw new Error(`cannot register backend \"${name}\" using priority ${priority}`);\n            }\n        }\n        if (priority >= 0) {\n            const i = backendsSortedByPriority.indexOf(name);\n            if (i !== -1) {\n                backendsSortedByPriority.splice(i, 1);\n            }\n            for (let i = 0; i < backendsSortedByPriority.length; i++) {\n                if (backends[backendsSortedByPriority[i]].priority <= priority) {\n                    backendsSortedByPriority.splice(i, 0, name);\n                    return;\n                }\n            }\n            backendsSortedByPriority.push(name);\n        }\n        return;\n    }\n    throw new TypeError('not a valid backend');\n};\n/**\n * Resolve backend by specified hints.\n *\n * @param backendHints - a list of execution provider names to lookup. If omitted use registered backends as list.\n * @returns a promise that resolves to the backend.\n *\n * @internal\n */\nexport const resolveBackend = async (backendHints) => {\n    const backendNames = backendHints.length === 0 ? backendsSortedByPriority : backendHints;\n    const errors = [];\n    for (const backendName of backendNames) {\n        const backendInfo = backends[backendName];\n        if (backendInfo) {\n            if (backendInfo.initialized) {\n                return backendInfo.backend;\n            }\n            else if (backendInfo.aborted) {\n                continue; // current backend is unavailable; try next\n            }\n            const isInitializing = !!backendInfo.initPromise;\n            try {\n                if (!isInitializing) {\n                    backendInfo.initPromise = backendInfo.backend.init();\n                }\n                await backendInfo.initPromise;\n                backendInfo.initialized = true;\n                return backendInfo.backend;\n            }\n            catch (e) {\n                if (!isInitializing) {\n                    errors.push({ name: backendName, err: e });\n                }\n                backendInfo.aborted = true;\n            }\n            finally {\n                delete backendInfo.initPromise;\n            }\n        }\n    }\n    throw new Error(`no available backend found. ERR: ${errors.map(e => `[${e.name}] ${e.err}`).join(', ')}`);\n};\n//# sourceMappingURL=backend-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { EnvImpl } from './env-impl';\n/**\n * Represent a set of flags as a global singleton.\n */\nexport const env = new EnvImpl();\n//# sourceMappingURL=env.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nexport class EnvImpl {\n    constructor() {\n        this.wasm = {};\n        this.webgl = {};\n        this.logLevelInternal = 'warning';\n    }\n    // TODO standadize the getter and setter convention in env for other fields.\n    set logLevel(value) {\n        if (value === undefined) {\n            return;\n        }\n        if (typeof value !== 'string' || ['verbose', 'info', 'warning', 'error', 'fatal'].indexOf(value) === -1) {\n            throw new Error(`Unsupported logging level: ${value}`);\n        }\n        this.logLevelInternal = value;\n    }\n    get logLevel() {\n        return this.logLevelInternal;\n    }\n}\n//# sourceMappingURL=env-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nconst isBigInt64ArrayAvailable = typeof BigInt64Array !== 'undefined' && typeof BigInt64Array.from === 'function';\nconst isBigUint64ArrayAvailable = typeof BigUint64Array !== 'undefined' && typeof BigUint64Array.from === 'function';\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP = new Map([\n    ['float32', Float32Array],\n    ['uint8', Uint8Array],\n    ['int8', Int8Array],\n    ['uint16', Uint16Array],\n    ['int16', Int16Array],\n    ['int32', Int32Array],\n    ['bool', Uint8Array],\n    ['float64', Float64Array],\n    ['uint32', Uint32Array],\n]);\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP = new Map([\n    [Float32Array, 'float32'],\n    [Uint8Array, 'uint8'],\n    [Int8Array, 'int8'],\n    [Uint16Array, 'uint16'],\n    [Int16Array, 'int16'],\n    [Int32Array, 'int32'],\n    [Float64Array, 'float64'],\n    [Uint32Array, 'uint32'],\n]);\nif (isBigInt64ArrayAvailable) {\n    NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('int64', BigInt64Array);\n    NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array, 'int64');\n}\nif (isBigUint64ArrayAvailable) {\n    NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('uint64', BigUint64Array);\n    NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array, 'uint64');\n}\n/**\n * calculate size from dims.\n *\n * @param dims the dims array. May be an illegal input.\n */\nconst calculateSize = (dims) => {\n    let size = 1;\n    for (let i = 0; i < dims.length; i++) {\n        const dim = dims[i];\n        if (typeof dim !== 'number' || !Number.isSafeInteger(dim)) {\n            throw new TypeError(`dims[${i}] must be an integer, got: ${dim}`);\n        }\n        if (dim < 0) {\n            throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${dim}`);\n        }\n        size *= dim;\n    }\n    return size;\n};\nexport class Tensor {\n    constructor(arg0, arg1, arg2) {\n        let type;\n        let data;\n        let dims;\n        // check whether arg0 is type or data\n        if (typeof arg0 === 'string') {\n            //\n            // Override: constructor(type, data, ...)\n            //\n            type = arg0;\n            dims = arg2;\n            if (arg0 === 'string') {\n                // string tensor\n                if (!Array.isArray(arg1)) {\n                    throw new TypeError('A string tensor\\'s data must be a string array.');\n                }\n                // we don't check whether every element in the array is string; this is too slow. we assume it's correct and\n                // error will be populated at inference\n                data = arg1;\n            }\n            else {\n                // numeric tensor\n                const typedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(arg0);\n                if (typedArrayConstructor === undefined) {\n                    throw new TypeError(`Unsupported tensor type: ${arg0}.`);\n                }\n                if (Array.isArray(arg1)) {\n                    // use 'as any' here because TypeScript's check on type of 'SupportedTypedArrayConstructors.from()' produces\n                    // incorrect results.\n                    // 'typedArrayConstructor' should be one of the typed array prototype objects.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = typedArrayConstructor.from(arg1);\n                }\n                else if (arg1 instanceof typedArrayConstructor) {\n                    data = arg1;\n                }\n                else {\n                    throw new TypeError(`A ${type} tensor's data must be type of ${typedArrayConstructor}`);\n                }\n            }\n        }\n        else {\n            //\n            // Override: constructor(data, ...)\n            //\n            dims = arg1;\n            if (Array.isArray(arg0)) {\n                // only boolean[] and string[] is supported\n                if (arg0.length === 0) {\n                    throw new TypeError('Tensor type cannot be inferred from an empty array.');\n                }\n                const firstElementType = typeof arg0[0];\n                if (firstElementType === 'string') {\n                    type = 'string';\n                    data = arg0;\n                }\n                else if (firstElementType === 'boolean') {\n                    type = 'bool';\n                    // 'arg0' is of type 'boolean[]'. Uint8Array.from(boolean[]) actually works, but typescript thinks this is\n                    // wrong type. We use 'as any' to make it happy.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = Uint8Array.from(arg0);\n                }\n                else {\n                    throw new TypeError(`Invalid element type of data array: ${firstElementType}.`);\n                }\n            }\n            else {\n                // get tensor type from TypedArray\n                const mappedType = NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(arg0.constructor);\n                if (mappedType === undefined) {\n                    throw new TypeError(`Unsupported type for tensor data: ${arg0.constructor}.`);\n                }\n                type = mappedType;\n                data = arg0;\n            }\n        }\n        // type and data is processed, now processing dims\n        if (dims === undefined) {\n            // assume 1-D tensor if dims omitted\n            dims = [data.length];\n        }\n        else if (!Array.isArray(dims)) {\n            throw new TypeError('A tensor\\'s dims must be a number array');\n        }\n        // perform check\n        const size = calculateSize(dims);\n        if (size !== data.length) {\n            throw new Error(`Tensor's size(${size}) does not match data length(${data.length}).`);\n        }\n        this.dims = dims;\n        this.type = type;\n        this.data = data;\n        this.size = size;\n    }\n    // #endregion\n    /**\n     * Create a new tensor object from image object\n     *\n     * @param buffer - Extracted image buffer data - assuming RGBA format\n     * @param imageFormat - input image configuration - required configurations height, width, format\n     * @param tensorFormat - output tensor configuration - Default is RGB format\n     */\n    static bufferToTensor(buffer, options) {\n        if (buffer === undefined) {\n            throw new Error('Image buffer must be defined');\n        }\n        if (options.height === undefined || options.width === undefined) {\n            throw new Error('Image height and width must be defined');\n        }\n        const { height, width } = options;\n        const norm = options.norm;\n        let normMean;\n        let normBias;\n        if (norm === undefined || norm.mean === undefined) {\n            normMean = 255;\n        }\n        else {\n            normMean = norm.mean;\n        }\n        if (norm === undefined || norm.bias === undefined) {\n            normBias = 0;\n        }\n        else {\n            normBias = norm.bias;\n        }\n        const inputformat = options.bitmapFormat !== undefined ? options.bitmapFormat : 'RGBA';\n        // default value is RGBA since imagedata and HTMLImageElement uses it\n        const outputformat = options.tensorFormat !== undefined ?\n            (options.tensorFormat !== undefined ? options.tensorFormat : 'RGB') :\n            'RGB';\n        const offset = height * width;\n        const float32Data = outputformat === 'RGBA' ? new Float32Array(offset * 4) : new Float32Array(offset * 3);\n        // Default pointer assignments\n        let step = 4, rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n        let rTensorPointer = 0, gTensorPointer = offset, bTensorPointer = offset * 2, aTensorPointer = -1;\n        // Updating the pointer assignments based on the input image format\n        if (inputformat === 'RGB') {\n            step = 3;\n            rImagePointer = 0;\n            gImagePointer = 1;\n            bImagePointer = 2;\n            aImagePointer = -1;\n        }\n        // Updating the pointer assignments based on the output tensor format\n        if (outputformat === 'RGBA') {\n            aTensorPointer = offset * 3;\n        }\n        else if (outputformat === 'RBG') {\n            rTensorPointer = 0;\n            bTensorPointer = offset;\n            gTensorPointer = offset * 2;\n        }\n        else if (outputformat === 'BGR') {\n            bTensorPointer = 0;\n            gTensorPointer = offset;\n            rTensorPointer = offset * 2;\n        }\n        for (let i = 0; i < offset; i++, rImagePointer += step, bImagePointer += step, gImagePointer += step, aImagePointer += step) {\n            float32Data[rTensorPointer++] = (buffer[rImagePointer] + normBias) / normMean;\n            float32Data[gTensorPointer++] = (buffer[gImagePointer] + normBias) / normMean;\n            float32Data[bTensorPointer++] = (buffer[bImagePointer] + normBias) / normMean;\n            if (aTensorPointer !== -1 && aImagePointer !== -1) {\n                float32Data[aTensorPointer++] = (buffer[aImagePointer] + normBias) / normMean;\n            }\n        }\n        // Float32Array -> ort.Tensor\n        const outputTensor = outputformat === 'RGBA' ? new Tensor('float32', float32Data, [1, 4, height, width]) :\n            new Tensor('float32', float32Data, [1, 3, height, width]);\n        return outputTensor;\n    }\n    static async fromImage(image, options) {\n        // checking the type of image object\n        const isHTMLImageEle = typeof (HTMLImageElement) !== 'undefined' && image instanceof HTMLImageElement;\n        const isImageDataEle = typeof (ImageData) !== 'undefined' && image instanceof ImageData;\n        const isImageBitmap = typeof (ImageBitmap) !== 'undefined' && image instanceof ImageBitmap;\n        const isURL = typeof (String) !== 'undefined' && (image instanceof String || typeof image === 'string');\n        let data;\n        let tensorConfig = {};\n        // filling and checking image configuration options\n        if (isHTMLImageEle) {\n            // HTMLImageElement - image object - format is RGBA by default\n            const canvas = document.createElement('canvas');\n            const pixels2DContext = canvas.getContext('2d');\n            if (pixels2DContext != null) {\n                let height = image.naturalHeight;\n                let width = image.naturalWidth;\n                if (options !== undefined && options.resizedHeight !== undefined && options.resizedWidth !== undefined) {\n                    height = options.resizedHeight;\n                    width = options.resizedWidth;\n                }\n                if (options !== undefined) {\n                    tensorConfig = options;\n                    if (options.tensorFormat !== undefined) {\n                        throw new Error('Image input config format must be RGBA for HTMLImageElement');\n                    }\n                    else {\n                        tensorConfig.tensorFormat = 'RGBA';\n                    }\n                    if (options.height !== undefined && options.height !== height) {\n                        throw new Error('Image input config height doesn\\'t match HTMLImageElement height');\n                    }\n                    else {\n                        tensorConfig.height = height;\n                    }\n                    if (options.width !== undefined && options.width !== width) {\n                        throw new Error('Image input config width doesn\\'t match HTMLImageElement width');\n                    }\n                    else {\n                        tensorConfig.width = width;\n                    }\n                }\n                else {\n                    tensorConfig.tensorFormat = 'RGBA';\n                    tensorConfig.height = height;\n                    tensorConfig.width = width;\n                }\n                canvas.width = width;\n                canvas.height = height;\n                pixels2DContext.drawImage(image, 0, 0, width, height);\n                data = pixels2DContext.getImageData(0, 0, width, height).data;\n            }\n            else {\n                throw new Error('Can not access image data');\n            }\n        }\n        else if (isImageDataEle) {\n            // ImageData - image object - format is RGBA by default\n            const format = 'RGBA';\n            let height;\n            let width;\n            if (options !== undefined && options.resizedWidth !== undefined && options.resizedHeight !== undefined) {\n                height = options.resizedHeight;\n                width = options.resizedWidth;\n            }\n            else {\n                height = image.height;\n                width = image.width;\n            }\n            if (options !== undefined) {\n                tensorConfig = options;\n                if (options.bitmapFormat !== undefined && options.bitmapFormat !== format) {\n                    throw new Error('Image input config format must be RGBA for ImageData');\n                }\n                else {\n                    tensorConfig.bitmapFormat = 'RGBA';\n                }\n            }\n            else {\n                tensorConfig.bitmapFormat = 'RGBA';\n            }\n            tensorConfig.height = height;\n            tensorConfig.width = width;\n            if (options !== undefined) {\n                const tempCanvas = document.createElement('canvas');\n                tempCanvas.width = width;\n                tempCanvas.height = height;\n                const pixels2DContext = tempCanvas.getContext('2d');\n                if (pixels2DContext != null) {\n                    pixels2DContext.putImageData(image, 0, 0);\n                    data = pixels2DContext.getImageData(0, 0, width, height).data;\n                }\n                else {\n                    throw new Error('Can not access image data');\n                }\n            }\n            else {\n                data = image.data;\n            }\n        }\n        else if (isImageBitmap) {\n            // ImageBitmap - image object - format must be provided by user\n            if (options === undefined) {\n                throw new Error('Please provide image config with format for Imagebitmap');\n            }\n            if (options.bitmapFormat !== undefined) {\n                throw new Error('Image input config format must be defined for ImageBitmap');\n            }\n            const pixels2DContext = document.createElement('canvas').getContext('2d');\n            if (pixels2DContext != null) {\n                const height = image.height;\n                const width = image.width;\n                pixels2DContext.drawImage(image, 0, 0, width, height);\n                data = pixels2DContext.getImageData(0, 0, width, height).data;\n                if (options !== undefined) {\n                    // using square brackets to avoid TS error - type 'never'\n                    if (options.height !== undefined && options.height !== height) {\n                        throw new Error('Image input config height doesn\\'t match ImageBitmap height');\n                    }\n                    else {\n                        tensorConfig.height = height;\n                    }\n                    // using square brackets to avoid TS error - type 'never'\n                    if (options.width !== undefined && options.width !== width) {\n                        throw new Error('Image input config width doesn\\'t match ImageBitmap width');\n                    }\n                    else {\n                        tensorConfig.width = width;\n                    }\n                }\n                else {\n                    tensorConfig.height = height;\n                    tensorConfig.width = width;\n                }\n                return Tensor.bufferToTensor(data, tensorConfig);\n            }\n            else {\n                throw new Error('Can not access image data');\n            }\n        }\n        else if (isURL) {\n            return new Promise((resolve, reject) => {\n                const canvas = document.createElement('canvas');\n                const context = canvas.getContext('2d');\n                if (!image || !context) {\n                    return reject();\n                }\n                const newImage = new Image();\n                newImage.crossOrigin = 'Anonymous';\n                newImage.src = image;\n                newImage.onload = () => {\n                    canvas.width = newImage.width;\n                    canvas.height = newImage.height;\n                    context.drawImage(newImage, 0, 0, canvas.width, canvas.height);\n                    const img = context.getImageData(0, 0, canvas.width, canvas.height);\n                    if (options !== undefined) {\n                        // using square brackets to avoid TS error - type 'never'\n                        if (options.height !== undefined && options.height !== canvas.height) {\n                            throw new Error('Image input config height doesn\\'t match ImageBitmap height');\n                        }\n                        else {\n                            tensorConfig.height = canvas.height;\n                        }\n                        // using square brackets to avoid TS error - type 'never'\n                        if (options.width !== undefined && options.width !== canvas.width) {\n                            throw new Error('Image input config width doesn\\'t match ImageBitmap width');\n                        }\n                        else {\n                            tensorConfig.width = canvas.width;\n                        }\n                    }\n                    else {\n                        tensorConfig.height = canvas.height;\n                        tensorConfig.width = canvas.width;\n                    }\n                    resolve(Tensor.bufferToTensor(img.data, tensorConfig));\n                };\n            });\n        }\n        else {\n            throw new Error('Input data provided is not supported - aborted tensor creation');\n        }\n        if (data !== undefined) {\n            return Tensor.bufferToTensor(data, tensorConfig);\n        }\n        else {\n            throw new Error('Input data provided is not supported - aborted tensor creation');\n        }\n    }\n    toImageData(options) {\n        var _a, _b;\n        const pixels2DContext = document.createElement('canvas').getContext('2d');\n        let image;\n        if (pixels2DContext != null) {\n            // Default values for height and width & format\n            const width = this.dims[3];\n            const height = this.dims[2];\n            const channels = this.dims[1];\n            const inputformat = options !== undefined ? (options.format !== undefined ? options.format : 'RGB') : 'RGB';\n            const normMean = options !== undefined ? (((_a = options.norm) === null || _a === void 0 ? void 0 : _a.mean) !== undefined ? options.norm.mean : 255) : 255;\n            const normBias = options !== undefined ? (((_b = options.norm) === null || _b === void 0 ? void 0 : _b.bias) !== undefined ? options.norm.bias : 0) : 0;\n            const offset = height * width;\n            if (options !== undefined) {\n                if (options.height !== undefined && options.height !== height) {\n                    throw new Error('Image output config height doesn\\'t match tensor height');\n                }\n                if (options.width !== undefined && options.width !== width) {\n                    throw new Error('Image output config width doesn\\'t match tensor width');\n                }\n                if (options.format !== undefined && (channels === 4 && options.format !== 'RGBA') ||\n                    (channels === 3 && (options.format !== 'RGB' && options.format !== 'BGR'))) {\n                    throw new Error('Tensor format doesn\\'t match input tensor dims');\n                }\n            }\n            // Default pointer assignments\n            const step = 4;\n            let rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n            let rTensorPointer = 0, gTensorPointer = offset, bTensorPointer = offset * 2, aTensorPointer = -1;\n            // Updating the pointer assignments based on the input image format\n            if (inputformat === 'RGBA') {\n                rTensorPointer = 0;\n                gTensorPointer = offset;\n                bTensorPointer = offset * 2;\n                aTensorPointer = offset * 3;\n            }\n            else if (inputformat === 'RGB') {\n                rTensorPointer = 0;\n                gTensorPointer = offset;\n                bTensorPointer = offset * 2;\n            }\n            else if (inputformat === 'RBG') {\n                rTensorPointer = 0;\n                bTensorPointer = offset;\n                gTensorPointer = offset * 2;\n            }\n            image = pixels2DContext.createImageData(width, height);\n            for (let i = 0; i < height * width; rImagePointer += step, gImagePointer += step, bImagePointer += step, aImagePointer += step, i++) {\n                image.data[rImagePointer] = (this.data[rTensorPointer++] - normBias) * normMean; // R value\n                image.data[gImagePointer] = (this.data[gTensorPointer++] - normBias) * normMean; // G value\n                image.data[bImagePointer] = (this.data[bTensorPointer++] - normBias) * normMean; // B value\n                image.data[aImagePointer] =\n                    aTensorPointer === -1 ? 255 : (this.data[aTensorPointer++] - normBias) * normMean; // A value\n            }\n        }\n        else {\n            throw new Error('Can not access image data');\n        }\n        return image;\n    }\n    // #endregion\n    // #region tensor utilities\n    reshape(dims) {\n        return new Tensor(this.type, this.data, dims);\n    }\n}\n//# sourceMappingURL=tensor-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { Tensor as TensorImpl } from './tensor-impl';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Tensor = TensorImpl;\n//# sourceMappingURL=tensor.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { resolveBackend } from './backend-impl';\nimport { Tensor } from './tensor';\nexport class InferenceSession {\n    constructor(handler) {\n        this.handler = handler;\n    }\n    async run(feeds, arg1, arg2) {\n        const fetches = {};\n        let options = {};\n        // check inputs\n        if (typeof feeds !== 'object' || feeds === null || feeds instanceof Tensor || Array.isArray(feeds)) {\n            throw new TypeError('\\'feeds\\' must be an object that use input names as keys and OnnxValue as corresponding values.');\n        }\n        let isFetchesEmpty = true;\n        // determine which override is being used\n        if (typeof arg1 === 'object') {\n            if (arg1 === null) {\n                throw new TypeError('Unexpected argument[1]: cannot be null.');\n            }\n            if (arg1 instanceof Tensor) {\n                throw new TypeError('\\'fetches\\' cannot be a Tensor');\n            }\n            if (Array.isArray(arg1)) {\n                if (arg1.length === 0) {\n                    throw new TypeError('\\'fetches\\' cannot be an empty array.');\n                }\n                isFetchesEmpty = false;\n                // output names\n                for (const name of arg1) {\n                    if (typeof name !== 'string') {\n                        throw new TypeError('\\'fetches\\' must be a string array or an object.');\n                    }\n                    if (this.outputNames.indexOf(name) === -1) {\n                        throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n                    }\n                    fetches[name] = null;\n                }\n                if (typeof arg2 === 'object' && arg2 !== null) {\n                    options = arg2;\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'options\\' must be an object.');\n                }\n            }\n            else {\n                // decide whether arg1 is fetches or options\n                // if any output name is present and its value is valid OnnxValue, we consider it fetches\n                let isFetches = false;\n                const arg1Keys = Object.getOwnPropertyNames(arg1);\n                for (const name of this.outputNames) {\n                    if (arg1Keys.indexOf(name) !== -1) {\n                        const v = arg1[name];\n                        if (v === null || v instanceof Tensor) {\n                            isFetches = true;\n                            isFetchesEmpty = false;\n                            fetches[name] = v;\n                        }\n                    }\n                }\n                if (isFetches) {\n                    if (typeof arg2 === 'object' && arg2 !== null) {\n                        options = arg2;\n                    }\n                    else if (typeof arg2 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else {\n                    options = arg1;\n                }\n            }\n        }\n        else if (typeof arg1 !== 'undefined') {\n            throw new TypeError('Unexpected argument[1]: must be \\'fetches\\' or \\'options\\'.');\n        }\n        // check if all inputs are in feed\n        for (const name of this.inputNames) {\n            if (typeof feeds[name] === 'undefined') {\n                throw new Error(`input '${name}' is missing in 'feeds'.`);\n            }\n        }\n        // if no fetches is specified, we use the full output names list\n        if (isFetchesEmpty) {\n            for (const name of this.outputNames) {\n                fetches[name] = null;\n            }\n        }\n        // feeds, fetches and options are prepared\n        const results = await this.handler.run(feeds, fetches, options);\n        const returnValue = {};\n        for (const key in results) {\n            if (Object.hasOwnProperty.call(results, key)) {\n                returnValue[key] = new Tensor(results[key].type, results[key].data, results[key].dims);\n            }\n        }\n        return returnValue;\n    }\n    static async create(arg0, arg1, arg2, arg3) {\n        // either load from a file or buffer\n        let filePathOrUint8Array;\n        let options = {};\n        if (typeof arg0 === 'string') {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof Uint8Array) {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof ArrayBuffer ||\n            (typeof SharedArrayBuffer !== 'undefined' && arg0 instanceof SharedArrayBuffer)) {\n            const buffer = arg0;\n            let byteOffset = 0;\n            let byteLength = arg0.byteLength;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 === 'number') {\n                byteOffset = arg1;\n                if (!Number.isSafeInteger(byteOffset)) {\n                    throw new RangeError('\\'byteOffset\\' must be an integer.');\n                }\n                if (byteOffset < 0 || byteOffset >= buffer.byteLength) {\n                    throw new RangeError(`'byteOffset' is out of range [0, ${buffer.byteLength}).`);\n                }\n                byteLength = arg0.byteLength - byteOffset;\n                if (typeof arg2 === 'number') {\n                    byteLength = arg2;\n                    if (!Number.isSafeInteger(byteLength)) {\n                        throw new RangeError('\\'byteLength\\' must be an integer.');\n                    }\n                    if (byteLength <= 0 || byteOffset + byteLength > buffer.byteLength) {\n                        throw new RangeError(`'byteLength' is out of range (0, ${buffer.byteLength - byteOffset}].`);\n                    }\n                    if (typeof arg3 === 'object' && arg3 !== null) {\n                        options = arg3;\n                    }\n                    else if (typeof arg3 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'byteLength\\' must be a number.');\n                }\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n            filePathOrUint8Array = new Uint8Array(buffer, byteOffset, byteLength);\n        }\n        else {\n            throw new TypeError('Unexpected argument[0]: must be \\'path\\' or \\'buffer\\'.');\n        }\n        // get backend hints\n        const eps = options.executionProviders || [];\n        const backendHints = eps.map(i => typeof i === 'string' ? i : i.name);\n        const backend = await resolveBackend(backendHints);\n        const handler = await backend.createSessionHandler(filePathOrUint8Array, options);\n        return new InferenceSession(handler);\n    }\n    startProfiling() {\n        this.handler.startProfiling();\n    }\n    endProfiling() {\n        this.handler.endProfiling();\n    }\n    get inputNames() {\n        return this.handler.inputNames;\n    }\n    get outputNames() {\n        return this.handler.outputNames;\n    }\n}\n//# sourceMappingURL=inference-session-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { InferenceSession as InferenceSessionImpl } from './inference-session-impl';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const InferenceSession = InferenceSessionImpl;\n//# sourceMappingURL=inference-session.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {cpus} from 'os';\n\nimport {initWasm} from './wasm/proxy-wrapper';\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initWasm();\n  }\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(pathOrBuffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow terser to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow terser remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend} from 'onnxruntime-common';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = require('./backend-wasm').wasmBackend;\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n  registerBackend('xnnpack', wasmBackend, 9);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession} from 'onnxruntime-common';\n\nimport {OrtWasmMessage, SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionAllocateCallbacks: Array<PromiseCallbacks<SerializableModeldata>> = [];\nconst createSessionFinalizeCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create_allocate':\n      if (ev.data.err) {\n        createSessionAllocateCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionAllocateCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create_finalize':\n      if (ev.data.err) {\n        createSessionFinalizeCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionFinalizeCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initWasm = async(): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, +(scriptSrc).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initOrt = async(numThreads: number, loggingLevel: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : {numThreads, loggingLevel}};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.initOrt(numThreads, loggingLevel);\n  }\n};\n\nexport const createSessionAllocate = async(model: Uint8Array): Promise<SerializableModeldata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableModeldata>((resolve, reject) => {\n      createSessionAllocateCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create_allocate', in : {model}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSessionAllocate(model);\n  }\n};\n\nexport const createSessionFinalize = async(modeldata: SerializableModeldata, options?: InferenceSession.SessionOptions):\n    Promise<SerializableSessionMetadata> => {\n      if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n        ensureWorker();\n        return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n          createSessionFinalizeCallbacks.push([resolve, reject]);\n          const message: OrtWasmMessage = {type: 'create_finalize', in : {modeldata, options}};\n          proxyWorker!.postMessage(message);\n        });\n      } else {\n        return core.createSessionFinalize(modeldata, options);\n      }\n    };\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      throw new Error('Can\\'t create run options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a run config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\nimport {promisify} from 'util';\n\nimport {SerializableModeldata} from './proxy-messages';\nimport {createSession, createSessionAllocate, createSessionFinalize, endProfiling, initOrt, releaseSession, run} from './proxy-wrapper';\n\nlet ortInit: boolean;\n\n\nconst getLogLevel = (logLevel: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n\n\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async createSessionAllocate(path: string): Promise<SerializableModeldata> {\n    // fetch model from url and move to wasm heap. The arraybufffer that held the http\n    // response is freed once we return\n    const response = await fetch(path);\n    const arrayBuffer = await response.arrayBuffer();\n    return createSessionAllocate(new Uint8Array(arrayBuffer));\n  }\n\n  async loadModel(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!ortInit) {\n      await initOrt(env.wasm.numThreads!, getLogLevel(env.logLevel!));\n      ortInit = true;\n    }\n\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof fetch === 'undefined') {\n        // node\n        const model = await promisify(readFile)(pathOrBuffer);\n        [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n      } else {\n        // browser\n        // fetch model and move to wasm heap.\n        const modelData: SerializableModeldata = await this.createSessionAllocate(pathOrBuffer);\n        // create the session\n        [this.sessionId, this.inputNames, this.outputNames] = await createSessionFinalize(modelData, options);\n      }\n    } else {\n      [this.sessionId, this.inputNames, this.outputNames] = await createSession(pathOrBuffer, options);\n    }\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      // TODO: support pre-allocated output\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputIndices.push(index);\n    });\n\n    const outputs =\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\n\n    const result: SessionHandler.ReturnType = {};\n    for (let i = 0; i < outputs.length; i++) {\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\n    }\n    return result;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n};\n\nconst setExecutionProviders =\n    (sessionOptionsHandle: number, executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n     allocs: number[]): void => {\n      for (const ep of executionProviders) {\n        let epName = typeof ep === 'string' ? ep : ep.name;\n\n        // check EP name\n        switch (epName) {\n          case 'xnnpack':\n            epName = 'XNNPACK';\n            break;\n          case 'wasm':\n          case 'cpu':\n            continue;\n          default:\n            throw new Error(`not supported EP: ${epName}`);\n        }\n\n        const epNameDataOffset = allocWasmString(epName, allocs);\n        if (getInstance()._OrtAppendExecutionProvider(sessionOptionsHandle, epNameDataOffset) !== 0) {\n          throw new Error(`Can't append execution provider: ${epName}`);\n        }\n      }\n    };\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    if (options?.graphOptimizationLevel === undefined) {\n      sessionOptions.graphOptimizationLevel = 'all';\n    }\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel!);\n\n    if (options?.enableCpuMemArena === undefined) {\n      sessionOptions.enableCpuMemArena = true;\n    }\n\n    if (options?.enableMemPattern === undefined) {\n      sessionOptions.enableMemPattern = true;\n    }\n\n    if (options?.executionMode === undefined) {\n      sessionOptions.executionMode = 'sequential';\n    }\n    const executionMode = getExecutionMode(sessionOptions.executionMode!);\n\n    let logIdDataOffset = 0;\n    if (options?.logId !== undefined) {\n      logIdDataOffset = allocWasmString(options.logId, allocs);\n    }\n\n    if (options?.logSeverityLevel === undefined) {\n      sessionOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      sessionOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.enableProfiling === undefined) {\n      sessionOptions.enableProfiling = false;\n    }\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena!, !!sessionOptions.enableMemPattern!, executionMode,\n        !!sessionOptions.enableProfiling!, 0, logIdDataOffset, sessionOptions.logSeverityLevel!,\n        sessionOptions.logVerbosityLevel!);\n    if (sessionOptionsHandle === 0) {\n      throw new Error('Can\\'t create session options');\n    }\n\n    if (options?.executionProviders) {\n      setExecutionProviders(sessionOptionsHandle, options.executionProviders, allocs);\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a session config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nexport const initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    throw new Error(`Can't initialize onnxruntime. error code = ${errorCode}`);\n  }\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\n */\ntype SessionMetadata = [number, number[], number[]];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSessionAllocate = (model: Uint8Array): [number, number] => {\n  const wasm = getInstance();\n  const modelDataOffset = wasm._malloc(model.byteLength);\n  wasm.HEAPU8.set(model, modelDataOffset);\n  return [modelDataOffset, model.byteLength];\n};\n\nexport const createSessionFinalize =\n    (modelData: SerializableModeldata, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        sessionHandle = wasm._OrtCreateSession(modelData[0], modelData[1], sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          throw new Error('Can\\'t create a session');\n        }\n      } finally {\n        wasm._free(modelData[0]);\n        wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        allocs.forEach(wasm._free);\n      }\n\n      const inputCount = wasm._OrtGetInputCount(sessionHandle);\n      const outputCount = wasm._OrtGetOutputCount(sessionHandle);\n\n      const inputNames = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNames = [];\n      const outputNamesUTF8Encoded = [];\n      for (let i = 0; i < inputCount; i++) {\n        const name = wasm._OrtGetInputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an input name');\n        }\n        inputNamesUTF8Encoded.push(name);\n        inputNames.push(wasm.UTF8ToString(name));\n      }\n      for (let i = 0; i < outputCount; i++) {\n        const name = wasm._OrtGetOutputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an output name');\n        }\n        outputNamesUTF8Encoded.push(name);\n        outputNames.push(wasm.UTF8ToString(name));\n      }\n\n      activeSessions.set(sessionHandle, [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\n      return [sessionHandle, inputNames, outputNames];\n    };\n\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const modelData: SerializableModeldata = createSessionAllocate(model);\n      return createSessionFinalize(modelData, options);\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  inputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  outputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions.delete(sessionId);\n};\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nconst enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n\nconst tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\nconst tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\nconst numericTensorTypeToTypedArray = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * perform inference run\n */\nexport const run =\n    (sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n     options: InferenceSession.RunOptions): SerializableTensor[] => {\n      const wasm = getInstance();\n      const session = activeSessions.get(sessionId);\n      if (!session) {\n        throw new Error('invalid session id');\n      }\n      const sessionHandle = session[0];\n      const inputNamesUTF8Encoded = session[1];\n      const outputNamesUTF8Encoded = session[2];\n\n      const inputCount = inputIndices.length;\n      const outputCount = outputIndices.length;\n\n      let runOptionsHandle = 0;\n      let runOptionsAllocs: number[] = [];\n\n      const inputValues: number[] = [];\n      const inputAllocs: number[] = [];\n\n      try {\n        [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n        // create input tensors\n        for (let i = 0; i < inputCount; i++) {\n          const dataType = inputs[i][0];\n          const dims = inputs[i][1];\n          const data = inputs[i][2];\n\n          let dataOffset: number;\n          let dataByteLength: number;\n\n          if (Array.isArray(data)) {\n            // string tensor\n            dataByteLength = 4 * data.length;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            let dataIndex = dataOffset / 4;\n            for (let i = 0; i < data.length; i++) {\n              if (typeof data[i] !== 'string') {\n                throw new TypeError(`tensor data at index ${i} is not a string`);\n              }\n              wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\n            }\n          } else {\n            dataByteLength = data.byteLength;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\n          }\n\n          const stack = wasm.stackSave();\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\n          try {\n            let dimIndex = dimsOffset / 4;\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n            const tensor = wasm._OrtCreateTensor(\n                tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\n            if (tensor === 0) {\n              throw new Error('Can\\'t create a tensor');\n            }\n            inputValues.push(tensor);\n          } finally {\n            wasm.stackRestore(stack);\n          }\n        }\n\n        const beforeRunStack = wasm.stackSave();\n        const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n        const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n        const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n        const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n        try {\n          let inputValuesIndex = inputValuesOffset / 4;\n          let inputNamesIndex = inputNamesOffset / 4;\n          let outputValuesIndex = outputValuesOffset / 4;\n          let outputNamesIndex = outputNamesOffset / 4;\n          for (let i = 0; i < inputCount; i++) {\n            wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\n            wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n          }\n          for (let i = 0; i < outputCount; i++) {\n            wasm.HEAPU32[outputValuesIndex++] = 0;\n            wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n          }\n\n          // support RunOptions\n          let errorCode = wasm._OrtRun(\n              sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n              outputValuesOffset, runOptionsHandle);\n\n          const output: SerializableTensor[] = [];\n\n          if (errorCode === 0) {\n            for (let i = 0; i < outputCount; i++) {\n              const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n\n              const beforeGetTensorDataStack = wasm.stackSave();\n              // stack allocate 4 pointer value\n              const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n              let type: Tensor.Type|undefined, dataOffset = 0;\n              try {\n                errorCode = wasm._OrtGetTensorData(\n                    tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n                if (errorCode !== 0) {\n                  throw new Error(`Can't access output tensor data. error code = ${errorCode}`);\n                }\n                let tensorDataIndex = tensorDataOffset / 4;\n                const dataType = wasm.HEAPU32[tensorDataIndex++];\n                dataOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n                const dims = [];\n                for (let i = 0; i < dimsLength; i++) {\n                  dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n                }\n                wasm._OrtFree(dimsOffset);\n\n                const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\n                type = tensorDataTypeEnumToString(dataType);\n                if (type === 'string') {\n                  const stringData: string[] = [];\n                  let dataIndex = dataOffset / 4;\n                  for (let i = 0; i < size; i++) {\n                    const offset = wasm.HEAPU32[dataIndex++];\n                    const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n                    stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n                  }\n                  output.push([type, dims, stringData]);\n                } else {\n                  const typedArrayConstructor = numericTensorTypeToTypedArray(type);\n                  const data = new typedArrayConstructor(size);\n                  new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                      .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n                  output.push([type, dims, data]);\n                }\n              } finally {\n                wasm.stackRestore(beforeGetTensorDataStack);\n                if (type === 'string' && dataOffset) {\n                  wasm._free(dataOffset);\n                }\n                wasm._OrtReleaseTensor(tensor);\n              }\n            }\n          }\n\n          if (errorCode === 0) {\n            return output;\n          } else {\n            throw new Error(`failed to call OrtRun(). error code = ${errorCode}.`);\n          }\n        } finally {\n          wasm.stackRestore(beforeRunStack);\n        }\n      } finally {\n        inputValues.forEach(wasm._OrtReleaseTensor);\n        inputAllocs.forEach(wasm._free);\n\n        wasm._OrtReleaseRunOptions(runOptionsHandle);\n        runOptionsAllocs.forEach(wasm._free);\n      }\n    };\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    throw new Error('Can\\'t get an profile file name');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && data.buffer) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\nimport * as path from 'path';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\nimport ortWasmFactory from './binding/ort-wasm.js';\n\nconst ortWasmFactoryThreaded: EmscriptenModuleFactory<OrtWasmModule> =\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    !BUILD_DEFS.DISABLE_WASM_THREAD ? require('./binding/ort-wasm-threaded.js') : ortWasmFactory;\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(new Uint8Array([\n      0,   97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1,   28,  0, 65, 0,\n      253, 15, 253, 12,  0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0,  0,  253, 186, 1, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPrefixOverride = typeof flags.wasmPaths === 'string' ? flags.wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(false, useThreads);\n  const wasmOverrideFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof flags.wasmPaths === 'object' ? flags.wasmPaths[wasmOverrideFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads && fileName.endsWith('.worker.js') &&\n            typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName === wasmFileName) {\n          const prefix: string = wasmPrefixOverride ?? scriptDirectory;\n          return wasmPathOverride ?? prefix + wasmOverrideFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode = `var ortWasmThreaded=(function(){var _scriptDir;return ${factory.toString()}})();`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(18);\n"],"names":["root","factory","exports","module","define","amd","self","_scriptDir","ortWasm","document","currentScript","src","undefined","b","k","r","ready","Promise","a","c","A","B","C","fs","D","E","aa","Object","assign","t","ba","window","u","importScripts","x","process","versions","node","z","__dirname","normalize","readFileSync","buffer","Uint8Array","e","readFile","f","g","argv","length","replace","slice","on","inspect","location","href","indexOf","substr","lastIndexOf","XMLHttpRequest","open","send","responseText","responseType","response","onload","status","onerror","G","ca","print","console","log","bind","F","printErr","warn","thisProgram","wasmBinary","noExitRuntime","WebAssembly","H","I","ha","N","K","O","P","da","ea","TextDecoder","fa","decode","subarray","h","String","fromCharCode","l","J","L","charCodeAt","M","ia","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","ja","ka","la","ma","preRun","shift","unshift","T","Q","R","S","onAbort","RuntimeError","na","startsWith","oa","locateFile","pa","U","ra","sa","W","xa","X","USER","LOGNAME","PATH","PWD","HOME","LANG","navigator","languages","_","push","ya","Y","za","Aa","Ca","d","m","n","toString","ua","y","getFullYear","getMonth","getDate","p","getDay","Date","w","getTime","setDate","setMonth","setFullYear","v","q","ta","qa","wa","va","RegExp","split","substring","Math","floor","abs","includes","Array","Ba","set","Da","o","i","now","j","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","getSeconds","getMinutes","getHours","getTimezoneOffset","min","Number","max","setTime","V","toTimeString","match","s","hrtime","performance","copyWithin","call","grow","byteLength","forEach","asm","monitorRunDependencies","clearInterval","instance","fetch","credentials","then","ok","arrayBuffer","catch","resolve","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","apply","arguments","_OrtInit","_OrtCreateSessionOptions","_OrtAppendExecutionProvider","_OrtAddSessionConfigEntry","_OrtReleaseSessionOptions","_OrtCreateSession","_OrtReleaseSession","_OrtGetInputCount","_OrtGetOutputCount","_OrtGetInputName","_OrtGetOutputName","_OrtFree","_OrtCreateTensor","Z","_OrtGetTensorData","_OrtReleaseTensor","$","_OrtCreateRunOptions","_OrtAddRunConfigEntry","_OrtReleaseRunOptions","_OrtRun","_OrtEndProfiling","_malloc","_free","ga","_fflush","Ea","stackSave","Fa","stackRestore","Ga","stackAlloc","Ia","calledRun","onRuntimeInitialized","postRun","setStatus","setTimeout","UTF8ToString","stringToUTF8","lengthBytesUTF8","Ha","preInit","pop","backends","backendsSortedByPriority","registerBackend","name","backend","priority","init","createSessionHandler","TypeError","currentBackend","Error","splice","env","constructor","this","wasm","webgl","logLevelInternal","logLevel","value","isBigInt64ArrayAvailable","BigInt64Array","from","isBigUint64ArrayAvailable","BigUint64Array","NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP","Map","NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP","Tensor","arg0","arg1","arg2","type","data","dims","isArray","typedArrayConstructor","get","firstElementType","mappedType","size","dim","isSafeInteger","RangeError","calculateSize","static","options","height","width","norm","normMean","normBias","mean","bias","inputformat","bitmapFormat","outputformat","tensorFormat","offset","float32Data","step","rImagePointer","gImagePointer","bImagePointer","aImagePointer","rTensorPointer","gTensorPointer","bTensorPointer","aTensorPointer","image","isHTMLImageEle","HTMLImageElement","isImageDataEle","ImageData","isImageBitmap","ImageBitmap","isURL","tensorConfig","canvas","createElement","pixels2DContext","getContext","naturalHeight","naturalWidth","resizedHeight","resizedWidth","drawImage","getImageData","bufferToTensor","reject","context","newImage","Image","crossOrigin","img","format","tempCanvas","putImageData","toImageData","_a","_b","channels","createImageData","reshape","InferenceSession","handler","async","feeds","fetches","isFetchesEmpty","outputNames","isFetches","arg1Keys","getOwnPropertyNames","inputNames","results","run","returnValue","key","hasOwnProperty","arg3","filePathOrUint8Array","ArrayBuffer","SharedArrayBuffer","byteOffset","backendHints","executionProviders","map","backendNames","errors","backendName","backendInfo","initialized","aborted","isInitializing","initPromise","err","join","resolveBackend","startProfiling","endProfiling","initTimeout","simd","proxy","numThreads","isInteger","numCpuLogicalCores","cpus","hardwareConcurrency","ceil","initWasm","pathOrBuffer","OnnxruntimeWebAssemblySessionHandler","loadModel","wasmBackend","iterateExtraOptions","prefix","seen","has","add","entries","initializeWebAssembly","initOrt","loggingLevel","core","createSessionAllocate","model","createSessionFinalize","modeldata","createSession","releaseSession","sessionId","inputIndices","inputs","outputIndices","setRunOptions","getInstance","runOptionsHandle","allocs","runOptions","logSeverityLevel","logVerbosityLevel","terminate","tagDataOffset","tag","allocWasmString","extra","WeakSet","keyDataOffset","valueDataOffset","ortInit","path","getLogLevel","promisify","modelData","inputArray","kvp","tensor","index","outputs","result","setSessionOptions","sessionOptionsHandle","sessionOptions","session","use_ort_model_bytes_directly","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","enableCpuMemArena","enableMemPattern","executionMode","getExecutionMode","logIdDataOffset","logId","enableProfiling","ep","epName","epNameDataOffset","setExecutionProviders","dataLength","dataOffset","errorCode","activeSessions","modelDataOffset","sessionHandle","inputCount","outputCount","inputNamesUTF8Encoded","outputNamesUTF8Encoded","delete","tensorDataTypeStringToEnum","tensorDataTypeEnumToString","typeProto","numericTensorTypeToTypedArray","runOptionsAllocs","inputValues","inputAllocs","dataType","dataByteLength","dataIndex","stack","dimsOffset","dimIndex","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","output","beforeGetTensorDataStack","tensorDataOffset","tensorDataIndex","dimsLength","reduce","stringData","maxBytesToRead","profileFileName","extractTransferableBuffers","tensors","buffers","ortWasmFactoryThreaded","initializing","getWasmFileName","useSimd","useThreads","flags","timeout","MessageChannel","port1","postMessage","validate","isMultiThreadSupported","isSimdSupported","wasmPrefixOverride","wasmPaths","wasmFileName","wasmOverrideFileName","wasmPathOverride","isTimeout","tasks","fileName","scriptDirectory","what","race","dispose","PThread","terminateAllThreads","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","defineProperty","enumerable","obj","prop","prototype","Symbol","toStringTag"],"sourceRoot":""}